; ModuleID = 'recog.bc'
source_filename = "recog.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.change_t = type { %struct.rtx_def*, i32, %struct.rtx_def**, %struct.rtx_def*, i8 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [14 x %struct.rtx_def**], [14 x i8], i8, i8, i8, [30 x i8], %struct.rtx_def* }
%struct.insn_data = type { i8*, %union.anon.0, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%union.anon.0 = type { i8* }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.operand_alternative = type { i8*, i32, i32, i32, i32, i8 }
%struct.peep2_insn_data = type { %struct.rtx_def*, %struct.bitmap_head_def* }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.funny_match = type { i32, i32 }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.reg_attrs = type { %union.tree_node*, i64 }
%struct.validate_replace_src_data = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.df_lr_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@volatile_ok = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !0
@reload_completed = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2018
@which_alternative = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2016
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@reload_in_progress = external dso_local local_unnamed_addr global i32, align 4
@num_changes = internal unnamed_addr global i32 0, align 4, !dbg !2040
@changes = internal unnamed_addr global %struct.change_t* null, align 8, !dbg !2022
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@flag_pic = external dso_local local_unnamed_addr global i32, align 4
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@regclass_map = external dso_local local_unnamed_addr constant [53 x i32], align 16
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str = private unnamed_addr constant [8 x i8] c"recog.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_sch_istable = external dso_local local_unnamed_addr constant [256 x i16], align 16
@ix86_isa_flags = external dso_local local_unnamed_addr global i32, align 4
@recog_data = common dso_local global %struct.recog_data zeroinitializer, align 8, !dbg !1969
@insn_data = external dso_local local_unnamed_addr constant [0 x %struct.insn_data], align 8
@recog_op_alt = common dso_local global [30 x [30 x %struct.operand_alternative]] zeroinitializer, align 16, !dbg !1997
@reg_class_subunion = external dso_local local_unnamed_addr global [27 x [27 x i32]], align 16
@reg_class_contents = external dso_local local_unnamed_addr global [27 x i64], align 16
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@peep2_current_count = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2036
@peep2_current = internal unnamed_addr global i32 0, align 4, !dbg !2034
@peep2_insn_data = internal unnamed_addr global [5 x %struct.peep2_insn_data] zeroinitializer, align 16, !dbg !2024
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@peep2_find_free_register.search_ofs = internal unnamed_addr global i32 0, align 4, !dbg !1907
@reg_alloc_order = external dso_local local_unnamed_addr global [53 x i32], align 16
@fixed_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@global_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@call_used_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@.str.3 = private unnamed_addr constant [10 x i8] c"peephole2\00", align 1
@pass_peephole2 = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i8 ()* @gate_handle_peephole2, i32 ()* @rest_of_handle_peephole2, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 156, i32 0, i32 0, i32 0, i32 0, i32 132097 } }, align 8, !dbg !1931
@.str.4 = private unnamed_addr constant [7 x i8] c"split1\00", align 1
@pass_split_all_insns = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i8 ()* null, i32 ()* @rest_of_handle_split_all_insns, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !1959
@.str.5 = private unnamed_addr constant [7 x i8] c"split2\00", align 1
@pass_split_after_reload = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), i8 ()* null, i32 ()* @rest_of_handle_split_after_reload, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !1961
@.str.6 = private unnamed_addr constant [7 x i8] c"split3\00", align 1
@pass_split_before_regstack = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i8 ()* @gate_handle_split_before_regstack, i32 ()* @rest_of_handle_split_before_regstack, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !1963
@.str.7 = private unnamed_addr constant [7 x i8] c"split4\00", align 1
@pass_split_before_sched2 = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i8 ()* @gate_handle_split_before_sched2, i32 ()* @rest_of_handle_split_before_sched2, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9 } }, align 8, !dbg !1965
@.str.8 = private unnamed_addr constant [7 x i8] c"split5\00", align 1
@pass_split_for_shorten_branches = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i8 ()* @gate_do_final_split, i32 ()* @split_all_insns_noflow, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1025 } }, align 8, !dbg !1967
@epilogue_completed = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2020
@changes_allocated = internal unnamed_addr global i32 0, align 4, !dbg !2038
@rtx_format = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@rtx_length = external dso_local local_unnamed_addr constant [139 x i8], align 16
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@optimize = external dso_local local_unnamed_addr global i32, align 4
@flag_peephole2 = external dso_local local_unnamed_addr global i32, align 4
@reg_obstack = external dso_local global %struct.bitmap_obstack, align 8
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@.str.9 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@flag_schedule_insns_after_reload = external dso_local local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2046 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2059, metadata !DIExpression()), !dbg !2061
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2060, metadata !DIExpression()), !dbg !2061
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2062
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2063
  ret i32 %call, !dbg !2064
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2065 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2069
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2070
  ret i32 %call, !dbg !2071
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2072 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2126, metadata !DIExpression()), !dbg !2127
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2128
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2128
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2128
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2128
  %cmp = icmp uge i8* %0, %1, !dbg !2128
  %conv1 = zext i1 %cmp to i64, !dbg !2128
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2128
  %tobool = icmp eq i64 %expval, 0, !dbg !2128
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2128

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2128
  br label %cond.end, !dbg !2128

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2128
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2128
  %2 = load i8, i8* %0, align 1, !dbg !2128
  %conv3 = zext i8 %2 to i32, !dbg !2128
  br label %cond.end, !dbg !2128

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2128
  ret i32 %cond, !dbg !2129
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2130 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2132, metadata !DIExpression()), !dbg !2133
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2134
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2134
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2134
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2134
  %cmp = icmp uge i8* %0, %1, !dbg !2134
  %conv1 = zext i1 %cmp to i64, !dbg !2134
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2134
  %tobool = icmp eq i64 %expval, 0, !dbg !2134
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2134

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2134
  br label %cond.end, !dbg !2134

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2134
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2134
  %2 = load i8, i8* %0, align 1, !dbg !2134
  %conv3 = zext i8 %2 to i32, !dbg !2134
  br label %cond.end, !dbg !2134

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2134
  ret i32 %cond, !dbg !2135
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2136 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2137
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2137
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2137
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2137
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2137
  %cmp = icmp uge i8* %1, %2, !dbg !2137
  %conv1 = zext i1 %cmp to i64, !dbg !2137
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2137
  %tobool = icmp eq i64 %expval, 0, !dbg !2137
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2137

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2137
  br label %cond.end, !dbg !2137

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2137
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2137
  %3 = load i8, i8* %1, align 1, !dbg !2137
  %conv3 = zext i8 %3 to i32, !dbg !2137
  br label %cond.end, !dbg !2137

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2137
  ret i32 %cond, !dbg !2138
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2139 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2143, metadata !DIExpression()), !dbg !2144
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2145
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2146
  ret i32 %call, !dbg !2147
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2148 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2152, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2153, metadata !DIExpression()), !dbg !2154
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2155
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2155
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2155
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2155
  %cmp = icmp uge i8* %0, %1, !dbg !2155
  %conv1 = zext i1 %cmp to i64, !dbg !2155
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2155
  %tobool = icmp eq i64 %expval, 0, !dbg !2155
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2155

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2155
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2155
  br label %cond.end, !dbg !2155

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2155
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2155
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2155
  store i8 %conv2, i8* %0, align 1, !dbg !2155
  %conv6 = and i32 %__c, 255, !dbg !2155
  br label %cond.end, !dbg !2155

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2155
  ret i32 %cond, !dbg !2156
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2157 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2159, metadata !DIExpression()), !dbg !2161
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2160, metadata !DIExpression()), !dbg !2161
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2162
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2162
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2162
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2162
  %cmp = icmp uge i8* %0, %1, !dbg !2162
  %conv1 = zext i1 %cmp to i64, !dbg !2162
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2162
  %tobool = icmp eq i64 %expval, 0, !dbg !2162
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2162

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2162
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2162
  br label %cond.end, !dbg !2162

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2162
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2162
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2162
  store i8 %conv2, i8* %0, align 1, !dbg !2162
  %conv6 = and i32 %__c, 255, !dbg !2162
  br label %cond.end, !dbg !2162

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2162
  ret i32 %cond, !dbg !2163
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2164 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2166, metadata !DIExpression()), !dbg !2167
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2168
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2168
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2168
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2168
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2168
  %cmp = icmp uge i8* %1, %2, !dbg !2168
  %conv1 = zext i1 %cmp to i64, !dbg !2168
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2168
  %tobool = icmp eq i64 %expval, 0, !dbg !2168
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2168

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2168
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2168
  br label %cond.end, !dbg !2168

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2168
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2168
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2168
  store i8 %conv4, i8* %1, align 1, !dbg !2168
  %conv6 = and i32 %__c, 255, !dbg !2168
  br label %cond.end, !dbg !2168

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2168
  ret i32 %cond, !dbg !2169
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2170 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2176, metadata !DIExpression()), !dbg !2179
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2177, metadata !DIExpression()), !dbg !2179
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2178, metadata !DIExpression()), !dbg !2179
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2180
  ret i64 %call, !dbg !2181
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2182 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2184, metadata !DIExpression()), !dbg !2185
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2186
  %0 = load i32, i32* %_flags, align 8, !dbg !2186
  %and = lshr i32 %0, 4, !dbg !2186
  %and.lobit = and i32 %and, 1, !dbg !2186
  ret i32 %and.lobit, !dbg !2187
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2188 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2190, metadata !DIExpression()), !dbg !2191
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2192
  %0 = load i32, i32* %_flags, align 8, !dbg !2192
  %and = lshr i32 %0, 5, !dbg !2192
  %and.lobit = and i32 %and, 1, !dbg !2192
  ret i32 %and.lobit, !dbg !2193
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2194 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2197, metadata !DIExpression()), !dbg !2198
  %__c.off = add i32 %__c, 128, !dbg !2199
  %0 = icmp ult i32 %__c.off, 384, !dbg !2199
  br i1 %0, label %cond.true, label %cond.end, !dbg !2199

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2200
  %1 = load i32*, i32** %call, align 8, !dbg !2201
  %idxprom = sext i32 %__c to i64, !dbg !2202
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2202
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2202
  br label %cond.end, !dbg !2203

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2203
  ret i32 %cond, !dbg !2204
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2205 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2207, metadata !DIExpression()), !dbg !2208
  %__c.off = add i32 %__c, 128, !dbg !2209
  %0 = icmp ult i32 %__c.off, 384, !dbg !2209
  br i1 %0, label %cond.true, label %cond.end, !dbg !2209

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2210
  %1 = load i32*, i32** %call, align 8, !dbg !2211
  %idxprom = sext i32 %__c to i64, !dbg !2212
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2212
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2212
  br label %cond.end, !dbg !2213

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2213
  ret i32 %cond, !dbg !2214
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2215 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2220, metadata !DIExpression()), !dbg !2221
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2222
  %conv = trunc i64 %call to i32, !dbg !2223
  ret i32 %conv, !dbg !2224
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2225 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2229, metadata !DIExpression()), !dbg !2230
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2231
  ret i64 %call, !dbg !2232
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2233 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2238, metadata !DIExpression()), !dbg !2239
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2240
  ret i64 %call, !dbg !2241
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2242 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2248, metadata !DIExpression()), !dbg !2258
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2249, metadata !DIExpression()), !dbg !2258
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2250, metadata !DIExpression()), !dbg !2258
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2251, metadata !DIExpression()), !dbg !2258
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2252, metadata !DIExpression()), !dbg !2258
  call void @llvm.dbg.value(metadata i64 0, metadata !2253, metadata !DIExpression()), !dbg !2258
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2254, metadata !DIExpression()), !dbg !2258
  br label %while.cond, !dbg !2259

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2260
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2258
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2254, metadata !DIExpression()), !dbg !2258
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2253, metadata !DIExpression()), !dbg !2258
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2261
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2259

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2262
  %div = lshr i64 %add, 1, !dbg !2264
  call void @llvm.dbg.value(metadata i64 %div, metadata !2255, metadata !DIExpression()), !dbg !2258
  %mul = mul i64 %div, %__size, !dbg !2265
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2266
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2256, metadata !DIExpression()), !dbg !2258
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2267
  call void @llvm.dbg.value(metadata i32 %call, metadata !2257, metadata !DIExpression()), !dbg !2258
  %cmp1 = icmp slt i32 %call, 0, !dbg !2268
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2270

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2271
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2273

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2274
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2253, metadata !DIExpression()), !dbg !2258
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2258
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2258
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2254, metadata !DIExpression()), !dbg !2258
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2253, metadata !DIExpression()), !dbg !2258
  br label %while.cond, !dbg !2259, !llvm.loop !2275

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2258
  ret i8* %retval.0, !dbg !2277
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2278 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2284, metadata !DIExpression()), !dbg !2285
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2286
  ret double %call, !dbg !2287
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2288 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2297, metadata !DIExpression()), !dbg !2300
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2298, metadata !DIExpression()), !dbg !2300
  call void @llvm.dbg.value(metadata i32 %base, metadata !2299, metadata !DIExpression()), !dbg !2300
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2301
  ret i64 %call, !dbg !2302
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2303 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2309, metadata !DIExpression()), !dbg !2312
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2310, metadata !DIExpression()), !dbg !2312
  call void @llvm.dbg.value(metadata i32 %base, metadata !2311, metadata !DIExpression()), !dbg !2312
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2313
  ret i64 %call, !dbg !2314
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2315 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2326, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2327, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.value(metadata i32 %base, metadata !2328, metadata !DIExpression()), !dbg !2329
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2330
  ret i64 %call, !dbg !2331
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2332 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2336, metadata !DIExpression()), !dbg !2339
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2337, metadata !DIExpression()), !dbg !2339
  call void @llvm.dbg.value(metadata i32 %base, metadata !2338, metadata !DIExpression()), !dbg !2339
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2340
  ret i64 %call, !dbg !2341
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2342 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2382, metadata !DIExpression()), !dbg !2384
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2383, metadata !DIExpression()), !dbg !2384
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2385
  ret i32 %call, !dbg !2386
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2387 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2389, metadata !DIExpression()), !dbg !2391
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2390, metadata !DIExpression()), !dbg !2391
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2392
  ret i32 %call, !dbg !2393
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2394 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2398, metadata !DIExpression()), !dbg !2400
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2399, metadata !DIExpression()), !dbg !2400
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2401
  ret i32 %call, !dbg !2402
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2403 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2407, metadata !DIExpression()), !dbg !2411
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2408, metadata !DIExpression()), !dbg !2411
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2409, metadata !DIExpression()), !dbg !2411
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2410, metadata !DIExpression()), !dbg !2411
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2412
  ret i32 %call, !dbg !2413
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2414 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2418, metadata !DIExpression()), !dbg !2421
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2419, metadata !DIExpression()), !dbg !2421
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2420, metadata !DIExpression()), !dbg !2421
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2420, metadata !DIExpression(DW_OP_deref)), !dbg !2421
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2422
  ret i32 %call, !dbg !2423
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2424 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2428, metadata !DIExpression()), !dbg !2432
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2429, metadata !DIExpression()), !dbg !2432
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2430, metadata !DIExpression()), !dbg !2432
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2431, metadata !DIExpression()), !dbg !2432
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2431, metadata !DIExpression(DW_OP_deref)), !dbg !2432
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2433
  ret i32 %call, !dbg !2434
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2435 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2459, metadata !DIExpression()), !dbg !2461
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2460, metadata !DIExpression()), !dbg !2461
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2462
  ret i32 %call, !dbg !2463
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2464 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2466, metadata !DIExpression()), !dbg !2468
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2467, metadata !DIExpression()), !dbg !2468
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2469
  ret i32 %call, !dbg !2470
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2471 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2475, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2476, metadata !DIExpression()), !dbg !2477
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2478
  ret i32 %call, !dbg !2479
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2480 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2484, metadata !DIExpression()), !dbg !2488
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2485, metadata !DIExpression()), !dbg !2488
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2486, metadata !DIExpression()), !dbg !2488
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2487, metadata !DIExpression()), !dbg !2488
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2489
  ret i32 %call, !dbg !2490
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @init_recog_no_volatile() local_unnamed_addr #5 !dbg !2491 {
entry:
  store i32 0, i32* @volatile_ok, align 4, !dbg !2494
  ret void, !dbg !2495
}

; Function Attrs: nounwind uwtable
define dso_local void @init_recog() local_unnamed_addr #5 !dbg !2496 {
entry:
  store i32 1, i32* @volatile_ok, align 4, !dbg !2497
  ret void, !dbg !2498
}

; Function Attrs: nounwind uwtable
define dso_local i32 @check_asm_operands(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !2499 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2503, metadata !DIExpression()), !dbg !2512
  %0 = load i32, i32* @reload_completed, align 4, !dbg !2513
  %tobool = icmp eq i32 %0, 0, !dbg !2513
  br i1 %tobool, label %if.end, label %if.then, !dbg !2515

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @make_insn_raw(%struct.rtx_def* %x) #6, !dbg !2516
  tail call void @extract_insn(%struct.rtx_def* %call) #7, !dbg !2518
  %call1 = tail call i32 @constrain_operands(i32 1) #7, !dbg !2519
  %1 = load i32, i32* @which_alternative, align 4, !dbg !2520
  %.lobit = lshr i32 %1, 31, !dbg !2521
  %.lobit.not = xor i32 %.lobit, 1, !dbg !2521
  br label %cleanup29, !dbg !2522

if.end:                                           ; preds = %entry
  %call2 = tail call i32 @asm_noperands(%struct.rtx_def* %x) #7, !dbg !2523
  call void @llvm.dbg.value(metadata i32 %call2, metadata !2504, metadata !DIExpression()), !dbg !2512
  %cmp3 = icmp slt i32 %call2, 0, !dbg !2524
  br i1 %cmp3, label %cleanup29, label %if.end6, !dbg !2526

if.end6:                                          ; preds = %if.end
  %cmp7 = icmp eq i32 %call2, 0, !dbg !2527
  br i1 %cmp7, label %cleanup29, label %if.end10, !dbg !2529

if.end10:                                         ; preds = %if.end6
  %conv11 = sext i32 %call2 to i64, !dbg !2530
  %2 = alloca %struct.rtx_def*, i64 %conv11, align 16, !dbg !2530
  call void @llvm.dbg.value(metadata %struct.rtx_def** %2, metadata !2505, metadata !DIExpression()), !dbg !2512
  %3 = alloca i8*, i64 %conv11, align 16, !dbg !2531
  call void @llvm.dbg.value(metadata i8** %3, metadata !2506, metadata !DIExpression()), !dbg !2512
  %call14 = call i8* @decode_asm_operands(%struct.rtx_def* %x, %struct.rtx_def** nonnull %2, %struct.rtx_def*** null, i8** nonnull %3, i32* null, i32* null) #7, !dbg !2532
  call void @llvm.dbg.value(metadata i32 0, metadata !2507, metadata !DIExpression()), !dbg !2512
  %wide.trip.count = zext i32 %call2 to i64, !dbg !2533
  br label %for.cond, !dbg !2534

for.cond:                                         ; preds = %for.inc, %if.end10
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end10 ], !dbg !2535
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2507, metadata !DIExpression()), !dbg !2512
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !2533
  br i1 %exitcond, label %cleanup29.loopexit, label %for.body, !dbg !2536

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %indvars.iv, !dbg !2537
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !2537
  call void @llvm.dbg.value(metadata i8* %4, metadata !2508, metadata !DIExpression()), !dbg !2538
  %5 = load i8, i8* %4, align 1, !dbg !2539
  %cmp19 = icmp eq i8 %5, 37, !dbg !2541
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !2542
  %spec.select = select i1 %cmp19, i8* %incdec.ptr, i8* %4, !dbg !2543
  call void @llvm.dbg.value(metadata i8* %spec.select, metadata !2508, metadata !DIExpression()), !dbg !2538
  %arrayidx24 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %indvars.iv, !dbg !2544
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx24, align 8, !dbg !2544
  %call25 = call i32 @asm_operand_ok(%struct.rtx_def* %6, i8* %spec.select, i8** nonnull %3) #7, !dbg !2546
  %tobool26 = icmp eq i32 %call25, 0, !dbg !2546
  br i1 %tobool26, label %cleanup29.loopexit, label %for.inc

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2547
  call void @llvm.dbg.value(metadata i32 undef, metadata !2507, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2512
  br label %for.cond, !dbg !2548, !llvm.loop !2549

cleanup29.loopexit:                               ; preds = %for.body, %for.cond
  %retval.2.ph = phi i32 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup29, !dbg !2551

cleanup29:                                        ; preds = %cleanup29.loopexit, %if.end6, %if.end, %if.then
  %retval.2 = phi i32 [ %.lobit.not, %if.then ], [ 0, %if.end ], [ 1, %if.end6 ], [ %retval.2.ph, %cleanup29.loopexit ]
  ret i32 %retval.2, !dbg !2551
}

; Function Attrs: nounwind uwtable
define dso_local void @extract_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !2552 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2556, metadata !DIExpression()), !dbg !2569
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !2570
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !2570
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !2570
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2570
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !2560, metadata !DIExpression()), !dbg !2569
  store i8 0, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !2571
  store i8 0, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 9), align 8, !dbg !2572
  store i8 0, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 8), align 1, !dbg !2573
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !2574
  %bf.load = load i32, i32* %2, align 8, !dbg !2574
  %trunc = trunc i32 %bf.load to i16, !dbg !2575
  switch i16 %trunc, label %normal_insn [
    i16 24, label %cleanup.cont
    i16 25, label %cleanup.cont
    i16 16, label %cleanup.cont
    i16 20, label %cleanup.cont
    i16 21, label %cleanup.cont
    i16 138, label %cleanup.cont
    i16 23, label %sw.bb1
    i16 15, label %sw.bb8
    i16 17, label %asm_insn
  ], !dbg !2575

sw.bb1:                                           ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2576
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !2576
  %5 = load i32*, i32** %4, align 8, !dbg !2576
  %bf.load6 = load i32, i32* %5, align 8, !dbg !2576
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !2576
  %cmp = icmp eq i32 %bf.clear7, 17, !dbg !2578
  br i1 %cmp, label %asm_insn, label %normal_insn, !dbg !2579

sw.bb8:                                           ; preds = %entry
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2580
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtvec_def**, !dbg !2580
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2580
  %arrayidx12 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 0, !dbg !2580
  %7 = bitcast %struct.rtx_def** %arrayidx12 to i32**, !dbg !2580
  %8 = load i32*, i32** %7, align 8, !dbg !2580
  %bf.load13 = load i32, i32* %8, align 8, !dbg !2580
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !2580
  %cmp15 = icmp eq i32 %bf.clear14, 23, !dbg !2582
  br i1 %cmp15, label %land.lhs.true, label %lor.lhs.false, !dbg !2583

land.lhs.true:                                    ; preds = %sw.bb8
  %9 = getelementptr inbounds i32, i32* %8, i64 4, !dbg !2584
  %10 = bitcast i32* %9 to i32**, !dbg !2584
  %11 = load i32*, i32** %10, align 8, !dbg !2584
  %bf.load26 = load i32, i32* %11, align 8, !dbg !2584
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !2584
  %cmp28 = icmp eq i32 %bf.clear27, 17, !dbg !2585
  br i1 %cmp28, label %asm_insn, label %lor.lhs.false, !dbg !2586

lor.lhs.false:                                    ; preds = %land.lhs.true, %sw.bb8
  %cmp37 = icmp eq i32 %bf.clear14, 17, !dbg !2587
  br i1 %cmp37, label %asm_insn, label %normal_insn, !dbg !2588

asm_insn:                                         ; preds = %entry, %land.lhs.true, %lor.lhs.false, %sw.bb1
  call void @llvm.dbg.label(metadata !2567), !dbg !2589
  %call = tail call i32 @asm_noperands(%struct.rtx_def* %1) #7, !dbg !2590
  call void @llvm.dbg.value(metadata i32 %call, metadata !2559, metadata !DIExpression()), !dbg !2569
  %conv = trunc i32 %call to i8, !dbg !2591
  store i8 %conv, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !2592
  %cmp41 = icmp sgt i32 %call, -1, !dbg !2593
  br i1 %cmp41, label %if.then43, label %if.end55, !dbg !2594

if.then43:                                        ; preds = %asm_insn
  %cmp44 = icmp slt i32 %call, 31, !dbg !2595
  br i1 %cmp44, label %cond.end, label %cond.true, !dbg !2595

cond.true:                                        ; preds = %if.then43
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2078, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2595
  br label %cond.end, !dbg !2595

cond.end:                                         ; preds = %if.then43, %cond.true
  %call46 = tail call i8* @decode_asm_operands(%struct.rtx_def* %1, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 0), %struct.rtx_def*** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 1, i64 0), i8** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 2, i64 0), i32* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 3, i64 0), i32* null) #7, !dbg !2596
  %cmp47 = icmp sgt i32 %call, 0, !dbg !2597
  br i1 %cmp47, label %if.then49, label %sw.epilog, !dbg !2598

if.then49:                                        ; preds = %cond.end
  %12 = load i8*, i8** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 2, i64 0), align 8, !dbg !2599
  call void @llvm.dbg.value(metadata i8* %12, metadata !2561, metadata !DIExpression()), !dbg !2600
  br label %while.cond, !dbg !2601

while.cond:                                       ; preds = %while.body, %if.then49
  %13 = phi i8 [ 1, %if.then49 ], [ %add, %while.body ], !dbg !2600
  %p.0 = phi i8* [ %12, %if.then49 ], [ %incdec.ptr, %while.body ], !dbg !2600
  store i8 %13, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 9), align 8, !dbg !2600
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !2561, metadata !DIExpression()), !dbg !2600
  %14 = load i8, i8* %p.0, align 1, !dbg !2602
  %tobool = icmp eq i8 %14, 0, !dbg !2601
  br i1 %tobool, label %sw.epilog.loopexit2, label %while.body, !dbg !2601

while.body:                                       ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %p.0, i64 1, !dbg !2603
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !2561, metadata !DIExpression()), !dbg !2600
  %cmp51 = icmp eq i8 %14, 44, !dbg !2604
  %conv52 = zext i1 %cmp51 to i8, !dbg !2604
  %add = add i8 %13, %conv52, !dbg !2605
  br label %while.cond, !dbg !2601, !llvm.loop !2606

if.end55:                                         ; preds = %asm_insn
  tail call void @_fatal_insn_not_found(%struct.rtx_def* %insn, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2094, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2608
  br label %normal_insn, !dbg !2608

normal_insn:                                      ; preds = %if.end55, %entry, %lor.lhs.false, %sw.bb1
  call void @llvm.dbg.label(metadata !2568), !dbg !2609
  %call56 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %insn) #7, !dbg !2610
  call void @llvm.dbg.value(metadata i32 %call56, metadata !2558, metadata !DIExpression()), !dbg !2569
  %cmp57 = icmp slt i32 %call56, 0, !dbg !2611
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !2613

if.then59:                                        ; preds = %normal_insn
  tail call void @_fatal_insn_not_found(%struct.rtx_def* %insn, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2614
  br label %if.end60, !dbg !2614

if.end60:                                         ; preds = %if.then59, %normal_insn
  %idxprom = sext i32 %call56 to i64, !dbg !2615
  %n_operands = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 4, !dbg !2616
  %15 = load i8, i8* %n_operands, align 8, !dbg !2616
  call void @llvm.dbg.value(metadata i32 %conv62, metadata !2559, metadata !DIExpression()), !dbg !2569
  store i8 %15, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !2617
  %n_alternatives = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 6, !dbg !2618
  %16 = load i8, i8* %n_alternatives, align 2, !dbg !2618
  store i8 %16, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 9), align 8, !dbg !2619
  %n_dups = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 5, !dbg !2620
  %17 = load i8, i8* %n_dups, align 1, !dbg !2620
  store i8 %17, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 8), align 1, !dbg !2621
  tail call void @insn_extract(%struct.rtx_def* %insn) #6, !dbg !2622
  call void @llvm.dbg.value(metadata i32 0, metadata !2557, metadata !DIExpression()), !dbg !2569
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 3, !dbg !2623
  %18 = sext i8 %15 to i64, !dbg !2627
  br label %for.cond, !dbg !2627

for.cond:                                         ; preds = %for.inc, %if.end60
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.inc ], [ 0, %if.end60 ], !dbg !2628
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !2557, metadata !DIExpression()), !dbg !2569
  %cmp68 = icmp slt i64 %indvars.iv7, %18, !dbg !2629
  br i1 %cmp68, label %for.body, label %sw.epilog.loopexit, !dbg !2630

for.body:                                         ; preds = %for.cond
  %19 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !2631
  %constraint = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %19, i64 %indvars.iv7, i32 1, !dbg !2632
  %20 = bitcast i8** %constraint to i64*, !dbg !2632
  %21 = load i64, i64* %20, align 8, !dbg !2632
  %arrayidx75 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 2, i64 %indvars.iv7, !dbg !2633
  %22 = bitcast i8** %arrayidx75 to i64*, !dbg !2634
  store i64 %21, i64* %22, align 8, !dbg !2634
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %19, i64 %indvars.iv7, i32 2, !dbg !2635
  %bf.load81 = load i16, i16* %mode, align 8, !dbg !2635
  %bf.cast = zext i16 %bf.load81 to i32, !dbg !2635
  %arrayidx83 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 3, i64 %indvars.iv7, !dbg !2636
  store i32 %bf.cast, i32* %arrayidx83, align 4, !dbg !2637
  %cmp86 = icmp eq i16 %bf.load81, 0, !dbg !2638
  br i1 %cmp86, label %if.then88, label %for.inc, !dbg !2640

if.then88:                                        ; preds = %for.body
  %arrayidx90 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv7, !dbg !2641
  %23 = bitcast %struct.rtx_def** %arrayidx90 to i32**, !dbg !2641
  %24 = load i32*, i32** %23, align 8, !dbg !2641
  %bf.load91 = load i32, i32* %24, align 8, !dbg !2641
  %bf.lshr = lshr i32 %bf.load91, 16, !dbg !2641
  %bf.clear92 = and i32 %bf.lshr, 255, !dbg !2641
  store i32 %bf.clear92, i32* %arrayidx83, align 4, !dbg !2642
  br label %for.inc, !dbg !2643

for.inc:                                          ; preds = %for.body, %if.then88
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !2644
  call void @llvm.dbg.value(metadata i32 undef, metadata !2557, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2569
  br label %for.cond, !dbg !2645, !llvm.loop !2646

sw.epilog.loopexit:                               ; preds = %for.cond
  %conv62 = sext i8 %15 to i32, !dbg !2615
  br label %sw.epilog, !dbg !2648

sw.epilog.loopexit2:                              ; preds = %while.cond
  br label %sw.epilog, !dbg !2648

sw.epilog:                                        ; preds = %sw.epilog.loopexit2, %sw.epilog.loopexit, %cond.end
  %noperands.0 = phi i32 [ %call, %cond.end ], [ %conv62, %sw.epilog.loopexit ], [ %call, %sw.epilog.loopexit2 ], !dbg !2650
  call void @llvm.dbg.value(metadata i32 %noperands.0, metadata !2559, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.value(metadata i32 0, metadata !2557, metadata !DIExpression()), !dbg !2569
  %25 = sext i32 %noperands.0 to i64, !dbg !2648
  br label %for.cond96, !dbg !2648

for.cond96:                                       ; preds = %cond.end115, %sw.epilog
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %cond.end115 ], [ 0, %sw.epilog ], !dbg !2651
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !2557, metadata !DIExpression()), !dbg !2569
  %cmp97 = icmp slt i64 %indvars.iv5, %25, !dbg !2652
  br i1 %cmp97, label %for.body99, label %for.end121, !dbg !2654

for.body99:                                       ; preds = %for.cond96
  %arrayidx101 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 2, i64 %indvars.iv5, !dbg !2655
  %26 = load i8*, i8** %arrayidx101, align 8, !dbg !2655
  %27 = load i8, i8* %26, align 1, !dbg !2655
  %cmp104 = icmp eq i8 %27, 61, !dbg !2656
  br i1 %cmp104, label %cond.end115, label %cond.false107, !dbg !2655

cond.false107:                                    ; preds = %for.body99
  %cmp112 = icmp eq i8 %27, 43, !dbg !2657
  %cond114 = select i1 %cmp112, i32 2, i32 0, !dbg !2658
  br label %cond.end115, !dbg !2655

cond.end115:                                      ; preds = %for.body99, %cond.false107
  %cond116 = phi i32 [ %cond114, %cond.false107 ], [ 1, %for.body99 ], !dbg !2655
  %arrayidx118 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 4, i64 %indvars.iv5, !dbg !2659
  store i32 %cond116, i32* %arrayidx118, align 4, !dbg !2660
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !2661
  call void @llvm.dbg.value(metadata i32 undef, metadata !2557, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2569
  br label %for.cond96, !dbg !2662, !llvm.loop !2663

for.end121:                                       ; preds = %for.cond96
  %28 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 9), align 8, !dbg !2665
  %cmp123 = icmp slt i8 %28, 31, !dbg !2665
  br i1 %cmp123, label %cond.end127, label %cond.true125, !dbg !2665

cond.true125:                                     ; preds = %for.end121
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2126, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2665
  br label %cond.end127, !dbg !2665

cond.end127:                                      ; preds = %for.end121, %cond.true125
  %29 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !2666
  %rt_int = bitcast %union.rtunion_def* %29 to i32*, !dbg !2666
  %30 = load i32, i32* %rt_int, align 8, !dbg !2666
  %cmp132 = icmp slt i32 %30, 0, !dbg !2668
  br i1 %cmp132, label %for.cond135.preheader, label %if.else145, !dbg !2669

for.cond135.preheader:                            ; preds = %cond.end127
  %.pre = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 9), align 8, !dbg !2670
  br label %for.cond135, !dbg !2673

for.cond135:                                      ; preds = %for.cond135.preheader, %for.body139
  %indvars.iv = phi i64 [ 0, %for.cond135.preheader ], [ %indvars.iv.next, %for.body139 ], !dbg !2674
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2557, metadata !DIExpression()), !dbg !2569
  %31 = sext i8 %.pre to i64, !dbg !2675
  %cmp137 = icmp slt i64 %indvars.iv, %31, !dbg !2675
  br i1 %cmp137, label %for.body139, label %if.end157.loopexit, !dbg !2673

for.body139:                                      ; preds = %for.cond135
  %arrayidx141 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 10, i64 %indvars.iv, !dbg !2676
  store i8 1, i8* %arrayidx141, align 1, !dbg !2677
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2678
  call void @llvm.dbg.value(metadata i32 undef, metadata !2557, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2569
  br label %for.cond135, !dbg !2679, !llvm.loop !2680

if.else145:                                       ; preds = %cond.end127
  store %struct.rtx_def* %insn, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 11), align 8, !dbg !2682
  call void @llvm.dbg.value(metadata i32 0, metadata !2557, metadata !DIExpression()), !dbg !2569
  br label %for.cond146, !dbg !2684

for.cond146:                                      ; preds = %for.body150, %if.else145
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.body150 ], [ 0, %if.else145 ], !dbg !2686
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !2557, metadata !DIExpression()), !dbg !2569
  %32 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 9), align 8, !dbg !2687
  %33 = sext i8 %32 to i64, !dbg !2689
  %cmp148 = icmp slt i64 %indvars.iv3, %33, !dbg !2689
  br i1 %cmp148, label %for.body150, label %if.end157.loopexit1, !dbg !2690

for.body150:                                      ; preds = %for.cond146
  %34 = trunc i64 %indvars.iv3 to i32, !dbg !2691
  store i32 %34, i32* @which_alternative, align 4, !dbg !2691
  %call151 = tail call fastcc zeroext i8 @get_attr_enabled(%struct.rtx_def* %insn) #7, !dbg !2693
  %arrayidx153 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 10, i64 %indvars.iv3, !dbg !2694
  store i8 1, i8* %arrayidx153, align 1, !dbg !2695
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !2696
  call void @llvm.dbg.value(metadata i32 undef, metadata !2557, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2569
  br label %for.cond146, !dbg !2697, !llvm.loop !2698

if.end157.loopexit:                               ; preds = %for.cond135
  br label %if.end157, !dbg !2700

if.end157.loopexit1:                              ; preds = %for.cond146
  br label %if.end157, !dbg !2700

if.end157:                                        ; preds = %if.end157.loopexit1, %if.end157.loopexit
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 11), align 8, !dbg !2700
  store i32 -1, i32* @which_alternative, align 4, !dbg !2701
  br label %cleanup.cont, !dbg !2702

cleanup.cont:                                     ; preds = %if.end157, %entry, %entry, %entry, %entry, %entry, %entry
  ret void, !dbg !2702
}

declare dso_local %struct.rtx_def* @make_insn_raw(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @constrain_operands(i32 %strict) local_unnamed_addr #5 !dbg !2703 {
entry:
  %constraints = alloca [30 x i8*], align 16
  %matching_operands = alloca [30 x i32], align 16
  %earlyclobber = alloca [30 x i32], align 16
  %funny_match = alloca [30 x %struct.funny_match], align 16
  %end = alloca i8*, align 8
  call void @llvm.dbg.value(metadata i32 %strict, metadata !2705, metadata !DIExpression()), !dbg !2749
  %0 = bitcast [30 x i8*]* %constraints to i8*, !dbg !2750
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %0) #8, !dbg !2750
  call void @llvm.dbg.declare(metadata [30 x i8*]* %constraints, metadata !2706, metadata !DIExpression()), !dbg !2751
  %1 = bitcast [30 x i32]* %matching_operands to i8*, !dbg !2752
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %1) #8, !dbg !2752
  call void @llvm.dbg.declare(metadata [30 x i32]* %matching_operands, metadata !2707, metadata !DIExpression()), !dbg !2753
  %2 = bitcast [30 x i32]* %earlyclobber to i8*, !dbg !2754
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %2) #8, !dbg !2754
  call void @llvm.dbg.declare(metadata [30 x i32]* %earlyclobber, metadata !2709, metadata !DIExpression()), !dbg !2755
  %3 = bitcast [30 x %struct.funny_match]* %funny_match to i8*, !dbg !2756
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %3) #8, !dbg !2756
  call void @llvm.dbg.declare(metadata [30 x %struct.funny_match]* %funny_match, metadata !2711, metadata !DIExpression()), !dbg !2757
  store i32 0, i32* @which_alternative, align 4, !dbg !2758
  %4 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !2759
  %cmp = icmp eq i8 %4, 0, !dbg !2761
  br i1 %cmp, label %cleanup703, label %lor.lhs.false, !dbg !2762

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 9), align 8, !dbg !2763
  %cmp3 = icmp eq i8 %5, 0, !dbg !2764
  br i1 %cmp3, label %cleanup703, label %for.cond.preheader, !dbg !2765

for.cond.preheader:                               ; preds = %lor.lhs.false
  %6 = sext i8 %4 to i64, !dbg !2766
  br label %for.cond, !dbg !2766

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv33 = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next34, %for.body ], !dbg !2768
  call void @llvm.dbg.value(metadata i64 %indvars.iv33, metadata !2710, metadata !DIExpression()), !dbg !2749
  %cmp6 = icmp slt i64 %indvars.iv33, %6, !dbg !2769
  br i1 %cmp6, label %for.body, label %do.body.preheader, !dbg !2766

do.body.preheader:                                ; preds = %for.cond
  %cmp490 = icmp sgt i32 %strict, 0, !dbg !2771
  %cmp496 = icmp eq i32 %strict, 0, !dbg !2771
  %cmp502 = icmp slt i32 %strict, 0, !dbg !2771
  %cmp182 = icmp slt i32 %strict, 1, !dbg !2773
  %7 = bitcast i8** %end to i8*, !dbg !2775
  br label %do.body, !dbg !2776

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 2, i64 %indvars.iv33, !dbg !2777
  %8 = bitcast i8** %arrayidx to i64*, !dbg !2777
  %9 = load i64, i64* %8, align 8, !dbg !2777
  %arrayidx9 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i64 0, i64 %indvars.iv33, !dbg !2779
  %10 = bitcast i8** %arrayidx9 to i64*, !dbg !2780
  store i64 %9, i64* %10, align 8, !dbg !2780
  %arrayidx11 = getelementptr inbounds [30 x i32], [30 x i32]* %matching_operands, i64 0, i64 %indvars.iv33, !dbg !2781
  store i32 -1, i32* %arrayidx11, align 4, !dbg !2782
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1, !dbg !2783
  call void @llvm.dbg.value(metadata i32 undef, metadata !2710, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2749
  br label %for.cond, !dbg !2784, !llvm.loop !2785

do.body:                                          ; preds = %do.body.preheader, %do.cond693
  %11 = phi i32 [ 0, %do.body.preheader ], [ %101, %do.cond693 ], !dbg !2787
  call void @llvm.dbg.value(metadata i32 -1, metadata !2718, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 0, metadata !2721, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 0, metadata !2717, metadata !DIExpression()), !dbg !2749
  %idxprom12 = sext i32 %11 to i64, !dbg !2789
  %arrayidx13 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 10, i64 %idxprom12, !dbg !2789
  %12 = load i8, i8* %arrayidx13, align 1, !dbg !2789
  %tobool = icmp eq i8 %12, 0, !dbg !2789
  br i1 %tobool, label %for.cond15.preheader, label %for.cond29.preheader, !dbg !2790

for.cond29.preheader:                             ; preds = %do.body
  br label %for.cond29, !dbg !2791

for.cond15.preheader:                             ; preds = %do.body
  br label %for.cond15, !dbg !2792

for.cond15:                                       ; preds = %for.cond15.preheader, %for.body19
  %indvars.iv31 = phi i64 [ 0, %for.cond15.preheader ], [ %indvars.iv.next32, %for.body19 ], !dbg !2794
  call void @llvm.dbg.value(metadata i64 %indvars.iv31, metadata !2722, metadata !DIExpression()), !dbg !2795
  %13 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !2796
  %14 = sext i8 %13 to i64, !dbg !2798
  %cmp17 = icmp slt i64 %indvars.iv31, %14, !dbg !2798
  br i1 %cmp17, label %for.body19, label %for.end26, !dbg !2792

for.body19:                                       ; preds = %for.cond15
  %arrayidx21 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i64 0, i64 %indvars.iv31, !dbg !2799
  %15 = load i8*, i8** %arrayidx21, align 8, !dbg !2799
  %call = call fastcc i8* @skip_alternative(i8* %15) #7, !dbg !2800
  store i8* %call, i8** %arrayidx21, align 8, !dbg !2801
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1, !dbg !2802
  call void @llvm.dbg.value(metadata i32 undef, metadata !2722, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2795
  br label %for.cond15, !dbg !2803, !llvm.loop !2804

for.end26:                                        ; preds = %for.cond15
  %16 = load i32, i32* @which_alternative, align 4, !dbg !2806
  %inc27 = add nsw i32 %16, 1, !dbg !2806
  store i32 %inc27, i32* @which_alternative, align 4, !dbg !2806
  br label %cleanup688

for.cond29:                                       ; preds = %for.cond29.preheader, %do.end582
  %indvars.iv = phi i64 [ 0, %for.cond29.preheader ], [ %indvars.iv.next, %do.end582 ], !dbg !2807
  %lose.0 = phi i32 [ 0, %for.cond29.preheader ], [ %spec.select7, %do.end582 ], !dbg !2807
  %seen_earlyclobber_at.0 = phi i32 [ -1, %for.cond29.preheader ], [ %seen_earlyclobber_at.3.lcssa, %do.end582 ], !dbg !2808
  %funny_match_index.0 = phi i32 [ 0, %for.cond29.preheader ], [ %funny_match_index.3.lcssa, %do.end582 ], !dbg !2809
  call void @llvm.dbg.value(metadata i32 %funny_match_index.0, metadata !2717, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i32 %seen_earlyclobber_at.0, metadata !2718, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2720, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %lose.0, metadata !2721, metadata !DIExpression()), !dbg !2788
  %17 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !2810
  %18 = sext i8 %17 to i64, !dbg !2811
  %cmp31 = icmp slt i64 %indvars.iv, %18, !dbg !2811
  br i1 %cmp31, label %for.body33, label %for.end590, !dbg !2791

for.body33:                                       ; preds = %for.cond29
  %arrayidx35 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv, !dbg !2812
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx35, align 8, !dbg !2812
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !2725, metadata !DIExpression()), !dbg !2813
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !2814
  %bf.load = load i32, i32* %20, align 8, !dbg !2814
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !2814
  %bf.clear = and i32 %bf.lshr, 255, !dbg !2814
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !2729, metadata !DIExpression()), !dbg !2813
  %arrayidx37 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i64 0, i64 %indvars.iv, !dbg !2815
  %21 = load i8*, i8** %arrayidx37, align 8, !dbg !2815
  call void @llvm.dbg.value(metadata i8* %21, metadata !2730, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.value(metadata i32 0, metadata !2731, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.value(metadata i32 0, metadata !2732, metadata !DIExpression()), !dbg !2813
  %arrayidx39 = getelementptr inbounds [30 x i32], [30 x i32]* %earlyclobber, i64 0, i64 %indvars.iv, !dbg !2816
  store i32 0, i32* %arrayidx39, align 4, !dbg !2817
  %bf.clear41 = and i32 %bf.load, 65535, !dbg !2818
  %idxprom42 = zext i32 %bf.clear41 to i64, !dbg !2818
  %arrayidx43 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom42, !dbg !2818
  %22 = load i32, i32* %arrayidx43, align 4, !dbg !2818
  %cmp44 = icmp eq i32 %22, 4, !dbg !2818
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !2820

if.then46:                                        ; preds = %for.body33
  %arrayidx47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2821
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**, !dbg !2821
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2821
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !2725, metadata !DIExpression()), !dbg !2813
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 0, !dbg !2822
  %bf.load49.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !2824
  br label %if.end48, !dbg !2825

if.end48:                                         ; preds = %if.then46, %for.body33
  %bf.load49 = phi i32 [ %bf.load49.pre, %if.then46 ], [ %bf.load, %for.body33 ], !dbg !2824
  %op.0 = phi %struct.rtx_def* [ %23, %if.then46 ], [ %19, %for.body33 ], !dbg !2813
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op.0, metadata !2725, metadata !DIExpression()), !dbg !2813
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op.0, i64 0, i32 0, !dbg !2824
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !2824
  %cmp51 = icmp eq i32 %bf.clear50, 39, !dbg !2826
  br i1 %cmp51, label %if.then53, label %if.end94, !dbg !2827

if.then53:                                        ; preds = %if.end48
  %arrayidx56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2828
  %25 = bitcast %union.rtunion_def* %arrayidx56 to i32**, !dbg !2828
  %26 = load i32*, i32** %25, align 8, !dbg !2828
  %bf.load58 = load i32, i32* %26, align 8, !dbg !2828
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !2828
  %cmp60 = icmp eq i32 %bf.clear59, 37, !dbg !2828
  br i1 %cmp60, label %land.lhs.true, label %if.then53.if.end89_crit_edge, !dbg !2831

if.then53.if.end89_crit_edge:                     ; preds = %if.then53
  %.pre20 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**, !dbg !2832
  br label %if.end89, !dbg !2831

land.lhs.true:                                    ; preds = %if.then53
  %27 = bitcast i32* %26 to %struct.rtx_def*, !dbg !2831
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**, !dbg !2833
  %call66 = call fastcc i32 @rhs_regno(%struct.rtx_def* %27) #7, !dbg !2833
  %cmp67 = icmp ult i32 %call66, 53, !dbg !2834
  br i1 %cmp67, label %if.then69, label %if.end89, !dbg !2835

if.then69:                                        ; preds = %land.lhs.true
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !2836
  %call74 = call fastcc i32 @rhs_regno(%struct.rtx_def* %28) #7, !dbg !2836
  %29 = load i32*, i32** %25, align 8, !dbg !2837
  %bf.load79 = load i32, i32* %29, align 8, !dbg !2837
  %bf.lshr80 = lshr i32 %bf.load79, 16, !dbg !2837
  %bf.clear81 = and i32 %bf.lshr80, 255, !dbg !2837
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2838
  %rt_uint = bitcast %union.rtunion_def* %30 to i32*, !dbg !2838
  %31 = load i32, i32* %rt_uint, align 8, !dbg !2838
  %bf.load85 = load i32, i32* %24, align 8, !dbg !2839
  %bf.lshr86 = lshr i32 %bf.load85, 16, !dbg !2839
  %bf.clear87 = and i32 %bf.lshr86, 255, !dbg !2839
  %call88 = call i32 @subreg_regno_offset(i32 %call74, i32 %bf.clear81, i32 %31, i32 %bf.clear87) #6, !dbg !2840
  call void @llvm.dbg.value(metadata i32 %call88, metadata !2731, metadata !DIExpression()), !dbg !2813
  br label %if.end89, !dbg !2841

if.end89:                                         ; preds = %if.then53.if.end89_crit_edge, %if.then69, %land.lhs.true
  %rt_rtx93.pre-phi = phi %struct.rtx_def** [ %.pre20, %if.then53.if.end89_crit_edge ], [ %rt_rtx65, %if.then69 ], [ %rt_rtx65, %land.lhs.true ], !dbg !2832
  %offset.0 = phi i32 [ 0, %if.then53.if.end89_crit_edge ], [ %call88, %if.then69 ], [ 0, %land.lhs.true ], !dbg !2813
  call void @llvm.dbg.value(metadata i32 %offset.0, metadata !2731, metadata !DIExpression()), !dbg !2813
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93.pre-phi, align 8, !dbg !2832
  call void @llvm.dbg.value(metadata %struct.rtx_def* %32, metadata !2725, metadata !DIExpression()), !dbg !2813
  br label %if.end94, !dbg !2842

if.end94:                                         ; preds = %if.end89, %if.end48
  %offset.1 = phi i32 [ %offset.0, %if.end89 ], [ 0, %if.end48 ], !dbg !2813
  %op.1 = phi %struct.rtx_def* [ %32, %if.end89 ], [ %op.0, %if.end48 ], !dbg !2813
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op.1, metadata !2725, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.value(metadata i32 %offset.1, metadata !2731, metadata !DIExpression()), !dbg !2813
  %33 = load i8, i8* %21, align 1, !dbg !2843
  %cmp96 = icmp eq i8 %33, 0, !dbg !2845
  br i1 %cmp96, label %if.then102, label %lor.lhs.false98, !dbg !2846

lor.lhs.false98:                                  ; preds = %if.end94
  %cmp100 = icmp eq i8 %33, 44, !dbg !2847
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !2848

if.then102:                                       ; preds = %lor.lhs.false98, %if.end94
  call void @llvm.dbg.value(metadata i32 1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %if.end103, !dbg !2849

if.end103:                                        ; preds = %if.then102, %lor.lhs.false98
  %win.0 = phi i32 [ 1, %if.then102 ], [ 0, %lor.lhs.false98 ], !dbg !2813
  call void @llvm.dbg.value(metadata i32 %win.0, metadata !2732, metadata !DIExpression()), !dbg !2813
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op.1, i64 0, i32 0, !dbg !2771
  %u442 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op.1, i64 0, i32 1, !dbg !2850
  %arrayidx443 = bitcast %union.u* %u442 to i64*, !dbg !2850
  %arrayidx341 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2852
  %35 = bitcast %union.rtunion_def* %arrayidx341 to i32**, !dbg !2852
  %rt_rtx235 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**, !dbg !2854
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2854
  %rt_mem = bitcast %union.rtunion_def* %36 to %struct.mem_attrs**, !dbg !2854
  %arrayidx186 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 3, i64 %indvars.iv, !dbg !2773
  %arrayidx162 = getelementptr inbounds [30 x i32], [30 x i32]* %matching_operands, i64 0, i64 %indvars.iv, !dbg !2775
  br label %do.body104, !dbg !2858

do.body104:                                       ; preds = %do.cond580.do.body104_crit_edge, %if.end103
  %37 = phi i8 [ %33, %if.end103 ], [ %.pre17, %do.cond580.do.body104_crit_edge ], !dbg !2859
  %win.1 = phi i32 [ %win.0, %if.end103 ], [ %win.22, %do.cond580.do.body104_crit_edge ], !dbg !2813
  %p.0 = phi i8* [ %21, %if.end103 ], [ %add.ptr, %do.cond580.do.body104_crit_edge ], !dbg !2813
  %seen_earlyclobber_at.1 = phi i32 [ %seen_earlyclobber_at.0, %if.end103 ], [ %seen_earlyclobber_at.3, %do.cond580.do.body104_crit_edge ], !dbg !2808
  %funny_match_index.1 = phi i32 [ %funny_match_index.0, %if.end103 ], [ %funny_match_index.3, %do.cond580.do.body104_crit_edge ], !dbg !2809
  call void @llvm.dbg.value(metadata i32 %funny_match_index.1, metadata !2717, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i32 %seen_earlyclobber_at.1, metadata !2718, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !2730, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.value(metadata i32 %win.1, metadata !2732, metadata !DIExpression()), !dbg !2813
  %conv105 = sext i8 %37 to i32, !dbg !2859
  call void @llvm.dbg.value(metadata i32 %conv105, metadata !2710, metadata !DIExpression()), !dbg !2749
  %call107 = call fastcc i64 @insn_constraint_len(i8 signext %37, i8* %p.0) #7, !dbg !2860
  call void @llvm.dbg.value(metadata i32 undef, metadata !2734, metadata !DIExpression()), !dbg !2813
  switch i32 %conv105, label %sw.default [
    i32 0, label %do.cond580
    i32 44, label %sw.bb109
    i32 63, label %sw.bb110
    i32 33, label %sw.bb110
    i32 42, label %sw.bb110
    i32 37, label %sw.bb110
    i32 61, label %sw.bb110
    i32 43, label %sw.bb110
    i32 35, label %do.body112.preheader
    i32 38, label %sw.bb118
    i32 48, label %sw.bb125
    i32 49, label %sw.bb125
    i32 50, label %sw.bb125
    i32 51, label %sw.bb125
    i32 52, label %sw.bb125
    i32 53, label %sw.bb125
    i32 54, label %sw.bb125
    i32 55, label %sw.bb125
    i32 56, label %sw.bb125
    i32 57, label %sw.bb125
    i32 112, label %sw.bb181
    i32 103, label %sw.bb191
    i32 88, label %sw.bb219
    i32 109, label %sw.bb220
    i32 60, label %sw.bb308
    i32 62, label %sw.bb333
    i32 69, label %sw.bb358
    i32 70, label %sw.bb358
    i32 71, label %sw.bb379
    i32 72, label %sw.bb379
    i32 115, label %sw.bb391
    i32 105, label %do.body104.sw.bb409_crit_edge
    i32 110, label %sw.bb418
    i32 73, label %sw.bb436
    i32 74, label %sw.bb436
    i32 75, label %sw.bb436
    i32 76, label %sw.bb436
    i32 77, label %sw.bb436
    i32 78, label %sw.bb436
    i32 79, label %sw.bb436
    i32 80, label %sw.bb436
    i32 86, label %sw.bb450
    i32 111, label %sw.bb489
  ], !dbg !2861

do.body104.sw.bb409_crit_edge:                    ; preds = %do.body104
  %bf.load410.pre = load i32, i32* %34, align 8, !dbg !2862
  %.pre19 = and i32 %bf.load410.pre, 65535, !dbg !2862
  br label %sw.bb409, !dbg !2861

do.body112.preheader:                             ; preds = %do.body104
  br label %do.body112, !dbg !2864

sw.bb109:                                         ; preds = %do.body104
  call void @llvm.dbg.value(metadata i32 0, metadata !2710, metadata !DIExpression()), !dbg !2749
  br label %do.cond580, !dbg !2865

sw.bb110:                                         ; preds = %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104
  br label %do.cond580, !dbg !2866

do.body112:                                       ; preds = %do.body112, %do.body112.preheader
  %p.1 = phi i8* [ %p.0, %do.body112.preheader ], [ %incdec.ptr, %do.body112 ], !dbg !2813
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !2730, metadata !DIExpression()), !dbg !2813
  %incdec.ptr = getelementptr inbounds i8, i8* %p.1, i64 1, !dbg !2867
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !2730, metadata !DIExpression()), !dbg !2813
  %38 = load i8, i8* %incdec.ptr, align 1, !dbg !2868
  %tobool114 = icmp eq i8 %38, 0, !dbg !2868
  %cmp116 = icmp eq i8 %38, 44, !dbg !2869
  %or.cond23 = or i1 %tobool114, %cmp116, !dbg !2870
  br i1 %or.cond23, label %do.cond580.loopexit, label %do.body112, !dbg !2870, !llvm.loop !2871

sw.bb118:                                         ; preds = %do.body104
  store i32 1, i32* %arrayidx39, align 4, !dbg !2873
  %cmp121 = icmp slt i32 %seen_earlyclobber_at.1, 0, !dbg !2874
  %39 = trunc i64 %indvars.iv to i32, !dbg !2876
  %spec.select = select i1 %cmp121, i32 %39, i32 %seen_earlyclobber_at.1, !dbg !2876
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2718, metadata !DIExpression()), !dbg !2788
  br label %do.cond580, !dbg !2877

sw.bb125:                                         ; preds = %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8, !dbg !2878
  call void @llvm.dbg.value(metadata i8** %end, metadata !2735, metadata !DIExpression(DW_OP_deref)), !dbg !2775
  %call126 = call i64 @strtoul(i8* %p.0, i8** nonnull %end, i32 10) #6, !dbg !2879
  %conv127 = trunc i64 %call126 to i32, !dbg !2879
  call void @llvm.dbg.value(metadata i32 %conv127, metadata !2738, metadata !DIExpression()), !dbg !2775
  %40 = load i8*, i8** %end, align 8, !dbg !2880
  call void @llvm.dbg.value(metadata i8* %40, metadata !2735, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.value(metadata i8* %40, metadata !2730, metadata !DIExpression()), !dbg !2813
  br i1 %cmp502, label %sw.bb125.if.end160_crit_edge, label %if.else, !dbg !2881

sw.bb125.if.end160_crit_edge:                     ; preds = %sw.bb125
  %.pre21 = shl i64 %call126, 32, !dbg !2882
  %.pre22 = ashr exact i64 %.pre21, 32, !dbg !2882
  br label %if.end160, !dbg !2881

if.else:                                          ; preds = %sw.bb125
  %sext12 = shl i64 %call126, 32, !dbg !2883
  %idxprom131 = ashr exact i64 %sext12, 32, !dbg !2883
  %arrayidx132 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %idxprom131, !dbg !2883
  %41 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx132, align 8, !dbg !2883
  call void @llvm.dbg.value(metadata %struct.rtx_def* %41, metadata !2739, metadata !DIExpression()), !dbg !2884
  %42 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx35, align 8, !dbg !2885
  call void @llvm.dbg.value(metadata %struct.rtx_def* %42, metadata !2742, metadata !DIExpression()), !dbg !2884
  %43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i64 0, i32 0, !dbg !2886
  %bf.load135 = load i32, i32* %43, align 8, !dbg !2886
  %bf.clear136 = and i32 %bf.load135, 65535, !dbg !2886
  %idxprom137 = zext i32 %bf.clear136 to i64, !dbg !2886
  %arrayidx138 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom137, !dbg !2886
  %44 = load i32, i32* %arrayidx138, align 4, !dbg !2886
  %cmp139 = icmp eq i32 %44, 4, !dbg !2886
  br i1 %cmp139, label %if.then141, label %if.end146, !dbg !2888

if.then141:                                       ; preds = %if.else
  %arrayidx144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2889
  %rt_rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**, !dbg !2889
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx145, align 8, !dbg !2889
  call void @llvm.dbg.value(metadata %struct.rtx_def* %45, metadata !2739, metadata !DIExpression()), !dbg !2884
  br label %if.end146, !dbg !2890

if.end146:                                        ; preds = %if.then141, %if.else
  %op1.0 = phi %struct.rtx_def* [ %45, %if.then141 ], [ %41, %if.else ], !dbg !2884
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.0, metadata !2739, metadata !DIExpression()), !dbg !2884
  %46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i64 0, i32 0, !dbg !2891
  %bf.load147 = load i32, i32* %46, align 8, !dbg !2891
  %bf.clear148 = and i32 %bf.load147, 65535, !dbg !2891
  %idxprom149 = zext i32 %bf.clear148 to i64, !dbg !2891
  %arrayidx150 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom149, !dbg !2891
  %47 = load i32, i32* %arrayidx150, align 4, !dbg !2891
  %cmp151 = icmp eq i32 %47, 4, !dbg !2891
  br i1 %cmp151, label %if.then153, label %if.end158, !dbg !2893

if.then153:                                       ; preds = %if.end146
  %arrayidx156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2894
  %rt_rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**, !dbg !2894
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx157, align 8, !dbg !2894
  call void @llvm.dbg.value(metadata %struct.rtx_def* %48, metadata !2742, metadata !DIExpression()), !dbg !2884
  br label %if.end158, !dbg !2895

if.end158:                                        ; preds = %if.then153, %if.end146
  %op2.0 = phi %struct.rtx_def* [ %48, %if.then153 ], [ %42, %if.end146 ], !dbg !2884
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2.0, metadata !2742, metadata !DIExpression()), !dbg !2884
  %call159 = call i32 @operands_match_p(%struct.rtx_def* %op1.0, %struct.rtx_def* %op2.0) #6, !dbg !2896
  call void @llvm.dbg.value(metadata i32 %call159, metadata !2733, metadata !DIExpression()), !dbg !2813
  br label %if.end160

if.end160:                                        ; preds = %sw.bb125.if.end160_crit_edge, %if.end158
  %idxprom163.pre-phi = phi i64 [ %.pre22, %sw.bb125.if.end160_crit_edge ], [ %idxprom131, %if.end158 ], !dbg !2882
  %val.0 = phi i32 [ 1, %sw.bb125.if.end160_crit_edge ], [ %call159, %if.end158 ], !dbg !2897
  call void @llvm.dbg.value(metadata i32 %val.0, metadata !2733, metadata !DIExpression()), !dbg !2813
  store i32 %conv127, i32* %arrayidx162, align 4, !dbg !2898
  %arrayidx164 = getelementptr inbounds [30 x i32], [30 x i32]* %matching_operands, i64 0, i64 %idxprom163.pre-phi, !dbg !2882
  %49 = trunc i64 %indvars.iv to i32, !dbg !2899
  store i32 %49, i32* %arrayidx164, align 4, !dbg !2899
  %cmp165 = icmp eq i32 %val.0, 0, !dbg !2900
  %spec.select2 = select i1 %cmp165, i32 %win.1, i32 1, !dbg !2902
  call void @llvm.dbg.value(metadata i32 %spec.select2, metadata !2732, metadata !DIExpression()), !dbg !2813
  %cmp169 = icmp eq i32 %val.0, 2, !dbg !2903
  %or.cond = and i1 %cmp169, %cmp490, !dbg !2905
  br i1 %or.cond, label %if.then174, label %if.end180, !dbg !2905

if.then174:                                       ; preds = %if.end160
  %idxprom175 = sext i32 %funny_match_index.1 to i64, !dbg !2906
  %this_op = getelementptr inbounds [30 x %struct.funny_match], [30 x %struct.funny_match]* %funny_match, i64 0, i64 %idxprom175, i32 0, !dbg !2908
  %50 = trunc i64 %indvars.iv to i32, !dbg !2909
  store i32 %50, i32* %this_op, align 8, !dbg !2909
  %inc177 = add nsw i32 %funny_match_index.1, 1, !dbg !2910
  call void @llvm.dbg.value(metadata i32 %inc177, metadata !2717, metadata !DIExpression()), !dbg !2749
  %other = getelementptr inbounds [30 x %struct.funny_match], [30 x %struct.funny_match]* %funny_match, i64 0, i64 %idxprom175, i32 1, !dbg !2911
  store i32 %conv127, i32* %other, align 4, !dbg !2912
  br label %if.end180, !dbg !2913

if.end180:                                        ; preds = %if.then174, %if.end160
  %funny_match_index.2 = phi i32 [ %inc177, %if.then174 ], [ %funny_match_index.1, %if.end160 ], !dbg !2788
  call void @llvm.dbg.value(metadata i32 %funny_match_index.2, metadata !2717, metadata !DIExpression()), !dbg !2749
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8, !dbg !2914
  call void @llvm.dbg.value(metadata i32 0, metadata !2734, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !2915

sw.bb181:                                         ; preds = %do.body104
  br i1 %cmp182, label %if.then189, label %lor.lhs.false184, !dbg !2916

lor.lhs.false184:                                 ; preds = %sw.bb181
  %51 = load i32, i32* %arrayidx186, align 4, !dbg !2917
  %call187 = call i32 @strict_memory_address_addr_space_p(i32 %51, %struct.rtx_def* %op.1, i8 zeroext 0) #6, !dbg !2917
  %tobool188 = icmp eq i32 %call187, 0, !dbg !2917
  br i1 %tobool188, label %do.cond580, label %if.then189, !dbg !2918

if.then189:                                       ; preds = %lor.lhs.false184, %sw.bb181
  call void @llvm.dbg.value(metadata i32 1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !2919

sw.bb191:                                         ; preds = %do.body104
  %bf.load192 = load i32, i32* %34, align 8, !dbg !2920
  %bf.clear193 = and i32 %bf.load192, 65535, !dbg !2920
  %cmp194 = icmp eq i32 %bf.clear193, 37, !dbg !2920
  br i1 %cmp194, label %if.then196, label %if.else210, !dbg !2922

if.then196:                                       ; preds = %sw.bb191
  br i1 %cmp502, label %if.then208, label %lor.lhs.false199, !dbg !2923

lor.lhs.false199:                                 ; preds = %if.then196
  %52 = load i32, i32* @reload_in_progress, align 4, !dbg !2926
  %tobool200 = icmp eq i32 %52, 0, !dbg !2926
  br i1 %tobool200, label %lor.lhs.false205, label %land.lhs.true201, !dbg !2927

land.lhs.true201:                                 ; preds = %lor.lhs.false199
  %call202 = call fastcc i32 @rhs_regno(%struct.rtx_def* %op.1) #7, !dbg !2928
  %cmp203 = icmp ugt i32 %call202, 52, !dbg !2929
  br i1 %cmp203, label %if.then208, label %lor.lhs.false205, !dbg !2930

lor.lhs.false205:                                 ; preds = %lor.lhs.false199, %land.lhs.true201
  %call206 = call i32 @reg_fits_class_p(%struct.rtx_def* %op.1, i32 13, i32 %offset.1, i32 %bf.clear) #7, !dbg !2931
  %tobool207 = icmp eq i32 %call206, 0, !dbg !2931
  br i1 %tobool207, label %do.cond580, label %if.then208, !dbg !2932

if.then208:                                       ; preds = %lor.lhs.false205, %land.lhs.true201, %if.then196
  call void @llvm.dbg.value(metadata i32 1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !2933

if.else210:                                       ; preds = %sw.bb191
  br i1 %cmp502, label %if.then216, label %lor.lhs.false213, !dbg !2934

lor.lhs.false213:                                 ; preds = %if.else210
  %call214 = call i32 @general_operand(%struct.rtx_def* %op.1, i32 %bf.clear) #7, !dbg !2936
  %tobool215 = icmp eq i32 %call214, 0, !dbg !2936
  br i1 %tobool215, label %do.cond580, label %if.then216, !dbg !2937

if.then216:                                       ; preds = %lor.lhs.false213, %if.else210
  call void @llvm.dbg.value(metadata i32 1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !2938

sw.bb219:                                         ; preds = %do.body104
  call void @llvm.dbg.value(metadata i32 1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !2939

sw.bb220:                                         ; preds = %do.body104
  %bf.load221 = load i32, i32* %34, align 8, !dbg !2940
  %bf.clear222 = and i32 %bf.load221, 65535, !dbg !2940
  %cmp223 = icmp eq i32 %bf.clear222, 43, !dbg !2940
  br i1 %cmp223, label %if.then225, label %if.else282, !dbg !2941

if.then225:                                       ; preds = %sw.bb220
  br i1 %cmp490, label %land.lhs.true228, label %if.end250, !dbg !2942

land.lhs.true228:                                 ; preds = %if.then225
  %bf.lshr230 = lshr i32 %bf.load221, 16, !dbg !2943
  %bf.clear231 = and i32 %bf.lshr230, 255, !dbg !2943
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx235, align 8, !dbg !2944
  %54 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !2945
  %cmp239 = icmp eq %struct.mem_attrs* %54, null, !dbg !2945
  br i1 %cmp239, label %cond.end, label %cond.false, !dbg !2945

cond.false:                                       ; preds = %land.lhs.true228
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %54, i64 0, i32 5, !dbg !2945
  %55 = load i8, i8* %addrspace, align 8, !dbg !2945
  br label %cond.end, !dbg !2945

cond.end:                                         ; preds = %land.lhs.true228, %cond.false
  %cond = phi i8 [ %55, %cond.false ], [ 0, %land.lhs.true228 ], !dbg !2945
  %call247 = call i32 @strict_memory_address_addr_space_p(i32 %bf.clear231, %struct.rtx_def* %53, i8 zeroext %cond) #6, !dbg !2946
  %tobool248 = icmp eq i32 %call247, 0, !dbg !2946
  br i1 %tobool248, label %do.cond580, label %if.end250, !dbg !2947

if.end250:                                        ; preds = %cond.end, %if.then225
  br i1 %cmp496, label %land.lhs.true253, label %if.end307, !dbg !2948

land.lhs.true253:                                 ; preds = %if.end250
  %bf.load254 = load i32, i32* %34, align 8, !dbg !2950
  %bf.lshr255 = lshr i32 %bf.load254, 16, !dbg !2950
  %bf.clear256 = and i32 %bf.lshr255, 255, !dbg !2950
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx235, align 8, !dbg !2951
  %57 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !2952
  %cmp265 = icmp eq %struct.mem_attrs* %57, null, !dbg !2952
  br i1 %cmp265, label %cond.end275, label %cond.false268, !dbg !2952

cond.false268:                                    ; preds = %land.lhs.true253
  %addrspace273 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %57, i64 0, i32 5, !dbg !2952
  %58 = load i8, i8* %addrspace273, align 8, !dbg !2952
  br label %cond.end275, !dbg !2952

cond.end275:                                      ; preds = %land.lhs.true253, %cond.false268
  %cond276 = phi i8 [ %58, %cond.false268 ], [ 0, %land.lhs.true253 ], !dbg !2952
  %call278 = call i32 @memory_address_addr_space_p(i32 %bf.clear256, %struct.rtx_def* %56, i8 zeroext %cond276) #7, !dbg !2953
  %tobool279 = icmp eq i32 %call278, 0, !dbg !2953
  br i1 %tobool279, label %do.cond580, label %if.end307, !dbg !2954

if.else282:                                       ; preds = %sw.bb220
  br i1 %cmp502, label %land.lhs.true285, label %if.else293, !dbg !2955

land.lhs.true285:                                 ; preds = %if.else282
  %idxprom288 = zext i32 %bf.clear222 to i64, !dbg !2957
  %arrayidx289 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom288, !dbg !2957
  %59 = load i32, i32* %arrayidx289, align 4, !dbg !2957
  %cmp290 = icmp eq i32 %59, 9, !dbg !2957
  br i1 %cmp290, label %if.end307, label %if.else293, !dbg !2958

if.else293:                                       ; preds = %land.lhs.true285, %if.else282
  %60 = load i32, i32* @reload_in_progress, align 4, !dbg !2959
  %tobool294 = icmp eq i32 %60, 0, !dbg !2959
  br i1 %tobool294, label %if.end307, label %land.lhs.true295, !dbg !2961

land.lhs.true295:                                 ; preds = %if.else293
  %cmp298 = icmp eq i32 %bf.clear222, 37, !dbg !2962
  br i1 %cmp298, label %land.lhs.true300, label %if.end307, !dbg !2963

land.lhs.true300:                                 ; preds = %land.lhs.true295
  %call301 = call fastcc i32 @rhs_regno(%struct.rtx_def* %op.1) #7, !dbg !2964
  %cmp302 = icmp ugt i32 %call301, 52, !dbg !2965
  %spec.select3 = select i1 %cmp302, i32 1, i32 %win.1, !dbg !2966
  br label %if.end307, !dbg !2966

if.end307:                                        ; preds = %cond.end275, %if.else293, %land.lhs.true300, %land.lhs.true285, %land.lhs.true295, %if.end250
  %win.9 = phi i32 [ 1, %cond.end275 ], [ 1, %if.end250 ], [ 1, %land.lhs.true285 ], [ %win.1, %land.lhs.true295 ], [ %win.1, %if.else293 ], [ %spec.select3, %land.lhs.true300 ], !dbg !2967
  call void @llvm.dbg.value(metadata i32 %win.9, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !2968

sw.bb308:                                         ; preds = %do.body104
  %bf.load309 = load i32, i32* %34, align 8, !dbg !2969
  %bf.clear310 = and i32 %bf.load309, 65535, !dbg !2969
  %cmp311 = icmp eq i32 %bf.clear310, 43, !dbg !2969
  br i1 %cmp311, label %land.lhs.true313, label %do.cond580, !dbg !2971

land.lhs.true313:                                 ; preds = %sw.bb308
  %61 = load i32*, i32** %35, align 8, !dbg !2972
  %bf.load318 = load i32, i32* %61, align 8, !dbg !2972
  %bf.clear319 = and i32 %bf.load318, 65535, !dbg !2972
  %cmp320 = icmp eq i32 %bf.clear319, 74, !dbg !2973
  br i1 %cmp320, label %if.then331, label %lor.lhs.false322, !dbg !2974

lor.lhs.false322:                                 ; preds = %land.lhs.true313
  %cmp329 = icmp eq i32 %bf.clear319, 76, !dbg !2975
  br i1 %cmp329, label %if.then331, label %do.cond580, !dbg !2976

if.then331:                                       ; preds = %lor.lhs.false322, %land.lhs.true313
  call void @llvm.dbg.value(metadata i32 1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !2977

sw.bb333:                                         ; preds = %do.body104
  %bf.load334 = load i32, i32* %34, align 8, !dbg !2978
  %bf.clear335 = and i32 %bf.load334, 65535, !dbg !2978
  %cmp336 = icmp eq i32 %bf.clear335, 43, !dbg !2978
  br i1 %cmp336, label %land.lhs.true338, label %do.cond580, !dbg !2979

land.lhs.true338:                                 ; preds = %sw.bb333
  %62 = load i32*, i32** %35, align 8, !dbg !2980
  %bf.load343 = load i32, i32* %62, align 8, !dbg !2980
  %bf.clear344 = and i32 %bf.load343, 65535, !dbg !2980
  %cmp345 = icmp eq i32 %bf.clear344, 75, !dbg !2981
  br i1 %cmp345, label %if.then356, label %lor.lhs.false347, !dbg !2982

lor.lhs.false347:                                 ; preds = %land.lhs.true338
  %cmp354 = icmp eq i32 %bf.clear344, 77, !dbg !2983
  br i1 %cmp354, label %if.then356, label %do.cond580, !dbg !2984

if.then356:                                       ; preds = %lor.lhs.false347, %land.lhs.true338
  call void @llvm.dbg.value(metadata i32 1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !2985

sw.bb358:                                         ; preds = %do.body104, %do.body104
  %bf.load359 = load i32, i32* %34, align 8, !dbg !2986
  %bf.clear360 = and i32 %bf.load359, 65535, !dbg !2986
  %cmp361 = icmp eq i32 %bf.clear360, 32, !dbg !2988
  br i1 %cmp361, label %if.then377, label %lor.lhs.false363, !dbg !2989

lor.lhs.false363:                                 ; preds = %sw.bb358
  %cmp366 = icmp eq i32 %bf.clear360, 33, !dbg !2990
  br i1 %cmp366, label %land.lhs.true368, label %do.cond580, !dbg !2991

land.lhs.true368:                                 ; preds = %lor.lhs.false363
  %bf.lshr370 = lshr i32 %bf.load359, 16, !dbg !2992
  %bf.clear371 = and i32 %bf.lshr370, 255, !dbg !2992
  %idxprom372 = zext i32 %bf.clear371 to i64, !dbg !2992
  %arrayidx373 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom372, !dbg !2992
  %63 = load i8, i8* %arrayidx373, align 1, !dbg !2992
  %cmp375 = icmp eq i8 %63, 17, !dbg !2993
  br i1 %cmp375, label %if.then377, label %do.cond580, !dbg !2994

if.then377:                                       ; preds = %land.lhs.true368, %sw.bb358
  call void @llvm.dbg.value(metadata i32 1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !2995

sw.bb379:                                         ; preds = %do.body104, %do.body104
  %bf.load380 = load i32, i32* %34, align 8, !dbg !2996
  %bf.clear381 = and i32 %bf.load380, 65535, !dbg !2996
  %cmp382 = icmp eq i32 %bf.clear381, 32, !dbg !2998
  br i1 %cmp382, label %land.lhs.true384, label %do.cond580, !dbg !2999

land.lhs.true384:                                 ; preds = %sw.bb379
  %call385 = call i32 @lookup_constraint(i8* %p.0) #6, !dbg !3000
  %call386 = call zeroext i8 @constraint_satisfied_p(%struct.rtx_def* %op.1, i32 %call385) #6, !dbg !3000
  %tobool388 = icmp eq i8 %call386, 0, !dbg !3000
  %spec.select4 = select i1 %tobool388, i32 %win.1, i32 1, !dbg !3001
  br label %do.cond580, !dbg !3001

sw.bb391:                                         ; preds = %do.body104
  %bf.load392 = load i32, i32* %34, align 8, !dbg !3002
  %bf.clear393 = and i32 %bf.load392, 65535, !dbg !3002
  %cmp394 = icmp eq i32 %bf.clear393, 30, !dbg !3002
  br i1 %cmp394, label %do.cond580, label %lor.lhs.false396, !dbg !3004

lor.lhs.false396:                                 ; preds = %sw.bb391
  %cmp399 = icmp eq i32 %bf.clear393, 32, !dbg !3005
  br i1 %cmp399, label %land.lhs.true401, label %sw.bb409, !dbg !3006

land.lhs.true401:                                 ; preds = %lor.lhs.false396
  %bf.clear404 = and i32 %bf.load392, 16711680, !dbg !3007
  %cmp405 = icmp eq i32 %bf.clear404, 0, !dbg !3008
  br i1 %cmp405, label %do.cond580, label %sw.bb409, !dbg !3009

sw.bb409:                                         ; preds = %do.body104.sw.bb409_crit_edge, %lor.lhs.false396, %land.lhs.true401
  %bf.clear411.pre-phi = phi i32 [ %.pre19, %do.body104.sw.bb409_crit_edge ], [ %bf.clear393, %lor.lhs.false396 ], [ 32, %land.lhs.true401 ], !dbg !2862
  %idxprom412 = zext i32 %bf.clear411.pre-phi to i64, !dbg !2862
  %arrayidx413 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom412, !dbg !2862
  %64 = load i32, i32* %arrayidx413, align 4, !dbg !2862
  %cmp414 = icmp eq i32 %64, 9, !dbg !2862
  %spec.select5 = select i1 %cmp414, i32 1, i32 %win.1, !dbg !3010
  call void @llvm.dbg.value(metadata i32 %spec.select5, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !3011

sw.bb418:                                         ; preds = %do.body104
  %bf.load419 = load i32, i32* %34, align 8, !dbg !3012
  %bf.clear420 = and i32 %bf.load419, 65535, !dbg !3012
  %cmp421 = icmp eq i32 %bf.clear420, 30, !dbg !3012
  br i1 %cmp421, label %if.then434, label %lor.lhs.false423, !dbg !3014

lor.lhs.false423:                                 ; preds = %sw.bb418
  %cmp426 = icmp eq i32 %bf.clear420, 32, !dbg !3015
  br i1 %cmp426, label %land.lhs.true428, label %do.cond580, !dbg !3016

land.lhs.true428:                                 ; preds = %lor.lhs.false423
  %bf.clear431 = and i32 %bf.load419, 16711680, !dbg !3017
  %cmp432 = icmp eq i32 %bf.clear431, 0, !dbg !3018
  br i1 %cmp432, label %if.then434, label %do.cond580, !dbg !3019

if.then434:                                       ; preds = %land.lhs.true428, %sw.bb418
  call void @llvm.dbg.value(metadata i32 1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !3020

sw.bb436:                                         ; preds = %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104
  %bf.load437 = load i32, i32* %34, align 8, !dbg !3021
  %bf.clear438 = and i32 %bf.load437, 65535, !dbg !3021
  %cmp439 = icmp eq i32 %bf.clear438, 30, !dbg !3021
  br i1 %cmp439, label %land.lhs.true441, label %do.cond580, !dbg !3022

land.lhs.true441:                                 ; preds = %sw.bb436
  %65 = load i64, i64* %arrayidx443, align 8, !dbg !3023
  %call444 = call i32 @lookup_constraint(i8* %p.0) #6, !dbg !3023
  %call445 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %65, i32 %call444) #6, !dbg !3023
  %tobool447 = icmp eq i8 %call445, 0, !dbg !3023
  %spec.select6 = select i1 %tobool447, i32 %win.1, i32 1, !dbg !3024
  br label %do.cond580, !dbg !3024

sw.bb450:                                         ; preds = %do.body104
  %bf.load451 = load i32, i32* %34, align 8, !dbg !3025
  %bf.clear452 = and i32 %bf.load451, 65535, !dbg !3025
  %cmp453 = icmp eq i32 %bf.clear452, 43, !dbg !3025
  br i1 %cmp453, label %land.lhs.true455, label %do.cond580, !dbg !3027

land.lhs.true455:                                 ; preds = %sw.bb450
  br i1 %cmp490, label %land.lhs.true458, label %lor.lhs.false461, !dbg !3028

land.lhs.true458:                                 ; preds = %land.lhs.true455
  %call459 = call i32 @offsettable_memref_p(%struct.rtx_def* %op.1) #7, !dbg !3029
  %tobool460 = icmp eq i32 %call459, 0, !dbg !3029
  br i1 %tobool460, label %if.then487, label %lor.lhs.false461, !dbg !3030

lor.lhs.false461:                                 ; preds = %land.lhs.true458, %land.lhs.true455
  br i1 %cmp502, label %land.lhs.true464, label %lor.lhs.false476, !dbg !3031

land.lhs.true464:                                 ; preds = %lor.lhs.false461
  %bf.load465 = load i32, i32* %34, align 8, !dbg !3032
  %bf.clear466 = and i32 %bf.load465, 65535, !dbg !3032
  %idxprom467 = zext i32 %bf.clear466 to i64, !dbg !3032
  %arrayidx468 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom467, !dbg !3032
  %66 = load i32, i32* %arrayidx468, align 4, !dbg !3032
  %cmp469 = icmp eq i32 %66, 9, !dbg !3032
  br i1 %cmp469, label %lor.lhs.false476, label %lor.lhs.false471, !dbg !3033

lor.lhs.false471:                                 ; preds = %land.lhs.true464
  %cmp474 = icmp eq i32 %bf.clear466, 43, !dbg !3034
  br i1 %cmp474, label %lor.lhs.false476, label %if.then487, !dbg !3035

lor.lhs.false476:                                 ; preds = %lor.lhs.false471, %land.lhs.true464, %lor.lhs.false461
  %67 = load i32, i32* @reload_in_progress, align 4, !dbg !3036
  %tobool477 = icmp eq i32 %67, 0, !dbg !3036
  br i1 %tobool477, label %do.cond580, label %land.lhs.true478, !dbg !3037

land.lhs.true478:                                 ; preds = %lor.lhs.false476
  %bf.load479 = load i32, i32* %34, align 8, !dbg !3038
  %bf.clear480 = and i32 %bf.load479, 65535, !dbg !3038
  %cmp481 = icmp eq i32 %bf.clear480, 37, !dbg !3038
  br i1 %cmp481, label %land.lhs.true483, label %if.then487, !dbg !3039

land.lhs.true483:                                 ; preds = %land.lhs.true478
  %call484 = call fastcc i32 @rhs_regno(%struct.rtx_def* %op.1) #7, !dbg !3040
  %cmp485 = icmp ugt i32 %call484, 52, !dbg !3041
  br i1 %cmp485, label %do.cond580, label %if.then487, !dbg !3042

if.then487:                                       ; preds = %land.lhs.true458, %land.lhs.true483, %land.lhs.true478, %lor.lhs.false471
  call void @llvm.dbg.value(metadata i32 1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !3043

sw.bb489:                                         ; preds = %do.body104
  br i1 %cmp490, label %land.lhs.true492, label %lor.lhs.false495, !dbg !3044

land.lhs.true492:                                 ; preds = %sw.bb489
  %call493 = call i32 @offsettable_memref_p(%struct.rtx_def* %op.1) #7, !dbg !3045
  %tobool494 = icmp eq i32 %call493, 0, !dbg !3045
  br i1 %tobool494, label %lor.lhs.false495, label %if.then527, !dbg !3046

lor.lhs.false495:                                 ; preds = %land.lhs.true492, %sw.bb489
  br i1 %cmp496, label %land.lhs.true498, label %lor.lhs.false501, !dbg !3047

land.lhs.true498:                                 ; preds = %lor.lhs.false495
  %call499 = call i32 @offsettable_nonstrict_memref_p(%struct.rtx_def* %op.1) #7, !dbg !3048
  %tobool500 = icmp eq i32 %call499, 0, !dbg !3048
  br i1 %tobool500, label %lor.lhs.false501, label %if.then527, !dbg !3049

lor.lhs.false501:                                 ; preds = %land.lhs.true498, %lor.lhs.false495
  br i1 %cmp502, label %land.lhs.true504, label %lor.lhs.false516, !dbg !3050

land.lhs.true504:                                 ; preds = %lor.lhs.false501
  %bf.load505 = load i32, i32* %34, align 8, !dbg !3051
  %bf.clear506 = and i32 %bf.load505, 65535, !dbg !3051
  %idxprom507 = zext i32 %bf.clear506 to i64, !dbg !3051
  %arrayidx508 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom507, !dbg !3051
  %68 = load i32, i32* %arrayidx508, align 4, !dbg !3051
  %cmp509 = icmp eq i32 %68, 9, !dbg !3051
  br i1 %cmp509, label %if.then527, label %lor.lhs.false511, !dbg !3052

lor.lhs.false511:                                 ; preds = %land.lhs.true504
  %cmp514 = icmp eq i32 %bf.clear506, 43, !dbg !3053
  br i1 %cmp514, label %if.then527, label %lor.lhs.false516, !dbg !3054

lor.lhs.false516:                                 ; preds = %lor.lhs.false511, %lor.lhs.false501
  %69 = load i32, i32* @reload_in_progress, align 4, !dbg !3055
  %tobool517 = icmp eq i32 %69, 0, !dbg !3055
  br i1 %tobool517, label %do.cond580, label %land.lhs.true518, !dbg !3056

land.lhs.true518:                                 ; preds = %lor.lhs.false516
  %bf.load519 = load i32, i32* %34, align 8, !dbg !3057
  %bf.clear520 = and i32 %bf.load519, 65535, !dbg !3057
  %cmp521 = icmp eq i32 %bf.clear520, 37, !dbg !3057
  br i1 %cmp521, label %land.lhs.true523, label %do.cond580, !dbg !3058

land.lhs.true523:                                 ; preds = %land.lhs.true518
  %call524 = call fastcc i32 @rhs_regno(%struct.rtx_def* %op.1) #7, !dbg !3059
  %cmp525 = icmp ugt i32 %call524, 52, !dbg !3060
  br i1 %cmp525, label %if.then527, label %do.cond580, !dbg !3061

if.then527:                                       ; preds = %land.lhs.true492, %land.lhs.true498, %land.lhs.true523, %lor.lhs.false511, %land.lhs.true504
  call void @llvm.dbg.value(metadata i32 1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !3062

sw.default:                                       ; preds = %do.body104
  %cmp529 = icmp eq i8 %37, 114, !dbg !3063
  br i1 %cmp529, label %cond.end535, label %cond.false532, !dbg !3064

cond.false532:                                    ; preds = %sw.default
  %call533 = call i32 @lookup_constraint(i8* %p.0) #6, !dbg !3065
  %call534 = call i32 @regclass_for_constraint(i32 %call533) #6, !dbg !3065
  br label %cond.end535, !dbg !3064

cond.end535:                                      ; preds = %sw.default, %cond.false532
  %cond536 = phi i32 [ %call534, %cond.false532 ], [ 13, %sw.default ], !dbg !3064
  call void @llvm.dbg.value(metadata i32 %cond536, metadata !2743, metadata !DIExpression()), !dbg !3066
  %cmp537 = icmp eq i32 %cond536, 0, !dbg !3067
  br i1 %cmp537, label %if.else572, label %if.then539, !dbg !3069

if.then539:                                       ; preds = %cond.end535
  br i1 %cmp502, label %if.then570, label %lor.lhs.false542, !dbg !3070

lor.lhs.false542:                                 ; preds = %if.then539
  br i1 %cmp496, label %land.lhs.true545, label %lor.lhs.false562, !dbg !3073

land.lhs.true545:                                 ; preds = %lor.lhs.false542
  %bf.load546 = load i32, i32* %34, align 8, !dbg !3074
  %bf.clear547 = and i32 %bf.load546, 65535, !dbg !3074
  %cmp548 = icmp eq i32 %bf.clear547, 37, !dbg !3074
  br i1 %cmp548, label %land.lhs.true550, label %lor.lhs.false554, !dbg !3075

land.lhs.true550:                                 ; preds = %land.lhs.true545
  %call551 = call fastcc i32 @rhs_regno(%struct.rtx_def* %op.1) #7, !dbg !3076
  %cmp552 = icmp ugt i32 %call551, 52, !dbg !3077
  br i1 %cmp552, label %if.then570, label %lor.lhs.false554, !dbg !3078

lor.lhs.false554:                                 ; preds = %land.lhs.true550, %land.lhs.true545
  br i1 true, label %land.lhs.true557, label %lor.lhs.false554.lor.lhs.false562_crit_edge, !dbg !3079

lor.lhs.false554.lor.lhs.false562_crit_edge:      ; preds = %lor.lhs.false554
  br label %lor.lhs.false562, !dbg !3079

land.lhs.true557:                                 ; preds = %lor.lhs.false554
  %bf.load558 = load i32, i32* %34, align 8, !dbg !3080
  %bf.clear559 = and i32 %bf.load558, 65535, !dbg !3080
  %cmp560 = icmp eq i32 %bf.clear559, 38, !dbg !3081
  br i1 %cmp560, label %if.then570, label %lor.lhs.false562, !dbg !3082

lor.lhs.false562:                                 ; preds = %lor.lhs.false554.lor.lhs.false562_crit_edge, %lor.lhs.false542, %land.lhs.true557
  %bf.load563 = load i32, i32* %34, align 8, !dbg !3083
  %bf.clear564 = and i32 %bf.load563, 65535, !dbg !3083
  %cmp565 = icmp eq i32 %bf.clear564, 37, !dbg !3083
  br i1 %cmp565, label %land.lhs.true567, label %do.cond580, !dbg !3084

land.lhs.true567:                                 ; preds = %lor.lhs.false562
  %call568 = call i32 @reg_fits_class_p(%struct.rtx_def* %op.1, i32 %cond536, i32 %offset.1, i32 %bf.clear) #7, !dbg !3085
  %tobool569 = icmp eq i32 %call568, 0, !dbg !3085
  br i1 %tobool569, label %do.cond580, label %if.then570, !dbg !3086

if.then570:                                       ; preds = %land.lhs.true567, %land.lhs.true557, %land.lhs.true550, %if.then539
  call void @llvm.dbg.value(metadata i32 1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580, !dbg !3087

if.else572:                                       ; preds = %cond.end535
  %call573 = call i32 @lookup_constraint(i8* %p.0) #6, !dbg !3088
  %call574 = call zeroext i8 @constraint_satisfied_p(%struct.rtx_def* %op.1, i32 %call573) #6, !dbg !3088
  %tobool575 = icmp eq i8 %call574, 0, !dbg !3088
  %.win.1 = select i1 %tobool575, i32 %win.1, i32 1
  call void @llvm.dbg.value(metadata i32 %.win.1, metadata !2732, metadata !DIExpression()), !dbg !2813
  br label %do.cond580

do.cond580.loopexit:                              ; preds = %do.body112
  %incdec.ptr.lcssa = phi i8* [ %incdec.ptr, %do.body112 ], !dbg !2867
  br label %do.cond580, !dbg !3090

do.cond580:                                       ; preds = %do.cond580.loopexit, %land.lhs.true567, %lor.lhs.false184, %lor.lhs.false205, %lor.lhs.false213, %cond.end, %cond.end275, %lor.lhs.false476, %lor.lhs.false516, %land.lhs.true441, %land.lhs.true384, %sw.bb109, %sw.bb110, %sw.bb118, %if.end180, %sw.bb219, %if.end307, %sw.bb409, %do.body104, %if.then189, %if.then216, %if.then208, %if.then331, %lor.lhs.false322, %sw.bb308, %if.then356, %lor.lhs.false347, %sw.bb333, %if.then377, %land.lhs.true368, %lor.lhs.false363, %sw.bb379, %land.lhs.true401, %sw.bb391, %if.then434, %land.lhs.true428, %lor.lhs.false423, %sw.bb436, %if.then487, %land.lhs.true483, %sw.bb450, %if.then527, %land.lhs.true523, %land.lhs.true518, %lor.lhs.false562, %if.then570, %if.else572
  %len.0 = phi i64 [ %call107, %sw.bb409 ], [ %call107, %if.end307 ], [ %call107, %sw.bb219 ], [ 0, %if.end180 ], [ %call107, %sw.bb118 ], [ %call107, %sw.bb110 ], [ %call107, %sw.bb109 ], [ 0, %do.body104 ], [ %call107, %if.then189 ], [ %call107, %lor.lhs.false184 ], [ %call107, %lor.lhs.false213 ], [ %call107, %if.then216 ], [ %call107, %lor.lhs.false205 ], [ %call107, %if.then208 ], [ %call107, %cond.end ], [ %call107, %cond.end275 ], [ %call107, %if.then331 ], [ %call107, %lor.lhs.false322 ], [ %call107, %sw.bb308 ], [ %call107, %if.then356 ], [ %call107, %lor.lhs.false347 ], [ %call107, %sw.bb333 ], [ %call107, %if.then377 ], [ %call107, %land.lhs.true368 ], [ %call107, %lor.lhs.false363 ], [ %call107, %land.lhs.true384 ], [ %call107, %sw.bb379 ], [ %call107, %land.lhs.true401 ], [ %call107, %sw.bb391 ], [ %call107, %if.then434 ], [ %call107, %land.lhs.true428 ], [ %call107, %lor.lhs.false423 ], [ %call107, %land.lhs.true441 ], [ %call107, %sw.bb436 ], [ %call107, %if.then487 ], [ %call107, %land.lhs.true483 ], [ %call107, %lor.lhs.false476 ], [ %call107, %sw.bb450 ], [ %call107, %if.then527 ], [ %call107, %land.lhs.true523 ], [ %call107, %land.lhs.true518 ], [ %call107, %lor.lhs.false516 ], [ %call107, %lor.lhs.false562 ], [ %call107, %land.lhs.true567 ], [ %call107, %if.then570 ], [ %call107, %if.else572 ], [ 0, %do.cond580.loopexit ], !dbg !2813
  %win.22 = phi i32 [ %spec.select5, %sw.bb409 ], [ %win.9, %if.end307 ], [ 1, %sw.bb219 ], [ %spec.select2, %if.end180 ], [ %win.1, %sw.bb118 ], [ %win.1, %sw.bb110 ], [ %win.1, %sw.bb109 ], [ %win.1, %do.body104 ], [ 1, %if.then189 ], [ %win.1, %lor.lhs.false184 ], [ %win.1, %lor.lhs.false213 ], [ 1, %if.then216 ], [ %win.1, %lor.lhs.false205 ], [ 1, %if.then208 ], [ %win.1, %cond.end ], [ %win.1, %cond.end275 ], [ 1, %if.then331 ], [ %win.1, %lor.lhs.false322 ], [ %win.1, %sw.bb308 ], [ 1, %if.then356 ], [ %win.1, %lor.lhs.false347 ], [ %win.1, %sw.bb333 ], [ 1, %if.then377 ], [ %win.1, %land.lhs.true368 ], [ %win.1, %lor.lhs.false363 ], [ %spec.select4, %land.lhs.true384 ], [ %win.1, %sw.bb379 ], [ %win.1, %land.lhs.true401 ], [ %win.1, %sw.bb391 ], [ 1, %if.then434 ], [ %win.1, %land.lhs.true428 ], [ %win.1, %lor.lhs.false423 ], [ %spec.select6, %land.lhs.true441 ], [ %win.1, %sw.bb436 ], [ 1, %if.then487 ], [ %win.1, %land.lhs.true483 ], [ %win.1, %lor.lhs.false476 ], [ %win.1, %sw.bb450 ], [ 1, %if.then527 ], [ %win.1, %land.lhs.true523 ], [ %win.1, %land.lhs.true518 ], [ %win.1, %lor.lhs.false516 ], [ %win.1, %lor.lhs.false562 ], [ %win.1, %land.lhs.true567 ], [ 1, %if.then570 ], [ %.win.1, %if.else572 ], [ %win.1, %do.cond580.loopexit ], !dbg !2813
  %p.2 = phi i8* [ %p.0, %sw.bb409 ], [ %p.0, %if.end307 ], [ %p.0, %sw.bb219 ], [ %40, %if.end180 ], [ %p.0, %sw.bb118 ], [ %p.0, %sw.bb110 ], [ %p.0, %sw.bb109 ], [ %p.0, %do.body104 ], [ %p.0, %if.then189 ], [ %p.0, %lor.lhs.false184 ], [ %p.0, %lor.lhs.false213 ], [ %p.0, %if.then216 ], [ %p.0, %lor.lhs.false205 ], [ %p.0, %if.then208 ], [ %p.0, %cond.end ], [ %p.0, %cond.end275 ], [ %p.0, %if.then331 ], [ %p.0, %lor.lhs.false322 ], [ %p.0, %sw.bb308 ], [ %p.0, %if.then356 ], [ %p.0, %lor.lhs.false347 ], [ %p.0, %sw.bb333 ], [ %p.0, %if.then377 ], [ %p.0, %land.lhs.true368 ], [ %p.0, %lor.lhs.false363 ], [ %p.0, %land.lhs.true384 ], [ %p.0, %sw.bb379 ], [ %p.0, %land.lhs.true401 ], [ %p.0, %sw.bb391 ], [ %p.0, %if.then434 ], [ %p.0, %land.lhs.true428 ], [ %p.0, %lor.lhs.false423 ], [ %p.0, %land.lhs.true441 ], [ %p.0, %sw.bb436 ], [ %p.0, %if.then487 ], [ %p.0, %land.lhs.true483 ], [ %p.0, %lor.lhs.false476 ], [ %p.0, %sw.bb450 ], [ %p.0, %if.then527 ], [ %p.0, %land.lhs.true523 ], [ %p.0, %land.lhs.true518 ], [ %p.0, %lor.lhs.false516 ], [ %p.0, %lor.lhs.false562 ], [ %p.0, %land.lhs.true567 ], [ %p.0, %if.then570 ], [ %p.0, %if.else572 ], [ %incdec.ptr.lcssa, %do.cond580.loopexit ], !dbg !2813
  %seen_earlyclobber_at.3 = phi i32 [ %seen_earlyclobber_at.1, %sw.bb409 ], [ %seen_earlyclobber_at.1, %if.end307 ], [ %seen_earlyclobber_at.1, %sw.bb219 ], [ %seen_earlyclobber_at.1, %if.end180 ], [ %spec.select, %sw.bb118 ], [ %seen_earlyclobber_at.1, %sw.bb110 ], [ %seen_earlyclobber_at.1, %sw.bb109 ], [ %seen_earlyclobber_at.1, %do.body104 ], [ %seen_earlyclobber_at.1, %if.then189 ], [ %seen_earlyclobber_at.1, %lor.lhs.false184 ], [ %seen_earlyclobber_at.1, %lor.lhs.false213 ], [ %seen_earlyclobber_at.1, %if.then216 ], [ %seen_earlyclobber_at.1, %lor.lhs.false205 ], [ %seen_earlyclobber_at.1, %if.then208 ], [ %seen_earlyclobber_at.1, %cond.end ], [ %seen_earlyclobber_at.1, %cond.end275 ], [ %seen_earlyclobber_at.1, %if.then331 ], [ %seen_earlyclobber_at.1, %lor.lhs.false322 ], [ %seen_earlyclobber_at.1, %sw.bb308 ], [ %seen_earlyclobber_at.1, %if.then356 ], [ %seen_earlyclobber_at.1, %lor.lhs.false347 ], [ %seen_earlyclobber_at.1, %sw.bb333 ], [ %seen_earlyclobber_at.1, %if.then377 ], [ %seen_earlyclobber_at.1, %land.lhs.true368 ], [ %seen_earlyclobber_at.1, %lor.lhs.false363 ], [ %seen_earlyclobber_at.1, %land.lhs.true384 ], [ %seen_earlyclobber_at.1, %sw.bb379 ], [ %seen_earlyclobber_at.1, %land.lhs.true401 ], [ %seen_earlyclobber_at.1, %sw.bb391 ], [ %seen_earlyclobber_at.1, %if.then434 ], [ %seen_earlyclobber_at.1, %land.lhs.true428 ], [ %seen_earlyclobber_at.1, %lor.lhs.false423 ], [ %seen_earlyclobber_at.1, %land.lhs.true441 ], [ %seen_earlyclobber_at.1, %sw.bb436 ], [ %seen_earlyclobber_at.1, %if.then487 ], [ %seen_earlyclobber_at.1, %land.lhs.true483 ], [ %seen_earlyclobber_at.1, %lor.lhs.false476 ], [ %seen_earlyclobber_at.1, %sw.bb450 ], [ %seen_earlyclobber_at.1, %if.then527 ], [ %seen_earlyclobber_at.1, %land.lhs.true523 ], [ %seen_earlyclobber_at.1, %land.lhs.true518 ], [ %seen_earlyclobber_at.1, %lor.lhs.false516 ], [ %seen_earlyclobber_at.1, %lor.lhs.false562 ], [ %seen_earlyclobber_at.1, %land.lhs.true567 ], [ %seen_earlyclobber_at.1, %if.then570 ], [ %seen_earlyclobber_at.1, %if.else572 ], [ %seen_earlyclobber_at.1, %do.cond580.loopexit ], !dbg !2788
  %funny_match_index.3 = phi i32 [ %funny_match_index.1, %sw.bb409 ], [ %funny_match_index.1, %if.end307 ], [ %funny_match_index.1, %sw.bb219 ], [ %funny_match_index.2, %if.end180 ], [ %funny_match_index.1, %sw.bb118 ], [ %funny_match_index.1, %sw.bb110 ], [ %funny_match_index.1, %sw.bb109 ], [ %funny_match_index.1, %do.body104 ], [ %funny_match_index.1, %if.then189 ], [ %funny_match_index.1, %lor.lhs.false184 ], [ %funny_match_index.1, %lor.lhs.false213 ], [ %funny_match_index.1, %if.then216 ], [ %funny_match_index.1, %lor.lhs.false205 ], [ %funny_match_index.1, %if.then208 ], [ %funny_match_index.1, %cond.end ], [ %funny_match_index.1, %cond.end275 ], [ %funny_match_index.1, %if.then331 ], [ %funny_match_index.1, %lor.lhs.false322 ], [ %funny_match_index.1, %sw.bb308 ], [ %funny_match_index.1, %if.then356 ], [ %funny_match_index.1, %lor.lhs.false347 ], [ %funny_match_index.1, %sw.bb333 ], [ %funny_match_index.1, %if.then377 ], [ %funny_match_index.1, %land.lhs.true368 ], [ %funny_match_index.1, %lor.lhs.false363 ], [ %funny_match_index.1, %land.lhs.true384 ], [ %funny_match_index.1, %sw.bb379 ], [ %funny_match_index.1, %land.lhs.true401 ], [ %funny_match_index.1, %sw.bb391 ], [ %funny_match_index.1, %if.then434 ], [ %funny_match_index.1, %land.lhs.true428 ], [ %funny_match_index.1, %lor.lhs.false423 ], [ %funny_match_index.1, %land.lhs.true441 ], [ %funny_match_index.1, %sw.bb436 ], [ %funny_match_index.1, %if.then487 ], [ %funny_match_index.1, %land.lhs.true483 ], [ %funny_match_index.1, %lor.lhs.false476 ], [ %funny_match_index.1, %sw.bb450 ], [ %funny_match_index.1, %if.then527 ], [ %funny_match_index.1, %land.lhs.true523 ], [ %funny_match_index.1, %land.lhs.true518 ], [ %funny_match_index.1, %lor.lhs.false516 ], [ %funny_match_index.1, %lor.lhs.false562 ], [ %funny_match_index.1, %land.lhs.true567 ], [ %funny_match_index.1, %if.then570 ], [ %funny_match_index.1, %if.else572 ], [ %funny_match_index.1, %do.cond580.loopexit ], !dbg !2788
  %c.1 = phi i32 [ %conv105, %sw.bb409 ], [ 109, %if.end307 ], [ 109, %sw.bb219 ], [ %conv105, %if.end180 ], [ 109, %sw.bb118 ], [ %conv105, %sw.bb110 ], [ 0, %sw.bb109 ], [ 0, %do.body104 ], [ 109, %if.then189 ], [ 109, %lor.lhs.false184 ], [ 109, %lor.lhs.false213 ], [ 109, %if.then216 ], [ 109, %lor.lhs.false205 ], [ 109, %if.then208 ], [ 109, %cond.end ], [ 109, %cond.end275 ], [ 109, %if.then331 ], [ 109, %lor.lhs.false322 ], [ 109, %sw.bb308 ], [ 109, %if.then356 ], [ 109, %lor.lhs.false347 ], [ 109, %sw.bb333 ], [ %conv105, %if.then377 ], [ %conv105, %land.lhs.true368 ], [ %conv105, %lor.lhs.false363 ], [ %conv105, %land.lhs.true384 ], [ %conv105, %sw.bb379 ], [ 109, %land.lhs.true401 ], [ 109, %sw.bb391 ], [ 109, %if.then434 ], [ 109, %land.lhs.true428 ], [ 109, %lor.lhs.false423 ], [ %conv105, %land.lhs.true441 ], [ %conv105, %sw.bb436 ], [ 109, %if.then487 ], [ 109, %land.lhs.true483 ], [ 109, %lor.lhs.false476 ], [ 109, %sw.bb450 ], [ 109, %if.then527 ], [ 109, %land.lhs.true523 ], [ 109, %land.lhs.true518 ], [ 109, %lor.lhs.false516 ], [ %conv105, %lor.lhs.false562 ], [ %conv105, %land.lhs.true567 ], [ %conv105, %if.then570 ], [ %conv105, %if.else572 ], [ 109, %do.cond580.loopexit ], !dbg !2813
  call void @llvm.dbg.value(metadata i32 %c.1, metadata !2710, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i32 %funny_match_index.3, metadata !2717, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i32 %seen_earlyclobber_at.3, metadata !2718, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i8* %p.2, metadata !2730, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.value(metadata i32 %win.22, metadata !2732, metadata !DIExpression()), !dbg !2813
  %sext = shl i64 %len.0, 32, !dbg !3090
  %idx.ext = ashr exact i64 %sext, 32, !dbg !3090
  %add.ptr = getelementptr inbounds i8, i8* %p.2, i64 %idx.ext, !dbg !3090
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2730, metadata !DIExpression()), !dbg !2813
  %tobool581 = icmp eq i32 %c.1, 0, !dbg !3091
  br i1 %tobool581, label %do.end582, label %do.cond580.do.body104_crit_edge, !dbg !3091, !llvm.loop !3092

do.cond580.do.body104_crit_edge:                  ; preds = %do.cond580
  %.pre17 = load i8, i8* %add.ptr, align 1, !dbg !2859
  br label %do.body104, !dbg !3091

do.end582:                                        ; preds = %do.cond580
  %win.22.lcssa = phi i32 [ %win.22, %do.cond580 ], !dbg !2813
  %seen_earlyclobber_at.3.lcssa = phi i32 [ %seen_earlyclobber_at.3, %do.cond580 ], !dbg !2788
  %funny_match_index.3.lcssa = phi i32 [ %funny_match_index.3, %do.cond580 ], !dbg !2788
  %add.ptr.lcssa = phi i8* [ %add.ptr, %do.cond580 ], !dbg !3090
  call void @llvm.dbg.value(metadata i32 %win.22.lcssa, metadata !2732, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.value(metadata i32 %seen_earlyclobber_at.3.lcssa, metadata !2718, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %funny_match_index.3.lcssa, metadata !2717, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i32 %win.22.lcssa, metadata !2732, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.value(metadata i32 %seen_earlyclobber_at.3.lcssa, metadata !2718, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %funny_match_index.3.lcssa, metadata !2717, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i32 %win.22.lcssa, metadata !2732, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.value(metadata i32 %seen_earlyclobber_at.3.lcssa, metadata !2718, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %funny_match_index.3.lcssa, metadata !2717, metadata !DIExpression()), !dbg !2749
  store i8* %add.ptr.lcssa, i8** %arrayidx37, align 8, !dbg !3094
  %tobool585 = icmp eq i32 %win.22.lcssa, 0, !dbg !3095
  %spec.select7 = select i1 %tobool585, i32 1, i32 %lose.0, !dbg !3097
  call void @llvm.dbg.value(metadata i32 %spec.select7, metadata !2721, metadata !DIExpression()), !dbg !2788
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3098
  call void @llvm.dbg.value(metadata i32 undef, metadata !2720, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2788
  br label %for.cond29, !dbg !3099, !llvm.loop !3100

for.end590:                                       ; preds = %for.cond29
  %lose.0.lcssa = phi i32 [ %lose.0, %for.cond29 ], !dbg !2807
  %seen_earlyclobber_at.0.lcssa = phi i32 [ %seen_earlyclobber_at.0, %for.cond29 ], !dbg !2808
  %funny_match_index.0.lcssa = phi i32 [ %funny_match_index.0, %for.cond29 ], !dbg !2809
  %.lcssa = phi i8 [ %17, %for.cond29 ], !dbg !2810
  call void @llvm.dbg.value(metadata i32 %lose.0.lcssa, metadata !2721, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %seen_earlyclobber_at.0.lcssa, metadata !2718, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %funny_match_index.0.lcssa, metadata !2717, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i32 %lose.0.lcssa, metadata !2721, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %seen_earlyclobber_at.0.lcssa, metadata !2718, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %funny_match_index.0.lcssa, metadata !2717, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i32 %lose.0.lcssa, metadata !2721, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %seen_earlyclobber_at.0.lcssa, metadata !2718, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %funny_match_index.0.lcssa, metadata !2717, metadata !DIExpression()), !dbg !2749
  %tobool591 = icmp eq i32 %lose.0.lcssa, 0, !dbg !3102
  br i1 %tobool591, label %if.then592, label %if.end686, !dbg !3103

if.then592:                                       ; preds = %for.end590
  %cmp597 = icmp sgt i32 %seen_earlyclobber_at.0.lcssa, -1, !dbg !3104
  %or.cond8 = and i1 %cmp490, %cmp597, !dbg !3106
  br i1 %or.cond8, label %for.cond600.preheader, label %if.end669, !dbg !3106

for.cond600.preheader:                            ; preds = %if.then592
  %70 = sext i32 %seen_earlyclobber_at.0.lcssa to i64, !dbg !3107
  br label %for.cond600, !dbg !3107

for.cond600:                                      ; preds = %for.cond600.preheader, %for.inc666
  %indvars.iv27 = phi i64 [ %70, %for.cond600.preheader ], [ %indvars.iv.next28, %for.inc666 ]
  %71 = phi i8 [ %.lcssa, %for.cond600.preheader ], [ %92, %for.inc666 ]
  %72 = phi i8 [ %.lcssa, %for.cond600.preheader ], [ %93, %for.inc666 ], !dbg !3109
  %lose.2 = phi i32 [ 0, %for.cond600.preheader ], [ %lose.5, %for.inc666 ], !dbg !2807
  call void @llvm.dbg.value(metadata i64 %indvars.iv27, metadata !2748, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.value(metadata i32 %lose.2, metadata !2721, metadata !DIExpression()), !dbg !2788
  %73 = sext i8 %72 to i64, !dbg !3112
  %cmp602 = icmp slt i64 %indvars.iv27, %73, !dbg !3112
  br i1 %cmp602, label %for.body604, label %if.end669.loopexit, !dbg !3107

for.body604:                                      ; preds = %for.cond600
  %arrayidx606 = getelementptr inbounds [30 x i32], [30 x i32]* %earlyclobber, i64 0, i64 %indvars.iv27, !dbg !3113
  %74 = load i32, i32* %arrayidx606, align 4, !dbg !3113
  %tobool607 = icmp eq i32 %74, 0, !dbg !3113
  br i1 %tobool607, label %for.inc666, label %land.lhs.true608, !dbg !3115

land.lhs.true608:                                 ; preds = %for.body604
  %arrayidx610 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv27, !dbg !3116
  %75 = bitcast %struct.rtx_def** %arrayidx610 to i32**, !dbg !3116
  %76 = load i32*, i32** %75, align 8, !dbg !3116
  %bf.load611 = load i32, i32* %76, align 8, !dbg !3116
  %bf.clear612 = and i32 %bf.load611, 65535, !dbg !3116
  %cmp613 = icmp eq i32 %bf.clear612, 37, !dbg !3116
  br i1 %cmp613, label %for.cond616.preheader, label %for.inc666, !dbg !3117

for.cond616.preheader:                            ; preds = %land.lhs.true608
  %77 = and i64 %indvars.iv27, 4294967295, !dbg !3118
  %78 = and i64 %indvars.iv27, 4294967295, !dbg !3118
  br label %for.cond616, !dbg !3118

for.cond616:                                      ; preds = %for.cond616.preheader, %for.inc662
  %indvars.iv25 = phi i64 [ 0, %for.cond616.preheader ], [ %indvars.iv.next26, %for.inc662 ], !dbg !3120
  %79 = phi i8 [ %71, %for.cond616.preheader ], [ %.pre, %for.inc662 ], !dbg !3120
  %lose.3 = phi i32 [ %lose.2, %for.cond616.preheader ], [ %lose.4, %for.inc662 ], !dbg !2807
  call void @llvm.dbg.value(metadata i32 %lose.3, metadata !2721, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i64 %indvars.iv25, metadata !2745, metadata !DIExpression()), !dbg !3111
  %80 = sext i8 %79 to i64, !dbg !3122
  %cmp618 = icmp slt i64 %indvars.iv25, %80, !dbg !3122
  br i1 %cmp618, label %for.body620, label %for.inc666.loopexit, !dbg !3118

for.body620:                                      ; preds = %for.cond616
  %arrayidx622 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv25, !dbg !3123
  %81 = bitcast %struct.rtx_def** %arrayidx622 to i32**, !dbg !3123
  %82 = load i32*, i32** %81, align 8, !dbg !3123
  %bf.load623 = load i32, i32* %82, align 8, !dbg !3123
  %bf.clear624 = and i32 %bf.load623, 65535, !dbg !3123
  %cmp625 = icmp eq i32 %bf.clear624, 43, !dbg !3123
  %83 = bitcast i32* %82 to %struct.rtx_def*, !dbg !3125
  br i1 %cmp625, label %land.lhs.true632, label %lor.lhs.false627, !dbg !3125

lor.lhs.false627:                                 ; preds = %for.body620
  %arrayidx629 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 4, i64 %indvars.iv25, !dbg !3126
  %84 = load i32, i32* %arrayidx629, align 4, !dbg !3126
  %cmp630 = icmp ne i32 %84, 1, !dbg !3127
  %cmp633 = icmp ne i64 %indvars.iv25, %77, !dbg !3128
  %or.cond9 = and i1 %cmp630, %cmp633, !dbg !3129
  br i1 %or.cond9, label %land.lhs.true635, label %for.inc662, !dbg !3129

land.lhs.true632:                                 ; preds = %for.body620
  %cmp633.old = icmp eq i64 %indvars.iv25, %78, !dbg !3128
  br i1 %cmp633.old, label %for.inc662, label %land.lhs.true635, !dbg !3130

land.lhs.true635:                                 ; preds = %land.lhs.true632, %lor.lhs.false627
  %arrayidx637 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 2, i64 %indvars.iv25, !dbg !3131
  %85 = load i8*, i8** %arrayidx637, align 8, !dbg !3131
  %86 = load i8, i8* %85, align 1, !dbg !3132
  %cmp639 = icmp eq i8 %86, 0, !dbg !3133
  br i1 %cmp639, label %for.inc662, label %land.lhs.true641, !dbg !3134

land.lhs.true641:                                 ; preds = %land.lhs.true635
  %arrayidx643 = getelementptr inbounds [30 x i32], [30 x i32]* %matching_operands, i64 0, i64 %indvars.iv25, !dbg !3135
  %87 = load i32, i32* %arrayidx643, align 4, !dbg !3135
  %88 = trunc i64 %indvars.iv27 to i32, !dbg !3136
  %cmp644 = icmp eq i32 %87, %88, !dbg !3136
  br i1 %cmp644, label %land.lhs.true646, label %land.lhs.true653, !dbg !3137

land.lhs.true646:                                 ; preds = %land.lhs.true641
  %89 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx610, align 8, !dbg !3138
  %call651 = call i32 @operands_match_p(%struct.rtx_def* %83, %struct.rtx_def* %89) #6, !dbg !3139
  %tobool652 = icmp eq i32 %call651, 0, !dbg !3139
  br i1 %tobool652, label %land.lhs.true646.land.lhs.true653_crit_edge, label %for.inc662, !dbg !3140

land.lhs.true646.land.lhs.true653_crit_edge:      ; preds = %land.lhs.true646
  %.pre15 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx622, align 8, !dbg !3141
  br label %land.lhs.true653, !dbg !3140

land.lhs.true653:                                 ; preds = %land.lhs.true646.land.lhs.true653_crit_edge, %land.lhs.true641
  %90 = phi %struct.rtx_def* [ %.pre15, %land.lhs.true646.land.lhs.true653_crit_edge ], [ %83, %land.lhs.true641 ], !dbg !3141
  %91 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx610, align 8, !dbg !3142
  %call658 = call i32 @safe_from_earlyclobber(%struct.rtx_def* %90, %struct.rtx_def* %91) #6, !dbg !3143
  %tobool659 = icmp eq i32 %call658, 0, !dbg !3143
  %spec.select10 = select i1 %tobool659, i32 1, i32 %lose.3, !dbg !3144
  br label %for.inc662, !dbg !3144

for.inc662:                                       ; preds = %land.lhs.true632, %land.lhs.true646, %land.lhs.true635, %land.lhs.true653, %lor.lhs.false627
  %lose.4 = phi i32 [ %lose.3, %land.lhs.true646 ], [ %lose.3, %land.lhs.true635 ], [ %lose.3, %land.lhs.true632 ], [ %lose.3, %lor.lhs.false627 ], [ %spec.select10, %land.lhs.true653 ], !dbg !2788
  call void @llvm.dbg.value(metadata i32 %lose.4, metadata !2721, metadata !DIExpression()), !dbg !2788
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !3145
  call void @llvm.dbg.value(metadata i32 undef, metadata !2745, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3111
  %.pre = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !3120
  br label %for.cond616, !dbg !3146, !llvm.loop !3147

for.inc666.loopexit:                              ; preds = %for.cond616
  %.lcssa35 = phi i8 [ %79, %for.cond616 ], !dbg !3120
  %lose.3.lcssa = phi i32 [ %lose.3, %for.cond616 ], !dbg !2807
  call void @llvm.dbg.value(metadata i32 %lose.3.lcssa, metadata !2721, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %lose.3.lcssa, metadata !2721, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %lose.3.lcssa, metadata !2721, metadata !DIExpression()), !dbg !2788
  br label %for.inc666, !dbg !3149

for.inc666:                                       ; preds = %for.inc666.loopexit, %for.body604, %land.lhs.true608
  %92 = phi i8 [ %71, %land.lhs.true608 ], [ %71, %for.body604 ], [ %.lcssa35, %for.inc666.loopexit ]
  %93 = phi i8 [ %72, %land.lhs.true608 ], [ %72, %for.body604 ], [ %.lcssa35, %for.inc666.loopexit ]
  %lose.5 = phi i32 [ %lose.2, %land.lhs.true608 ], [ %lose.2, %for.body604 ], [ %lose.3.lcssa, %for.inc666.loopexit ], !dbg !2807
  call void @llvm.dbg.value(metadata i32 %lose.5, metadata !2721, metadata !DIExpression()), !dbg !2788
  %indvars.iv.next28 = add nsw i64 %indvars.iv27, 1, !dbg !3149
  call void @llvm.dbg.value(metadata i32 undef, metadata !2748, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3111
  br label %for.cond600, !dbg !3150, !llvm.loop !3151

if.end669.loopexit:                               ; preds = %for.cond600
  %lose.2.lcssa = phi i32 [ %lose.2, %for.cond600 ], !dbg !2807
  call void @llvm.dbg.value(metadata i32 %lose.2.lcssa, metadata !2721, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %lose.2.lcssa, metadata !2721, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata i32 %lose.2.lcssa, metadata !2721, metadata !DIExpression()), !dbg !2788
  br label %if.end669, !dbg !3153

if.end669:                                        ; preds = %if.end669.loopexit, %if.then592
  %lose.6 = phi i32 [ 0, %if.then592 ], [ %lose.2.lcssa, %if.end669.loopexit ], !dbg !2807
  call void @llvm.dbg.value(metadata i32 %lose.6, metadata !2721, metadata !DIExpression()), !dbg !2788
  %tobool670 = icmp eq i32 %lose.6, 0, !dbg !3153
  br i1 %tobool670, label %while.cond.preheader, label %cleanup, !dbg !3155

while.cond.preheader:                             ; preds = %if.end669
  %94 = sext i32 %funny_match_index.0.lcssa to i64, !dbg !3156
  br label %while.cond, !dbg !3156

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %indvars.iv29 = phi i64 [ %94, %while.cond.preheader ], [ %indvars.iv.next30, %while.body ], !dbg !2788
  call void @llvm.dbg.value(metadata i64 %indvars.iv29, metadata !2717, metadata !DIExpression()), !dbg !2749
  %indvars.iv.next30 = add nsw i64 %indvars.iv29, -1, !dbg !3158
  call void @llvm.dbg.value(metadata i32 undef, metadata !2717, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2749
  %cmp672 = icmp sgt i64 %indvars.iv29, 0, !dbg !3159
  br i1 %cmp672, label %while.body, label %cleanup.loopexit, !dbg !3156

while.body:                                       ; preds = %while.cond
  %this_op676 = getelementptr inbounds [30 x %struct.funny_match], [30 x %struct.funny_match]* %funny_match, i64 0, i64 %indvars.iv.next30, i32 0, !dbg !3160
  %95 = load i32, i32* %this_op676, align 8, !dbg !3160
  %idxprom677 = sext i32 %95 to i64, !dbg !3162
  %arrayidx678 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %idxprom677, !dbg !3162
  %96 = bitcast %struct.rtx_def** %arrayidx678 to i64*, !dbg !3162
  %97 = load i64, i64* %96, align 8, !dbg !3162
  %other681 = getelementptr inbounds [30 x %struct.funny_match], [30 x %struct.funny_match]* %funny_match, i64 0, i64 %indvars.iv.next30, i32 1, !dbg !3163
  %98 = load i32, i32* %other681, align 4, !dbg !3163
  %idxprom682 = sext i32 %98 to i64, !dbg !3164
  %arrayidx683 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %idxprom682, !dbg !3164
  %99 = bitcast %struct.rtx_def** %arrayidx683 to i64*, !dbg !3165
  store i64 %97, i64* %99, align 8, !dbg !3165
  br label %while.cond, !dbg !3156, !llvm.loop !3166

cleanup.loopexit:                                 ; preds = %while.cond
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.end669
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end669 ], [ 1, %cleanup.loopexit ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end686, label %cleanup688

if.end686:                                        ; preds = %for.end590, %cleanup
  %100 = load i32, i32* @which_alternative, align 4, !dbg !3168
  %inc687 = add nsw i32 %100, 1, !dbg !3168
  store i32 %inc687, i32* @which_alternative, align 4, !dbg !3168
  br label %cleanup688, !dbg !3169

cleanup688:                                       ; preds = %cleanup, %if.end686, %for.end26
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end686 ], [ %cleanup.dest.slot.0, %cleanup ], [ 6, %for.end26 ]
  switch i32 %cleanup.dest.slot.1, label %cleanup703.loopexit [
    i32 0, label %do.cond693
    i32 6, label %do.cond693
  ]

do.cond693:                                       ; preds = %cleanup688, %cleanup688
  %101 = load i32, i32* @which_alternative, align 4, !dbg !3170
  %102 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 9), align 8, !dbg !3171
  %conv694 = sext i8 %102 to i32, !dbg !3172
  %cmp695 = icmp slt i32 %101, %conv694, !dbg !3173
  br i1 %cmp695, label %do.body, label %do.end697, !dbg !3174, !llvm.loop !3175

do.end697:                                        ; preds = %do.cond693
  store i32 -1, i32* @which_alternative, align 4, !dbg !3177
  br i1 %cmp496, label %if.then700, label %cleanup703, !dbg !3178

if.then700:                                       ; preds = %do.end697
  %call701 = call i32 @constrain_operands(i32 -1) #7, !dbg !3179
  br label %cleanup703, !dbg !3181

cleanup703.loopexit:                              ; preds = %cleanup688
  br label %cleanup703, !dbg !3182

cleanup703:                                       ; preds = %cleanup703.loopexit, %do.end697, %entry, %lor.lhs.false, %if.then700
  %retval.4 = phi i32 [ %call701, %if.then700 ], [ 1, %lor.lhs.false ], [ 1, %entry ], [ 0, %do.end697 ], [ 1, %cleanup703.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %3) #8, !dbg !3182
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %2) #8, !dbg !3182
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %1) #8, !dbg !3182
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %0) #8, !dbg !3182
  ret i32 %retval.4, !dbg !3182
}

; Function Attrs: nounwind uwtable
define dso_local i32 @asm_noperands(%struct.rtx_def* %body) local_unnamed_addr #5 !dbg !3183 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body, metadata !3188, metadata !DIExpression()), !dbg !3201
  %call = tail call %struct.rtx_def* @extract_asm_operands(%struct.rtx_def* %body) #7, !dbg !3202
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3189, metadata !DIExpression()), !dbg !3201
  call void @llvm.dbg.value(metadata i32 0, metadata !3190, metadata !DIExpression()), !dbg !3201
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !3203
  br i1 %cmp, label %cleanup123, label %if.end, !dbg !3205

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 0, !dbg !3206
  %bf.load = load i32, i32* %0, align 8, !dbg !3206
  %bf.clear = and i32 %bf.load, 65535, !dbg !3206
  %cmp1 = icmp eq i32 %bf.clear, 23, !dbg !3207
  br i1 %cmp1, label %if.end111, label %if.else, !dbg !3208

if.else:                                          ; preds = %if.end
  %cmp5 = icmp eq i32 %bf.clear, 15, !dbg !3209
  br i1 %cmp5, label %if.then6, label %if.end111, !dbg !3210

if.then6:                                         ; preds = %if.else
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3211
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !3211
  %1 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3211
  %arrayidx7 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 1, i64 0, !dbg !3211
  %2 = bitcast %struct.rtx_def** %arrayidx7 to i32**, !dbg !3211
  %3 = load i32*, i32** %2, align 8, !dbg !3211
  %bf.load8 = load i32, i32* %3, align 8, !dbg !3211
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !3211
  %cmp10 = icmp eq i32 %bf.clear9, 23, !dbg !3212
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 0, !dbg !3213
  %4 = load i32, i32* %num_elem, align 8, !dbg !3213
  br i1 %cmp10, label %for.cond.preheader, label %if.else81, !dbg !3214

for.cond.preheader:                               ; preds = %if.then6
  %5 = sext i32 %4 to i64, !dbg !3215
  br label %for.cond, !dbg !3215

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv8 = phi i64 [ %5, %for.cond.preheader ], [ %indvars.iv.next9, %for.inc ], !dbg !3217
  call void @llvm.dbg.value(metadata i64 %indvars.iv8, metadata !3191, metadata !DIExpression()), !dbg !3218
  %cmp16 = icmp sgt i64 %indvars.iv8, 0, !dbg !3219
  %6 = trunc i64 %indvars.iv8 to i32, !dbg !3215
  br i1 %cmp16, label %for.body, label %for.end, !dbg !3215

for.body:                                         ; preds = %for.cond
  %indvars.iv.next9 = add nsw i64 %indvars.iv8, -1, !dbg !3221
  %arrayidx22 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 1, i64 %indvars.iv.next9, !dbg !3221
  %7 = bitcast %struct.rtx_def** %arrayidx22 to i32**, !dbg !3221
  %8 = load i32*, i32** %7, align 8, !dbg !3221
  %bf.load23 = load i32, i32* %8, align 8, !dbg !3221
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !3221
  %cmp25 = icmp eq i32 %bf.clear24, 23, !dbg !3224
  br i1 %cmp25, label %for.end, label %if.end27, !dbg !3225

if.end27:                                         ; preds = %for.body
  %cmp38 = icmp eq i32 %bf.clear24, 25, !dbg !3226
  br i1 %cmp38, label %for.inc, label %cleanup107.loopexit2, !dbg !3228

for.inc:                                          ; preds = %if.end27
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3218
  br label %for.cond, !dbg !3229, !llvm.loop !3230

for.end:                                          ; preds = %for.body, %for.cond
  %indvars.iv8.lcssa = phi i64 [ %indvars.iv8, %for.body ], [ %indvars.iv8, %for.cond ], !dbg !3217
  %.lcssa = phi i32 [ %6, %for.body ], [ %6, %for.cond ], !dbg !3215
  call void @llvm.dbg.value(metadata i64 %indvars.iv8.lcssa, metadata !3191, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i64 %indvars.iv8.lcssa, metadata !3191, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !3191, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !3191, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !3191, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !3191, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !3190, metadata !DIExpression()), !dbg !3201
  call void @llvm.dbg.value(metadata i32 0, metadata !3191, metadata !DIExpression()), !dbg !3218
  %arrayidx74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !3232
  %rt_rtvec75 = bitcast %struct.object_block** %arrayidx74 to %struct.rtvec_def**, !dbg !3232
  %sext = shl i64 %indvars.iv8.lcssa, 32, !dbg !3234
  %9 = ashr exact i64 %sext, 32, !dbg !3234
  br label %for.cond41, !dbg !3234

for.cond41:                                       ; preds = %for.inc79, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc79 ], [ 0, %for.end ], !dbg !3235
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3191, metadata !DIExpression()), !dbg !3218
  %cmp42 = icmp slt i64 %indvars.iv, %9, !dbg !3236
  br i1 %cmp42, label %for.body43, label %cleanup107.loopexit, !dbg !3237

for.body43:                                       ; preds = %for.cond41
  %arrayidx50 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 1, i64 %indvars.iv, !dbg !3238
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx50, align 8, !dbg !3238
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !3195, metadata !DIExpression()), !dbg !3239
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !3240
  %bf.load51 = load i32, i32* %11, align 8, !dbg !3240
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !3240
  %cmp53 = icmp eq i32 %bf.clear52, 23, !dbg !3242
  br i1 %cmp53, label %if.end55, label %cleanup, !dbg !3243

if.end55:                                         ; preds = %for.body43
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3244
  %13 = bitcast %union.rtunion_def* %12 to i32**, !dbg !3244
  %14 = load i32*, i32** %13, align 8, !dbg !3244
  %bf.load59 = load i32, i32* %14, align 8, !dbg !3244
  %bf.clear60 = and i32 %bf.load59, 65535, !dbg !3244
  %cmp61 = icmp eq i32 %bf.clear60, 17, !dbg !3246
  br i1 %cmp61, label %if.end63, label %cleanup, !dbg !3247

if.end63:                                         ; preds = %if.end55
  %arrayidx70 = getelementptr inbounds i32, i32* %14, i64 8, !dbg !3248
  %rt_rtvec71 = bitcast i32* %arrayidx70 to %struct.rtvec_def**, !dbg !3248
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec71, align 8, !dbg !3248
  %16 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec75, align 8, !dbg !3249
  %cmp76 = icmp ne %struct.rtvec_def* %15, %16, !dbg !3250
  %. = zext i1 %cmp76 to i32, !dbg !3251
  br label %cleanup, !dbg !3251

cleanup:                                          ; preds = %if.end55, %for.body43, %if.end63
  %cleanup.dest.slot.0 = phi i32 [ 1, %for.body43 ], [ 1, %if.end55 ], [ %., %if.end63 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %for.inc79, label %cleanup107.loopexit

for.inc79:                                        ; preds = %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3252
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3218
  br label %for.cond41, !dbg !3253, !llvm.loop !3254

if.else81:                                        ; preds = %if.then6
  call void @llvm.dbg.value(metadata i32 %4, metadata !3191, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3218
  %17 = sext i32 %4 to i64, !dbg !3256
  br label %for.cond88, !dbg !3256

for.cond88:                                       ; preds = %for.inc103, %if.else81
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %for.inc103 ], [ %17, %if.else81 ]
  %indvars.iv.next11 = add nsw i64 %indvars.iv10, -1, !dbg !3259
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3218
  %cmp89 = icmp sgt i64 %indvars.iv.next11, 0, !dbg !3260
  br i1 %cmp89, label %for.body90, label %cleanup107.loopexit3, !dbg !3262

for.body90:                                       ; preds = %for.cond88
  %arrayidx97 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 1, i64 %indvars.iv.next11, !dbg !3263
  %18 = bitcast %struct.rtx_def** %arrayidx97 to i32**, !dbg !3263
  %19 = load i32*, i32** %18, align 8, !dbg !3263
  %bf.load98 = load i32, i32* %19, align 8, !dbg !3263
  %bf.clear99 = and i32 %bf.load98, 65535, !dbg !3263
  %cmp100 = icmp eq i32 %bf.clear99, 25, !dbg !3265
  br i1 %cmp100, label %for.inc103, label %cleanup107.loopexit3, !dbg !3266

for.inc103:                                       ; preds = %for.body90
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3218
  br label %for.cond88, !dbg !3267, !llvm.loop !3268

cleanup107.loopexit:                              ; preds = %cleanup, %for.cond41
  %cleanup.dest.slot.1.ph = phi i32 [ 0, %for.cond41 ], [ %cleanup.dest.slot.0, %cleanup ]
  br label %cleanup107

cleanup107.loopexit2:                             ; preds = %if.end27
  br label %cleanup107

cleanup107.loopexit3:                             ; preds = %for.cond88, %for.body90
  %cleanup.dest.slot.1.ph4 = phi i32 [ 0, %for.cond88 ], [ 1, %for.body90 ]
  br label %cleanup107

cleanup107:                                       ; preds = %cleanup107.loopexit3, %cleanup107.loopexit2, %cleanup107.loopexit
  %n_sets.1 = phi i32 [ %.lcssa, %cleanup107.loopexit ], [ 0, %cleanup107.loopexit2 ], [ 0, %cleanup107.loopexit3 ], !dbg !3201
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.1.ph, %cleanup107.loopexit ], [ 1, %cleanup107.loopexit2 ], [ %cleanup.dest.slot.1.ph4, %cleanup107.loopexit3 ]
  call void @llvm.dbg.value(metadata i32 %n_sets.1, metadata !3190, metadata !DIExpression()), !dbg !3201
  %cond = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond, label %if.end111, label %cleanup123

if.end111:                                        ; preds = %if.else, %cleanup107, %if.end
  %n_sets.3 = phi i32 [ 1, %if.end ], [ 0, %if.else ], [ %n_sets.1, %cleanup107 ], !dbg !3270
  call void @llvm.dbg.value(metadata i32 %n_sets.3, metadata !3190, metadata !DIExpression()), !dbg !3201
  %arrayidx114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !3271
  %rt_rtvec115 = bitcast %struct.object_block** %arrayidx114 to %struct.rtvec_def**, !dbg !3271
  %20 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec115, align 8, !dbg !3271
  %num_elem116 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %20, i64 0, i32 0, !dbg !3271
  %21 = load i32, i32* %num_elem116, align 8, !dbg !3271
  %u117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !3272
  %22 = getelementptr inbounds %union.u, %union.u* %u117, i64 1, i32 0, i32 0, i64 0, !dbg !3272
  %rt_rtvec120 = bitcast %union.rtunion_def* %22 to %struct.rtvec_def**, !dbg !3272
  %23 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec120, align 8, !dbg !3272
  %num_elem121 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %23, i64 0, i32 0, !dbg !3272
  %24 = load i32, i32* %num_elem121, align 8, !dbg !3272
  %add = add nsw i32 %21, %24, !dbg !3273
  %add122 = add nsw i32 %add, %n_sets.3, !dbg !3274
  br label %cleanup123, !dbg !3275

cleanup123:                                       ; preds = %entry, %cleanup107, %if.end111
  %retval.4 = phi i32 [ %add122, %if.end111 ], [ -1, %cleanup107 ], [ -1, %entry ], !dbg !3201
  ret i32 %retval.4, !dbg !3276
}

; Function Attrs: nounwind uwtable
define dso_local i8* @decode_asm_operands(%struct.rtx_def* %body, %struct.rtx_def** %operands, %struct.rtx_def*** %operand_locs, i8** %constraints, i32* %modes, i32* %loc) local_unnamed_addr #5 !dbg !3277 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body, metadata !3284, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata %struct.rtx_def** %operands, metadata !3285, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata %struct.rtx_def*** %operand_locs, metadata !3286, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i8** %constraints, metadata !3287, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i32* %modes, metadata !3288, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i32* %loc, metadata !3289, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i32 0, metadata !3290, metadata !DIExpression()), !dbg !3297
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 0, !dbg !3298
  %bf.load = load i32, i32* %0, align 8, !dbg !3298
  %trunc = trunc i32 %bf.load to i16, !dbg !3299
  switch i16 %trunc, label %sw.default [
    i16 17, label %sw.epilog
    i16 23, label %sw.bb1
    i16 15, label %sw.bb32
  ], !dbg !3299

sw.bb1:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3300
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !3300
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3300
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3293, metadata !DIExpression()), !dbg !3297
  %tobool = icmp eq %struct.rtx_def** %operands, null, !dbg !3301
  br i1 %tobool, label %if.end, label %if.then, !dbg !3303

if.then:                                          ; preds = %sw.bb1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3304
  %3 = bitcast %union.rtunion_def* %arrayidx4 to i64*, !dbg !3304
  %4 = load i64, i64* %3, align 8, !dbg !3304
  %5 = bitcast %struct.rtx_def** %operands to i64*, !dbg !3305
  store i64 %4, i64* %5, align 8, !dbg !3305
  br label %if.end, !dbg !3306

if.end:                                           ; preds = %sw.bb1, %if.then
  %tobool7 = icmp eq %struct.rtx_def*** %operand_locs, null, !dbg !3307
  br i1 %tobool7, label %if.end14, label %if.then8, !dbg !3309

if.then8:                                         ; preds = %if.end
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3310
  %6 = bitcast %struct.rtx_def*** %operand_locs to %union.rtunion_def**, !dbg !3311
  store %union.rtunion_def* %arrayidx11, %union.rtunion_def** %6, align 8, !dbg !3311
  br label %if.end14, !dbg !3312

if.end14:                                         ; preds = %if.end, %if.then8
  %tobool15 = icmp eq i8** %constraints, null, !dbg !3313
  br i1 %tobool15, label %if.end21, label %if.then16, !dbg !3315

if.then16:                                        ; preds = %if.end14
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, !dbg !3316
  %7 = bitcast i8** %rt_str to i64*, !dbg !3316
  %8 = load i64, i64* %7, align 8, !dbg !3316
  %9 = bitcast i8** %constraints to i64*, !dbg !3317
  store i64 %8, i64* %9, align 8, !dbg !3317
  br label %if.end21, !dbg !3318

if.end21:                                         ; preds = %if.end14, %if.then16
  %tobool22 = icmp eq i32* %modes, null, !dbg !3319
  br i1 %tobool22, label %sw.epilog, label %if.then23, !dbg !3321

if.then23:                                        ; preds = %if.end21
  %arrayidx26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3322
  %10 = bitcast %union.rtunion_def* %arrayidx26 to i32**, !dbg !3322
  %11 = load i32*, i32** %10, align 8, !dbg !3322
  %bf.load28 = load i32, i32* %11, align 8, !dbg !3322
  %bf.lshr = lshr i32 %bf.load28, 16, !dbg !3322
  %bf.clear29 = and i32 %bf.lshr, 255, !dbg !3322
  store i32 %bf.clear29, i32* %modes, align 4, !dbg !3323
  br label %sw.epilog, !dbg !3324

sw.bb32:                                          ; preds = %entry
  %arrayidx35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3325
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtvec_def**, !dbg !3325
  %12 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3325
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %12, i64 0, i32 0, !dbg !3325
  %13 = load i32, i32* %num_elem, align 8, !dbg !3325
  call void @llvm.dbg.value(metadata i32 %13, metadata !3294, metadata !DIExpression()), !dbg !3326
  %arrayidx40 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %12, i64 0, i32 1, i64 0, !dbg !3327
  %14 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx40, align 8, !dbg !3327
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !3293, metadata !DIExpression()), !dbg !3297
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 0, !dbg !3328
  %bf.load41 = load i32, i32* %15, align 8, !dbg !3328
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !3328
  %cmp = icmp eq i32 %bf.clear42, 23, !dbg !3330
  br i1 %cmp, label %if.then43, label %sw.epilog, !dbg !3331

if.then43:                                        ; preds = %sw.bb32
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3332
  %rt_rtx47 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !3332
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !3332
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !3293, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i32 0, metadata !3292, metadata !DIExpression()), !dbg !3297
  %tobool60 = icmp eq %struct.rtx_def** %operands, null, !dbg !3334
  %tobool76 = icmp eq %struct.rtx_def*** %operand_locs, null, !dbg !3339
  %tobool92 = icmp eq i8** %constraints, null, !dbg !3341
  %tobool112 = icmp eq i32* %modes, null, !dbg !3343
  br i1 %tobool60, label %if.then43.split.us, label %if.then43.if.then43.split_crit_edge, !dbg !3345

if.then43.if.then43.split_crit_edge:              ; preds = %if.then43
  %18 = sext i32 %13 to i64, !dbg !3345
  br label %for.cond, !dbg !3345

if.then43.split.us:                               ; preds = %if.then43
  %19 = sext i32 %13 to i64, !dbg !3345
  br label %for.cond.us, !dbg !3345

for.cond.us:                                      ; preds = %for.inc.us, %if.then43.split.us
  %indvars.iv18 = phi i64 [ %indvars.iv.next19, %for.inc.us ], [ 0, %if.then43.split.us ], !dbg !3346
  call void @llvm.dbg.value(metadata i64 %indvars.iv18, metadata !3292, metadata !DIExpression()), !dbg !3297
  %cmp48.us = icmp slt i64 %indvars.iv18, %19, !dbg !3347
  br i1 %cmp48.us, label %for.body.us, label %sw.epilog.loopexit.us-lcssa.us, !dbg !3348

for.body.us:                                      ; preds = %for.cond.us
  %20 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3349
  %arrayidx54.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %20, i64 0, i32 1, i64 %indvars.iv18, !dbg !3349
  %21 = bitcast %struct.rtx_def** %arrayidx54.us to i32**, !dbg !3349
  %22 = load i32*, i32** %21, align 8, !dbg !3349
  %bf.load55.us = load i32, i32* %22, align 8, !dbg !3349
  %bf.clear56.us = and i32 %bf.load55.us, 65535, !dbg !3349
  %cmp57.us = icmp eq i32 %bf.clear56.us, 25, !dbg !3351
  br i1 %cmp57.us, label %sw.epilog.loopexit.us-lcssa.us, label %if.end59.us, !dbg !3352

if.end59.us:                                      ; preds = %for.body.us
  br i1 %tobool76, label %if.end91.us, label %if.then77.us, !dbg !3353

if.then77.us:                                     ; preds = %if.end59.us
  %arrayidx87.us = getelementptr inbounds i32, i32* %22, i64 2, !dbg !3354
  %arrayidx90.us = getelementptr inbounds %struct.rtx_def**, %struct.rtx_def*** %operand_locs, i64 %indvars.iv18, !dbg !3355
  %23 = bitcast %struct.rtx_def*** %arrayidx90.us to i32**, !dbg !3356
  store i32* %arrayidx87.us, i32** %23, align 8, !dbg !3356
  br label %if.end91.us, !dbg !3355

if.end91.us:                                      ; preds = %if.then77.us, %if.end59.us
  br i1 %tobool92, label %if.end111.us, label %if.then93.us, !dbg !3357

if.then93.us:                                     ; preds = %if.end91.us
  %24 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3358
  %arrayidx100.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %24, i64 0, i32 1, i64 %indvars.iv18, !dbg !3358
  %25 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx100.us, align 8, !dbg !3358
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3358
  %rt_rtx104.us = bitcast %union.rtunion_def* %26 to %struct.rtx_def**, !dbg !3358
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx104.us, align 8, !dbg !3358
  %rt_str108.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, !dbg !3358
  %28 = bitcast i8** %rt_str108.us to i64*, !dbg !3358
  %29 = load i64, i64* %28, align 8, !dbg !3358
  %arrayidx110.us = getelementptr inbounds i8*, i8** %constraints, i64 %indvars.iv18, !dbg !3359
  %30 = bitcast i8** %arrayidx110.us to i64*, !dbg !3360
  store i64 %29, i64* %30, align 8, !dbg !3360
  br label %if.end111.us, !dbg !3359

if.end111.us:                                     ; preds = %if.then93.us, %if.end91.us
  br i1 %tobool112, label %for.inc.us, label %if.then113.us, !dbg !3361

if.then113.us:                                    ; preds = %if.end111.us
  %31 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3362
  %arrayidx120.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %31, i64 0, i32 1, i64 %indvars.iv18, !dbg !3362
  %32 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx120.us, align 8, !dbg !3362
  %arrayidx123.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3362
  %33 = bitcast %union.rtunion_def* %arrayidx123.us to i32**, !dbg !3362
  %34 = load i32*, i32** %33, align 8, !dbg !3362
  %bf.load125.us = load i32, i32* %34, align 8, !dbg !3362
  %bf.lshr126.us = lshr i32 %bf.load125.us, 16, !dbg !3362
  %bf.clear127.us = and i32 %bf.lshr126.us, 255, !dbg !3362
  %arrayidx129.us = getelementptr inbounds i32, i32* %modes, i64 %indvars.iv18, !dbg !3363
  store i32 %bf.clear127.us, i32* %arrayidx129.us, align 4, !dbg !3364
  br label %for.inc.us, !dbg !3363

for.inc.us:                                       ; preds = %if.then113.us, %if.end111.us
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1, !dbg !3365
  call void @llvm.dbg.value(metadata i32 undef, metadata !3292, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3297
  br label %for.cond.us, !dbg !3366, !llvm.loop !3367

sw.epilog.loopexit.us-lcssa.us:                   ; preds = %for.body.us, %for.cond.us
  %indvars.iv18.lcssa = phi i64 [ %indvars.iv18, %for.body.us ], [ %indvars.iv18, %for.cond.us ], !dbg !3346
  call void @llvm.dbg.value(metadata i64 %indvars.iv18.lcssa, metadata !3292, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i64 %indvars.iv18.lcssa, metadata !3292, metadata !DIExpression()), !dbg !3297
  br label %sw.epilog.loopexit, !dbg !3369

for.cond:                                         ; preds = %for.inc, %if.then43.if.then43.split_crit_edge
  %indvars.iv20 = phi i64 [ %indvars.iv.next21, %for.inc ], [ 0, %if.then43.if.then43.split_crit_edge ], !dbg !3346
  call void @llvm.dbg.value(metadata i64 %indvars.iv20, metadata !3292, metadata !DIExpression()), !dbg !3297
  %cmp48 = icmp slt i64 %indvars.iv20, %18, !dbg !3347
  br i1 %cmp48, label %for.body, label %sw.epilog.loopexit.us-lcssa, !dbg !3348

for.body:                                         ; preds = %for.cond
  %35 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3349
  %arrayidx54 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %35, i64 0, i32 1, i64 %indvars.iv20, !dbg !3349
  %36 = bitcast %struct.rtx_def** %arrayidx54 to i32**, !dbg !3349
  %37 = load i32*, i32** %36, align 8, !dbg !3349
  %bf.load55 = load i32, i32* %37, align 8, !dbg !3349
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !3349
  %cmp57 = icmp eq i32 %bf.clear56, 25, !dbg !3351
  br i1 %cmp57, label %sw.epilog.loopexit.us-lcssa, label %if.end59, !dbg !3352

if.end59:                                         ; preds = %for.body
  %arrayidx71 = getelementptr inbounds i32, i32* %37, i64 2, !dbg !3370
  %38 = bitcast i32* %arrayidx71 to i64*, !dbg !3370
  %39 = load i64, i64* %38, align 8, !dbg !3370
  %arrayidx74 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %operands, i64 %indvars.iv20, !dbg !3371
  %40 = bitcast %struct.rtx_def** %arrayidx74 to i64*, !dbg !3372
  store i64 %39, i64* %40, align 8, !dbg !3372
  br i1 %tobool76, label %if.end91, label %if.then77, !dbg !3353

if.then77:                                        ; preds = %if.end59
  %41 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3354
  %arrayidx84 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %41, i64 0, i32 1, i64 %indvars.iv20, !dbg !3354
  %42 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx84, align 8, !dbg !3354
  %arrayidx87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3354
  %arrayidx90 = getelementptr inbounds %struct.rtx_def**, %struct.rtx_def*** %operand_locs, i64 %indvars.iv20, !dbg !3355
  %43 = bitcast %struct.rtx_def*** %arrayidx90 to %union.rtunion_def**, !dbg !3356
  store %union.rtunion_def* %arrayidx87, %union.rtunion_def** %43, align 8, !dbg !3356
  br label %if.end91, !dbg !3355

if.end91:                                         ; preds = %if.end59, %if.then77
  br i1 %tobool92, label %if.end111, label %if.then93, !dbg !3357

if.then93:                                        ; preds = %if.end91
  %44 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3358
  %arrayidx100 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %44, i64 0, i32 1, i64 %indvars.iv20, !dbg !3358
  %45 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx100, align 8, !dbg !3358
  %46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3358
  %rt_rtx104 = bitcast %union.rtunion_def* %46 to %struct.rtx_def**, !dbg !3358
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx104, align 8, !dbg !3358
  %rt_str108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, !dbg !3358
  %48 = bitcast i8** %rt_str108 to i64*, !dbg !3358
  %49 = load i64, i64* %48, align 8, !dbg !3358
  %arrayidx110 = getelementptr inbounds i8*, i8** %constraints, i64 %indvars.iv20, !dbg !3359
  %50 = bitcast i8** %arrayidx110 to i64*, !dbg !3360
  store i64 %49, i64* %50, align 8, !dbg !3360
  br label %if.end111, !dbg !3359

if.end111:                                        ; preds = %if.end91, %if.then93
  br i1 %tobool112, label %for.inc, label %if.then113, !dbg !3361

if.then113:                                       ; preds = %if.end111
  %51 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3362
  %arrayidx120 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %51, i64 0, i32 1, i64 %indvars.iv20, !dbg !3362
  %52 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx120, align 8, !dbg !3362
  %arrayidx123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3362
  %53 = bitcast %union.rtunion_def* %arrayidx123 to i32**, !dbg !3362
  %54 = load i32*, i32** %53, align 8, !dbg !3362
  %bf.load125 = load i32, i32* %54, align 8, !dbg !3362
  %bf.lshr126 = lshr i32 %bf.load125, 16, !dbg !3362
  %bf.clear127 = and i32 %bf.lshr126, 255, !dbg !3362
  %arrayidx129 = getelementptr inbounds i32, i32* %modes, i64 %indvars.iv20, !dbg !3363
  store i32 %bf.clear127, i32* %arrayidx129, align 4, !dbg !3364
  br label %for.inc, !dbg !3363

for.inc:                                          ; preds = %if.end111, %if.then113
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1, !dbg !3365
  call void @llvm.dbg.value(metadata i32 undef, metadata !3292, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3297
  br label %for.cond, !dbg !3366, !llvm.loop !3367

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 1562, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3373
  br label %sw.epilog, !dbg !3374

sw.epilog.loopexit.us-lcssa:                      ; preds = %for.body, %for.cond
  %indvars.iv20.lcssa = phi i64 [ %indvars.iv20, %for.body ], [ %indvars.iv20, %for.cond ], !dbg !3346
  call void @llvm.dbg.value(metadata i64 %indvars.iv20.lcssa, metadata !3292, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i64 %indvars.iv20.lcssa, metadata !3292, metadata !DIExpression()), !dbg !3297
  br label %sw.epilog.loopexit, !dbg !3369

sw.epilog.loopexit:                               ; preds = %sw.epilog.loopexit.us-lcssa.us, %sw.epilog.loopexit.us-lcssa
  %i.0.lcssa.in = phi i64 [ %indvars.iv20.lcssa, %sw.epilog.loopexit.us-lcssa ], [ %indvars.iv18.lcssa, %sw.epilog.loopexit.us-lcssa.us ]
  %i.0.lcssa = trunc i64 %i.0.lcssa.in to i32, !dbg !3346
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3292, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3292, metadata !DIExpression()), !dbg !3297
  br label %sw.epilog, !dbg !3369

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %if.end21, %sw.bb32, %if.then23, %entry, %sw.default
  %nbase.1 = phi i32 [ 0, %sw.default ], [ 0, %entry ], [ 1, %if.then23 ], [ 1, %if.end21 ], [ 0, %sw.bb32 ], [ %i.0.lcssa, %sw.epilog.loopexit ], !dbg !3297
  %asmop.1 = phi %struct.rtx_def* [ undef, %sw.default ], [ %body, %entry ], [ %2, %if.then23 ], [ %2, %if.end21 ], [ %14, %sw.bb32 ], [ %17, %sw.epilog.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %asmop.1, metadata !3293, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i32 %nbase.1, metadata !3290, metadata !DIExpression()), !dbg !3297
  %arrayidx134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %asmop.1, i64 0, i32 1, i32 0, i32 1, !dbg !3369
  %rt_rtvec135 = bitcast %struct.object_block** %arrayidx134 to %struct.rtvec_def**, !dbg !3369
  %55 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec135, align 8, !dbg !3369
  %num_elem136 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %55, i64 0, i32 0, !dbg !3369
  %56 = load i32, i32* %num_elem136, align 8, !dbg !3369
  call void @llvm.dbg.value(metadata i32 %56, metadata !3291, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i32 0, metadata !3292, metadata !DIExpression()), !dbg !3297
  %tobool140 = icmp eq %struct.rtx_def*** %operand_locs, null, !dbg !3375
  %tobool152 = icmp eq %struct.rtx_def** %operands, null, !dbg !3380
  %tobool165 = icmp eq i8** %constraints, null, !dbg !3382
  %arrayidx169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %asmop.1, i64 0, i32 1, i32 0, i32 2, !dbg !3382
  %rt_rtvec170 = bitcast i64* %arrayidx169 to %struct.rtvec_def**, !dbg !3382
  %tobool182 = icmp eq i32* %modes, null, !dbg !3384
  br i1 %tobool140, label %sw.epilog.split.us, label %sw.epilog.sw.epilog.split_crit_edge, !dbg !3386

sw.epilog.sw.epilog.split_crit_edge:              ; preds = %sw.epilog
  %57 = sext i32 %56 to i64, !dbg !3386
  %58 = zext i32 %nbase.1 to i64, !dbg !3386
  br label %for.cond137, !dbg !3386

sw.epilog.split.us:                               ; preds = %sw.epilog
  %59 = sext i32 %56 to i64, !dbg !3386
  %60 = zext i32 %nbase.1 to i64, !dbg !3386
  %61 = zext i32 %nbase.1 to i64, !dbg !3386
  %62 = zext i32 %nbase.1 to i64, !dbg !3386
  br label %for.cond137.us, !dbg !3386

for.cond137.us:                                   ; preds = %for.inc198.us, %sw.epilog.split.us
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %for.inc198.us ], [ 0, %sw.epilog.split.us ], !dbg !3387
  call void @llvm.dbg.value(metadata i64 %indvars.iv10, metadata !3292, metadata !DIExpression()), !dbg !3297
  %cmp138.us = icmp slt i64 %indvars.iv10, %59, !dbg !3388
  br i1 %cmp138.us, label %for.body139.us, label %for.end200.us-lcssa.us, !dbg !3389

for.body139.us:                                   ; preds = %for.cond137.us
  br i1 %tobool152, label %if.end164.us, label %if.then153.us, !dbg !3390

if.then153.us:                                    ; preds = %for.body139.us
  %63 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec135, align 8, !dbg !3391
  %arrayidx160.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %63, i64 0, i32 1, i64 %indvars.iv10, !dbg !3391
  %64 = bitcast %struct.rtx_def** %arrayidx160.us to i64*, !dbg !3391
  %65 = load i64, i64* %64, align 8, !dbg !3391
  %66 = add nuw nsw i64 %indvars.iv10, %60, !dbg !3392
  %arrayidx163.us = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %operands, i64 %66, !dbg !3393
  %67 = bitcast %struct.rtx_def** %arrayidx163.us to i64*, !dbg !3394
  store i64 %65, i64* %67, align 8, !dbg !3394
  br label %if.end164.us, !dbg !3393

if.end164.us:                                     ; preds = %if.then153.us, %for.body139.us
  br i1 %tobool165, label %if.end181.us, label %if.then166.us, !dbg !3395

if.then166.us:                                    ; preds = %if.end164.us
  %68 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec170, align 8, !dbg !3396
  %arrayidx173.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %68, i64 0, i32 1, i64 %indvars.iv10, !dbg !3396
  %69 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx173.us, align 8, !dbg !3396
  %rt_str177.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !3396
  %70 = bitcast i8** %rt_str177.us to i64*, !dbg !3396
  %71 = load i64, i64* %70, align 8, !dbg !3396
  %72 = add nuw nsw i64 %indvars.iv10, %61, !dbg !3397
  %arrayidx180.us = getelementptr inbounds i8*, i8** %constraints, i64 %72, !dbg !3398
  %73 = bitcast i8** %arrayidx180.us to i64*, !dbg !3399
  store i64 %71, i64* %73, align 8, !dbg !3399
  br label %if.end181.us, !dbg !3398

if.end181.us:                                     ; preds = %if.then166.us, %if.end164.us
  br i1 %tobool182, label %for.inc198.us, label %if.then183.us, !dbg !3400

if.then183.us:                                    ; preds = %if.end181.us
  %74 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec170, align 8, !dbg !3401
  %arrayidx190.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %74, i64 0, i32 1, i64 %indvars.iv10, !dbg !3401
  %75 = bitcast %struct.rtx_def** %arrayidx190.us to i32**, !dbg !3401
  %76 = load i32*, i32** %75, align 8, !dbg !3401
  %bf.load191.us = load i32, i32* %76, align 8, !dbg !3401
  %bf.lshr192.us = lshr i32 %bf.load191.us, 16, !dbg !3401
  %bf.clear193.us = and i32 %bf.lshr192.us, 255, !dbg !3401
  %77 = add nuw nsw i64 %indvars.iv10, %62, !dbg !3402
  %arrayidx196.us = getelementptr inbounds i32, i32* %modes, i64 %77, !dbg !3403
  store i32 %bf.clear193.us, i32* %arrayidx196.us, align 4, !dbg !3404
  br label %for.inc198.us, !dbg !3403

for.inc198.us:                                    ; preds = %if.then183.us, %if.end181.us
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !3405
  call void @llvm.dbg.value(metadata i32 undef, metadata !3292, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3297
  br label %for.cond137.us, !dbg !3406, !llvm.loop !3407

for.end200.us-lcssa.us:                           ; preds = %for.cond137.us
  br label %for.end200, !dbg !3409

for.cond137:                                      ; preds = %for.inc198, %sw.epilog.sw.epilog.split_crit_edge
  %indvars.iv15 = phi i64 [ %indvars.iv.next16, %for.inc198 ], [ 0, %sw.epilog.sw.epilog.split_crit_edge ], !dbg !3387
  call void @llvm.dbg.value(metadata i64 %indvars.iv15, metadata !3292, metadata !DIExpression()), !dbg !3297
  %cmp138 = icmp slt i64 %indvars.iv15, %57, !dbg !3388
  br i1 %cmp138, label %for.body139, label %for.end200.us-lcssa, !dbg !3389

for.body139:                                      ; preds = %for.cond137
  %78 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec135, align 8, !dbg !3410
  %arrayidx148 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %78, i64 0, i32 1, i64 %indvars.iv15, !dbg !3410
  %79 = add nuw nsw i64 %indvars.iv15, %58, !dbg !3411
  %arrayidx150 = getelementptr inbounds %struct.rtx_def**, %struct.rtx_def*** %operand_locs, i64 %79, !dbg !3412
  store %struct.rtx_def** %arrayidx148, %struct.rtx_def*** %arrayidx150, align 8, !dbg !3413
  br i1 %tobool152, label %if.end164, label %if.then153, !dbg !3390

if.then153:                                       ; preds = %for.body139
  %80 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec135, align 8, !dbg !3391
  %arrayidx160 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %80, i64 0, i32 1, i64 %indvars.iv15, !dbg !3391
  %81 = bitcast %struct.rtx_def** %arrayidx160 to i64*, !dbg !3391
  %82 = load i64, i64* %81, align 8, !dbg !3391
  %arrayidx163 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %operands, i64 %79, !dbg !3393
  %83 = bitcast %struct.rtx_def** %arrayidx163 to i64*, !dbg !3394
  store i64 %82, i64* %83, align 8, !dbg !3394
  br label %if.end164, !dbg !3393

if.end164:                                        ; preds = %for.body139, %if.then153
  br i1 %tobool165, label %if.end181, label %if.then166, !dbg !3395

if.then166:                                       ; preds = %if.end164
  %84 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec170, align 8, !dbg !3396
  %arrayidx173 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %84, i64 0, i32 1, i64 %indvars.iv15, !dbg !3396
  %85 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx173, align 8, !dbg !3396
  %rt_str177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !3396
  %86 = bitcast i8** %rt_str177 to i64*, !dbg !3396
  %87 = load i64, i64* %86, align 8, !dbg !3396
  %arrayidx180 = getelementptr inbounds i8*, i8** %constraints, i64 %79, !dbg !3398
  %88 = bitcast i8** %arrayidx180 to i64*, !dbg !3399
  store i64 %87, i64* %88, align 8, !dbg !3399
  br label %if.end181, !dbg !3398

if.end181:                                        ; preds = %if.end164, %if.then166
  br i1 %tobool182, label %for.inc198, label %if.then183, !dbg !3400

if.then183:                                       ; preds = %if.end181
  %89 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec170, align 8, !dbg !3401
  %arrayidx190 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %89, i64 0, i32 1, i64 %indvars.iv15, !dbg !3401
  %90 = bitcast %struct.rtx_def** %arrayidx190 to i32**, !dbg !3401
  %91 = load i32*, i32** %90, align 8, !dbg !3401
  %bf.load191 = load i32, i32* %91, align 8, !dbg !3401
  %bf.lshr192 = lshr i32 %bf.load191, 16, !dbg !3401
  %bf.clear193 = and i32 %bf.lshr192, 255, !dbg !3401
  %arrayidx196 = getelementptr inbounds i32, i32* %modes, i64 %79, !dbg !3403
  store i32 %bf.clear193, i32* %arrayidx196, align 4, !dbg !3404
  br label %for.inc198, !dbg !3403

for.inc198:                                       ; preds = %if.end181, %if.then183
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1, !dbg !3405
  call void @llvm.dbg.value(metadata i32 undef, metadata !3292, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3297
  br label %for.cond137, !dbg !3406, !llvm.loop !3407

for.end200.us-lcssa:                              ; preds = %for.cond137
  br label %for.end200, !dbg !3409

for.end200:                                       ; preds = %for.end200.us-lcssa.us, %for.end200.us-lcssa
  %add201 = add nsw i32 %nbase.1, %56, !dbg !3409
  call void @llvm.dbg.value(metadata i32 %add201, metadata !3290, metadata !DIExpression()), !dbg !3297
  %u202 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %asmop.1, i64 0, i32 1, !dbg !3414
  %92 = getelementptr inbounds %union.u, %union.u* %u202, i64 1, i32 0, i32 0, i64 0, !dbg !3414
  %rt_rtvec205 = bitcast %union.rtunion_def* %92 to %struct.rtvec_def**, !dbg !3414
  %93 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec205, align 8, !dbg !3414
  %num_elem206 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %93, i64 0, i32 0, !dbg !3414
  %94 = load i32, i32* %num_elem206, align 8, !dbg !3414
  call void @llvm.dbg.value(metadata i32 %94, metadata !3291, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i32 0, metadata !3292, metadata !DIExpression()), !dbg !3297
  br i1 %tobool140, label %for.end200.split.us, label %for.end200.for.end200.split_crit_edge, !dbg !3415

for.end200.for.end200.split_crit_edge:            ; preds = %for.end200
  %95 = sext i32 %94 to i64, !dbg !3415
  %96 = sext i32 %add201 to i64, !dbg !3415
  br label %for.cond207, !dbg !3415

for.end200.split.us:                              ; preds = %for.end200
  br i1 %tobool152, label %for.end200.split.us.split.us, label %for.end200.split.us.for.end200.split.us.split_crit_edge, !dbg !3415

for.end200.split.us.for.end200.split.us.split_crit_edge: ; preds = %for.end200.split.us
  %97 = sext i32 %94 to i64, !dbg !3415
  %98 = sext i32 %add201 to i64, !dbg !3415
  br label %for.cond207.us, !dbg !3415

for.end200.split.us.split.us:                     ; preds = %for.end200.split.us
  %99 = sext i32 %94 to i64, !dbg !3415
  %100 = sext i32 %add201 to i64, !dbg !3415
  %101 = sext i32 %add201 to i64, !dbg !3415
  br label %for.cond207.us.us, !dbg !3415

for.cond207.us.us:                                ; preds = %for.inc248.us.us, %for.end200.split.us.split.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc248.us.us ], [ 0, %for.end200.split.us.split.us ], !dbg !3417
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3292, metadata !DIExpression()), !dbg !3297
  %cmp208.us.us = icmp slt i64 %indvars.iv, %99, !dbg !3418
  br i1 %cmp208.us.us, label %for.body209.us.us, label %for.end250.us-lcssa.us.us-lcssa.us, !dbg !3420

for.body209.us.us:                                ; preds = %for.cond207.us.us
  br i1 %tobool165, label %if.end241.us.us, label %if.then237.us.us, !dbg !3421

if.then237.us.us:                                 ; preds = %for.body209.us.us
  %102 = add nsw i64 %indvars.iv, %100, !dbg !3423
  %arrayidx240.us.us = getelementptr inbounds i8*, i8** %constraints, i64 %102, !dbg !3425
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %arrayidx240.us.us, align 8, !dbg !3426
  br label %if.end241.us.us, !dbg !3425

if.end241.us.us:                                  ; preds = %if.then237.us.us, %for.body209.us.us
  br i1 %tobool182, label %for.inc248.us.us, label %if.then243.us.us, !dbg !3427

if.then243.us.us:                                 ; preds = %if.end241.us.us
  %103 = add nsw i64 %indvars.iv, %101, !dbg !3428
  %arrayidx246.us.us = getelementptr inbounds i32, i32* %modes, i64 %103, !dbg !3430
  store i32 16, i32* %arrayidx246.us.us, align 4, !dbg !3431
  br label %for.inc248.us.us, !dbg !3430

for.inc248.us.us:                                 ; preds = %if.then243.us.us, %if.end241.us.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3432
  call void @llvm.dbg.value(metadata i32 undef, metadata !3292, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3297
  br label %for.cond207.us.us, !dbg !3433, !llvm.loop !3434

for.end250.us-lcssa.us.us-lcssa.us:               ; preds = %for.cond207.us.us
  br label %for.end250.us-lcssa.us, !dbg !3436

for.cond207.us:                                   ; preds = %for.inc248.us, %for.end200.split.us.for.end200.split.us.split_crit_edge
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc248.us ], [ 0, %for.end200.split.us.for.end200.split.us.split_crit_edge ], !dbg !3417
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !3292, metadata !DIExpression()), !dbg !3297
  %cmp208.us = icmp slt i64 %indvars.iv4, %97, !dbg !3418
  br i1 %cmp208.us, label %for.body209.us, label %for.end250.us-lcssa.us.us-lcssa, !dbg !3420

for.body209.us:                                   ; preds = %for.cond207.us
  %104 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec205, align 8, !dbg !3438
  %arrayidx231.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %104, i64 0, i32 1, i64 %indvars.iv4, !dbg !3438
  %105 = bitcast %struct.rtx_def** %arrayidx231.us to i64*, !dbg !3438
  %106 = load i64, i64* %105, align 8, !dbg !3438
  %107 = add nsw i64 %indvars.iv4, %98, !dbg !3440
  %arrayidx234.us = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %operands, i64 %107, !dbg !3441
  %108 = bitcast %struct.rtx_def** %arrayidx234.us to i64*, !dbg !3442
  store i64 %106, i64* %108, align 8, !dbg !3442
  br i1 %tobool165, label %if.end241.us, label %if.then237.us, !dbg !3421

if.then237.us:                                    ; preds = %for.body209.us
  %arrayidx240.us = getelementptr inbounds i8*, i8** %constraints, i64 %107, !dbg !3425
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %arrayidx240.us, align 8, !dbg !3426
  br label %if.end241.us, !dbg !3425

if.end241.us:                                     ; preds = %if.then237.us, %for.body209.us
  br i1 %tobool182, label %for.inc248.us, label %if.then243.us, !dbg !3427

if.then243.us:                                    ; preds = %if.end241.us
  %arrayidx246.us = getelementptr inbounds i32, i32* %modes, i64 %107, !dbg !3430
  store i32 16, i32* %arrayidx246.us, align 4, !dbg !3431
  br label %for.inc248.us, !dbg !3430

for.inc248.us:                                    ; preds = %if.then243.us, %if.end241.us
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !3432
  call void @llvm.dbg.value(metadata i32 undef, metadata !3292, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3297
  br label %for.cond207.us, !dbg !3433, !llvm.loop !3434

for.end250.us-lcssa.us.us-lcssa:                  ; preds = %for.cond207.us
  br label %for.end250.us-lcssa.us, !dbg !3436

for.end250.us-lcssa.us:                           ; preds = %for.end250.us-lcssa.us.us-lcssa.us, %for.end250.us-lcssa.us.us-lcssa
  br label %for.end250, !dbg !3436

for.cond207:                                      ; preds = %for.inc248, %for.end200.for.end200.split_crit_edge
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.inc248 ], [ 0, %for.end200.for.end200.split_crit_edge ], !dbg !3417
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !3292, metadata !DIExpression()), !dbg !3297
  %cmp208 = icmp slt i64 %indvars.iv7, %95, !dbg !3418
  br i1 %cmp208, label %for.body209, label %for.end250.us-lcssa, !dbg !3420

for.body209:                                      ; preds = %for.cond207
  %109 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec205, align 8, !dbg !3443
  %arrayidx218 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %109, i64 0, i32 1, i64 %indvars.iv7, !dbg !3443
  %110 = add nsw i64 %indvars.iv7, %96, !dbg !3445
  %arrayidx221 = getelementptr inbounds %struct.rtx_def**, %struct.rtx_def*** %operand_locs, i64 %110, !dbg !3446
  store %struct.rtx_def** %arrayidx218, %struct.rtx_def*** %arrayidx221, align 8, !dbg !3447
  br i1 %tobool152, label %if.end235, label %if.then224, !dbg !3448

if.then224:                                       ; preds = %for.body209
  %111 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec205, align 8, !dbg !3438
  %arrayidx231 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %111, i64 0, i32 1, i64 %indvars.iv7, !dbg !3438
  %112 = bitcast %struct.rtx_def** %arrayidx231 to i64*, !dbg !3438
  %113 = load i64, i64* %112, align 8, !dbg !3438
  %arrayidx234 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %operands, i64 %110, !dbg !3441
  %114 = bitcast %struct.rtx_def** %arrayidx234 to i64*, !dbg !3442
  store i64 %113, i64* %114, align 8, !dbg !3442
  br label %if.end235, !dbg !3441

if.end235:                                        ; preds = %for.body209, %if.then224
  br i1 %tobool165, label %if.end241, label %if.then237, !dbg !3421

if.then237:                                       ; preds = %if.end235
  %arrayidx240 = getelementptr inbounds i8*, i8** %constraints, i64 %110, !dbg !3425
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %arrayidx240, align 8, !dbg !3426
  br label %if.end241, !dbg !3425

if.end241:                                        ; preds = %if.end235, %if.then237
  br i1 %tobool182, label %for.inc248, label %if.then243, !dbg !3427

if.then243:                                       ; preds = %if.end241
  %arrayidx246 = getelementptr inbounds i32, i32* %modes, i64 %110, !dbg !3430
  store i32 16, i32* %arrayidx246, align 4, !dbg !3431
  br label %for.inc248, !dbg !3430

for.inc248:                                       ; preds = %if.end241, %if.then243
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !3432
  call void @llvm.dbg.value(metadata i32 undef, metadata !3292, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3297
  br label %for.cond207, !dbg !3433, !llvm.loop !3434

for.end250.us-lcssa:                              ; preds = %for.cond207
  br label %for.end250, !dbg !3436

for.end250:                                       ; preds = %for.end250.us-lcssa.us, %for.end250.us-lcssa
  %tobool251 = icmp eq i32* %loc, null, !dbg !3436
  br i1 %tobool251, label %if.end256, label %if.then252, !dbg !3449

if.then252:                                       ; preds = %for.end250
  %115 = getelementptr inbounds %union.u, %union.u* %u202, i64 1, i32 0, i32 0, i64 1, !dbg !3450
  %rt_uint = bitcast %union.rtunion_def* %115 to i32*, !dbg !3450
  %116 = load i32, i32* %rt_uint, align 8, !dbg !3450
  store i32 %116, i32* %loc, align 4, !dbg !3451
  br label %if.end256, !dbg !3452

if.end256:                                        ; preds = %for.end250, %if.then252
  %rt_str260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %asmop.1, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !3453
  %117 = load i8*, i8** %rt_str260, align 8, !dbg !3453
  ret i8* %117, !dbg !3454
}

; Function Attrs: nounwind uwtable
define dso_local i32 @asm_operand_ok(%struct.rtx_def* %op, i8* %constraint, i8** %constraints) local_unnamed_addr #5 !dbg !3455 {
entry:
  %end = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !3459, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i8* %constraint, metadata !3460, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i8** %constraints, metadata !3461, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i32 0, metadata !3462, metadata !DIExpression()), !dbg !3471
  %0 = load i32, i32* @reload_completed, align 4, !dbg !3472
  %tobool = icmp eq i32 %0, 0, !dbg !3472
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3472

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 1607, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3472
  br label %cond.end, !dbg !3472

cond.end:                                         ; preds = %entry, %cond.true
  %1 = load i8, i8* %constraint, align 1, !dbg !3473
  %cmp = icmp eq i8 %1, 0, !dbg !3475
  br i1 %cmp, label %cleanup303, label %while.cond.preheader, !dbg !3476

while.cond.preheader:                             ; preds = %cond.end
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !3477
  %u251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, !dbg !3477
  %arrayidx253 = bitcast %union.u* %u251 to i64*, !dbg !3477
  %tobool6 = icmp eq i8** %constraints, null, !dbg !3479
  %3 = bitcast i8** %end to i8*, !dbg !3480
  br label %while.cond, !dbg !3481

while.cond:                                       ; preds = %while.cond.backedge, %while.cond.preheader
  %4 = phi i8 [ %1, %while.cond.preheader ], [ %.pre, %while.cond.backedge ], !dbg !3482
  %result.0 = phi i32 [ 0, %while.cond.preheader ], [ %result.27, %while.cond.backedge ], !dbg !3483
  %constraint.addr.0 = phi i8* [ %constraint, %while.cond.preheader ], [ %constraint.addr.4, %while.cond.backedge ]
  call void @llvm.dbg.value(metadata i8* %constraint.addr.0, metadata !3460, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i32 %result.0, metadata !3462, metadata !DIExpression()), !dbg !3471
  %tobool2 = icmp eq i8 %4, 0, !dbg !3481
  br i1 %tobool2, label %cleanup303.loopexit, label %while.body, !dbg !3481

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i8 %4, metadata !3463, metadata !DIExpression()), !dbg !3484
  %conv3 = sext i8 %4 to i32, !dbg !3485
  switch i32 %conv3, label %sw.default [
    i32 44, label %sw.bb
    i32 61, label %sw.epilog
    i32 43, label %sw.epilog
    i32 42, label %sw.epilog
    i32 37, label %sw.epilog
    i32 33, label %sw.epilog
    i32 35, label %sw.epilog
    i32 38, label %sw.epilog
    i32 63, label %sw.epilog
    i32 48, label %sw.bb5
    i32 49, label %sw.bb5
    i32 50, label %sw.bb5
    i32 51, label %sw.bb5
    i32 52, label %sw.bb5
    i32 53, label %sw.bb5
    i32 54, label %sw.bb5
    i32 55, label %sw.bb5
    i32 56, label %sw.bb5
    i32 57, label %sw.bb5
    i32 112, label %sw.bb22
    i32 109, label %sw.bb27
    i32 86, label %sw.bb27
    i32 111, label %sw.bb32
    i32 60, label %sw.bb37
    i32 62, label %sw.bb42
    i32 69, label %sw.bb49
    i32 70, label %sw.bb49
    i32 71, label %sw.bb67
    i32 72, label %sw.bb79
    i32 115, label %sw.bb91
    i32 105, label %while.body.sw.bb109_crit_edge
    i32 110, label %sw.bb124
    i32 73, label %sw.bb142
    i32 74, label %sw.bb155
    i32 75, label %sw.bb170
    i32 76, label %sw.bb185
    i32 77, label %sw.bb200
    i32 78, label %sw.bb215
    i32 79, label %sw.bb230
    i32 80, label %sw.bb245
    i32 88, label %sw.bb260
    i32 103, label %sw.bb261
    i32 114, label %sw.bb271
  ], !dbg !3486

while.body.sw.bb109_crit_edge:                    ; preds = %while.body
  %bf.load110.pre = load i32, i32* %2, align 8, !dbg !3487
  %.pre21 = and i32 %bf.load110.pre, 65535, !dbg !3487
  br label %sw.bb109, !dbg !3486

sw.bb:                                            ; preds = %while.body
  %incdec.ptr = getelementptr inbounds i8, i8* %constraint.addr.0, i64 1, !dbg !3489
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !3460, metadata !DIExpression()), !dbg !3471
  br label %cleanup, !dbg !3490, !llvm.loop !3491

sw.bb5:                                           ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  br i1 %tobool6, label %do.body.preheader, label %if.then7, !dbg !3493

do.body.preheader:                                ; preds = %sw.bb5
  br label %do.body, !dbg !3494

if.then7:                                         ; preds = %sw.bb5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !3496
  call void @llvm.dbg.value(metadata i8** %end, metadata !3466, metadata !DIExpression(DW_OP_deref)), !dbg !3480
  %call = call i64 @strtoul(i8* %constraint.addr.0, i8** nonnull %end, i32 10) #6, !dbg !3497
  call void @llvm.dbg.value(metadata i64 %call, metadata !3470, metadata !DIExpression()), !dbg !3480
  %tobool8 = icmp eq i32 %result.0, 0, !dbg !3498
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !3500

if.then9:                                         ; preds = %if.then7
  %arrayidx = getelementptr inbounds i8*, i8** %constraints, i64 %call, !dbg !3501
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !3501
  %call10 = call i32 @asm_operand_ok(%struct.rtx_def* %op, i8* %5, i8** null) #7, !dbg !3502
  call void @llvm.dbg.value(metadata i32 %call10, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %if.end11, !dbg !3503

if.end11:                                         ; preds = %if.then7, %if.then9
  %result.1 = phi i32 [ %result.0, %if.then7 ], [ %call10, %if.then9 ], !dbg !3471
  call void @llvm.dbg.value(metadata i32 %result.1, metadata !3462, metadata !DIExpression()), !dbg !3471
  %6 = load i8*, i8** %end, align 8, !dbg !3504
  call void @llvm.dbg.value(metadata i8* %6, metadata !3466, metadata !DIExpression()), !dbg !3480
  call void @llvm.dbg.value(metadata i8* %6, metadata !3460, metadata !DIExpression()), !dbg !3471
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !3505
  br label %cleanup, !dbg !3506, !llvm.loop !3491

do.body:                                          ; preds = %do.body.preheader, %do.body
  %constraint.addr.1 = phi i8* [ %incdec.ptr12, %do.body ], [ %constraint.addr.0, %do.body.preheader ]
  call void @llvm.dbg.value(metadata i8* %constraint.addr.1, metadata !3460, metadata !DIExpression()), !dbg !3471
  %incdec.ptr12 = getelementptr inbounds i8, i8* %constraint.addr.1, i64 1, !dbg !3507
  call void @llvm.dbg.value(metadata i8* %incdec.ptr12, metadata !3460, metadata !DIExpression()), !dbg !3471
  %7 = load i8, i8* %incdec.ptr12, align 1, !dbg !3508
  %idxprom = zext i8 %7 to i64, !dbg !3508
  %arrayidx14 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom, !dbg !3508
  %8 = load i16, i16* %arrayidx14, align 2, !dbg !3508
  %9 = and i16 %8, 4, !dbg !3508
  %tobool17 = icmp eq i16 %9, 0, !dbg !3509
  br i1 %tobool17, label %do.end, label %do.body, !dbg !3509, !llvm.loop !3510

do.end:                                           ; preds = %do.body
  %incdec.ptr12.lcssa = phi i8* [ %incdec.ptr12, %do.body ], !dbg !3507
  %tobool18 = icmp eq i32 %result.0, 0, !dbg !3512
  %spec.select = select i1 %tobool18, i32 -1, i32 %result.0, !dbg !3514
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %cleanup, !llvm.loop !3491

sw.bb22:                                          ; preds = %while.body
  %call23 = call i32 @address_operand(%struct.rtx_def* %op, i32 0) #7, !dbg !3515
  %tobool24 = icmp eq i32 %call23, 0, !dbg !3515
  %spec.select1 = select i1 %tobool24, i32 %result.0, i32 1, !dbg !3517
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %sw.epilog, !dbg !3518

sw.bb27:                                          ; preds = %while.body, %while.body
  %call28 = call i32 @memory_operand(%struct.rtx_def* %op, i32 0) #7, !dbg !3519
  %tobool29 = icmp eq i32 %call28, 0, !dbg !3519
  %spec.select2 = select i1 %tobool29, i32 %result.0, i32 1, !dbg !3521
  call void @llvm.dbg.value(metadata i32 %spec.select2, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %sw.epilog, !dbg !3522

sw.bb32:                                          ; preds = %while.body
  %call33 = call i32 @offsettable_nonstrict_memref_p(%struct.rtx_def* %op) #7, !dbg !3523
  %tobool34 = icmp eq i32 %call33, 0, !dbg !3523
  %spec.select3 = select i1 %tobool34, i32 %result.0, i32 1, !dbg !3525
  call void @llvm.dbg.value(metadata i32 %spec.select3, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %sw.epilog, !dbg !3526

sw.bb37:                                          ; preds = %while.body
  %bf.load = load i32, i32* %2, align 8, !dbg !3527
  %bf.clear = and i32 %bf.load, 65535, !dbg !3527
  %cmp38 = icmp eq i32 %bf.clear, 43, !dbg !3527
  %spec.select4 = select i1 %cmp38, i32 1, i32 %result.0, !dbg !3529
  call void @llvm.dbg.value(metadata i32 %spec.select4, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %sw.epilog, !dbg !3530

sw.bb42:                                          ; preds = %while.body
  %bf.load43 = load i32, i32* %2, align 8, !dbg !3531
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !3531
  %cmp45 = icmp eq i32 %bf.clear44, 43, !dbg !3531
  %spec.select5 = select i1 %cmp45, i32 1, i32 %result.0, !dbg !3533
  call void @llvm.dbg.value(metadata i32 %spec.select5, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %sw.epilog, !dbg !3534

sw.bb49:                                          ; preds = %while.body, %while.body
  %bf.load50 = load i32, i32* %2, align 8, !dbg !3535
  %bf.clear51 = and i32 %bf.load50, 65535, !dbg !3535
  %cmp52 = icmp eq i32 %bf.clear51, 32, !dbg !3537
  br i1 %cmp52, label %if.then65, label %lor.lhs.false, !dbg !3538

lor.lhs.false:                                    ; preds = %sw.bb49
  %cmp56 = icmp eq i32 %bf.clear51, 33, !dbg !3539
  br i1 %cmp56, label %land.lhs.true, label %sw.epilog, !dbg !3540

land.lhs.true:                                    ; preds = %lor.lhs.false
  %bf.lshr = lshr i32 %bf.load50, 16, !dbg !3541
  %bf.clear59 = and i32 %bf.lshr, 255, !dbg !3541
  %idxprom60 = zext i32 %bf.clear59 to i64, !dbg !3541
  %arrayidx61 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom60, !dbg !3541
  %10 = load i8, i8* %arrayidx61, align 1, !dbg !3541
  %cmp63 = icmp eq i8 %10, 17, !dbg !3542
  br i1 %cmp63, label %if.then65, label %sw.epilog, !dbg !3543

if.then65:                                        ; preds = %land.lhs.true, %sw.bb49
  call void @llvm.dbg.value(metadata i32 1, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %sw.epilog, !dbg !3544

sw.bb67:                                          ; preds = %while.body
  %bf.load68 = load i32, i32* %2, align 8, !dbg !3545
  %bf.clear69 = and i32 %bf.load68, 65535, !dbg !3545
  %cmp70 = icmp eq i32 %bf.clear69, 32, !dbg !3547
  br i1 %cmp70, label %land.lhs.true72, label %sw.epilog, !dbg !3548

land.lhs.true72:                                  ; preds = %sw.bb67
  %call73 = call i32 @lookup_constraint(i8* %constraint.addr.0) #6, !dbg !3549
  %call74 = call zeroext i8 @constraint_satisfied_p(%struct.rtx_def* %op, i32 %call73) #6, !dbg !3549
  %tobool76 = icmp eq i8 %call74, 0, !dbg !3549
  %spec.select6 = select i1 %tobool76, i32 %result.0, i32 1, !dbg !3550
  br label %sw.epilog, !dbg !3550

sw.bb79:                                          ; preds = %while.body
  %bf.load80 = load i32, i32* %2, align 8, !dbg !3551
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !3551
  %cmp82 = icmp eq i32 %bf.clear81, 32, !dbg !3553
  br i1 %cmp82, label %land.lhs.true84, label %sw.epilog, !dbg !3554

land.lhs.true84:                                  ; preds = %sw.bb79
  %call85 = call i32 @lookup_constraint(i8* %constraint.addr.0) #6, !dbg !3555
  %call86 = call zeroext i8 @constraint_satisfied_p(%struct.rtx_def* %op, i32 %call85) #6, !dbg !3555
  %tobool88 = icmp eq i8 %call86, 0, !dbg !3555
  %spec.select7 = select i1 %tobool88, i32 %result.0, i32 1, !dbg !3556
  br label %sw.epilog, !dbg !3556

sw.bb91:                                          ; preds = %while.body
  %bf.load92 = load i32, i32* %2, align 8, !dbg !3557
  %bf.clear93 = and i32 %bf.load92, 65535, !dbg !3557
  %cmp94 = icmp eq i32 %bf.clear93, 30, !dbg !3557
  br i1 %cmp94, label %sw.epilog, label %lor.lhs.false96, !dbg !3559

lor.lhs.false96:                                  ; preds = %sw.bb91
  %cmp99 = icmp eq i32 %bf.clear93, 32, !dbg !3560
  br i1 %cmp99, label %land.lhs.true101, label %sw.bb109, !dbg !3561

land.lhs.true101:                                 ; preds = %lor.lhs.false96
  %bf.clear104 = and i32 %bf.load92, 16711680, !dbg !3562
  %cmp105 = icmp eq i32 %bf.clear104, 0, !dbg !3563
  br i1 %cmp105, label %sw.epilog, label %sw.bb109, !dbg !3564

sw.bb109:                                         ; preds = %while.body.sw.bb109_crit_edge, %lor.lhs.false96, %land.lhs.true101
  %bf.clear111.pre-phi = phi i32 [ %.pre21, %while.body.sw.bb109_crit_edge ], [ %bf.clear93, %lor.lhs.false96 ], [ 32, %land.lhs.true101 ], !dbg !3487
  %idxprom112 = zext i32 %bf.clear111.pre-phi to i64, !dbg !3487
  %arrayidx113 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom112, !dbg !3487
  %11 = load i32, i32* %arrayidx113, align 4, !dbg !3487
  %cmp114 = icmp eq i32 %11, 9, !dbg !3487
  br i1 %cmp114, label %land.lhs.true116, label %sw.epilog, !dbg !3565

land.lhs.true116:                                 ; preds = %sw.bb109
  %12 = load i32, i32* @flag_pic, align 4, !dbg !3566
  %tobool117 = icmp eq i32 %12, 0, !dbg !3566
  br i1 %tobool117, label %if.then122, label %lor.lhs.false118, !dbg !3567

lor.lhs.false118:                                 ; preds = %land.lhs.true116
  %call119 = call zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def* %op) #6, !dbg !3568
  %tobool121 = icmp eq i8 %call119, 0, !dbg !3568
  br i1 %tobool121, label %sw.epilog, label %if.then122, !dbg !3569

if.then122:                                       ; preds = %lor.lhs.false118, %land.lhs.true116
  call void @llvm.dbg.value(metadata i32 1, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %sw.epilog, !dbg !3570

sw.bb124:                                         ; preds = %while.body
  %bf.load125 = load i32, i32* %2, align 8, !dbg !3571
  %bf.clear126 = and i32 %bf.load125, 65535, !dbg !3571
  %cmp127 = icmp eq i32 %bf.clear126, 30, !dbg !3571
  br i1 %cmp127, label %if.then140, label %lor.lhs.false129, !dbg !3573

lor.lhs.false129:                                 ; preds = %sw.bb124
  %cmp132 = icmp eq i32 %bf.clear126, 32, !dbg !3574
  br i1 %cmp132, label %land.lhs.true134, label %sw.epilog, !dbg !3575

land.lhs.true134:                                 ; preds = %lor.lhs.false129
  %bf.clear137 = and i32 %bf.load125, 16711680, !dbg !3576
  %cmp138 = icmp eq i32 %bf.clear137, 0, !dbg !3577
  br i1 %cmp138, label %if.then140, label %sw.epilog, !dbg !3578

if.then140:                                       ; preds = %land.lhs.true134, %sw.bb124
  call void @llvm.dbg.value(metadata i32 1, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %sw.epilog, !dbg !3579

sw.bb142:                                         ; preds = %while.body
  %bf.load143 = load i32, i32* %2, align 8, !dbg !3580
  %bf.clear144 = and i32 %bf.load143, 65535, !dbg !3580
  %cmp145 = icmp eq i32 %bf.clear144, 30, !dbg !3580
  br i1 %cmp145, label %land.lhs.true147, label %sw.epilog, !dbg !3582

land.lhs.true147:                                 ; preds = %sw.bb142
  %13 = load i64, i64* %arrayidx253, align 8, !dbg !3583
  %call149 = call i32 @lookup_constraint(i8* %constraint.addr.0) #6, !dbg !3583
  %call150 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %13, i32 %call149) #6, !dbg !3583
  %tobool152 = icmp eq i8 %call150, 0, !dbg !3583
  %spec.select8 = select i1 %tobool152, i32 %result.0, i32 1, !dbg !3584
  br label %sw.epilog, !dbg !3584

sw.bb155:                                         ; preds = %while.body
  %bf.load156 = load i32, i32* %2, align 8, !dbg !3585
  %bf.clear157 = and i32 %bf.load156, 65535, !dbg !3585
  %cmp158 = icmp eq i32 %bf.clear157, 30, !dbg !3585
  br i1 %cmp158, label %land.lhs.true160, label %sw.epilog, !dbg !3587

land.lhs.true160:                                 ; preds = %sw.bb155
  %14 = load i64, i64* %arrayidx253, align 8, !dbg !3588
  %call164 = call i32 @lookup_constraint(i8* %constraint.addr.0) #6, !dbg !3588
  %call165 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %14, i32 %call164) #6, !dbg !3588
  %tobool167 = icmp eq i8 %call165, 0, !dbg !3588
  %spec.select9 = select i1 %tobool167, i32 %result.0, i32 1, !dbg !3589
  br label %sw.epilog, !dbg !3589

sw.bb170:                                         ; preds = %while.body
  %bf.load171 = load i32, i32* %2, align 8, !dbg !3590
  %bf.clear172 = and i32 %bf.load171, 65535, !dbg !3590
  %cmp173 = icmp eq i32 %bf.clear172, 30, !dbg !3590
  br i1 %cmp173, label %land.lhs.true175, label %sw.epilog, !dbg !3592

land.lhs.true175:                                 ; preds = %sw.bb170
  %15 = load i64, i64* %arrayidx253, align 8, !dbg !3593
  %call179 = call i32 @lookup_constraint(i8* %constraint.addr.0) #6, !dbg !3593
  %call180 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %15, i32 %call179) #6, !dbg !3593
  %tobool182 = icmp eq i8 %call180, 0, !dbg !3593
  %spec.select10 = select i1 %tobool182, i32 %result.0, i32 1, !dbg !3594
  br label %sw.epilog, !dbg !3594

sw.bb185:                                         ; preds = %while.body
  %bf.load186 = load i32, i32* %2, align 8, !dbg !3595
  %bf.clear187 = and i32 %bf.load186, 65535, !dbg !3595
  %cmp188 = icmp eq i32 %bf.clear187, 30, !dbg !3595
  br i1 %cmp188, label %land.lhs.true190, label %sw.epilog, !dbg !3597

land.lhs.true190:                                 ; preds = %sw.bb185
  %16 = load i64, i64* %arrayidx253, align 8, !dbg !3598
  %call194 = call i32 @lookup_constraint(i8* %constraint.addr.0) #6, !dbg !3598
  %call195 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %16, i32 %call194) #6, !dbg !3598
  %tobool197 = icmp eq i8 %call195, 0, !dbg !3598
  %spec.select11 = select i1 %tobool197, i32 %result.0, i32 1, !dbg !3599
  br label %sw.epilog, !dbg !3599

sw.bb200:                                         ; preds = %while.body
  %bf.load201 = load i32, i32* %2, align 8, !dbg !3600
  %bf.clear202 = and i32 %bf.load201, 65535, !dbg !3600
  %cmp203 = icmp eq i32 %bf.clear202, 30, !dbg !3600
  br i1 %cmp203, label %land.lhs.true205, label %sw.epilog, !dbg !3602

land.lhs.true205:                                 ; preds = %sw.bb200
  %17 = load i64, i64* %arrayidx253, align 8, !dbg !3603
  %call209 = call i32 @lookup_constraint(i8* %constraint.addr.0) #6, !dbg !3603
  %call210 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %17, i32 %call209) #6, !dbg !3603
  %tobool212 = icmp eq i8 %call210, 0, !dbg !3603
  %spec.select12 = select i1 %tobool212, i32 %result.0, i32 1, !dbg !3604
  br label %sw.epilog, !dbg !3604

sw.bb215:                                         ; preds = %while.body
  %bf.load216 = load i32, i32* %2, align 8, !dbg !3605
  %bf.clear217 = and i32 %bf.load216, 65535, !dbg !3605
  %cmp218 = icmp eq i32 %bf.clear217, 30, !dbg !3605
  br i1 %cmp218, label %land.lhs.true220, label %sw.epilog, !dbg !3607

land.lhs.true220:                                 ; preds = %sw.bb215
  %18 = load i64, i64* %arrayidx253, align 8, !dbg !3608
  %call224 = call i32 @lookup_constraint(i8* %constraint.addr.0) #6, !dbg !3608
  %call225 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %18, i32 %call224) #6, !dbg !3608
  %tobool227 = icmp eq i8 %call225, 0, !dbg !3608
  %spec.select13 = select i1 %tobool227, i32 %result.0, i32 1, !dbg !3609
  br label %sw.epilog, !dbg !3609

sw.bb230:                                         ; preds = %while.body
  %bf.load231 = load i32, i32* %2, align 8, !dbg !3610
  %bf.clear232 = and i32 %bf.load231, 65535, !dbg !3610
  %cmp233 = icmp eq i32 %bf.clear232, 30, !dbg !3610
  br i1 %cmp233, label %land.lhs.true235, label %sw.epilog, !dbg !3612

land.lhs.true235:                                 ; preds = %sw.bb230
  %19 = load i64, i64* %arrayidx253, align 8, !dbg !3613
  %call239 = call i32 @lookup_constraint(i8* %constraint.addr.0) #6, !dbg !3613
  %call240 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %19, i32 %call239) #6, !dbg !3613
  %tobool242 = icmp eq i8 %call240, 0, !dbg !3613
  %spec.select14 = select i1 %tobool242, i32 %result.0, i32 1, !dbg !3614
  br label %sw.epilog, !dbg !3614

sw.bb245:                                         ; preds = %while.body
  %bf.load246 = load i32, i32* %2, align 8, !dbg !3615
  %bf.clear247 = and i32 %bf.load246, 65535, !dbg !3615
  %cmp248 = icmp eq i32 %bf.clear247, 30, !dbg !3615
  br i1 %cmp248, label %land.lhs.true250, label %sw.epilog, !dbg !3616

land.lhs.true250:                                 ; preds = %sw.bb245
  %20 = load i64, i64* %arrayidx253, align 8, !dbg !3617
  %call254 = call i32 @lookup_constraint(i8* %constraint.addr.0) #6, !dbg !3617
  %call255 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %20, i32 %call254) #6, !dbg !3617
  %tobool257 = icmp eq i8 %call255, 0, !dbg !3617
  %spec.select15 = select i1 %tobool257, i32 %result.0, i32 1, !dbg !3618
  br label %sw.epilog, !dbg !3618

sw.bb260:                                         ; preds = %while.body
  call void @llvm.dbg.value(metadata i32 1, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %sw.epilog, !dbg !3619

sw.bb261:                                         ; preds = %while.body
  %call262 = call i32 @general_operand(%struct.rtx_def* %op, i32 0) #7, !dbg !3620
  %tobool263 = icmp eq i32 %call262, 0, !dbg !3620
  %spec.select16 = select i1 %tobool263, i32 %result.0, i32 1, !dbg !3622
  call void @llvm.dbg.value(metadata i32 %spec.select16, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %sw.epilog, !dbg !3623

sw.default:                                       ; preds = %while.body
  %call266 = call i32 @lookup_constraint(i8* %constraint.addr.0) #6, !dbg !3624
  %call267 = call i32 @regclass_for_constraint(i32 %call266) #6, !dbg !3624
  %cmp268 = icmp eq i32 %call267, 0, !dbg !3626
  br i1 %cmp268, label %if.else283, label %sw.bb271, !dbg !3627

sw.bb271:                                         ; preds = %sw.default, %while.body
  %bf.load272 = load i32, i32* %2, align 8, !dbg !3628
  %bf.clear274 = and i32 %bf.load272, 16711680, !dbg !3628
  %cmp275 = icmp eq i32 %bf.clear274, 65536, !dbg !3631
  br i1 %cmp275, label %sw.epilog, label %if.end278, !dbg !3632

if.end278:                                        ; preds = %sw.bb271
  %call279 = call i32 @register_operand(%struct.rtx_def* %op, i32 0) #7, !dbg !3633
  %tobool280 = icmp eq i32 %call279, 0, !dbg !3633
  %spec.select17 = select i1 %tobool280, i32 %result.0, i32 1, !dbg !3635
  call void @llvm.dbg.value(metadata i32 %spec.select17, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %sw.epilog, !dbg !3636

if.else283:                                       ; preds = %sw.default
  %call284 = call i32 @lookup_constraint(i8* %constraint.addr.0) #6, !dbg !3637
  %call285 = call zeroext i8 @constraint_satisfied_p(%struct.rtx_def* %op, i32 %call284) #6, !dbg !3637
  %tobool286 = icmp eq i8 %call285, 0, !dbg !3637
  %spec.select18 = select i1 %tobool286, i32 %result.0, i32 1, !dbg !3641
  call void @llvm.dbg.value(metadata i32 %spec.select18, metadata !3462, metadata !DIExpression()), !dbg !3471
  br label %sw.epilog

sw.epilog:                                        ; preds = %lor.lhs.false118, %land.lhs.true250, %land.lhs.true235, %land.lhs.true220, %land.lhs.true205, %land.lhs.true190, %land.lhs.true175, %land.lhs.true160, %land.lhs.true147, %land.lhs.true84, %land.lhs.true72, %if.end278, %if.else283, %sw.bb271, %sw.bb245, %sw.bb230, %sw.bb215, %sw.bb200, %sw.bb185, %sw.bb170, %sw.bb155, %sw.bb142, %lor.lhs.false129, %land.lhs.true134, %if.then140, %sw.bb109, %if.then122, %sw.bb91, %land.lhs.true101, %sw.bb79, %sw.bb67, %lor.lhs.false, %land.lhs.true, %if.then65, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %sw.bb261, %sw.bb260, %sw.bb42, %sw.bb37, %sw.bb32, %sw.bb27, %sw.bb22
  %result.26 = phi i32 [ %spec.select16, %sw.bb261 ], [ 1, %sw.bb260 ], [ %spec.select5, %sw.bb42 ], [ %spec.select4, %sw.bb37 ], [ %spec.select3, %sw.bb32 ], [ %spec.select2, %sw.bb27 ], [ %spec.select1, %sw.bb22 ], [ %result.0, %while.body ], [ %result.0, %while.body ], [ %result.0, %while.body ], [ %result.0, %while.body ], [ %result.0, %while.body ], [ %result.0, %while.body ], [ %result.0, %while.body ], [ %result.0, %while.body ], [ 1, %if.then65 ], [ %result.0, %land.lhs.true ], [ %result.0, %lor.lhs.false ], [ %result.0, %sw.bb67 ], [ %spec.select6, %land.lhs.true72 ], [ %result.0, %sw.bb79 ], [ %spec.select7, %land.lhs.true84 ], [ %result.0, %land.lhs.true101 ], [ %result.0, %sw.bb91 ], [ 1, %if.then122 ], [ %result.0, %lor.lhs.false118 ], [ %result.0, %sw.bb109 ], [ 1, %if.then140 ], [ %result.0, %land.lhs.true134 ], [ %result.0, %lor.lhs.false129 ], [ %result.0, %sw.bb142 ], [ %spec.select8, %land.lhs.true147 ], [ %result.0, %sw.bb155 ], [ %spec.select9, %land.lhs.true160 ], [ %result.0, %sw.bb170 ], [ %spec.select10, %land.lhs.true175 ], [ %result.0, %sw.bb185 ], [ %spec.select11, %land.lhs.true190 ], [ %result.0, %sw.bb200 ], [ %spec.select12, %land.lhs.true205 ], [ %result.0, %sw.bb215 ], [ %spec.select13, %land.lhs.true220 ], [ %result.0, %sw.bb230 ], [ %spec.select14, %land.lhs.true235 ], [ %result.0, %sw.bb245 ], [ %spec.select15, %land.lhs.true250 ], [ %result.0, %sw.bb271 ], [ %spec.select17, %if.end278 ], [ %spec.select18, %if.else283 ], !dbg !3471
  call void @llvm.dbg.value(metadata i32 %result.26, metadata !3462, metadata !DIExpression()), !dbg !3471
  %call290 = call fastcc i64 @insn_constraint_len(i8 signext %4, i8* %constraint.addr.0) #7, !dbg !3642
  %conv291 = trunc i64 %call290 to i32, !dbg !3642
  call void @llvm.dbg.value(metadata i32 %conv291, metadata !3465, metadata !DIExpression()), !dbg !3484
  br label %do.body292, !dbg !3643

do.body292:                                       ; preds = %land.rhs, %sw.epilog
  %constraint.addr.3 = phi i8* [ %constraint.addr.0, %sw.epilog ], [ %incdec.ptr293, %land.rhs ]
  %len.0 = phi i32 [ %conv291, %sw.epilog ], [ %dec, %land.rhs ], !dbg !3484
  call void @llvm.dbg.value(metadata i32 %len.0, metadata !3465, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata i8* %constraint.addr.3, metadata !3460, metadata !DIExpression()), !dbg !3471
  %incdec.ptr293 = getelementptr inbounds i8, i8* %constraint.addr.3, i64 1, !dbg !3644
  call void @llvm.dbg.value(metadata i8* %incdec.ptr293, metadata !3460, metadata !DIExpression()), !dbg !3471
  %dec = add nsw i32 %len.0, -1, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %dec, metadata !3465, metadata !DIExpression()), !dbg !3484
  %tobool295 = icmp eq i32 %dec, 0, !dbg !3645
  br i1 %tobool295, label %do.end298, label %land.rhs, !dbg !3646

land.rhs:                                         ; preds = %do.body292
  %21 = load i8, i8* %incdec.ptr293, align 1, !dbg !3647
  %tobool297 = icmp eq i8 %21, 0, !dbg !3646
  br i1 %tobool297, label %do.end298, label %do.body292, !dbg !3648, !llvm.loop !3649

do.end298:                                        ; preds = %land.rhs, %do.body292
  %incdec.ptr293.lcssa = phi i8* [ %incdec.ptr293, %land.rhs ], [ %incdec.ptr293, %do.body292 ], !dbg !3644
  %dec.lcssa = phi i32 [ %dec, %land.rhs ], [ %dec, %do.body292 ], !dbg !3645
  %tobool299 = icmp ne i32 %dec.lcssa, 0, !dbg !3651
  %. = zext i1 %tobool299 to i32, !dbg !3471
  br label %cleanup, !dbg !3471

cleanup:                                          ; preds = %do.end298, %if.end11, %do.end, %sw.bb
  %result.27 = phi i32 [ %result.0, %sw.bb ], [ %result.1, %if.end11 ], [ %spec.select, %do.end ], [ %result.26, %do.end298 ], !dbg !3483
  %cleanup.dest.slot.0 = phi i32 [ 2, %sw.bb ], [ 2, %if.end11 ], [ 2, %do.end ], [ %., %do.end298 ]
  %constraint.addr.4 = phi i8* [ %incdec.ptr, %sw.bb ], [ %6, %if.end11 ], [ %incdec.ptr12.lcssa, %do.end ], [ %incdec.ptr293.lcssa, %do.end298 ], !dbg !3484
  call void @llvm.dbg.value(metadata i8* %constraint.addr.4, metadata !3460, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i32 %result.27, metadata !3462, metadata !DIExpression()), !dbg !3471
  switch i32 %cleanup.dest.slot.0, label %cleanup303.loopexit [
    i32 0, label %while.cond.backedge
    i32 2, label %while.cond.backedge
  ]

while.cond.backedge:                              ; preds = %cleanup, %cleanup
  %.pre = load i8, i8* %constraint.addr.4, align 1, !dbg !3482
  br label %while.cond, !dbg !3471, !llvm.loop !3491

cleanup303.loopexit:                              ; preds = %cleanup, %while.cond
  %retval.2.ph = phi i32 [ %result.0, %while.cond ], [ 0, %cleanup ]
  br label %cleanup303, !dbg !3653

cleanup303:                                       ; preds = %cleanup303.loopexit, %cond.end
  %retval.2 = phi i32 [ 1, %cond.end ], [ %retval.2.ph, %cleanup303.loopexit ], !dbg !3471
  ret i32 %retval.2, !dbg !3653
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %new_rtx, i8 zeroext %in_group) local_unnamed_addr #5 !dbg !3654 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %object, metadata !3658, metadata !DIExpression()), !dbg !3662
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !3659, metadata !DIExpression()), !dbg !3662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx, metadata !3660, metadata !DIExpression()), !dbg !3662
  call void @llvm.dbg.value(metadata i8 %in_group, metadata !3661, metadata !DIExpression()), !dbg !3662
  %call = tail call fastcc zeroext i8 @validate_change_1(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %new_rtx, i8 zeroext %in_group, i8 zeroext 0) #7, !dbg !3663
  ret i8 %call, !dbg !3664
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @validate_change_1(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %new_rtx, i8 zeroext %in_group, i8 zeroext %unshare) unnamed_addr #5 !dbg !3665 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %object, metadata !3669, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !3670, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx, metadata !3671, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i8 %in_group, metadata !3672, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i8 %unshare, metadata !3673, metadata !DIExpression()), !dbg !3675
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !3676
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !3674, metadata !DIExpression()), !dbg !3675
  %cmp = icmp eq %struct.rtx_def* %0, %new_rtx, !dbg !3677
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !3679

lor.lhs.false:                                    ; preds = %entry
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %0, %struct.rtx_def* %new_rtx) #6, !dbg !3680
  %tobool = icmp eq i32 %call, 0, !dbg !3680
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3681

if.end:                                           ; preds = %lor.lhs.false
  %cmp1 = icmp ne i8 %in_group, 0, !dbg !3682
  %1 = load i32, i32* @num_changes, align 4, !dbg !3682
  %cmp4 = icmp eq i32 %1, 0, !dbg !3682
  %or.cond = or i1 %cmp1, %cmp4, !dbg !3682
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !3682

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 208, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3682
  %.pre = load i32, i32* @num_changes, align 4, !dbg !3683
  br label %cond.end, !dbg !3682

cond.end:                                         ; preds = %if.end, %cond.true
  %2 = phi i32 [ %1, %if.end ], [ %.pre, %cond.true ], !dbg !3683
  store %struct.rtx_def* %new_rtx, %struct.rtx_def** %loc, align 8, !dbg !3685
  %3 = load i32, i32* @changes_allocated, align 4, !dbg !3686
  %cmp6 = icmp slt i32 %2, %3, !dbg !3687
  br i1 %cmp6, label %cond.end.if.end16_crit_edge, label %if.then8, !dbg !3688

cond.end.if.end16_crit_edge:                      ; preds = %cond.end
  %.pre1 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3689
  br label %if.end16, !dbg !3688

if.then8:                                         ; preds = %cond.end
  %cmp9 = icmp eq i32 %3, 0, !dbg !3690
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !3693

if.then11:                                        ; preds = %if.then8
  br label %if.end12, !dbg !3694

if.else:                                          ; preds = %if.then8
  %mul = shl nsw i32 %3, 1, !dbg !3695
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then11
  %storemerge = phi i32 [ %mul, %if.else ], [ 150, %if.then11 ], !dbg !3696
  store i32 %storemerge, i32* @changes_allocated, align 4, !dbg !3696
  %4 = load i8*, i8** bitcast (%struct.change_t** @changes to i8**), align 8, !dbg !3697
  %conv13 = sext i32 %storemerge to i64, !dbg !3697
  %mul14 = mul nsw i64 %conv13, 40, !dbg !3697
  %call15 = tail call i8* @xrealloc(i8* %4, i64 %mul14) #6, !dbg !3697
  store i8* %call15, i8** bitcast (%struct.change_t** @changes to i8**), align 8, !dbg !3698
  %5 = bitcast i8* %call15 to %struct.change_t*, !dbg !3699
  %.pre2 = load i32, i32* @num_changes, align 4, !dbg !3700
  br label %if.end16, !dbg !3699

if.end16:                                         ; preds = %cond.end.if.end16_crit_edge, %if.end12
  %6 = phi i32 [ %2, %cond.end.if.end16_crit_edge ], [ %.pre2, %if.end12 ], !dbg !3701
  %7 = phi %struct.change_t* [ %.pre1, %cond.end.if.end16_crit_edge ], [ %5, %if.end12 ], !dbg !3689
  %idxprom = sext i32 %6 to i64, !dbg !3689
  %object17 = getelementptr inbounds %struct.change_t, %struct.change_t* %7, i64 %idxprom, i32 0, !dbg !3702
  store %struct.rtx_def* %object, %struct.rtx_def** %object17, align 8, !dbg !3703
  %8 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3704
  %loc20 = getelementptr inbounds %struct.change_t, %struct.change_t* %8, i64 %idxprom, i32 2, !dbg !3705
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc20, align 8, !dbg !3706
  %9 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3707
  %old23 = getelementptr inbounds %struct.change_t, %struct.change_t* %9, i64 %idxprom, i32 3, !dbg !3708
  store %struct.rtx_def* %0, %struct.rtx_def** %old23, align 8, !dbg !3709
  %10 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3710
  %unshare26 = getelementptr inbounds %struct.change_t, %struct.change_t* %10, i64 %idxprom, i32 4, !dbg !3711
  store i8 %unshare, i8* %unshare26, align 8, !dbg !3712
  %tobool27 = icmp eq %struct.rtx_def* %object, null, !dbg !3713
  br i1 %tobool27, label %if.end38, label %land.lhs.true, !dbg !3715

land.lhs.true:                                    ; preds = %if.end16
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %object, i64 0, i32 0, !dbg !3716
  %bf.load = load i32, i32* %11, align 8, !dbg !3716
  %bf.clear = and i32 %bf.load, 65535, !dbg !3716
  %cmp28 = icmp eq i32 %bf.clear, 43, !dbg !3716
  br i1 %cmp28, label %if.end38, label %if.then30, !dbg !3717

if.then30:                                        ; preds = %land.lhs.true
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %object, i64 0, i32 1, !dbg !3718
  %12 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !3718
  %rt_int = bitcast %union.rtunion_def* %12 to i32*, !dbg !3718
  %13 = load i32, i32* %rt_int, align 8, !dbg !3718
  %14 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3720
  %15 = load i32, i32* @num_changes, align 4, !dbg !3721
  %idxprom32 = sext i32 %15 to i64, !dbg !3720
  %old_code = getelementptr inbounds %struct.change_t, %struct.change_t* %14, i64 %idxprom32, i32 1, !dbg !3722
  store i32 %13, i32* %old_code, align 8, !dbg !3723
  store i32 -1, i32* %rt_int, align 8, !dbg !3724
  br label %if.end38, !dbg !3725

if.end38:                                         ; preds = %if.end16, %if.then30, %land.lhs.true
  %16 = load i32, i32* @num_changes, align 4, !dbg !3726
  %inc = add nsw i32 %16, 1, !dbg !3726
  store i32 %inc, i32* @num_changes, align 4, !dbg !3726
  %tobool39 = icmp eq i8 %in_group, 0, !dbg !3727
  br i1 %tobool39, label %if.else41, label %cleanup, !dbg !3729

if.else41:                                        ; preds = %if.end38
  %call42 = tail call i32 @apply_change_group() #7, !dbg !3730
  %conv43 = trunc i32 %call42 to i8, !dbg !3730
  br label %cleanup, !dbg !3731

cleanup:                                          ; preds = %if.end38, %lor.lhs.false, %entry, %if.else41
  %retval.0 = phi i8 [ %conv43, %if.else41 ], [ 1, %lor.lhs.false ], [ 1, %entry ], [ 1, %if.end38 ], !dbg !3675
  ret i8 %retval.0, !dbg !3732
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @validate_unshare_change(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %new_rtx, i8 zeroext %in_group) local_unnamed_addr #5 !dbg !3733 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %object, metadata !3735, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !3736, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx, metadata !3737, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.value(metadata i8 %in_group, metadata !3738, metadata !DIExpression()), !dbg !3739
  %call = tail call fastcc zeroext i8 @validate_change_1(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %new_rtx, i8 zeroext %in_group, i8 zeroext 1) #7, !dbg !3740
  ret i8 %call, !dbg !3741
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @canonicalize_change_group(%struct.rtx_def* %insn, %struct.rtx_def* %x) local_unnamed_addr #5 !dbg !3742 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3746, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3747, metadata !DIExpression()), !dbg !3751
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3752
  %bf.load = load i32, i32* %0, align 8, !dbg !3752
  %bf.clear = and i32 %bf.load, 65535, !dbg !3752
  %idxprom = zext i32 %bf.clear to i64, !dbg !3752
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !3752
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3752
  %and = and i32 %1, -3, !dbg !3752
  %cmp = icmp eq i32 %and, 1, !dbg !3752
  br i1 %cmp, label %land.lhs.true, label %return, !dbg !3753

land.lhs.true:                                    ; preds = %entry
  %arrayidx1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3754
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx1 to %struct.rtx_def**, !dbg !3754
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3754
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3755
  %rt_rtx5 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !3755
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !3755
  %call = tail call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %2, %struct.rtx_def* %4) #6, !dbg !3756
  %tobool = icmp eq i8 %call, 0, !dbg !3756
  br i1 %tobool, label %return, label %if.then, !dbg !3757

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3748, metadata !DIExpression()), !dbg !3759
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !3760
  %call18 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx, %struct.rtx_def* %6, i8 zeroext 1) #7, !dbg !3761
  %call23 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx5, %struct.rtx_def* %5, i8 zeroext 1) #7, !dbg !3762
  br label %return

return:                                           ; preds = %land.lhs.true, %entry, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !3763
  ret i8 %retval.0, !dbg !3764
}

declare dso_local zeroext i8 @swap_commutative_operands_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @insn_invalid_p(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !3765 {
entry:
  %num_clobbers = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3767, metadata !DIExpression()), !dbg !3775
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3776
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3776
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !3776
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3776
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3768, metadata !DIExpression()), !dbg !3775
  %2 = bitcast i32* %num_clobbers to i8*, !dbg !3777
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !3777
  call void @llvm.dbg.value(metadata i32 0, metadata !3769, metadata !DIExpression()), !dbg !3775
  store i32 0, i32* %num_clobbers, align 4, !dbg !3778
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3779
  %bf.load = load i32, i32* %3, align 8, !dbg !3779
  %bf.clear = and i32 %bf.load, 65535, !dbg !3779
  %cmp = icmp ne i32 %bf.clear, 23, !dbg !3780
  %4 = load i32, i32* @reload_completed, align 4, !dbg !3781
  %5 = load i32, i32* @reload_in_progress, align 4, !dbg !3782
  %6 = or i32 %4, %5, !dbg !3783
  %7 = icmp ne i32 %6, 0, !dbg !3783
  %8 = or i1 %7, %cmp, !dbg !3783
  %cond = select i1 %8, i32* null, i32* %num_clobbers, !dbg !3783
  %call = call i32 @recog(%struct.rtx_def* %1, %struct.rtx_def* %insn, i32* %cond) #6, !dbg !3784
  call void @llvm.dbg.value(metadata i32 %call, metadata !3770, metadata !DIExpression()), !dbg !3775
  %cmp3 = icmp slt i32 %call, 0, !dbg !3785
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !3786

land.rhs:                                         ; preds = %entry
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3787
  %call8 = call i32 @asm_noperands(%struct.rtx_def* %9) #7, !dbg !3788
  %cmp9 = icmp slt i32 %call8, 0, !dbg !3789
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %10 = phi i1 [ true, %entry ], [ %cmp9, %land.rhs ]
  br i1 %10, label %land.lhs.true19, label %land.lhs.true11, !dbg !3790

land.lhs.true11:                                  ; preds = %land.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3792
  %call16 = call i32 @check_asm_operands(%struct.rtx_def* %11) #7, !dbg !3793
  %tobool17 = icmp eq i32 %call16, 0, !dbg !3793
  br i1 %tobool17, label %cleanup48, label %lor.lhs.false, !dbg !3794

lor.lhs.false:                                    ; preds = %land.lhs.true11
  br i1 false, label %lor.lhs.false.cleanup48_crit_edge, label %if.end, !dbg !3795

lor.lhs.false.cleanup48_crit_edge:                ; preds = %lor.lhs.false
  br label %cleanup48, !dbg !3795

land.lhs.true19:                                  ; preds = %land.end
  br i1 %cmp3, label %cleanup48, label %if.end, !dbg !3796

if.end:                                           ; preds = %lor.lhs.false, %land.lhs.true19
  %12 = load i32, i32* %num_clobbers, align 4, !dbg !3797
  call void @llvm.dbg.value(metadata i32 %12, metadata !3769, metadata !DIExpression()), !dbg !3775
  %cmp21 = icmp sgt i32 %12, 0, !dbg !3798
  br i1 %cmp21, label %if.then22, label %if.end37, !dbg !3799

if.then22:                                        ; preds = %if.end
  %call23 = call i32 @added_clobbers_hard_reg_p(i32 %call) #6, !dbg !3800
  %tobool24 = icmp eq i32 %call23, 0, !dbg !3800
  br i1 %tobool24, label %if.end26, label %cleanup, !dbg !3802

if.end26:                                         ; preds = %if.then22
  %13 = load i32, i32* %num_clobbers, align 4, !dbg !3803
  call void @llvm.dbg.value(metadata i32 %13, metadata !3769, metadata !DIExpression()), !dbg !3775
  %add = add nsw i32 %13, 1, !dbg !3803
  %call27 = call %struct.rtvec_def* @rtvec_alloc(i32 %add) #6, !dbg !3803
  %call28 = call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 15, i32 0, %struct.rtvec_def* %call27) #6, !dbg !3803
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !3772, metadata !DIExpression()), !dbg !3804
  %arrayidx31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call28, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3805
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtvec_def**, !dbg !3805
  %14 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3805
  %arrayidx32 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %14, i64 0, i32 1, i64 0, !dbg !3805
  store %struct.rtx_def* %1, %struct.rtx_def** %arrayidx32, align 8, !dbg !3806
  call void @add_clobbers(%struct.rtx_def* %call28, i32 %call) #6, !dbg !3807
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !3768, metadata !DIExpression()), !dbg !3775
  store %struct.rtx_def* %call28, %struct.rtx_def** %rt_rtx, align 8, !dbg !3808
  br label %cleanup, !dbg !3809

cleanup:                                          ; preds = %if.then22, %if.end26
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end26 ], [ false, %if.then22 ]
  br i1 %cleanup.dest.slot.0, label %if.end37, label %cleanup48

if.end37:                                         ; preds = %cleanup, %if.end
  %15 = load i32, i32* @reload_completed, align 4, !dbg !3810
  %tobool38 = icmp eq i32 %15, 0, !dbg !3810
  br i1 %tobool38, label %if.end44, label %if.then39, !dbg !3812

if.then39:                                        ; preds = %if.end37
  call void @extract_insn(%struct.rtx_def* %insn) #7, !dbg !3813
  %call40 = call i32 @constrain_operands(i32 1) #7, !dbg !3815
  %tobool41 = icmp eq i32 %call40, 0, !dbg !3815
  br i1 %tobool41, label %cleanup48, label %if.end44, !dbg !3817

if.end44:                                         ; preds = %if.then39, %if.end37
  %16 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !3818
  %rt_int = bitcast %union.rtunion_def* %16 to i32*, !dbg !3818
  store i32 %call, i32* %rt_int, align 8, !dbg !3819
  br label %cleanup48, !dbg !3820

cleanup48:                                        ; preds = %lor.lhs.false.cleanup48_crit_edge, %if.then39, %land.lhs.true11, %land.lhs.true19, %cleanup, %if.end44
  %retval.1 = phi i32 [ 1, %cleanup ], [ 0, %if.end44 ], [ undef, %lor.lhs.false.cleanup48_crit_edge ], [ 1, %land.lhs.true19 ], [ 1, %land.lhs.true11 ], [ 1, %if.then39 ], !dbg !3775
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !3821
  ret i32 %retval.1, !dbg !3821
}

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) local_unnamed_addr #2

declare dso_local i32 @added_clobbers_hard_reg_p(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_E_stat(i32, i32, %struct.rtvec_def*) local_unnamed_addr #2

declare dso_local %struct.rtvec_def* @rtvec_alloc(i32) local_unnamed_addr #2

declare dso_local void @add_clobbers(%struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @num_changes_pending() local_unnamed_addr #5 !dbg !3822 {
entry:
  %0 = load i32, i32* @num_changes, align 4, !dbg !3823
  ret i32 %0, !dbg !3824
}

; Function Attrs: nounwind uwtable
define dso_local i32 @verify_changes(i32 %num) local_unnamed_addr #5 !dbg !3825 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !3827, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !3829, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.value(metadata i32 %num, metadata !3828, metadata !DIExpression()), !dbg !3846
  %0 = sext i32 %num to i64, !dbg !3847
  br label %for.cond, !dbg !3847

for.cond:                                         ; preds = %for.inc251, %entry
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.inc251 ], [ %0, %entry ], !dbg !3848
  %last_validated.0 = phi %struct.rtx_def* [ %last_validated.1, %for.inc251 ], [ null, %entry ], !dbg !3848
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !3828, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_validated.0, metadata !3829, metadata !DIExpression()), !dbg !3846
  %1 = load i32, i32* @num_changes, align 4, !dbg !3849
  %2 = sext i32 %1 to i64, !dbg !3850
  %cmp = icmp slt i64 %indvars.iv7, %2, !dbg !3850
  br i1 %cmp, label %for.body, label %for.end253.loopexit, !dbg !3851

for.body:                                         ; preds = %for.cond
  %3 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3852
  %object1 = getelementptr inbounds %struct.change_t, %struct.change_t* %3, i64 %indvars.iv7, i32 0, !dbg !3853
  %4 = load %struct.rtx_def*, %struct.rtx_def** %object1, align 8, !dbg !3853
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3830, metadata !DIExpression()), !dbg !3854
  %cmp2 = icmp eq %struct.rtx_def* %4, null, !dbg !3855
  %cmp3 = icmp eq %struct.rtx_def* %4, %last_validated.0, !dbg !3857
  %or.cond = or i1 %cmp2, %cmp3, !dbg !3858
  br i1 %or.cond, label %cleanup250, label %if.end, !dbg !3858

if.end:                                           ; preds = %for.body
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !3859
  %bf.load = load i32, i32* %5, align 8, !dbg !3859
  %bf.clear = and i32 %bf.load, 65535, !dbg !3859
  %cmp4 = icmp eq i32 %bf.clear, 43, !dbg !3859
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !3860

if.then5:                                         ; preds = %if.end
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3861
  %bf.clear7 = and i32 %bf.lshr, 255, !dbg !3861
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3864
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !3864
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3864
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3865
  %rt_mem = bitcast %union.rtunion_def* %7 to %struct.mem_attrs**, !dbg !3865
  %8 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3865
  %cmp12 = icmp eq %struct.mem_attrs* %8, null, !dbg !3865
  br i1 %cmp12, label %cond.end, label %cond.false, !dbg !3865

cond.false:                                       ; preds = %if.then5
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i64 0, i32 5, !dbg !3865
  %9 = load i8, i8* %addrspace, align 8, !dbg !3865
  br label %cond.end, !dbg !3865

cond.end:                                         ; preds = %if.then5, %cond.false
  %cond = phi i8 [ %9, %cond.false ], [ 0, %if.then5 ], !dbg !3865
  %call = tail call i32 @memory_address_addr_space_p(i32 %bf.clear7, %struct.rtx_def* %6, i8 zeroext %cond) #7, !dbg !3866
  %tobool = icmp eq i32 %call, 0, !dbg !3866
  br i1 %tobool, label %cleanup250, label %if.end249, !dbg !3867

if.else:                                          ; preds = %if.end
  %old = getelementptr inbounds %struct.change_t, %struct.change_t* %3, i64 %indvars.iv7, i32 3, !dbg !3868
  %10 = bitcast %struct.rtx_def** %old to i32**, !dbg !3868
  %11 = load i32*, i32** %10, align 8, !dbg !3868
  %bf.load22 = load i32, i32* %11, align 8, !dbg !3868
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !3868
  %cmp24 = icmp eq i32 %bf.clear23, 37, !dbg !3868
  br i1 %cmp24, label %land.lhs.true, label %if.else136, !dbg !3869

land.lhs.true:                                    ; preds = %if.else
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, !dbg !3870
  %12 = getelementptr inbounds %union.u, %union.u* %u26, i64 1, i32 0, i32 0, i64 0, !dbg !3870
  %rt_rtx29 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !3870
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !3870
  %call30 = tail call i32 @asm_noperands(%struct.rtx_def* %13) #7, !dbg !3871
  %cmp31 = icmp sgt i32 %call30, 0, !dbg !3872
  br i1 %cmp31, label %land.lhs.true33, label %if.else136, !dbg !3873

land.lhs.true33:                                  ; preds = %land.lhs.true
  %14 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3874
  %old36 = getelementptr inbounds %struct.change_t, %struct.change_t* %14, i64 %indvars.iv7, i32 3, !dbg !3874
  %15 = load %struct.rtx_def*, %struct.rtx_def** %old36, align 8, !dbg !3874
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3874
  %rt_reg = bitcast %union.rtunion_def* %16 to %struct.reg_attrs**, !dbg !3874
  %17 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !3874
  %cmp40 = icmp eq %struct.reg_attrs* %17, null, !dbg !3874
  %18 = bitcast %struct.reg_attrs* %17 to i64**, !dbg !3874
  br i1 %cmp40, label %cond.end51, label %cond.false43, !dbg !3874

cond.false43:                                     ; preds = %land.lhs.true33
  %decl = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %17, i64 0, i32 0, !dbg !3874
  %19 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3874
  br label %cond.end51, !dbg !3874

cond.end51:                                       ; preds = %land.lhs.true33, %cond.false43
  %cond52 = phi %union.tree_node* [ %19, %cond.false43 ], [ null, %land.lhs.true33 ], !dbg !3874
  %cmp53 = icmp eq %union.tree_node* %cond52, null, !dbg !3875
  br i1 %cmp53, label %if.else136, label %land.lhs.true55, !dbg !3876

land.lhs.true55:                                  ; preds = %cond.end51
  %20 = load i64*, i64** %18, align 8, !dbg !3877
  %bf.load77 = load i64, i64* %20, align 8, !dbg !3877
  %bf.cast = and i64 %bf.load77, 65535, !dbg !3877
  %arrayidx81 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 13, !dbg !3877
  %21 = load i8, i8* %arrayidx81, align 1, !dbg !3877
  %tobool83 = icmp eq i8 %21, 0, !dbg !3877
  br i1 %tobool83, label %if.else136, label %land.lhs.true84, !dbg !3877

land.lhs.true84:                                  ; preds = %land.lhs.true55
  %assembler_name = getelementptr inbounds i64, i64* %20, i64 15, !dbg !3877
  %22 = bitcast i64* %assembler_name to %union.tree_node**, !dbg !3877
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !3877
  %cmp106 = icmp eq %union.tree_node* %23, null, !dbg !3877
  br i1 %cmp106, label %if.else136, label %land.lhs.true108, !dbg !3878

land.lhs.true108:                                 ; preds = %land.lhs.true84
  %decl_flag_0 = getelementptr inbounds i64, i64* %20, i64 7, !dbg !3879
  %bf.load130 = load i64, i64* %decl_flag_0, align 8, !dbg !3879
  %bf.cast1331 = and i64 %bf.load130, 16777216, !dbg !3879
  %tobool134 = icmp eq i64 %bf.cast1331, 0, !dbg !3879
  br i1 %tobool134, label %if.else136, label %cleanup250, !dbg !3880

if.else136:                                       ; preds = %land.lhs.true108, %land.lhs.true84, %land.lhs.true55, %cond.end51, %land.lhs.true, %if.else
  %bf.load137 = load i32, i32* %5, align 8, !dbg !3881
  %bf.clear138 = and i32 %bf.load137, 65535, !dbg !3881
  %cmp139 = icmp eq i32 %bf.clear138, 7, !dbg !3881
  br i1 %cmp139, label %cleanup250, label %if.else142, !dbg !3882

if.else142:                                       ; preds = %if.else136
  %call143 = tail call i32 @insn_invalid_p(%struct.rtx_def* %4) #7, !dbg !3883
  %tobool144 = icmp eq i32 %call143, 0, !dbg !3883
  br i1 %tobool144, label %if.end249, label %if.then145, !dbg !3884

if.then145:                                       ; preds = %if.else142
  %u146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, !dbg !3885
  %24 = getelementptr inbounds %union.u, %union.u* %u146, i64 1, i32 0, i32 0, i64 0, !dbg !3885
  %rt_rtx149 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !3885
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx149, align 8, !dbg !3885
  call void @llvm.dbg.value(metadata %struct.rtx_def* %25, metadata !3834, metadata !DIExpression()), !dbg !3886
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 0, !dbg !3887
  %bf.load150 = load i32, i32* %26, align 8, !dbg !3887
  %bf.clear151 = and i32 %bf.load150, 65535, !dbg !3887
  %cmp152 = icmp eq i32 %bf.clear151, 15, !dbg !3888
  br i1 %cmp152, label %land.lhs.true154, label %if.else229, !dbg !3889

land.lhs.true154:                                 ; preds = %if.then145
  %arrayidx157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3890
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtvec_def**, !dbg !3890
  %27 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3890
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %27, i64 0, i32 0, !dbg !3890
  %28 = load i32, i32* %num_elem, align 8, !dbg !3890
  %sub = add nsw i32 %28, -1, !dbg !3890
  %idxprom162 = sext i32 %sub to i64, !dbg !3890
  %arrayidx163 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %27, i64 0, i32 1, i64 %idxprom162, !dbg !3890
  %29 = bitcast %struct.rtx_def** %arrayidx163 to i32**, !dbg !3890
  %30 = load i32*, i32** %29, align 8, !dbg !3890
  %bf.load164 = load i32, i32* %30, align 8, !dbg !3890
  %bf.clear165 = and i32 %bf.load164, 65535, !dbg !3890
  %cmp166 = icmp eq i32 %bf.clear165, 25, !dbg !3891
  br i1 %cmp166, label %land.lhs.true168, label %if.else229, !dbg !3892

land.lhs.true168:                                 ; preds = %land.lhs.true154
  %call173 = tail call i32 @asm_noperands(%struct.rtx_def* %25) #7, !dbg !3893
  %cmp174 = icmp slt i32 %call173, 0, !dbg !3894
  br i1 %cmp174, label %if.then176, label %land.lhs.true168.if.else229_crit_edge, !dbg !3895

land.lhs.true168.if.else229_crit_edge:            ; preds = %land.lhs.true168
  %bf.load230.pre = load i32, i32* %26, align 8, !dbg !3896
  %.pre3 = and i32 %bf.load230.pre, 65535, !dbg !3896
  br label %if.else229, !dbg !3895

if.then176:                                       ; preds = %land.lhs.true168
  %31 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3898
  %num_elem181 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %31, i64 0, i32 0, !dbg !3898
  %32 = load i32, i32* %num_elem181, align 8, !dbg !3898
  %cmp182 = icmp eq i32 %32, 2, !dbg !3899
  br i1 %cmp182, label %if.then184, label %if.else191, !dbg !3900

if.then184:                                       ; preds = %if.then176
  %arrayidx190 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %31, i64 0, i32 1, i64 0, !dbg !3901
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx190, align 8, !dbg !3901
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !3840, metadata !DIExpression()), !dbg !3902
  br label %if.end223, !dbg !3903

if.else191:                                       ; preds = %if.then176
  %sub197 = add nsw i32 %32, -1, !dbg !3904
  %call198 = tail call %struct.rtvec_def* @rtvec_alloc(i32 %sub197) #6, !dbg !3904
  %call199 = tail call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 15, i32 0, %struct.rtvec_def* %call198) #6, !dbg !3904
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call199, metadata !3840, metadata !DIExpression()), !dbg !3902
  call void @llvm.dbg.value(metadata i32 0, metadata !3843, metadata !DIExpression()), !dbg !3905
  %arrayidx203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call199, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3906
  %rt_rtvec204 = bitcast %union.rtunion_def* %arrayidx203 to %struct.rtvec_def**, !dbg !3906
  br label %for.cond200, !dbg !3909

for.cond200:                                      ; preds = %for.body208, %if.else191
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body208 ], [ 0, %if.else191 ], !dbg !3910
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3843, metadata !DIExpression()), !dbg !3905
  %34 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec204, align 8, !dbg !3911
  %num_elem205 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %34, i64 0, i32 0, !dbg !3911
  %35 = load i32, i32* %num_elem205, align 8, !dbg !3911
  %36 = sext i32 %35 to i64, !dbg !3912
  %cmp206 = icmp slt i64 %indvars.iv, %36, !dbg !3912
  br i1 %cmp206, label %for.body208, label %if.end223.loopexit, !dbg !3913

for.body208:                                      ; preds = %for.cond200
  %37 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3914
  %arrayidx215 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %37, i64 0, i32 1, i64 %indvars.iv, !dbg !3914
  %38 = bitcast %struct.rtx_def** %arrayidx215 to i64*, !dbg !3914
  %39 = load i64, i64* %38, align 8, !dbg !3914
  %arrayidx222 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %34, i64 0, i32 1, i64 %indvars.iv, !dbg !3915
  %40 = bitcast %struct.rtx_def** %arrayidx222 to i64*, !dbg !3916
  store i64 %39, i64* %40, align 8, !dbg !3916
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3917
  call void @llvm.dbg.value(metadata i32 undef, metadata !3843, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3905
  br label %for.cond200, !dbg !3918, !llvm.loop !3919

if.end223.loopexit:                               ; preds = %for.cond200
  br label %if.end223, !dbg !3921

if.end223:                                        ; preds = %if.end223.loopexit, %if.then184
  %newpat.0 = phi %struct.rtx_def* [ %33, %if.then184 ], [ %call199, %if.end223.loopexit ], !dbg !3922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %newpat.0, metadata !3840, metadata !DIExpression()), !dbg !3902
  %call228 = tail call zeroext i8 @validate_change(%struct.rtx_def* %4, %struct.rtx_def** nonnull %rt_rtx149, %struct.rtx_def* %newpat.0, i8 zeroext 1) #7, !dbg !3923
  br label %cleanup250

if.else229:                                       ; preds = %land.lhs.true168.if.else229_crit_edge, %land.lhs.true154, %if.then145
  %bf.clear231.pre-phi = phi i32 [ %.pre3, %land.lhs.true168.if.else229_crit_edge ], [ 15, %land.lhs.true154 ], [ %bf.clear151, %if.then145 ], !dbg !3896
  %cmp232 = icmp eq i32 %bf.clear231.pre-phi, 24, !dbg !3924
  br i1 %cmp232, label %cleanup250, label %lor.lhs.false234, !dbg !3925

lor.lhs.false234:                                 ; preds = %if.else229
  %cmp237 = icmp eq i32 %bf.clear231.pre-phi, 25, !dbg !3926
  br i1 %cmp237, label %cleanup250, label %lor.lhs.false239, !dbg !3927

lor.lhs.false239:                                 ; preds = %lor.lhs.false234
  %cmp242 = icmp eq i32 %bf.clear231.pre-phi, 138, !dbg !3928
  %spec.select = select i1 %cmp242, i32 4, i32 2, !dbg !3929
  br label %cleanup250, !dbg !3929

if.end249:                                        ; preds = %cond.end, %if.else142
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3829, metadata !DIExpression()), !dbg !3846
  br label %cleanup250, !dbg !3930

cleanup250:                                       ; preds = %cond.end, %land.lhs.true108, %lor.lhs.false239, %if.end223, %lor.lhs.false234, %if.else229, %if.else136, %for.body, %if.end249
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end249 ], [ 4, %for.body ], [ 2, %cond.end ], [ 2, %land.lhs.true108 ], [ 4, %if.else136 ], [ 4, %if.end223 ], [ 4, %lor.lhs.false234 ], [ 4, %if.else229 ], [ %spec.select, %lor.lhs.false239 ]
  %last_validated.1 = phi %struct.rtx_def* [ %4, %if.end249 ], [ %last_validated.0, %for.body ], [ %last_validated.0, %cond.end ], [ %last_validated.0, %land.lhs.true108 ], [ %last_validated.0, %if.else136 ], [ %last_validated.0, %if.end223 ], [ %last_validated.0, %lor.lhs.false234 ], [ %last_validated.0, %if.else229 ], [ %last_validated.0, %lor.lhs.false239 ], !dbg !3846
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_validated.1, metadata !3829, metadata !DIExpression()), !dbg !3846
  %switch = icmp eq i32 %cleanup.dest.slot.1, 2
  br i1 %switch, label %cleanup250.for.end253_crit_edge, label %for.inc251

cleanup250.for.end253_crit_edge:                  ; preds = %cleanup250
  %indvars.iv7.lcssa10 = phi i64 [ %indvars.iv7, %cleanup250 ], !dbg !3848
  call void @llvm.dbg.value(metadata i64 %indvars.iv7.lcssa10, metadata !3828, metadata !DIExpression()), !dbg !3846
  %.pre = load i32, i32* @num_changes, align 4, !dbg !3931
  br label %for.end253

for.inc251:                                       ; preds = %cleanup250
  %indvars.iv.next8 = add nsw i64 %indvars.iv7, 1, !dbg !3932
  call void @llvm.dbg.value(metadata i32 undef, metadata !3828, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3846
  br label %for.cond, !dbg !3933, !llvm.loop !3934

for.end253.loopexit:                              ; preds = %for.cond
  %indvars.iv7.lcssa = phi i64 [ %indvars.iv7, %for.cond ], !dbg !3848
  %.lcssa = phi i32 [ %1, %for.cond ], !dbg !3849
  call void @llvm.dbg.value(metadata i64 %indvars.iv7.lcssa, metadata !3828, metadata !DIExpression()), !dbg !3846
  br label %for.end253, !dbg !3936

for.end253:                                       ; preds = %for.end253.loopexit, %cleanup250.for.end253_crit_edge
  %indvars.iv711 = phi i64 [ %indvars.iv7.lcssa10, %cleanup250.for.end253_crit_edge ], [ %indvars.iv7.lcssa, %for.end253.loopexit ]
  %41 = phi i32 [ %.pre, %cleanup250.for.end253_crit_edge ], [ %.lcssa, %for.end253.loopexit ], !dbg !3931
  %i.06 = trunc i64 %indvars.iv711 to i32, !dbg !3846
  call void @llvm.dbg.value(metadata i32 %i.06, metadata !3828, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.value(metadata i32 %i.06, metadata !3828, metadata !DIExpression()), !dbg !3846
  %cmp254 = icmp eq i32 %41, %i.06, !dbg !3936
  %conv255 = zext i1 %cmp254 to i32, !dbg !3936
  ret i32 %conv255, !dbg !3937
}

; Function Attrs: nounwind uwtable
define dso_local i32 @memory_address_addr_space_p(i32 %mode, %struct.rtx_def* %addr, i8 zeroext %as) local_unnamed_addr #5 !dbg !3938 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3943, metadata !DIExpression()), !dbg !3946
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !3944, metadata !DIExpression()), !dbg !3946
  call void @llvm.dbg.value(metadata i8 %as, metadata !3945, metadata !DIExpression()), !dbg !3946
  %0 = load i8 (i32, %struct.rtx_def*, i8, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 3), align 8, !dbg !3947
  %call = tail call zeroext i8 %0(i32 %mode, %struct.rtx_def* %addr, i8 zeroext 0, i8 zeroext %as) #6, !dbg !3948
  %conv = zext i8 %call to i32, !dbg !3948
  ret i32 %conv, !dbg !3949
}

; Function Attrs: nounwind uwtable
define dso_local void @confirm_change_group() local_unnamed_addr #5 !dbg !3950 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !3953, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata i32 0, metadata !3952, metadata !DIExpression()), !dbg !3958
  br label %for.cond, !dbg !3959

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !3958
  %last_object.0 = phi %struct.rtx_def* [ %last_object.1, %for.inc ], [ null, %entry ], !dbg !3958
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3952, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_object.0, metadata !3953, metadata !DIExpression()), !dbg !3958
  %0 = load i32, i32* @num_changes, align 4, !dbg !3960
  %1 = sext i32 %0 to i64, !dbg !3961
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !3961
  br i1 %cmp, label %for.body, label %for.end, !dbg !3962

for.body:                                         ; preds = %for.cond
  %2 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3963
  %object1 = getelementptr inbounds %struct.change_t, %struct.change_t* %2, i64 %indvars.iv, i32 0, !dbg !3964
  %3 = load %struct.rtx_def*, %struct.rtx_def** %object1, align 8, !dbg !3964
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3954, metadata !DIExpression()), !dbg !3965
  %unshare = getelementptr inbounds %struct.change_t, %struct.change_t* %2, i64 %indvars.iv, i32 4, !dbg !3966
  %4 = load i8, i8* %unshare, align 8, !dbg !3966
  %tobool = icmp eq i8 %4, 0, !dbg !3968
  br i1 %tobool, label %if.end, label %if.then, !dbg !3969

if.then:                                          ; preds = %for.body
  %loc = getelementptr inbounds %struct.change_t, %struct.change_t* %2, i64 %indvars.iv, i32 2, !dbg !3970
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !3970
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8, !dbg !3971
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %6) #6, !dbg !3972
  %7 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3973
  %loc8 = getelementptr inbounds %struct.change_t, %struct.change_t* %7, i64 %indvars.iv, i32 2, !dbg !3974
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %loc8, align 8, !dbg !3974
  store %struct.rtx_def* %call, %struct.rtx_def** %8, align 8, !dbg !3975
  br label %if.end, !dbg !3976

if.end:                                           ; preds = %for.body, %if.then
  %tobool9 = icmp eq %struct.rtx_def* %3, null, !dbg !3977
  br i1 %tobool9, label %for.inc, label %if.then10, !dbg !3979

if.then10:                                        ; preds = %if.end
  %cmp11 = icmp ne %struct.rtx_def* %3, %last_object.0, !dbg !3980
  %tobool12 = icmp ne %struct.rtx_def* %last_object.0, null, !dbg !3983
  %or.cond = and i1 %cmp11, %tobool12, !dbg !3984
  br i1 %or.cond, label %land.lhs.true13, label %for.inc, !dbg !3984

land.lhs.true13:                                  ; preds = %if.then10
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_object.0, i64 0, i32 0, !dbg !3985
  %bf.load = load i32, i32* %9, align 8, !dbg !3985
  %bf.clear = and i32 %bf.load, 65535, !dbg !3985
  %cmp14 = icmp eq i32 %bf.clear, 8, !dbg !3985
  br i1 %cmp14, label %if.then26, label %lor.lhs.false, !dbg !3985

lor.lhs.false:                                    ; preds = %land.lhs.true13
  %cmp17 = icmp eq i32 %bf.clear, 7, !dbg !3985
  br i1 %cmp17, label %if.then26, label %lor.lhs.false18, !dbg !3985

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %cmp21 = icmp eq i32 %bf.clear, 9, !dbg !3985
  br i1 %cmp21, label %if.then26, label %lor.lhs.false22, !dbg !3985

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %cmp25 = icmp eq i32 %bf.clear, 10, !dbg !3985
  br i1 %cmp25, label %if.then26, label %for.inc, !dbg !3986

if.then26:                                        ; preds = %lor.lhs.false22, %lor.lhs.false18, %lor.lhs.false, %land.lhs.true13
  %call27 = tail call zeroext i8 @df_insn_rescan(%struct.rtx_def* nonnull %last_object.0) #6, !dbg !3987
  br label %for.inc, !dbg !3987

for.inc:                                          ; preds = %if.end, %if.then26, %lor.lhs.false22, %if.then10
  %last_object.1 = phi %struct.rtx_def* [ %last_object.0, %if.end ], [ %3, %if.then26 ], [ %3, %lor.lhs.false22 ], [ %3, %if.then10 ], !dbg !3958
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_object.1, metadata !3953, metadata !DIExpression()), !dbg !3958
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3988
  call void @llvm.dbg.value(metadata i32 undef, metadata !3952, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3958
  br label %for.cond, !dbg !3989, !llvm.loop !3990

for.end:                                          ; preds = %for.cond
  %last_object.0.lcssa = phi %struct.rtx_def* [ %last_object.0, %for.cond ], !dbg !3958
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_object.0.lcssa, metadata !3953, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_object.0.lcssa, metadata !3953, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_object.0.lcssa, metadata !3953, metadata !DIExpression()), !dbg !3958
  %tobool30 = icmp eq %struct.rtx_def* %last_object.0.lcssa, null, !dbg !3992
  br i1 %tobool30, label %if.end49, label %land.lhs.true31, !dbg !3994

land.lhs.true31:                                  ; preds = %for.end
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_object.0.lcssa, i64 0, i32 0, !dbg !3995
  %bf.load32 = load i32, i32* %10, align 8, !dbg !3995
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !3995
  %cmp34 = icmp eq i32 %bf.clear33, 8, !dbg !3995
  br i1 %cmp34, label %if.then47, label %lor.lhs.false35, !dbg !3995

lor.lhs.false35:                                  ; preds = %land.lhs.true31
  %cmp38 = icmp eq i32 %bf.clear33, 7, !dbg !3995
  br i1 %cmp38, label %if.then47, label %lor.lhs.false39, !dbg !3995

lor.lhs.false39:                                  ; preds = %lor.lhs.false35
  %cmp42 = icmp eq i32 %bf.clear33, 9, !dbg !3995
  br i1 %cmp42, label %if.then47, label %lor.lhs.false43, !dbg !3995

lor.lhs.false43:                                  ; preds = %lor.lhs.false39
  %cmp46 = icmp eq i32 %bf.clear33, 10, !dbg !3995
  br i1 %cmp46, label %if.then47, label %if.end49, !dbg !3996

if.then47:                                        ; preds = %lor.lhs.false43, %lor.lhs.false39, %lor.lhs.false35, %land.lhs.true31
  %call48 = tail call zeroext i8 @df_insn_rescan(%struct.rtx_def* nonnull %last_object.0.lcssa) #6, !dbg !3997
  br label %if.end49, !dbg !3997

if.end49:                                         ; preds = %for.end, %if.then47, %lor.lhs.false43
  store i32 0, i32* @num_changes, align 4, !dbg !3998
  ret void, !dbg !3999
}

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @df_insn_rescan(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @apply_change_group() local_unnamed_addr #5 !dbg !4000 {
entry:
  %call = tail call i32 @verify_changes(i32 0) #7, !dbg !4001
  %tobool = icmp eq i32 %call, 0, !dbg !4001
  br i1 %tobool, label %if.else, label %if.then, !dbg !4003

if.then:                                          ; preds = %entry
  tail call void @confirm_change_group() #7, !dbg !4004
  br label %return, !dbg !4006

if.else:                                          ; preds = %entry
  tail call void @cancel_changes(i32 0) #7, !dbg !4007
  br label %return, !dbg !4009

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %if.else ], !dbg !4010
  ret i32 %retval.0, !dbg !4011
}

; Function Attrs: nounwind uwtable
define dso_local void @cancel_changes(i32 %num) local_unnamed_addr #5 !dbg !4012 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !4016, metadata !DIExpression()), !dbg !4018
  %0 = load i32, i32* @num_changes, align 4, !dbg !4019
  call void @llvm.dbg.value(metadata i32 %0, metadata !4017, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4018
  %1 = sext i32 %0 to i64, !dbg !4021
  %2 = sext i32 %num to i64, !dbg !4021
  br label %for.cond, !dbg !4021

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %1, %entry ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !4022
  call void @llvm.dbg.value(metadata i32 undef, metadata !4017, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4018
  %cmp = icmp sgt i64 %indvars.iv, %2, !dbg !4023
  br i1 %cmp, label %for.body, label %for.end, !dbg !4025

for.body:                                         ; preds = %for.cond
  %3 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4026
  %old = getelementptr inbounds %struct.change_t, %struct.change_t* %3, i64 %indvars.iv.next, i32 3, !dbg !4028
  %4 = bitcast %struct.rtx_def** %old to i64*, !dbg !4028
  %5 = load i64, i64* %4, align 8, !dbg !4028
  %loc = getelementptr inbounds %struct.change_t, %struct.change_t* %3, i64 %indvars.iv.next, i32 2, !dbg !4029
  %6 = bitcast %struct.rtx_def*** %loc to i64**, !dbg !4029
  %7 = load i64*, i64** %6, align 8, !dbg !4029
  store i64 %5, i64* %7, align 8, !dbg !4030
  %8 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4031
  %object = getelementptr inbounds %struct.change_t, %struct.change_t* %8, i64 %indvars.iv.next, i32 0, !dbg !4033
  %9 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4033
  %tobool = icmp eq %struct.rtx_def* %9, null, !dbg !4031
  br i1 %tobool, label %for.inc, label %land.lhs.true, !dbg !4034

land.lhs.true:                                    ; preds = %for.body
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 0, !dbg !4034
  %bf.load = load i32, i32* %10, align 8, !dbg !4035
  %bf.clear = and i32 %bf.load, 65535, !dbg !4035
  %cmp8 = icmp eq i32 %bf.clear, 43, !dbg !4035
  br i1 %cmp8, label %for.inc, label %if.then, !dbg !4036

if.then:                                          ; preds = %land.lhs.true
  %old_code = getelementptr inbounds %struct.change_t, %struct.change_t* %8, i64 %indvars.iv.next, i32 1, !dbg !4037
  %11 = load i32, i32* %old_code, align 8, !dbg !4037
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, !dbg !4038
  %12 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !4038
  %rt_int = bitcast %union.rtunion_def* %12 to i32*, !dbg !4038
  store i32 %11, i32* %rt_int, align 8, !dbg !4039
  br label %for.inc, !dbg !4038

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then
  call void @llvm.dbg.value(metadata i32 undef, metadata !4017, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4018
  br label %for.cond, !dbg !4040, !llvm.loop !4041

for.end:                                          ; preds = %for.cond
  store i32 %num, i32* @num_changes, align 4, !dbg !4043
  ret void, !dbg !4044
}

; Function Attrs: nounwind uwtable
define dso_local i32 @num_validated_changes() local_unnamed_addr #5 !dbg !4045 {
entry:
  %0 = load i32, i32* @num_changes, align 4, !dbg !4046
  ret i32 %0, !dbg !4047
}

; Function Attrs: nounwind uwtable
define dso_local i32 @validate_replace_rtx_subexp(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn, %struct.rtx_def** %loc) local_unnamed_addr #5 !dbg !4048 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !4052, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !4053, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4054, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !4055, metadata !DIExpression()), !dbg !4056
  tail call fastcc void @validate_replace_rtx_1(%struct.rtx_def** %loc, %struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn, i8 zeroext 1) #7, !dbg !4057
  %call = tail call i32 @apply_change_group() #7, !dbg !4058
  ret i32 %call, !dbg !4059
}

; Function Attrs: nounwind uwtable
define internal fastcc void @validate_replace_rtx_1(%struct.rtx_def** %loc, %struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %object, i8 zeroext %simplify) unnamed_addr #5 !dbg !4060 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !4064, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !4065, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !4066, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.value(metadata %struct.rtx_def* %object, metadata !4067, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.value(metadata i8 %simplify, metadata !4068, metadata !DIExpression()), !dbg !4076
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !4077
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !4072, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.value(metadata i32 0, metadata !4074, metadata !DIExpression()), !dbg !4076
  %1 = load i32, i32* @num_changes, align 4, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %1, metadata !4075, metadata !DIExpression()), !dbg !4076
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !4079
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !4081

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !4082
  %bf.load = load i32, i32* %2, align 8, !dbg !4082
  %bf.clear = and i32 %bf.load, 65535, !dbg !4082
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4073, metadata !DIExpression()), !dbg !4076
  %idxprom = zext i32 %bf.clear to i64, !dbg !4083
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !4083
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !4083
  call void @llvm.dbg.value(metadata i8* %3, metadata !4071, metadata !DIExpression()), !dbg !4076
  %4 = load i8, i8* %3, align 1, !dbg !4084
  %cmp = icmp eq i8 %4, 101, !dbg !4086
  br i1 %cmp, label %if.then3, label %if.end7, !dbg !4087

if.then3:                                         ; preds = %if.end
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4088
  %5 = bitcast %union.rtunion_def* %arrayidx4 to i32**, !dbg !4088
  %6 = load i32*, i32** %5, align 8, !dbg !4088
  %bf.load5 = load i32, i32* %6, align 8, !dbg !4088
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !4088
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %bf.clear6, metadata !4074, metadata !DIExpression()), !dbg !4076
  br label %if.end7, !dbg !4089

if.end7:                                          ; preds = %if.then3, %if.end
  %op0_mode.0 = phi i32 [ %bf.clear6, %if.then3 ], [ 0, %if.end ], !dbg !4076
  call void @llvm.dbg.value(metadata i32 %op0_mode.0, metadata !4074, metadata !DIExpression()), !dbg !4076
  %cmp8 = icmp eq %struct.rtx_def* %0, %from, !dbg !4090
  br i1 %cmp8, label %if.then50, label %lor.lhs.false, !dbg !4092

lor.lhs.false:                                    ; preds = %if.end7
  %cmp12 = icmp eq i32 %bf.clear, 37, !dbg !4093
  br i1 %cmp12, label %land.lhs.true, label %lor.lhs.false31, !dbg !4094

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 0, !dbg !4095
  %bf.load14 = load i32, i32* %7, align 8, !dbg !4095
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !4095
  %cmp16 = icmp eq i32 %bf.clear15, 37, !dbg !4095
  br i1 %cmp16, label %land.lhs.true18, label %lor.lhs.false31, !dbg !4096

land.lhs.true18:                                  ; preds = %land.lhs.true
  %bf.lshr202 = xor i32 %bf.load, %bf.load14, !dbg !4097
  %8 = and i32 %bf.lshr202, 16711680, !dbg !4097
  %cmp25 = icmp eq i32 %8, 0, !dbg !4097
  br i1 %cmp25, label %land.lhs.true27, label %lor.lhs.false31, !dbg !4098

land.lhs.true27:                                  ; preds = %land.lhs.true18
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %0) #7, !dbg !4099
  %call28 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %from) #7, !dbg !4100
  %cmp29 = icmp eq i32 %call, %call28, !dbg !4101
  br i1 %cmp29, label %if.then50, label %land.lhs.true27.lor.lhs.false31_crit_edge, !dbg !4102

land.lhs.true27.lor.lhs.false31_crit_edge:        ; preds = %land.lhs.true27
  %bf.load32.pre = load i32, i32* %2, align 8, !dbg !4103
  br label %lor.lhs.false31, !dbg !4102

lor.lhs.false31:                                  ; preds = %land.lhs.true27.lor.lhs.false31_crit_edge, %land.lhs.true18, %land.lhs.true, %lor.lhs.false
  %bf.load39 = phi i32 [ %bf.load32.pre, %land.lhs.true27.lor.lhs.false31_crit_edge ], [ %bf.load, %land.lhs.true18 ], [ %bf.load, %land.lhs.true ], [ %bf.load, %lor.lhs.false ], !dbg !4103
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 0, !dbg !4104
  %bf.load34 = load i32, i32* %9, align 8, !dbg !4104
  %10 = xor i32 %bf.load39, %bf.load34, !dbg !4105
  %11 = and i32 %10, 65535, !dbg !4105
  %cmp36 = icmp eq i32 %11, 0, !dbg !4105
  br i1 %cmp36, label %land.lhs.true38, label %if.end52, !dbg !4106

land.lhs.true38:                                  ; preds = %lor.lhs.false31
  %12 = and i32 %10, 16711680, !dbg !4107
  %cmp45 = icmp eq i32 %12, 0, !dbg !4107
  br i1 %cmp45, label %land.lhs.true47, label %if.end52, !dbg !4108

land.lhs.true47:                                  ; preds = %land.lhs.true38
  %call48 = tail call i32 @rtx_equal_p(%struct.rtx_def* nonnull %0, %struct.rtx_def* %from) #6, !dbg !4109
  %tobool49 = icmp eq i32 %call48, 0, !dbg !4109
  br i1 %tobool49, label %land.lhs.true47.if.end52_crit_edge, label %if.then50, !dbg !4110

land.lhs.true47.if.end52_crit_edge:               ; preds = %land.lhs.true47
  %bf.load53.pre = load i32, i32* %2, align 8, !dbg !4111
  br label %if.end52, !dbg !4110

if.then50:                                        ; preds = %land.lhs.true47, %land.lhs.true27, %if.end7
  %call51 = tail call zeroext i8 @validate_unshare_change(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %to, i8 zeroext 1) #7, !dbg !4113
  br label %cleanup.cont, !dbg !4115

if.end52:                                         ; preds = %land.lhs.true47.if.end52_crit_edge, %land.lhs.true38, %lor.lhs.false31
  %bf.load53 = phi i32 [ %bf.load53.pre, %land.lhs.true47.if.end52_crit_edge ], [ %bf.load39, %land.lhs.true38 ], [ %bf.load39, %lor.lhs.false31 ], !dbg !4111
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !4111
  %cmp55 = icmp eq i32 %bf.clear54, 15, !dbg !4116
  br i1 %cmp55, label %if.then57, label %if.else142, !dbg !4117

if.then57:                                        ; preds = %if.end52
  %arrayidx60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4118
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtvec_def**, !dbg !4118
  %13 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4118
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i64 0, i32 0, !dbg !4118
  %14 = load i32, i32* %num_elem, align 8, !dbg !4118
  call void @llvm.dbg.value(metadata i32 %14, metadata !4070, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4076
  %15 = sext i32 %14 to i64, !dbg !4121
  br label %for.cond, !dbg !4121

for.cond:                                         ; preds = %for.inc, %if.then57
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %15, %if.then57 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !4122
  call void @llvm.dbg.value(metadata i32 undef, metadata !4070, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4076
  %cmp61 = icmp sgt i64 %indvars.iv, 0, !dbg !4123
  br i1 %cmp61, label %for.body, label %if.end196.loopexit, !dbg !4125

for.body:                                         ; preds = %for.cond
  %16 = trunc i64 %indvars.iv.next to i32, !dbg !4126
  %tobool63 = icmp eq i32 %16, 0, !dbg !4126
  br i1 %tobool63, label %for.body.if.else_crit_edge, label %land.lhs.true64, !dbg !4129

for.body.if.else_crit_edge:                       ; preds = %for.body
  %.pre7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4130
  br label %if.else, !dbg !4129

land.lhs.true64:                                  ; preds = %for.body
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4131
  %arrayidx70 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 1, i64 %indvars.iv.next, !dbg !4131
  %18 = bitcast %struct.rtx_def** %arrayidx70 to i32**, !dbg !4131
  %19 = load i32*, i32** %18, align 8, !dbg !4131
  %bf.load71 = load i32, i32* %19, align 8, !dbg !4131
  %bf.clear72 = and i32 %bf.load71, 65535, !dbg !4131
  %cmp73 = icmp eq i32 %bf.clear72, 23, !dbg !4132
  %20 = bitcast i32* %19 to %struct.rtx_def*, !dbg !4133
  br i1 %cmp73, label %land.lhs.true75, label %if.else, !dbg !4133

land.lhs.true75:                                  ; preds = %land.lhs.true64
  %21 = getelementptr inbounds i32, i32* %19, i64 4, !dbg !4134
  %22 = bitcast i32* %21 to i32**, !dbg !4134
  %23 = load i32*, i32** %22, align 8, !dbg !4134
  %bf.load87 = load i32, i32* %23, align 8, !dbg !4134
  %bf.clear88 = and i32 %bf.load87, 65535, !dbg !4134
  %cmp89 = icmp eq i32 %bf.clear88, 17, !dbg !4135
  br i1 %cmp89, label %if.then91, label %if.else, !dbg !4136

if.then91:                                        ; preds = %land.lhs.true75
  %arrayidx97 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 1, i64 0, !dbg !4137
  %24 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx97, align 8, !dbg !4137
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4137
  %rt_rtx101 = bitcast %union.rtunion_def* %25 to %struct.rtx_def**, !dbg !4137
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !4137
  %arrayidx104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i64 0, i32 1, i32 0, i32 1, !dbg !4137
  %rt_rtvec105 = bitcast %struct.object_block** %arrayidx104 to %struct.rtvec_def**, !dbg !4137
  %27 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec105, align 8, !dbg !4137
  %arrayidx119 = getelementptr inbounds i32, i32* %23, i64 8, !dbg !4137
  %rt_rtvec120 = bitcast i32* %arrayidx119 to %struct.rtvec_def**, !dbg !4137
  %28 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec120, align 8, !dbg !4137
  %cmp121 = icmp eq %struct.rtvec_def* %27, %28, !dbg !4137
  br i1 %cmp121, label %cond.end, label %cond.true, !dbg !4137

cond.true:                                        ; preds = %if.then91
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 711, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4137
  %.pre = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4139
  %arrayidx129.phi.trans.insert = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %.pre, i64 0, i32 1, i64 %indvars.iv.next, !dbg !4140
  %.pre6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx129.phi.trans.insert, align 8, !dbg !4139
  br label %cond.end, !dbg !4137

cond.end:                                         ; preds = %if.then91, %cond.true
  %29 = phi %struct.rtx_def* [ %20, %if.then91 ], [ %.pre6, %cond.true ], !dbg !4139
  %arrayidx132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4139
  %rt_rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**, !dbg !4139
  tail call fastcc void @validate_replace_rtx_1(%struct.rtx_def** nonnull %rt_rtx133, %struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %object, i8 zeroext %simplify) #7, !dbg !4141
  br label %for.inc, !dbg !4142

if.else:                                          ; preds = %for.body.if.else_crit_edge, %land.lhs.true75, %land.lhs.true64
  %idxprom139.pre-phi = phi i64 [ 0, %for.body.if.else_crit_edge ], [ %indvars.iv.next, %land.lhs.true75 ], [ %indvars.iv.next, %land.lhs.true64 ], !dbg !4130
  %30 = phi %struct.rtvec_def* [ %.pre7, %for.body.if.else_crit_edge ], [ %17, %land.lhs.true75 ], [ %17, %land.lhs.true64 ], !dbg !4130
  %arrayidx140 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %30, i64 0, i32 1, i64 %idxprom139.pre-phi, !dbg !4130
  tail call fastcc void @validate_replace_rtx_1(%struct.rtx_def** nonnull %arrayidx140, %struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %object, i8 zeroext %simplify) #7, !dbg !4143
  br label %for.inc

for.inc:                                          ; preds = %cond.end, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !4070, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4076
  br label %for.cond, !dbg !4144, !llvm.loop !4145

if.else142:                                       ; preds = %if.end52
  %arrayidx144 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !4147
  %31 = load i8, i8* %arrayidx144, align 1, !dbg !4147
  call void @llvm.dbg.value(metadata i8 %31, metadata !4069, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4076
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, !dbg !4149
  %fld170 = bitcast %union.u* %u169 to [1 x %union.rtunion_def]*, !dbg !4149
  %32 = zext i8 %31 to i64, !dbg !4155
  br label %for.cond147, !dbg !4155

for.cond147:                                      ; preds = %for.inc193, %if.else142
  %indvars.iv11 = phi i64 [ %indvars.iv.next12, %for.inc193 ], [ %32, %if.else142 ]
  %indvars.iv.next12 = add nsw i64 %indvars.iv11, -1, !dbg !4156
  call void @llvm.dbg.value(metadata i32 undef, metadata !4069, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4076
  %cmp148 = icmp sgt i64 %indvars.iv11, 0, !dbg !4157
  br i1 %cmp148, label %for.body150, label %if.end196.loopexit3, !dbg !4158

for.body150:                                      ; preds = %for.cond147
  %arrayidx152 = getelementptr inbounds i8, i8* %3, i64 %indvars.iv.next12, !dbg !4159
  %33 = load i8, i8* %arrayidx152, align 1, !dbg !4159
  %cmp154 = icmp eq i8 %33, 101, !dbg !4160
  br i1 %cmp154, label %if.then156, label %if.else162, !dbg !4161

if.then156:                                       ; preds = %for.body150
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i64 0, i64 %indvars.iv.next12, !dbg !4162
  %rt_rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**, !dbg !4162
  tail call fastcc void @validate_replace_rtx_1(%struct.rtx_def** nonnull %rt_rtx161, %struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %object, i8 zeroext %simplify) #7, !dbg !4163
  br label %for.inc193, !dbg !4163

if.else162:                                       ; preds = %for.body150
  %cmp166 = icmp eq i8 %33, 69, !dbg !4164
  br i1 %cmp166, label %if.then168, label %for.inc193, !dbg !4165

if.then168:                                       ; preds = %if.else162
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i64 0, i64 %indvars.iv.next12, !dbg !4166
  %rt_rtvec173 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtvec_def**, !dbg !4166
  %34 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec173, align 8, !dbg !4166
  %num_elem174 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %34, i64 0, i32 0, !dbg !4166
  %35 = load i32, i32* %num_elem174, align 8, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %35, metadata !4070, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4076
  %36 = sext i32 %35 to i64, !dbg !4167
  br label %for.cond176, !dbg !4167

for.cond176:                                      ; preds = %for.body179, %if.then168
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.body179 ], [ %36, %if.then168 ]
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, -1, !dbg !4149
  call void @llvm.dbg.value(metadata i32 undef, metadata !4070, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4076
  %cmp177 = icmp sgt i64 %indvars.iv9, 0, !dbg !4168
  br i1 %cmp177, label %for.body179, label %for.inc193.loopexit, !dbg !4170

for.body179:                                      ; preds = %for.cond176
  %37 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec173, align 8, !dbg !4171
  %arrayidx187 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %37, i64 0, i32 1, i64 %indvars.iv.next10, !dbg !4171
  tail call fastcc void @validate_replace_rtx_1(%struct.rtx_def** nonnull %arrayidx187, %struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %object, i8 zeroext %simplify) #7, !dbg !4172
  call void @llvm.dbg.value(metadata i32 undef, metadata !4070, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4076
  br label %for.cond176, !dbg !4173, !llvm.loop !4174

for.inc193.loopexit:                              ; preds = %for.cond176
  br label %for.inc193, !dbg !4176

for.inc193:                                       ; preds = %for.inc193.loopexit, %if.then156, %if.else162
  call void @llvm.dbg.value(metadata i32 undef, metadata !4069, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4076
  br label %for.cond147, !dbg !4176, !llvm.loop !4177

if.end196.loopexit:                               ; preds = %for.cond
  br label %if.end196, !dbg !4179

if.end196.loopexit3:                              ; preds = %for.cond147
  br label %if.end196, !dbg !4179

if.end196:                                        ; preds = %if.end196.loopexit3, %if.end196.loopexit
  %38 = load i32, i32* @num_changes, align 4, !dbg !4179
  %cmp197 = icmp eq i32 %38, %1, !dbg !4181
  br i1 %cmp197, label %cleanup.cont, label %if.end200, !dbg !4182

if.end200:                                        ; preds = %if.end196
  %39 = load i8, i8* %3, align 1, !dbg !4183
  %cmp203 = icmp eq i8 %39, 101, !dbg !4185
  br i1 %cmp203, label %land.lhs.true205, label %if.end223, !dbg !4186

land.lhs.true205:                                 ; preds = %if.end200
  %arrayidx208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4187
  %40 = bitcast %union.rtunion_def* %arrayidx208 to i32**, !dbg !4187
  %41 = load i32*, i32** %40, align 8, !dbg !4187
  %bf.load210 = load i32, i32* %41, align 8, !dbg !4187
  %bf.clear212 = and i32 %bf.load210, 16711680, !dbg !4187
  %cmp213 = icmp eq i32 %bf.clear212, 0, !dbg !4188
  br i1 %cmp213, label %if.end223, label %if.then215, !dbg !4189

if.then215:                                       ; preds = %land.lhs.true205
  %bf.lshr221 = lshr i32 %bf.load210, 16, !dbg !4190
  %bf.clear222 = and i32 %bf.lshr221, 255, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %bf.clear222, metadata !4074, metadata !DIExpression()), !dbg !4076
  br label %if.end223, !dbg !4191

if.end223:                                        ; preds = %land.lhs.true205, %if.then215, %if.end200
  %op0_mode.1 = phi i32 [ %bf.clear222, %if.then215 ], [ %op0_mode.0, %land.lhs.true205 ], [ %op0_mode.0, %if.end200 ], !dbg !4076
  call void @llvm.dbg.value(metadata i32 %op0_mode.1, metadata !4074, metadata !DIExpression()), !dbg !4076
  %tobool224 = icmp eq i8 %simplify, 0, !dbg !4192
  br i1 %tobool224, label %cleanup.cont, label %if.then225, !dbg !4194

if.then225:                                       ; preds = %if.end223
  tail call fastcc void @simplify_while_replacing(%struct.rtx_def** %loc, %struct.rtx_def* %to, %struct.rtx_def* %object, i32 %op0_mode.1) #7, !dbg !4195
  br label %cleanup.cont, !dbg !4195

cleanup.cont:                                     ; preds = %if.end223, %entry, %if.then50, %if.end196, %if.then225
  ret void, !dbg !4196
}

; Function Attrs: nounwind uwtable
define dso_local i32 @validate_replace_rtx(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4197 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !4201, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !4202, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4203, metadata !DIExpression()), !dbg !4204
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4205
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4205
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !4205
  tail call fastcc void @validate_replace_rtx_1(%struct.rtx_def** nonnull %rt_rtx, %struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn, i8 zeroext 1) #7, !dbg !4206
  %call = tail call i32 @apply_change_group() #7, !dbg !4207
  ret i32 %call, !dbg !4208
}

; Function Attrs: nounwind uwtable
define dso_local i32 @validate_replace_rtx_part(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def** %where, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4209 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !4213, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !4214, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata %struct.rtx_def** %where, metadata !4215, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4216, metadata !DIExpression()), !dbg !4217
  tail call fastcc void @validate_replace_rtx_1(%struct.rtx_def** %where, %struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn, i8 zeroext 1) #7, !dbg !4218
  %call = tail call i32 @apply_change_group() #7, !dbg !4219
  ret i32 %call, !dbg !4220
}

; Function Attrs: nounwind uwtable
define dso_local i32 @validate_replace_rtx_part_nosimplify(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def** %where, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4221 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !4223, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !4224, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.value(metadata %struct.rtx_def** %where, metadata !4225, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4226, metadata !DIExpression()), !dbg !4227
  tail call fastcc void @validate_replace_rtx_1(%struct.rtx_def** %where, %struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn, i8 zeroext 0) #7, !dbg !4228
  %call = tail call i32 @apply_change_group() #7, !dbg !4229
  ret i32 %call, !dbg !4230
}

; Function Attrs: nounwind uwtable
define dso_local void @validate_replace_rtx_group(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4231 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !4235, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !4236, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4237, metadata !DIExpression()), !dbg !4239
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4240
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4240
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !4240
  tail call fastcc void @validate_replace_rtx_1(%struct.rtx_def** nonnull %rt_rtx, %struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn, i8 zeroext 1) #7, !dbg !4241
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !4242
  br label %for.cond, !dbg !4244

for.cond:                                         ; preds = %for.inc, %entry
  %note.0.in.in = phi %union.rtunion_def* [ %1, %entry ], [ %3, %for.inc ]
  %note.0.in = bitcast %union.rtunion_def* %note.0.in.in to %struct.rtx_def**, !dbg !4245
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !4245
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !4238, metadata !DIExpression()), !dbg !4239
  %tobool = icmp eq %struct.rtx_def* %note.0, null, !dbg !4246
  br i1 %tobool, label %for.end, label %for.body, !dbg !4246

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 0, !dbg !4247
  %bf.load = load i32, i32* %2, align 8, !dbg !4247
  %bf.clear = and i32 %bf.load, 16711680, !dbg !4247
  %cmp = icmp eq i32 %bf.clear, 262144, !dbg !4250
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4251

lor.lhs.false:                                    ; preds = %for.body
  %cmp8 = icmp eq i32 %bf.clear, 196608, !dbg !4252
  br i1 %cmp8, label %if.then, label %for.inc, !dbg !4253

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4254
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !4254
  tail call fastcc void @validate_replace_rtx_1(%struct.rtx_def** nonnull %rt_rtx12, %struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn, i8 zeroext 1) #7, !dbg !4255
  br label %for.inc, !dbg !4255

for.inc:                                          ; preds = %lor.lhs.false, %if.then
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4256
  br label %for.cond, !dbg !4257, !llvm.loop !4258

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4260
}

; Function Attrs: nounwind uwtable
define dso_local void @validate_replace_src_group(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4261 {
entry:
  %d = alloca %struct.validate_replace_src_data, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !4263, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !4264, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4265, metadata !DIExpression()), !dbg !4267
  %0 = bitcast %struct.validate_replace_src_data* %d to i8*, !dbg !4268
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4268
  %from1 = getelementptr inbounds %struct.validate_replace_src_data, %struct.validate_replace_src_data* %d, i64 0, i32 0, !dbg !4269
  store %struct.rtx_def* %from, %struct.rtx_def** %from1, align 8, !dbg !4270
  %to2 = getelementptr inbounds %struct.validate_replace_src_data, %struct.validate_replace_src_data* %d, i64 0, i32 1, !dbg !4271
  store %struct.rtx_def* %to, %struct.rtx_def** %to2, align 8, !dbg !4272
  %insn3 = getelementptr inbounds %struct.validate_replace_src_data, %struct.validate_replace_src_data* %d, i64 0, i32 2, !dbg !4273
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn3, align 8, !dbg !4274
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4275
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4275
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4275
  call void @note_uses(%struct.rtx_def** nonnull %rt_rtx, void (%struct.rtx_def**, i8*)* nonnull @validate_replace_src_1, i8* nonnull %0) #6, !dbg !4276
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4277
  ret void, !dbg !4277
}

declare dso_local void @note_uses(%struct.rtx_def**, void (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @validate_replace_src_1(%struct.rtx_def** %x, i8* %data) #5 !dbg !4278 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %x, metadata !4282, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %data, metadata !4283, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %data, metadata !4284, metadata !DIExpression()), !dbg !4285
  %from = bitcast i8* %data to %struct.rtx_def**, !dbg !4286
  %0 = load %struct.rtx_def*, %struct.rtx_def** %from, align 8, !dbg !4286
  %to = getelementptr inbounds i8, i8* %data, i64 8, !dbg !4287
  %1 = bitcast i8* %to to %struct.rtx_def**, !dbg !4287
  %2 = load %struct.rtx_def*, %struct.rtx_def** %1, align 8, !dbg !4287
  %insn = getelementptr inbounds i8, i8* %data, i64 16, !dbg !4288
  %3 = bitcast i8* %insn to %struct.rtx_def**, !dbg !4288
  %4 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8, !dbg !4288
  tail call fastcc void @validate_replace_rtx_1(%struct.rtx_def** %x, %struct.rtx_def* %0, %struct.rtx_def* %2, %struct.rtx_def* %4, i8 zeroext 1) #7, !dbg !4289
  ret void, !dbg !4290
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @validate_simplify_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4291 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4295, metadata !DIExpression()), !dbg !4305
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4297, metadata !DIExpression()), !dbg !4305
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4298, metadata !DIExpression()), !dbg !4305
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4306
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4306
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !4306
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4297, metadata !DIExpression()), !dbg !4305
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4307
  %bf.load = load i32, i32* %2, align 8, !dbg !4307
  %bf.clear = and i32 %bf.load, 65535, !dbg !4307
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !4308
  br i1 %cmp, label %if.then, label %if.else, !dbg !4309

if.then:                                          ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4310
  %rt_rtx4 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !4310
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !4310
  %call = tail call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %4) #6, !dbg !4312
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4298, metadata !DIExpression()), !dbg !4305
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !4313
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4315

land.lhs.true:                                    ; preds = %if.then
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !4316
  %call9 = tail call i32 @rtx_equal_p(%struct.rtx_def* %5, %struct.rtx_def* nonnull %call) #6, !dbg !4317
  %tobool10 = icmp eq i32 %call9, 0, !dbg !4317
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !4318

if.then11:                                        ; preds = %land.lhs.true
  %call16 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx4, %struct.rtx_def* nonnull %call, i8 zeroext 1) #7, !dbg !4319
  br label %if.end, !dbg !4319

if.end:                                           ; preds = %land.lhs.true, %if.then, %if.then11
  %arrayidx19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4320
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !4320
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !4320
  %call21 = tail call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %6) #6, !dbg !4321
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !4298, metadata !DIExpression()), !dbg !4305
  %tobool22 = icmp eq %struct.rtx_def* %call21, null, !dbg !4322
  br i1 %tobool22, label %if.end103, label %land.lhs.true23, !dbg !4324

land.lhs.true23:                                  ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !4325
  %call28 = tail call i32 @rtx_equal_p(%struct.rtx_def* %7, %struct.rtx_def* nonnull %call21) #6, !dbg !4326
  %tobool29 = icmp eq i32 %call28, 0, !dbg !4326
  br i1 %tobool29, label %if.then30, label %if.end103, !dbg !4327

if.then30:                                        ; preds = %land.lhs.true23
  %call35 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx20, %struct.rtx_def* nonnull %call21, i8 zeroext 1) #7, !dbg !4328
  br label %if.end103, !dbg !4328

if.else:                                          ; preds = %entry
  %cmp39 = icmp eq i32 %bf.clear, 15, !dbg !4329
  br i1 %cmp39, label %for.cond.preheader, label %if.end103, !dbg !4330

for.cond.preheader:                               ; preds = %if.else
  %arrayidx43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4331
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtvec_def**, !dbg !4331
  br label %for.cond, !dbg !4332

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !4333
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4296, metadata !DIExpression()), !dbg !4305
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4334
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 0, !dbg !4334
  %9 = load i32, i32* %num_elem, align 8, !dbg !4334
  %10 = sext i32 %9 to i64, !dbg !4335
  %cmp44 = icmp slt i64 %indvars.iv, %10, !dbg !4335
  br i1 %cmp44, label %for.body, label %if.end103.loopexit, !dbg !4332

for.body:                                         ; preds = %for.cond
  %arrayidx49 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv, !dbg !4336
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx49, align 8, !dbg !4336
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !4299, metadata !DIExpression()), !dbg !4337
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !4338
  %bf.load57 = load i32, i32* %12, align 8, !dbg !4338
  %bf.clear58 = and i32 %bf.load57, 65535, !dbg !4338
  %cmp59 = icmp eq i32 %bf.clear58, 23, !dbg !4340
  br i1 %cmp59, label %if.then60, label %for.inc, !dbg !4341

if.then60:                                        ; preds = %for.body
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4342
  %rt_rtx64 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !4342
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx64, align 8, !dbg !4342
  %call65 = tail call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %14) #6, !dbg !4344
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call65, metadata !4298, metadata !DIExpression()), !dbg !4305
  %tobool66 = icmp eq %struct.rtx_def* %call65, null, !dbg !4345
  br i1 %tobool66, label %if.end80, label %land.lhs.true67, !dbg !4347

land.lhs.true67:                                  ; preds = %if.then60
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx64, align 8, !dbg !4348
  %call72 = tail call i32 @rtx_equal_p(%struct.rtx_def* %15, %struct.rtx_def* nonnull %call65) #6, !dbg !4349
  %tobool73 = icmp eq i32 %call72, 0, !dbg !4349
  br i1 %tobool73, label %if.then74, label %if.end80, !dbg !4350

if.then74:                                        ; preds = %land.lhs.true67
  %call79 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx64, %struct.rtx_def* nonnull %call65, i8 zeroext 1) #7, !dbg !4351
  br label %if.end80, !dbg !4351

if.end80:                                         ; preds = %land.lhs.true67, %if.then60, %if.then74
  %arrayidx83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4352
  %rt_rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**, !dbg !4352
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !4352
  %call85 = tail call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %16) #6, !dbg !4353
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call85, metadata !4298, metadata !DIExpression()), !dbg !4305
  %tobool86 = icmp eq %struct.rtx_def* %call85, null, !dbg !4354
  br i1 %tobool86, label %for.inc, label %land.lhs.true87, !dbg !4356

land.lhs.true87:                                  ; preds = %if.end80
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !4357
  %call92 = tail call i32 @rtx_equal_p(%struct.rtx_def* %17, %struct.rtx_def* nonnull %call85) #6, !dbg !4358
  %tobool93 = icmp eq i32 %call92, 0, !dbg !4358
  br i1 %tobool93, label %if.then94, label %for.inc, !dbg !4359

if.then94:                                        ; preds = %land.lhs.true87
  %call99 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx84, %struct.rtx_def* nonnull %call85, i8 zeroext 1) #7, !dbg !4360
  br label %for.inc, !dbg !4360

for.inc:                                          ; preds = %land.lhs.true87, %if.end80, %for.body, %if.then94
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4361
  call void @llvm.dbg.value(metadata i32 undef, metadata !4296, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4305
  br label %for.cond, !dbg !4362, !llvm.loop !4363

if.end103.loopexit:                               ; preds = %for.cond
  br label %if.end103, !dbg !4365

if.end103:                                        ; preds = %if.end103.loopexit, %land.lhs.true23, %if.end, %if.else, %if.then30
  %call104 = tail call i32 @num_changes_pending() #7, !dbg !4365
  %cmp105 = icmp sgt i32 %call104, 0, !dbg !4366
  br i1 %cmp105, label %land.rhs, label %land.end, !dbg !4367

land.rhs:                                         ; preds = %if.end103
  %call106 = tail call i32 @apply_change_group() #7, !dbg !4368
  %cmp107 = icmp sgt i32 %call106, 0, !dbg !4369
  %phitmp = zext i1 %cmp107 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end103
  %18 = phi i8 [ 0, %if.end103 ], [ %phitmp, %land.rhs ]
  ret i8 %18, !dbg !4370
}

declare dso_local %struct.rtx_def* @simplify_rtx(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @general_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4371 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4375, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4376, metadata !DIExpression()), !dbg !4384
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4385
  %bf.load = load i32, i32* %0, align 8, !dbg !4385
  %bf.clear = and i32 %bf.load, 65535, !dbg !4385
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4377, metadata !DIExpression()), !dbg !4384
  %cmp = icmp eq i32 %mode, 0, !dbg !4386
  br i1 %cmp, label %if.then, label %if.end, !dbg !4388

if.then:                                          ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4389
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !4389
  call void @llvm.dbg.value(metadata i32 %bf.clear2, metadata !4376, metadata !DIExpression()), !dbg !4384
  br label %if.end, !dbg !4390

if.end:                                           ; preds = %if.then, %entry
  %mode.addr.0 = phi i32 [ %bf.clear2, %if.then ], [ %mode, %entry ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.0, metadata !4376, metadata !DIExpression()), !dbg !4384
  %bf.clear5 = and i32 %bf.load, 16711680, !dbg !4391
  %cmp6 = icmp eq i32 %bf.clear5, 0, !dbg !4393
  %cmp7 = icmp ne i32 %mode.addr.0, 0, !dbg !4394
  %or.cond = and i1 %cmp6, %cmp7, !dbg !4395
  br i1 %or.cond, label %land.lhs.true8, label %if.end18, !dbg !4395

land.lhs.true8:                                   ; preds = %if.end
  %idxprom = zext i32 %mode.addr.0 to i64, !dbg !4396
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4396
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4396
  %cmp9 = icmp eq i8 %1, 2, !dbg !4397
  br i1 %cmp9, label %if.end18, label %land.lhs.true11, !dbg !4398

land.lhs.true11:                                  ; preds = %land.lhs.true8
  %cmp15 = icmp eq i8 %1, 3, !dbg !4399
  br i1 %cmp15, label %if.end18, label %cleanup200, !dbg !4400

if.end18:                                         ; preds = %land.lhs.true11, %land.lhs.true8, %if.end
  %cmp21 = icmp eq i32 %bf.clear, 30, !dbg !4401
  %or.cond3 = and i1 %cmp21, %cmp7, !dbg !4403
  br i1 %or.cond3, label %land.lhs.true26, label %if.end34, !dbg !4403

land.lhs.true26:                                  ; preds = %if.end18
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, !dbg !4404
  %arrayidx27 = bitcast %union.u* %u to i64*, !dbg !4404
  %2 = load i64, i64* %arrayidx27, align 8, !dbg !4404
  %call = tail call i64 @trunc_int_for_mode(i64 %2, i32 %mode.addr.0) #6, !dbg !4405
  %3 = load i64, i64* %arrayidx27, align 8, !dbg !4406
  %cmp31 = icmp eq i64 %call, %3, !dbg !4407
  br i1 %cmp31, label %land.lhs.true26.if.end34_crit_edge, label %cleanup200, !dbg !4408

land.lhs.true26.if.end34_crit_edge:               ; preds = %land.lhs.true26
  %bf.load35.pre = load i32, i32* %0, align 8, !dbg !4409
  %.pre = and i32 %bf.load35.pre, 65535, !dbg !4409
  br label %if.end34, !dbg !4408

if.end34:                                         ; preds = %land.lhs.true26.if.end34_crit_edge, %if.end18
  %bf.clear36.pre-phi = phi i32 [ %.pre, %land.lhs.true26.if.end34_crit_edge ], [ %bf.clear, %if.end18 ], !dbg !4409
  %bf.load47 = phi i32 [ %bf.load35.pre, %land.lhs.true26.if.end34_crit_edge ], [ %bf.load, %if.end18 ], !dbg !4384
  %idxprom37 = zext i32 %bf.clear36.pre-phi to i64, !dbg !4409
  %arrayidx38 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom37, !dbg !4409
  %4 = load i32, i32* %arrayidx38, align 4, !dbg !4409
  %cmp39 = icmp eq i32 %4, 9, !dbg !4409
  %bf.lshr43 = lshr i32 %bf.load47, 16, !dbg !4384
  %bf.clear44 = and i32 %bf.lshr43, 255, !dbg !4384
  br i1 %cmp39, label %if.then41, label %if.end63, !dbg !4411

if.then41:                                        ; preds = %if.end34
  %cmp45 = icmp eq i32 %bf.clear44, 0, !dbg !4412
  br i1 %cmp45, label %land.lhs.true55, label %lor.lhs.false, !dbg !4413

lor.lhs.false:                                    ; preds = %if.then41
  %cmp50 = icmp eq i32 %bf.clear44, %mode.addr.0, !dbg !4414
  %cmp53 = icmp eq i32 %mode.addr.0, 0, !dbg !4415
  %or.cond4 = or i1 %cmp50, %cmp53, !dbg !4416
  br i1 %or.cond4, label %land.lhs.true55, label %land.end, !dbg !4416

land.lhs.true55:                                  ; preds = %lor.lhs.false, %if.then41
  %5 = load i32, i32* @flag_pic, align 4, !dbg !4417
  %tobool = icmp eq i32 %5, 0, !dbg !4417
  br i1 %tobool, label %land.rhs, label %lor.lhs.false56, !dbg !4418

lor.lhs.false56:                                  ; preds = %land.lhs.true55
  %call57 = tail call zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def* %op) #6, !dbg !4419
  %tobool59 = icmp eq i8 %call57, 0, !dbg !4419
  br i1 %tobool59, label %land.end, label %land.rhs, !dbg !4420

land.rhs:                                         ; preds = %lor.lhs.false56, %land.lhs.true55
  %call60 = tail call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %op) #6, !dbg !4421
  %tobool62 = icmp ne i8 %call60, 0, !dbg !4420
  %phitmp6 = zext i1 %tobool62 to i32
  br label %land.end

land.end:                                         ; preds = %lor.lhs.false56, %lor.lhs.false, %land.rhs
  %6 = phi i32 [ 0, %lor.lhs.false56 ], [ %phitmp6, %land.rhs ], [ 0, %lor.lhs.false ]
  br label %cleanup200, !dbg !4422

if.end63:                                         ; preds = %if.end34
  %cmp67 = icmp eq i32 %bf.clear44, %mode.addr.0, !dbg !4423
  br i1 %cmp67, label %if.end70, label %cleanup200, !dbg !4425

if.end70:                                         ; preds = %if.end63
  %cmp71 = icmp eq i32 %bf.clear, 39, !dbg !4426
  br i1 %cmp71, label %if.then73, label %if.end150, !dbg !4427

if.then73:                                        ; preds = %if.end70
  %arrayidx75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4428
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**, !dbg !4428
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4428
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !4378, metadata !DIExpression()), !dbg !4429
  %8 = load i32, i32* @reload_completed, align 4, !dbg !4430
  %tobool76 = icmp eq i32 %8, 0, !dbg !4430
  br i1 %tobool76, label %land.lhs.true77, label %if.end97, !dbg !4432

land.lhs.true77:                                  ; preds = %if.then73
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !4433
  %bf.load78 = load i32, i32* %9, align 8, !dbg !4433
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !4433
  %cmp80 = icmp eq i32 %bf.clear79, 43, !dbg !4433
  br i1 %cmp80, label %land.lhs.true82, label %if.end97, !dbg !4434

land.lhs.true82:                                  ; preds = %land.lhs.true77
  %idxprom83 = zext i32 %mode.addr.0 to i64, !dbg !4435
  %arrayidx84 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom83, !dbg !4435
  %10 = load i8, i8* %arrayidx84, align 1, !dbg !4435
  %bf.lshr88 = lshr i32 %bf.load78, 16, !dbg !4436
  %bf.clear89 = and i32 %bf.lshr88, 255, !dbg !4436
  %idxprom90 = zext i32 %bf.clear89 to i64, !dbg !4436
  %arrayidx91 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom90, !dbg !4436
  %11 = load i8, i8* %arrayidx91, align 1, !dbg !4436
  %cmp94 = icmp ugt i8 %10, %11, !dbg !4437
  br i1 %cmp94, label %cleanup, label %if.end97, !dbg !4438

if.end97:                                         ; preds = %if.then73, %land.lhs.true82, %land.lhs.true77
  br i1 %tobool76, label %land.lhs.true99, label %if.end111, !dbg !4439

land.lhs.true99:                                  ; preds = %if.end97
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4441
  %rt_uint = bitcast %union.rtunion_def* %12 to i32*, !dbg !4441
  %13 = load i32, i32* %rt_uint, align 8, !dbg !4441
  %cmp103 = icmp eq i32 %13, 0, !dbg !4442
  br i1 %cmp103, label %if.end111, label %land.lhs.true105, !dbg !4443

land.lhs.true105:                                 ; preds = %land.lhs.true99
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !4444
  %bf.load106 = load i32, i32* %14, align 8, !dbg !4444
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !4444
  %cmp108 = icmp eq i32 %bf.clear107, 43, !dbg !4444
  br i1 %cmp108, label %cleanup, label %if.end111, !dbg !4445

if.end111:                                        ; preds = %land.lhs.true99, %if.end97, %land.lhs.true105
  %idxprom115 = zext i32 %mode.addr.0 to i64, !dbg !4446
  %arrayidx116 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom115, !dbg !4446
  %15 = load i8, i8* %arrayidx116, align 1, !dbg !4446
  %cmp118 = icmp eq i8 %15, 8, !dbg !4446
  br i1 %cmp118, label %land.lhs.true129, label %lor.lhs.false120, !dbg !4446

lor.lhs.false120:                                 ; preds = %if.end111
  %cmp127 = icmp eq i8 %15, 9, !dbg !4446
  br i1 %cmp127, label %land.lhs.true129, label %lor.lhs.false120.if.end147_crit_edge, !dbg !4448

lor.lhs.false120.if.end147_crit_edge:             ; preds = %lor.lhs.false120
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !4429
  %bf.load148.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4449
  br label %if.end147, !dbg !4448

land.lhs.true129:                                 ; preds = %lor.lhs.false120, %if.end111
  %arrayidx134 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom115, !dbg !4450
  %16 = load i8, i8* %arrayidx134, align 1, !dbg !4450
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !4451
  %bf.load137 = load i32, i32* %17, align 8, !dbg !4451
  %bf.lshr138 = lshr i32 %bf.load137, 16, !dbg !4451
  %bf.clear139 = and i32 %bf.lshr138, 255, !dbg !4451
  %idxprom140 = zext i32 %bf.clear139 to i64, !dbg !4451
  %arrayidx141 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom140, !dbg !4451
  %18 = load i8, i8* %arrayidx141, align 1, !dbg !4451
  %cmp144 = icmp ugt i8 %16, %18, !dbg !4452
  br i1 %cmp144, label %cleanup, label %if.end147, !dbg !4453

if.end147:                                        ; preds = %lor.lhs.false120.if.end147_crit_edge, %land.lhs.true129
  %bf.load148 = phi i32 [ %bf.load148.pre, %lor.lhs.false120.if.end147_crit_edge ], [ %bf.load137, %land.lhs.true129 ], !dbg !4449
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !4375, metadata !DIExpression()), !dbg !4384
  %bf.clear149 = and i32 %bf.load148, 65535, !dbg !4449
  call void @llvm.dbg.value(metadata i32 %bf.clear149, metadata !4377, metadata !DIExpression()), !dbg !4384
  br label %cleanup, !dbg !4454

cleanup:                                          ; preds = %land.lhs.true129, %land.lhs.true105, %land.lhs.true82, %if.end147
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end147 ], [ false, %land.lhs.true82 ], [ false, %land.lhs.true105 ], [ false, %land.lhs.true129 ]
  %code.0 = phi i32 [ %bf.clear149, %if.end147 ], [ 39, %land.lhs.true82 ], [ 39, %land.lhs.true105 ], [ 39, %land.lhs.true129 ], !dbg !4384
  %op.addr.0 = phi %struct.rtx_def* [ %7, %if.end147 ], [ %op, %land.lhs.true82 ], [ %op, %land.lhs.true105 ], [ %op, %land.lhs.true129 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op.addr.0, metadata !4375, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !4377, metadata !DIExpression()), !dbg !4384
  br i1 %cleanup.dest.slot.0, label %if.end150, label %cleanup200

if.end150:                                        ; preds = %cleanup, %if.end70
  %code.1 = phi i32 [ %bf.clear, %if.end70 ], [ %code.0, %cleanup ], !dbg !4455
  %op.addr.1 = phi %struct.rtx_def* [ %op, %if.end70 ], [ %op.addr.0, %cleanup ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op.addr.1, metadata !4375, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i32 %code.1, metadata !4377, metadata !DIExpression()), !dbg !4384
  switch i32 %code.1, label %if.end199 [
    i32 37, label %if.then153
    i32 43, label %if.then165
  ], !dbg !4456

if.then153:                                       ; preds = %if.end150
  %call154 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %op.addr.1) #7, !dbg !4457
  %cmp155 = icmp ugt i32 %call154, 52, !dbg !4459
  br i1 %cmp155, label %lor.end, label %lor.rhs, !dbg !4460

lor.rhs:                                          ; preds = %if.then153
  %call157 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %op.addr.1) #7, !dbg !4461
  %idxprom158 = zext i32 %call157 to i64, !dbg !4461
  %arrayidx159 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom158, !dbg !4461
  %19 = load i32, i32* %arrayidx159, align 4, !dbg !4461
  %cmp160 = icmp ne i32 %19, 0, !dbg !4462
  %phitmp5 = zext i1 %cmp160 to i32, !dbg !4460
  br label %lor.end, !dbg !4460

lor.end:                                          ; preds = %lor.rhs, %if.then153
  %20 = phi i32 [ 1, %if.then153 ], [ %phitmp5, %lor.rhs ]
  br label %cleanup200, !dbg !4463

if.then165:                                       ; preds = %if.end150
  %arrayidx168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op.addr.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4464
  %rt_rtx169 = bitcast %union.rtunion_def* %arrayidx168 to %struct.rtx_def**, !dbg !4464
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx169, align 8, !dbg !4464
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !4381, metadata !DIExpression()), !dbg !4465
  %22 = load i32, i32* @volatile_ok, align 4, !dbg !4466
  %tobool170 = icmp eq i32 %22, 0, !dbg !4466
  br i1 %tobool170, label %land.lhs.true171, label %if.then165.if.end177_crit_edge, !dbg !4468

if.then165.if.end177_crit_edge:                   ; preds = %if.then165
  %.phi.trans.insert9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op.addr.1, i64 0, i32 0, !dbg !4469
  %bf.load178.pre = load i32, i32* %.phi.trans.insert9, align 8, !dbg !4471
  br label %if.end177, !dbg !4468

land.lhs.true171:                                 ; preds = %if.then165
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op.addr.1, i64 0, i32 0, !dbg !4472
  %bf.load172 = load i32, i32* %23, align 8, !dbg !4472
  %bf.clear174 = and i32 %bf.load172, 134217728, !dbg !4472
  %tobool175 = icmp eq i32 %bf.clear174, 0, !dbg !4472
  br i1 %tobool175, label %if.end177, label %cleanup196, !dbg !4473

if.end177:                                        ; preds = %if.then165.if.end177_crit_edge, %land.lhs.true171
  %bf.load178 = phi i32 [ %bf.load178.pre, %if.then165.if.end177_crit_edge ], [ %bf.load172, %land.lhs.true171 ], !dbg !4471
  %bf.lshr179 = lshr i32 %bf.load178, 16, !dbg !4471
  %bf.clear180 = and i32 %bf.lshr179, 255, !dbg !4471
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op.addr.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4474
  %rt_mem = bitcast %union.rtunion_def* %24 to %struct.mem_attrs**, !dbg !4474
  %25 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4474
  %cmp184 = icmp eq %struct.mem_attrs* %25, null, !dbg !4474
  br i1 %cmp184, label %cond.end, label %cond.false, !dbg !4474

cond.false:                                       ; preds = %if.end177
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %25, i64 0, i32 5, !dbg !4474
  %26 = load i8, i8* %addrspace, align 8, !dbg !4474
  br label %cond.end, !dbg !4474

cond.end:                                         ; preds = %if.end177, %cond.false
  %cond = phi i8 [ %26, %cond.false ], [ 0, %if.end177 ]
  %call192 = tail call i32 @memory_address_addr_space_p(i32 %bf.clear180, %struct.rtx_def* %21, i8 zeroext %cond) #7, !dbg !4475
  %tobool193 = icmp ne i32 %call192, 0, !dbg !4475
  %. = zext i1 %tobool193 to i32, !dbg !4476
  %phitmp = xor i1 %tobool193, true, !dbg !4476
  br label %cleanup196, !dbg !4476

cleanup196:                                       ; preds = %land.lhs.true171, %cond.end
  %cleanup.dest.slot.1 = phi i1 [ false, %land.lhs.true171 ], [ %phitmp, %cond.end ]
  %retval.2 = phi i32 [ 0, %land.lhs.true171 ], [ %., %cond.end ], !dbg !4384
  br i1 %cleanup.dest.slot.1, label %if.end199, label %cleanup200

if.end199:                                        ; preds = %cleanup196, %if.end150
  br label %cleanup200, !dbg !4477

cleanup200:                                       ; preds = %land.lhs.true11, %land.lhs.true26, %if.end63, %cleanup, %cleanup196, %if.end199, %lor.end, %land.end
  %retval.3 = phi i32 [ %6, %land.end ], [ 0, %cleanup ], [ %20, %lor.end ], [ %retval.2, %cleanup196 ], [ 0, %if.end199 ], [ 0, %land.lhs.true11 ], [ 0, %land.lhs.true26 ], [ 0, %if.end63 ], !dbg !4384
  ret i32 %retval.3, !dbg !4478
}

declare dso_local i64 @trunc_int_for_mode(i64, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @legitimate_constant_p(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !4479 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4483, metadata !DIExpression()), !dbg !4484
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4485
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4485
  %0 = load i32, i32* %rt_uint, align 8, !dbg !4485
  ret i32 %0, !dbg !4486
}

; Function Attrs: nounwind uwtable
define dso_local i32 @address_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4487 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4489, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4490, metadata !DIExpression()), !dbg !4491
  %call = tail call i32 @memory_address_addr_space_p(i32 %mode, %struct.rtx_def* %op, i8 zeroext 0) #7, !dbg !4492
  ret i32 %call, !dbg !4493
}

; Function Attrs: nounwind uwtable
define dso_local i32 @register_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4494 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4496, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4497, metadata !DIExpression()), !dbg !4501
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4502
  %bf.load = load i32, i32* %0, align 8, !dbg !4502
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4502
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4502
  %cmp = icmp ne i32 %bf.clear, %mode, !dbg !4504
  %cmp1 = icmp ne i32 %mode, 0, !dbg !4505
  %or.cond = and i1 %cmp, %cmp1, !dbg !4506
  br i1 %or.cond, label %return, label %if.end, !dbg !4506

if.end:                                           ; preds = %entry
  %bf.clear3 = and i32 %bf.load, 65535, !dbg !4507
  %cmp4 = icmp eq i32 %bf.clear3, 39, !dbg !4508
  br i1 %cmp4, label %if.then5, label %if.end81, !dbg !4509

if.then5:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4510
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4510
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4510
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4498, metadata !DIExpression()), !dbg !4511
  %2 = load i32, i32* @reload_completed, align 4, !dbg !4512
  %tobool = icmp eq i32 %2, 0, !dbg !4512
  br i1 %tobool, label %land.lhs.true6, label %if.then5.if.end11_crit_edge, !dbg !4514

if.then5.if.end11_crit_edge:                      ; preds = %if.then5
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4515
  %bf.load12.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4517
  br label %if.end11, !dbg !4514

land.lhs.true6:                                   ; preds = %if.then5
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4518
  %bf.load7 = load i32, i32* %3, align 8, !dbg !4518
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !4518
  %cmp9 = icmp eq i32 %bf.clear8, 43, !dbg !4518
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !4519

if.then10:                                        ; preds = %land.lhs.true6
  %call = tail call i32 @general_operand(%struct.rtx_def* %op, i32 %mode) #7, !dbg !4520
  br label %cleanup, !dbg !4521

if.end11:                                         ; preds = %if.then5.if.end11_crit_edge, %land.lhs.true6
  %bf.load12 = phi i32 [ %bf.load12.pre, %if.then5.if.end11_crit_edge ], [ %bf.load7, %land.lhs.true6 ], !dbg !4517
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4517
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !4517
  %cmp14 = icmp eq i32 %bf.clear13, 37, !dbg !4517
  br i1 %cmp14, label %land.lhs.true15, label %if.end45, !dbg !4522

land.lhs.true15:                                  ; preds = %if.end11
  %call16 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !4523
  %cmp17 = icmp ult i32 %call16, 53, !dbg !4524
  br i1 %cmp17, label %land.lhs.true18, label %if.end45, !dbg !4525

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %bf.load19 = load i32, i32* %4, align 8, !dbg !4526
  %bf.lshr20 = lshr i32 %bf.load19, 16, !dbg !4526
  %bf.clear21 = and i32 %bf.lshr20, 255, !dbg !4526
  %call22 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !4526
  %idxprom = zext i32 %call22 to i64, !dbg !4526
  %arrayidx23 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom, !dbg !4526
  %5 = load i32, i32* %arrayidx23, align 4, !dbg !4526
  %call24 = tail call zeroext i8 @ix86_cannot_change_mode_class(i32 %bf.clear21, i32 %mode, i32 %5) #6, !dbg !4526
  %tobool25 = icmp eq i8 %call24, 0, !dbg !4526
  br i1 %tobool25, label %if.end45, label %land.lhs.true26, !dbg !4527

land.lhs.true26:                                  ; preds = %land.lhs.true18
  %bf.load27 = load i32, i32* %4, align 8, !dbg !4528
  %bf.lshr28 = lshr i32 %bf.load27, 16, !dbg !4528
  %bf.clear29 = and i32 %bf.lshr28, 255, !dbg !4528
  %idxprom30 = zext i32 %bf.clear29 to i64, !dbg !4528
  %arrayidx31 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom30, !dbg !4528
  %6 = load i8, i8* %arrayidx31, align 1, !dbg !4528
  %cmp33 = icmp eq i8 %6, 10, !dbg !4529
  br i1 %cmp33, label %if.end45, label %land.lhs.true35, !dbg !4530

land.lhs.true35:                                  ; preds = %land.lhs.true26
  %cmp42 = icmp eq i8 %6, 11, !dbg !4531
  br i1 %cmp42, label %if.end45, label %cleanup, !dbg !4532

if.end45:                                         ; preds = %land.lhs.true35, %land.lhs.true26, %land.lhs.true18, %land.lhs.true15, %if.end11
  %bf.load46 = load i32, i32* %0, align 8, !dbg !4533
  %bf.lshr47 = lshr i32 %bf.load46, 16, !dbg !4533
  %bf.clear48 = and i32 %bf.lshr47, 255, !dbg !4533
  %idxprom49 = zext i32 %bf.clear48 to i64, !dbg !4533
  %arrayidx50 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom49, !dbg !4533
  %7 = load i8, i8* %arrayidx50, align 1, !dbg !4533
  %cmp52 = icmp eq i8 %7, 8, !dbg !4533
  br i1 %cmp52, label %land.lhs.true62, label %lor.lhs.false, !dbg !4533

lor.lhs.false:                                    ; preds = %if.end45
  %cmp60 = icmp eq i8 %7, 9, !dbg !4533
  br i1 %cmp60, label %land.lhs.true62, label %if.end80, !dbg !4535

land.lhs.true62:                                  ; preds = %lor.lhs.false, %if.end45
  %arrayidx67 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom49, !dbg !4536
  %8 = load i8, i8* %arrayidx67, align 1, !dbg !4536
  %bf.load70 = load i32, i32* %4, align 8, !dbg !4537
  %bf.lshr71 = lshr i32 %bf.load70, 16, !dbg !4537
  %bf.clear72 = and i32 %bf.lshr71, 255, !dbg !4537
  %idxprom73 = zext i32 %bf.clear72 to i64, !dbg !4537
  %arrayidx74 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom73, !dbg !4537
  %9 = load i8, i8* %arrayidx74, align 1, !dbg !4537
  %cmp77 = icmp ugt i8 %8, %9, !dbg !4538
  br i1 %cmp77, label %cleanup, label %if.end80, !dbg !4539

if.end80:                                         ; preds = %land.lhs.true62, %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4496, metadata !DIExpression()), !dbg !4501
  br label %cleanup, !dbg !4540

cleanup:                                          ; preds = %land.lhs.true35, %land.lhs.true62, %if.end80, %if.then10
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end80 ], [ false, %if.then10 ], [ false, %land.lhs.true35 ], [ false, %land.lhs.true62 ]
  %op.addr.0 = phi %struct.rtx_def* [ %1, %if.end80 ], [ %op, %if.then10 ], [ %op, %land.lhs.true35 ], [ %op, %land.lhs.true62 ]
  %retval.0 = phi i32 [ undef, %if.end80 ], [ %call, %if.then10 ], [ 0, %land.lhs.true35 ], [ 0, %land.lhs.true62 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op.addr.0, metadata !4496, metadata !DIExpression()), !dbg !4501
  br i1 %cleanup.dest.slot.0, label %cleanup.if.end81_crit_edge, label %return

cleanup.if.end81_crit_edge:                       ; preds = %cleanup
  %.phi.trans.insert2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op.addr.0, i64 0, i32 0, !dbg !4501
  %bf.load82.pre = load i32, i32* %.phi.trans.insert2, align 8, !dbg !4541
  br label %if.end81

if.end81:                                         ; preds = %cleanup.if.end81_crit_edge, %if.end
  %bf.load82 = phi i32 [ %bf.load, %if.end ], [ %bf.load82.pre, %cleanup.if.end81_crit_edge ], !dbg !4541
  %op.addr.1 = phi %struct.rtx_def* [ %op, %if.end ], [ %op.addr.0, %cleanup.if.end81_crit_edge ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op.addr.1, metadata !4496, metadata !DIExpression()), !dbg !4501
  %bf.clear83 = and i32 %bf.load82, 65535, !dbg !4541
  %cmp84 = icmp eq i32 %bf.clear83, 37, !dbg !4541
  br i1 %cmp84, label %land.rhs, label %land.end, !dbg !4542

land.rhs:                                         ; preds = %if.end81
  %call86 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %op.addr.1) #7, !dbg !4543
  %cmp87 = icmp ugt i32 %call86, 52, !dbg !4544
  br i1 %cmp87, label %land.end, label %lor.rhs, !dbg !4545

lor.rhs:                                          ; preds = %land.rhs
  %call89 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %op.addr.1) #7, !dbg !4546
  %idxprom90 = zext i32 %call89 to i64, !dbg !4546
  %arrayidx91 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom90, !dbg !4546
  %10 = load i32, i32* %arrayidx91, align 4, !dbg !4546
  %cmp92 = icmp ne i32 %10, 0, !dbg !4547
  %phitmp = zext i1 %cmp92 to i32, !dbg !4545
  br label %land.end, !dbg !4545

land.end:                                         ; preds = %land.rhs, %lor.rhs, %if.end81
  %11 = phi i32 [ 0, %if.end81 ], [ 1, %land.rhs ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !4548

return:                                           ; preds = %cleanup, %entry, %land.end
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ %11, %land.end ], [ 0, %entry ], !dbg !4501
  ret i32 %retval.1, !dbg !4549
}

declare dso_local zeroext i8 @ix86_cannot_change_mode_class(i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @pmode_register_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4550 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4552, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4553, metadata !DIExpression()), !dbg !4554
  %call = tail call i32 @register_operand(%struct.rtx_def* %op, i32 16) #7, !dbg !4555
  ret i32 %call, !dbg !4556
}

; Function Attrs: nounwind uwtable
define dso_local i32 @scratch_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4557 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4559, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4560, metadata !DIExpression()), !dbg !4561
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4562
  %bf.load = load i32, i32* %0, align 8, !dbg !4562
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4562
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4562
  %cmp = icmp ne i32 %bf.clear, %mode, !dbg !4564
  %cmp1 = icmp ne i32 %mode, 0, !dbg !4565
  %or.cond = and i1 %cmp, %cmp1, !dbg !4566
  br i1 %or.cond, label %return, label %if.end, !dbg !4566

if.end:                                           ; preds = %entry
  %bf.clear3 = and i32 %bf.load, 65535, !dbg !4567
  %cmp4 = icmp eq i32 %bf.clear3, 38, !dbg !4568
  br i1 %cmp4, label %lor.end, label %lor.rhs, !dbg !4569

lor.rhs:                                          ; preds = %if.end
  %cmp7 = icmp eq i32 %bf.clear3, 37, !dbg !4570
  br i1 %cmp7, label %land.rhs, label %lor.end, !dbg !4571

land.rhs:                                         ; preds = %lor.rhs
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %op) #7, !dbg !4572
  %cmp8 = icmp ult i32 %call, 53, !dbg !4573
  %phitmp = zext i1 %cmp8 to i32
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs, %if.end
  %1 = phi i32 [ 1, %if.end ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  br label %return, !dbg !4574

return:                                           ; preds = %entry, %lor.end
  %retval.0 = phi i32 [ %1, %lor.end ], [ 0, %entry ], !dbg !4561
  ret i32 %retval.0, !dbg !4575
}

; Function Attrs: nounwind uwtable
define dso_local i32 @immediate_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4576 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4578, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4579, metadata !DIExpression()), !dbg !4580
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4581
  %bf.load = load i32, i32* %0, align 8, !dbg !4581
  %bf.clear = and i32 %bf.load, 16711680, !dbg !4581
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !4583
  %cmp1 = icmp ne i32 %mode, 0, !dbg !4584
  %or.cond = and i1 %cmp, %cmp1, !dbg !4585
  br i1 %or.cond, label %land.lhs.true2, label %if.end, !dbg !4585

land.lhs.true2:                                   ; preds = %entry
  %idxprom = zext i32 %mode to i64, !dbg !4586
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4586
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4586
  %cmp3 = icmp eq i8 %1, 2, !dbg !4587
  br i1 %cmp3, label %if.end, label %land.lhs.true5, !dbg !4588

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %cmp9 = icmp eq i8 %1, 3, !dbg !4589
  br i1 %cmp9, label %if.end, label %return, !dbg !4590

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true2, %entry
  %bf.clear12 = and i32 %bf.load, 65535, !dbg !4591
  %cmp13 = icmp eq i32 %bf.clear12, 30, !dbg !4591
  %or.cond1 = and i1 %cmp13, %cmp1, !dbg !4593
  br i1 %or.cond1, label %land.lhs.true18, label %if.end26, !dbg !4593

land.lhs.true18:                                  ; preds = %if.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, !dbg !4594
  %arrayidx19 = bitcast %union.u* %u to i64*, !dbg !4594
  %2 = load i64, i64* %arrayidx19, align 8, !dbg !4594
  %call = tail call i64 @trunc_int_for_mode(i64 %2, i32 %mode) #6, !dbg !4595
  %3 = load i64, i64* %arrayidx19, align 8, !dbg !4596
  %cmp23 = icmp eq i64 %call, %3, !dbg !4597
  br i1 %cmp23, label %land.lhs.true18.if.end26_crit_edge, label %return, !dbg !4598

land.lhs.true18.if.end26_crit_edge:               ; preds = %land.lhs.true18
  %bf.load27.pre = load i32, i32* %0, align 8, !dbg !4599
  %.pre = and i32 %bf.load27.pre, 65535, !dbg !4599
  br label %if.end26, !dbg !4598

if.end26:                                         ; preds = %land.lhs.true18.if.end26_crit_edge, %if.end
  %bf.clear28.pre-phi = phi i32 [ %.pre, %land.lhs.true18.if.end26_crit_edge ], [ %bf.clear12, %if.end ], !dbg !4599
  %bf.load42 = phi i32 [ %bf.load27.pre, %land.lhs.true18.if.end26_crit_edge ], [ %bf.load, %if.end ], !dbg !4599
  %idxprom29 = zext i32 %bf.clear28.pre-phi to i64, !dbg !4599
  %arrayidx30 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom29, !dbg !4599
  %4 = load i32, i32* %arrayidx30, align 4, !dbg !4599
  %cmp31 = icmp eq i32 %4, 9, !dbg !4599
  br i1 %cmp31, label %land.lhs.true33, label %land.end, !dbg !4600

land.lhs.true33:                                  ; preds = %if.end26
  %bf.lshr35 = lshr i32 %bf.load42, 16, !dbg !4601
  %bf.clear36 = and i32 %bf.lshr35, 255, !dbg !4601
  %cmp37 = icmp eq i32 %bf.clear36, %mode, !dbg !4602
  %cmp39 = icmp eq i32 %mode, 0, !dbg !4603
  %or.cond2 = or i1 %cmp37, %cmp39, !dbg !4604
  br i1 %or.cond2, label %land.lhs.true47, label %lor.lhs.false41, !dbg !4604

lor.lhs.false41:                                  ; preds = %land.lhs.true33
  %bf.clear44 = and i32 %bf.load42, 16711680, !dbg !4605
  %cmp45 = icmp eq i32 %bf.clear44, 0, !dbg !4606
  br i1 %cmp45, label %land.lhs.true47, label %land.end, !dbg !4607

land.lhs.true47:                                  ; preds = %lor.lhs.false41, %land.lhs.true33
  %5 = load i32, i32* @flag_pic, align 4, !dbg !4608
  %tobool = icmp eq i32 %5, 0, !dbg !4608
  br i1 %tobool, label %land.rhs, label %lor.lhs.false48, !dbg !4609

lor.lhs.false48:                                  ; preds = %land.lhs.true47
  %call49 = tail call zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def* %op) #6, !dbg !4610
  %tobool51 = icmp eq i8 %call49, 0, !dbg !4610
  br i1 %tobool51, label %land.end, label %land.rhs, !dbg !4611

land.rhs:                                         ; preds = %lor.lhs.false48, %land.lhs.true47
  %call52 = tail call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %op) #6, !dbg !4612
  %tobool54 = icmp ne i8 %call52, 0, !dbg !4611
  %phitmp = zext i1 %tobool54 to i32
  br label %land.end

land.end:                                         ; preds = %lor.lhs.false48, %land.rhs, %lor.lhs.false41, %if.end26
  %6 = phi i32 [ 0, %lor.lhs.false48 ], [ 0, %lor.lhs.false41 ], [ 0, %if.end26 ], [ %phitmp, %land.rhs ]
  br label %return, !dbg !4613

return:                                           ; preds = %land.lhs.true5, %land.lhs.true18, %land.end
  %retval.0 = phi i32 [ %6, %land.end ], [ 0, %land.lhs.true5 ], [ 0, %land.lhs.true18 ], !dbg !4580
  ret i32 %retval.0, !dbg !4614
}

; Function Attrs: nounwind uwtable
define dso_local i32 @const_int_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4615 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4617, metadata !DIExpression()), !dbg !4619
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4618, metadata !DIExpression()), !dbg !4619
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4620
  %bf.load = load i32, i32* %0, align 8, !dbg !4620
  %bf.clear = and i32 %bf.load, 65535, !dbg !4620
  %cmp = icmp eq i32 %bf.clear, 30, !dbg !4620
  br i1 %cmp, label %if.end, label %return, !dbg !4622

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i32 %mode, 0, !dbg !4623
  br i1 %cmp1, label %if.end7, label %land.lhs.true, !dbg !4625

land.lhs.true:                                    ; preds = %if.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, !dbg !4626
  %arrayidx = bitcast %union.u* %u to i64*, !dbg !4626
  %1 = load i64, i64* %arrayidx, align 8, !dbg !4626
  %call = tail call i64 @trunc_int_for_mode(i64 %1, i32 %mode) #6, !dbg !4627
  %2 = load i64, i64* %arrayidx, align 8, !dbg !4628
  %cmp5 = icmp eq i64 %call, %2, !dbg !4629
  br i1 %cmp5, label %if.end7, label %return, !dbg !4630

if.end7:                                          ; preds = %land.lhs.true, %if.end
  br label %return, !dbg !4631

return:                                           ; preds = %land.lhs.true, %entry, %if.end7
  %retval.0 = phi i32 [ 1, %if.end7 ], [ 0, %entry ], [ 0, %land.lhs.true ], !dbg !4619
  ret i32 %retval.0, !dbg !4632
}

; Function Attrs: nounwind uwtable
define dso_local i32 @const_double_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4633 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4635, metadata !DIExpression()), !dbg !4637
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4636, metadata !DIExpression()), !dbg !4637
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4638
  %bf.load = load i32, i32* %0, align 8, !dbg !4638
  %bf.clear = and i32 %bf.load, 16711680, !dbg !4638
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !4640
  %cmp1 = icmp ne i32 %mode, 0, !dbg !4641
  %or.cond = and i1 %cmp, %cmp1, !dbg !4642
  br i1 %or.cond, label %land.lhs.true2, label %if.end, !dbg !4642

land.lhs.true2:                                   ; preds = %entry
  %idxprom = zext i32 %mode to i64, !dbg !4643
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4643
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4643
  %cmp3 = icmp eq i8 %1, 2, !dbg !4644
  br i1 %cmp3, label %if.end, label %land.lhs.true5, !dbg !4645

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %cmp9 = icmp eq i8 %1, 3, !dbg !4646
  br i1 %cmp9, label %if.end, label %return, !dbg !4647

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true2, %entry
  %bf.clear12 = and i32 %bf.load, 65535, !dbg !4648
  %cmp13 = icmp eq i32 %bf.clear12, 32, !dbg !4649
  br i1 %cmp13, label %land.rhs, label %lor.lhs.false, !dbg !4650

lor.lhs.false:                                    ; preds = %if.end
  %cmp17 = icmp eq i32 %bf.clear12, 30, !dbg !4651
  br i1 %cmp17, label %land.rhs, label %land.end, !dbg !4652

land.rhs:                                         ; preds = %lor.lhs.false, %if.end
  %cmp19 = icmp eq i32 %mode, 0, !dbg !4653
  br i1 %cmp19, label %land.end, label %lor.lhs.false21, !dbg !4654

lor.lhs.false21:                                  ; preds = %land.rhs
  %bf.lshr23 = lshr i32 %bf.load, 16, !dbg !4655
  %bf.clear24 = and i32 %bf.lshr23, 255, !dbg !4655
  %cmp25 = icmp eq i32 %bf.clear24, %mode, !dbg !4656
  br i1 %cmp25, label %land.end, label %lor.rhs, !dbg !4657

lor.rhs:                                          ; preds = %lor.lhs.false21
  %phitmp = zext i1 %cmp to i32, !dbg !4657
  br label %land.end, !dbg !4657

land.end:                                         ; preds = %land.rhs, %lor.lhs.false21, %lor.rhs, %lor.lhs.false
  %2 = phi i32 [ 0, %lor.lhs.false ], [ 1, %lor.lhs.false21 ], [ 1, %land.rhs ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !4658

return:                                           ; preds = %land.lhs.true5, %land.end
  %retval.0 = phi i32 [ %2, %land.end ], [ 0, %land.lhs.true5 ], !dbg !4637
  ret i32 %retval.0, !dbg !4659
}

; Function Attrs: nounwind uwtable
define dso_local i32 @nonimmediate_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4660 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4662, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4663, metadata !DIExpression()), !dbg !4664
  %call = tail call i32 @general_operand(%struct.rtx_def* %op, i32 %mode) #7, !dbg !4665
  %tobool = icmp eq i32 %call, 0, !dbg !4665
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !4666

land.rhs:                                         ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4667
  %bf.load = load i32, i32* %0, align 8, !dbg !4667
  %bf.clear = and i32 %bf.load, 65535, !dbg !4667
  %idxprom = zext i32 %bf.clear to i64, !dbg !4667
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4667
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4667
  %cmp = icmp ne i32 %1, 9, !dbg !4667
  %phitmp = zext i1 %cmp to i32
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %2, !dbg !4668
}

; Function Attrs: nounwind uwtable
define dso_local i32 @nonmemory_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4669 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4671, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4672, metadata !DIExpression()), !dbg !4673
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4674
  %bf.load = load i32, i32* %0, align 8, !dbg !4674
  %bf.clear = and i32 %bf.load, 65535, !dbg !4674
  %idxprom = zext i32 %bf.clear to i64, !dbg !4674
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4674
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4674
  %cmp = icmp eq i32 %1, 9, !dbg !4674
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4673
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !4673
  br i1 %cmp, label %if.then, label %if.end54, !dbg !4676

if.then:                                          ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear2, 0, !dbg !4677
  %cmp4 = icmp ne i32 %mode, 0, !dbg !4680
  %or.cond = and i1 %cmp3, %cmp4, !dbg !4681
  br i1 %or.cond, label %land.lhs.true5, label %if.end, !dbg !4681

land.lhs.true5:                                   ; preds = %if.then
  %idxprom6 = zext i32 %mode to i64, !dbg !4682
  %arrayidx7 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom6, !dbg !4682
  %2 = load i8, i8* %arrayidx7, align 1, !dbg !4682
  %cmp8 = icmp eq i8 %2, 2, !dbg !4683
  br i1 %cmp8, label %if.end, label %land.lhs.true10, !dbg !4684

land.lhs.true10:                                  ; preds = %land.lhs.true5
  %cmp14 = icmp eq i8 %2, 3, !dbg !4685
  br i1 %cmp14, label %if.end, label %return, !dbg !4686

if.end:                                           ; preds = %land.lhs.true10, %land.lhs.true5, %if.then
  %cmp19 = icmp eq i32 %bf.clear, 30, !dbg !4687
  %or.cond1 = and i1 %cmp19, %cmp4, !dbg !4689
  br i1 %or.cond1, label %land.lhs.true24, label %if.end32, !dbg !4689

land.lhs.true24:                                  ; preds = %if.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, !dbg !4690
  %arrayidx25 = bitcast %union.u* %u to i64*, !dbg !4690
  %3 = load i64, i64* %arrayidx25, align 8, !dbg !4690
  %call = tail call i64 @trunc_int_for_mode(i64 %3, i32 %mode) #6, !dbg !4691
  %4 = load i64, i64* %arrayidx25, align 8, !dbg !4692
  %cmp29 = icmp eq i64 %call, %4, !dbg !4693
  br i1 %cmp29, label %land.lhs.true24.if.end32_crit_edge, label %return, !dbg !4694

land.lhs.true24.if.end32_crit_edge:               ; preds = %land.lhs.true24
  %bf.load33.pre = load i32, i32* %0, align 8, !dbg !4695
  br label %if.end32, !dbg !4694

if.end32:                                         ; preds = %land.lhs.true24.if.end32_crit_edge, %if.end
  %bf.load38 = phi i32 [ %bf.load33.pre, %land.lhs.true24.if.end32_crit_edge ], [ %bf.load, %if.end ], !dbg !4695
  %bf.clear35 = and i32 %bf.load38, 16711680, !dbg !4695
  %cmp36 = icmp eq i32 %bf.clear35, 0, !dbg !4696
  br i1 %cmp36, label %land.lhs.true46, label %lor.lhs.false, !dbg !4697

lor.lhs.false:                                    ; preds = %if.end32
  %bf.lshr39 = lshr i32 %bf.load38, 16, !dbg !4698
  %bf.clear40 = and i32 %bf.lshr39, 255, !dbg !4698
  %cmp41 = icmp eq i32 %bf.clear40, %mode, !dbg !4699
  %cmp44 = icmp eq i32 %mode, 0, !dbg !4700
  %or.cond2 = or i1 %cmp41, %cmp44, !dbg !4701
  br i1 %or.cond2, label %land.lhs.true46, label %land.end, !dbg !4701

land.lhs.true46:                                  ; preds = %lor.lhs.false, %if.end32
  %5 = load i32, i32* @flag_pic, align 4, !dbg !4702
  %tobool = icmp eq i32 %5, 0, !dbg !4702
  br i1 %tobool, label %land.rhs, label %lor.lhs.false47, !dbg !4703

lor.lhs.false47:                                  ; preds = %land.lhs.true46
  %call48 = tail call zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def* %op) #6, !dbg !4704
  %tobool50 = icmp eq i8 %call48, 0, !dbg !4704
  br i1 %tobool50, label %land.end, label %land.rhs, !dbg !4705

land.rhs:                                         ; preds = %lor.lhs.false47, %land.lhs.true46
  %call51 = tail call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %op) #6, !dbg !4706
  %tobool53 = icmp ne i8 %call51, 0, !dbg !4705
  %phitmp4 = zext i1 %tobool53 to i32
  br label %land.end

land.end:                                         ; preds = %lor.lhs.false47, %lor.lhs.false, %land.rhs
  %6 = phi i32 [ 0, %lor.lhs.false47 ], [ %phitmp4, %land.rhs ], [ 0, %lor.lhs.false ]
  br label %return, !dbg !4707

if.end54:                                         ; preds = %entry
  %cmp58 = icmp ne i32 %bf.clear2, %mode, !dbg !4708
  %cmp61 = icmp ne i32 %mode, 0, !dbg !4710
  %or.cond3 = and i1 %cmp58, %cmp61, !dbg !4711
  br i1 %or.cond3, label %return, label %if.end64, !dbg !4711

if.end64:                                         ; preds = %if.end54
  %cmp67 = icmp eq i32 %bf.clear, 39, !dbg !4712
  br i1 %cmp67, label %if.then69, label %if.end85, !dbg !4714

if.then69:                                        ; preds = %if.end64
  %7 = load i32, i32* @reload_completed, align 4, !dbg !4715
  %tobool70 = icmp eq i32 %7, 0, !dbg !4715
  br i1 %tobool70, label %land.lhs.true71, label %if.then69.if.end80_crit_edge, !dbg !4718

if.then69.if.end80_crit_edge:                     ; preds = %if.then69
  %arrayidx83.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4719
  %rt_rtx84.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx83.phi.trans.insert to %struct.rtx_def**, !dbg !4719
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84.phi.trans.insert, align 8, !dbg !4720
  br label %if.end80, !dbg !4718

land.lhs.true71:                                  ; preds = %if.then69
  %arrayidx73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4721
  %8 = bitcast %union.rtunion_def* %arrayidx73 to i32**, !dbg !4721
  %9 = load i32*, i32** %8, align 8, !dbg !4721
  %bf.load74 = load i32, i32* %9, align 8, !dbg !4721
  %bf.clear75 = and i32 %bf.load74, 65535, !dbg !4721
  %cmp76 = icmp eq i32 %bf.clear75, 43, !dbg !4721
  br i1 %cmp76, label %if.then78, label %land.lhs.true71.if.end80_crit_edge, !dbg !4722

land.lhs.true71.if.end80_crit_edge:               ; preds = %land.lhs.true71
  %10 = bitcast i32* %9 to %struct.rtx_def*, !dbg !4722
  br label %if.end80, !dbg !4722

if.then78:                                        ; preds = %land.lhs.true71
  %call79 = tail call i32 @general_operand(%struct.rtx_def* %op, i32 %mode) #7, !dbg !4723
  br label %return, !dbg !4724

if.end80:                                         ; preds = %land.lhs.true71.if.end80_crit_edge, %if.then69.if.end80_crit_edge
  %11 = phi %struct.rtx_def* [ %.pre, %if.then69.if.end80_crit_edge ], [ %10, %land.lhs.true71.if.end80_crit_edge ], !dbg !4720
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !4671, metadata !DIExpression()), !dbg !4673
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !4673
  %bf.load86.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4725
  br label %if.end85, !dbg !4726

if.end85:                                         ; preds = %if.end80, %if.end64
  %bf.load86 = phi i32 [ %bf.load86.pre, %if.end80 ], [ %bf.load, %if.end64 ], !dbg !4725
  %op.addr.0 = phi %struct.rtx_def* [ %11, %if.end80 ], [ %op, %if.end64 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op.addr.0, metadata !4671, metadata !DIExpression()), !dbg !4673
  %bf.clear87 = and i32 %bf.load86, 65535, !dbg !4725
  %cmp88 = icmp eq i32 %bf.clear87, 37, !dbg !4725
  br i1 %cmp88, label %land.rhs90, label %land.end99, !dbg !4727

land.rhs90:                                       ; preds = %if.end85
  %call91 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %op.addr.0) #7, !dbg !4728
  %cmp92 = icmp ugt i32 %call91, 52, !dbg !4729
  br i1 %cmp92, label %land.end99, label %lor.rhs, !dbg !4730

lor.rhs:                                          ; preds = %land.rhs90
  %call94 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %op.addr.0) #7, !dbg !4731
  %idxprom95 = zext i32 %call94 to i64, !dbg !4731
  %arrayidx96 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom95, !dbg !4731
  %12 = load i32, i32* %arrayidx96, align 4, !dbg !4731
  %cmp97 = icmp ne i32 %12, 0, !dbg !4732
  %phitmp = zext i1 %cmp97 to i32, !dbg !4730
  br label %land.end99, !dbg !4730

land.end99:                                       ; preds = %land.rhs90, %lor.rhs, %if.end85
  %13 = phi i32 [ 0, %if.end85 ], [ 1, %land.rhs90 ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !4733

return:                                           ; preds = %land.lhs.true10, %land.lhs.true24, %if.end54, %land.end99, %if.then78, %land.end
  %retval.0 = phi i32 [ %6, %land.end ], [ %13, %land.end99 ], [ %call79, %if.then78 ], [ 0, %land.lhs.true10 ], [ 0, %land.lhs.true24 ], [ 0, %if.end54 ], !dbg !4673
  ret i32 %retval.0, !dbg !4734
}

; Function Attrs: nounwind uwtable
define dso_local i32 @push_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4735 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4737, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4738, metadata !DIExpression()), !dbg !4740
  %idxprom = zext i32 %mode to i64, !dbg !4741
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4741
  %0 = load i8, i8* %arrayidx, align 1, !dbg !4741
  %conv1 = zext i8 %0 to i32, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %conv1, metadata !4739, metadata !DIExpression()), !dbg !4740
  %add = add nuw nsw i32 %conv1, 3, !dbg !4742
  %and = and i32 %add, 508, !dbg !4742
  call void @llvm.dbg.value(metadata i32 %and, metadata !4739, metadata !DIExpression()), !dbg !4740
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4743
  %bf.load = load i32, i32* %1, align 8, !dbg !4743
  %bf.clear = and i32 %bf.load, 65535, !dbg !4743
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !4743
  br i1 %cmp, label %if.end, label %cleanup, !dbg !4745

if.end:                                           ; preds = %entry
  %cmp3 = icmp eq i32 %mode, 0, !dbg !4746
  br i1 %cmp3, label %if.end10, label %land.lhs.true, !dbg !4748

land.lhs.true:                                    ; preds = %if.end
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4749
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !4749
  %cmp7 = icmp eq i32 %bf.clear6, %mode, !dbg !4750
  br i1 %cmp7, label %if.end10, label %cleanup, !dbg !4751

if.end10:                                         ; preds = %land.lhs.true, %if.end
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4752
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !4752
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4752
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4737, metadata !DIExpression()), !dbg !4740
  %cmp16 = icmp eq i32 %and, %conv1, !dbg !4753
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !4755
  %bf.load19 = load i32, i32* %3, align 8, !dbg !4755
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !4755
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !4756

if.then18:                                        ; preds = %if.end10
  %cmp21 = icmp eq i32 %bf.clear20, 74, !dbg !4757
  br i1 %cmp21, label %if.then18.if.end81_crit_edge, label %cleanup, !dbg !4760

if.then18.if.end81_crit_edge:                     ; preds = %if.then18
  %arrayidx84.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4740
  %rt_rtx85.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx84.phi.trans.insert to %struct.rtx_def**, !dbg !4740
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85.phi.trans.insert, align 8, !dbg !4761
  br label %if.end81, !dbg !4760

if.else:                                          ; preds = %if.end10
  %cmp27 = icmp eq i32 %bf.clear20, 78, !dbg !4762
  br i1 %cmp27, label %lor.lhs.false, label %cleanup, !dbg !4765

lor.lhs.false:                                    ; preds = %if.else
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4766
  %5 = bitcast %union.rtunion_def* %4 to i32**, !dbg !4766
  %6 = load i32*, i32** %5, align 8, !dbg !4766
  %bf.load33 = load i32, i32* %6, align 8, !dbg !4766
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !4766
  %cmp35 = icmp eq i32 %bf.clear34, 49, !dbg !4767
  br i1 %cmp35, label %lor.lhs.false37, label %cleanup, !dbg !4768

lor.lhs.false37:                                  ; preds = %lor.lhs.false
  %arrayidx44 = getelementptr inbounds i32, i32* %6, i64 2, !dbg !4769
  %rt_rtx45 = bitcast i32* %arrayidx44 to %struct.rtx_def**, !dbg !4769
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !4769
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4770
  %rt_rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !4770
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49, align 8, !dbg !4770
  %cmp50 = icmp eq %struct.rtx_def* %7, %8, !dbg !4771
  br i1 %cmp50, label %lor.lhs.false52, label %cleanup, !dbg !4772

lor.lhs.false52:                                  ; preds = %lor.lhs.false37
  %9 = getelementptr inbounds i32, i32* %6, i64 4, !dbg !4773
  %10 = bitcast i32* %9 to i32**, !dbg !4773
  %11 = load i32*, i32** %10, align 8, !dbg !4773
  %bf.load61 = load i32, i32* %11, align 8, !dbg !4773
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !4773
  %cmp63 = icmp eq i32 %bf.clear62, 30, !dbg !4773
  br i1 %cmp63, label %lor.lhs.false65, label %cleanup, !dbg !4774

lor.lhs.false65:                                  ; preds = %lor.lhs.false52
  %u74 = getelementptr inbounds i32, i32* %11, i64 2, !dbg !4775
  %arrayidx75 = bitcast i32* %u74 to i64*, !dbg !4775
  %12 = load i64, i64* %arrayidx75, align 8, !dbg !4775
  %sub = sub nsw i32 0, %and, !dbg !4776
  %conv76 = sext i32 %sub to i64, !dbg !4776
  %cmp77 = icmp eq i64 %12, %conv76, !dbg !4777
  br i1 %cmp77, label %if.end81, label %cleanup, !dbg !4778

if.end81:                                         ; preds = %if.then18.if.end81_crit_edge, %lor.lhs.false65
  %13 = phi %struct.rtx_def* [ %.pre, %if.then18.if.end81_crit_edge ], [ %7, %lor.lhs.false65 ], !dbg !4761
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !4779
  %cmp86 = icmp eq %struct.rtx_def* %13, %14, !dbg !4780
  %conv87 = zext i1 %cmp86 to i32, !dbg !4780
  br label %cleanup, !dbg !4781

cleanup:                                          ; preds = %land.lhs.true, %if.then18, %lor.lhs.false65, %lor.lhs.false37, %lor.lhs.false, %if.else, %lor.lhs.false52, %entry, %if.end81
  %retval.0 = phi i32 [ %conv87, %if.end81 ], [ 0, %entry ], [ 0, %land.lhs.true ], [ 0, %if.then18 ], [ 0, %lor.lhs.false65 ], [ 0, %lor.lhs.false52 ], [ 0, %lor.lhs.false37 ], [ 0, %lor.lhs.false ], [ 0, %if.else ], !dbg !4740
  ret i32 %retval.0, !dbg !4782
}

; Function Attrs: nounwind uwtable
define dso_local i32 @pop_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4783 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4785, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4786, metadata !DIExpression()), !dbg !4787
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4788
  %bf.load = load i32, i32* %0, align 8, !dbg !4788
  %bf.clear = and i32 %bf.load, 65535, !dbg !4788
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !4788
  br i1 %cmp, label %if.end, label %return, !dbg !4790

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i32 %mode, 0, !dbg !4791
  br i1 %cmp1, label %if.end6, label %land.lhs.true, !dbg !4793

land.lhs.true:                                    ; preds = %if.end
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4794
  %bf.clear3 = and i32 %bf.lshr, 255, !dbg !4794
  %cmp4 = icmp eq i32 %bf.clear3, %mode, !dbg !4795
  br i1 %cmp4, label %if.end6, label %return, !dbg !4796

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4797
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4797
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4797
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4785, metadata !DIExpression()), !dbg !4787
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4798
  %bf.load7 = load i32, i32* %2, align 8, !dbg !4798
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !4798
  %cmp9 = icmp eq i32 %bf.clear8, 77, !dbg !4800
  br i1 %cmp9, label %if.end11, label %return, !dbg !4801

if.end11:                                         ; preds = %if.end6
  %arrayidx14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4802
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !4802
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !4802
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !4803
  %cmp16 = icmp eq %struct.rtx_def* %3, %4, !dbg !4804
  %conv = zext i1 %cmp16 to i32, !dbg !4804
  br label %return, !dbg !4805

return:                                           ; preds = %land.lhs.true, %if.end6, %entry, %if.end11
  %retval.0 = phi i32 [ %conv, %if.end11 ], [ 0, %entry ], [ 0, %land.lhs.true ], [ 0, %if.end6 ], !dbg !4787
  ret i32 %retval.0, !dbg !4806
}

; Function Attrs: nounwind uwtable
define dso_local i32 @memory_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4807 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4809, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4810, metadata !DIExpression()), !dbg !4812
  %0 = load i32, i32* @reload_completed, align 4, !dbg !4813
  %tobool = icmp eq i32 %0, 0, !dbg !4813
  br i1 %tobool, label %if.then, label %if.end, !dbg !4815

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4816
  %bf.load = load i32, i32* %1, align 8, !dbg !4816
  %bf.clear = and i32 %bf.load, 65535, !dbg !4816
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !4816
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4817

land.rhs:                                         ; preds = %if.then
  %call = tail call i32 @general_operand(%struct.rtx_def* %op, i32 %mode) #7, !dbg !4818
  %tobool1 = icmp ne i32 %call, 0, !dbg !4817
  %phitmp = zext i1 %tobool1 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %2 = phi i32 [ 0, %if.then ], [ %phitmp, %land.rhs ]
  br label %cleanup, !dbg !4819

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %mode, 0, !dbg !4820
  br i1 %cmp2, label %if.end.if.end7_crit_edge, label %land.lhs.true, !dbg !4822

if.end.if.end7_crit_edge:                         ; preds = %if.end
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4823
  %bf.load8.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4825
  br label %if.end7, !dbg !4822

land.lhs.true:                                    ; preds = %if.end
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4826
  %bf.load3 = load i32, i32* %3, align 8, !dbg !4826
  %bf.lshr = lshr i32 %bf.load3, 16, !dbg !4826
  %bf.clear4 = and i32 %bf.lshr, 255, !dbg !4826
  %cmp5 = icmp eq i32 %bf.clear4, %mode, !dbg !4827
  br i1 %cmp5, label %if.end7, label %cleanup, !dbg !4828

if.end7:                                          ; preds = %if.end.if.end7_crit_edge, %land.lhs.true
  %bf.load8 = phi i32 [ %bf.load8.pre, %if.end.if.end7_crit_edge ], [ %bf.load3, %land.lhs.true ], !dbg !4825
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4811, metadata !DIExpression()), !dbg !4812
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !4825
  %cmp10 = icmp eq i32 %bf.clear9, 39, !dbg !4829
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4830

if.then11:                                        ; preds = %if.end7
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4831
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4831
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4831
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4811, metadata !DIExpression()), !dbg !4812
  %.phi.trans.insert3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !4812
  %bf.load13.pre = load i32, i32* %.phi.trans.insert3, align 8, !dbg !4832
  br label %if.end12, !dbg !4833

if.end12:                                         ; preds = %if.then11, %if.end7
  %bf.load13 = phi i32 [ %bf.load13.pre, %if.then11 ], [ %bf.load8, %if.end7 ], !dbg !4832
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !4832
  %cmp15 = icmp eq i32 %bf.clear14, 43, !dbg !4832
  br i1 %cmp15, label %land.rhs16, label %land.end19, !dbg !4834

land.rhs16:                                       ; preds = %if.end12
  %call17 = tail call i32 @general_operand(%struct.rtx_def* %op, i32 %mode) #7, !dbg !4835
  %tobool18 = icmp ne i32 %call17, 0, !dbg !4834
  %phitmp1 = zext i1 %tobool18 to i32
  br label %land.end19

land.end19:                                       ; preds = %land.rhs16, %if.end12
  %5 = phi i32 [ 0, %if.end12 ], [ %phitmp1, %land.rhs16 ]
  br label %cleanup, !dbg !4836

cleanup:                                          ; preds = %land.lhs.true, %land.end19, %land.end
  %retval.0 = phi i32 [ %5, %land.end19 ], [ %2, %land.end ], [ 0, %land.lhs.true ], !dbg !4812
  ret i32 %retval.0, !dbg !4837
}

; Function Attrs: nounwind uwtable
define dso_local i32 @indirect_operand(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4838 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4840, metadata !DIExpression()), !dbg !4846
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4841, metadata !DIExpression()), !dbg !4846
  %0 = load i32, i32* @reload_completed, align 4, !dbg !4847
  %tobool = icmp eq i32 %0, 0, !dbg !4847
  br i1 %tobool, label %land.lhs.true, label %entry.if.end68_crit_edge, !dbg !4848

entry.if.end68_crit_edge:                         ; preds = %entry
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4846
  %bf.load69.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4849
  br label %if.end68, !dbg !4848

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4850
  %bf.load = load i32, i32* %1, align 8, !dbg !4850
  %bf.clear = and i32 %bf.load, 65535, !dbg !4850
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !4851
  br i1 %cmp, label %land.lhs.true1, label %if.end68, !dbg !4852

land.lhs.true1:                                   ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4853
  %2 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !4853
  %3 = load i32*, i32** %2, align 8, !dbg !4853
  %bf.load2 = load i32, i32* %3, align 8, !dbg !4853
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !4853
  %cmp4 = icmp eq i32 %bf.clear3, 43, !dbg !4853
  br i1 %cmp4, label %if.then, label %if.end68, !dbg !4854

if.then:                                          ; preds = %land.lhs.true1
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4855
  %rt_uint = bitcast %union.rtunion_def* %4 to i32*, !dbg !4855
  %5 = load i32, i32* %rt_uint, align 8, !dbg !4855
  call void @llvm.dbg.value(metadata i32 %5, metadata !4842, metadata !DIExpression()), !dbg !4856
  call void @llvm.dbg.value(metadata i32* %3, metadata !4845, metadata !DIExpression()), !dbg !4856
  %cmp12 = icmp eq i32 %mode, 0, !dbg !4857
  br i1 %cmp12, label %if.end, label %land.lhs.true13, !dbg !4859

land.lhs.true13:                                  ; preds = %if.then
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4860
  %bf.clear15 = and i32 %bf.lshr, 255, !dbg !4860
  %cmp16 = icmp eq i32 %bf.clear15, %mode, !dbg !4861
  br i1 %cmp16, label %if.end, label %return, !dbg !4862

if.end:                                           ; preds = %land.lhs.true13, %if.then
  %cmp18 = icmp eq i32 %5, 0, !dbg !4863
  br i1 %cmp18, label %land.lhs.true19, label %lor.rhs, !dbg !4864

land.lhs.true19:                                  ; preds = %if.end
  %arrayidx22 = getelementptr inbounds i32, i32* %3, i64 2, !dbg !4865
  %rt_rtx23 = bitcast i32* %arrayidx22 to %struct.rtx_def**, !dbg !4865
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !4865
  %call = tail call i32 @general_operand(%struct.rtx_def* %6, i32 16) #7, !dbg !4866
  %tobool24 = icmp eq i32 %call, 0, !dbg !4866
  br i1 %tobool24, label %lor.rhs, label %lor.end, !dbg !4867

lor.rhs:                                          ; preds = %land.lhs.true19, %if.end
  %arrayidx27 = getelementptr inbounds i32, i32* %3, i64 2, !dbg !4868
  %7 = bitcast i32* %arrayidx27 to i32**, !dbg !4868
  %8 = load i32*, i32** %7, align 8, !dbg !4868
  %bf.load29 = load i32, i32* %8, align 8, !dbg !4868
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !4868
  %cmp31 = icmp eq i32 %bf.clear30, 49, !dbg !4869
  br i1 %cmp31, label %land.lhs.true32, label %lor.end, !dbg !4870

land.lhs.true32:                                  ; preds = %lor.rhs
  %9 = getelementptr inbounds i32, i32* %8, i64 4, !dbg !4871
  %10 = bitcast i32* %9 to i32**, !dbg !4871
  %11 = load i32*, i32** %10, align 8, !dbg !4871
  %bf.load41 = load i32, i32* %11, align 8, !dbg !4871
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !4871
  %cmp43 = icmp eq i32 %bf.clear42, 30, !dbg !4871
  br i1 %cmp43, label %land.lhs.true44, label %lor.end, !dbg !4872

land.lhs.true44:                                  ; preds = %land.lhs.true32
  %u53 = getelementptr inbounds i32, i32* %11, i64 2, !dbg !4873
  %arrayidx54 = bitcast i32* %u53 to i64*, !dbg !4873
  %12 = load i64, i64* %arrayidx54, align 8, !dbg !4873
  %sub = sub nsw i32 0, %5, !dbg !4874
  %conv = sext i32 %sub to i64, !dbg !4874
  %cmp55 = icmp eq i64 %12, %conv, !dbg !4875
  br i1 %cmp55, label %land.rhs, label %lor.end, !dbg !4876

land.rhs:                                         ; preds = %land.lhs.true44
  %arrayidx63 = getelementptr inbounds i32, i32* %8, i64 2, !dbg !4877
  %rt_rtx64 = bitcast i32* %arrayidx63 to %struct.rtx_def**, !dbg !4877
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx64, align 8, !dbg !4877
  %call65 = tail call i32 @general_operand(%struct.rtx_def* %13, i32 16) #7, !dbg !4878
  %tobool66 = icmp ne i32 %call65, 0, !dbg !4876
  %phitmp1 = zext i1 %tobool66 to i32
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true19, %lor.rhs, %land.lhs.true32, %land.lhs.true44, %land.rhs
  %14 = phi i32 [ 1, %land.lhs.true19 ], [ 0, %land.lhs.true44 ], [ 0, %land.lhs.true32 ], [ 0, %lor.rhs ], [ %phitmp1, %land.rhs ]
  br label %return, !dbg !4879

if.end68:                                         ; preds = %entry.if.end68_crit_edge, %land.lhs.true1, %land.lhs.true
  %bf.load69 = phi i32 [ %bf.load69.pre, %entry.if.end68_crit_edge ], [ %bf.load, %land.lhs.true1 ], [ %bf.load, %land.lhs.true ], !dbg !4849
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !4849
  %cmp71 = icmp eq i32 %bf.clear70, 43, !dbg !4849
  br i1 %cmp71, label %land.lhs.true73, label %land.end83, !dbg !4880

land.lhs.true73:                                  ; preds = %if.end68
  %call74 = tail call i32 @memory_operand(%struct.rtx_def* %op, i32 %mode) #7, !dbg !4881
  %tobool75 = icmp eq i32 %call74, 0, !dbg !4881
  br i1 %tobool75, label %land.end83, label %land.rhs76, !dbg !4882

land.rhs76:                                       ; preds = %land.lhs.true73
  %arrayidx79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4883
  %rt_rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**, !dbg !4883
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx80, align 8, !dbg !4883
  %call81 = tail call i32 @general_operand(%struct.rtx_def* %15, i32 16) #7, !dbg !4884
  %tobool82 = icmp ne i32 %call81, 0, !dbg !4882
  %phitmp = zext i1 %tobool82 to i32
  br label %land.end83

land.end83:                                       ; preds = %land.lhs.true73, %land.rhs76, %if.end68
  %16 = phi i32 [ 0, %land.lhs.true73 ], [ 0, %if.end68 ], [ %phitmp, %land.rhs76 ]
  br label %return, !dbg !4885

return:                                           ; preds = %land.lhs.true13, %lor.end, %land.end83
  %retval.1 = phi i32 [ %16, %land.end83 ], [ %14, %lor.end ], [ 0, %land.lhs.true13 ], !dbg !4846
  ret i32 %retval.1, !dbg !4886
}

; Function Attrs: nounwind uwtable
define dso_local i32 @ordered_comparison_operator(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4887 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4889, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4890, metadata !DIExpression()), !dbg !4891
  %cmp = icmp eq i32 %mode, 0, !dbg !4892
  br i1 %cmp, label %entry.if.end_crit_edge, label %land.lhs.true, !dbg !4894

entry.if.end_crit_edge:                           ; preds = %entry
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4891
  %bf.load2.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4895
  br label %if.end, !dbg !4894

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4896
  %bf.load = load i32, i32* %0, align 8, !dbg !4896
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4896
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4896
  %cmp1 = icmp eq i32 %bf.clear, %mode, !dbg !4897
  br i1 %cmp1, label %if.end, label %return, !dbg !4898

if.end:                                           ; preds = %entry.if.end_crit_edge, %land.lhs.true
  %bf.load2 = phi i32 [ %bf.load2.pre, %entry.if.end_crit_edge ], [ %bf.load, %land.lhs.true ], !dbg !4895
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !4895
  %bf.clear3.off = add nsw i32 %bf.clear3, -80, !dbg !4899
  %switch = icmp ult i32 %bf.clear3.off, 10, !dbg !4899
  %. = zext i1 %switch to i32, !dbg !4900
  br label %return, !dbg !4900

return:                                           ; preds = %land.lhs.true, %if.end
  %retval.0 = phi i32 [ 0, %land.lhs.true ], [ %., %if.end ], !dbg !4891
  ret i32 %retval.0, !dbg !4902
}

; Function Attrs: nounwind uwtable
define dso_local i32 @comparison_operator(%struct.rtx_def* %op, i32 %mode) local_unnamed_addr #5 !dbg !4903 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4905, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4906, metadata !DIExpression()), !dbg !4907
  %cmp = icmp eq i32 %mode, 0, !dbg !4908
  br i1 %cmp, label %entry.land.rhs_crit_edge, label %lor.lhs.false, !dbg !4909

entry.land.rhs_crit_edge:                         ; preds = %entry
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4907
  %bf.load2.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4910
  br label %land.rhs, !dbg !4909

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4911
  %bf.load = load i32, i32* %0, align 8, !dbg !4911
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4911
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4911
  %cmp1 = icmp eq i32 %bf.clear, %mode, !dbg !4912
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !4913

land.rhs:                                         ; preds = %entry.land.rhs_crit_edge, %lor.lhs.false
  %bf.load2 = phi i32 [ %bf.load2.pre, %entry.land.rhs_crit_edge ], [ %bf.load, %lor.lhs.false ], !dbg !4910
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !4910
  %idxprom = zext i32 %bf.clear3 to i64, !dbg !4910
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4910
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4910
  %cmp4 = icmp ult i32 %1, 2, !dbg !4910
  %phitmp = zext i1 %cmp4 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %2 = phi i32 [ 0, %lor.lhs.false ], [ %phitmp, %land.rhs ]
  ret i32 %2, !dbg !4914
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @extract_asm_operands(%struct.rtx_def* %body) local_unnamed_addr #5 !dbg !4915 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body, metadata !4919, metadata !DIExpression()), !dbg !4921
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 0, !dbg !4922
  %bf.load = load i32, i32* %0, align 8, !dbg !4922
  %trunc = trunc i32 %bf.load to i16, !dbg !4923
  switch i16 %trunc, label %sw.epilog [
    i16 17, label %cleanup
    i16 23, label %sw.bb1
    i16 15, label %sw.bb4
  ], !dbg !4923

sw.bb1:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4924
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4924
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4924
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4920, metadata !DIExpression()), !dbg !4921
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !4926
  %bf.load2 = load i32, i32* %3, align 8, !dbg !4926
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !4926
  %cmp = icmp eq i32 %bf.clear3, 17, !dbg !4928
  br i1 %cmp, label %cleanup, label %sw.epilog, !dbg !4929

sw.bb4:                                           ; preds = %entry
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4930
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtvec_def**, !dbg !4930
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4930
  %arrayidx8 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 1, i64 0, !dbg !4930
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx8, align 8, !dbg !4930
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !4920, metadata !DIExpression()), !dbg !4921
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !4931
  %bf.load9 = load i32, i32* %6, align 8, !dbg !4931
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !4931
  %cmp11 = icmp eq i32 %bf.clear10, 17, !dbg !4933
  br i1 %cmp11, label %cleanup, label %if.end13, !dbg !4934

if.end13:                                         ; preds = %sw.bb4
  %cmp16 = icmp eq i32 %bf.clear10, 23, !dbg !4935
  br i1 %cmp16, label %if.then17, label %sw.epilog, !dbg !4937

if.then17:                                        ; preds = %if.end13
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4938
  %rt_rtx21 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !4938
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !4938
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !4920, metadata !DIExpression()), !dbg !4921
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 0, !dbg !4940
  %bf.load22 = load i32, i32* %9, align 8, !dbg !4940
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !4940
  %cmp24 = icmp eq i32 %bf.clear23, 17, !dbg !4942
  br i1 %cmp24, label %cleanup, label %sw.epilog, !dbg !4943

sw.epilog:                                        ; preds = %entry, %if.end13, %if.then17, %sw.bb1
  br label %cleanup, !dbg !4944

cleanup:                                          ; preds = %if.then17, %sw.bb4, %sw.bb1, %entry, %sw.epilog
  %retval.0 = phi %struct.rtx_def* [ null, %sw.epilog ], [ %body, %entry ], [ %2, %sw.bb1 ], [ %5, %sw.bb4 ], [ %8, %if.then17 ], !dbg !4921
  ret %struct.rtx_def* %retval.0, !dbg !4945
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local i64 @strtoul(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @offsettable_nonstrict_memref_p(%struct.rtx_def* %op) local_unnamed_addr #5 !dbg !4946 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !4948, metadata !DIExpression()), !dbg !4949
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !4950
  %bf.load = load i32, i32* %0, align 8, !dbg !4950
  %bf.clear = and i32 %bf.load, 65535, !dbg !4950
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !4950
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4951

land.rhs:                                         ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4952
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !4952
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4953
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4953
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4953
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4954
  %rt_mem = bitcast %union.rtunion_def* %2 to %struct.mem_attrs**, !dbg !4954
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4954
  %cmp6 = icmp eq %struct.mem_attrs* %3, null, !dbg !4954
  br i1 %cmp6, label %cond.end, label %cond.false, !dbg !4954

cond.false:                                       ; preds = %land.rhs
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i64 0, i32 5, !dbg !4954
  %4 = load i8, i8* %addrspace, align 8, !dbg !4954
  br label %cond.end, !dbg !4954

cond.end:                                         ; preds = %land.rhs, %cond.false
  %cond = phi i8 [ %4, %cond.false ], [ 0, %land.rhs ]
  %call = tail call i32 @offsettable_address_addr_space_p(i32 0, i32 %bf.clear2, %struct.rtx_def* %1, i8 zeroext %cond) #7, !dbg !4955
  %tobool = icmp ne i32 %call, 0, !dbg !4951
  %phitmp = zext i1 %tobool to i32
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %5 = phi i32 [ 0, %entry ], [ %phitmp, %cond.end ]
  ret i32 %5, !dbg !4956
}

declare dso_local zeroext i8 @constraint_satisfied_p(%struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local i32 @lookup_constraint(i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @insn_const_int_ok_for_constraint(i64, i32) local_unnamed_addr #2

declare dso_local i32 @regclass_for_constraint(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i64 @insn_constraint_len(i8 signext %fc, i8* %str) unnamed_addr #0 !dbg !4957 {
entry:
  call void @llvm.dbg.value(metadata i8 %fc, metadata !4962, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.value(metadata i8* %str, metadata !4963, metadata !DIExpression()), !dbg !4964
  %cond = icmp eq i8 %fc, 89, !dbg !4965
  %retval.0 = select i1 %cond, i64 2, i64 1, !dbg !4965
  ret i64 %retval.0, !dbg !4966
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def** @find_constant_term_loc(%struct.rtx_def** %p) local_unnamed_addr #5 !dbg !4967 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %p, metadata !4971, metadata !DIExpression()), !dbg !4974
  %0 = bitcast %struct.rtx_def** %p to i32**, !dbg !4975
  %1 = load i32*, i32** %0, align 8, !dbg !4975
  %bf.load = load i32, i32* %1, align 8, !dbg !4975
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !4973, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !4974
  %trunc = trunc i32 %bf.load to i16, !dbg !4976
  %2 = bitcast i32* %1 to %struct.rtx_def*, !dbg !4976
  switch i16 %trunc, label %if.end [
    i16 30, label %cleanup
    i16 45, label %cleanup
    i16 44, label %cleanup
    i16 35, label %cleanup
  ], !dbg !4976

if.end:                                           ; preds = %entry
  %bf.clear7 = and i32 %bf.load, 65535, !dbg !4978
  %cmp8 = icmp eq i32 %bf.clear7, 49, !dbg !4980
  br i1 %cmp8, label %if.end10, label %cleanup, !dbg !4981

if.end10:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 2, !dbg !4982
  %rt_rtx = bitcast i32* %arrayidx to %struct.rtx_def**, !dbg !4982
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4982
  %tobool = icmp eq %struct.rtx_def* %3, null, !dbg !4982
  br i1 %tobool, label %if.end36, label %land.lhs.true, !dbg !4984

land.lhs.true:                                    ; preds = %if.end10
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !4984
  %bf.load15 = load i32, i32* %4, align 8, !dbg !4985
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !4985
  %idxprom = zext i32 %bf.clear16 to i64, !dbg !4985
  %arrayidx17 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4985
  %5 = load i32, i32* %arrayidx17, align 4, !dbg !4985
  %cmp18 = icmp eq i32 %5, 9, !dbg !4985
  br i1 %cmp18, label %land.lhs.true19, label %if.end36, !dbg !4986

land.lhs.true19:                                  ; preds = %land.lhs.true
  %6 = getelementptr inbounds i32, i32* %1, i64 4, !dbg !4987
  %rt_rtx23 = bitcast i32* %6 to %struct.rtx_def**, !dbg !4987
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !4987
  %tobool24 = icmp eq %struct.rtx_def* %7, null, !dbg !4987
  br i1 %tobool24, label %if.end36, label %land.lhs.true25, !dbg !4988

land.lhs.true25:                                  ; preds = %land.lhs.true19
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !4988
  %bf.load30 = load i32, i32* %8, align 8, !dbg !4989
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !4989
  %idxprom32 = zext i32 %bf.clear31 to i64, !dbg !4989
  %arrayidx33 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom32, !dbg !4989
  %9 = load i32, i32* %arrayidx33, align 4, !dbg !4989
  %cmp34 = icmp eq i32 %9, 9, !dbg !4989
  br i1 %cmp34, label %cleanup, label %if.end36, !dbg !4990

if.end36:                                         ; preds = %land.lhs.true19, %if.end10, %land.lhs.true25, %land.lhs.true
  br i1 %tobool, label %if.end50, label %if.then42, !dbg !4991

if.then42:                                        ; preds = %if.end36
  %call = tail call %struct.rtx_def** @find_constant_term_loc(%struct.rtx_def** nonnull %rt_rtx) #7, !dbg !4992
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call, metadata !4972, metadata !DIExpression()), !dbg !4974
  %cmp47 = icmp eq %struct.rtx_def** %call, null, !dbg !4995
  br i1 %cmp47, label %if.then42.if.end50_crit_edge, label %cleanup, !dbg !4997

if.then42.if.end50_crit_edge:                     ; preds = %if.then42
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4998
  br label %if.end50, !dbg !4997

if.end50:                                         ; preds = %if.then42.if.end50_crit_edge, %if.end36
  %10 = phi %struct.rtx_def* [ %.pre, %if.then42.if.end50_crit_edge ], [ %2, %if.end36 ]
  %11 = phi %struct.rtx_def* [ %.pre, %if.then42.if.end50_crit_edge ], [ %2, %if.end36 ], !dbg !4998
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4998
  %rt_rtx54 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !4998
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !4998
  %cmp55 = icmp eq %struct.rtx_def* %13, null, !dbg !5000
  br i1 %cmp55, label %if.end65, label %if.then56, !dbg !5001

if.then56:                                        ; preds = %if.end50
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5002
  %rt_rtx60 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !5002
  %call61 = tail call %struct.rtx_def** @find_constant_term_loc(%struct.rtx_def** nonnull %rt_rtx60) #7, !dbg !5004
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call61, metadata !4972, metadata !DIExpression()), !dbg !4974
  %cmp62 = icmp eq %struct.rtx_def** %call61, null, !dbg !5005
  br i1 %cmp62, label %if.end65, label %cleanup, !dbg !5007

if.end65:                                         ; preds = %if.then56, %if.end50
  br label %cleanup, !dbg !5008

cleanup:                                          ; preds = %if.then42, %if.then56, %if.end, %land.lhs.true25, %entry, %entry, %entry, %entry, %if.end65
  %retval.0 = phi %struct.rtx_def** [ null, %if.end65 ], [ %p, %entry ], [ %p, %entry ], [ %p, %entry ], [ %p, %entry ], [ null, %if.end ], [ %p, %land.lhs.true25 ], [ %call, %if.then42 ], [ %call61, %if.then56 ], !dbg !4974
  ret %struct.rtx_def** %retval.0, !dbg !5009
}

; Function Attrs: nounwind uwtable
define dso_local i32 @offsettable_memref_p(%struct.rtx_def* %op) local_unnamed_addr #5 !dbg !5010 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !5012, metadata !DIExpression()), !dbg !5013
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !5014
  %bf.load = load i32, i32* %0, align 8, !dbg !5014
  %bf.clear = and i32 %bf.load, 65535, !dbg !5014
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !5014
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5015

land.rhs:                                         ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5016
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !5016
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5017
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5017
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5017
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5018
  %rt_mem = bitcast %union.rtunion_def* %2 to %struct.mem_attrs**, !dbg !5018
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5018
  %cmp6 = icmp eq %struct.mem_attrs* %3, null, !dbg !5018
  br i1 %cmp6, label %cond.end, label %cond.false, !dbg !5018

cond.false:                                       ; preds = %land.rhs
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i64 0, i32 5, !dbg !5018
  %4 = load i8, i8* %addrspace, align 8, !dbg !5018
  br label %cond.end, !dbg !5018

cond.end:                                         ; preds = %land.rhs, %cond.false
  %cond = phi i8 [ %4, %cond.false ], [ 0, %land.rhs ]
  %call = tail call i32 @offsettable_address_addr_space_p(i32 1, i32 %bf.clear2, %struct.rtx_def* %1, i8 zeroext %cond) #7, !dbg !5019
  %tobool = icmp ne i32 %call, 0, !dbg !5015
  %phitmp = zext i1 %tobool to i32
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %5 = phi i32 [ 0, %entry ], [ %phitmp, %cond.end ]
  ret i32 %5, !dbg !5020
}

; Function Attrs: nounwind uwtable
define dso_local i32 @offsettable_address_addr_space_p(i32 %strictp, i32 %mode, %struct.rtx_def* %y, i8 zeroext %as) local_unnamed_addr #5 !dbg !5021 {
entry:
  %y1 = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata i32 %strictp, metadata !5025, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5026, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !5027, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i8 %as, metadata !5028, metadata !DIExpression()), !dbg !5039
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !5040
  %bf.load = load i32, i32* %0, align 8, !dbg !5040
  %bf.clear = and i32 %bf.load, 65535, !dbg !5040
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5029, metadata !DIExpression()), !dbg !5039
  %1 = bitcast %struct.rtx_def** %y1 to i8*, !dbg !5041
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5041
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !5031, metadata !DIExpression()), !dbg !5039
  store %struct.rtx_def* %y, %struct.rtx_def** %y1, align 8, !dbg !5042
  %tobool = icmp eq i32 %strictp, 0, !dbg !5043
  %cond = select i1 %tobool, i32 (i32, %struct.rtx_def*, i8)* @memory_address_addr_space_p, i32 (i32, %struct.rtx_def*, i8)* @strict_memory_address_addr_space_p, !dbg !5043
  call void @llvm.dbg.value(metadata i32 (i32, %struct.rtx_def*, i8)* %cond, metadata !5033, metadata !DIExpression()), !dbg !5039
  %idxprom = zext i32 %mode to i64, !dbg !5044
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5044
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5044
  %conv1 = zext i8 %2 to i32, !dbg !5044
  call void @llvm.dbg.value(metadata i32 %conv1, metadata !5035, metadata !DIExpression()), !dbg !5039
  %call = tail call zeroext i8 @constant_address_p(%struct.rtx_def* %y) #6, !dbg !5045
  %tobool2 = icmp eq i8 %call, 0, !dbg !5045
  br i1 %tobool2, label %if.end, label %cleanup, !dbg !5047

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @mode_dependent_address_p(%struct.rtx_def* %y) #7, !dbg !5048
  %tobool4 = icmp eq i32 %call3, 0, !dbg !5048
  br i1 %tobool4, label %if.end6, label %cleanup, !dbg !5050

if.end6:                                          ; preds = %if.end
  %cmp = icmp eq i8 %2, 0, !dbg !5051
  br i1 %cmp, label %if.then8, label %if.end12, !dbg !5053

if.then8:                                         ; preds = %if.end6
  %3 = load i32, i32* @ix86_isa_flags, align 4, !dbg !5054
  %and = and i32 %3, 32, !dbg !5054
  %cmp9 = icmp eq i32 %and, 0, !dbg !5054
  %div = select i1 %cmp9, i32 16, i32 32, !dbg !5055
  call void @llvm.dbg.value(metadata i32 %div, metadata !5035, metadata !DIExpression()), !dbg !5039
  br label %if.end12, !dbg !5056

if.end12:                                         ; preds = %if.then8, %if.end6
  %mode_sz.0 = phi i32 [ %div, %if.then8 ], [ %conv1, %if.end6 ], !dbg !5039
  call void @llvm.dbg.value(metadata i32 %mode_sz.0, metadata !5035, metadata !DIExpression()), !dbg !5039
  %cmp13 = icmp eq i32 %bf.clear, 49, !dbg !5057
  br i1 %cmp13, label %land.lhs.true, label %if.end21, !dbg !5058

land.lhs.true:                                    ; preds = %if.end12
  call void @llvm.dbg.value(metadata %struct.rtx_def** %y1, metadata !5031, metadata !DIExpression(DW_OP_deref)), !dbg !5039
  %call15 = call %struct.rtx_def** @find_constant_term_loc(%struct.rtx_def** nonnull %y1) #7, !dbg !5059
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call15, metadata !5032, metadata !DIExpression()), !dbg !5039
  %tobool16 = icmp eq %struct.rtx_def** %call15, null, !dbg !5060
  br i1 %tobool16, label %if.end21, label %if.then17, !dbg !5061

if.then17:                                        ; preds = %land.lhs.true
  %4 = bitcast %struct.rtx_def** %call15 to i64*, !dbg !5062
  %5 = load i64, i64* %4, align 8, !dbg !5062
  %6 = bitcast %struct.rtx_def** %y1 to i64*, !dbg !5063
  store i64 %5, i64* %6, align 8, !dbg !5063
  %7 = load %struct.rtx_def*, %struct.rtx_def** %call15, align 8, !dbg !5064
  %sub = add nsw i32 %mode_sz.0, -1, !dbg !5065
  %conv18 = zext i32 %sub to i64, !dbg !5066
  %call19 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %7, i64 %conv18) #6, !dbg !5067
  store %struct.rtx_def* %call19, %struct.rtx_def** %call15, align 8, !dbg !5068
  %call20 = call i32 %cond(i32 14, %struct.rtx_def* %y, i8 zeroext %as) #6, !dbg !5069
  call void @llvm.dbg.value(metadata i32 %call20, metadata !5036, metadata !DIExpression()), !dbg !5070
  %8 = load i64, i64* %6, align 8, !dbg !5071
  store i64 %8, i64* %4, align 8, !dbg !5072
  br label %cleanup

if.end21:                                         ; preds = %land.lhs.true, %if.end12
  %idxprom22 = zext i32 %bf.clear to i64, !dbg !5073
  %arrayidx23 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom22, !dbg !5073
  %9 = load i32, i32* %arrayidx23, align 4, !dbg !5073
  %cmp24 = icmp eq i32 %9, 12, !dbg !5075
  br i1 %cmp24, label %cleanup, label %if.end27, !dbg !5076

if.end27:                                         ; preds = %if.end21
  %bf.load28 = load i32, i32* %0, align 8, !dbg !5077
  %bf.clear29 = and i32 %bf.load28, 65535, !dbg !5077
  %cmp30 = icmp eq i32 %bf.clear29, 122, !dbg !5079
  %cmp33 = icmp ne i32 %mode, 1, !dbg !5080
  %or.cond = and i1 %cmp30, %cmp33, !dbg !5081
  br i1 %or.cond, label %land.lhs.true35, label %if.else, !dbg !5081

land.lhs.true35:                                  ; preds = %if.end27
  %call36 = call i32 @get_mode_alignment(i32 %mode) #6, !dbg !5082
  %div37 = lshr i32 %call36, 3, !dbg !5083
  %cmp38 = icmp ugt i32 %mode_sz.0, %div37, !dbg !5084
  br i1 %cmp38, label %if.else, label %if.then40, !dbg !5085

if.then40:                                        ; preds = %land.lhs.true35
  %bf.load41 = load i32, i32* %0, align 8, !dbg !5086
  %bf.lshr = lshr i32 %bf.load41, 16, !dbg !5086
  %bf.clear42 = and i32 %bf.lshr, 255, !dbg !5086
  %arrayidx43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5086
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !5086
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5086
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5086
  %rt_rtx47 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !5086
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !5086
  %sub48 = add nsw i32 %mode_sz.0, -1, !dbg !5086
  %conv49 = zext i32 %sub48 to i64, !dbg !5086
  %call50 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %12, i64 %conv49) #6, !dbg !5086
  %call51 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 122, i32 %bf.clear42, %struct.rtx_def* %10, %struct.rtx_def* %call50) #6, !dbg !5086
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call51, metadata !5030, metadata !DIExpression()), !dbg !5039
  br label %if.end55, !dbg !5087

if.else:                                          ; preds = %land.lhs.true35, %if.end27
  %sub52 = add nsw i32 %mode_sz.0, -1, !dbg !5088
  %conv53 = zext i32 %sub52 to i64, !dbg !5089
  %call54 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %y, i64 %conv53) #6, !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call54, metadata !5030, metadata !DIExpression()), !dbg !5039
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then40
  %z.0 = phi %struct.rtx_def* [ %call51, %if.then40 ], [ %call54, %if.else ], !dbg !5091
  call void @llvm.dbg.value(metadata %struct.rtx_def* %z.0, metadata !5030, metadata !DIExpression()), !dbg !5039
  %call56 = call i32 %cond(i32 14, %struct.rtx_def* %z.0, i8 zeroext %as) #6, !dbg !5092
  br label %cleanup, !dbg !5093

cleanup:                                          ; preds = %if.end, %entry, %if.end21, %if.end55, %if.then17
  %retval.0 = phi i32 [ %call20, %if.then17 ], [ %call56, %if.end55 ], [ 1, %entry ], [ 0, %if.end ], [ 0, %if.end21 ], !dbg !5039
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5094
  ret i32 %retval.0, !dbg !5094
}

declare dso_local i32 @strict_memory_address_addr_space_p(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @constant_address_p(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @mode_dependent_address_p(%struct.rtx_def* %addr) local_unnamed_addr #5 !dbg !5095 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !5097, metadata !DIExpression()), !dbg !5099
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr, i64 0, i32 0, !dbg !5100
  %bf.load = load i32, i32* %0, align 8, !dbg !5100
  %bf.clear = and i32 %bf.load, 65535, !dbg !5100
  %cmp = icmp eq i32 %bf.clear, 75, !dbg !5102
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !5103

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 77, !dbg !5104
  br i1 %cmp3, label %return, label %lor.lhs.false4, !dbg !5105

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 74, !dbg !5106
  br i1 %cmp7, label %return, label %lor.lhs.false8, !dbg !5107

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 76, !dbg !5108
  %spec.select = zext i1 %cmp11 to i32, !dbg !5109
  ret i32 %spec.select, !dbg !5109

return:                                           ; preds = %entry, %lor.lhs.false, %lor.lhs.false4
  ret i32 1, !dbg !5110
}

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) local_unnamed_addr #2

declare dso_local i32 @get_mode_alignment(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind uwtable
define dso_local void @extract_insn_cached(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5111 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5113, metadata !DIExpression()), !dbg !5114
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 11), align 8, !dbg !5115
  %cmp = icmp eq %struct.rtx_def* %0, %insn, !dbg !5117
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5118

land.lhs.true:                                    ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5119
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !5119
  %rt_int = bitcast %union.rtunion_def* %1 to i32*, !dbg !5119
  %2 = load i32, i32* %rt_int, align 8, !dbg !5119
  %cmp1 = icmp sgt i32 %2, -1, !dbg !5120
  br i1 %cmp1, label %return, label %if.end, !dbg !5121

if.end:                                           ; preds = %land.lhs.true, %entry
  tail call void @extract_insn(%struct.rtx_def* %insn) #7, !dbg !5122
  store %struct.rtx_def* %insn, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 11), align 8, !dbg !5123
  br label %return, !dbg !5124

return:                                           ; preds = %land.lhs.true, %if.end
  ret void, !dbg !5124
}

; Function Attrs: nounwind uwtable
define dso_local void @extract_constrain_insn_cached(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5125 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5127, metadata !DIExpression()), !dbg !5128
  tail call void @extract_insn_cached(%struct.rtx_def* %insn) #7, !dbg !5129
  %0 = load i32, i32* @which_alternative, align 4, !dbg !5130
  %cmp = icmp eq i32 %0, -1, !dbg !5132
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5133

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @reload_completed, align 4, !dbg !5134
  %call = tail call i32 @constrain_operands(i32 %1) #7, !dbg !5135
  %tobool = icmp eq i32 %call, 0, !dbg !5135
  br i1 %tobool, label %if.then, label %if.end, !dbg !5136

if.then:                                          ; preds = %land.lhs.true
  tail call void @_fatal_insn_not_found(%struct.rtx_def* %insn, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2021, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5137
  br label %if.end, !dbg !5137

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  ret void, !dbg !5138
}

declare dso_local void @_fatal_insn_not_found(%struct.rtx_def*, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @constrain_operands_cached(i32 %strict) local_unnamed_addr #5 !dbg !5139 {
entry:
  call void @llvm.dbg.value(metadata i32 %strict, metadata !5141, metadata !DIExpression()), !dbg !5142
  %0 = load i32, i32* @which_alternative, align 4, !dbg !5143
  %cmp = icmp eq i32 %0, -1, !dbg !5145
  br i1 %cmp, label %if.then, label %return, !dbg !5146

if.then:                                          ; preds = %entry
  %call = tail call i32 @constrain_operands(i32 %strict) #7, !dbg !5147
  br label %return, !dbg !5148

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ 1, %entry ], !dbg !5149
  ret i32 %retval.0, !dbg !5150
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @recog_memoized(%struct.rtx_def* %insn) unnamed_addr #0 !dbg !5151 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5153, metadata !DIExpression()), !dbg !5154
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5155
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !5155
  %rt_int = bitcast %union.rtunion_def* %0 to i32*, !dbg !5155
  %1 = load i32, i32* %rt_int, align 8, !dbg !5155
  %cmp = icmp slt i32 %1, 0, !dbg !5157
  br i1 %cmp, label %if.then, label %if.end, !dbg !5158

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5159
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5159
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5159
  %call = tail call i32 @recog(%struct.rtx_def* %3, %struct.rtx_def* %insn, i32* null) #6, !dbg !5160
  store i32 %call, i32* %rt_int, align 8, !dbg !5161
  br label %if.end, !dbg !5162

if.end:                                           ; preds = %if.then, %entry
  %4 = phi i32 [ %call, %if.then ], [ %1, %entry ], !dbg !5163
  ret i32 %4, !dbg !5164
}

declare dso_local void @insn_extract(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @get_attr_enabled(%struct.rtx_def* %insn) unnamed_addr #0 !dbg !5165 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5167, metadata !DIExpression()), !dbg !5168
  ret i8 undef, !dbg !5169
}

; Function Attrs: nounwind uwtable
define dso_local void @preprocess_constraints() local_unnamed_addr #5 !dbg !5170 {
entry:
  %end = alloca i8*, align 8
  call void @llvm.dbg.value(metadata i32 0, metadata !5172, metadata !DIExpression()), !dbg !5190
  br label %for.cond, !dbg !5191

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.body ], [ 0, %entry ], !dbg !5193
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !5172, metadata !DIExpression()), !dbg !5190
  %0 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !5194
  %1 = sext i8 %0 to i64, !dbg !5196
  %cmp = icmp slt i64 %indvars.iv5, %1, !dbg !5196
  br i1 %cmp, label %for.body, label %for.cond3.preheader, !dbg !5197

for.cond3.preheader:                              ; preds = %for.cond
  %.lcssa7 = phi i8 [ %0, %for.cond ], !dbg !5194
  %2 = bitcast i8** %end to i8*, !dbg !5198
  br label %for.cond3, !dbg !5199

for.body:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv5, i64 0, !dbg !5200
  %3 = bitcast %struct.operand_alternative* %arraydecay to i8*, !dbg !5200
  %4 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 9), align 8, !dbg !5201
  %conv2 = sext i8 %4 to i64, !dbg !5202
  %mul = shl nsw i64 %conv2, 5, !dbg !5203
  %call = tail call i8* @memset(i8* nonnull %3, i32 0, i64 %mul) #6, !dbg !5204
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !5205
  call void @llvm.dbg.value(metadata i32 undef, metadata !5172, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5190
  br label %for.cond, !dbg !5206, !llvm.loop !5207

for.cond3:                                        ; preds = %for.cond3.preheader, %for.inc171
  %indvars.iv3 = phi i64 [ 0, %for.cond3.preheader ], [ %indvars.iv.next4, %for.inc171 ], !dbg !5209
  %5 = phi i8 [ %.lcssa7, %for.cond3.preheader ], [ %.pre, %for.inc171 ], !dbg !5209
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !5172, metadata !DIExpression()), !dbg !5190
  %6 = sext i8 %5 to i64, !dbg !5210
  %cmp5 = icmp slt i64 %indvars.iv3, %6, !dbg !5210
  br i1 %cmp5, label %for.body7, label %for.end173, !dbg !5199

for.body7:                                        ; preds = %for.cond3
  %arrayidx9 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 2, i64 %indvars.iv3, !dbg !5211
  %7 = load i8*, i8** %arrayidx9, align 8, !dbg !5211
  call void @llvm.dbg.value(metadata i8* %7, metadata !5179, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i32 0, metadata !5173, metadata !DIExpression()), !dbg !5212
  br label %for.cond13, !dbg !5213

for.cond13:                                       ; preds = %for.inc168, %for.body7
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc168 ], [ 0, %for.body7 ], !dbg !5214
  %p.0 = phi i8* [ %p.5, %for.inc168 ], [ %7, %for.body7 ], !dbg !5214
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5173, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !5179, metadata !DIExpression()), !dbg !5212
  %8 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 9), align 8, !dbg !5215
  %9 = sext i8 %8 to i64, !dbg !5216
  %cmp15 = icmp slt i64 %indvars.iv, %9, !dbg !5216
  br i1 %cmp15, label %for.body17, label %for.inc171, !dbg !5217

for.body17:                                       ; preds = %for.cond13
  %cl = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv3, i64 %indvars.iv, i32 1, !dbg !5218
  store i32 0, i32* %cl, align 8, !dbg !5219
  %constraint = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv3, i64 %indvars.iv, i32 0, !dbg !5220
  store i8* %p.0, i8** %constraint, align 16, !dbg !5221
  %matches = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv3, i64 %indvars.iv, i32 3, !dbg !5222
  store i32 -1, i32* %matches, align 16, !dbg !5223
  %matched = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv3, i64 %indvars.iv, i32 4, !dbg !5224
  store i32 -1, i32* %matched, align 4, !dbg !5225
  %arrayidx27 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 10, i64 %indvars.iv, !dbg !5226
  %10 = load i8, i8* %arrayidx27, align 1, !dbg !5226
  %tobool = icmp eq i8 %10, 0, !dbg !5226
  br i1 %tobool, label %if.then, label %if.end, !dbg !5228

if.then:                                          ; preds = %for.body17
  %call28 = call fastcc i8* @skip_alternative(i8* %p.0) #7, !dbg !5229
  call void @llvm.dbg.value(metadata i8* %call28, metadata !5179, metadata !DIExpression()), !dbg !5212
  br label %for.inc168, !dbg !5231

if.end:                                           ; preds = %for.body17
  %11 = load i8, i8* %p.0, align 1, !dbg !5232
  %cmp30 = icmp eq i8 %11, 0, !dbg !5234
  br i1 %cmp30, label %if.then35, label %lor.lhs.false, !dbg !5235

lor.lhs.false:                                    ; preds = %if.end
  %cmp33 = icmp eq i8 %11, 44, !dbg !5236
  br i1 %cmp33, label %if.then35, label %for.cond39.preheader, !dbg !5237

for.cond39.preheader:                             ; preds = %lor.lhs.false
  %is_address = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv3, i64 %indvars.iv, i32 5, !dbg !5238
  %reject68 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv3, i64 %indvars.iv, i32 2, !dbg !5238
  br label %for.cond39, !dbg !5239

if.then35:                                        ; preds = %lor.lhs.false, %if.end
  %anything_ok = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv3, i64 %indvars.iv, i32 5, !dbg !5240
  %bf.load = load i8, i8* %anything_ok, align 8, !dbg !5242
  %bf.set = or i8 %bf.load, -128, !dbg !5242
  store i8 %bf.set, i8* %anything_ok, align 8, !dbg !5242
  br label %for.inc168, !dbg !5243

for.cond39:                                       ; preds = %cleanup.for.cond39_crit_edge, %for.cond39.preheader
  %12 = phi i8 [ %.pre1, %cleanup.for.cond39_crit_edge ], [ %11, %for.cond39.preheader ], !dbg !5244
  %p.1 = phi i8* [ %p.4, %cleanup.for.cond39_crit_edge ], [ %p.0, %for.cond39.preheader ], !dbg !5212
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !5179, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8 %12, metadata !5180, metadata !DIExpression()), !dbg !5245
  %cmp41 = icmp eq i8 %12, 35, !dbg !5246
  br i1 %cmp41, label %do.body.preheader, label %if.end50, !dbg !5239

do.body.preheader:                                ; preds = %for.cond39
  br label %do.body, !dbg !5248

do.body:                                          ; preds = %do.body.preheader, %do.body
  %p.2 = phi i8* [ %incdec.ptr, %do.body ], [ %p.1, %do.body.preheader ], !dbg !5212
  call void @llvm.dbg.value(metadata i8* %p.2, metadata !5179, metadata !DIExpression()), !dbg !5212
  %incdec.ptr = getelementptr inbounds i8, i8* %p.2, i64 1, !dbg !5249
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !5179, metadata !DIExpression()), !dbg !5212
  %13 = load i8, i8* %incdec.ptr, align 1, !dbg !5250
  call void @llvm.dbg.value(metadata i8 %13, metadata !5180, metadata !DIExpression()), !dbg !5245
  %cmp45 = icmp ne i8 %13, 44, !dbg !5251
  %cmp48 = icmp ne i8 %13, 0, !dbg !5252
  %14 = and i1 %cmp45, %cmp48, !dbg !5252
  br i1 %14, label %do.body, label %if.end50.loopexit, !dbg !5253, !llvm.loop !5254

if.end50.loopexit:                                ; preds = %do.body
  %incdec.ptr.lcssa = phi i8* [ %incdec.ptr, %do.body ], !dbg !5249
  %.lcssa = phi i8 [ %13, %do.body ], !dbg !5250
  br label %if.end50, !dbg !5256

if.end50:                                         ; preds = %if.end50.loopexit, %for.cond39
  %c.0 = phi i8 [ %12, %for.cond39 ], [ %.lcssa, %if.end50.loopexit ], !dbg !5245
  %p.3 = phi i8* [ %p.1, %for.cond39 ], [ %incdec.ptr.lcssa, %if.end50.loopexit ], !dbg !5212
  call void @llvm.dbg.value(metadata i8* %p.3, metadata !5179, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8 %c.0, metadata !5180, metadata !DIExpression()), !dbg !5245
  %cmp52 = icmp eq i8 %c.0, 44, !dbg !5256
  %cmp56 = icmp eq i8 %c.0, 0, !dbg !5258
  %or.cond = or i1 %cmp52, %cmp56, !dbg !5259
  br i1 %or.cond, label %if.then58, label %if.end60, !dbg !5259

if.then58:                                        ; preds = %if.end50
  %incdec.ptr59 = getelementptr inbounds i8, i8* %p.3, i64 1, !dbg !5260
  call void @llvm.dbg.value(metadata i8* %incdec.ptr59, metadata !5179, metadata !DIExpression()), !dbg !5212
  br label %cleanup, !dbg !5262

if.end60:                                         ; preds = %if.end50
  %conv61 = sext i8 %c.0 to i32, !dbg !5263
  switch i32 %conv61, label %sw.default [
    i32 61, label %sw.epilog
    i32 43, label %sw.epilog
    i32 42, label %sw.epilog
    i32 37, label %sw.epilog
    i32 69, label %sw.epilog
    i32 70, label %sw.epilog
    i32 71, label %sw.epilog
    i32 72, label %sw.epilog
    i32 115, label %sw.epilog
    i32 105, label %sw.epilog
    i32 110, label %sw.epilog
    i32 73, label %sw.epilog
    i32 74, label %sw.epilog
    i32 75, label %sw.epilog
    i32 76, label %sw.epilog
    i32 77, label %sw.epilog
    i32 78, label %sw.epilog
    i32 79, label %sw.epilog
    i32 80, label %sw.epilog
    i32 63, label %sw.bb62
    i32 33, label %sw.bb65
    i32 38, label %sw.bb70
    i32 48, label %sw.bb76
    i32 49, label %sw.bb76
    i32 50, label %sw.bb76
    i32 51, label %sw.bb76
    i32 52, label %sw.bb76
    i32 53, label %sw.bb76
    i32 54, label %sw.bb76
    i32 55, label %sw.bb76
    i32 56, label %sw.bb76
    i32 57, label %sw.bb76
    i32 109, label %sw.bb90
    i32 60, label %sw.bb96
    i32 62, label %sw.bb102
    i32 86, label %sw.bb108
    i32 111, label %sw.bb114
    i32 88, label %sw.bb120
    i32 112, label %sw.bb127
    i32 103, label %sw.bb144
    i32 114, label %sw.bb144
  ], !dbg !5264

sw.bb62:                                          ; preds = %if.end60
  %15 = load i32, i32* %reject68, align 4, !dbg !5265
  %add = add i32 %15, 6, !dbg !5265
  store i32 %add, i32* %reject68, align 4, !dbg !5265
  br label %sw.epilog, !dbg !5266

sw.bb65:                                          ; preds = %if.end60
  %16 = load i32, i32* %reject68, align 4, !dbg !5267
  %add69 = add i32 %16, 600, !dbg !5267
  store i32 %add69, i32* %reject68, align 4, !dbg !5267
  br label %sw.epilog, !dbg !5268

sw.bb70:                                          ; preds = %if.end60
  %bf.load73 = load i8, i8* %is_address, align 8, !dbg !5269
  %bf.set75 = or i8 %bf.load73, 1, !dbg !5269
  store i8 %bf.set75, i8* %is_address, align 8, !dbg !5269
  br label %sw.epilog, !dbg !5270

sw.bb76:                                          ; preds = %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5271
  call void @llvm.dbg.value(metadata i8** %end, metadata !5187, metadata !DIExpression(DW_OP_deref)), !dbg !5198
  %call77 = call i64 @strtoul(i8* %p.3, i8** nonnull %end, i32 10) #6, !dbg !5272
  %conv78 = trunc i64 %call77 to i32, !dbg !5272
  store i32 %conv78, i32* %matches, align 16, !dbg !5273
  %sext = shl i64 %call77, 32, !dbg !5274
  %idxprom85 = ashr exact i64 %sext, 32, !dbg !5274
  %matched89 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %idxprom85, i64 %indvars.iv, i32 4, !dbg !5275
  %17 = trunc i64 %indvars.iv3 to i32, !dbg !5276
  store i32 %17, i32* %matched89, align 4, !dbg !5276
  %18 = load i8*, i8** %end, align 8, !dbg !5277
  call void @llvm.dbg.value(metadata i8* %18, metadata !5187, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata i8* %18, metadata !5179, metadata !DIExpression()), !dbg !5212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5278
  br label %cleanup, !dbg !5279, !llvm.loop !5280

sw.bb90:                                          ; preds = %if.end60
  %bf.load93 = load i8, i8* %is_address, align 8, !dbg !5283
  %bf.set95 = or i8 %bf.load93, 2, !dbg !5283
  store i8 %bf.set95, i8* %is_address, align 8, !dbg !5283
  br label %sw.epilog, !dbg !5284

sw.bb96:                                          ; preds = %if.end60
  %bf.load99 = load i8, i8* %is_address, align 8, !dbg !5285
  %bf.set101 = or i8 %bf.load99, 16, !dbg !5285
  store i8 %bf.set101, i8* %is_address, align 8, !dbg !5285
  br label %sw.epilog, !dbg !5286

sw.bb102:                                         ; preds = %if.end60
  %bf.load105 = load i8, i8* %is_address, align 8, !dbg !5287
  %bf.set107 = or i8 %bf.load105, 32, !dbg !5287
  store i8 %bf.set107, i8* %is_address, align 8, !dbg !5287
  br label %sw.epilog, !dbg !5288

sw.bb108:                                         ; preds = %if.end60
  %bf.load111 = load i8, i8* %is_address, align 8, !dbg !5289
  %bf.set113 = or i8 %bf.load111, 8, !dbg !5289
  store i8 %bf.set113, i8* %is_address, align 8, !dbg !5289
  br label %sw.epilog, !dbg !5290

sw.bb114:                                         ; preds = %if.end60
  %bf.load117 = load i8, i8* %is_address, align 8, !dbg !5291
  %bf.set119 = or i8 %bf.load117, 4, !dbg !5291
  store i8 %bf.set119, i8* %is_address, align 8, !dbg !5291
  br label %sw.epilog, !dbg !5292

sw.bb120:                                         ; preds = %if.end60
  %bf.load124 = load i8, i8* %is_address, align 8, !dbg !5293
  %bf.set126 = or i8 %bf.load124, -128, !dbg !5293
  store i8 %bf.set126, i8* %is_address, align 8, !dbg !5293
  br label %sw.epilog, !dbg !5294

sw.bb127:                                         ; preds = %if.end60
  %bf.load130 = load i8, i8* %is_address, align 8, !dbg !5295
  %bf.set132 = or i8 %bf.load130, 64, !dbg !5295
  store i8 %bf.set132, i8* %is_address, align 8, !dbg !5295
  %19 = load i32, i32* %cl, align 8, !dbg !5296
  %idxprom136 = sext i32 %19 to i64, !dbg !5297
  %call138 = call fastcc i32 @base_reg_class(i32 0, i32 6, i32 38) #7, !dbg !5298
  %arrayidx140 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom136, i64 13, !dbg !5297
  %20 = load i32, i32* %arrayidx140, align 4, !dbg !5297
  store i32 %20, i32* %cl, align 8, !dbg !5299
  br label %sw.epilog, !dbg !5300

sw.bb144:                                         ; preds = %if.end60, %if.end60
  %21 = load i32, i32* %cl, align 8, !dbg !5301
  %idxprom148 = sext i32 %21 to i64, !dbg !5302
  %arrayidx150 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom148, i64 13, !dbg !5302
  %22 = load i32, i32* %arrayidx150, align 4, !dbg !5302
  store i32 %22, i32* %cl, align 8, !dbg !5303
  br label %sw.epilog, !dbg !5304

sw.default:                                       ; preds = %if.end60
  %23 = load i32, i32* %cl, align 8, !dbg !5305
  %idxprom157 = sext i32 %23 to i64, !dbg !5306
  %call159 = call i32 @lookup_constraint(i8* %p.3) #6, !dbg !5307
  %call160 = call i32 @regclass_for_constraint(i32 %call159) #6, !dbg !5307
  %idxprom161 = sext i32 %call160 to i64, !dbg !5306
  %arrayidx162 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom157, i64 %idxprom161, !dbg !5306
  %24 = load i32, i32* %arrayidx162, align 4, !dbg !5306
  store i32 %24, i32* %cl, align 8, !dbg !5308
  br label %sw.epilog, !dbg !5309

sw.epilog:                                        ; preds = %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %if.end60, %sw.default, %sw.bb144, %sw.bb127, %sw.bb120, %sw.bb114, %sw.bb108, %sw.bb102, %sw.bb96, %sw.bb90, %sw.bb70, %sw.bb65, %sw.bb62
  %call166 = call fastcc i64 @insn_constraint_len(i8 signext %c.0, i8* %p.3) #7, !dbg !5310
  %add.ptr = getelementptr inbounds i8, i8* %p.3, i64 %call166, !dbg !5311
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !5179, metadata !DIExpression()), !dbg !5212
  br label %cleanup, !dbg !5312

cleanup:                                          ; preds = %sw.epilog, %sw.bb76, %if.then58
  %p.4 = phi i8* [ %incdec.ptr59, %if.then58 ], [ %add.ptr, %sw.epilog ], [ %18, %sw.bb76 ], !dbg !5245
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then58 ], [ false, %sw.epilog ], [ false, %sw.bb76 ]
  call void @llvm.dbg.value(metadata i8* %p.4, metadata !5179, metadata !DIExpression()), !dbg !5212
  br i1 %cleanup.dest.slot.0, label %for.inc168.loopexit, label %cleanup.for.cond39_crit_edge

cleanup.for.cond39_crit_edge:                     ; preds = %cleanup
  %.pre1 = load i8, i8* %p.4, align 1, !dbg !5244
  br label %for.cond39

for.inc168.loopexit:                              ; preds = %cleanup
  %p.4.lcssa = phi i8* [ %p.4, %cleanup ], !dbg !5245
  call void @llvm.dbg.value(metadata i8* %p.4.lcssa, metadata !5179, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8* %p.4.lcssa, metadata !5179, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8* %p.4.lcssa, metadata !5179, metadata !DIExpression()), !dbg !5212
  br label %for.inc168, !dbg !5313

for.inc168:                                       ; preds = %for.inc168.loopexit, %if.then35, %if.then
  %p.5 = phi i8* [ %p.0, %if.then35 ], [ %call28, %if.then ], [ %p.4.lcssa, %for.inc168.loopexit ], !dbg !5212
  call void @llvm.dbg.value(metadata i8* %p.5, metadata !5179, metadata !DIExpression()), !dbg !5212
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5313
  call void @llvm.dbg.value(metadata i32 undef, metadata !5173, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5212
  br label %for.cond13, !dbg !5314, !llvm.loop !5315

for.inc171:                                       ; preds = %for.cond13
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !5317
  call void @llvm.dbg.value(metadata i32 undef, metadata !5172, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5190
  %.pre = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !5209
  br label %for.cond3, !dbg !5318, !llvm.loop !5319

for.end173:                                       ; preds = %for.cond3
  ret void, !dbg !5321
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @skip_alternative(i8* %p) unnamed_addr #0 !dbg !5322 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !5326, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata i8* %p, metadata !5327, metadata !DIExpression()), !dbg !5328
  br label %while.cond, !dbg !5329

while.cond:                                       ; preds = %while.body, %entry
  %r.0 = phi i8* [ %p, %entry ], [ %incdec.ptr, %while.body ], !dbg !5328
  call void @llvm.dbg.value(metadata i8* %r.0, metadata !5327, metadata !DIExpression()), !dbg !5328
  %0 = load i8, i8* %r.0, align 1, !dbg !5330
  %cmp = icmp eq i8 %0, 0, !dbg !5331
  %cmp3 = icmp eq i8 %0, 44, !dbg !5332
  %or.cond = or i1 %cmp, %cmp3, !dbg !5333
  br i1 %or.cond, label %while.end, label %while.body, !dbg !5333

while.body:                                       ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %r.0, i64 1, !dbg !5334
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !5327, metadata !DIExpression()), !dbg !5328
  br label %while.cond, !dbg !5329, !llvm.loop !5335

while.end:                                        ; preds = %while.cond
  %r.0.lcssa = phi i8* [ %r.0, %while.cond ], !dbg !5328
  %.lcssa = phi i8 [ %0, %while.cond ], !dbg !5330
  call void @llvm.dbg.value(metadata i8* %r.0.lcssa, metadata !5327, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata i8* %r.0.lcssa, metadata !5327, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata i8* %r.0.lcssa, metadata !5327, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata i8* %r.0.lcssa, metadata !5327, metadata !DIExpression()), !dbg !5328
  %cmp6 = icmp eq i8 %.lcssa, 44, !dbg !5336
  %incdec.ptr8 = getelementptr inbounds i8, i8* %r.0.lcssa, i64 1, !dbg !5338
  %spec.select = select i1 %cmp6, i8* %incdec.ptr8, i8* %r.0.lcssa, !dbg !5339
  call void @llvm.dbg.value(metadata i8* %spec.select, metadata !5327, metadata !DIExpression()), !dbg !5328
  ret i8* %spec.select, !dbg !5340
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @base_reg_class(i32 %mode, i32 %outer_code, i32 %index_code) unnamed_addr #0 !dbg !5341 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5346, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 %outer_code, metadata !5347, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 %index_code, metadata !5348, metadata !DIExpression()), !dbg !5349
  ret i32 undef, !dbg !5350
}

declare dso_local i32 @subreg_regno_offset(i32, i32, i32, i32) local_unnamed_addr #2

declare dso_local i32 @operands_match_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @reg_fits_class_p(%struct.rtx_def* %operand, i32 %cl, i32 %offset, i32 %mode) local_unnamed_addr #5 !dbg !5351 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %operand, metadata !5355, metadata !DIExpression()), !dbg !5360
  call void @llvm.dbg.value(metadata i32 %cl, metadata !5356, metadata !DIExpression()), !dbg !5360
  call void @llvm.dbg.value(metadata i32 %offset, metadata !5357, metadata !DIExpression()), !dbg !5360
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5358, metadata !DIExpression()), !dbg !5360
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %operand) #7, !dbg !5361
  call void @llvm.dbg.value(metadata i32 %call, metadata !5359, metadata !DIExpression()), !dbg !5360
  %cmp = icmp eq i32 %cl, 0, !dbg !5362
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5364

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i32 %call, 53, !dbg !5365
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !5366

land.rhs:                                         ; preds = %if.end
  %idxprom = sext i32 %cl to i64, !dbg !5367
  %arrayidx = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom, !dbg !5367
  %0 = load i64, i64* %arrayidx, align 8, !dbg !5367
  %add = add nsw i32 %call, %offset, !dbg !5368
  %call2 = tail call fastcc zeroext i8 @in_hard_reg_set_p(i64 %0, i32 %mode, i32 %add) #7, !dbg !5369
  %tobool = icmp ne i8 %call2, 0, !dbg !5366
  %phitmp = zext i1 %tobool to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %1 = phi i32 [ 0, %if.end ], [ %phitmp, %land.rhs ]
  br label %cleanup, !dbg !5370

cleanup:                                          ; preds = %entry, %land.end
  %retval.0 = phi i32 [ %1, %land.end ], [ 0, %entry ], !dbg !5360
  ret i32 %retval.0, !dbg !5371
}

declare dso_local i32 @safe_from_earlyclobber(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @in_hard_reg_set_p(i64 %regs, i32 %mode, i32 %regno) unnamed_addr #0 !dbg !5372 {
entry:
  call void @llvm.dbg.value(metadata i64 %regs, metadata !5378, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5379, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5380, metadata !DIExpression()), !dbg !5382
  %sh_prom = zext i32 %regno to i64, !dbg !5383
  %shl = shl i64 1, %sh_prom, !dbg !5383
  %and = and i64 %shl, %regs, !dbg !5383
  %tobool = icmp eq i64 %and, 0, !dbg !5383
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5385

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @end_hard_regno(i32 %mode, i32 %regno) #7, !dbg !5386
  call void @llvm.dbg.value(metadata i32 %call, metadata !5381, metadata !DIExpression()), !dbg !5382
  br label %while.cond, !dbg !5387

while.cond:                                       ; preds = %while.body, %if.end
  %regno.addr.0 = phi i32 [ %regno, %if.end ], [ %inc, %while.body ]
  call void @llvm.dbg.value(metadata i32 %regno.addr.0, metadata !5380, metadata !DIExpression()), !dbg !5382
  %inc = add i32 %regno.addr.0, 1, !dbg !5388
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5380, metadata !DIExpression()), !dbg !5382
  %cmp = icmp ult i32 %inc, %call, !dbg !5389
  br i1 %cmp, label %while.body, label %cleanup.loopexit, !dbg !5387

while.body:                                       ; preds = %while.cond
  %sh_prom1 = zext i32 %inc to i64, !dbg !5390
  %shl2 = shl i64 1, %sh_prom1, !dbg !5390
  %and3 = and i64 %shl2, %regs, !dbg !5390
  %tobool4 = icmp eq i64 %and3, 0, !dbg !5390
  br i1 %tobool4, label %cleanup.loopexit, label %while.cond, !dbg !5392, !llvm.loop !5393

cleanup.loopexit:                                 ; preds = %while.cond, %while.body
  %retval.0.ph = phi i8 [ 1, %while.cond ], [ 0, %while.body ]
  br label %cleanup, !dbg !5395

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !5382
  ret i8 %retval.0, !dbg !5395
}

; Function Attrs: nounwind uwtable
define dso_local void @split_all_insns() local_unnamed_addr #5 !dbg !5396 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5426
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !5426
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5426
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !5426
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !5426
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %2) #6, !dbg !5427
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call, metadata !5398, metadata !DIExpression()), !dbg !5428
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !5429
  call void @llvm.dbg.value(metadata i8 0, metadata !5409, metadata !DIExpression()), !dbg !5428
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5430
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !5430
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !5430
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !5430
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5430
  br label %for.cond, !dbg !5430

for.cond:                                         ; preds = %for.inc88, %entry
  %6 = phi %struct.control_flow_graph* [ %4, %entry ], [ %.pre1, %for.inc88 ], !dbg !5431
  %.pn = phi %struct.basic_block_def* [ %5, %entry ], [ %bb.0, %for.inc88 ]
  %changed.0 = phi i8 [ 0, %entry ], [ %changed.1.lcssa, %for.inc88 ], !dbg !5432
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 5, !dbg !5433
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5433
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !5409, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5410, metadata !DIExpression()), !dbg !5428
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !5431
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5431
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %7, !dbg !5431
  br i1 %cmp, label %for.end90, label %for.body, !dbg !5430

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !5416, metadata !DIExpression()), !dbg !5434
  tail call void @rtl_profile_for_bb(%struct.basic_block_def* %bb.0) #6, !dbg !5435
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !5436
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5436
  %8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5436
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %8, i64 0, i32 0, !dbg !5436
  %9 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !5411, metadata !DIExpression()), !dbg !5434
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !5437
  br label %for.cond5, !dbg !5440

for.cond5:                                        ; preds = %for.inc, %for.body
  %finish.0 = phi i8 [ 0, %for.body ], [ %conv10, %for.inc ], !dbg !5434
  %insn.0 = phi %struct.rtx_def* [ %9, %for.body ], [ %11, %for.inc ], !dbg !5441
  %changed.1 = phi i8 [ %changed.0, %for.body ], [ %changed.4, %for.inc ], !dbg !5432
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !5409, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5411, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.value(metadata i8 %finish.0, metadata !5416, metadata !DIExpression()), !dbg !5434
  %tobool = icmp eq i8 %finish.0, 0, !dbg !5442
  br i1 %tobool, label %for.body6, label %for.inc88, !dbg !5443

for.body6:                                        ; preds = %for.cond5
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5444
  %rt_rtx = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !5444
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5444
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !5415, metadata !DIExpression()), !dbg !5434
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5445
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 1, !dbg !5445
  %13 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5445
  %cmp9 = icmp eq %struct.rtx_def* %insn.0, %13, !dbg !5446
  %conv10 = zext i1 %cmp9 to i8, !dbg !5447
  call void @llvm.dbg.value(metadata i8 %conv10, metadata !5416, metadata !DIExpression()), !dbg !5434
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5448
  %bf.load = load i32, i32* %14, align 8, !dbg !5448
  %bf.clear = and i32 %bf.load, 65535, !dbg !5448
  %cmp11 = icmp eq i32 %bf.clear, 8, !dbg !5448
  br i1 %cmp11, label %if.then, label %lor.lhs.false, !dbg !5448

lor.lhs.false:                                    ; preds = %for.body6
  %cmp15 = icmp eq i32 %bf.clear, 7, !dbg !5448
  br i1 %cmp15, label %if.then, label %lor.lhs.false17, !dbg !5448

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %cmp20 = icmp eq i32 %bf.clear, 9, !dbg !5448
  br i1 %cmp20, label %if.then, label %lor.lhs.false22, !dbg !5448

lor.lhs.false22:                                  ; preds = %lor.lhs.false17
  %cmp25 = icmp eq i32 %bf.clear, 10, !dbg !5448
  br i1 %cmp25, label %if.then, label %for.inc, !dbg !5449

if.then:                                          ; preds = %lor.lhs.false22, %lor.lhs.false17, %lor.lhs.false, %for.body6
  br i1 %cmp11, label %cond.true, label %lor.lhs.false31, !dbg !5450

lor.lhs.false31:                                  ; preds = %if.then
  %cmp34 = icmp eq i32 %bf.clear, 7, !dbg !5450
  br i1 %cmp34, label %cond.true, label %lor.lhs.false36, !dbg !5450

lor.lhs.false36:                                  ; preds = %lor.lhs.false31
  %cmp39 = icmp eq i32 %bf.clear, 9, !dbg !5450
  br i1 %cmp39, label %cond.true, label %lor.lhs.false41, !dbg !5450

lor.lhs.false41:                                  ; preds = %lor.lhs.false36
  %cmp44 = icmp eq i32 %bf.clear, 10, !dbg !5450
  br i1 %cmp44, label %cond.true, label %cond.end65, !dbg !5450

cond.true:                                        ; preds = %lor.lhs.false41, %lor.lhs.false36, %lor.lhs.false31, %if.then
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !5450
  %15 = getelementptr inbounds %union.u, %union.u* %u46, i64 1, i32 0, i32 0, i64 0, !dbg !5450
  %16 = bitcast %union.rtunion_def* %15 to i32**, !dbg !5450
  %17 = load i32*, i32** %16, align 8, !dbg !5450
  %bf.load50 = load i32, i32* %17, align 8, !dbg !5450
  %bf.clear51 = and i32 %bf.load50, 65535, !dbg !5450
  %cmp52 = icmp eq i32 %bf.clear51, 23, !dbg !5450
  %18 = bitcast i32* %17 to %struct.rtx_def*, !dbg !5450
  br i1 %cmp52, label %cond.end65, label %cond.false, !dbg !5450

cond.false:                                       ; preds = %cond.true
  %call63 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn.0, %struct.rtx_def* %18) #6, !dbg !5450
  br label %cond.end65, !dbg !5450

cond.end65:                                       ; preds = %lor.lhs.false41, %cond.false, %cond.true
  %cond66 = phi %struct.rtx_def* [ %call63, %cond.false ], [ %18, %cond.true ], [ null, %lor.lhs.false41 ], !dbg !5450
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond66, metadata !5417, metadata !DIExpression()), !dbg !5451
  %tobool67 = icmp eq %struct.rtx_def* %cond66, null, !dbg !5452
  br i1 %tobool67, label %if.else, label %land.lhs.true, !dbg !5453

land.lhs.true:                                    ; preds = %cond.end65
  %call68 = tail call i32 @set_noop_p(%struct.rtx_def* nonnull %cond66) #6, !dbg !5454
  %tobool69 = icmp eq i32 %call68, 0, !dbg !5454
  br i1 %tobool69, label %if.else, label %if.then70, !dbg !5455

if.then70:                                        ; preds = %land.lhs.true
  %19 = load i32, i32* @reload_completed, align 4, !dbg !5456
  %tobool71 = icmp eq i32 %19, 0, !dbg !5456
  br i1 %tobool71, label %for.inc, label %if.then72, !dbg !5459

if.then72:                                        ; preds = %if.then70
  %call73 = tail call %struct.rtx_def* @delete_insn_and_edges(%struct.rtx_def* %insn.0) #6, !dbg !5460
  br label %for.inc, !dbg !5460

if.else:                                          ; preds = %land.lhs.true, %cond.end65
  %call74 = tail call fastcc %struct.rtx_def* @split_insn(%struct.rtx_def* %insn.0) #7, !dbg !5461
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call74, metadata !5423, metadata !DIExpression()), !dbg !5462
  %tobool75 = icmp eq %struct.rtx_def* %call74, null, !dbg !5463
  br i1 %tobool75, label %for.inc, label %while.cond.preheader, !dbg !5464

while.cond.preheader:                             ; preds = %if.else
  br label %while.cond, !dbg !5465

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %last.0 = phi %struct.rtx_def* [ %22, %while.body ], [ %call74, %while.cond.preheader ], !dbg !5462
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !5423, metadata !DIExpression()), !dbg !5462
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 0, !dbg !5466
  %bf.load77 = load i32, i32* %20, align 8, !dbg !5466
  %bf.clear78 = and i32 %bf.load77, 65535, !dbg !5466
  %cmp79 = icmp eq i32 %bf.clear78, 11, !dbg !5466
  br i1 %cmp79, label %while.body, label %while.end, !dbg !5465

while.body:                                       ; preds = %while.cond
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5467
  %rt_rtx84 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !5467
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !5467
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !5423, metadata !DIExpression()), !dbg !5462
  br label %while.cond, !dbg !5465, !llvm.loop !5468

while.end:                                        ; preds = %while.cond
  %23 = load i32, i32* %index, align 8, !dbg !5469
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call, i32 %23) #7, !dbg !5470
  call void @llvm.dbg.value(metadata i8 1, metadata !5409, metadata !DIExpression()), !dbg !5428
  br label %for.inc, !dbg !5471

for.inc:                                          ; preds = %if.then70, %if.else, %lor.lhs.false22, %while.end, %if.then72
  %changed.4 = phi i8 [ %changed.1, %lor.lhs.false22 ], [ %changed.1, %if.then72 ], [ %changed.1, %if.then70 ], [ 1, %while.end ], [ %changed.1, %if.else ], !dbg !5432
  call void @llvm.dbg.value(metadata i8 %changed.4, metadata !5409, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !5411, metadata !DIExpression()), !dbg !5434
  br label %for.cond5, !dbg !5472, !llvm.loop !5473

for.inc88:                                        ; preds = %for.cond5
  %changed.1.lcssa = phi i8 [ %changed.1, %for.cond5 ], !dbg !5432
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !5409, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !5409, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !5409, metadata !DIExpression()), !dbg !5428
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5431
  %cfg4.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !5475
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4.phi.trans.insert, align 8, !dbg !5431
  br label %for.cond, !dbg !5431, !llvm.loop !5476

for.end90:                                        ; preds = %for.cond
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !5432
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !5409, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !5409, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !5409, metadata !DIExpression()), !dbg !5428
  tail call void @default_rtl_profile() #6, !dbg !5478
  %tobool91 = icmp eq i8 %changed.0.lcssa, 0, !dbg !5479
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !5481

if.then92:                                        ; preds = %for.end90
  tail call void @find_many_sub_basic_blocks(%struct.simple_bitmap_def* %call) #6, !dbg !5482
  br label %if.end93, !dbg !5482

if.end93:                                         ; preds = %for.end90, %if.then92
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 0, !dbg !5483
  %24 = load i8*, i8** %popcount, align 8, !dbg !5483
  tail call void @free(i8* %24) #6, !dbg !5483
  %25 = bitcast %struct.simple_bitmap_def* %call to i8*, !dbg !5483
  tail call void @free(i8* %25) #6, !dbg !5483
  ret void, !dbg !5484
}

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

declare dso_local void @rtl_profile_for_bb(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @set_noop_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @delete_insn_and_edges(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @split_insn(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !5485 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5487, metadata !DIExpression()), !dbg !5493
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5494
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5494
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5494
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5488, metadata !DIExpression()), !dbg !5493
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5495
  %2 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 0, !dbg !5495
  %rt_rtx4 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5495
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !5495
  %call = tail call %struct.rtx_def* @try_split(%struct.rtx_def* %3, %struct.rtx_def* %insn, i32 1) #6, !dbg !5496
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5489, metadata !DIExpression()), !dbg !5493
  %cmp = icmp eq %struct.rtx_def* %call, %insn, !dbg !5497
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5499

if.end:                                           ; preds = %entry
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5500
  %bf.load = load i32, i32* %4, align 8, !dbg !5500
  %bf.clear = and i32 %bf.load, 65535, !dbg !5500
  %cmp5 = icmp eq i32 %bf.clear, 8, !dbg !5500
  br i1 %cmp5, label %cond.true, label %lor.lhs.false, !dbg !5500

lor.lhs.false:                                    ; preds = %if.end
  %cmp8 = icmp eq i32 %bf.clear, 7, !dbg !5500
  br i1 %cmp8, label %cond.true, label %lor.lhs.false9, !dbg !5500

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i32 %bf.clear, 9, !dbg !5500
  br i1 %cmp12, label %cond.true, label %lor.lhs.false13, !dbg !5500

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %cmp16 = icmp eq i32 %bf.clear, 10, !dbg !5500
  br i1 %cmp16, label %cond.true, label %cond.end35, !dbg !5500

cond.true:                                        ; preds = %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false, %if.end
  %5 = bitcast %union.rtunion_def* %2 to i32**, !dbg !5500
  %6 = load i32*, i32** %5, align 8, !dbg !5500
  %bf.load21 = load i32, i32* %6, align 8, !dbg !5500
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !5500
  %cmp23 = icmp eq i32 %bf.clear22, 23, !dbg !5500
  %7 = bitcast i32* %6 to %struct.rtx_def*, !dbg !5500
  br i1 %cmp23, label %cond.end35, label %cond.false, !dbg !5500

cond.false:                                       ; preds = %cond.true
  %call33 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %7) #6, !dbg !5500
  br label %cond.end35, !dbg !5500

cond.end35:                                       ; preds = %lor.lhs.false13, %cond.false, %cond.true
  %cond36 = phi %struct.rtx_def* [ %call33, %cond.false ], [ %7, %cond.true ], [ null, %lor.lhs.false13 ], !dbg !5500
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond36, metadata !5490, metadata !DIExpression()), !dbg !5493
  %tobool = icmp eq %struct.rtx_def* %cond36, null, !dbg !5501
  br i1 %tobool, label %if.end124, label %if.then37, !dbg !5503

if.then37:                                        ; preds = %cond.end35
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !5504
  %bf.load38 = load i32, i32* %8, align 8, !dbg !5504
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !5504
  %cmp40 = icmp eq i32 %bf.clear39, 8, !dbg !5504
  br i1 %cmp40, label %cond.true53, label %lor.lhs.false41, !dbg !5504

lor.lhs.false41:                                  ; preds = %if.then37
  %cmp44 = icmp eq i32 %bf.clear39, 7, !dbg !5504
  br i1 %cmp44, label %cond.true53, label %lor.lhs.false45, !dbg !5504

lor.lhs.false45:                                  ; preds = %lor.lhs.false41
  %cmp48 = icmp eq i32 %bf.clear39, 9, !dbg !5504
  br i1 %cmp48, label %cond.true53, label %lor.lhs.false49, !dbg !5504

lor.lhs.false49:                                  ; preds = %lor.lhs.false45
  %cmp52 = icmp eq i32 %bf.clear39, 10, !dbg !5504
  br i1 %cmp52, label %cond.true53, label %cond.end75, !dbg !5504

cond.true53:                                      ; preds = %lor.lhs.false49, %lor.lhs.false45, %lor.lhs.false41, %if.then37
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !5504
  %9 = getelementptr inbounds %union.u, %union.u* %u54, i64 1, i32 0, i32 0, i64 0, !dbg !5504
  %10 = bitcast %union.rtunion_def* %9 to i32**, !dbg !5504
  %11 = load i32*, i32** %10, align 8, !dbg !5504
  %bf.load58 = load i32, i32* %11, align 8, !dbg !5504
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !5504
  %cmp60 = icmp eq i32 %bf.clear59, 23, !dbg !5504
  %12 = bitcast i32* %11 to %struct.rtx_def*, !dbg !5504
  br i1 %cmp60, label %cond.end75, label %cond.false66, !dbg !5504

cond.false66:                                     ; preds = %cond.true53
  %call71 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call, %struct.rtx_def* %12) #6, !dbg !5504
  br label %cond.end75, !dbg !5504

cond.end75:                                       ; preds = %lor.lhs.false49, %cond.false66, %cond.true53
  %cond76 = phi %struct.rtx_def* [ %call71, %cond.false66 ], [ %12, %cond.true53 ], [ null, %lor.lhs.false49 ], !dbg !5504
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond76, metadata !5491, metadata !DIExpression()), !dbg !5493
  %tobool77 = icmp eq %struct.rtx_def* %cond76, null, !dbg !5506
  br i1 %tobool77, label %if.end124, label %land.lhs.true, !dbg !5508

land.lhs.true:                                    ; preds = %cond.end75
  %arrayidx80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond76, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5509
  %rt_rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**, !dbg !5509
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !5509
  %arrayidx84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond36, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5510
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !5510
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !5510
  %call86 = tail call i32 @rtx_equal_p(%struct.rtx_def* %13, %struct.rtx_def* %14) #6, !dbg !5511
  %tobool87 = icmp eq i32 %call86, 0, !dbg !5511
  br i1 %tobool87, label %if.end124, label %if.then88, !dbg !5512

if.then88:                                        ; preds = %land.lhs.true
  %call89 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %insn) #6, !dbg !5513
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call89, metadata !5492, metadata !DIExpression()), !dbg !5493
  %tobool90 = icmp eq %struct.rtx_def* %call89, null, !dbg !5515
  br i1 %tobool90, label %if.else, label %land.lhs.true91, !dbg !5517

land.lhs.true91:                                  ; preds = %if.then88
  %arrayidx94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call89, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5518
  %15 = bitcast %union.rtunion_def* %arrayidx94 to i32**, !dbg !5518
  %16 = load i32*, i32** %15, align 8, !dbg !5518
  %bf.load96 = load i32, i32* %16, align 8, !dbg !5518
  %bf.clear97 = and i32 %bf.load96, 65535, !dbg !5518
  %idxprom = zext i32 %bf.clear97 to i64, !dbg !5518
  %arrayidx98 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5518
  %17 = load i32, i32* %arrayidx98, align 4, !dbg !5518
  %cmp99 = icmp eq i32 %17, 9, !dbg !5518
  br i1 %cmp99, label %if.then100, label %if.else, !dbg !5519

if.then100:                                       ; preds = %land.lhs.true91
  %18 = bitcast i32* %16 to %struct.rtx_def*, !dbg !5519
  %call105 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call, i32 4, %struct.rtx_def* %18) #6, !dbg !5520
  br label %if.end124, !dbg !5520

if.else:                                          ; preds = %if.then88, %land.lhs.true91
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond36, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5521
  %20 = bitcast %union.rtunion_def* %19 to i32**, !dbg !5521
  %21 = load i32*, i32** %20, align 8, !dbg !5521
  %bf.load110 = load i32, i32* %21, align 8, !dbg !5521
  %bf.clear111 = and i32 %bf.load110, 65535, !dbg !5521
  %idxprom112 = zext i32 %bf.clear111 to i64, !dbg !5521
  %arrayidx113 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom112, !dbg !5521
  %22 = load i32, i32* %arrayidx113, align 4, !dbg !5521
  %cmp114 = icmp eq i32 %22, 9, !dbg !5521
  br i1 %cmp114, label %if.then115, label %if.end124, !dbg !5523

if.then115:                                       ; preds = %if.else
  %23 = bitcast i32* %21 to %struct.rtx_def*, !dbg !5523
  %call120 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call, i32 4, %struct.rtx_def* %23) #6, !dbg !5524
  br label %if.end124, !dbg !5524

if.end124:                                        ; preds = %land.lhs.true, %cond.end75, %cond.end35, %if.else, %if.then115, %if.then100
  tail call void @set_insn_deleted(%struct.rtx_def* %insn) #6, !dbg !5525
  %24 = load i32, i32* @reload_completed, align 4, !dbg !5526
  %tobool125 = icmp ne i32 %24, 0, !dbg !5526
  %cmp127 = icmp ne %struct.rtx_def* %1, %call, !dbg !5528
  %or.cond = and i1 %tobool125, %cmp127, !dbg !5529
  br i1 %or.cond, label %if.then128, label %cleanup, !dbg !5529

if.then128:                                       ; preds = %if.end124
  br label %for.cond, !dbg !5530

for.cond:                                         ; preds = %if.end152, %if.then128
  %.pn = phi %struct.rtx_def* [ %1, %if.then128 ], [ %first.0, %if.end152 ]
  %first.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5532
  %first.0.in = bitcast %union.rtunion_def* %first.0.in.in to %struct.rtx_def**, !dbg !5532
  %first.0 = load %struct.rtx_def*, %struct.rtx_def** %first.0.in, align 8, !dbg !5532
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.0, metadata !5488, metadata !DIExpression()), !dbg !5493
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first.0, i64 0, i32 0, !dbg !5533
  %bf.load133 = load i32, i32* %25, align 8, !dbg !5533
  %bf.clear134 = and i32 %bf.load133, 65535, !dbg !5533
  %cmp135 = icmp eq i32 %bf.clear134, 8, !dbg !5533
  br i1 %cmp135, label %if.then148, label %lor.lhs.false136, !dbg !5533

lor.lhs.false136:                                 ; preds = %for.cond
  %cmp139 = icmp eq i32 %bf.clear134, 7, !dbg !5533
  br i1 %cmp139, label %if.then148, label %lor.lhs.false140, !dbg !5533

lor.lhs.false140:                                 ; preds = %lor.lhs.false136
  %cmp143 = icmp eq i32 %bf.clear134, 9, !dbg !5533
  br i1 %cmp143, label %if.then148, label %lor.lhs.false144, !dbg !5533

lor.lhs.false144:                                 ; preds = %lor.lhs.false140
  %cmp147 = icmp eq i32 %bf.clear134, 10, !dbg !5533
  br i1 %cmp147, label %if.then148, label %if.end149, !dbg !5538

if.then148:                                       ; preds = %lor.lhs.false144, %lor.lhs.false140, %lor.lhs.false136, %for.cond
  tail call void @cleanup_subreg_operands(%struct.rtx_def* %first.0) #6, !dbg !5539
  br label %if.end149, !dbg !5539

if.end149:                                        ; preds = %if.then148, %lor.lhs.false144
  %cmp150 = icmp eq %struct.rtx_def* %first.0, %call, !dbg !5540
  br i1 %cmp150, label %cleanup.loopexit, label %if.end152, !dbg !5542

if.end152:                                        ; preds = %if.end149
  br label %for.cond, !dbg !5543, !llvm.loop !5544

cleanup.loopexit:                                 ; preds = %if.end149
  br label %cleanup, !dbg !5547

cleanup:                                          ; preds = %cleanup.loopexit, %if.end124, %entry
  %retval.0 = phi %struct.rtx_def* [ null, %entry ], [ %call, %if.end124 ], [ %call, %cleanup.loopexit ], !dbg !5493
  ret %struct.rtx_def* %retval.0, !dbg !5547
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !5548 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !5552, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !5553, metadata !DIExpression()), !dbg !5557
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !5558
  %0 = load i8*, i8** %popcount, align 8, !dbg !5558
  %tobool = icmp eq i8* %0, null, !dbg !5559
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !5560

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !5561
  %.pre2 = zext i32 %.pre to i64, !dbg !5562
  %.pre3 = shl i64 1, %.pre2, !dbg !5562
  %.pre4 = lshr i32 %bitno, 6, !dbg !5563
  %.pre5 = zext i32 %.pre4 to i64, !dbg !5564
  br label %if.end7, !dbg !5560

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !5565
  %idxprom = zext i32 %div to i64, !dbg !5565
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !5565
  %1 = load i64, i64* %arrayidx, align 8, !dbg !5565
  %rem = and i32 %bitno, 63, !dbg !5565
  %sh_prom = zext i32 %rem to i64, !dbg !5565
  %2 = shl i64 1, %sh_prom, !dbg !5566
  %3 = and i64 %1, %2, !dbg !5566
  %tobool1 = icmp eq i64 %3, 0, !dbg !5566
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !5568

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !5569
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !5570
  %inc = add i8 %4, 1, !dbg !5570
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !5570
  br label %if.end7, !dbg !5569

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !5564
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !5562
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !5564
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !5571
  %or = or i64 %5, %shl.pre-phi, !dbg !5571
  store i64 %or, i64* %arrayidx13, align 8, !dbg !5571
  ret void, !dbg !5572
}

declare dso_local void @default_rtl_profile() local_unnamed_addr #2

declare dso_local void @find_many_sub_basic_blocks(%struct.simple_bitmap_def*) local_unnamed_addr #2

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @split_all_insns_noflow() #5 !dbg !5573 {
entry:
  %call = tail call %struct.rtx_def* @get_insns() #6, !dbg !5583
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5576, metadata !DIExpression()), !dbg !5584
  br label %for.cond, !dbg !5585

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0 = phi %struct.rtx_def* [ %call, %entry ], [ %1, %for.inc ], !dbg !5586
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5576, metadata !DIExpression()), !dbg !5584
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5587
  br i1 %tobool, label %for.end, label %for.body, !dbg !5587

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5588
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5588
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5588
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5575, metadata !DIExpression()), !dbg !5584
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5589
  %bf.load = load i32, i32* %2, align 8, !dbg !5589
  %bf.clear = and i32 %bf.load, 65535, !dbg !5589
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5589
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5589

lor.lhs.false:                                    ; preds = %for.body
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !5589
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !5589

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !5589
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !5589

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !5589
  br i1 %cmp11, label %if.then, label %for.inc, !dbg !5590

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %for.body
  br i1 %cmp, label %cond.true, label %lor.lhs.false15, !dbg !5591

lor.lhs.false15:                                  ; preds = %if.then
  %cmp18 = icmp eq i32 %bf.clear, 7, !dbg !5591
  br i1 %cmp18, label %cond.true, label %lor.lhs.false19, !dbg !5591

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %cmp22 = icmp eq i32 %bf.clear, 9, !dbg !5591
  br i1 %cmp22, label %cond.true, label %lor.lhs.false23, !dbg !5591

lor.lhs.false23:                                  ; preds = %lor.lhs.false19
  %cmp26 = icmp eq i32 %bf.clear, 10, !dbg !5591
  br i1 %cmp26, label %cond.true, label %cond.end45, !dbg !5591

cond.true:                                        ; preds = %lor.lhs.false23, %lor.lhs.false19, %lor.lhs.false15, %if.then
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !5591
  %3 = getelementptr inbounds %union.u, %union.u* %u27, i64 1, i32 0, i32 0, i64 0, !dbg !5591
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !5591
  %5 = load i32*, i32** %4, align 8, !dbg !5591
  %bf.load31 = load i32, i32* %5, align 8, !dbg !5591
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !5591
  %cmp33 = icmp eq i32 %bf.clear32, 23, !dbg !5591
  %6 = bitcast i32* %5 to %struct.rtx_def*, !dbg !5591
  br i1 %cmp33, label %cond.end45, label %cond.false, !dbg !5591

cond.false:                                       ; preds = %cond.true
  %call43 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %6) #6, !dbg !5591
  br label %cond.end45, !dbg !5591

cond.end45:                                       ; preds = %lor.lhs.false23, %cond.false, %cond.true
  %cond46 = phi %struct.rtx_def* [ %call43, %cond.false ], [ %6, %cond.true ], [ null, %lor.lhs.false23 ], !dbg !5591
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond46, metadata !5577, metadata !DIExpression()), !dbg !5592
  %tobool47 = icmp eq %struct.rtx_def* %cond46, null, !dbg !5593
  br i1 %tobool47, label %if.else, label %land.lhs.true, !dbg !5595

land.lhs.true:                                    ; preds = %cond.end45
  %call48 = tail call i32 @set_noop_p(%struct.rtx_def* nonnull %cond46) #6, !dbg !5596
  %tobool49 = icmp eq i32 %call48, 0, !dbg !5596
  br i1 %tobool49, label %if.else, label %if.then50, !dbg !5597

if.then50:                                        ; preds = %land.lhs.true
  %7 = load i32, i32* @reload_completed, align 4, !dbg !5598
  %tobool51 = icmp eq i32 %7, 0, !dbg !5598
  br i1 %tobool51, label %for.inc, label %if.then52, !dbg !5601

if.then52:                                        ; preds = %if.then50
  %call53 = tail call %struct.rtx_def* @delete_insn_and_edges(%struct.rtx_def* nonnull %insn.0) #6, !dbg !5602
  br label %for.inc, !dbg !5602

if.else:                                          ; preds = %land.lhs.true, %cond.end45
  %call54 = tail call fastcc %struct.rtx_def* @split_insn(%struct.rtx_def* nonnull %insn.0) #7, !dbg !5603
  br label %for.inc

for.inc:                                          ; preds = %if.then50, %lor.lhs.false8, %if.then52, %if.else
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5576, metadata !DIExpression()), !dbg !5584
  br label %for.cond, !dbg !5604, !llvm.loop !5605

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !5607
}

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @peep2_next_insn(i32 %n) local_unnamed_addr #5 !dbg !5608 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, metadata !5612, metadata !DIExpression()), !dbg !5613
  %0 = load i32, i32* @peep2_current_count, align 4, !dbg !5614
  %cmp = icmp slt i32 %0, %n, !dbg !5614
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5614

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2927, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5614
  br label %cond.end, !dbg !5614

cond.end:                                         ; preds = %entry, %cond.true
  %1 = load i32, i32* @peep2_current, align 4, !dbg !5615
  %add = add nsw i32 %1, %n, !dbg !5616
  call void @llvm.dbg.value(metadata i32 %add, metadata !5612, metadata !DIExpression()), !dbg !5613
  %cmp1 = icmp sgt i32 %add, 4, !dbg !5617
  %sub = add nsw i32 %add, -5, !dbg !5619
  %spec.select = select i1 %cmp1, i32 %sub, i32 %add, !dbg !5620
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5612, metadata !DIExpression()), !dbg !5613
  %idxprom = sext i32 %spec.select to i64, !dbg !5621
  %insn = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, i32 0, !dbg !5622
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 16, !dbg !5622
  ret %struct.rtx_def* %2, !dbg !5623
}

; Function Attrs: nounwind uwtable
define dso_local i32 @peep2_regno_dead_p(i32 %ofs, i32 %regno) local_unnamed_addr #5 !dbg !5624 {
entry:
  call void @llvm.dbg.value(metadata i32 %ofs, metadata !5628, metadata !DIExpression()), !dbg !5630
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5629, metadata !DIExpression()), !dbg !5630
  %cmp = icmp slt i32 %ofs, 5, !dbg !5631
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5631

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2942, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5631
  br label %cond.end, !dbg !5631

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load i32, i32* @peep2_current, align 4, !dbg !5632
  %add = add nsw i32 %0, %ofs, !dbg !5633
  call void @llvm.dbg.value(metadata i32 %add, metadata !5628, metadata !DIExpression()), !dbg !5630
  %cmp1 = icmp sgt i32 %add, 4, !dbg !5634
  %sub = add nsw i32 %add, -5, !dbg !5636
  %spec.select = select i1 %cmp1, i32 %sub, i32 %add, !dbg !5637
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5628, metadata !DIExpression()), !dbg !5630
  %idxprom = sext i32 %spec.select to i64, !dbg !5638
  %insn = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, i32 0, !dbg !5638
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 16, !dbg !5638
  %cmp2 = icmp eq %struct.rtx_def* %1, null, !dbg !5638
  br i1 %cmp2, label %cond.true3, label %cond.end5, !dbg !5638

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2948, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5638
  br label %cond.end5, !dbg !5638

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %live_before = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, i32 1, !dbg !5639
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before, align 8, !dbg !5639
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %regno) #6, !dbg !5639
  %tobool = icmp eq i32 %call, 0, !dbg !5640
  %lnot.ext = zext i1 %tobool to i32, !dbg !5640
  ret i32 %lnot.ext, !dbg !5641
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @peep2_reg_dead_p(i32 %ofs, %struct.rtx_def* %reg) local_unnamed_addr #5 !dbg !5642 {
entry:
  call void @llvm.dbg.value(metadata i32 %ofs, metadata !5646, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !5647, metadata !DIExpression()), !dbg !5650
  %cmp = icmp slt i32 %ofs, 5, !dbg !5651
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5651

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2960, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5651
  br label %cond.end, !dbg !5651

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load i32, i32* @peep2_current, align 4, !dbg !5652
  %add = add nsw i32 %0, %ofs, !dbg !5653
  call void @llvm.dbg.value(metadata i32 %add, metadata !5646, metadata !DIExpression()), !dbg !5650
  %cmp1 = icmp sgt i32 %add, 4, !dbg !5654
  %sub = add nsw i32 %add, -5, !dbg !5656
  %spec.select = select i1 %cmp1, i32 %sub, i32 %add, !dbg !5657
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5646, metadata !DIExpression()), !dbg !5650
  %idxprom = sext i32 %spec.select to i64, !dbg !5658
  %insn = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, i32 0, !dbg !5658
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 16, !dbg !5658
  %cmp2 = icmp eq %struct.rtx_def* %1, null, !dbg !5658
  br i1 %cmp2, label %cond.true3, label %cond.end5, !dbg !5658

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2966, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5658
  br label %cond.end5, !dbg !5658

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #7, !dbg !5659
  call void @llvm.dbg.value(metadata i32 %call, metadata !5648, metadata !DIExpression()), !dbg !5650
  %idxprom7 = sext i32 %call to i64, !dbg !5660
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !5661
  %bf.load = load i32, i32* %2, align 8, !dbg !5661
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5661
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5661
  %idxprom9 = zext i32 %bf.clear to i64, !dbg !5660
  %arrayidx10 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom7, i64 %idxprom9, !dbg !5660
  %3 = load i8, i8* %arrayidx10, align 1, !dbg !5660
  %conv = zext i8 %3 to i32, !dbg !5660
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5649, metadata !DIExpression()), !dbg !5650
  %live_before = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, i32 1, !dbg !5662
  br label %while.cond, !dbg !5664

while.cond:                                       ; preds = %while.body, %cond.end5
  %n.0 = phi i32 [ %conv, %cond.end5 ], [ %dec, %while.body ], !dbg !5650
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !5649, metadata !DIExpression()), !dbg !5650
  %dec = add nsw i32 %n.0, -1, !dbg !5665
  call void @llvm.dbg.value(metadata i32 %dec, metadata !5649, metadata !DIExpression()), !dbg !5650
  %cmp11 = icmp sgt i32 %n.0, 0, !dbg !5666
  br i1 %cmp11, label %while.body, label %cleanup, !dbg !5664

while.body:                                       ; preds = %while.cond
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before, align 8, !dbg !5662
  %add15 = add nsw i32 %call, %dec, !dbg !5662
  %call16 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %4, i32 %add15) #6, !dbg !5662
  %tobool = icmp eq i32 %call16, 0, !dbg !5662
  br i1 %tobool, label %while.cond, label %cleanup, !dbg !5667, !llvm.loop !5668

cleanup:                                          ; preds = %while.body, %while.cond
  %retval.0 = phi i32 [ 0, %while.body ], [ 1, %while.cond ], !dbg !5650
  ret i32 %retval.0, !dbg !5670
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @peep2_find_free_register(i32 %from, i32 %to, i8* %class_str, i32 %mode, i64* %reg_set) local_unnamed_addr #5 !dbg !1909 {
entry:
  %live = alloca i64, align 8
  %this_live = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %from, metadata !1914, metadata !DIExpression()), !dbg !5671
  call void @llvm.dbg.value(metadata i32 %to, metadata !1915, metadata !DIExpression()), !dbg !5671
  call void @llvm.dbg.value(metadata i8* %class_str, metadata !1916, metadata !DIExpression()), !dbg !5671
  call void @llvm.dbg.value(metadata i32 %mode, metadata !1917, metadata !DIExpression()), !dbg !5671
  call void @llvm.dbg.value(metadata i64* %reg_set, metadata !1918, metadata !DIExpression()), !dbg !5671
  %0 = bitcast i64* %live to i8*, !dbg !5672
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5672
  %cmp = icmp slt i32 %from, 5, !dbg !5673
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5673

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2996, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5673
  br label %cond.end, !dbg !5673

cond.end:                                         ; preds = %entry, %cond.true
  %cmp1 = icmp slt i32 %to, 5, !dbg !5674
  br i1 %cmp1, label %cond.end4, label %cond.true2, !dbg !5674

cond.true2:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2997, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5674
  br label %cond.end4, !dbg !5674

cond.end4:                                        ; preds = %cond.end, %cond.true2
  %1 = load i32, i32* @peep2_current, align 4, !dbg !5675
  %add = add nsw i32 %1, %from, !dbg !5676
  call void @llvm.dbg.value(metadata i32 %add, metadata !1914, metadata !DIExpression()), !dbg !5671
  %cmp6 = icmp sgt i32 %add, 4, !dbg !5677
  %sub = add nsw i32 %add, -5, !dbg !5679
  %spec.select = select i1 %cmp6, i32 %sub, i32 %add, !dbg !5680
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !1914, metadata !DIExpression()), !dbg !5671
  %add7 = add nsw i32 %1, %to, !dbg !5681
  call void @llvm.dbg.value(metadata i32 %add7, metadata !1915, metadata !DIExpression()), !dbg !5671
  %cmp8 = icmp sgt i32 %add7, 4, !dbg !5682
  %sub10 = add nsw i32 %add7, -5, !dbg !5684
  %to.addr.0 = select i1 %cmp8, i32 %sub10, i32 %add7, !dbg !5684
  call void @llvm.dbg.value(metadata i32 %to.addr.0, metadata !1915, metadata !DIExpression()), !dbg !5671
  %idxprom = sext i32 %spec.select to i64, !dbg !5685
  %insn = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, i32 0, !dbg !5685
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 16, !dbg !5685
  %cmp12 = icmp eq %struct.rtx_def* %2, null, !dbg !5685
  br i1 %cmp12, label %cond.true13, label %do.body, !dbg !5685

cond.true13:                                      ; preds = %cond.end4
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3006, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5685
  br label %do.body, !dbg !5685

do.body:                                          ; preds = %cond.end4, %cond.true13
  call void @llvm.dbg.value(metadata i64 0, metadata !1920, metadata !DIExpression()), !dbg !5671
  store i64 0, i64* %live, align 8, !dbg !5686
  %live_before = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, i32 1, !dbg !5686
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before, align 8, !dbg !5686
  call void @llvm.dbg.value(metadata i64* %live, metadata !1920, metadata !DIExpression(DW_OP_deref)), !dbg !5671
  call void @reg_set_to_hard_reg_set(i64* nonnull %live, %struct.bitmap_head_def* %3) #6, !dbg !5686
  %4 = bitcast i64* %this_live to i8*, !dbg !5688
  br label %while.cond, !dbg !5689

while.cond:                                       ; preds = %do.body31, %do.body
  %from.addr.1 = phi i32 [ %spec.select, %do.body ], [ %spec.select1, %do.body31 ], !dbg !5671
  call void @llvm.dbg.value(metadata i32 %from.addr.1, metadata !1914, metadata !DIExpression()), !dbg !5671
  %cmp19 = icmp eq i32 %from.addr.1, %to.addr.0, !dbg !5690
  br i1 %cmp19, label %while.end, label %while.body, !dbg !5689

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5691
  %inc = add nsw i32 %from.addr.1, 1, !dbg !5692
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1914, metadata !DIExpression()), !dbg !5671
  %cmp20 = icmp sgt i32 %from.addr.1, 3, !dbg !5694
  %spec.select1 = select i1 %cmp20, i32 0, i32 %inc, !dbg !5695
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !1914, metadata !DIExpression()), !dbg !5671
  %idxprom23 = sext i32 %spec.select1 to i64, !dbg !5696
  %insn25 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom23, i32 0, !dbg !5696
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn25, align 16, !dbg !5696
  %cmp26 = icmp eq %struct.rtx_def* %5, null, !dbg !5696
  br i1 %cmp26, label %cond.true27, label %do.body31, !dbg !5696

cond.true27:                                      ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3015, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5696
  br label %do.body31, !dbg !5696

do.body31:                                        ; preds = %while.body, %cond.true27
  call void @llvm.dbg.value(metadata i64 0, metadata !1922, metadata !DIExpression()), !dbg !5688
  store i64 0, i64* %this_live, align 8, !dbg !5697
  %live_before34 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom23, i32 1, !dbg !5697
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before34, align 8, !dbg !5697
  call void @llvm.dbg.value(metadata i64* %this_live, metadata !1922, metadata !DIExpression(DW_OP_deref)), !dbg !5688
  call void @reg_set_to_hard_reg_set(i64* nonnull %this_live, %struct.bitmap_head_def* %6) #6, !dbg !5697
  %7 = load i64, i64* %this_live, align 8, !dbg !5699
  call void @llvm.dbg.value(metadata i64 %7, metadata !1922, metadata !DIExpression()), !dbg !5688
  %8 = load i64, i64* %live, align 8, !dbg !5699
  call void @llvm.dbg.value(metadata i64 %8, metadata !1920, metadata !DIExpression()), !dbg !5671
  %or = or i64 %8, %7, !dbg !5699
  call void @llvm.dbg.value(metadata i64 %or, metadata !1920, metadata !DIExpression()), !dbg !5671
  store i64 %or, i64* %live, align 8, !dbg !5699
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5700
  br label %while.cond, !dbg !5689, !llvm.loop !5701

while.end:                                        ; preds = %while.cond
  %9 = load i8, i8* %class_str, align 1, !dbg !5702
  %cmp38 = icmp eq i8 %9, 114, !dbg !5703
  br i1 %cmp38, label %cond.end43, label %cond.false41, !dbg !5702

cond.false41:                                     ; preds = %while.end
  %call = call i32 @lookup_constraint(i8* %class_str) #6, !dbg !5704
  %call42 = call i32 @regclass_for_constraint(i32 %call) #6, !dbg !5704
  %phitmp = zext i32 %call42 to i64, !dbg !5702
  br label %cond.end43, !dbg !5702

cond.end43:                                       ; preds = %while.end, %cond.false41
  %cond44 = phi i64 [ %phitmp, %cond.false41 ], [ 13, %while.end ]
  call void @llvm.dbg.value(metadata i32 0, metadata !1921, metadata !DIExpression()), !dbg !5671
  %arrayidx65 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %cond44, !dbg !5705
  %idxprom97 = zext i32 %mode to i64, !dbg !5707
  br label %for.cond, !dbg !5709

for.cond:                                         ; preds = %for.inc130, %cond.end43
  %i.0 = phi i32 [ 0, %cond.end43 ], [ %inc131, %for.inc130 ], !dbg !5710
  %retval.0 = phi %struct.rtx_def* [ undef, %cond.end43 ], [ %retval.1, %for.inc130 ]
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !1921, metadata !DIExpression()), !dbg !5671
  %exitcond = icmp eq i32 %i.0, 53, !dbg !5711
  br i1 %exitcond, label %for.end132, label %for.body, !dbg !5712

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* @peep2_find_free_register.search_ofs, align 4, !dbg !5713
  %add47 = add nsw i32 %10, %i.0, !dbg !5714
  call void @llvm.dbg.value(metadata i32 %add47, metadata !1924, metadata !DIExpression()), !dbg !5715
  %cmp48 = icmp sgt i32 %add47, 52, !dbg !5716
  %sub51 = add nsw i32 %add47, -53, !dbg !5718
  %spec.select2 = select i1 %cmp48, i32 %sub51, i32 %add47, !dbg !5719
  call void @llvm.dbg.value(metadata i32 %spec.select2, metadata !1924, metadata !DIExpression()), !dbg !5715
  %idxprom53 = sext i32 %spec.select2 to i64, !dbg !5720
  %arrayidx54 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_alloc_order, i64 0, i64 %idxprom53, !dbg !5720
  %11 = load i32, i32* %arrayidx54, align 4, !dbg !5720
  call void @llvm.dbg.value(metadata i32 %11, metadata !1928, metadata !DIExpression()), !dbg !5715
  %idxprom55 = sext i32 %11 to i64, !dbg !5721
  %arrayidx56 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom55, !dbg !5721
  %12 = load i8, i8* %arrayidx56, align 1, !dbg !5721
  %tobool = icmp eq i8 %12, 0, !dbg !5721
  br i1 %tobool, label %if.end58, label %cleanup, !dbg !5723

if.end58:                                         ; preds = %for.body
  %arrayidx60 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom55, !dbg !5724
  %13 = load i8, i8* %arrayidx60, align 1, !dbg !5724
  %tobool61 = icmp eq i8 %13, 0, !dbg !5724
  br i1 %tobool61, label %if.end63, label %cleanup, !dbg !5726

if.end63:                                         ; preds = %if.end58
  %14 = load i64, i64* %arrayidx65, align 8, !dbg !5727
  %sh_prom = zext i32 %11 to i64, !dbg !5727
  %shl = shl i64 1, %sh_prom, !dbg !5727
  %and = and i64 %14, %shl, !dbg !5727
  %tobool66 = icmp eq i64 %and, 0, !dbg !5727
  br i1 %tobool66, label %cleanup, label %if.end68, !dbg !5728

if.end68:                                         ; preds = %if.end63
  %call69 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %11, i32 %mode) #6, !dbg !5729
  %tobool70 = icmp eq i8 %call69, 0, !dbg !5729
  br i1 %tobool70, label %cleanup, label %if.end72, !dbg !5731

if.end72:                                         ; preds = %if.end68
  %arrayidx74 = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i64 0, i64 %idxprom55, !dbg !5732
  %15 = load i8, i8* %arrayidx74, align 1, !dbg !5732
  %tobool75 = icmp eq i8 %15, 0, !dbg !5732
  br i1 %tobool75, label %land.lhs.true, label %if.end79, !dbg !5734

land.lhs.true:                                    ; preds = %if.end72
  %call76 = call zeroext i8 @df_regs_ever_live_p(i32 %11) #6, !dbg !5735
  %tobool77 = icmp eq i8 %call76, 0, !dbg !5735
  br i1 %tobool77, label %cleanup, label %if.end79, !dbg !5736

if.end79:                                         ; preds = %land.lhs.true, %if.end72
  %16 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 100), align 8, !dbg !5737
  %call80 = call zeroext i8 %16(i32 %11) #6, !dbg !5739
  %tobool81 = icmp eq i8 %call80, 0, !dbg !5739
  br i1 %tobool81, label %cleanup, label %if.end83, !dbg !5740

if.end83:                                         ; preds = %if.end79
  switch i32 %11, label %if.end94 [
    i32 20, label %land.lhs.true88
    i32 6, label %land.lhs.true88
  ], !dbg !5741

land.lhs.true88:                                  ; preds = %if.end83, %if.end83
  %17 = load i32, i32* @reload_completed, align 4, !dbg !5743
  %tobool89 = icmp eq i32 %17, 0, !dbg !5743
  br i1 %tobool89, label %cleanup, label %lor.lhs.false90, !dbg !5744

lor.lhs.false90:                                  ; preds = %land.lhs.true88
  %18 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 41), align 1, !dbg !5745
  %tobool92 = icmp eq i8 %18, 0, !dbg !5745
  br i1 %tobool92, label %if.end94, label %cleanup, !dbg !5746

if.end94:                                         ; preds = %lor.lhs.false90, %if.end83
  call void @llvm.dbg.value(metadata i32 1, metadata !1929, metadata !DIExpression()), !dbg !5715
  %arrayidx98 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom55, i64 %idxprom97, !dbg !5747
  %19 = load i8, i8* %arrayidx98, align 1, !dbg !5747
  %conv99 = zext i8 %19 to i32, !dbg !5747
  call void @llvm.dbg.value(metadata i32 %conv99, metadata !1930, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5715
  %20 = load i64, i64* %live, align 8, !dbg !5748
  br label %for.cond101, !dbg !5752

for.cond101:                                      ; preds = %for.inc, %if.end94
  %j.0.in = phi i32 [ %conv99, %if.end94 ], [ %j.0, %for.inc ]
  %j.0 = add nsw i32 %j.0.in, -1, !dbg !5707
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !1930, metadata !DIExpression()), !dbg !5715
  %cmp102 = icmp sgt i32 %j.0.in, 0, !dbg !5753
  br i1 %cmp102, label %for.body104, label %for.end, !dbg !5754

for.body104:                                      ; preds = %for.cond101
  %21 = load i64, i64* %reg_set, align 8, !dbg !5755
  %add105 = add nsw i32 %11, %j.0, !dbg !5755
  %sh_prom106 = zext i32 %add105 to i64, !dbg !5755
  %shl107 = shl i64 1, %sh_prom106, !dbg !5755
  %and108 = and i64 %21, %shl107, !dbg !5755
  %tobool109 = icmp eq i64 %and108, 0, !dbg !5755
  br i1 %tobool109, label %lor.lhs.false110, label %for.end, !dbg !5756

lor.lhs.false110:                                 ; preds = %for.body104
  call void @llvm.dbg.value(metadata i64 %20, metadata !1920, metadata !DIExpression()), !dbg !5671
  %and114 = and i64 %20, %shl107, !dbg !5757
  %tobool115 = icmp eq i64 %and114, 0, !dbg !5757
  br i1 %tobool115, label %for.inc, label %for.end, !dbg !5758

for.inc:                                          ; preds = %lor.lhs.false110
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !1930, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5715
  br label %for.cond101, !dbg !5759, !llvm.loop !5760

for.end:                                          ; preds = %lor.lhs.false110, %for.body104, %for.cond101
  %success.0 = phi i1 [ true, %for.cond101 ], [ false, %lor.lhs.false110 ], [ false, %for.body104 ]
  br i1 %success.0, label %if.then119, label %cleanup, !dbg !5762

if.then119:                                       ; preds = %for.end
  call fastcc void @add_to_hard_reg_set(i64* %reg_set, i32 %mode, i32 %11) #7, !dbg !5763
  %inc120 = add nsw i32 %spec.select2, 1, !dbg !5766
  call void @llvm.dbg.value(metadata i32 %inc120, metadata !1924, metadata !DIExpression()), !dbg !5715
  %cmp121 = icmp sgt i32 %spec.select2, 51, !dbg !5768
  %spec.select3 = select i1 %cmp121, i32 0, i32 %inc120, !dbg !5769
  call void @llvm.dbg.value(metadata i32 %spec.select3, metadata !1924, metadata !DIExpression()), !dbg !5715
  store i32 %spec.select3, i32* @peep2_find_free_register.search_ofs, align 4, !dbg !5770
  %call125 = call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 %11) #6, !dbg !5771
  br label %cleanup, !dbg !5772

cleanup:                                          ; preds = %lor.lhs.false90, %land.lhs.true88, %if.end79, %land.lhs.true, %if.end68, %if.end63, %if.end58, %for.body, %for.end, %if.then119
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then119 ], [ 10, %for.body ], [ 10, %if.end58 ], [ 10, %if.end63 ], [ 10, %if.end68 ], [ 10, %land.lhs.true ], [ 10, %if.end79 ], [ 10, %lor.lhs.false90 ], [ 10, %land.lhs.true88 ], [ 0, %for.end ]
  %retval.1 = phi %struct.rtx_def* [ %call125, %if.then119 ], [ %retval.0, %for.body ], [ %retval.0, %if.end58 ], [ %retval.0, %if.end63 ], [ %retval.0, %if.end68 ], [ %retval.0, %land.lhs.true ], [ %retval.0, %if.end79 ], [ %retval.0, %lor.lhs.false90 ], [ %retval.0, %land.lhs.true88 ], [ %retval.0, %for.end ]
  switch i32 %cleanup.dest.slot.0, label %cleanup133.loopexit [
    i32 0, label %for.inc130
    i32 10, label %for.inc130
  ]

for.inc130:                                       ; preds = %cleanup, %cleanup
  %inc131 = add nuw nsw i32 %i.0, 1, !dbg !5773
  call void @llvm.dbg.value(metadata i32 %inc131, metadata !1921, metadata !DIExpression()), !dbg !5671
  br label %for.cond, !dbg !5774, !llvm.loop !5775

for.end132:                                       ; preds = %for.cond
  store i32 0, i32* @peep2_find_free_register.search_ofs, align 4, !dbg !5777
  br label %cleanup133, !dbg !5778

cleanup133.loopexit:                              ; preds = %cleanup
  %retval.1.lcssa = phi %struct.rtx_def* [ %retval.1, %cleanup ]
  br label %cleanup133, !dbg !5779

cleanup133:                                       ; preds = %cleanup133.loopexit, %for.end132
  %retval.2 = phi %struct.rtx_def* [ null, %for.end132 ], [ %retval.1.lcssa, %cleanup133.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5779
  ret %struct.rtx_def* %retval.2, !dbg !5779
}

declare dso_local void @reg_set_to_hard_reg_set(i64*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @ix86_hard_regno_mode_ok(i32, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @df_regs_ever_live_p(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @add_to_hard_reg_set(i64* %regs, i32 %mode, i32 %regno) unnamed_addr #0 !dbg !5780 {
entry:
  call void @llvm.dbg.value(metadata i64* %regs, metadata !5784, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5785, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5786, metadata !DIExpression()), !dbg !5788
  %call = tail call fastcc i32 @end_hard_regno(i32 %mode, i32 %regno) #7, !dbg !5789
  call void @llvm.dbg.value(metadata i32 %call, metadata !5787, metadata !DIExpression()), !dbg !5788
  %regs.promoted = load i64, i64* %regs, align 8, !dbg !5790
  br label %do.body, !dbg !5791

do.body:                                          ; preds = %do.body, %entry
  %0 = phi i64 [ %regs.promoted, %entry ], [ %or, %do.body ], !dbg !5788
  %regno.addr.0 = phi i32 [ %regno, %entry ], [ %inc, %do.body ]
  call void @llvm.dbg.value(metadata i32 %regno.addr.0, metadata !5786, metadata !DIExpression()), !dbg !5788
  %sh_prom = zext i32 %regno.addr.0 to i64, !dbg !5790
  %shl = shl i64 1, %sh_prom, !dbg !5790
  %or = or i64 %0, %shl, !dbg !5790
  %inc = add i32 %regno.addr.0, 1, !dbg !5792
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5786, metadata !DIExpression()), !dbg !5788
  %cmp = icmp ult i32 %inc, %call, !dbg !5793
  br i1 %cmp, label %do.body, label %do.end, !dbg !5790, !llvm.loop !5794

do.end:                                           ; preds = %do.body
  %or.lcssa = phi i64 [ %or, %do.body ], !dbg !5790
  store i64 %or.lcssa, i64* %regs, align 8, !dbg !5790
  ret void, !dbg !5796
}

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @store_data_bypass_p(%struct.rtx_def* %out_insn, %struct.rtx_def* %in_insn) local_unnamed_addr #5 !dbg !5797 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %out_insn, metadata !5801, metadata !DIExpression()), !dbg !5811
  call void @llvm.dbg.value(metadata %struct.rtx_def* %in_insn, metadata !5802, metadata !DIExpression()), !dbg !5811
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in_insn, i64 0, i32 0, !dbg !5812
  %bf.load = load i32, i32* %0, align 8, !dbg !5812
  %bf.clear = and i32 %bf.load, 65535, !dbg !5812
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5812
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !5812

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !5812
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !5812

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !5812
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !5812

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !5812
  br i1 %cmp11, label %cond.true, label %cond.end25, !dbg !5812

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in_insn, i64 0, i32 1, !dbg !5812
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5812
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !5812
  %3 = load i32*, i32** %2, align 8, !dbg !5812
  %bf.load12 = load i32, i32* %3, align 8, !dbg !5812
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !5812
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !5812
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !5812
  br i1 %cmp14, label %cond.end25, label %cond.false, !dbg !5812

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %in_insn, %struct.rtx_def* %4) #6, !dbg !5812
  br label %cond.end25, !dbg !5812

cond.end25:                                       ; preds = %lor.lhs.false8, %cond.false, %cond.true
  %cond26 = phi %struct.rtx_def* [ %call, %cond.false ], [ %4, %cond.true ], [ null, %lor.lhs.false8 ], !dbg !5812
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond26, metadata !5804, metadata !DIExpression()), !dbg !5811
  %tobool = icmp eq %struct.rtx_def* %cond26, null, !dbg !5813
  br i1 %tobool, label %if.else131, label %if.then, !dbg !5815

if.then:                                          ; preds = %cond.end25
  %arrayidx29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond26, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5816
  %5 = bitcast %union.rtunion_def* %arrayidx29 to i32**, !dbg !5816
  %6 = load i32*, i32** %5, align 8, !dbg !5816
  %bf.load31 = load i32, i32* %6, align 8, !dbg !5816
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !5816
  %cmp33 = icmp eq i32 %bf.clear32, 43, !dbg !5816
  br i1 %cmp33, label %if.end, label %cleanup, !dbg !5819

if.end:                                           ; preds = %if.then
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %out_insn, i64 0, i32 0, !dbg !5820
  %bf.load35 = load i32, i32* %7, align 8, !dbg !5820
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !5820
  %cmp37 = icmp eq i32 %bf.clear36, 8, !dbg !5820
  br i1 %cmp37, label %cond.true50, label %lor.lhs.false38, !dbg !5820

lor.lhs.false38:                                  ; preds = %if.end
  %cmp41 = icmp eq i32 %bf.clear36, 7, !dbg !5820
  br i1 %cmp41, label %cond.true50, label %lor.lhs.false42, !dbg !5820

lor.lhs.false42:                                  ; preds = %lor.lhs.false38
  %cmp45 = icmp eq i32 %bf.clear36, 9, !dbg !5820
  br i1 %cmp45, label %cond.true50, label %lor.lhs.false46, !dbg !5820

lor.lhs.false46:                                  ; preds = %lor.lhs.false42
  %cmp49 = icmp eq i32 %bf.clear36, 10, !dbg !5820
  br i1 %cmp49, label %cond.true50, label %cond.end72, !dbg !5820

cond.true50:                                      ; preds = %lor.lhs.false46, %lor.lhs.false42, %lor.lhs.false38, %if.end
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %out_insn, i64 0, i32 1, !dbg !5820
  %8 = getelementptr inbounds %union.u, %union.u* %u51, i64 1, i32 0, i32 0, i64 0, !dbg !5820
  %9 = bitcast %union.rtunion_def* %8 to i32**, !dbg !5820
  %10 = load i32*, i32** %9, align 8, !dbg !5820
  %bf.load55 = load i32, i32* %10, align 8, !dbg !5820
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !5820
  %cmp57 = icmp eq i32 %bf.clear56, 23, !dbg !5820
  %11 = bitcast i32* %10 to %struct.rtx_def*, !dbg !5820
  br i1 %cmp57, label %cond.end72, label %cond.false63, !dbg !5820

cond.false63:                                     ; preds = %cond.true50
  %call68 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %out_insn, %struct.rtx_def* %11) #6, !dbg !5820
  br label %cond.end72, !dbg !5820

cond.end72:                                       ; preds = %lor.lhs.false46, %cond.false63, %cond.true50
  %cond73 = phi %struct.rtx_def* [ %call68, %cond.false63 ], [ %11, %cond.true50 ], [ null, %lor.lhs.false46 ], !dbg !5820
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond73, metadata !5803, metadata !DIExpression()), !dbg !5811
  %tobool74 = icmp eq %struct.rtx_def* %cond73, null, !dbg !5821
  br i1 %tobool74, label %if.else, label %if.then75, !dbg !5823

if.then75:                                        ; preds = %cond.end72
  %arrayidx78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond73, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5824
  %rt_rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**, !dbg !5824
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !5824
  %rt_rtx83 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !5827
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx83, align 8, !dbg !5827
  %call84 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %12, %struct.rtx_def* %13) #6, !dbg !5828
  %tobool85 = icmp eq i32 %call84, 0, !dbg !5828
  br i1 %tobool85, label %if.end290, label %cleanup, !dbg !5829

if.else:                                          ; preds = %cond.end72
  %u88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %out_insn, i64 0, i32 1, !dbg !5830
  %14 = getelementptr inbounds %union.u, %union.u* %u88, i64 1, i32 0, i32 0, i64 0, !dbg !5830
  %rt_rtx91 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !5830
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx91, align 8, !dbg !5830
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !5805, metadata !DIExpression()), !dbg !5811
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 0, !dbg !5832
  %bf.load92 = load i32, i32* %16, align 8, !dbg !5832
  %bf.clear93 = and i32 %bf.load92, 65535, !dbg !5832
  %cmp94 = icmp eq i32 %bf.clear93, 15, !dbg !5834
  br i1 %cmp94, label %for.cond.preheader, label %cleanup, !dbg !5835

for.cond.preheader:                               ; preds = %if.else
  %arrayidx99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5836
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtvec_def**, !dbg !5836
  %rt_rtx125 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !5839
  br label %for.cond, !dbg !5842

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv6 = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next7, %for.inc ], !dbg !5843
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !5809, metadata !DIExpression()), !dbg !5811
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5844
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 0, !dbg !5844
  %18 = load i32, i32* %num_elem, align 8, !dbg !5844
  %19 = sext i32 %18 to i64, !dbg !5845
  %cmp100 = icmp slt i64 %indvars.iv6, %19, !dbg !5845
  br i1 %cmp100, label %for.body, label %if.end290.loopexit2, !dbg !5842

for.body:                                         ; preds = %for.cond
  %arrayidx105 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 1, i64 %indvars.iv6, !dbg !5846
  %20 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx105, align 8, !dbg !5846
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !5807, metadata !DIExpression()), !dbg !5811
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 0, !dbg !5847
  %bf.load106 = load i32, i32* %21, align 8, !dbg !5847
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !5847
  %cmp108 = icmp eq i32 %bf.clear107, 25, !dbg !5849
  br i1 %cmp108, label %for.inc, label %if.end110, !dbg !5850

if.end110:                                        ; preds = %for.body
  %cmp113 = icmp eq i32 %bf.clear107, 23, !dbg !5851
  br i1 %cmp113, label %cond.end116, label %cond.true114, !dbg !5851

cond.true114:                                     ; preds = %if.end110
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3389, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5851
  br label %cond.end116, !dbg !5851

cond.end116:                                      ; preds = %if.end110, %cond.true114
  %arrayidx120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5852
  %rt_rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**, !dbg !5852
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx121, align 8, !dbg !5852
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx125, align 8, !dbg !5853
  %call126 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %22, %struct.rtx_def* %23) #6, !dbg !5854
  %tobool127 = icmp eq i32 %call126, 0, !dbg !5854
  br i1 %tobool127, label %for.inc, label %cleanup.loopexit3, !dbg !5855

for.inc:                                          ; preds = %cond.end116, %for.body
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !5856
  call void @llvm.dbg.value(metadata i32 undef, metadata !5809, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5811
  br label %for.cond, !dbg !5857, !llvm.loop !5858

if.else131:                                       ; preds = %cond.end25
  %u132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in_insn, i64 0, i32 1, !dbg !5860
  %24 = getelementptr inbounds %union.u, %union.u* %u132, i64 1, i32 0, i32 0, i64 0, !dbg !5860
  %rt_rtx135 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !5860
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx135, align 8, !dbg !5860
  call void @llvm.dbg.value(metadata %struct.rtx_def* %25, metadata !5806, metadata !DIExpression()), !dbg !5811
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 0, !dbg !5862
  %bf.load136 = load i32, i32* %26, align 8, !dbg !5862
  %bf.clear137 = and i32 %bf.load136, 65535, !dbg !5862
  %cmp138 = icmp eq i32 %bf.clear137, 15, !dbg !5862
  br i1 %cmp138, label %cond.end141, label %cond.true139, !dbg !5862

cond.true139:                                     ; preds = %if.else131
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3399, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5862
  br label %cond.end141, !dbg !5862

cond.end141:                                      ; preds = %if.else131, %cond.true139
  call void @llvm.dbg.value(metadata i32 0, metadata !5809, metadata !DIExpression()), !dbg !5811
  %arrayidx146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5863
  %rt_rtvec147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtvec_def**, !dbg !5863
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %out_insn, i64 0, i32 0, !dbg !5866
  %u195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %out_insn, i64 0, i32 1, !dbg !5866
  %28 = getelementptr inbounds %union.u, %union.u* %u195, i64 1, i32 0, i32 0, i64 0, !dbg !5866
  %29 = bitcast %union.rtunion_def* %28 to i32**, !dbg !5866
  %rt_rtx206 = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !5866
  br label %for.cond143, !dbg !5868

for.cond143:                                      ; preds = %for.inc287, %cond.end141
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc287 ], [ 0, %cond.end141 ], !dbg !5869
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !5809, metadata !DIExpression()), !dbg !5811
  %30 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec147, align 8, !dbg !5870
  %num_elem148 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %30, i64 0, i32 0, !dbg !5870
  %31 = load i32, i32* %num_elem148, align 8, !dbg !5870
  %32 = sext i32 %31 to i64, !dbg !5871
  %cmp149 = icmp slt i64 %indvars.iv4, %32, !dbg !5871
  br i1 %cmp149, label %for.body150, label %if.end290.loopexit, !dbg !5872

for.body150:                                      ; preds = %for.cond143
  %arrayidx157 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %30, i64 0, i32 1, i64 %indvars.iv4, !dbg !5873
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx157, align 8, !dbg !5873
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !5808, metadata !DIExpression()), !dbg !5811
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i64 0, i32 0, !dbg !5874
  %bf.load158 = load i32, i32* %34, align 8, !dbg !5874
  %bf.clear159 = and i32 %bf.load158, 65535, !dbg !5874
  %cmp160 = icmp eq i32 %bf.clear159, 25, !dbg !5876
  br i1 %cmp160, label %for.inc287, label %if.end162, !dbg !5877

if.end162:                                        ; preds = %for.body150
  %cmp165 = icmp eq i32 %bf.clear159, 23, !dbg !5878
  br i1 %cmp165, label %cond.end168, label %cond.true166, !dbg !5878

cond.true166:                                     ; preds = %if.end162
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3408, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5878
  br label %cond.end168, !dbg !5878

cond.end168:                                      ; preds = %if.end162, %cond.true166
  %arrayidx172 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5879
  %35 = bitcast %union.rtunion_def* %arrayidx172 to i32**, !dbg !5879
  %36 = load i32*, i32** %35, align 8, !dbg !5879
  %bf.load174 = load i32, i32* %36, align 8, !dbg !5879
  %bf.clear175 = and i32 %bf.load174, 65535, !dbg !5879
  %cmp176 = icmp eq i32 %bf.clear175, 43, !dbg !5879
  br i1 %cmp176, label %if.end178, label %cleanup.loopexit1, !dbg !5881

if.end178:                                        ; preds = %cond.end168
  %bf.load179 = load i32, i32* %27, align 8, !dbg !5882
  %bf.clear180 = and i32 %bf.load179, 65535, !dbg !5882
  %cmp181 = icmp eq i32 %bf.clear180, 8, !dbg !5882
  br i1 %cmp181, label %cond.true194, label %lor.lhs.false182, !dbg !5882

lor.lhs.false182:                                 ; preds = %if.end178
  %cmp185 = icmp eq i32 %bf.clear180, 7, !dbg !5882
  br i1 %cmp185, label %cond.true194, label %lor.lhs.false186, !dbg !5882

lor.lhs.false186:                                 ; preds = %lor.lhs.false182
  %cmp189 = icmp eq i32 %bf.clear180, 9, !dbg !5882
  br i1 %cmp189, label %cond.true194, label %lor.lhs.false190, !dbg !5882

lor.lhs.false190:                                 ; preds = %lor.lhs.false186
  %cmp193 = icmp eq i32 %bf.clear180, 10, !dbg !5882
  br i1 %cmp193, label %cond.true194, label %cond.end216, !dbg !5882

cond.true194:                                     ; preds = %lor.lhs.false190, %lor.lhs.false186, %lor.lhs.false182, %if.end178
  %37 = load i32*, i32** %29, align 8, !dbg !5882
  %bf.load199 = load i32, i32* %37, align 8, !dbg !5882
  %bf.clear200 = and i32 %bf.load199, 65535, !dbg !5882
  %cmp201 = icmp eq i32 %bf.clear200, 23, !dbg !5882
  %38 = bitcast i32* %37 to %struct.rtx_def*, !dbg !5882
  br i1 %cmp201, label %cond.end216, label %cond.false207, !dbg !5882

cond.false207:                                    ; preds = %cond.true194
  %call212 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %out_insn, %struct.rtx_def* %38) #6, !dbg !5882
  br label %cond.end216, !dbg !5882

cond.end216:                                      ; preds = %lor.lhs.false190, %cond.false207, %cond.true194
  %cond217 = phi %struct.rtx_def* [ %call212, %cond.false207 ], [ %38, %cond.true194 ], [ null, %lor.lhs.false190 ], !dbg !5882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond217, metadata !5803, metadata !DIExpression()), !dbg !5811
  %tobool218 = icmp eq %struct.rtx_def* %cond217, null, !dbg !5883
  br i1 %tobool218, label %if.else232, label %if.then219, !dbg !5885

if.then219:                                       ; preds = %cond.end216
  %arrayidx222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond217, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5886
  %rt_rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**, !dbg !5886
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx223, align 8, !dbg !5886
  %rt_rtx227 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtx_def**, !dbg !5889
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx227, align 8, !dbg !5889
  %call228 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %39, %struct.rtx_def* %40) #6, !dbg !5890
  %tobool229 = icmp eq i32 %call228, 0, !dbg !5890
  br i1 %tobool229, label %for.inc287, label %cleanup.loopexit1, !dbg !5891

if.else232:                                       ; preds = %cond.end216
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx206, align 8, !dbg !5892
  call void @llvm.dbg.value(metadata %struct.rtx_def* %41, metadata !5805, metadata !DIExpression()), !dbg !5811
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i64 0, i32 0, !dbg !5894
  %bf.load237 = load i32, i32* %42, align 8, !dbg !5894
  %bf.clear238 = and i32 %bf.load237, 65535, !dbg !5894
  %cmp239 = icmp eq i32 %bf.clear238, 15, !dbg !5894
  br i1 %cmp239, label %cond.end242, label %cond.true240, !dbg !5894

cond.true240:                                     ; preds = %if.else232
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3422, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5894
  br label %cond.end242, !dbg !5894

cond.end242:                                      ; preds = %if.else232, %cond.true240
  call void @llvm.dbg.value(metadata i32 0, metadata !5810, metadata !DIExpression()), !dbg !5811
  %arrayidx247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5895
  %rt_rtvec248 = bitcast %union.rtunion_def* %arrayidx247 to %struct.rtvec_def**, !dbg !5895
  %rt_rtx278 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtx_def**, !dbg !5898
  br label %for.cond244, !dbg !5901

for.cond244:                                      ; preds = %for.inc283, %cond.end242
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc283 ], [ 0, %cond.end242 ], !dbg !5902
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5810, metadata !DIExpression()), !dbg !5811
  %43 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec248, align 8, !dbg !5903
  %num_elem249 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %43, i64 0, i32 0, !dbg !5903
  %44 = load i32, i32* %num_elem249, align 8, !dbg !5903
  %45 = sext i32 %44 to i64, !dbg !5904
  %cmp250 = icmp slt i64 %indvars.iv, %45, !dbg !5904
  br i1 %cmp250, label %for.body251, label %for.inc287.loopexit, !dbg !5905

for.body251:                                      ; preds = %for.cond244
  %arrayidx258 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %43, i64 0, i32 1, i64 %indvars.iv, !dbg !5906
  %46 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx258, align 8, !dbg !5906
  call void @llvm.dbg.value(metadata %struct.rtx_def* %46, metadata !5807, metadata !DIExpression()), !dbg !5811
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i64 0, i32 0, !dbg !5907
  %bf.load259 = load i32, i32* %47, align 8, !dbg !5907
  %bf.clear260 = and i32 %bf.load259, 65535, !dbg !5907
  %cmp261 = icmp eq i32 %bf.clear260, 25, !dbg !5909
  br i1 %cmp261, label %for.inc283, label %if.end263, !dbg !5910

if.end263:                                        ; preds = %for.body251
  %cmp266 = icmp eq i32 %bf.clear260, 23, !dbg !5911
  br i1 %cmp266, label %cond.end269, label %cond.true267, !dbg !5911

cond.true267:                                     ; preds = %if.end263
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3431, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5911
  br label %cond.end269, !dbg !5911

cond.end269:                                      ; preds = %if.end263, %cond.true267
  %arrayidx273 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5912
  %rt_rtx274 = bitcast %union.rtunion_def* %arrayidx273 to %struct.rtx_def**, !dbg !5912
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx274, align 8, !dbg !5912
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx278, align 8, !dbg !5913
  %call279 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %48, %struct.rtx_def* %49) #6, !dbg !5914
  %tobool280 = icmp eq i32 %call279, 0, !dbg !5914
  br i1 %tobool280, label %for.inc283, label %cleanup.loopexit, !dbg !5915

for.inc283:                                       ; preds = %cond.end269, %for.body251
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5916
  call void @llvm.dbg.value(metadata i32 undef, metadata !5810, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5811
  br label %for.cond244, !dbg !5917, !llvm.loop !5918

for.inc287.loopexit:                              ; preds = %for.cond244
  br label %for.inc287, !dbg !5920

for.inc287:                                       ; preds = %for.inc287.loopexit, %if.then219, %for.body150
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !5920
  call void @llvm.dbg.value(metadata i32 undef, metadata !5809, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5811
  br label %for.cond143, !dbg !5921, !llvm.loop !5922

if.end290.loopexit:                               ; preds = %for.cond143
  br label %if.end290, !dbg !5924

if.end290.loopexit2:                              ; preds = %for.cond
  br label %if.end290, !dbg !5924

if.end290:                                        ; preds = %if.end290.loopexit2, %if.end290.loopexit, %if.then75
  br label %cleanup, !dbg !5924

cleanup.loopexit:                                 ; preds = %cond.end269
  br label %cleanup, !dbg !5925

cleanup.loopexit1:                                ; preds = %cond.end168, %if.then219
  br label %cleanup, !dbg !5925

cleanup.loopexit3:                                ; preds = %cond.end116
  br label %cleanup, !dbg !5925

cleanup:                                          ; preds = %cleanup.loopexit3, %cleanup.loopexit1, %cleanup.loopexit, %if.then75, %if.else, %if.then, %if.end290
  %retval.0 = phi i32 [ 1, %if.end290 ], [ 0, %if.then ], [ 0, %if.then75 ], [ 0, %if.else ], [ 0, %cleanup.loopexit ], [ 0, %cleanup.loopexit1 ], [ 0, %cleanup.loopexit3 ], !dbg !5811
  ret i32 %retval.0, !dbg !5925
}

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @if_test_bypass_p(%struct.rtx_def* %out_insn, %struct.rtx_def* %in_insn) local_unnamed_addr #5 !dbg !5926 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %out_insn, metadata !5928, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.value(metadata %struct.rtx_def* %in_insn, metadata !5929, metadata !DIExpression()), !dbg !5940
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in_insn, i64 0, i32 0, !dbg !5941
  %bf.load = load i32, i32* %0, align 8, !dbg !5941
  %bf.clear = and i32 %bf.load, 65535, !dbg !5941
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5941
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !5941

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !5941
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !5941

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !5941
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !5941

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !5941
  br i1 %cmp11, label %cond.true, label %cond.end25, !dbg !5941

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in_insn, i64 0, i32 1, !dbg !5941
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5941
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !5941
  %3 = load i32*, i32** %2, align 8, !dbg !5941
  %bf.load12 = load i32, i32* %3, align 8, !dbg !5941
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !5941
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !5941
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !5941
  br i1 %cmp14, label %cond.end25, label %cond.false, !dbg !5941

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %in_insn, %struct.rtx_def* %4) #6, !dbg !5941
  br label %cond.end25, !dbg !5941

cond.end25:                                       ; preds = %lor.lhs.false8, %cond.false, %cond.true
  %cond26 = phi %struct.rtx_def* [ %call, %cond.false ], [ %4, %cond.true ], [ null, %lor.lhs.false8 ], !dbg !5941
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond26, metadata !5931, metadata !DIExpression()), !dbg !5940
  %tobool = icmp eq %struct.rtx_def* %cond26, null, !dbg !5942
  br i1 %tobool, label %if.then, label %if.end, !dbg !5944

if.then:                                          ; preds = %cond.end25
  %bf.load27 = load i32, i32* %0, align 8, !dbg !5945
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !5945
  %cmp29 = icmp eq i32 %bf.clear28, 9, !dbg !5945
  br i1 %cmp29, label %cleanup175, label %lor.lhs.false30, !dbg !5945

lor.lhs.false30:                                  ; preds = %if.then
  %cmp33 = icmp eq i32 %bf.clear28, 10, !dbg !5945
  br i1 %cmp33, label %cleanup175, label %cond.true34, !dbg !5945

cond.true34:                                      ; preds = %lor.lhs.false30
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3456, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5945
  br label %cleanup175, !dbg !5945

if.end:                                           ; preds = %cond.end25
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond26, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5947
  %6 = bitcast %union.rtunion_def* %5 to i32**, !dbg !5947
  %7 = load i32*, i32** %6, align 8, !dbg !5947
  %bf.load42 = load i32, i32* %7, align 8, !dbg !5947
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !5947
  %cmp44 = icmp eq i32 %bf.clear43, 47, !dbg !5949
  br i1 %cmp44, label %if.end46, label %cleanup175, !dbg !5950

if.end46:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32* %7, metadata !5931, metadata !DIExpression()), !dbg !5940
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %out_insn, i64 0, i32 0, !dbg !5951
  %bf.load51 = load i32, i32* %8, align 8, !dbg !5951
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !5951
  %cmp53 = icmp eq i32 %bf.clear52, 8, !dbg !5951
  br i1 %cmp53, label %cond.true66, label %lor.lhs.false54, !dbg !5951

lor.lhs.false54:                                  ; preds = %if.end46
  %cmp57 = icmp eq i32 %bf.clear52, 7, !dbg !5951
  br i1 %cmp57, label %cond.true66, label %lor.lhs.false58, !dbg !5951

lor.lhs.false58:                                  ; preds = %lor.lhs.false54
  %cmp61 = icmp eq i32 %bf.clear52, 9, !dbg !5951
  br i1 %cmp61, label %cond.true66, label %lor.lhs.false62, !dbg !5951

lor.lhs.false62:                                  ; preds = %lor.lhs.false58
  %cmp65 = icmp eq i32 %bf.clear52, 10, !dbg !5951
  br i1 %cmp65, label %cond.true66, label %cond.end88, !dbg !5951

cond.true66:                                      ; preds = %lor.lhs.false62, %lor.lhs.false58, %lor.lhs.false54, %if.end46
  %u67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %out_insn, i64 0, i32 1, !dbg !5951
  %9 = getelementptr inbounds %union.u, %union.u* %u67, i64 1, i32 0, i32 0, i64 0, !dbg !5951
  %10 = bitcast %union.rtunion_def* %9 to i32**, !dbg !5951
  %11 = load i32*, i32** %10, align 8, !dbg !5951
  %bf.load71 = load i32, i32* %11, align 8, !dbg !5951
  %bf.clear72 = and i32 %bf.load71, 65535, !dbg !5951
  %cmp73 = icmp eq i32 %bf.clear72, 23, !dbg !5951
  %12 = bitcast i32* %11 to %struct.rtx_def*, !dbg !5951
  br i1 %cmp73, label %cond.end88, label %cond.false79, !dbg !5951

cond.false79:                                     ; preds = %cond.true66
  %call84 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %out_insn, %struct.rtx_def* %12) #6, !dbg !5951
  br label %cond.end88, !dbg !5951

cond.end88:                                       ; preds = %lor.lhs.false62, %cond.false79, %cond.true66
  %cond89 = phi %struct.rtx_def* [ %call84, %cond.false79 ], [ %12, %cond.true66 ], [ null, %lor.lhs.false62 ], !dbg !5951
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond89, metadata !5930, metadata !DIExpression()), !dbg !5940
  %tobool90 = icmp eq %struct.rtx_def* %cond89, null, !dbg !5952
  br i1 %tobool90, label %if.else, label %if.then91, !dbg !5953

if.then91:                                        ; preds = %cond.end88
  %arrayidx94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond89, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5954
  %rt_rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**, !dbg !5954
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !5954
  %14 = getelementptr inbounds i32, i32* %7, i64 4, !dbg !5957
  %rt_rtx99 = bitcast i32* %14 to %struct.rtx_def**, !dbg !5957
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !5957
  %call100 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %13, %struct.rtx_def* %15) #6, !dbg !5958
  %tobool101 = icmp eq i32 %call100, 0, !dbg !5958
  br i1 %tobool101, label %lor.lhs.false102, label %cleanup175, !dbg !5959

lor.lhs.false102:                                 ; preds = %if.then91
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !5960
  %17 = getelementptr inbounds i32, i32* %7, i64 6, !dbg !5961
  %rt_rtx110 = bitcast i32* %17 to %struct.rtx_def**, !dbg !5961
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx110, align 8, !dbg !5961
  %call111 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %16, %struct.rtx_def* %18) #6, !dbg !5962
  %tobool112 = icmp eq i32 %call111, 0, !dbg !5962
  br i1 %tobool112, label %if.end174, label %cleanup175, !dbg !5963

if.else:                                          ; preds = %cond.end88
  %u115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %out_insn, i64 0, i32 1, !dbg !5964
  %19 = getelementptr inbounds %union.u, %union.u* %u115, i64 1, i32 0, i32 0, i64 0, !dbg !5964
  %rt_rtx118 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !5964
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx118, align 8, !dbg !5964
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !5932, metadata !DIExpression()), !dbg !5965
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 0, !dbg !5966
  %bf.load119 = load i32, i32* %21, align 8, !dbg !5966
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !5966
  %cmp121 = icmp eq i32 %bf.clear120, 15, !dbg !5966
  br i1 %cmp121, label %cond.end124, label %cond.true122, !dbg !5966

cond.true122:                                     ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3477, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5966
  br label %cond.end124, !dbg !5966

cond.end124:                                      ; preds = %if.else, %cond.true122
  call void @llvm.dbg.value(metadata i32 0, metadata !5935, metadata !DIExpression()), !dbg !5965
  %arrayidx128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5967
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtvec_def**, !dbg !5967
  %22 = getelementptr inbounds i32, i32* %7, i64 4, !dbg !5968
  %rt_rtx154 = bitcast i32* %22 to %struct.rtx_def**, !dbg !5968
  %23 = getelementptr inbounds i32, i32* %7, i64 6, !dbg !5968
  %rt_rtx165 = bitcast i32* %23 to %struct.rtx_def**, !dbg !5968
  br label %for.cond, !dbg !5970

for.cond:                                         ; preds = %for.inc, %cond.end124
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %cond.end124 ], !dbg !5971
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5935, metadata !DIExpression()), !dbg !5965
  %24 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5972
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %24, i64 0, i32 0, !dbg !5972
  %25 = load i32, i32* %num_elem, align 8, !dbg !5972
  %26 = sext i32 %25 to i64, !dbg !5973
  %cmp129 = icmp slt i64 %indvars.iv, %26, !dbg !5973
  br i1 %cmp129, label %for.body, label %cleanup170, !dbg !5974

for.body:                                         ; preds = %for.cond
  %arrayidx134 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %24, i64 0, i32 1, i64 %indvars.iv, !dbg !5975
  %27 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx134, align 8, !dbg !5975
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !5936, metadata !DIExpression()), !dbg !5976
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 0, !dbg !5977
  %bf.load135 = load i32, i32* %28, align 8, !dbg !5977
  %bf.clear136 = and i32 %bf.load135, 65535, !dbg !5977
  %cmp137 = icmp eq i32 %bf.clear136, 25, !dbg !5979
  br i1 %cmp137, label %cleanup, label %if.end139, !dbg !5980

if.end139:                                        ; preds = %for.body
  %cmp142 = icmp eq i32 %bf.clear136, 23, !dbg !5981
  br i1 %cmp142, label %cond.end145, label %cond.true143, !dbg !5981

cond.true143:                                     ; preds = %if.end139
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3486, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5981
  br label %cond.end145, !dbg !5981

cond.end145:                                      ; preds = %if.end139, %cond.true143
  %29 = load %struct.rtx_def*, %struct.rtx_def** inttoptr (i64 8 to %struct.rtx_def**), align 8, !dbg !5982
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx154, align 8, !dbg !5983
  %call155 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %29, %struct.rtx_def* %30) #6, !dbg !5984
  %tobool156 = icmp eq i32 %call155, 0, !dbg !5984
  br i1 %tobool156, label %lor.lhs.false157, label %cleanup, !dbg !5985

lor.lhs.false157:                                 ; preds = %cond.end145
  %31 = load %struct.rtx_def*, %struct.rtx_def** inttoptr (i64 8 to %struct.rtx_def**), align 8, !dbg !5986
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx165, align 8, !dbg !5987
  %call166 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %31, %struct.rtx_def* %32) #6, !dbg !5988
  %tobool167 = icmp ne i32 %call166, 0, !dbg !5988
  %spec.select = zext i1 %tobool167 to i32, !dbg !5989
  br label %cleanup, !dbg !5989

cleanup:                                          ; preds = %cond.end145, %lor.lhs.false157, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 4, %for.body ], [ 1, %cond.end145 ], [ %spec.select, %lor.lhs.false157 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup170 [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5990
  call void @llvm.dbg.value(metadata i32 undef, metadata !5935, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5965
  br label %for.cond, !dbg !5991, !llvm.loop !5992

cleanup170:                                       ; preds = %for.cond, %cleanup
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %for.cond ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %if.end174, label %cleanup175

if.end174:                                        ; preds = %lor.lhs.false102, %cleanup170
  br label %cleanup175, !dbg !5994

cleanup175:                                       ; preds = %lor.lhs.false102, %if.then91, %if.end, %cond.true34, %lor.lhs.false30, %if.then, %cleanup170, %if.end174
  %retval.3 = phi i32 [ 1, %if.end174 ], [ 0, %cleanup170 ], [ 0, %if.then ], [ 0, %lor.lhs.false30 ], [ 0, %cond.true34 ], [ 0, %if.end ], [ 0, %lor.lhs.false102 ], [ 0, %if.then91 ]
  ret i32 %retval.3, !dbg !5995
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_handle_peephole2() #5 !dbg !5996 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !5997
  %cmp = icmp sgt i32 %0, 0, !dbg !5998
  %1 = load i32, i32* @flag_peephole2, align 4, !dbg !5999
  %tobool = icmp ne i32 %1, 0, !dbg !5999
  %2 = and i1 %cmp, %tobool, !dbg !5999
  %conv = zext i1 %2 to i8, !dbg !6000
  ret i8 %conv, !dbg !6001
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_peephole2() #5 !dbg !6002 {
entry:
  tail call fastcc void @peephole2_optimize() #7, !dbg !6003
  ret i32 0, !dbg !6004
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_split_all_insns() #5 !dbg !6005 {
entry:
  tail call void @split_all_insns() #7, !dbg !6006
  ret i32 0, !dbg !6007
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_split_after_reload() #5 !dbg !6008 {
entry:
  tail call void @split_all_insns() #7, !dbg !6009
  ret i32 0, !dbg !6010
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_handle_split_before_regstack() #5 !dbg !6011 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !6012
  %tobool = icmp eq i32 %0, 0, !dbg !6012
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6013

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* @flag_schedule_insns_after_reload, align 4, !dbg !6014
  %tobool1 = icmp eq i32 %1, 0, !dbg !6015
  %phitmp = zext i1 %tobool1 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !6016
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_split_before_regstack() #5 !dbg !6017 {
entry:
  tail call void @split_all_insns() #7, !dbg !6018
  ret i32 0, !dbg !6019
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_handle_split_before_sched2() #5 !dbg !6020 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !6021
  %cmp = icmp sgt i32 %0, 0, !dbg !6022
  %1 = load i32, i32* @flag_schedule_insns_after_reload, align 4, !dbg !6023
  %tobool = icmp ne i32 %1, 0, !dbg !6023
  %2 = and i1 %cmp, %tobool, !dbg !6023
  %conv = zext i1 %2 to i8, !dbg !6021
  ret i8 %conv, !dbg !6024
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_split_before_sched2() #5 !dbg !6025 {
entry:
  tail call void @split_all_insns() #7, !dbg !6026
  ret i32 0, !dbg !6027
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_do_final_split() #5 !dbg !6028 {
entry:
  ret i8 0, !dbg !6029
}

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @simplify_while_replacing(%struct.rtx_def** %loc, %struct.rtx_def* %to, %struct.rtx_def* %object, i32 %op0_mode) unnamed_addr #5 !dbg !6030 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !6034, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !6035, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata %struct.rtx_def* %object, metadata !6036, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata i32 %op0_mode, metadata !6037, metadata !DIExpression()), !dbg !6057
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !6058
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !6038, metadata !DIExpression()), !dbg !6057
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !6059
  %bf.load = load i32, i32* %1, align 8, !dbg !6059
  %bf.clear = and i32 %bf.load, 65535, !dbg !6059
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6039, metadata !DIExpression()), !dbg !6057
  %idxprom = zext i32 %bf.clear to i64, !dbg !6060
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !6060
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6060
  %shl = shl i32 1, %2, !dbg !6060
  %and = and i32 %shl, 11, !dbg !6060
  %tobool = icmp eq i32 %and, 0, !dbg !6060
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6062

land.lhs.true:                                    ; preds = %entry
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6063
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !6063
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6063
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6064
  %rt_rtx7 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !6064
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !6064
  %call = tail call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %3, %struct.rtx_def* %5) #6, !dbg !6065
  %tobool8 = icmp eq i8 %call, 0, !dbg !6065
  br i1 %tobool8, label %if.end, label %if.then, !dbg !6066

if.then:                                          ; preds = %land.lhs.true
  %bf.load9 = load i32, i32* %1, align 8, !dbg !6067
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !6067
  %idxprom11 = zext i32 %bf.clear10 to i64, !dbg !6067
  %arrayidx12 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom11, !dbg !6067
  %6 = load i32, i32* %arrayidx12, align 4, !dbg !6067
  %cmp = icmp eq i32 %6, 3, !dbg !6067
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !6067

cond.false:                                       ; preds = %if.then
  %call14 = tail call i32 @swap_condition(i32 %bf.clear) #6, !dbg !6067
  %bf.load15.pre = load i32, i32* %1, align 8, !dbg !6067
  br label %cond.end, !dbg !6067

cond.end:                                         ; preds = %if.then, %cond.false
  %bf.load15 = phi i32 [ %bf.load15.pre, %cond.false ], [ %bf.load9, %if.then ], !dbg !6067
  %cond = phi i32 [ %call14, %cond.false ], [ %bf.clear, %if.then ], !dbg !6067
  %bf.lshr = lshr i32 %bf.load15, 16, !dbg !6067
  %bf.clear16 = and i32 %bf.lshr, 255, !dbg !6067
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !6067
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6067
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %cond, i32 %bf.clear16, %struct.rtx_def* %7, %struct.rtx_def* %8) #6, !dbg !6067
  %call26 = tail call zeroext i8 @validate_unshare_change(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %call25, i8 zeroext 1) #7, !dbg !6069
  %9 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !6070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !6038, metadata !DIExpression()), !dbg !6057
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 0, !dbg !6071
  %bf.load27 = load i32, i32* %10, align 8, !dbg !6071
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !6071
  call void @llvm.dbg.value(metadata i32 %bf.clear28, metadata !6039, metadata !DIExpression()), !dbg !6057
  br label %if.end, !dbg !6072

if.end:                                           ; preds = %land.lhs.true, %entry, %cond.end
  %x.0 = phi %struct.rtx_def* [ %9, %cond.end ], [ %0, %land.lhs.true ], [ %0, %entry ], !dbg !6057
  %code.0 = phi i32 [ %bf.clear28, %cond.end ], [ %bf.clear, %land.lhs.true ], [ %bf.clear, %entry ], !dbg !6057
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !6039, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !6038, metadata !DIExpression()), !dbg !6057
  %trunc = trunc i32 %code.0 to i16, !dbg !6073
  switch i16 %trunc, label %sw.epilog [
    i16 49, label %sw.bb
    i16 50, label %sw.bb59
    i16 99, label %sw.bb98
    i16 98, label %sw.bb98
    i16 39, label %sw.bb126
    i16 120, label %sw.bb159
    i16 119, label %sw.bb159
  ], !dbg !6073

sw.bb:                                            ; preds = %if.end
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6074
  %12 = bitcast %union.rtunion_def* %11 to i32**, !dbg !6074
  %13 = load i32*, i32** %12, align 8, !dbg !6074
  %bf.load33 = load i32, i32* %13, align 8, !dbg !6074
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !6074
  %cmp35 = icmp eq i32 %bf.clear34, 30, !dbg !6074
  br i1 %cmp35, label %land.lhs.true37, label %sw.epilog, !dbg !6076

land.lhs.true37:                                  ; preds = %sw.bb
  %14 = bitcast i32* %13 to %struct.rtx_def*, !dbg !6076
  %cmp42 = icmp eq %struct.rtx_def* %14, %to, !dbg !6077
  br i1 %cmp42, label %if.then44, label %sw.epilog, !dbg !6078

if.then44:                                        ; preds = %land.lhs.true37
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !6079
  %bf.load45 = load i32, i32* %15, align 8, !dbg !6079
  %bf.lshr46 = lshr i32 %bf.load45, 16, !dbg !6079
  %bf.clear47 = and i32 %bf.lshr46, 255, !dbg !6079
  %arrayidx50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6080
  %rt_rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !6080
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !6080
  %call56 = tail call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %bf.clear47, %struct.rtx_def* %16, %struct.rtx_def* %to) #6, !dbg !6081
  %call57 = tail call zeroext i8 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %call56, i8 zeroext 1) #7, !dbg !6082
  br label %sw.epilog, !dbg !6082

sw.bb59:                                          ; preds = %if.end
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6083
  %18 = bitcast %union.rtunion_def* %17 to i32**, !dbg !6083
  %19 = load i32*, i32** %18, align 8, !dbg !6083
  %bf.load64 = load i32, i32* %19, align 8, !dbg !6083
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !6083
  %cmp66 = icmp eq i32 %bf.clear65, 30, !dbg !6083
  %20 = bitcast i32* %19 to %struct.rtx_def*, !dbg !6085
  br i1 %cmp66, label %if.then76, label %lor.lhs.false, !dbg !6085

lor.lhs.false:                                    ; preds = %sw.bb59
  %cmp74 = icmp eq i32 %bf.clear65, 32, !dbg !6086
  br i1 %cmp74, label %if.then76, label %sw.epilog, !dbg !6087

if.then76:                                        ; preds = %lor.lhs.false, %sw.bb59
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !6088
  %bf.load77 = load i32, i32* %21, align 8, !dbg !6088
  %bf.lshr78 = lshr i32 %bf.load77, 16, !dbg !6088
  %bf.clear79 = and i32 %bf.lshr78, 255, !dbg !6088
  %arrayidx82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6089
  %rt_rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**, !dbg !6089
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx83, align 8, !dbg !6089
  %call94 = tail call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %bf.clear79, %struct.rtx_def* %20, i32 %bf.clear79) #6, !dbg !6090
  %call95 = tail call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %bf.clear79, %struct.rtx_def* %22, %struct.rtx_def* %call94) #6, !dbg !6091
  %call96 = tail call zeroext i8 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %call95, i8 zeroext 1) #7, !dbg !6092
  br label %sw.epilog, !dbg !6092

sw.bb98:                                          ; preds = %if.end, %if.end
  %arrayidx101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6093
  %23 = bitcast %union.rtunion_def* %arrayidx101 to i32**, !dbg !6093
  %24 = load i32*, i32** %23, align 8, !dbg !6093
  %bf.load103 = load i32, i32* %24, align 8, !dbg !6093
  %bf.clear105 = and i32 %bf.load103, 16711680, !dbg !6093
  %cmp106 = icmp eq i32 %bf.clear105, 0, !dbg !6095
  br i1 %cmp106, label %if.then108, label %sw.epilog, !dbg !6096

if.then108:                                       ; preds = %sw.bb98
  %25 = bitcast i32* %24 to %struct.rtx_def*, !dbg !6096
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !6097
  %bf.load109 = load i32, i32* %26, align 8, !dbg !6097
  %bf.lshr110 = lshr i32 %bf.load109, 16, !dbg !6097
  %bf.clear111 = and i32 %bf.lshr110, 255, !dbg !6097
  %call116 = tail call %struct.rtx_def* @simplify_gen_unary(i32 %code.0, i32 %bf.clear111, %struct.rtx_def* %25, i32 %op0_mode) #6, !dbg !6099
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call116, metadata !6040, metadata !DIExpression()), !dbg !6057
  %tobool117 = icmp eq %struct.rtx_def* %call116, null, !dbg !6100
  br i1 %tobool117, label %if.then118, label %if.end123, !dbg !6102

if.then118:                                       ; preds = %if.then108
  %bf.load119 = load i32, i32* %26, align 8, !dbg !6103
  %bf.lshr120 = lshr i32 %bf.load119, 16, !dbg !6103
  %bf.clear121 = and i32 %bf.lshr120, 255, !dbg !6103
  %27 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !6103
  %call122 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 %bf.clear121, %struct.rtx_def* %27) #6, !dbg !6103
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call122, metadata !6040, metadata !DIExpression()), !dbg !6057
  br label %if.end123, !dbg !6104

if.end123:                                        ; preds = %if.then108, %if.then118
  %new_rtx.0 = phi %struct.rtx_def* [ %call116, %if.then108 ], [ %call122, %if.then118 ], !dbg !6105
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.0, metadata !6040, metadata !DIExpression()), !dbg !6057
  %call124 = tail call zeroext i8 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %new_rtx.0, i8 zeroext 1) #7, !dbg !6106
  br label %sw.epilog, !dbg !6107

sw.bb126:                                         ; preds = %if.end
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !6108
  %bf.load127 = load i32, i32* %28, align 8, !dbg !6108
  %bf.lshr128 = lshr i32 %bf.load127, 16, !dbg !6108
  %bf.clear129 = and i32 %bf.lshr128, 255, !dbg !6108
  %arrayidx132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6109
  %rt_rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**, !dbg !6109
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx133, align 8, !dbg !6109
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6110
  %rt_uint = bitcast %union.rtunion_def* %30 to i32*, !dbg !6110
  %31 = load i32, i32* %rt_uint, align 8, !dbg !6110
  %call137 = tail call %struct.rtx_def* @simplify_subreg(i32 %bf.clear129, %struct.rtx_def* %29, i32 %op0_mode, i32 %31) #6, !dbg !6111
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call137, metadata !6040, metadata !DIExpression()), !dbg !6057
  %tobool138 = icmp eq %struct.rtx_def* %call137, null, !dbg !6112
  br i1 %tobool138, label %land.lhs.true139, label %if.end154, !dbg !6114

land.lhs.true139:                                 ; preds = %sw.bb126
  %32 = bitcast %union.rtunion_def* %arrayidx132 to i32**, !dbg !6115
  %33 = load i32*, i32** %32, align 8, !dbg !6115
  %bf.load144 = load i32, i32* %33, align 8, !dbg !6115
  %bf.clear146 = and i32 %bf.load144, 16711680, !dbg !6115
  %cmp147 = icmp eq i32 %bf.clear146, 0, !dbg !6116
  br i1 %cmp147, label %if.then149, label %if.end154, !dbg !6117

if.then149:                                       ; preds = %land.lhs.true139
  %bf.load150 = load i32, i32* %28, align 8, !dbg !6118
  %bf.lshr151 = lshr i32 %bf.load150, 16, !dbg !6118
  %bf.clear152 = and i32 %bf.lshr151, 255, !dbg !6118
  %34 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !6118
  %call153 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 %bf.clear152, %struct.rtx_def* %34) #6, !dbg !6118
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call153, metadata !6040, metadata !DIExpression()), !dbg !6057
  br label %if.end154, !dbg !6119

if.end154:                                        ; preds = %sw.bb126, %if.then149, %land.lhs.true139
  %new_rtx.1 = phi %struct.rtx_def* [ %call137, %sw.bb126 ], [ %call153, %if.then149 ], [ null, %land.lhs.true139 ], !dbg !6120
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.1, metadata !6040, metadata !DIExpression()), !dbg !6057
  %tobool155 = icmp eq %struct.rtx_def* %new_rtx.1, null, !dbg !6121
  br i1 %tobool155, label %sw.epilog, label %if.then156, !dbg !6123

if.then156:                                       ; preds = %if.end154
  %call157 = tail call zeroext i8 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* nonnull %new_rtx.1, i8 zeroext 1) #7, !dbg !6124
  br label %sw.epilog, !dbg !6124

sw.bb159:                                         ; preds = %if.end, %if.end
  %arrayidx162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6125
  %35 = bitcast %union.rtunion_def* %arrayidx162 to i32**, !dbg !6125
  %36 = load i32*, i32** %35, align 8, !dbg !6125
  %bf.load164 = load i32, i32* %36, align 8, !dbg !6125
  %bf.clear165 = and i32 %bf.load164, 65535, !dbg !6125
  %cmp166 = icmp eq i32 %bf.clear165, 43, !dbg !6125
  br i1 %cmp166, label %land.lhs.true168, label %sw.epilog, !dbg !6126

land.lhs.true168:                                 ; preds = %sw.bb159
  %37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6127
  %38 = bitcast %union.rtunion_def* %37 to i32**, !dbg !6127
  %39 = load i32*, i32** %38, align 8, !dbg !6127
  %bf.load173 = load i32, i32* %39, align 8, !dbg !6127
  %bf.clear174 = and i32 %bf.load173, 65535, !dbg !6127
  %cmp175 = icmp eq i32 %bf.clear174, 30, !dbg !6127
  br i1 %cmp175, label %land.lhs.true177, label %sw.epilog, !dbg !6128

land.lhs.true177:                                 ; preds = %land.lhs.true168
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6129
  %41 = bitcast %union.rtunion_def* %40 to i32**, !dbg !6129
  %42 = load i32*, i32** %41, align 8, !dbg !6129
  %bf.load182 = load i32, i32* %42, align 8, !dbg !6129
  %bf.clear183 = and i32 %bf.load182, 65535, !dbg !6129
  %cmp184 = icmp eq i32 %bf.clear183, 30, !dbg !6129
  br i1 %cmp184, label %land.lhs.true186, label %sw.epilog, !dbg !6130

land.lhs.true186:                                 ; preds = %land.lhs.true177
  %rt_rtx190 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**, !dbg !6131
  %arrayidx193 = getelementptr inbounds i32, i32* %36, i64 2, !dbg !6131
  %rt_rtx194 = bitcast i32* %arrayidx193 to %struct.rtx_def**, !dbg !6131
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx194, align 8, !dbg !6131
  %call195 = tail call i32 @mode_dependent_address_p(%struct.rtx_def* %43) #7, !dbg !6132
  %tobool196 = icmp eq i32 %call195, 0, !dbg !6132
  br i1 %tobool196, label %land.lhs.true197, label %sw.epilog, !dbg !6133

land.lhs.true197:                                 ; preds = %land.lhs.true186
  %44 = load i32*, i32** %35, align 8, !dbg !6134
  %bf.load202 = load i32, i32* %44, align 8, !dbg !6134
  %bf.clear204 = and i32 %bf.load202, 134217728, !dbg !6134
  %tobool205 = icmp eq i32 %bf.clear204, 0, !dbg !6134
  br i1 %tobool205, label %if.then206, label %sw.epilog, !dbg !6135

if.then206:                                       ; preds = %land.lhs.true197
  call void @llvm.dbg.value(metadata i32 0, metadata !6041, metadata !DIExpression()), !dbg !6136
  %bf.lshr212 = lshr i32 %bf.load202, 16, !dbg !6137
  %bf.clear213 = and i32 %bf.lshr212, 255, !dbg !6137
  call void @llvm.dbg.value(metadata i32 %bf.clear213, metadata !6045, metadata !DIExpression()), !dbg !6136
  %rt_rtx217 = bitcast %union.rtunion_def* %40 to %struct.rtx_def**, !dbg !6138
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx217, align 8, !dbg !6138
  %u218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i64 0, i32 1, !dbg !6138
  %arrayidx219 = bitcast %union.u* %u218 to i64*, !dbg !6138
  %46 = load i64, i64* %arrayidx219, align 8, !dbg !6138
  %conv220 = trunc i64 %46 to i32, !dbg !6138
  call void @llvm.dbg.value(metadata i32 %conv220, metadata !6046, metadata !DIExpression()), !dbg !6136
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !6139
  %bf.load221 = load i32, i32* %47, align 8, !dbg !6139
  %bf.clear222 = and i32 %bf.load221, 65535, !dbg !6139
  %cmp223 = icmp eq i32 %bf.clear222, 120, !dbg !6140
  br i1 %cmp223, label %if.then225, label %if.else, !dbg !6141

if.then225:                                       ; preds = %if.then206
  %call226 = tail call i32 @mode_for_extraction(i32 2, i32 1) #6, !dbg !6142
  call void @llvm.dbg.value(metadata i32 %call226, metadata !6047, metadata !DIExpression()), !dbg !6143
  %cmp227 = icmp eq i32 %call226, 87, !dbg !6144
  %spec.select = select i1 %cmp227, i32 0, i32 %call226, !dbg !6146
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6041, metadata !DIExpression()), !dbg !6136
  br label %if.end243, !dbg !6147

if.else:                                          ; preds = %if.then206
  %cmp233 = icmp eq i32 %bf.clear222, 119, !dbg !6148
  br i1 %cmp233, label %if.then235, label %if.end243, !dbg !6149

if.then235:                                       ; preds = %if.else
  %call237 = tail call i32 @mode_for_extraction(i32 1, i32 1) #6, !dbg !6150
  call void @llvm.dbg.value(metadata i32 %call237, metadata !6050, metadata !DIExpression()), !dbg !6151
  %cmp238 = icmp eq i32 %call237, 87, !dbg !6152
  %spec.select1 = select i1 %cmp238, i32 0, i32 %call237, !dbg !6154
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !6041, metadata !DIExpression()), !dbg !6136
  br label %if.end243, !dbg !6155

if.end243:                                        ; preds = %if.else, %if.then235, %if.then225
  %wanted_mode.3 = phi i32 [ %spec.select, %if.then225 ], [ %spec.select1, %if.then235 ], [ 0, %if.else ], !dbg !6156
  call void @llvm.dbg.value(metadata i32 %wanted_mode.3, metadata !6041, metadata !DIExpression()), !dbg !6136
  %cmp244 = icmp eq i32 %wanted_mode.3, 0, !dbg !6157
  br i1 %cmp244, label %sw.epilog, label %land.lhs.true246, !dbg !6158

land.lhs.true246:                                 ; preds = %if.end243
  %idxprom247 = zext i32 %wanted_mode.3 to i64, !dbg !6159
  %arrayidx248 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom247, !dbg !6159
  %48 = load i8, i8* %arrayidx248, align 1, !dbg !6159
  %idxprom251 = zext i32 %bf.clear213 to i64, !dbg !6160
  %arrayidx252 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom251, !dbg !6160
  %49 = load i8, i8* %arrayidx252, align 1, !dbg !6160
  %cmp255 = icmp ult i8 %48, %49, !dbg !6161
  br i1 %cmp255, label %if.then257, label %sw.epilog, !dbg !6162

if.then257:                                       ; preds = %land.lhs.true246
  %div = sdiv i32 %conv220, 8, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %div, metadata !6053, metadata !DIExpression()), !dbg !6164
  %conv261 = zext i8 %48 to i32, !dbg !6165
  %mul = shl nuw nsw i32 %conv261, 3, !dbg !6165
  %rem = srem i32 %conv220, %mul, !dbg !6166
  call void @llvm.dbg.value(metadata i32 %rem, metadata !6046, metadata !DIExpression()), !dbg !6136
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx190, align 8, !dbg !6167
  %conv268 = sext i32 %div to i64, !dbg !6167
  %call269 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %50, i32 %wanted_mode.3, i64 %conv268, i32 0, i32 1) #6, !dbg !6167
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call269, metadata !6056, metadata !DIExpression()), !dbg !6164
  %conv274 = sext i32 %rem to i64, !dbg !6168
  %call275 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv274) #6, !dbg !6168
  %call276 = tail call zeroext i8 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** nonnull %rt_rtx217, %struct.rtx_def* %call275, i8 zeroext 1) #7, !dbg !6169
  %call281 = tail call zeroext i8 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** nonnull %rt_rtx190, %struct.rtx_def* %call269, i8 zeroext 1) #7, !dbg !6170
  br label %sw.epilog, !dbg !6171

sw.epilog:                                        ; preds = %if.end154, %if.end243, %land.lhs.true197, %land.lhs.true186, %if.end, %sw.bb159, %land.lhs.true168, %land.lhs.true177, %if.then257, %land.lhs.true246, %if.then156, %sw.bb98, %if.end123, %lor.lhs.false, %if.then76, %sw.bb, %land.lhs.true37, %if.then44
  ret void, !dbg !6172
}

declare dso_local i32 @swap_condition(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @simplify_gen_binary(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @simplify_gen_unary(i32, i32, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @simplify_subreg(i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local i32 @mode_for_extraction(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @end_hard_regno(i32 %mode, i32 %regno) unnamed_addr #0 !dbg !6173 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6177, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.value(metadata i32 %regno, metadata !6178, metadata !DIExpression()), !dbg !6179
  %idxprom = zext i32 %regno to i64, !dbg !6180
  %idxprom1 = sext i32 %mode to i64, !dbg !6180
  %arrayidx2 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom1, !dbg !6180
  %0 = load i8, i8* %arrayidx2, align 1, !dbg !6180
  %conv = zext i8 %0 to i32, !dbg !6180
  %add = add i32 %conv, %regno, !dbg !6181
  ret i32 %add, !dbg !6182
}

declare dso_local %struct.rtx_def* @try_split(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @set_insn_deleted(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @cleanup_subreg_operands(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @peephole2_optimize() unnamed_addr #5 !dbg !6183 {
entry:
  %match_len = alloca i32, align 4
  %eh_edge = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !6190, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 0, metadata !6191, metadata !DIExpression()), !dbg !6233
  %call = tail call i32 @df_set_flags(i32 1) #6, !dbg !6234
  tail call void @df_analyze() #6, !dbg !6235
  call void @llvm.dbg.value(metadata i32 0, metadata !6188, metadata !DIExpression()), !dbg !6233
  br label %for.cond, !dbg !6236

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv21 = phi i64 [ %indvars.iv.next22, %for.body ], [ 0, %entry ], !dbg !6238
  call void @llvm.dbg.value(metadata i64 %indvars.iv21, metadata !6188, metadata !DIExpression()), !dbg !6233
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @reg_obstack) #6, !dbg !6233
  %exitcond23 = icmp eq i64 %indvars.iv21, 5, !dbg !6239
  br i1 %exitcond23, label %for.end, label %for.body, !dbg !6241

for.body:                                         ; preds = %for.cond
  %live_before = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %indvars.iv21, i32 1, !dbg !6242
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** %live_before, align 8, !dbg !6243
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1, !dbg !6244
  call void @llvm.dbg.value(metadata i32 undef, metadata !6188, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6233
  br label %for.cond, !dbg !6245, !llvm.loop !6246

for.end:                                          ; preds = %for.cond
  %call1.lcssa = phi %struct.bitmap_head_def* [ %call1, %for.cond ], !dbg !6233
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1.lcssa, metadata !6187, metadata !DIExpression()), !dbg !6233
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6248
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !6248
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6248
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !6248
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6248
  %3 = bitcast i32* %match_len to i8*, !dbg !6249
  %4 = bitcast %struct.edge_def** %eh_edge to i8*, !dbg !6250
  %5 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6250
  %6 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6251
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6251
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6251
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6253
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6253
  br label %for.cond3, !dbg !6248

for.cond3:                                        ; preds = %for.inc340, %for.end
  %11 = phi %struct.control_flow_graph* [ %1, %for.end ], [ %.pre12, %for.inc340 ], !dbg !6255
  %do_rebuild_jump_labels.0 = phi i8 [ 0, %for.end ], [ %do_rebuild_jump_labels.4.lcssa, %for.inc340 ], !dbg !6256
  %.pn = phi %struct.basic_block_def* [ %2, %for.end ], [ %bb.7.lcssa, %for.inc340 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 5, !dbg !6257
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !6257
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !6189, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %do_rebuild_jump_labels.0, metadata !6191, metadata !DIExpression()), !dbg !6233
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 0, !dbg !6255
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6255
  %cmp6 = icmp eq %struct.basic_block_def* %bb.0, %12, !dbg !6255
  br i1 %cmp6, label %for.end342, label %for.body7, !dbg !6248

for.body7:                                        ; preds = %for.cond3
  call void @rtl_profile_for_bb(%struct.basic_block_def* %bb.0) #6, !dbg !6258
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !6259
  %13 = load i32, i32* %index, align 8, !dbg !6259
  %call8 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %13) #7, !dbg !6259
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call8, i64 0, i32 3, !dbg !6259
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !6259
  call void @bitmap_copy(%struct.bitmap_head_def* %call1.lcssa, %struct.bitmap_head_def* %14) #6, !dbg !6260
  call void @df_simulate_initialize_backwards(%struct.basic_block_def* %bb.0, %struct.bitmap_head_def* %call1.lcssa) #6, !dbg !6261
  call fastcc void @peep2_reinit_state(%struct.bitmap_head_def* %call1.lcssa) #7, !dbg !6262
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !6263
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6263
  %15 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6263
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %15, i64 0, i32 1, !dbg !6263
  %16 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6263
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !6185, metadata !DIExpression()), !dbg !6233
  br label %for.cond9, !dbg !6264

for.cond9:                                        ; preds = %if.end331, %for.body7
  %do_rebuild_jump_labels.1 = phi i8 [ %do_rebuild_jump_labels.0, %for.body7 ], [ %do_rebuild_jump_labels.4, %if.end331 ], !dbg !6256
  %bb.1 = phi %struct.basic_block_def* [ %bb.0, %for.body7 ], [ %bb.7, %if.end331 ], !dbg !6248
  %insn.0 = phi %struct.rtx_def* [ %16, %for.body7 ], [ %18, %if.end331 ], !dbg !6265
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6185, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !6189, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %do_rebuild_jump_labels.1, metadata !6191, metadata !DIExpression()), !dbg !6233
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6266
  %rt_rtx = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !6266
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6266
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !6186, metadata !DIExpression()), !dbg !6233
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6267
  %bf.load = load i32, i32* %19, align 8, !dbg !6267
  %bf.clear = and i32 %bf.load, 65535, !dbg !6267
  %cmp11 = icmp eq i32 %bf.clear, 8, !dbg !6267
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false, !dbg !6267

lor.lhs.false:                                    ; preds = %for.cond9
  %cmp14 = icmp eq i32 %bf.clear, 7, !dbg !6267
  br i1 %cmp14, label %land.lhs.true, label %lor.lhs.false15, !dbg !6267

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %cmp18 = icmp eq i32 %bf.clear, 9, !dbg !6267
  br i1 %cmp18, label %land.lhs.true, label %lor.lhs.false19, !dbg !6267

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %cmp22 = icmp eq i32 %bf.clear, 10, !dbg !6267
  br i1 %cmp22, label %land.lhs.true, label %if.end331, !dbg !6267

land.lhs.true:                                    ; preds = %lor.lhs.false19, %lor.lhs.false15, %lor.lhs.false, %for.cond9
  %cmp25 = icmp eq i32 %bf.clear, 7, !dbg !6267
  br i1 %cmp25, label %if.end331, label %if.then, !dbg !6268

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !6269
  call void @llvm.dbg.value(metadata i8 0, metadata !6205, metadata !DIExpression()), !dbg !6249
  %20 = load i32, i32* @peep2_current, align 4, !dbg !6270
  %dec = add nsw i32 %20, -1, !dbg !6270
  %cmp26 = icmp slt i32 %20, 1, !dbg !6272
  %spec.store.select = select i1 %cmp26, i32 4, i32 %dec, !dbg !6273
  store i32 %spec.store.select, i32* @peep2_current, align 4, !dbg !6249
  %21 = load i32, i32* @peep2_current_count, align 4, !dbg !6274
  %cmp28 = icmp slt i32 %21, 4, !dbg !6276
  br i1 %cmp28, label %land.lhs.true29, label %if.then.if.end36_crit_edge, !dbg !6277

if.then.if.end36_crit_edge:                       ; preds = %if.then
  %.pre14 = sext i32 %spec.store.select to i64, !dbg !6278
  br label %if.end36, !dbg !6277

land.lhs.true29:                                  ; preds = %if.then
  %idxprom30 = sext i32 %spec.store.select to i64, !dbg !6279
  %insn32 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom30, i32 0, !dbg !6280
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn32, align 16, !dbg !6280
  %cmp33 = icmp eq %struct.rtx_def* %22, null, !dbg !6281
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !6282

if.then34:                                        ; preds = %land.lhs.true29
  %inc35 = add nsw i32 %21, 1, !dbg !6283
  store i32 %inc35, i32* @peep2_current_count, align 4, !dbg !6283
  br label %if.end36, !dbg !6284

if.end36:                                         ; preds = %if.then.if.end36_crit_edge, %if.then34, %land.lhs.true29
  %idxprom37.pre-phi = phi i64 [ %.pre14, %if.then.if.end36_crit_edge ], [ %idxprom30, %if.then34 ], [ %idxprom30, %land.lhs.true29 ], !dbg !6278
  %insn39 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom37.pre-phi, i32 0, !dbg !6285
  store %struct.rtx_def* %insn.0, %struct.rtx_def** %insn39, align 16, !dbg !6286
  call void @df_simulate_one_insn_backwards(%struct.basic_block_def* %bb.1, %struct.rtx_def* %insn.0, %struct.bitmap_head_def* %call1.lcssa) #6, !dbg !6287
  %23 = load i32, i32* @peep2_current, align 4, !dbg !6288
  %idxprom40 = sext i32 %23 to i64, !dbg !6288
  %live_before42 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom40, i32 1, !dbg !6288
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before42, align 8, !dbg !6288
  call void @bitmap_copy(%struct.bitmap_head_def* %24, %struct.bitmap_head_def* %call1.lcssa) #6, !dbg !6288
  %bf.load43 = load i32, i32* %19, align 8, !dbg !6289
  %bf.clear44 = and i32 %bf.load43, 1073741824, !dbg !6289
  %tobool = icmp eq i32 %bf.clear44, 0, !dbg !6289
  br i1 %tobool, label %if.else, label %if.then45, !dbg !6291

if.then45:                                        ; preds = %if.end36
  call fastcc void @peep2_reinit_state(%struct.bitmap_head_def* %call1.lcssa) #7, !dbg !6292
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6192, metadata !DIExpression()), !dbg !6249
  br label %if.end51, !dbg !6294

if.else:                                          ; preds = %if.end36
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !6295
  %25 = getelementptr inbounds %union.u, %union.u* %u46, i64 1, i32 0, i32 0, i64 0, !dbg !6295
  %rt_rtx49 = bitcast %union.rtunion_def* %25 to %struct.rtx_def**, !dbg !6295
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49, align 8, !dbg !6295
  call void @llvm.dbg.value(metadata i32* %match_len, metadata !6203, metadata !DIExpression(DW_OP_deref)), !dbg !6249
  %call50 = call %struct.rtx_def* @peephole2_insns(%struct.rtx_def* %26, %struct.rtx_def* %insn.0, i32* nonnull %match_len) #6, !dbg !6296
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50, metadata !6192, metadata !DIExpression()), !dbg !6249
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then45
  %attempt.0 = phi %struct.rtx_def* [ null, %if.then45 ], [ %call50, %if.else ], !dbg !6297
  call void @llvm.dbg.value(metadata %struct.rtx_def* %attempt.0, metadata !6192, metadata !DIExpression()), !dbg !6249
  %cmp52 = icmp eq %struct.rtx_def* %attempt.0, null, !dbg !6298
  br i1 %cmp52, label %if.end330, label %for.cond54.preheader, !dbg !6299

for.cond54.preheader:                             ; preds = %if.end51
  %.pre13 = load i32, i32* %match_len, align 4, !dbg !6300
  br label %for.cond54, !dbg !6301

for.cond54:                                       ; preds = %for.cond54.preheader, %for.inc134
  %27 = phi i32 [ %45, %for.inc134 ], [ %.pre13, %for.cond54.preheader ], !dbg !6300
  %was_call.0 = phi i8 [ %was_call.1, %for.inc134 ], [ 0, %for.cond54.preheader ], !dbg !6249
  %i.1 = phi i32 [ %inc135, %for.inc134 ], [ 0, %for.cond54.preheader ], !dbg !6302
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6188, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %was_call.0, metadata !6205, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.value(metadata i32 %27, metadata !6203, metadata !DIExpression()), !dbg !6249
  %cmp55 = icmp sgt i32 %i.1, %27, !dbg !6303
  br i1 %cmp55, label %for.end136, label %for.body56, !dbg !6301

for.body56:                                       ; preds = %for.cond54
  %28 = load i32, i32* @peep2_current, align 4, !dbg !6304
  %add = add nsw i32 %i.1, %28, !dbg !6305
  call void @llvm.dbg.value(metadata i32 %add, metadata !6206, metadata !DIExpression()), !dbg !6306
  %cmp58 = icmp sgt i32 %add, 4, !dbg !6307
  %sub = add nsw i32 %add, -5, !dbg !6309
  %spec.select = select i1 %cmp58, i32 %sub, i32 %add, !dbg !6310
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6206, metadata !DIExpression()), !dbg !6306
  %idxprom61 = sext i32 %spec.select to i64, !dbg !6311
  %insn63 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom61, i32 0, !dbg !6312
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn63, align 16, !dbg !6312
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !6212, metadata !DIExpression()), !dbg !6306
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 0, !dbg !6313
  %bf.load64 = load i32, i32* %30, align 8, !dbg !6313
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !6313
  %cmp66 = icmp eq i32 %bf.clear65, 10, !dbg !6313
  br i1 %cmp66, label %while.cond.preheader, label %cleanup, !dbg !6315

while.cond.preheader:                             ; preds = %for.body56
  br label %while.cond, !dbg !6316

while.cond:                                       ; preds = %while.cond.preheader, %if.end74
  %new_insn.0 = phi %struct.rtx_def* [ %33, %if.end74 ], [ %attempt.0, %while.cond.preheader ], !dbg !6306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insn.0, metadata !6213, metadata !DIExpression()), !dbg !6306
  %cond6 = icmp eq %struct.rtx_def* %new_insn.0, null, !dbg !6316
  br i1 %cond6, label %cond.true.loopexit, label %while.body, !dbg !6316

while.body:                                       ; preds = %while.cond
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_insn.0, i64 0, i32 0, !dbg !6317
  %bf.load70 = load i32, i32* %31, align 8, !dbg !6317
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !6317
  %cmp72 = icmp eq i32 %bf.clear71, 10, !dbg !6317
  br i1 %cmp72, label %while.end, label %if.end74, !dbg !6320

if.end74:                                         ; preds = %while.body
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6321
  %rt_rtx78 = bitcast %union.rtunion_def* %32 to %struct.rtx_def**, !dbg !6321
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !6321
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !6213, metadata !DIExpression()), !dbg !6306
  br label %while.cond, !dbg !6316, !llvm.loop !6322

while.end:                                        ; preds = %while.body
  %new_insn.0.lcssa24 = phi %struct.rtx_def* [ %new_insn.0, %while.body ], !dbg !6306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insn.0.lcssa24, metadata !6213, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insn.0.lcssa24, metadata !6213, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insn.0.lcssa24, metadata !6213, metadata !DIExpression()), !dbg !6306
  br label %cond.end, !dbg !6324

cond.true.loopexit:                               ; preds = %while.cond
  %new_insn.0.lcssa = phi %struct.rtx_def* [ %new_insn.0, %while.cond ], !dbg !6306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insn.0.lcssa, metadata !6213, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insn.0.lcssa, metadata !6213, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insn.0.lcssa, metadata !6213, metadata !DIExpression()), !dbg !6306
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3194, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6324
  br label %cond.end, !dbg !6324

cond.end:                                         ; preds = %while.end, %cond.true.loopexit
  %new_insn.025 = phi %struct.rtx_def* [ %new_insn.0.lcssa24, %while.end ], [ %new_insn.0.lcssa, %cond.true.loopexit ]
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, !dbg !6325
  %arrayidx82 = getelementptr inbounds %union.u, %union.u* %u80, i64 1, i32 0, i32 1, !dbg !6325
  %34 = bitcast %struct.object_block** %arrayidx82 to i64*, !dbg !6325
  %35 = load i64, i64* %34, align 8, !dbg !6325
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_insn.025, i64 0, i32 1, !dbg !6326
  %arrayidx86 = getelementptr inbounds %union.u, %union.u* %u84, i64 1, i32 0, i32 1, !dbg !6326
  %36 = bitcast %struct.object_block** %arrayidx86 to i64*, !dbg !6327
  store i64 %35, i64* %36, align 8, !dbg !6327
  %37 = getelementptr inbounds %union.u, %union.u* %u80, i64 1, i32 0, i32 0, i64 2, !dbg !6328
  br label %for.cond92, !dbg !6330

for.cond92:                                       ; preds = %for.inc105, %cond.end
  %note57.0.in.in = phi %union.rtunion_def* [ %37, %cond.end ], [ %40, %for.inc105 ]
  %note57.0.in = bitcast %union.rtunion_def* %note57.0.in.in to %struct.rtx_def**, !dbg !6331
  %note57.0 = load %struct.rtx_def*, %struct.rtx_def** %note57.0.in, align 8, !dbg !6331
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note57.0, metadata !6214, metadata !DIExpression()), !dbg !6306
  %tobool93 = icmp eq %struct.rtx_def* %note57.0, null, !dbg !6332
  br i1 %tobool93, label %while.cond111.preheader, label %for.body94, !dbg !6332

while.cond111.preheader:                          ; preds = %for.cond92
  br label %while.cond111, !dbg !6333

for.body94:                                       ; preds = %for.cond92
  %38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note57.0, i64 0, i32 0, !dbg !6334
  %bf.load95 = load i32, i32* %38, align 8, !dbg !6334
  %bf.lshr96 = lshr i32 %bf.load95, 16, !dbg !6334
  %trunc = trunc i32 %bf.lshr96 to i8, !dbg !6336
  switch i8 %trunc, label %for.inc105 [
    i8 27, label %sw.bb
    i8 30, label %sw.bb
  ], !dbg !6336

sw.bb:                                            ; preds = %for.body94, %for.body94
  %bf.clear100 = and i32 %bf.lshr96, 255, !dbg !6337
  %arrayidx103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note57.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6339
  %rt_rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**, !dbg !6339
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx104, align 8, !dbg !6339
  call void @add_reg_note(%struct.rtx_def* %new_insn.025, i32 %bf.clear100, %struct.rtx_def* %39) #6, !dbg !6340
  br label %for.inc105, !dbg !6341

for.inc105:                                       ; preds = %sw.bb, %for.body94
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note57.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6342
  br label %for.cond92, !dbg !6343, !llvm.loop !6344

while.cond111:                                    ; preds = %while.cond111.preheader, %cond.end128
  %i.2 = phi i32 [ %inc112, %cond.end128 ], [ %i.1, %while.cond111.preheader ], !dbg !6302
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !6188, metadata !DIExpression()), !dbg !6233
  %inc112 = add nsw i32 %i.2, 1, !dbg !6346
  call void @llvm.dbg.value(metadata i32 %inc112, metadata !6188, metadata !DIExpression()), !dbg !6233
  %41 = load i32, i32* %match_len, align 4, !dbg !6347
  call void @llvm.dbg.value(metadata i32 %41, metadata !6203, metadata !DIExpression()), !dbg !6249
  %cmp113 = icmp slt i32 %i.2, %41, !dbg !6348
  br i1 %cmp113, label %while.body114, label %cleanup.loopexit, !dbg !6333

while.body114:                                    ; preds = %while.cond111
  %42 = load i32, i32* @peep2_current, align 4, !dbg !6349
  %add115 = add nsw i32 %inc112, %42, !dbg !6351
  call void @llvm.dbg.value(metadata i32 %add115, metadata !6206, metadata !DIExpression()), !dbg !6306
  %cmp116 = icmp sgt i32 %add115, 4, !dbg !6352
  %sub118 = add nsw i32 %add115, -5, !dbg !6354
  %spec.select1 = select i1 %cmp116, i32 %sub118, i32 %add115, !dbg !6355
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !6206, metadata !DIExpression()), !dbg !6306
  %idxprom120 = sext i32 %spec.select1 to i64, !dbg !6356
  %insn122 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom120, i32 0, !dbg !6357
  %43 = bitcast %struct.rtx_def** %insn122 to i32**, !dbg !6357
  %44 = load i32*, i32** %43, align 16, !dbg !6357
  %bf.load123 = load i32, i32* %44, align 8, !dbg !6358
  %bf.clear124 = and i32 %bf.load123, 65535, !dbg !6358
  %cmp125 = icmp eq i32 %bf.clear124, 10, !dbg !6358
  br i1 %cmp125, label %cond.true126, label %cond.end128, !dbg !6358

cond.true126:                                     ; preds = %while.body114
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3221, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6358
  br label %cond.end128, !dbg !6358

cond.end128:                                      ; preds = %while.body114, %cond.true126
  br label %while.cond111, !dbg !6333, !llvm.loop !6359

cleanup.loopexit:                                 ; preds = %while.cond111
  %inc112.lcssa = phi i32 [ %inc112, %while.cond111 ], !dbg !6346
  %.lcssa = phi i32 [ %41, %while.cond111 ], !dbg !6347
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %for.body56
  %45 = phi i32 [ %27, %for.body56 ], [ %.lcssa, %cleanup.loopexit ]
  %was_call.1 = phi i8 [ %was_call.0, %for.body56 ], [ 1, %cleanup.loopexit ], !dbg !6249
  %cleanup.dest.slot.0 = phi i1 [ true, %for.body56 ], [ false, %cleanup.loopexit ]
  %i.3 = phi i32 [ %i.1, %for.body56 ], [ %inc112.lcssa, %cleanup.loopexit ], !dbg !6302
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !6188, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %was_call.1, metadata !6205, metadata !DIExpression()), !dbg !6249
  br i1 %cleanup.dest.slot.0, label %for.inc134, label %for.end136

for.inc134:                                       ; preds = %cleanup
  %inc135 = add nsw i32 %i.3, 1, !dbg !6361
  call void @llvm.dbg.value(metadata i32 %inc135, metadata !6188, metadata !DIExpression()), !dbg !6233
  br label %for.cond54, !dbg !6362, !llvm.loop !6363

for.end136:                                       ; preds = %for.cond54, %cleanup
  %46 = phi i32 [ %45, %cleanup ], [ %27, %for.cond54 ], !dbg !6365
  %was_call.2 = phi i8 [ %was_call.1, %cleanup ], [ %was_call.0, %for.cond54 ], !dbg !6249
  call void @llvm.dbg.value(metadata i8 %was_call.2, metadata !6205, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.value(metadata i32 %46, metadata !6203, metadata !DIExpression()), !dbg !6249
  %47 = load i32, i32* @peep2_current, align 4, !dbg !6366
  %add137 = add nsw i32 %46, %47, !dbg !6367
  call void @llvm.dbg.value(metadata i32 %add137, metadata !6188, metadata !DIExpression()), !dbg !6233
  %cmp138 = icmp sgt i32 %add137, 4, !dbg !6368
  %sub140 = add nsw i32 %add137, -5, !dbg !6370
  %spec.select2 = select i1 %cmp138, i32 %sub140, i32 %add137, !dbg !6371
  call void @llvm.dbg.value(metadata i32 %spec.select2, metadata !6188, metadata !DIExpression()), !dbg !6233
  %idxprom142 = sext i32 %spec.select2 to i64, !dbg !6372
  %insn144 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom142, i32 0, !dbg !6373
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn144, align 16, !dbg !6373
  %call145 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %48, i32 25, %struct.rtx_def* null) #6, !dbg !6374
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call145, metadata !6204, metadata !DIExpression()), !dbg !6249
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn144, align 16, !dbg !6375
  %arrayidx154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i64 0, i32 1, i32 0, i32 2, !dbg !6376
  %rt_int = bitcast i64* %arrayidx154 to i32*, !dbg !6376
  %50 = load i32, i32* %rt_int, align 8, !dbg !6376
  %call155 = call %struct.rtx_def* @emit_insn_after_setloc(%struct.rtx_def* nonnull %attempt.0, %struct.rtx_def* %49, i32 %50) #6, !dbg !6377
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call155, metadata !6192, metadata !DIExpression()), !dbg !6249
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6378
  call void @llvm.dbg.value(metadata %struct.rtx_def* %51, metadata !6201, metadata !DIExpression()), !dbg !6249
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn144, align 16, !dbg !6379
  call void @delete_insn_chain(%struct.rtx_def* %insn.0, %struct.rtx_def* %52, i8 zeroext 0) #6, !dbg !6380
  %tobool163 = icmp eq %struct.rtx_def* %call145, null, !dbg !6381
  br i1 %tobool163, label %lor.lhs.false164, label %if.then168, !dbg !6382

lor.lhs.false164:                                 ; preds = %for.end136
  %tobool165 = icmp ne i8 %was_call.2, 0, !dbg !6383
  %53 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 10), align 8, !dbg !6384
  %tobool167 = icmp ne %struct.rtx_def* %53, null, !dbg !6384
  %or.cond = and i1 %tobool165, %tobool167, !dbg !6385
  br i1 %or.cond, label %if.then168, label %if.end237, !dbg !6385

if.then168:                                       ; preds = %for.end136, %lor.lhs.false164
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6386
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !6387
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !6388
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 1, !dbg !6388
  %call169 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !6388
  %54 = extractvalue { i32, %struct.VEC_edge_gc** } %call169, 0, !dbg !6388
  store i32 %54, i32* %7, align 8, !dbg !6388
  %55 = extractvalue { i32, %struct.VEC_edge_gc** } %call169, 1, !dbg !6388
  store %struct.VEC_edge_gc** %55, %struct.VEC_edge_gc*** %8, align 8, !dbg !6388
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %6, i64 16, i1 false), !dbg !6388
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !6388
  br label %for.cond170, !dbg !6388

for.cond170:                                      ; preds = %for.inc177, %if.then168
  %56 = load i32, i32* %9, align 8, !dbg !6389
  %57 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %10, align 8, !dbg !6389
  call void @llvm.dbg.value(metadata %struct.edge_def** %eh_edge, metadata !6215, metadata !DIExpression(DW_OP_deref)), !dbg !6250
  %call171 = call fastcc zeroext i8 @ei_cond(i32 %56, %struct.VEC_edge_gc** %57, %struct.edge_def** nonnull %eh_edge) #7, !dbg !6389
  %tobool172 = icmp eq i8 %call171, 0, !dbg !6388
  br i1 %tobool172, label %for.end178, label %for.body173, !dbg !6388

for.body173:                                      ; preds = %for.cond170
  %58 = load %struct.edge_def*, %struct.edge_def** %eh_edge, align 8, !dbg !6390
  call void @llvm.dbg.value(metadata %struct.edge_def* %58, metadata !6215, metadata !DIExpression()), !dbg !6250
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %58, i64 0, i32 7, !dbg !6392
  %59 = load i32, i32* %flags, align 8, !dbg !6392
  %and = and i32 %59, 12, !dbg !6393
  %tobool174 = icmp eq i32 %and, 0, !dbg !6393
  br i1 %tobool174, label %for.inc177, label %for.end178, !dbg !6394

for.inc177:                                       ; preds = %for.body173
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6218, metadata !DIExpression(DW_OP_deref)), !dbg !6250
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6389
  br label %for.cond170, !dbg !6389, !llvm.loop !6395

for.end178:                                       ; preds = %for.body173, %for.cond170
  br i1 %tobool163, label %if.end181, label %if.then180, !dbg !6397

if.then180:                                       ; preds = %for.end178
  call void @copy_reg_eh_region_note_backward(%struct.rtx_def* nonnull %call145, %struct.rtx_def* %call155, %struct.rtx_def* %51) #6, !dbg !6398
  br label %if.end181, !dbg !6398

if.end181:                                        ; preds = %for.end178, %if.then180
  %60 = load %struct.edge_def*, %struct.edge_def** %eh_edge, align 8, !dbg !6400
  call void @llvm.dbg.value(metadata %struct.edge_def* %60, metadata !6215, metadata !DIExpression()), !dbg !6250
  %tobool182 = icmp eq %struct.edge_def* %60, null, !dbg !6400
  br i1 %tobool182, label %if.end231, label %for.cond184.preheader, !dbg !6401

for.cond184.preheader:                            ; preds = %if.end181
  br label %for.cond184, !dbg !6402

for.cond184:                                      ; preds = %for.cond184.preheader, %for.inc225
  %x.0 = phi %struct.rtx_def* [ %74, %for.inc225 ], [ %call155, %for.cond184.preheader ], !dbg !6403
  %bb.2 = phi %struct.basic_block_def* [ %bb.3, %for.inc225 ], [ %bb.1, %for.cond184.preheader ], !dbg !6257
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.2, metadata !6189, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !6202, metadata !DIExpression()), !dbg !6249
  %cmp185 = icmp eq %struct.rtx_def* %x.0, %51, !dbg !6404
  br i1 %cmp185, label %if.end231.loopexit, label %for.body187, !dbg !6402

for.body187:                                      ; preds = %for.cond184
  %il188 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.2, i64 0, i32 7, !dbg !6405
  %rtl189 = bitcast %union.basic_block_il_dependent* %il188 to %struct.rtl_bb_info**, !dbg !6405
  %61 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl189, align 8, !dbg !6405
  %end_190 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %61, i64 0, i32 1, !dbg !6405
  %62 = load %struct.rtx_def*, %struct.rtx_def** %end_190, align 8, !dbg !6405
  %cmp191 = icmp eq %struct.rtx_def* %x.0, %62, !dbg !6406
  br i1 %cmp191, label %for.inc225, label %land.lhs.true193, !dbg !6407

land.lhs.true193:                                 ; preds = %for.body187
  %call194 = call zeroext i8 @can_throw_internal(%struct.rtx_def* %x.0) #6, !dbg !6408
  %tobool196 = icmp eq i8 %call194, 0, !dbg !6408
  br i1 %tobool196, label %lor.lhs.false197, label %if.then201, !dbg !6409

lor.lhs.false197:                                 ; preds = %land.lhs.true193
  %call198 = call zeroext i8 @can_nonlocal_goto(%struct.rtx_def* %x.0) #6, !dbg !6410
  %tobool200 = icmp eq i8 %call198, 0, !dbg !6410
  br i1 %tobool200, label %for.inc225, label %if.then201, !dbg !6411

if.then201:                                       ; preds = %lor.lhs.false197, %land.lhs.true193
  %63 = bitcast %struct.rtx_def* %x.0 to i8*, !dbg !6412
  %call203 = call %struct.edge_def* @split_block(%struct.basic_block_def* %bb.2, i8* %63) #6, !dbg !6413
  call void @llvm.dbg.value(metadata %struct.edge_def* %call203, metadata !6225, metadata !DIExpression()), !dbg !6414
  %64 = load %struct.edge_def*, %struct.edge_def** %eh_edge, align 8, !dbg !6415
  call void @llvm.dbg.value(metadata %struct.edge_def* %64, metadata !6215, metadata !DIExpression()), !dbg !6250
  %flags204 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %64, i64 0, i32 7, !dbg !6416
  %65 = load i32, i32* %flags204, align 8, !dbg !6416
  %and205 = and i32 %65, 10, !dbg !6417
  call void @llvm.dbg.value(metadata i32 %and205, metadata !6232, metadata !DIExpression()), !dbg !6414
  %66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !6418
  %bf.load206 = load i32, i32* %66, align 8, !dbg !6418
  %bf.clear207 = and i32 %bf.load206, 65535, !dbg !6418
  %cmp208 = icmp eq i32 %bf.clear207, 10, !dbg !6418
  %or = or i32 %and205, 4, !dbg !6420
  %spec.select3 = select i1 %cmp208, i32 %or, i32 %and205, !dbg !6421
  call void @llvm.dbg.value(metadata i32 %spec.select3, metadata !6232, metadata !DIExpression()), !dbg !6414
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call203, i64 0, i32 0, !dbg !6422
  %67 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6422
  call void @llvm.dbg.value(metadata %struct.edge_def* %64, metadata !6215, metadata !DIExpression()), !dbg !6250
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %64, i64 0, i32 1, !dbg !6423
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6423
  %call212 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %67, %struct.basic_block_def* %68, i32 %spec.select3) #6, !dbg !6424
  call void @llvm.dbg.value(metadata %struct.edge_def* %call212, metadata !6231, metadata !DIExpression()), !dbg !6414
  %69 = load %struct.edge_def*, %struct.edge_def** %eh_edge, align 8, !dbg !6425
  call void @llvm.dbg.value(metadata %struct.edge_def* %69, metadata !6215, metadata !DIExpression()), !dbg !6250
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %69, i64 0, i32 8, !dbg !6426
  %70 = load i32, i32* %probability, align 4, !dbg !6426
  %probability213 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call212, i64 0, i32 8, !dbg !6427
  store i32 %70, i32* %probability213, align 4, !dbg !6428
  %sub215 = sub nsw i32 10000, %70, !dbg !6429
  %probability216 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call203, i64 0, i32 8, !dbg !6430
  store i32 %sub215, i32* %probability216, align 4, !dbg !6431
  %dest217 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call203, i64 0, i32 1, !dbg !6432
  %71 = load %struct.basic_block_def*, %struct.basic_block_def** %dest217, align 8, !dbg !6432
  %call218 = call zeroext i8 @purge_dead_edges(%struct.basic_block_def* %71) #6, !dbg !6433
  %72 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6434
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %72, metadata !6189, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata %struct.edge_def* %call212, metadata !6215, metadata !DIExpression()), !dbg !6250
  store %struct.edge_def* %call212, %struct.edge_def** %eh_edge, align 8, !dbg !6435
  br label %for.inc225, !dbg !6436

for.inc225:                                       ; preds = %lor.lhs.false197, %for.body187, %if.then201
  %bb.3 = phi %struct.basic_block_def* [ %72, %if.then201 ], [ %bb.2, %lor.lhs.false197 ], [ %bb.2, %for.body187 ], !dbg !6257
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.3, metadata !6189, metadata !DIExpression()), !dbg !6233
  %73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6437
  %rt_rtx229 = bitcast %union.rtunion_def* %73 to %struct.rtx_def**, !dbg !6437
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx229, align 8, !dbg !6437
  call void @llvm.dbg.value(metadata %struct.rtx_def* %74, metadata !6202, metadata !DIExpression()), !dbg !6249
  br label %for.cond184, !dbg !6438, !llvm.loop !6439

if.end231.loopexit:                               ; preds = %for.cond184
  %bb.2.lcssa = phi %struct.basic_block_def* [ %bb.2, %for.cond184 ], !dbg !6257
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.2.lcssa, metadata !6189, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.2.lcssa, metadata !6189, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.2.lcssa, metadata !6189, metadata !DIExpression()), !dbg !6233
  br label %if.end231, !dbg !6441

if.end231:                                        ; preds = %if.end231.loopexit, %if.end181
  %bb.4 = phi %struct.basic_block_def* [ %bb.1, %if.end181 ], [ %bb.2.lcssa, %if.end231.loopexit ], !dbg !6248
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.4, metadata !6189, metadata !DIExpression()), !dbg !6233
  %call232 = call zeroext i8 @purge_dead_edges(%struct.basic_block_def* %bb.4) #6, !dbg !6441
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !6442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6442
  br label %if.end237, !dbg !6443

if.end237:                                        ; preds = %if.end231, %lor.lhs.false164
  %bb.5 = phi %struct.basic_block_def* [ %bb.4, %if.end231 ], [ %bb.1, %lor.lhs.false164 ], !dbg !6248
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.5, metadata !6189, metadata !DIExpression()), !dbg !6233
  %75 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 35), align 8, !dbg !6444
  %call238 = call zeroext i8 %75() #6, !dbg !6446
  %tobool239 = icmp eq i8 %call238, 0, !dbg !6446
  br i1 %tobool239, label %if.else254, label %for.cond241.preheader, !dbg !6447

for.cond241.preheader:                            ; preds = %if.end237
  br label %for.cond241, !dbg !6448

for.cond241:                                      ; preds = %for.cond241.preheader, %for.body244
  %indvars.iv18 = phi i64 [ 0, %for.cond241.preheader ], [ %indvars.iv.next19, %for.body244 ], !dbg !6451
  call void @llvm.dbg.value(metadata i64 %indvars.iv18, metadata !6188, metadata !DIExpression()), !dbg !6233
  %exitcond20 = icmp eq i64 %indvars.iv18, 5, !dbg !6452
  br i1 %exitcond20, label %for.end250, label %for.body244, !dbg !6448

for.body244:                                      ; preds = %for.cond241
  %insn247 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %indvars.iv18, i32 0, !dbg !6454
  store %struct.rtx_def* null, %struct.rtx_def** %insn247, align 16, !dbg !6455
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1, !dbg !6456
  call void @llvm.dbg.value(metadata i32 undef, metadata !6188, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6233
  br label %for.cond241, !dbg !6457, !llvm.loop !6458

for.end250:                                       ; preds = %for.cond241
  %76 = load i64, i64* bitcast ([11 x %struct.rtx_def*]* @global_rtl to i64*), align 16, !dbg !6460
  %77 = load i32, i32* @peep2_current, align 4, !dbg !6461
  %idxprom251 = sext i32 %77 to i64, !dbg !6462
  %arrayidx252 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom251, !dbg !6462
  %78 = bitcast %struct.peep2_insn_data* %arrayidx252 to i64*, !dbg !6463
  store i64 %76, i64* %78, align 16, !dbg !6463
  store i32 0, i32* @peep2_current_count, align 4, !dbg !6464
  br label %if.end313, !dbg !6465

if.else254:                                       ; preds = %if.end237
  %inc255 = add nsw i32 %spec.select2, 1, !dbg !6466
  call void @llvm.dbg.value(metadata i32 %inc255, metadata !6188, metadata !DIExpression()), !dbg !6233
  %cmp256 = icmp sgt i32 %spec.select2, 3, !dbg !6469
  %spec.select4 = select i1 %cmp256, i32 0, i32 %inc255, !dbg !6470
  call void @llvm.dbg.value(metadata i32 %spec.select4, metadata !6188, metadata !DIExpression()), !dbg !6233
  %idxprom260 = sext i32 %spec.select4 to i64, !dbg !6471
  %live_before262 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom260, i32 1, !dbg !6472
  %79 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before262, align 8, !dbg !6472
  call void @bitmap_copy(%struct.bitmap_head_def* %call1.lcssa, %struct.bitmap_head_def* %79) #6, !dbg !6473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call155, metadata !6202, metadata !DIExpression()), !dbg !6249
  br label %do.body, !dbg !6474

do.body:                                          ; preds = %if.end306, %if.else254
  %x.1 = phi %struct.rtx_def* [ %call155, %if.else254 ], [ %85, %if.end306 ], !dbg !6475
  %i.7 = phi i32 [ %spec.select4, %if.else254 ], [ %i.9, %if.end306 ], !dbg !6475
  call void @llvm.dbg.value(metadata i32 %i.7, metadata !6188, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1, metadata !6202, metadata !DIExpression()), !dbg !6249
  %80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.1, i64 0, i32 0, !dbg !6476
  %bf.load263 = load i32, i32* %80, align 8, !dbg !6476
  %bf.clear264 = and i32 %bf.load263, 65535, !dbg !6476
  %cmp265 = icmp eq i32 %bf.clear264, 8, !dbg !6476
  br i1 %cmp265, label %if.then282, label %lor.lhs.false267, !dbg !6476

lor.lhs.false267:                                 ; preds = %do.body
  %cmp270 = icmp eq i32 %bf.clear264, 7, !dbg !6476
  br i1 %cmp270, label %if.then282, label %lor.lhs.false272, !dbg !6476

lor.lhs.false272:                                 ; preds = %lor.lhs.false267
  %cmp275 = icmp eq i32 %bf.clear264, 9, !dbg !6476
  br i1 %cmp275, label %if.then282, label %lor.lhs.false277, !dbg !6476

lor.lhs.false277:                                 ; preds = %lor.lhs.false272
  %cmp280 = icmp eq i32 %bf.clear264, 10, !dbg !6476
  br i1 %cmp280, label %if.then282, label %if.end306, !dbg !6479

if.then282:                                       ; preds = %lor.lhs.false277, %lor.lhs.false272, %lor.lhs.false267, %do.body
  %dec283 = add nsw i32 %i.7, -1, !dbg !6480
  call void @llvm.dbg.value(metadata i32 %dec283, metadata !6188, metadata !DIExpression()), !dbg !6233
  %cmp284 = icmp slt i32 %i.7, 1, !dbg !6483
  %spec.select5 = select i1 %cmp284, i32 4, i32 %dec283, !dbg !6484
  call void @llvm.dbg.value(metadata i32 %spec.select5, metadata !6188, metadata !DIExpression()), !dbg !6233
  %81 = load i32, i32* @peep2_current_count, align 4, !dbg !6485
  %cmp288 = icmp slt i32 %81, 4, !dbg !6487
  br i1 %cmp288, label %land.lhs.true290, label %if.then282.if.end298_crit_edge, !dbg !6488

if.then282.if.end298_crit_edge:                   ; preds = %if.then282
  %.pre15 = sext i32 %spec.select5 to i64, !dbg !6489
  br label %if.end298, !dbg !6488

land.lhs.true290:                                 ; preds = %if.then282
  %idxprom291 = sext i32 %spec.select5 to i64, !dbg !6490
  %insn293 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom291, i32 0, !dbg !6491
  %82 = load %struct.rtx_def*, %struct.rtx_def** %insn293, align 16, !dbg !6491
  %cmp294 = icmp eq %struct.rtx_def* %82, null, !dbg !6492
  br i1 %cmp294, label %if.then296, label %if.end298, !dbg !6493

if.then296:                                       ; preds = %land.lhs.true290
  %inc297 = add nsw i32 %81, 1, !dbg !6494
  store i32 %inc297, i32* @peep2_current_count, align 4, !dbg !6494
  br label %if.end298, !dbg !6495

if.end298:                                        ; preds = %if.then282.if.end298_crit_edge, %if.then296, %land.lhs.true290
  %idxprom299.pre-phi = phi i64 [ %.pre15, %if.then282.if.end298_crit_edge ], [ %idxprom291, %if.then296 ], [ %idxprom291, %land.lhs.true290 ], !dbg !6489
  %insn301 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom299.pre-phi, i32 0, !dbg !6496
  store %struct.rtx_def* %x.1, %struct.rtx_def** %insn301, align 16, !dbg !6497
  %call302 = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %x.1) #6, !dbg !6498
  call void @df_simulate_one_insn_backwards(%struct.basic_block_def* %bb.5, %struct.rtx_def* %x.1, %struct.bitmap_head_def* %call1.lcssa) #6, !dbg !6499
  %live_before305 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom299.pre-phi, i32 1, !dbg !6500
  %83 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before305, align 8, !dbg !6500
  call void @bitmap_copy(%struct.bitmap_head_def* %83, %struct.bitmap_head_def* %call1.lcssa) #6, !dbg !6501
  br label %if.end306, !dbg !6502

if.end306:                                        ; preds = %if.end298, %lor.lhs.false277
  %i.9 = phi i32 [ %spec.select5, %if.end298 ], [ %i.7, %lor.lhs.false277 ], !dbg !6475
  call void @llvm.dbg.value(metadata i32 %i.9, metadata !6188, metadata !DIExpression()), !dbg !6233
  %84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6503
  %rt_rtx310 = bitcast %union.rtunion_def* %84 to %struct.rtx_def**, !dbg !6503
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx310, align 8, !dbg !6503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %85, metadata !6202, metadata !DIExpression()), !dbg !6249
  %cmp311 = icmp eq %struct.rtx_def* %85, %18, !dbg !6504
  br i1 %cmp311, label %do.end, label %do.body, !dbg !6505, !llvm.loop !6506

do.end:                                           ; preds = %if.end306
  %i.9.lcssa = phi i32 [ %i.9, %if.end306 ], !dbg !6475
  call void @llvm.dbg.value(metadata i32 %i.9.lcssa, metadata !6188, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 %i.9.lcssa, metadata !6188, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 %i.9.lcssa, metadata !6188, metadata !DIExpression()), !dbg !6233
  store i32 %i.9.lcssa, i32* @peep2_current, align 4, !dbg !6508
  br label %if.end313

if.end313:                                        ; preds = %do.end, %for.end250
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call155, metadata !6202, metadata !DIExpression()), !dbg !6249
  br label %for.cond314, !dbg !6509

for.cond314:                                      ; preds = %for.inc324, %if.end313
  %x.2 = phi %struct.rtx_def* [ %call155, %if.end313 ], [ %88, %for.inc324 ], !dbg !6511
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.2, metadata !6202, metadata !DIExpression()), !dbg !6249
  %cmp315 = icmp eq %struct.rtx_def* %x.2, %51, !dbg !6512
  br i1 %cmp315, label %if.end330.loopexit, label %for.body317, !dbg !6514

for.body317:                                      ; preds = %for.cond314
  %86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.2, i64 0, i32 0, !dbg !6515
  %bf.load318 = load i32, i32* %86, align 8, !dbg !6515
  %bf.clear319 = and i32 %bf.load318, 65535, !dbg !6515
  %cmp320 = icmp eq i32 %bf.clear319, 9, !dbg !6515
  br i1 %cmp320, label %if.end330.loopexit, label %for.inc324, !dbg !6517

for.inc324:                                       ; preds = %for.body317
  %87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6518
  %rt_rtx328 = bitcast %union.rtunion_def* %87 to %struct.rtx_def**, !dbg !6518
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx328, align 8, !dbg !6518
  call void @llvm.dbg.value(metadata %struct.rtx_def* %88, metadata !6202, metadata !DIExpression()), !dbg !6249
  br label %for.cond314, !dbg !6519, !llvm.loop !6520

if.end330.loopexit:                               ; preds = %for.body317, %for.cond314
  %do_rebuild_jump_labels.3.ph = phi i8 [ 1, %for.body317 ], [ %do_rebuild_jump_labels.1, %for.cond314 ]
  br label %if.end330, !dbg !6522

if.end330:                                        ; preds = %if.end330.loopexit, %if.end51
  %do_rebuild_jump_labels.3 = phi i8 [ %do_rebuild_jump_labels.1, %if.end51 ], [ %do_rebuild_jump_labels.3.ph, %if.end330.loopexit ], !dbg !6233
  %bb.6 = phi %struct.basic_block_def* [ %bb.1, %if.end51 ], [ %bb.5, %if.end330.loopexit ], !dbg !6248
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.6, metadata !6189, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %do_rebuild_jump_labels.3, metadata !6191, metadata !DIExpression()), !dbg !6233
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !6522
  br label %if.end331, !dbg !6523

if.end331:                                        ; preds = %if.end330, %land.lhs.true, %lor.lhs.false19
  %do_rebuild_jump_labels.4 = phi i8 [ %do_rebuild_jump_labels.1, %land.lhs.true ], [ %do_rebuild_jump_labels.3, %if.end330 ], [ %do_rebuild_jump_labels.1, %lor.lhs.false19 ], !dbg !6233
  %bb.7 = phi %struct.basic_block_def* [ %bb.1, %land.lhs.true ], [ %bb.6, %if.end330 ], [ %bb.1, %lor.lhs.false19 ], !dbg !6248
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.7, metadata !6189, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %do_rebuild_jump_labels.4, metadata !6191, metadata !DIExpression()), !dbg !6233
  %il332 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.7, i64 0, i32 7, !dbg !6524
  %rtl333 = bitcast %union.basic_block_il_dependent* %il332 to %struct.rtl_bb_info**, !dbg !6524
  %89 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl333, align 8, !dbg !6524
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %89, i64 0, i32 0, !dbg !6524
  %90 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6524
  %cmp334 = icmp eq %struct.rtx_def* %insn.0, %90, !dbg !6526
  br i1 %cmp334, label %for.inc340, label %for.cond9, !dbg !6527, !llvm.loop !6528

for.inc340:                                       ; preds = %if.end331
  %do_rebuild_jump_labels.4.lcssa = phi i8 [ %do_rebuild_jump_labels.4, %if.end331 ], !dbg !6233
  %bb.7.lcssa = phi %struct.basic_block_def* [ %bb.7, %if.end331 ], !dbg !6248
  call void @llvm.dbg.value(metadata i8 %do_rebuild_jump_labels.4.lcssa, metadata !6191, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.7.lcssa, metadata !6189, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %do_rebuild_jump_labels.4.lcssa, metadata !6191, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.7.lcssa, metadata !6189, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %do_rebuild_jump_labels.4.lcssa, metadata !6191, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.7.lcssa, metadata !6189, metadata !DIExpression()), !dbg !6233
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6255
  %cfg5.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !6531
  %.pre12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5.phi.trans.insert, align 8, !dbg !6255
  br label %for.cond3, !dbg !6255, !llvm.loop !6532

for.end342:                                       ; preds = %for.cond3
  %do_rebuild_jump_labels.0.lcssa = phi i8 [ %do_rebuild_jump_labels.0, %for.cond3 ], !dbg !6256
  call void @llvm.dbg.value(metadata i8 %do_rebuild_jump_labels.0.lcssa, metadata !6191, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %do_rebuild_jump_labels.0.lcssa, metadata !6191, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %do_rebuild_jump_labels.0.lcssa, metadata !6191, metadata !DIExpression()), !dbg !6233
  call void @default_rtl_profile() #6, !dbg !6534
  call void @llvm.dbg.value(metadata i32 0, metadata !6188, metadata !DIExpression()), !dbg !6233
  br label %for.cond343, !dbg !6535

for.cond343:                                      ; preds = %for.body346, %for.end342
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body346 ], [ 0, %for.end342 ], !dbg !6537
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6188, metadata !DIExpression()), !dbg !6233
  %exitcond = icmp eq i64 %indvars.iv, 5, !dbg !6538
  br i1 %exitcond, label %for.end355, label %for.body346, !dbg !6540

for.body346:                                      ; preds = %for.cond343
  %live_before349 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %indvars.iv, i32 1, !dbg !6541
  %91 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before349, align 8, !dbg !6541
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %91) #6, !dbg !6541
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %live_before349, align 8, !dbg !6541
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6542
  call void @llvm.dbg.value(metadata i32 undef, metadata !6188, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6233
  br label %for.cond343, !dbg !6543, !llvm.loop !6544

for.end355:                                       ; preds = %for.cond343
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call1.lcssa) #6, !dbg !6546
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !6187, metadata !DIExpression()), !dbg !6233
  %tobool356 = icmp eq i8 %do_rebuild_jump_labels.0.lcssa, 0, !dbg !6547
  br i1 %tobool356, label %if.end359, label %if.then357, !dbg !6549

if.then357:                                       ; preds = %for.end355
  %call358 = call %struct.rtx_def* @get_insns() #6, !dbg !6550
  call void @rebuild_jump_labels(%struct.rtx_def* %call358) #6, !dbg !6551
  br label %if.end359, !dbg !6551

if.end359:                                        ; preds = %for.end355, %if.then357
  ret void, !dbg !6552
}

declare dso_local i32 @df_set_flags(i32) local_unnamed_addr #2

declare dso_local void @df_analyze() local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %index) unnamed_addr #0 !dbg !6553 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !6557, metadata !DIExpression()), !dbg !6558
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6559
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !6559
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6559
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !6561
  %2 = load i32, i32* %block_info_size, align 8, !dbg !6561
  %cmp = icmp ugt i32 %2, %index, !dbg !6562
  br i1 %cmp, label %if.then, label %return, !dbg !6563

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !6564
  %3 = load i8**, i8*** %block_info, align 8, !dbg !6564
  %idxprom = zext i32 %index to i64, !dbg !6565
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !6565
  %4 = bitcast i8** %arrayidx3 to %struct.df_lr_bb_info**, !dbg !6565
  %5 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %4, align 8, !dbg !6565
  br label %return, !dbg !6566

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_lr_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !6567
  ret %struct.df_lr_bb_info* %retval.0, !dbg !6568
}

declare dso_local void @df_simulate_initialize_backwards(%struct.basic_block_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @peep2_reinit_state(%struct.bitmap_head_def* %live) unnamed_addr #5 !dbg !6569 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !6573, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i32 0, metadata !6574, metadata !DIExpression()), !dbg !6575
  br label %for.cond, !dbg !6576

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !6578
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6574, metadata !DIExpression()), !dbg !6575
  %exitcond = icmp eq i64 %indvars.iv, 4, !dbg !6579
  br i1 %exitcond, label %for.end, label %for.body, !dbg !6581

for.body:                                         ; preds = %for.cond
  %insn = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %indvars.iv, i32 0, !dbg !6582
  store %struct.rtx_def* null, %struct.rtx_def** %insn, align 16, !dbg !6583
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6584
  call void @llvm.dbg.value(metadata i32 undef, metadata !6574, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6575
  br label %for.cond, !dbg !6585, !llvm.loop !6586

for.end:                                          ; preds = %for.cond
  store i32 0, i32* @peep2_current_count, align 4, !dbg !6588
  %0 = load i64, i64* bitcast ([11 x %struct.rtx_def*]* @global_rtl to i64*), align 16, !dbg !6589
  store i64 %0, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 4, i32 0) to i64*), align 16, !dbg !6590
  store i32 4, i32* @peep2_current, align 4, !dbg !6591
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** getelementptr inbounds ([5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 4, i32 1), align 8, !dbg !6592
  tail call void @bitmap_copy(%struct.bitmap_head_def* %1, %struct.bitmap_head_def* %live) #6, !dbg !6592
  ret void, !dbg !6593
}

declare dso_local void @df_simulate_one_insn_backwards(%struct.basic_block_def*, %struct.rtx_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @peephole2_insns(%struct.rtx_def*, %struct.rtx_def*, i32*) local_unnamed_addr #2

declare dso_local void @add_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_insn_after_setloc(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @delete_insn_chain(%struct.rtx_def*, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !6594 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !6598, metadata !DIExpression()), !dbg !6600
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !6601
  store i32 0, i32* %index, align 8, !dbg !6602
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !6603
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !6604
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !6605
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !6605
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !6605
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !6606 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !6612, metadata !DIExpression()), !dbg !6613
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6614
  %tobool = icmp eq i8 %call, 0, !dbg !6614
  br i1 %tobool, label %if.then, label %if.else, !dbg !6616

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6617
  br label %return, !dbg !6619

if.else:                                          ; preds = %entry
  br label %return, !dbg !6620

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !6622
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !6622
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !6622
  ret i8 %retval.0, !dbg !6623
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !6624 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !6629, metadata !DIExpression()), !dbg !6630
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !6631
  %0 = load i32, i32* %index, align 8, !dbg !6631
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !6631
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !6631
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !6631
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6631
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6631

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !6631
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !6631
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !6631
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6631
  br label %cond.end, !dbg !6631

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6631
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6631
  %cmp = icmp ult i32 %0, %call2, !dbg !6631
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !6631

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6631
  br label %cond.end5, !dbg !6631

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !6632
  %inc = add i32 %5, 1, !dbg !6632
  store i32 %inc, i32* %index, align 8, !dbg !6632
  ret void, !dbg !6633
}

declare dso_local void @copy_reg_eh_region_note_backward(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @can_throw_internal(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @can_nonlocal_goto(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @split_block(%struct.basic_block_def*, i8*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @purge_dead_edges(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @rebuild_jump_labels(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6634 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6639
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6639
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6639

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6639
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6639
  br label %cond.end, !dbg !6639

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6639
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6639
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !6640
  %conv3 = zext i1 %cmp to i8, !dbg !6641
  ret i8 %conv3, !dbg !6642
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6643 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6648
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6648
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6648

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6648
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6648
  br label %cond.end, !dbg !6648

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6648
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !6648
  ret %struct.edge_def* %call2, !dbg !6649
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6650 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6656, metadata !DIExpression()), !dbg !6657
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6658
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6658

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6658
  %0 = load i32, i32* %num, align 8, !dbg !6658
  br label %cond.end, !dbg !6658

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6658
  ret i32 %cond, !dbg !6658
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6659 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !6664
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6664

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6664
  br label %cond.end, !dbg !6664

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !6665
  ret %struct.VEC_edge_gc* %0, !dbg !6666
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6667 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6671, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6672, metadata !DIExpression()), !dbg !6673
  br label %land.end, !dbg !6674

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6674
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6674
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6674
  ret %struct.edge_def* %0, !dbg !6674
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2042, !2043, !2044}
!llvm.ident = !{!2045}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "volatile_ok", scope: !2, file: !3, line: 84, type: !798, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !795, globals: !1906, nameTableKind: None)
!3 = !DIFile(filename: "recog.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !150, !169, !176, !183, !377, !520, !554, !576, !606, !613, !789}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !146, line: 474, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !151, line: 280, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!153 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !151, line: 1817, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175}
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !151, line: 1805, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !151, line: 39, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!185 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!191 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!192 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!193 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!195 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!196 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!197 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!199 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!200 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!201 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!202 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!203 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!204 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!205 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!206 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!207 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!208 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!209 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!210 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!213 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!214 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!215 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!216 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!217 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!218 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!219 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!220 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!221 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!222 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!223 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!224 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!225 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!226 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!228 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!229 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!230 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!231 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!232 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!233 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!234 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!235 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!237 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!238 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!239 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!240 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!241 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!242 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!243 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!244 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!245 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!246 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!247 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!248 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!249 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!250 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!251 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!252 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!253 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!254 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!255 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!256 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!257 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!258 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!259 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!260 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!261 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!262 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!263 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!264 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!265 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!266 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!267 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!268 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!269 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!270 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!271 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!274 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!275 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!280 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!281 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!282 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!283 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!284 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!285 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!286 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!287 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!288 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!289 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!290 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!291 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!292 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!293 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!294 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!295 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!296 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!297 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!298 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!299 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!300 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!301 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!302 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!303 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!304 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!305 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!307 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!308 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!309 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!310 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!311 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!312 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!313 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!314 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!315 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!316 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!317 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!318 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!319 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!320 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!321 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!322 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!323 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!324 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!325 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!326 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!327 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!328 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!329 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!330 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!331 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!332 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!333 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!334 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!335 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!336 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!337 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!350 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!351 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!352 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!353 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!354 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!370 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!371 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!372 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!373 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!374 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!375 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!376 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !378, line: 45, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519}
!380 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!386 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!387 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!388 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!389 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!390 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!391 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!392 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!393 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!394 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!395 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!396 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!397 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!398 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!399 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!400 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!401 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!402 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!403 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!404 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!405 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!406 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!407 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!408 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!409 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!410 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!411 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!412 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!413 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!414 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!415 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!416 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!417 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!418 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!419 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!420 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!421 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!422 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!423 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!424 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!425 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!426 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!427 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!428 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!429 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!430 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!431 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!432 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!433 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!434 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!435 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!436 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!437 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!438 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!439 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!440 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!441 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!442 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!443 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!444 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!445 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!446 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!447 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!448 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!449 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!450 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!451 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!452 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!453 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!454 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!455 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!456 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!457 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!458 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!459 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!460 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!461 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!462 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!463 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!464 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!465 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!466 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!467 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!468 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!469 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!470 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!471 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!472 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!473 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!474 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!475 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!476 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!477 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!478 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!479 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!480 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!481 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!482 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!483 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!484 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!485 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!486 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!487 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!488 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!489 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!490 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!491 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!492 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!493 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!494 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!495 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!496 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!497 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!498 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!499 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!500 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!501 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!502 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!503 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!504 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!505 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!506 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!507 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!508 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!509 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!510 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!511 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!512 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!513 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!514 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!515 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!517 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!518 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!519 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!520 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !378, line: 836, baseType: !7, size: 32, elements: !521)
!521 = !{!522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553}
!522 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!523 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!524 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!525 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!526 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!527 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!528 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!529 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!530 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!531 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!532 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!533 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!534 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!535 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!536 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!537 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!538 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!539 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!540 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!541 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!542 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!543 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!544 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!545 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!546 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!547 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!548 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!549 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!550 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!551 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!552 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!553 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !555, line: 36, baseType: !7, size: 32, elements: !556)
!555 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!556 = !{!557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575}
!557 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!558 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!559 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!560 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!561 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!562 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!563 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!564 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!565 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!566 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!567 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!568 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!569 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!570 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!571 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!572 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!573 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!574 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!575 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!576 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_class", file: !146, line: 1188, baseType: !7, size: 32, elements: !577)
!577 = !{!578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605}
!578 = !DIEnumerator(name: "NO_REGS", value: 0, isUnsigned: true)
!579 = !DIEnumerator(name: "AREG", value: 1, isUnsigned: true)
!580 = !DIEnumerator(name: "DREG", value: 2, isUnsigned: true)
!581 = !DIEnumerator(name: "CREG", value: 3, isUnsigned: true)
!582 = !DIEnumerator(name: "BREG", value: 4, isUnsigned: true)
!583 = !DIEnumerator(name: "SIREG", value: 5, isUnsigned: true)
!584 = !DIEnumerator(name: "DIREG", value: 6, isUnsigned: true)
!585 = !DIEnumerator(name: "AD_REGS", value: 7, isUnsigned: true)
!586 = !DIEnumerator(name: "CLOBBERED_REGS", value: 8, isUnsigned: true)
!587 = !DIEnumerator(name: "Q_REGS", value: 9, isUnsigned: true)
!588 = !DIEnumerator(name: "NON_Q_REGS", value: 10, isUnsigned: true)
!589 = !DIEnumerator(name: "INDEX_REGS", value: 11, isUnsigned: true)
!590 = !DIEnumerator(name: "LEGACY_REGS", value: 12, isUnsigned: true)
!591 = !DIEnumerator(name: "GENERAL_REGS", value: 13, isUnsigned: true)
!592 = !DIEnumerator(name: "FP_TOP_REG", value: 14, isUnsigned: true)
!593 = !DIEnumerator(name: "FP_SECOND_REG", value: 15, isUnsigned: true)
!594 = !DIEnumerator(name: "FLOAT_REGS", value: 16, isUnsigned: true)
!595 = !DIEnumerator(name: "SSE_FIRST_REG", value: 17, isUnsigned: true)
!596 = !DIEnumerator(name: "SSE_REGS", value: 18, isUnsigned: true)
!597 = !DIEnumerator(name: "MMX_REGS", value: 19, isUnsigned: true)
!598 = !DIEnumerator(name: "FP_TOP_SSE_REGS", value: 20, isUnsigned: true)
!599 = !DIEnumerator(name: "FP_SECOND_SSE_REGS", value: 21, isUnsigned: true)
!600 = !DIEnumerator(name: "FLOAT_SSE_REGS", value: 22, isUnsigned: true)
!601 = !DIEnumerator(name: "FLOAT_INT_REGS", value: 23, isUnsigned: true)
!602 = !DIEnumerator(name: "INT_SSE_REGS", value: 24, isUnsigned: true)
!603 = !DIEnumerator(name: "FLOAT_INT_SSE_REGS", value: 25, isUnsigned: true)
!604 = !DIEnumerator(name: "ALL_REGS", value: 26, isUnsigned: true)
!605 = !DIEnumerator(name: "LIM_REG_CLASSES", value: 27, isUnsigned: true)
!606 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !607, line: 104, baseType: !7, size: 32, elements: !608)
!607 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!608 = !{!609, !610, !611, !612}
!609 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!610 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!611 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!612 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!613 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !614, line: 74, baseType: !7, size: 32, elements: !615)
!614 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!615 = !{!616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788}
!616 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!617 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!618 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!619 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!620 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!621 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!622 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!623 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!624 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!625 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!626 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!627 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!628 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!629 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!630 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!631 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!632 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!633 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!634 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!635 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!636 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!637 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!638 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!639 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!640 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!641 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!642 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!643 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!644 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!645 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!646 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!647 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!648 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!649 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!650 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!651 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!652 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!653 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!654 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!655 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!656 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!657 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!658 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!659 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!660 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!661 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!662 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!663 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!664 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!665 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!666 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!667 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!668 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!669 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!670 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!671 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!672 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!673 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!674 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!675 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!676 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!677 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!678 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!679 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!680 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!681 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!682 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!683 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!684 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!685 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!686 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!687 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!688 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!689 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!690 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!691 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!692 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!693 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!694 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!695 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!696 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!697 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!698 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!699 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!700 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!701 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!702 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!703 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!704 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!705 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!706 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!707 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!708 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!709 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!710 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!711 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!712 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!713 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!714 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!715 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!716 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!717 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!718 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!719 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!720 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!721 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!722 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!723 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!724 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!725 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!726 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!727 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!728 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!729 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!730 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!731 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!732 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!733 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!734 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!735 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!736 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!737 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!738 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!739 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!740 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!741 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!742 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!743 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!744 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!745 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!746 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!747 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!748 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!749 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!750 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!751 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!752 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!753 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!754 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!755 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!756 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!757 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!758 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!759 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!760 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!761 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!762 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!763 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!764 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!765 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!766 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!767 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!768 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!769 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!770 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!771 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!772 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!773 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!774 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!775 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!776 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!777 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!778 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!779 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!780 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!781 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!782 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!783 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!784 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!785 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!786 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!787 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!788 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!789 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "op_type", file: !790, line: 25, baseType: !7, size: 32, elements: !791)
!790 = !DIFile(filename: "./recog.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!791 = !{!792, !793, !794}
!792 = !DIEnumerator(name: "OP_IN", value: 0, isUnsigned: true)
!793 = !DIEnumerator(name: "OP_OUT", value: 1, isUnsigned: true)
!794 = !DIEnumerator(name: "OP_INOUT", value: 2, isUnsigned: true)
!795 = !{!796, !797, !798, !799, !802, !803, !805, !1876, !377, !806, !5, !922, !183, !520, !554, !1877, !808, !1878, !1880, !1882, !1891, !7, !876, !1897, !1898}
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!798 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !801)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !807, line: 50, baseType: !808)
!807 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !378, line: 240, size: 384, elements: !810)
!810 = !{!811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !809, file: !378, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !809, file: !378, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !809, file: !378, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !809, file: !378, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !809, file: !378, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !809, file: !378, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !809, file: !378, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !809, file: !378, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !809, file: !378, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !809, file: !378, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !809, file: !378, line: 321, baseType: !822, size: 320, offset: 64)
!822 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !378, line: 315, size: 320, elements: !823)
!823 = !{!824, !1811, !1813, !1874, !1875}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !822, file: !378, line: 316, baseType: !825, size: 64)
!825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !826, size: 64, elements: !841)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !378, line: 183, baseType: !827)
!827 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !378, line: 166, size: 64, elements: !828)
!828 = !{!829, !830, !831, !832, !833, !843, !844, !856, !859, !921, !1789, !1790, !1801, !1808}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !827, file: !378, line: 168, baseType: !798, size: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !827, file: !378, line: 169, baseType: !7, size: 32)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !827, file: !378, line: 170, baseType: !803, size: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !827, file: !378, line: 171, baseType: !806, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !827, file: !378, line: 172, baseType: !834, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !807, line: 53, baseType: !835)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !378, line: 359, size: 128, elements: !837)
!837 = !{!838, !839}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !836, file: !378, line: 360, baseType: !798, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !836, file: !378, line: 361, baseType: !840, size: 64, offset: 64)
!840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !806, size: 64, elements: !841)
!841 = !{!842}
!842 = !DISubrange(count: 1)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !827, file: !378, line: 173, baseType: !5, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !827, file: !378, line: 174, baseType: !845, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !378, line: 133, baseType: !846)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 115, size: 32, elements: !847)
!847 = !{!848, !849, !850, !851, !852, !853, !854, !855}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !846, file: !378, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !846, file: !378, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !846, file: !378, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !846, file: !378, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !846, file: !378, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !846, file: !378, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !846, file: !378, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !846, file: !378, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !827, file: !378, line: 175, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !378, line: 175, flags: DIFlagFwdDecl)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !827, file: !378, line: 176, baseType: !860, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !862, line: 75, size: 256, elements: !863)
!862 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!863 = !{!864, !879, !880, !881}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !861, file: !862, line: 76, baseType: !865, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !862, line: 68, baseType: !867)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !862, line: 63, size: 320, elements: !868)
!868 = !{!869, !871, !872, !873}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !867, file: !862, line: 64, baseType: !870, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !867, file: !862, line: 65, baseType: !870, size: 64, offset: 64)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !867, file: !862, line: 66, baseType: !7, size: 32, offset: 128)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !867, file: !862, line: 67, baseType: !874, size: 128, offset: 192)
!874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 128, elements: !877)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !862, line: 29, baseType: !876)
!876 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!877 = !{!878}
!878 = !DISubrange(count: 2)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !861, file: !862, line: 77, baseType: !865, size: 64, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !861, file: !862, line: 78, baseType: !7, size: 32, offset: 128)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !861, file: !862, line: 79, baseType: !882, size: 64, offset: 192)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !862, line: 49, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !862, line: 45, size: 832, elements: !885)
!885 = !{!886, !887, !888}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !884, file: !862, line: 46, baseType: !870, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !884, file: !862, line: 47, baseType: !860, size: 64, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !884, file: !862, line: 48, baseType: !889, size: 704, offset: 128)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !890, line: 164, size: 704, elements: !891)
!890 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!891 = !{!892, !894, !904, !905, !906, !907, !908, !909, !913, !917, !918, !919, !920}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !889, file: !890, line: 166, baseType: !893, size: 64)
!893 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !889, file: !890, line: 167, baseType: !895, size: 64, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !890, line: 157, size: 192, elements: !897)
!897 = !{!898, !899, !900}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !896, file: !890, line: 159, baseType: !800, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !896, file: !890, line: 160, baseType: !895, size: 64, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !896, file: !890, line: 161, baseType: !901, size: 32, offset: 128)
!901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !801, size: 32, elements: !902)
!902 = !{!903}
!903 = !DISubrange(count: 4)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !889, file: !890, line: 168, baseType: !800, size: 64, offset: 128)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !889, file: !890, line: 169, baseType: !800, size: 64, offset: 192)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !889, file: !890, line: 170, baseType: !800, size: 64, offset: 256)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !889, file: !890, line: 171, baseType: !893, size: 64, offset: 320)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !889, file: !890, line: 172, baseType: !798, size: 32, offset: 384)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !889, file: !890, line: 176, baseType: !910, size: 64, offset: 448)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!895, !802, !893}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !889, file: !890, line: 177, baseType: !914, size: 64, offset: 512)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DISubroutineType(types: !916)
!916 = !{null, !802, !895}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !889, file: !890, line: 178, baseType: !802, size: 64, offset: 576)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !889, file: !890, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !889, file: !890, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !889, file: !890, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !827, file: !378, line: 177, baseType: !922, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !807, line: 56, baseType: !923)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !151, line: 3371, size: 1792, elements: !925)
!925 = !{!926, !959, !965, !976, !995, !1006, !1011, !1018, !1024, !1037, !1049, !1087, !1092, !1120, !1128, !1129, !1134, !1143, !1149, !1154, !1158, !1162, !1413, !1462, !1468, !1475, !1482, !1508, !1533, !1550, !1562, !1584, !1599, !1771}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !924, file: !151, line: 3372, baseType: !927, size: 64)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !151, line: 360, size: 64, elements: !928)
!928 = !{!929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !927, file: !151, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !927, file: !151, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !927, file: !151, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !927, file: !151, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !927, file: !151, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !927, file: !151, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !927, file: !151, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !927, file: !151, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !927, file: !151, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !927, file: !151, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !927, file: !151, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !927, file: !151, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !927, file: !151, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !927, file: !151, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !927, file: !151, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !927, file: !151, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !927, file: !151, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !927, file: !151, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !927, file: !151, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !927, file: !151, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !927, file: !151, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !927, file: !151, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !927, file: !151, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !927, file: !151, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !927, file: !151, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !927, file: !151, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !927, file: !151, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !927, file: !151, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !927, file: !151, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !927, file: !151, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !924, file: !151, line: 3373, baseType: !960, size: 192)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !151, line: 402, size: 192, elements: !961)
!961 = !{!962, !963, !964}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !960, file: !151, line: 403, baseType: !927, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !960, file: !151, line: 404, baseType: !922, size: 64, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !960, file: !151, line: 405, baseType: !922, size: 64, offset: 128)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !924, file: !151, line: 3374, baseType: !966, size: 320)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !151, line: 1384, size: 320, elements: !967)
!967 = !{!968, !969}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !966, file: !151, line: 1385, baseType: !960, size: 192)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !966, file: !151, line: 1386, baseType: !970, size: 128, offset: 192)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !971, line: 58, baseType: !972)
!971 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !971, line: 54, size: 128, elements: !973)
!973 = !{!974, !975}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !972, file: !971, line: 56, baseType: !876, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !972, file: !971, line: 57, baseType: !893, size: 64, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !924, file: !151, line: 3375, baseType: !977, size: 256)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !151, line: 1397, size: 256, elements: !978)
!978 = !{!979, !980}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !977, file: !151, line: 1398, baseType: !960, size: 192)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !977, file: !151, line: 1399, baseType: !981, size: 64, offset: 192)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !983, line: 52, size: 256, elements: !984)
!983 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!984 = !{!985, !986, !987, !988, !989, !990, !991}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !982, file: !983, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !982, file: !983, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !982, file: !983, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !982, file: !983, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !982, file: !983, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !982, file: !983, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !982, file: !983, line: 62, baseType: !992, size: 192, offset: 64)
!992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !876, size: 192, elements: !993)
!993 = !{!994}
!994 = !DISubrange(count: 3)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !924, file: !151, line: 3376, baseType: !996, size: 256)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !151, line: 1408, size: 256, elements: !997)
!997 = !{!998, !999}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !996, file: !151, line: 1409, baseType: !960, size: 192)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !996, file: !151, line: 1410, baseType: !1000, size: 64, offset: 192)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1002, line: 27, size: 192, elements: !1003)
!1002 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1001, file: !1002, line: 29, baseType: !970, size: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1001, file: !1002, line: 30, baseType: !5, size: 32, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !924, file: !151, line: 3377, baseType: !1007, size: 256)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !151, line: 1437, size: 256, elements: !1008)
!1008 = !{!1009, !1010}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1007, file: !151, line: 1438, baseType: !960, size: 192)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1007, file: !151, line: 1439, baseType: !922, size: 64, offset: 192)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !924, file: !151, line: 3378, baseType: !1012, size: 256)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !151, line: 1418, size: 256, elements: !1013)
!1013 = !{!1014, !1015, !1016}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1012, file: !151, line: 1419, baseType: !960, size: 192)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1012, file: !151, line: 1420, baseType: !798, size: 32, offset: 192)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1012, file: !151, line: 1421, baseType: !1017, size: 8, offset: 224)
!1017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !801, size: 8, elements: !841)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !924, file: !151, line: 3379, baseType: !1019, size: 320)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !151, line: 1428, size: 320, elements: !1020)
!1020 = !{!1021, !1022, !1023}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1019, file: !151, line: 1429, baseType: !960, size: 192)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1019, file: !151, line: 1430, baseType: !922, size: 64, offset: 192)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1019, file: !151, line: 1431, baseType: !922, size: 64, offset: 256)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !924, file: !151, line: 3380, baseType: !1025, size: 320)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !151, line: 1460, size: 320, elements: !1026)
!1026 = !{!1027, !1028}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1025, file: !151, line: 1461, baseType: !960, size: 192)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1025, file: !151, line: 1462, baseType: !1029, size: 128, offset: 192)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1030, line: 31, size: 128, elements: !1031)
!1030 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1031 = !{!1032, !1035, !1036}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1029, file: !1030, line: 32, baseType: !1033, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1029, file: !1030, line: 33, baseType: !7, size: 32, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1029, file: !1030, line: 34, baseType: !7, size: 32, offset: 96)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !924, file: !151, line: 3381, baseType: !1038, size: 384)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !151, line: 2507, size: 384, elements: !1039)
!1039 = !{!1040, !1041, !1046, !1047, !1048}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1038, file: !151, line: 2508, baseType: !960, size: 192)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1038, file: !151, line: 2509, baseType: !1042, size: 32, offset: 192)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1043, line: 58, baseType: !1044)
!1043 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1045, line: 44, baseType: !7)
!1045 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1038, file: !151, line: 2510, baseType: !7, size: 32, offset: 224)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1038, file: !151, line: 2511, baseType: !922, size: 64, offset: 256)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1038, file: !151, line: 2512, baseType: !922, size: 64, offset: 320)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !924, file: !151, line: 3382, baseType: !1050, size: 896)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !151, line: 2652, size: 896, elements: !1051)
!1051 = !{!1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1050, file: !151, line: 2653, baseType: !1038, size: 384)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1050, file: !151, line: 2654, baseType: !922, size: 64, offset: 384)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1050, file: !151, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1050, file: !151, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1050, file: !151, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1050, file: !151, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1050, file: !151, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1050, file: !151, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1050, file: !151, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1050, file: !151, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1050, file: !151, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1050, file: !151, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1050, file: !151, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1050, file: !151, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1050, file: !151, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1050, file: !151, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1050, file: !151, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1050, file: !151, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1050, file: !151, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1050, file: !151, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1050, file: !151, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1050, file: !151, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1050, file: !151, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1050, file: !151, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1050, file: !151, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1050, file: !151, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1050, file: !151, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1050, file: !151, line: 2703, baseType: !7, size: 32, offset: 512)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1050, file: !151, line: 2705, baseType: !922, size: 64, offset: 576)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1050, file: !151, line: 2706, baseType: !922, size: 64, offset: 640)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1050, file: !151, line: 2707, baseType: !922, size: 64, offset: 704)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1050, file: !151, line: 2708, baseType: !922, size: 64, offset: 768)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1050, file: !151, line: 2711, baseType: !1085, size: 64, offset: 832)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !151, line: 2711, flags: DIFlagFwdDecl)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !924, file: !151, line: 3383, baseType: !1088, size: 960)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !151, line: 2756, size: 960, elements: !1089)
!1089 = !{!1090, !1091}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1088, file: !151, line: 2757, baseType: !1050, size: 896)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1088, file: !151, line: 2758, baseType: !806, size: 64, offset: 896)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !924, file: !151, line: 3384, baseType: !1093, size: 1472)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !151, line: 3114, size: 1472, elements: !1094)
!1094 = !{!1095, !1116, !1117, !1118, !1119}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1093, file: !151, line: 3115, baseType: !1096, size: 1216)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !151, line: 2984, size: 1216, elements: !1097)
!1097 = !{!1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1096, file: !151, line: 2985, baseType: !1088, size: 960)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1096, file: !151, line: 2986, baseType: !922, size: 64, offset: 960)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1096, file: !151, line: 2987, baseType: !922, size: 64, offset: 1024)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1096, file: !151, line: 2988, baseType: !922, size: 64, offset: 1088)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1096, file: !151, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1096, file: !151, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1096, file: !151, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1096, file: !151, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1096, file: !151, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1096, file: !151, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1096, file: !151, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1096, file: !151, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1096, file: !151, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1096, file: !151, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1096, file: !151, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1096, file: !151, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1096, file: !151, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1096, file: !151, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1093, file: !151, line: 3117, baseType: !922, size: 64, offset: 1216)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1093, file: !151, line: 3119, baseType: !922, size: 64, offset: 1280)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1093, file: !151, line: 3121, baseType: !922, size: 64, offset: 1344)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1093, file: !151, line: 3123, baseType: !922, size: 64, offset: 1408)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !924, file: !151, line: 3385, baseType: !1121, size: 1088)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !151, line: 2874, size: 1088, elements: !1122)
!1122 = !{!1123, !1124, !1125}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1121, file: !151, line: 2875, baseType: !1088, size: 960)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1121, file: !151, line: 2876, baseType: !806, size: 64, offset: 960)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1121, file: !151, line: 2877, baseType: !1126, size: 64, offset: 1024)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !151, line: 2856, flags: DIFlagFwdDecl)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !924, file: !151, line: 3386, baseType: !1096, size: 1216)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !924, file: !151, line: 3387, baseType: !1130, size: 1280)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !151, line: 3093, size: 1280, elements: !1131)
!1131 = !{!1132, !1133}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1130, file: !151, line: 3094, baseType: !1096, size: 1216)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1130, file: !151, line: 3095, baseType: !1126, size: 64, offset: 1216)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !924, file: !151, line: 3388, baseType: !1135, size: 1216)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !151, line: 2824, size: 1216, elements: !1136)
!1136 = !{!1137, !1138, !1139, !1140, !1141, !1142}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1135, file: !151, line: 2825, baseType: !1050, size: 896)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1135, file: !151, line: 2827, baseType: !922, size: 64, offset: 896)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1135, file: !151, line: 2828, baseType: !922, size: 64, offset: 960)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1135, file: !151, line: 2829, baseType: !922, size: 64, offset: 1024)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1135, file: !151, line: 2830, baseType: !922, size: 64, offset: 1088)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1135, file: !151, line: 2831, baseType: !922, size: 64, offset: 1152)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !924, file: !151, line: 3389, baseType: !1144, size: 1024)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !151, line: 2850, size: 1024, elements: !1145)
!1145 = !{!1146, !1147, !1148}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1144, file: !151, line: 2851, baseType: !1088, size: 960)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1144, file: !151, line: 2852, baseType: !798, size: 32, offset: 960)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1144, file: !151, line: 2853, baseType: !798, size: 32, offset: 992)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !924, file: !151, line: 3390, baseType: !1150, size: 1024)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !151, line: 2857, size: 1024, elements: !1151)
!1151 = !{!1152, !1153}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1150, file: !151, line: 2858, baseType: !1088, size: 960)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1150, file: !151, line: 2859, baseType: !1126, size: 64, offset: 960)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !924, file: !151, line: 3391, baseType: !1155, size: 960)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !151, line: 2862, size: 960, elements: !1156)
!1156 = !{!1157}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1155, file: !151, line: 2863, baseType: !1088, size: 960)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !924, file: !151, line: 3392, baseType: !1159, size: 1472)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !151, line: 3304, size: 1472, elements: !1160)
!1160 = !{!1161}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1159, file: !151, line: 3305, baseType: !1093, size: 1472)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !924, file: !151, line: 3393, baseType: !1163, size: 1792)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !151, line: 3248, size: 1792, elements: !1164)
!1164 = !{!1165, !1166, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1163, file: !151, line: 3249, baseType: !1093, size: 1472)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1163, file: !151, line: 3251, baseType: !1167, size: 64, offset: 1472)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1169, line: 463, size: 1152, elements: !1170)
!1169 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1170 = !{!1171, !1174, !1278, !1279, !1282, !1285, !1337, !1338, !1339, !1340, !1341, !1365, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1168, file: !1169, line: 464, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1169, line: 464, flags: DIFlagFwdDecl)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1168, file: !1169, line: 467, baseType: !1175, size: 64, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !1177)
!1177 = !{!1178, !1253, !1254, !1267, !1268, !1269, !1270, !1271, !1272, !1274, !1276, !1277}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1176, file: !135, line: 377, baseType: !1179, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !807, line: 111, baseType: !1180)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !1182)
!1182 = !{!1183, !1218, !1219, !1220, !1223, !1227, !1228, !1229, !1247, !1248, !1249, !1250, !1251, !1252}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1181, file: !135, line: 219, baseType: !1184, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !1187)
!1187 = !{!1188}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1186, file: !135, line: 151, baseType: !1189, size: 128)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !1190)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !1191)
!1191 = !{!1192, !1193, !1194}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1190, file: !135, line: 150, baseType: !7, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1190, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1190, file: !135, line: 150, baseType: !1195, size: 64, offset: 64)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1196, size: 64, elements: !841)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !807, line: 108, baseType: !1197)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1210, !1211, !1212, !1213, !1214, !1215, !1216}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1198, file: !135, line: 124, baseType: !1180, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1198, file: !135, line: 125, baseType: !1180, size: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1198, file: !135, line: 131, baseType: !1203, size: 64, offset: 128)
!1203 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !1204)
!1204 = !{!1205, !1209}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1203, file: !135, line: 129, baseType: !1206, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !807, line: 66, baseType: !1207)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !807, line: 65, flags: DIFlagFwdDecl)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1203, file: !135, line: 130, baseType: !806, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1198, file: !135, line: 134, baseType: !802, size: 64, offset: 192)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1198, file: !135, line: 137, baseType: !922, size: 64, offset: 256)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1198, file: !135, line: 138, baseType: !1042, size: 32, offset: 320)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1198, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1198, file: !135, line: 144, baseType: !798, size: 32, offset: 384)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1198, file: !135, line: 145, baseType: !798, size: 32, offset: 416)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1198, file: !135, line: 146, baseType: !1217, size: 64, offset: 448)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !893)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1181, file: !135, line: 220, baseType: !1184, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1181, file: !135, line: 223, baseType: !802, size: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1181, file: !135, line: 226, baseType: !1221, size: 64, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !135, line: 185, flags: DIFlagFwdDecl)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1181, file: !135, line: 229, baseType: !1224, size: 128, offset: 256)
!1224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1225, size: 128, elements: !877)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1181, file: !135, line: 232, baseType: !1180, size: 64, offset: 384)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1181, file: !135, line: 233, baseType: !1180, size: 64, offset: 448)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1181, file: !135, line: 238, baseType: !1230, size: 64, offset: 512)
!1230 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1231)
!1231 = !{!1232, !1238}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1230, file: !135, line: 236, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1235)
!1235 = !{!1236, !1237}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1234, file: !135, line: 275, baseType: !1206, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1234, file: !135, line: 278, baseType: !1206, size: 64, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1230, file: !135, line: 237, baseType: !1239, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245, !1246}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1240, file: !135, line: 261, baseType: !806, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1240, file: !135, line: 262, baseType: !806, size: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1240, file: !135, line: 266, baseType: !806, size: 64, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1240, file: !135, line: 267, baseType: !806, size: 64, offset: 192)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1240, file: !135, line: 270, baseType: !798, size: 32, offset: 256)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1181, file: !135, line: 241, baseType: !1217, size: 64, offset: 576)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1181, file: !135, line: 244, baseType: !798, size: 32, offset: 640)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1181, file: !135, line: 247, baseType: !798, size: 32, offset: 672)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1181, file: !135, line: 250, baseType: !798, size: 32, offset: 704)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1181, file: !135, line: 253, baseType: !798, size: 32, offset: 736)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1181, file: !135, line: 256, baseType: !798, size: 32, offset: 768)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1176, file: !135, line: 378, baseType: !1179, size: 64, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1176, file: !135, line: 381, baseType: !1255, size: 64, offset: 128)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1257)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1258)
!1258 = !{!1259}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1257, file: !135, line: 282, baseType: !1260, size: 128)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1261)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1262)
!1262 = !{!1263, !1264, !1265}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1261, file: !135, line: 281, baseType: !7, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1261, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1261, file: !135, line: 281, baseType: !1266, size: 64, offset: 64)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1179, size: 64, elements: !841)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1176, file: !135, line: 384, baseType: !798, size: 32, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1176, file: !135, line: 387, baseType: !798, size: 32, offset: 224)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1176, file: !135, line: 390, baseType: !798, size: 32, offset: 256)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1176, file: !135, line: 394, baseType: !1255, size: 64, offset: 320)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1176, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1176, file: !135, line: 399, baseType: !1273, size: 64, offset: 416)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !877)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1176, file: !135, line: 402, baseType: !1275, size: 64, offset: 480)
!1275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !877)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1176, file: !135, line: 406, baseType: !798, size: 32, offset: 544)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1176, file: !135, line: 409, baseType: !798, size: 32, offset: 576)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1168, file: !1169, line: 470, baseType: !1207, size: 64, offset: 128)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1168, file: !1169, line: 473, baseType: !1280, size: 64, offset: 192)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1169, line: 166, flags: DIFlagFwdDecl)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1168, file: !1169, line: 476, baseType: !1283, size: 64, offset: 256)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1169, line: 476, flags: DIFlagFwdDecl)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1168, file: !1169, line: 479, baseType: !1286, size: 64, offset: 320)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1287, line: 144, baseType: !1288)
!1287 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1287, line: 100, size: 896, elements: !1290)
!1290 = !{!1291, !1299, !1304, !1309, !1311, !1314, !1315, !1316, !1317, !1318, !1323, !1325, !1326, !1331, !1336}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1289, file: !1287, line: 102, baseType: !1292, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1287, line: 52, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!1296, !1297}
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1287, line: 47, baseType: !7)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1289, file: !1287, line: 105, baseType: !1300, size: 64, offset: 64)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1287, line: 59, baseType: !1301)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!798, !1297, !1297}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1289, file: !1287, line: 108, baseType: !1305, size: 64, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1287, line: 63, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{null, !802}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1289, file: !1287, line: 111, baseType: !1310, size: 64, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1289, file: !1287, line: 114, baseType: !1312, size: 64, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1313, line: 46, baseType: !876)
!1313 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1289, file: !1287, line: 117, baseType: !1312, size: 64, offset: 320)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1289, file: !1287, line: 120, baseType: !1312, size: 64, offset: 384)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1289, file: !1287, line: 124, baseType: !7, size: 32, offset: 448)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1289, file: !1287, line: 128, baseType: !7, size: 32, offset: 480)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1289, file: !1287, line: 131, baseType: !1319, size: 64, offset: 512)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1287, line: 75, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!802, !1312, !1312}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1289, file: !1287, line: 132, baseType: !1324, size: 64, offset: 576)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1287, line: 78, baseType: !1306)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1289, file: !1287, line: 135, baseType: !802, size: 64, offset: 640)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1289, file: !1287, line: 136, baseType: !1327, size: 64, offset: 704)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1287, line: 82, baseType: !1328)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!802, !802, !1312, !1312}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1289, file: !1287, line: 137, baseType: !1332, size: 64, offset: 768)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1287, line: 83, baseType: !1333)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{null, !802, !802}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1289, file: !1287, line: 141, baseType: !7, size: 32, offset: 832)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1168, file: !1169, line: 484, baseType: !922, size: 64, offset: 384)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1168, file: !1169, line: 488, baseType: !922, size: 64, offset: 448)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1168, file: !1169, line: 493, baseType: !922, size: 64, offset: 512)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1168, file: !1169, line: 496, baseType: !922, size: 64, offset: 576)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1168, file: !1169, line: 501, baseType: !1342, size: 64, offset: 640)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !146, line: 2355, size: 576, elements: !1344)
!1344 = !{!1345, !1348, !1349, !1350, !1351, !1353, !1354, !1359, !1360, !1361, !1362, !1363, !1364}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1343, file: !146, line: 2356, baseType: !1346, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !146, line: 2356, flags: DIFlagFwdDecl)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1343, file: !146, line: 2357, baseType: !803, size: 64, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1343, file: !146, line: 2358, baseType: !798, size: 32, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1343, file: !146, line: 2359, baseType: !798, size: 32, offset: 160)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1343, file: !146, line: 2360, baseType: !1352, size: 128, offset: 192)
!1352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 128, elements: !902)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1343, file: !146, line: 2364, baseType: !798, size: 32, offset: 320)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1343, file: !146, line: 2367, baseType: !1355, size: 128, offset: 384)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !146, line: 2349, size: 128, elements: !1356)
!1356 = !{!1357, !1358}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1355, file: !146, line: 2351, baseType: !806, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1355, file: !146, line: 2352, baseType: !893, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1343, file: !146, line: 2371, baseType: !145, size: 32, offset: 512)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1343, file: !146, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1343, file: !146, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1343, file: !146, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1343, file: !146, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1343, file: !146, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1168, file: !1169, line: 504, baseType: !1366, size: 64, offset: 704)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1169, line: 504, flags: DIFlagFwdDecl)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1168, file: !1169, line: 507, baseType: !1286, size: 64, offset: 768)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1168, file: !1169, line: 510, baseType: !798, size: 32, offset: 832)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1168, file: !1169, line: 513, baseType: !798, size: 32, offset: 864)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1168, file: !1169, line: 516, baseType: !1042, size: 32, offset: 896)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1168, file: !1169, line: 519, baseType: !1042, size: 32, offset: 928)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1168, file: !1169, line: 522, baseType: !7, size: 32, offset: 960)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1168, file: !1169, line: 523, baseType: !7, size: 32, offset: 992)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1168, file: !1169, line: 528, baseType: !803, size: 64, offset: 1024)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1168, file: !1169, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1168, file: !1169, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1168, file: !1169, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1168, file: !1169, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1168, file: !1169, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1168, file: !1169, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1168, file: !1169, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1168, file: !1169, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1168, file: !1169, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1168, file: !1169, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1168, file: !1169, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1168, file: !1169, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1168, file: !1169, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1168, file: !1169, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1168, file: !1169, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1168, file: !1169, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1163, file: !151, line: 3254, baseType: !922, size: 64, offset: 1536)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1163, file: !151, line: 3257, baseType: !922, size: 64, offset: 1600)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1163, file: !151, line: 3258, baseType: !922, size: 64, offset: 1664)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1163, file: !151, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1163, file: !151, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1163, file: !151, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1163, file: !151, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1163, file: !151, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1163, file: !151, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1163, file: !151, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1163, file: !151, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1163, file: !151, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1163, file: !151, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1163, file: !151, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1163, file: !151, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1163, file: !151, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1163, file: !151, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1163, file: !151, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1163, file: !151, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1163, file: !151, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1163, file: !151, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !924, file: !151, line: 3394, baseType: !1414, size: 1344)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !151, line: 2279, size: 1344, elements: !1415)
!1415 = !{!1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1441, !1442, !1443, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1414, file: !151, line: 2280, baseType: !960, size: 192)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1414, file: !151, line: 2281, baseType: !922, size: 64, offset: 192)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1414, file: !151, line: 2282, baseType: !922, size: 64, offset: 256)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1414, file: !151, line: 2283, baseType: !922, size: 64, offset: 320)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1414, file: !151, line: 2284, baseType: !922, size: 64, offset: 384)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1414, file: !151, line: 2285, baseType: !7, size: 32, offset: 448)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1414, file: !151, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1414, file: !151, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1414, file: !151, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1414, file: !151, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1414, file: !151, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1414, file: !151, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1414, file: !151, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1414, file: !151, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1414, file: !151, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1414, file: !151, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1414, file: !151, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1414, file: !151, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1414, file: !151, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1414, file: !151, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1414, file: !151, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1414, file: !151, line: 2305, baseType: !7, size: 32, offset: 512)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1414, file: !151, line: 2306, baseType: !1439, size: 32, offset: 544)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1440, line: 31, baseType: !798)
!1440 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1414, file: !151, line: 2307, baseType: !922, size: 64, offset: 576)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1414, file: !151, line: 2308, baseType: !922, size: 64, offset: 640)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1414, file: !151, line: 2314, baseType: !1444, size: 64, offset: 704)
!1444 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !151, line: 2309, size: 64, elements: !1445)
!1445 = !{!1446, !1447, !1448}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1444, file: !151, line: 2310, baseType: !798, size: 32)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1444, file: !151, line: 2311, baseType: !803, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1444, file: !151, line: 2312, baseType: !1449, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !151, line: 2277, flags: DIFlagFwdDecl)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1414, file: !151, line: 2315, baseType: !922, size: 64, offset: 768)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1414, file: !151, line: 2316, baseType: !922, size: 64, offset: 832)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1414, file: !151, line: 2317, baseType: !922, size: 64, offset: 896)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1414, file: !151, line: 2318, baseType: !922, size: 64, offset: 960)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1414, file: !151, line: 2319, baseType: !922, size: 64, offset: 1024)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1414, file: !151, line: 2320, baseType: !922, size: 64, offset: 1088)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1414, file: !151, line: 2321, baseType: !922, size: 64, offset: 1152)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1414, file: !151, line: 2322, baseType: !922, size: 64, offset: 1216)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1414, file: !151, line: 2324, baseType: !1460, size: 64, offset: 1280)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !151, line: 2324, flags: DIFlagFwdDecl)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !924, file: !151, line: 3395, baseType: !1463, size: 320)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !151, line: 1469, size: 320, elements: !1464)
!1464 = !{!1465, !1466, !1467}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1463, file: !151, line: 1470, baseType: !960, size: 192)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1463, file: !151, line: 1471, baseType: !922, size: 64, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1463, file: !151, line: 1472, baseType: !922, size: 64, offset: 256)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !924, file: !151, line: 3396, baseType: !1469, size: 320)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !151, line: 1482, size: 320, elements: !1470)
!1470 = !{!1471, !1472, !1473}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1469, file: !151, line: 1483, baseType: !960, size: 192)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1469, file: !151, line: 1484, baseType: !798, size: 32, offset: 192)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1469, file: !151, line: 1485, baseType: !1474, size: 64, offset: 256)
!1474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !922, size: 64, elements: !841)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !924, file: !151, line: 3397, baseType: !1476, size: 384)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !151, line: 1829, size: 384, elements: !1477)
!1477 = !{!1478, !1479, !1480, !1481}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1476, file: !151, line: 1830, baseType: !960, size: 192)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1476, file: !151, line: 1831, baseType: !1042, size: 32, offset: 192)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1476, file: !151, line: 1832, baseType: !922, size: 64, offset: 256)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1476, file: !151, line: 1835, baseType: !1474, size: 64, offset: 320)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !924, file: !151, line: 3398, baseType: !1483, size: 704)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !151, line: 1898, size: 704, elements: !1484)
!1484 = !{!1485, !1486, !1487, !1491, !1492, !1495}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1483, file: !151, line: 1899, baseType: !960, size: 192)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1483, file: !151, line: 1902, baseType: !922, size: 64, offset: 192)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1483, file: !151, line: 1905, baseType: !1488, size: 64, offset: 256)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !807, line: 58, baseType: !1489)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !807, line: 57, flags: DIFlagFwdDecl)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1483, file: !151, line: 1908, baseType: !7, size: 32, offset: 320)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1483, file: !151, line: 1911, baseType: !1493, size: 64, offset: 384)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64)
!1494 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !151, line: 1876, flags: DIFlagFwdDecl)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1483, file: !151, line: 1914, baseType: !1496, size: 256, offset: 448)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !151, line: 1883, size: 256, elements: !1497)
!1497 = !{!1498, !1500, !1501, !1506}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1496, file: !151, line: 1884, baseType: !1499, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1496, file: !151, line: 1885, baseType: !1499, size: 64, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1496, file: !151, line: 1891, baseType: !1502, size: 64, offset: 128)
!1502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1496, file: !151, line: 1891, size: 64, elements: !1503)
!1503 = !{!1504, !1505}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1502, file: !151, line: 1891, baseType: !1488, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1502, file: !151, line: 1891, baseType: !922, size: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1496, file: !151, line: 1892, baseType: !1507, size: 64, offset: 192)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !924, file: !151, line: 3399, baseType: !1509, size: 704)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !151, line: 2008, size: 704, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1514, !1515, !1516, !1528, !1529, !1530, !1531, !1532}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1509, file: !151, line: 2009, baseType: !960, size: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1509, file: !151, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1509, file: !151, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1509, file: !151, line: 2014, baseType: !1042, size: 32, offset: 224)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1509, file: !151, line: 2016, baseType: !922, size: 64, offset: 256)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1509, file: !151, line: 2017, baseType: !1517, size: 64, offset: 320)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !151, line: 183, baseType: !1519)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !151, line: 183, size: 128, elements: !1520)
!1520 = !{!1521}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1519, file: !151, line: 183, baseType: !1522, size: 128)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !151, line: 182, baseType: !1523)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !151, line: 182, size: 128, elements: !1524)
!1524 = !{!1525, !1526, !1527}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1523, file: !151, line: 182, baseType: !7, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1523, file: !151, line: 182, baseType: !7, size: 32, offset: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1523, file: !151, line: 182, baseType: !1474, size: 64, offset: 64)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1509, file: !151, line: 2019, baseType: !922, size: 64, offset: 384)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1509, file: !151, line: 2020, baseType: !922, size: 64, offset: 448)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1509, file: !151, line: 2021, baseType: !922, size: 64, offset: 512)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1509, file: !151, line: 2022, baseType: !922, size: 64, offset: 576)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1509, file: !151, line: 2023, baseType: !922, size: 64, offset: 640)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !924, file: !151, line: 3400, baseType: !1534, size: 832)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !151, line: 2430, size: 832, elements: !1535)
!1535 = !{!1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1534, file: !151, line: 2431, baseType: !960, size: 192)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1534, file: !151, line: 2433, baseType: !922, size: 64, offset: 192)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1534, file: !151, line: 2434, baseType: !922, size: 64, offset: 256)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1534, file: !151, line: 2435, baseType: !922, size: 64, offset: 320)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1534, file: !151, line: 2436, baseType: !922, size: 64, offset: 384)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1534, file: !151, line: 2437, baseType: !1517, size: 64, offset: 448)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1534, file: !151, line: 2438, baseType: !922, size: 64, offset: 512)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1534, file: !151, line: 2440, baseType: !922, size: 64, offset: 576)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1534, file: !151, line: 2441, baseType: !922, size: 64, offset: 640)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1534, file: !151, line: 2443, baseType: !1546, size: 128, offset: 704)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !151, line: 182, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !151, line: 182, size: 128, elements: !1548)
!1548 = !{!1549}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1547, file: !151, line: 182, baseType: !1522, size: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !924, file: !151, line: 3401, baseType: !1551, size: 320)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !151, line: 3327, size: 320, elements: !1552)
!1552 = !{!1553, !1554, !1561}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1551, file: !151, line: 3329, baseType: !960, size: 192)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1551, file: !151, line: 3330, baseType: !1555, size: 64, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !151, line: 3320, size: 192, elements: !1557)
!1557 = !{!1558, !1559, !1560}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1556, file: !151, line: 3322, baseType: !1555, size: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1556, file: !151, line: 3323, baseType: !1555, size: 64, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1556, file: !151, line: 3324, baseType: !922, size: 64, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1551, file: !151, line: 3331, baseType: !1555, size: 64, offset: 256)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !924, file: !151, line: 3402, baseType: !1563, size: 256)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !151, line: 1540, size: 256, elements: !1564)
!1564 = !{!1565, !1566}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1563, file: !151, line: 1541, baseType: !960, size: 192)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1563, file: !151, line: 1542, baseType: !1567, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !151, line: 1538, baseType: !1569)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !151, line: 1538, size: 192, elements: !1570)
!1570 = !{!1571}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1569, file: !151, line: 1538, baseType: !1572, size: 192)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !151, line: 1537, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !151, line: 1537, size: 192, elements: !1574)
!1574 = !{!1575, !1576, !1577}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1573, file: !151, line: 1537, baseType: !7, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1573, file: !151, line: 1537, baseType: !7, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1573, file: !151, line: 1537, baseType: !1578, size: 128, offset: 64)
!1578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1579, size: 128, elements: !841)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !151, line: 1535, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !151, line: 1532, size: 128, elements: !1581)
!1581 = !{!1582, !1583}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1580, file: !151, line: 1533, baseType: !922, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1580, file: !151, line: 1534, baseType: !922, size: 64, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !924, file: !151, line: 3403, baseType: !1585, size: 512)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !151, line: 1938, size: 512, elements: !1586)
!1586 = !{!1587, !1588, !1589, !1590, !1596, !1597, !1598}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1585, file: !151, line: 1939, baseType: !960, size: 192)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1585, file: !151, line: 1940, baseType: !1042, size: 32, offset: 192)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1585, file: !151, line: 1941, baseType: !150, size: 32, offset: 224)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1585, file: !151, line: 1946, baseType: !1591, size: 32, offset: 256)
!1591 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !151, line: 1942, size: 32, elements: !1592)
!1592 = !{!1593, !1594, !1595}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1591, file: !151, line: 1943, baseType: !169, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1591, file: !151, line: 1944, baseType: !176, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1591, file: !151, line: 1945, baseType: !183, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1585, file: !151, line: 1950, baseType: !1206, size: 64, offset: 320)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1585, file: !151, line: 1951, baseType: !1206, size: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1585, file: !151, line: 1953, baseType: !1474, size: 64, offset: 448)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !924, file: !151, line: 3404, baseType: !1600, size: 1664)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !151, line: 3337, size: 1664, elements: !1601)
!1601 = !{!1602, !1603}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1600, file: !151, line: 3338, baseType: !960, size: 192)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1600, file: !151, line: 3341, baseType: !1604, size: 1472, offset: 192)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1605, line: 410, size: 1472, elements: !1606)
!1605 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1606 = !{!1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1604, file: !1605, line: 412, baseType: !798, size: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1604, file: !1605, line: 413, baseType: !798, size: 32, offset: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1604, file: !1605, line: 414, baseType: !798, size: 32, offset: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1604, file: !1605, line: 415, baseType: !798, size: 32, offset: 96)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1604, file: !1605, line: 416, baseType: !798, size: 32, offset: 128)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1604, file: !1605, line: 417, baseType: !798, size: 32, offset: 160)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1604, file: !1605, line: 418, baseType: !797, size: 8, offset: 192)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1604, file: !1605, line: 419, baseType: !797, size: 8, offset: 200)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1604, file: !1605, line: 420, baseType: !1616, size: 8, offset: 208)
!1616 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1604, file: !1605, line: 421, baseType: !1616, size: 8, offset: 216)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1604, file: !1605, line: 422, baseType: !1616, size: 8, offset: 224)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1604, file: !1605, line: 423, baseType: !1616, size: 8, offset: 232)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1604, file: !1605, line: 424, baseType: !1616, size: 8, offset: 240)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1604, file: !1605, line: 425, baseType: !1616, size: 8, offset: 248)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1604, file: !1605, line: 426, baseType: !1616, size: 8, offset: 256)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1604, file: !1605, line: 427, baseType: !1616, size: 8, offset: 264)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1604, file: !1605, line: 428, baseType: !1616, size: 8, offset: 272)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1604, file: !1605, line: 429, baseType: !1616, size: 8, offset: 280)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1604, file: !1605, line: 430, baseType: !1616, size: 8, offset: 288)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1604, file: !1605, line: 431, baseType: !1616, size: 8, offset: 296)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1604, file: !1605, line: 432, baseType: !1616, size: 8, offset: 304)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1604, file: !1605, line: 433, baseType: !1616, size: 8, offset: 312)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1604, file: !1605, line: 434, baseType: !1616, size: 8, offset: 320)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1604, file: !1605, line: 435, baseType: !1616, size: 8, offset: 328)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1604, file: !1605, line: 436, baseType: !1616, size: 8, offset: 336)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1604, file: !1605, line: 437, baseType: !1616, size: 8, offset: 344)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1604, file: !1605, line: 438, baseType: !1616, size: 8, offset: 352)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1604, file: !1605, line: 439, baseType: !1616, size: 8, offset: 360)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1604, file: !1605, line: 440, baseType: !1616, size: 8, offset: 368)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1604, file: !1605, line: 441, baseType: !1616, size: 8, offset: 376)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1604, file: !1605, line: 442, baseType: !1616, size: 8, offset: 384)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1604, file: !1605, line: 443, baseType: !1616, size: 8, offset: 392)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1604, file: !1605, line: 444, baseType: !1616, size: 8, offset: 400)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1604, file: !1605, line: 445, baseType: !1616, size: 8, offset: 408)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1604, file: !1605, line: 446, baseType: !1616, size: 8, offset: 416)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1604, file: !1605, line: 447, baseType: !1616, size: 8, offset: 424)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1604, file: !1605, line: 448, baseType: !1616, size: 8, offset: 432)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1604, file: !1605, line: 449, baseType: !1616, size: 8, offset: 440)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1604, file: !1605, line: 450, baseType: !1616, size: 8, offset: 448)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1604, file: !1605, line: 451, baseType: !1616, size: 8, offset: 456)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1604, file: !1605, line: 452, baseType: !1616, size: 8, offset: 464)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1604, file: !1605, line: 453, baseType: !1616, size: 8, offset: 472)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1604, file: !1605, line: 454, baseType: !1616, size: 8, offset: 480)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1604, file: !1605, line: 455, baseType: !1616, size: 8, offset: 488)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1604, file: !1605, line: 456, baseType: !1616, size: 8, offset: 496)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1604, file: !1605, line: 457, baseType: !1616, size: 8, offset: 504)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1604, file: !1605, line: 458, baseType: !1616, size: 8, offset: 512)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1604, file: !1605, line: 459, baseType: !1616, size: 8, offset: 520)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1604, file: !1605, line: 460, baseType: !1616, size: 8, offset: 528)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1604, file: !1605, line: 461, baseType: !1616, size: 8, offset: 536)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1604, file: !1605, line: 462, baseType: !1616, size: 8, offset: 544)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1604, file: !1605, line: 463, baseType: !1616, size: 8, offset: 552)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1604, file: !1605, line: 464, baseType: !1616, size: 8, offset: 560)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1604, file: !1605, line: 465, baseType: !1616, size: 8, offset: 568)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1604, file: !1605, line: 466, baseType: !1616, size: 8, offset: 576)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1604, file: !1605, line: 467, baseType: !1616, size: 8, offset: 584)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1604, file: !1605, line: 468, baseType: !1616, size: 8, offset: 592)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1604, file: !1605, line: 469, baseType: !1616, size: 8, offset: 600)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1604, file: !1605, line: 470, baseType: !1616, size: 8, offset: 608)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1604, file: !1605, line: 471, baseType: !1616, size: 8, offset: 616)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1604, file: !1605, line: 472, baseType: !1616, size: 8, offset: 624)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1604, file: !1605, line: 473, baseType: !1616, size: 8, offset: 632)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1604, file: !1605, line: 474, baseType: !1616, size: 8, offset: 640)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1604, file: !1605, line: 475, baseType: !1616, size: 8, offset: 648)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1604, file: !1605, line: 476, baseType: !1616, size: 8, offset: 656)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1604, file: !1605, line: 477, baseType: !1616, size: 8, offset: 664)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1604, file: !1605, line: 478, baseType: !1616, size: 8, offset: 672)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1604, file: !1605, line: 479, baseType: !1616, size: 8, offset: 680)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1604, file: !1605, line: 480, baseType: !1616, size: 8, offset: 688)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1604, file: !1605, line: 481, baseType: !1616, size: 8, offset: 696)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1604, file: !1605, line: 482, baseType: !1616, size: 8, offset: 704)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1604, file: !1605, line: 483, baseType: !1616, size: 8, offset: 712)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1604, file: !1605, line: 484, baseType: !1616, size: 8, offset: 720)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1604, file: !1605, line: 485, baseType: !1616, size: 8, offset: 728)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1604, file: !1605, line: 486, baseType: !1616, size: 8, offset: 736)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1604, file: !1605, line: 487, baseType: !1616, size: 8, offset: 744)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1604, file: !1605, line: 488, baseType: !1616, size: 8, offset: 752)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1604, file: !1605, line: 489, baseType: !1616, size: 8, offset: 760)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1604, file: !1605, line: 490, baseType: !1616, size: 8, offset: 768)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1604, file: !1605, line: 491, baseType: !1616, size: 8, offset: 776)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1604, file: !1605, line: 492, baseType: !1616, size: 8, offset: 784)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1604, file: !1605, line: 493, baseType: !1616, size: 8, offset: 792)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1604, file: !1605, line: 494, baseType: !1616, size: 8, offset: 800)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1604, file: !1605, line: 495, baseType: !1616, size: 8, offset: 808)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1604, file: !1605, line: 496, baseType: !1616, size: 8, offset: 816)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1604, file: !1605, line: 497, baseType: !1616, size: 8, offset: 824)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1604, file: !1605, line: 498, baseType: !1616, size: 8, offset: 832)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1604, file: !1605, line: 499, baseType: !1616, size: 8, offset: 840)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1604, file: !1605, line: 500, baseType: !1616, size: 8, offset: 848)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1604, file: !1605, line: 501, baseType: !1616, size: 8, offset: 856)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1604, file: !1605, line: 502, baseType: !1616, size: 8, offset: 864)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1604, file: !1605, line: 503, baseType: !1616, size: 8, offset: 872)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1604, file: !1605, line: 504, baseType: !1616, size: 8, offset: 880)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1604, file: !1605, line: 505, baseType: !1616, size: 8, offset: 888)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1604, file: !1605, line: 506, baseType: !1616, size: 8, offset: 896)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1604, file: !1605, line: 507, baseType: !1616, size: 8, offset: 904)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1604, file: !1605, line: 508, baseType: !1616, size: 8, offset: 912)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1604, file: !1605, line: 509, baseType: !1616, size: 8, offset: 920)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1604, file: !1605, line: 510, baseType: !1616, size: 8, offset: 928)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1604, file: !1605, line: 511, baseType: !1616, size: 8, offset: 936)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1604, file: !1605, line: 512, baseType: !1616, size: 8, offset: 944)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1604, file: !1605, line: 513, baseType: !1616, size: 8, offset: 952)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1604, file: !1605, line: 514, baseType: !1616, size: 8, offset: 960)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1604, file: !1605, line: 515, baseType: !1616, size: 8, offset: 968)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1604, file: !1605, line: 516, baseType: !1616, size: 8, offset: 976)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1604, file: !1605, line: 517, baseType: !1616, size: 8, offset: 984)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1604, file: !1605, line: 518, baseType: !1616, size: 8, offset: 992)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1604, file: !1605, line: 519, baseType: !1616, size: 8, offset: 1000)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1604, file: !1605, line: 520, baseType: !1616, size: 8, offset: 1008)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1604, file: !1605, line: 521, baseType: !1616, size: 8, offset: 1016)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1604, file: !1605, line: 522, baseType: !1616, size: 8, offset: 1024)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1604, file: !1605, line: 523, baseType: !1616, size: 8, offset: 1032)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1604, file: !1605, line: 524, baseType: !1616, size: 8, offset: 1040)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1604, file: !1605, line: 525, baseType: !1616, size: 8, offset: 1048)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1604, file: !1605, line: 526, baseType: !1616, size: 8, offset: 1056)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1604, file: !1605, line: 527, baseType: !1616, size: 8, offset: 1064)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1604, file: !1605, line: 528, baseType: !1616, size: 8, offset: 1072)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1604, file: !1605, line: 529, baseType: !1616, size: 8, offset: 1080)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1604, file: !1605, line: 530, baseType: !1616, size: 8, offset: 1088)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1604, file: !1605, line: 531, baseType: !1616, size: 8, offset: 1096)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1604, file: !1605, line: 532, baseType: !1616, size: 8, offset: 1104)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1604, file: !1605, line: 533, baseType: !1616, size: 8, offset: 1112)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1604, file: !1605, line: 534, baseType: !1616, size: 8, offset: 1120)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1604, file: !1605, line: 535, baseType: !1616, size: 8, offset: 1128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1604, file: !1605, line: 536, baseType: !1616, size: 8, offset: 1136)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1604, file: !1605, line: 537, baseType: !1616, size: 8, offset: 1144)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1604, file: !1605, line: 538, baseType: !1616, size: 8, offset: 1152)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1604, file: !1605, line: 539, baseType: !1616, size: 8, offset: 1160)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1604, file: !1605, line: 540, baseType: !1616, size: 8, offset: 1168)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1604, file: !1605, line: 541, baseType: !1616, size: 8, offset: 1176)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1604, file: !1605, line: 542, baseType: !1616, size: 8, offset: 1184)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1604, file: !1605, line: 543, baseType: !1616, size: 8, offset: 1192)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1604, file: !1605, line: 544, baseType: !1616, size: 8, offset: 1200)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1604, file: !1605, line: 545, baseType: !1616, size: 8, offset: 1208)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1604, file: !1605, line: 546, baseType: !1616, size: 8, offset: 1216)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1604, file: !1605, line: 547, baseType: !1616, size: 8, offset: 1224)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1604, file: !1605, line: 548, baseType: !1616, size: 8, offset: 1232)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1604, file: !1605, line: 549, baseType: !1616, size: 8, offset: 1240)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1604, file: !1605, line: 550, baseType: !1616, size: 8, offset: 1248)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1604, file: !1605, line: 551, baseType: !1616, size: 8, offset: 1256)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1604, file: !1605, line: 552, baseType: !1616, size: 8, offset: 1264)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1604, file: !1605, line: 553, baseType: !1616, size: 8, offset: 1272)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1604, file: !1605, line: 554, baseType: !1616, size: 8, offset: 1280)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1604, file: !1605, line: 555, baseType: !1616, size: 8, offset: 1288)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1604, file: !1605, line: 556, baseType: !1616, size: 8, offset: 1296)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1604, file: !1605, line: 557, baseType: !1616, size: 8, offset: 1304)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1604, file: !1605, line: 558, baseType: !1616, size: 8, offset: 1312)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1604, file: !1605, line: 559, baseType: !1616, size: 8, offset: 1320)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1604, file: !1605, line: 560, baseType: !1616, size: 8, offset: 1328)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1604, file: !1605, line: 561, baseType: !1616, size: 8, offset: 1336)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1604, file: !1605, line: 562, baseType: !1616, size: 8, offset: 1344)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1604, file: !1605, line: 563, baseType: !1616, size: 8, offset: 1352)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1604, file: !1605, line: 564, baseType: !1616, size: 8, offset: 1360)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1604, file: !1605, line: 565, baseType: !1616, size: 8, offset: 1368)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1604, file: !1605, line: 566, baseType: !1616, size: 8, offset: 1376)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1604, file: !1605, line: 567, baseType: !1616, size: 8, offset: 1384)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1604, file: !1605, line: 568, baseType: !1616, size: 8, offset: 1392)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1604, file: !1605, line: 569, baseType: !1616, size: 8, offset: 1400)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1604, file: !1605, line: 570, baseType: !1616, size: 8, offset: 1408)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1604, file: !1605, line: 571, baseType: !1616, size: 8, offset: 1416)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1604, file: !1605, line: 572, baseType: !1616, size: 8, offset: 1424)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1604, file: !1605, line: 573, baseType: !1616, size: 8, offset: 1432)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1604, file: !1605, line: 574, baseType: !1616, size: 8, offset: 1440)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !924, file: !151, line: 3405, baseType: !1772, size: 384)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !151, line: 3352, size: 384, elements: !1773)
!1773 = !{!1774, !1775}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1772, file: !151, line: 3353, baseType: !960, size: 192)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1772, file: !151, line: 3356, baseType: !1776, size: 192, offset: 192)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1605, line: 578, size: 192, elements: !1777)
!1777 = !{!1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1776, file: !1605, line: 580, baseType: !798, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1776, file: !1605, line: 581, baseType: !798, size: 32, offset: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1776, file: !1605, line: 582, baseType: !798, size: 32, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1776, file: !1605, line: 583, baseType: !798, size: 32, offset: 96)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1776, file: !1605, line: 584, baseType: !797, size: 8, offset: 128)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1776, file: !1605, line: 585, baseType: !797, size: 8, offset: 136)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1776, file: !1605, line: 586, baseType: !797, size: 8, offset: 144)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1776, file: !1605, line: 587, baseType: !797, size: 8, offset: 152)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1776, file: !1605, line: 588, baseType: !797, size: 8, offset: 160)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1776, file: !1605, line: 589, baseType: !797, size: 8, offset: 168)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1776, file: !1605, line: 590, baseType: !797, size: 8, offset: 176)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !827, file: !378, line: 178, baseType: !1180, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !827, file: !378, line: 179, baseType: !1791, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !378, line: 150, baseType: !1793)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !378, line: 142, size: 320, elements: !1794)
!1794 = !{!1795, !1796, !1797, !1798, !1799, !1800}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1793, file: !378, line: 144, baseType: !922, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1793, file: !378, line: 145, baseType: !806, size: 64, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1793, file: !378, line: 146, baseType: !806, size: 64, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1793, file: !378, line: 147, baseType: !1439, size: 32, offset: 192)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1793, file: !378, line: 148, baseType: !7, size: 32, offset: 224)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1793, file: !378, line: 149, baseType: !797, size: 8, offset: 256)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !827, file: !378, line: 180, baseType: !1802, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !378, line: 162, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !378, line: 159, size: 128, elements: !1805)
!1805 = !{!1806, !1807}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1804, file: !378, line: 160, baseType: !922, size: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1804, file: !378, line: 161, baseType: !893, size: 64, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !827, file: !378, line: 181, baseType: !1809, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !378, line: 181, flags: DIFlagFwdDecl)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !822, file: !378, line: 317, baseType: !1812, size: 64)
!1812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !893, size: 64, elements: !841)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !822, file: !378, line: 318, baseType: !1814, size: 320)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !378, line: 188, size: 320, elements: !1815)
!1815 = !{!1816, !1818, !1873}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1814, file: !378, line: 190, baseType: !1817, size: 192)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !826, size: 192, elements: !993)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1814, file: !378, line: 193, baseType: !1819, size: 64, offset: 192)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !378, line: 206, size: 320, elements: !1821)
!1821 = !{!1822, !1858, !1859, !1860, !1872}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1820, file: !378, line: 208, baseType: !1823, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !807, line: 62, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1826, line: 538, size: 256, elements: !1827)
!1826 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1827 = !{!1828, !1832, !1838, !1849}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1825, file: !1826, line: 539, baseType: !1829, size: 32)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1826, line: 482, size: 32, elements: !1830)
!1830 = !{!1831}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1829, file: !1826, line: 484, baseType: !7, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1825, file: !1826, line: 540, baseType: !1833, size: 192)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1826, line: 488, size: 192, elements: !1834)
!1834 = !{!1835, !1836, !1837}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1833, file: !1826, line: 489, baseType: !1829, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1833, file: !1826, line: 492, baseType: !803, size: 64, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1833, file: !1826, line: 496, baseType: !922, size: 64, offset: 128)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1825, file: !1826, line: 541, baseType: !1839, size: 256)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1826, line: 504, size: 256, elements: !1840)
!1840 = !{!1841, !1842, !1847, !1848}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1839, file: !1826, line: 505, baseType: !1829, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1839, file: !1826, line: 509, baseType: !1843, size: 64, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1826, line: 501, baseType: !1844)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{null, !1297}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1839, file: !1826, line: 510, baseType: !1297, size: 64, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1839, file: !1826, line: 513, baseType: !1823, size: 64, offset: 192)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1825, file: !1826, line: 542, baseType: !1850, size: 128)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1826, line: 530, size: 128, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1850, file: !1826, line: 531, baseType: !1829, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1850, file: !1826, line: 534, baseType: !1854, size: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1826, line: 525, baseType: !1855)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{!797, !922, !803, !876, !876}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1820, file: !378, line: 211, baseType: !7, size: 32, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1820, file: !378, line: 214, baseType: !893, size: 64, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1820, file: !378, line: 224, baseType: !1861, size: 64, offset: 192)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !378, line: 202, baseType: !1863)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !378, line: 202, size: 128, elements: !1864)
!1864 = !{!1865}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1863, file: !378, line: 202, baseType: !1866, size: 128)
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !378, line: 200, baseType: !1867)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !378, line: 200, size: 128, elements: !1868)
!1868 = !{!1869, !1870, !1871}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1867, file: !378, line: 200, baseType: !7, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1867, file: !378, line: 200, baseType: !7, size: 32, offset: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1867, file: !378, line: 200, baseType: !840, size: 64, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1820, file: !378, line: 234, baseType: !1861, size: 64, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1814, file: !378, line: 197, baseType: !893, size: 64, offset: 256)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !822, file: !378, line: 319, baseType: !982, size: 256)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !822, file: !378, line: 320, baseType: !1001, size: 192)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!1877 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!1880 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !1881, line: 42, baseType: !876)
!1881 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_typedef, name: "change_t", file: !3, line: 175, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "change_t", file: !3, line: 168, size: 320, elements: !1885)
!1885 = !{!1886, !1887, !1888, !1889, !1890}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1884, file: !3, line: 170, baseType: !806, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "old_code", scope: !1884, file: !3, line: 171, baseType: !798, size: 32, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1884, file: !3, line: 172, baseType: !805, size: 64, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "old", scope: !1884, file: !3, line: 173, baseType: !806, size: 64, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "unshare", scope: !1884, file: !3, line: 174, baseType: !797, size: 8, offset: 256)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "validate_replace_src_data", file: !3, line: 805, size: 192, elements: !1893)
!1893 = !{!1894, !1895, !1896}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1892, file: !3, line: 807, baseType: !806, size: 64)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1892, file: !3, line: 808, baseType: !806, size: 64, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1892, file: !3, line: 809, baseType: !806, size: 64, offset: 128)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !807, line: 47, baseType: !860)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_lr_bb_info", file: !1900, line: 826, size: 256, elements: !1901)
!1900 = !DIFile(filename: "./df.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1901 = !{!1902, !1903, !1904, !1905}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1899, file: !1900, line: 829, baseType: !1897, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1899, file: !1900, line: 831, baseType: !1897, size: 64, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1899, file: !1900, line: 834, baseType: !1897, size: 64, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !1899, file: !1900, line: 835, baseType: !1897, size: 64, offset: 192)
!1906 = !{!1907, !1931, !1959, !1961, !1963, !1965, !1967, !0, !1969, !1997, !2016, !2018, !2020, !2022, !2024, !2034, !2036, !2038, !2040}
!1907 = !DIGlobalVariableExpression(var: !1908, expr: !DIExpression())
!1908 = distinct !DIGlobalVariable(name: "search_ofs", scope: !1909, file: !3, line: 2991, type: !798, isLocal: true, isDefinition: true)
!1909 = distinct !DISubprogram(name: "peep2_find_free_register", scope: !3, file: !3, line: 2988, type: !1910, scopeLine: 2990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1913)
!1910 = !DISubroutineType(types: !1911)
!1911 = !{!806, !798, !798, !803, !5, !1912}
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1913 = !{!1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1924, !1928, !1929, !1930}
!1914 = !DILocalVariable(name: "from", arg: 1, scope: !1909, file: !3, line: 2988, type: !798)
!1915 = !DILocalVariable(name: "to", arg: 2, scope: !1909, file: !3, line: 2988, type: !798)
!1916 = !DILocalVariable(name: "class_str", arg: 3, scope: !1909, file: !3, line: 2988, type: !803)
!1917 = !DILocalVariable(name: "mode", arg: 4, scope: !1909, file: !3, line: 2989, type: !5)
!1918 = !DILocalVariable(name: "reg_set", arg: 5, scope: !1909, file: !3, line: 2989, type: !1912)
!1919 = !DILocalVariable(name: "cl", scope: !1909, file: !3, line: 2992, type: !576)
!1920 = !DILocalVariable(name: "live", scope: !1909, file: !3, line: 2993, type: !1880)
!1921 = !DILocalVariable(name: "i", scope: !1909, file: !3, line: 2994, type: !798)
!1922 = !DILocalVariable(name: "this_live", scope: !1923, file: !3, line: 3011, type: !1880)
!1923 = distinct !DILexicalBlock(scope: !1909, file: !3, line: 3010, column: 5)
!1924 = !DILocalVariable(name: "raw_regno", scope: !1925, file: !3, line: 3025, type: !798)
!1925 = distinct !DILexicalBlock(scope: !1926, file: !3, line: 3024, column: 5)
!1926 = distinct !DILexicalBlock(scope: !1927, file: !3, line: 3023, column: 3)
!1927 = distinct !DILexicalBlock(scope: !1909, file: !3, line: 3023, column: 3)
!1928 = !DILocalVariable(name: "regno", scope: !1925, file: !3, line: 3025, type: !798)
!1929 = !DILocalVariable(name: "success", scope: !1925, file: !3, line: 3025, type: !798)
!1930 = !DILocalVariable(name: "j", scope: !1925, file: !3, line: 3025, type: !798)
!1931 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression())
!1932 = distinct !DIGlobalVariable(name: "pass_peephole2", scope: !2, file: !3, line: 3512, type: !1933, isLocal: false, isDefinition: true)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !607, line: 162, size: 640, elements: !1934)
!1934 = !{!1935}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1933, file: !607, line: 164, baseType: !1936, size: 640)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !607, line: 114, size: 640, elements: !1937)
!1937 = !{!1938, !1939, !1940, !1944, !1948, !1950, !1951, !1952, !1954, !1955, !1956, !1957, !1958}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1936, file: !607, line: 117, baseType: !606, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1936, file: !607, line: 121, baseType: !803, size: 64, offset: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !1936, file: !607, line: 125, baseType: !1941, size: 64, offset: 128)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{!797}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1936, file: !607, line: 130, baseType: !1945, size: 64, offset: 192)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!7}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !1936, file: !607, line: 133, baseType: !1949, size: 64, offset: 256)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1936, file: !607, line: 136, baseType: !1949, size: 64, offset: 320)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !1936, file: !607, line: 139, baseType: !798, size: 32, offset: 384)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !1936, file: !607, line: 143, baseType: !1953, size: 32, offset: 416)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !614, line: 80, baseType: !613)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !1936, file: !607, line: 146, baseType: !7, size: 32, offset: 448)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !1936, file: !607, line: 147, baseType: !7, size: 32, offset: 480)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !1936, file: !607, line: 148, baseType: !7, size: 32, offset: 512)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !1936, file: !607, line: 151, baseType: !7, size: 32, offset: 544)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !1936, file: !607, line: 152, baseType: !7, size: 32, offset: 576)
!1959 = !DIGlobalVariableExpression(var: !1960, expr: !DIExpression())
!1960 = distinct !DIGlobalVariable(name: "pass_split_all_insns", scope: !2, file: !3, line: 3539, type: !1933, isLocal: false, isDefinition: true)
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "pass_split_after_reload", scope: !2, file: !3, line: 3569, type: !1933, isLocal: false, isDefinition: true)
!1963 = !DIGlobalVariableExpression(var: !1964, expr: !DIExpression())
!1964 = distinct !DIGlobalVariable(name: "pass_split_before_regstack", scope: !2, file: !3, line: 3613, type: !1933, isLocal: false, isDefinition: true)
!1965 = !DIGlobalVariableExpression(var: !1966, expr: !DIExpression())
!1966 = distinct !DIGlobalVariable(name: "pass_split_before_sched2", scope: !2, file: !3, line: 3651, type: !1933, isLocal: false, isDefinition: true)
!1967 = !DIGlobalVariableExpression(var: !1968, expr: !DIExpression())
!1968 = distinct !DIGlobalVariable(name: "pass_split_for_shorten_branches", scope: !2, file: !3, line: 3683, type: !1933, isLocal: false, isDefinition: true)
!1969 = !DIGlobalVariableExpression(var: !1970, expr: !DIExpression())
!1970 = distinct !DIGlobalVariable(name: "recog_data", scope: !2, file: !3, line: 86, type: !1971, isLocal: false, isDefinition: true)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "recog_data", file: !790, line: 180, size: 9024, elements: !1972)
!1972 = !{!1973, !1977, !1979, !1981, !1983, !1985, !1989, !1991, !1992, !1993, !1994, !1996}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "operand", scope: !1971, file: !790, line: 189, baseType: !1974, size: 1920)
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !806, size: 1920, elements: !1975)
!1975 = !{!1976}
!1976 = !DISubrange(count: 30)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "operand_loc", scope: !1971, file: !790, line: 192, baseType: !1978, size: 1920, offset: 1920)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !805, size: 1920, elements: !1975)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !1971, file: !790, line: 195, baseType: !1980, size: 1920, offset: 3840)
!1980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !803, size: 1920, elements: !1975)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "operand_mode", scope: !1971, file: !790, line: 198, baseType: !1982, size: 960, offset: 5760)
!1982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 960, elements: !1975)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "operand_type", scope: !1971, file: !790, line: 201, baseType: !1984, size: 960, offset: 6720)
!1984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !789, size: 960, elements: !1975)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "dup_loc", scope: !1971, file: !790, line: 205, baseType: !1986, size: 896, offset: 7680)
!1986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !805, size: 896, elements: !1987)
!1987 = !{!1988}
!1988 = !DISubrange(count: 14)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "dup_num", scope: !1971, file: !790, line: 209, baseType: !1990, size: 112, offset: 8576)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !801, size: 112, elements: !1987)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "n_operands", scope: !1971, file: !790, line: 222, baseType: !801, size: 8, offset: 8688)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "n_dups", scope: !1971, file: !790, line: 225, baseType: !801, size: 8, offset: 8696)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "n_alternatives", scope: !1971, file: !790, line: 228, baseType: !801, size: 8, offset: 8704)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "alternative_enabled_p", scope: !1971, file: !790, line: 234, baseType: !1995, size: 240, offset: 8712)
!1995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !797, size: 240, elements: !1975)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1971, file: !790, line: 237, baseType: !806, size: 64, offset: 8960)
!1997 = !DIGlobalVariableExpression(var: !1998, expr: !DIExpression())
!1998 = distinct !DIGlobalVariable(name: "recog_op_alt", scope: !2, file: !3, line: 90, type: !1999, isLocal: false, isDefinition: true)
!1999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2000, size: 230400, elements: !2015)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "operand_alternative", file: !790, line: 31, size: 256, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "constraint", scope: !2000, file: !790, line: 35, baseType: !803, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !2000, file: !790, line: 38, baseType: !576, size: 32, offset: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "reject", scope: !2000, file: !790, line: 42, baseType: !7, size: 32, offset: 96)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !2000, file: !790, line: 45, baseType: !798, size: 32, offset: 128)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "matched", scope: !2000, file: !790, line: 49, baseType: !798, size: 32, offset: 160)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "earlyclobber", scope: !2000, file: !790, line: 52, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "memory_ok", scope: !2000, file: !790, line: 55, baseType: !7, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "offmem_ok", scope: !2000, file: !790, line: 57, baseType: !7, size: 1, offset: 194, flags: DIFlagBitField, extraData: i64 192)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "nonoffmem_ok", scope: !2000, file: !790, line: 59, baseType: !7, size: 1, offset: 195, flags: DIFlagBitField, extraData: i64 192)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "decmem_ok", scope: !2000, file: !790, line: 61, baseType: !7, size: 1, offset: 196, flags: DIFlagBitField, extraData: i64 192)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "incmem_ok", scope: !2000, file: !790, line: 63, baseType: !7, size: 1, offset: 197, flags: DIFlagBitField, extraData: i64 192)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "is_address", scope: !2000, file: !790, line: 65, baseType: !7, size: 1, offset: 198, flags: DIFlagBitField, extraData: i64 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "anything_ok", scope: !2000, file: !790, line: 68, baseType: !7, size: 1, offset: 199, flags: DIFlagBitField, extraData: i64 192)
!2015 = !{!1976, !1976}
!2016 = !DIGlobalVariableExpression(var: !2017, expr: !DIExpression())
!2017 = distinct !DIGlobalVariable(name: "which_alternative", scope: !2, file: !3, line: 95, type: !798, isLocal: false, isDefinition: true)
!2018 = !DIGlobalVariableExpression(var: !2019, expr: !DIExpression())
!2019 = distinct !DIGlobalVariable(name: "reload_completed", scope: !2, file: !3, line: 101, type: !798, isLocal: false, isDefinition: true)
!2020 = !DIGlobalVariableExpression(var: !2021, expr: !DIExpression())
!2021 = distinct !DIGlobalVariable(name: "epilogue_completed", scope: !2, file: !3, line: 104, type: !798, isLocal: false, isDefinition: true)
!2022 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression())
!2023 = distinct !DIGlobalVariable(name: "changes", scope: !2, file: !3, line: 177, type: !1882, isLocal: true, isDefinition: true)
!2024 = !DIGlobalVariableExpression(var: !2025, expr: !DIExpression())
!2025 = distinct !DIGlobalVariable(name: "peep2_insn_data", scope: !2, file: !3, line: 2910, type: !2026, isLocal: true, isDefinition: true)
!2026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2027, size: 640, elements: !2032)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "peep2_insn_data", file: !3, line: 2904, size: 128, elements: !2028)
!2028 = !{!2029, !2030}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2027, file: !3, line: 2906, baseType: !806, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "live_before", scope: !2027, file: !3, line: 2907, baseType: !2031, size: 64, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !135, line: 37, baseType: !1897)
!2032 = !{!2033}
!2033 = !DISubrange(count: 5)
!2034 = !DIGlobalVariableExpression(var: !2035, expr: !DIExpression())
!2035 = distinct !DIGlobalVariable(name: "peep2_current", scope: !2, file: !3, line: 2911, type: !798, isLocal: true, isDefinition: true)
!2036 = !DIGlobalVariableExpression(var: !2037, expr: !DIExpression())
!2037 = distinct !DIGlobalVariable(name: "peep2_current_count", scope: !2, file: !3, line: 2913, type: !798, isLocal: false, isDefinition: true)
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "changes_allocated", scope: !2, file: !3, line: 178, type: !798, isLocal: true, isDefinition: true)
!2040 = !DIGlobalVariableExpression(var: !2041, expr: !DIExpression())
!2041 = distinct !DIGlobalVariable(name: "num_changes", scope: !2, file: !3, line: 180, type: !798, isLocal: true, isDefinition: true)
!2042 = !{i32 2, !"Dwarf Version", i32 4}
!2043 = !{i32 2, !"Debug Info Version", i32 3}
!2044 = !{i32 1, !"wchar_size", i32 4}
!2045 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2046 = distinct !DISubprogram(name: "vprintf", scope: !2047, file: !2047, line: 39, type: !2048, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2058)
!2047 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2048 = !DISubroutineType(types: !2049)
!2049 = !{!798, !2050, !2051}
!2050 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !803)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2053)
!2053 = !{!2054, !2055, !2056, !2057}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2052, file: !3, baseType: !7, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2052, file: !3, baseType: !7, size: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2052, file: !3, baseType: !802, size: 64, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2052, file: !3, baseType: !802, size: 64, offset: 128)
!2058 = !{!2059, !2060}
!2059 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2046, file: !2047, line: 39, type: !2050)
!2060 = !DILocalVariable(name: "__arg", arg: 2, scope: !2046, file: !2047, line: 39, type: !2051)
!2061 = !DILocation(line: 0, scope: !2046)
!2062 = !DILocation(line: 41, column: 20, scope: !2046)
!2063 = !DILocation(line: 41, column: 10, scope: !2046)
!2064 = !DILocation(line: 41, column: 3, scope: !2046)
!2065 = distinct !DISubprogram(name: "getchar", scope: !2047, file: !2047, line: 47, type: !2066, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!2066 = !DISubroutineType(types: !2067)
!2067 = !{!798}
!2068 = !{}
!2069 = !DILocation(line: 49, column: 16, scope: !2065)
!2070 = !DILocation(line: 49, column: 10, scope: !2065)
!2071 = !DILocation(line: 49, column: 3, scope: !2065)
!2072 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2047, file: !2047, line: 56, type: !2073, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2125)
!2073 = !DISubroutineType(types: !2074)
!2074 = !{!798, !2075}
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2077, line: 7, baseType: !2078)
!2077 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2079, line: 49, size: 1728, elements: !2080)
!2079 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2080 = !{!2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2096, !2098, !2099, !2100, !2103, !2104, !2105, !2106, !2109, !2111, !2114, !2117, !2118, !2119, !2120, !2121}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2078, file: !2079, line: 51, baseType: !798, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2078, file: !2079, line: 54, baseType: !800, size: 64, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2078, file: !2079, line: 55, baseType: !800, size: 64, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2078, file: !2079, line: 56, baseType: !800, size: 64, offset: 192)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2078, file: !2079, line: 57, baseType: !800, size: 64, offset: 256)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2078, file: !2079, line: 58, baseType: !800, size: 64, offset: 320)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2078, file: !2079, line: 59, baseType: !800, size: 64, offset: 384)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2078, file: !2079, line: 60, baseType: !800, size: 64, offset: 448)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2078, file: !2079, line: 61, baseType: !800, size: 64, offset: 512)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2078, file: !2079, line: 64, baseType: !800, size: 64, offset: 576)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2078, file: !2079, line: 65, baseType: !800, size: 64, offset: 640)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2078, file: !2079, line: 66, baseType: !800, size: 64, offset: 704)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2078, file: !2079, line: 68, baseType: !2094, size: 64, offset: 768)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2079, line: 36, flags: DIFlagFwdDecl)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2078, file: !2079, line: 70, baseType: !2097, size: 64, offset: 832)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2078, file: !2079, line: 72, baseType: !798, size: 32, offset: 896)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2078, file: !2079, line: 73, baseType: !798, size: 32, offset: 928)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2078, file: !2079, line: 74, baseType: !2101, size: 64, offset: 960)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2102, line: 152, baseType: !893)
!2102 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2078, file: !2079, line: 77, baseType: !1877, size: 16, offset: 1024)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2078, file: !2079, line: 78, baseType: !1616, size: 8, offset: 1040)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2078, file: !2079, line: 79, baseType: !1017, size: 8, offset: 1048)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2078, file: !2079, line: 81, baseType: !2107, size: 64, offset: 1088)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2079, line: 43, baseType: null)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2078, file: !2079, line: 89, baseType: !2110, size: 64, offset: 1152)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2102, line: 153, baseType: !893)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2078, file: !2079, line: 91, baseType: !2112, size: 64, offset: 1216)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2079, line: 37, flags: DIFlagFwdDecl)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2078, file: !2079, line: 92, baseType: !2115, size: 64, offset: 1280)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2079, line: 38, flags: DIFlagFwdDecl)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2078, file: !2079, line: 93, baseType: !2097, size: 64, offset: 1344)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2078, file: !2079, line: 94, baseType: !802, size: 64, offset: 1408)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2078, file: !2079, line: 95, baseType: !1312, size: 64, offset: 1472)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2078, file: !2079, line: 96, baseType: !798, size: 32, offset: 1536)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2078, file: !2079, line: 98, baseType: !2122, size: 160, offset: 1568)
!2122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !801, size: 160, elements: !2123)
!2123 = !{!2124}
!2124 = !DISubrange(count: 20)
!2125 = !{!2126}
!2126 = !DILocalVariable(name: "__fp", arg: 1, scope: !2072, file: !2047, line: 56, type: !2075)
!2127 = !DILocation(line: 0, scope: !2072)
!2128 = !DILocation(line: 58, column: 10, scope: !2072)
!2129 = !DILocation(line: 58, column: 3, scope: !2072)
!2130 = distinct !DISubprogram(name: "getc_unlocked", scope: !2047, file: !2047, line: 66, type: !2073, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2131)
!2131 = !{!2132}
!2132 = !DILocalVariable(name: "__fp", arg: 1, scope: !2130, file: !2047, line: 66, type: !2075)
!2133 = !DILocation(line: 0, scope: !2130)
!2134 = !DILocation(line: 68, column: 10, scope: !2130)
!2135 = !DILocation(line: 68, column: 3, scope: !2130)
!2136 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2047, file: !2047, line: 73, type: !2066, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!2137 = !DILocation(line: 75, column: 10, scope: !2136)
!2138 = !DILocation(line: 75, column: 3, scope: !2136)
!2139 = distinct !DISubprogram(name: "putchar", scope: !2047, file: !2047, line: 82, type: !2140, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2142)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!798, !798}
!2142 = !{!2143}
!2143 = !DILocalVariable(name: "__c", arg: 1, scope: !2139, file: !2047, line: 82, type: !798)
!2144 = !DILocation(line: 0, scope: !2139)
!2145 = !DILocation(line: 84, column: 21, scope: !2139)
!2146 = !DILocation(line: 84, column: 10, scope: !2139)
!2147 = !DILocation(line: 84, column: 3, scope: !2139)
!2148 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2047, file: !2047, line: 91, type: !2149, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2151)
!2149 = !DISubroutineType(types: !2150)
!2150 = !{!798, !798, !2075}
!2151 = !{!2152, !2153}
!2152 = !DILocalVariable(name: "__c", arg: 1, scope: !2148, file: !2047, line: 91, type: !798)
!2153 = !DILocalVariable(name: "__stream", arg: 2, scope: !2148, file: !2047, line: 91, type: !2075)
!2154 = !DILocation(line: 0, scope: !2148)
!2155 = !DILocation(line: 93, column: 10, scope: !2148)
!2156 = !DILocation(line: 93, column: 3, scope: !2148)
!2157 = distinct !DISubprogram(name: "putc_unlocked", scope: !2047, file: !2047, line: 101, type: !2149, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2158)
!2158 = !{!2159, !2160}
!2159 = !DILocalVariable(name: "__c", arg: 1, scope: !2157, file: !2047, line: 101, type: !798)
!2160 = !DILocalVariable(name: "__stream", arg: 2, scope: !2157, file: !2047, line: 101, type: !2075)
!2161 = !DILocation(line: 0, scope: !2157)
!2162 = !DILocation(line: 103, column: 10, scope: !2157)
!2163 = !DILocation(line: 103, column: 3, scope: !2157)
!2164 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2047, file: !2047, line: 108, type: !2140, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2165)
!2165 = !{!2166}
!2166 = !DILocalVariable(name: "__c", arg: 1, scope: !2164, file: !2047, line: 108, type: !798)
!2167 = !DILocation(line: 0, scope: !2164)
!2168 = !DILocation(line: 110, column: 10, scope: !2164)
!2169 = !DILocation(line: 110, column: 3, scope: !2164)
!2170 = distinct !DISubprogram(name: "getline", scope: !2047, file: !2047, line: 118, type: !2171, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2175)
!2171 = !DISubroutineType(types: !2172)
!2172 = !{!2173, !799, !2174, !2075}
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2102, line: 193, baseType: !893)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!2175 = !{!2176, !2177, !2178}
!2176 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2170, file: !2047, line: 118, type: !799)
!2177 = !DILocalVariable(name: "__n", arg: 2, scope: !2170, file: !2047, line: 118, type: !2174)
!2178 = !DILocalVariable(name: "__stream", arg: 3, scope: !2170, file: !2047, line: 118, type: !2075)
!2179 = !DILocation(line: 0, scope: !2170)
!2180 = !DILocation(line: 120, column: 10, scope: !2170)
!2181 = !DILocation(line: 120, column: 3, scope: !2170)
!2182 = distinct !DISubprogram(name: "feof_unlocked", scope: !2047, file: !2047, line: 128, type: !2073, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2183)
!2183 = !{!2184}
!2184 = !DILocalVariable(name: "__stream", arg: 1, scope: !2182, file: !2047, line: 128, type: !2075)
!2185 = !DILocation(line: 0, scope: !2182)
!2186 = !DILocation(line: 130, column: 10, scope: !2182)
!2187 = !DILocation(line: 130, column: 3, scope: !2182)
!2188 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2047, file: !2047, line: 135, type: !2073, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2189)
!2189 = !{!2190}
!2190 = !DILocalVariable(name: "__stream", arg: 1, scope: !2188, file: !2047, line: 135, type: !2075)
!2191 = !DILocation(line: 0, scope: !2188)
!2192 = !DILocation(line: 137, column: 10, scope: !2188)
!2193 = !DILocation(line: 137, column: 3, scope: !2188)
!2194 = distinct !DISubprogram(name: "tolower", scope: !2195, file: !2195, line: 207, type: !2140, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2196)
!2195 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2196 = !{!2197}
!2197 = !DILocalVariable(name: "__c", arg: 1, scope: !2194, file: !2195, line: 207, type: !798)
!2198 = !DILocation(line: 0, scope: !2194)
!2199 = !DILocation(line: 209, column: 22, scope: !2194)
!2200 = !DILocation(line: 209, column: 39, scope: !2194)
!2201 = !DILocation(line: 209, column: 38, scope: !2194)
!2202 = !DILocation(line: 209, column: 37, scope: !2194)
!2203 = !DILocation(line: 209, column: 10, scope: !2194)
!2204 = !DILocation(line: 209, column: 3, scope: !2194)
!2205 = distinct !DISubprogram(name: "toupper", scope: !2195, file: !2195, line: 213, type: !2140, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2206)
!2206 = !{!2207}
!2207 = !DILocalVariable(name: "__c", arg: 1, scope: !2205, file: !2195, line: 213, type: !798)
!2208 = !DILocation(line: 0, scope: !2205)
!2209 = !DILocation(line: 215, column: 22, scope: !2205)
!2210 = !DILocation(line: 215, column: 39, scope: !2205)
!2211 = !DILocation(line: 215, column: 38, scope: !2205)
!2212 = !DILocation(line: 215, column: 37, scope: !2205)
!2213 = !DILocation(line: 215, column: 10, scope: !2205)
!2214 = !DILocation(line: 215, column: 3, scope: !2205)
!2215 = distinct !DISubprogram(name: "atoi", scope: !2216, file: !2216, line: 361, type: !2217, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2219)
!2216 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!798, !803}
!2219 = !{!2220}
!2220 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2215, file: !2216, line: 361, type: !803)
!2221 = !DILocation(line: 0, scope: !2215)
!2222 = !DILocation(line: 363, column: 16, scope: !2215)
!2223 = !DILocation(line: 363, column: 10, scope: !2215)
!2224 = !DILocation(line: 363, column: 3, scope: !2215)
!2225 = distinct !DISubprogram(name: "atol", scope: !2216, file: !2216, line: 366, type: !2226, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2228)
!2226 = !DISubroutineType(types: !2227)
!2227 = !{!893, !803}
!2228 = !{!2229}
!2229 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2225, file: !2216, line: 366, type: !803)
!2230 = !DILocation(line: 0, scope: !2225)
!2231 = !DILocation(line: 368, column: 10, scope: !2225)
!2232 = !DILocation(line: 368, column: 3, scope: !2225)
!2233 = distinct !DISubprogram(name: "atoll", scope: !2216, file: !2216, line: 373, type: !2234, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2237)
!2234 = !DISubroutineType(types: !2235)
!2235 = !{!2236, !803}
!2236 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2237 = !{!2238}
!2238 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2233, file: !2216, line: 373, type: !803)
!2239 = !DILocation(line: 0, scope: !2233)
!2240 = !DILocation(line: 375, column: 10, scope: !2233)
!2241 = !DILocation(line: 375, column: 3, scope: !2233)
!2242 = distinct !DISubprogram(name: "bsearch", scope: !2243, file: !2243, line: 20, type: !2244, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2247)
!2243 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2244 = !DISubroutineType(types: !2245)
!2245 = !{!802, !1297, !1297, !1312, !1312, !2246}
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2216, line: 808, baseType: !1301)
!2247 = !{!2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257}
!2248 = !DILocalVariable(name: "__key", arg: 1, scope: !2242, file: !2243, line: 20, type: !1297)
!2249 = !DILocalVariable(name: "__base", arg: 2, scope: !2242, file: !2243, line: 20, type: !1297)
!2250 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2242, file: !2243, line: 20, type: !1312)
!2251 = !DILocalVariable(name: "__size", arg: 4, scope: !2242, file: !2243, line: 20, type: !1312)
!2252 = !DILocalVariable(name: "__compar", arg: 5, scope: !2242, file: !2243, line: 21, type: !2246)
!2253 = !DILocalVariable(name: "__l", scope: !2242, file: !2243, line: 23, type: !1312)
!2254 = !DILocalVariable(name: "__u", scope: !2242, file: !2243, line: 23, type: !1312)
!2255 = !DILocalVariable(name: "__idx", scope: !2242, file: !2243, line: 23, type: !1312)
!2256 = !DILocalVariable(name: "__p", scope: !2242, file: !2243, line: 24, type: !1297)
!2257 = !DILocalVariable(name: "__comparison", scope: !2242, file: !2243, line: 25, type: !798)
!2258 = !DILocation(line: 0, scope: !2242)
!2259 = !DILocation(line: 29, column: 3, scope: !2242)
!2260 = !DILocation(line: 27, column: 7, scope: !2242)
!2261 = !DILocation(line: 29, column: 14, scope: !2242)
!2262 = !DILocation(line: 31, column: 20, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !2242, file: !2243, line: 30, column: 5)
!2264 = !DILocation(line: 31, column: 27, scope: !2263)
!2265 = !DILocation(line: 32, column: 56, scope: !2263)
!2266 = !DILocation(line: 32, column: 47, scope: !2263)
!2267 = !DILocation(line: 33, column: 22, scope: !2263)
!2268 = !DILocation(line: 34, column: 24, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2263, file: !2243, line: 34, column: 11)
!2270 = !DILocation(line: 34, column: 11, scope: !2263)
!2271 = !DILocation(line: 36, column: 29, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2269, file: !2243, line: 36, column: 16)
!2273 = !DILocation(line: 36, column: 16, scope: !2269)
!2274 = !DILocation(line: 37, column: 14, scope: !2272)
!2275 = distinct !{!2275, !2259, !2276}
!2276 = !DILocation(line: 40, column: 5, scope: !2242)
!2277 = !DILocation(line: 43, column: 1, scope: !2242)
!2278 = distinct !DISubprogram(name: "atof", scope: !2279, file: !2279, line: 25, type: !2280, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2283)
!2279 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2280 = !DISubroutineType(types: !2281)
!2281 = !{!2282, !803}
!2282 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2283 = !{!2284}
!2284 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2278, file: !2279, line: 25, type: !803)
!2285 = !DILocation(line: 0, scope: !2278)
!2286 = !DILocation(line: 27, column: 10, scope: !2278)
!2287 = !DILocation(line: 27, column: 3, scope: !2278)
!2288 = distinct !DISubprogram(name: "strtoimax", scope: !2289, file: !2289, line: 324, type: !2290, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2296)
!2289 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2290 = !DISubroutineType(types: !2291)
!2291 = !{!2292, !2050, !2295, !798}
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2293, line: 101, baseType: !2294)
!2293 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2102, line: 72, baseType: !893)
!2295 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !799)
!2296 = !{!2297, !2298, !2299}
!2297 = !DILocalVariable(name: "nptr", arg: 1, scope: !2288, file: !2289, line: 324, type: !2050)
!2298 = !DILocalVariable(name: "endptr", arg: 2, scope: !2288, file: !2289, line: 324, type: !2295)
!2299 = !DILocalVariable(name: "base", arg: 3, scope: !2288, file: !2289, line: 324, type: !798)
!2300 = !DILocation(line: 0, scope: !2288)
!2301 = !DILocation(line: 327, column: 10, scope: !2288)
!2302 = !DILocation(line: 327, column: 3, scope: !2288)
!2303 = distinct !DISubprogram(name: "strtoumax", scope: !2289, file: !2289, line: 336, type: !2304, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2308)
!2304 = !DISubroutineType(types: !2305)
!2305 = !{!2306, !2050, !2295, !798}
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2293, line: 102, baseType: !2307)
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2102, line: 73, baseType: !876)
!2308 = !{!2309, !2310, !2311}
!2309 = !DILocalVariable(name: "nptr", arg: 1, scope: !2303, file: !2289, line: 336, type: !2050)
!2310 = !DILocalVariable(name: "endptr", arg: 2, scope: !2303, file: !2289, line: 336, type: !2295)
!2311 = !DILocalVariable(name: "base", arg: 3, scope: !2303, file: !2289, line: 336, type: !798)
!2312 = !DILocation(line: 0, scope: !2303)
!2313 = !DILocation(line: 339, column: 10, scope: !2303)
!2314 = !DILocation(line: 339, column: 3, scope: !2303)
!2315 = distinct !DISubprogram(name: "wcstoimax", scope: !2289, file: !2289, line: 348, type: !2316, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!2316 = !DISubroutineType(types: !2317)
!2317 = !{!2292, !2318, !2322, !798}
!2318 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2319)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2321)
!2321 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2289, line: 34, baseType: !798)
!2322 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2323)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2325 = !{!2326, !2327, !2328}
!2326 = !DILocalVariable(name: "nptr", arg: 1, scope: !2315, file: !2289, line: 348, type: !2318)
!2327 = !DILocalVariable(name: "endptr", arg: 2, scope: !2315, file: !2289, line: 348, type: !2322)
!2328 = !DILocalVariable(name: "base", arg: 3, scope: !2315, file: !2289, line: 348, type: !798)
!2329 = !DILocation(line: 0, scope: !2315)
!2330 = !DILocation(line: 351, column: 10, scope: !2315)
!2331 = !DILocation(line: 351, column: 3, scope: !2315)
!2332 = distinct !DISubprogram(name: "wcstoumax", scope: !2289, file: !2289, line: 362, type: !2333, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2335)
!2333 = !DISubroutineType(types: !2334)
!2334 = !{!2306, !2318, !2322, !798}
!2335 = !{!2336, !2337, !2338}
!2336 = !DILocalVariable(name: "nptr", arg: 1, scope: !2332, file: !2289, line: 362, type: !2318)
!2337 = !DILocalVariable(name: "endptr", arg: 2, scope: !2332, file: !2289, line: 362, type: !2322)
!2338 = !DILocalVariable(name: "base", arg: 3, scope: !2332, file: !2289, line: 362, type: !798)
!2339 = !DILocation(line: 0, scope: !2332)
!2340 = !DILocation(line: 365, column: 10, scope: !2332)
!2341 = !DILocation(line: 365, column: 3, scope: !2332)
!2342 = distinct !DISubprogram(name: "stat", scope: !2343, file: !2343, line: 453, type: !2344, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2381)
!2343 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2344 = !DISubroutineType(types: !2345)
!2345 = !{!798, !803, !2346}
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2348, line: 46, size: 1152, elements: !2349)
!2348 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2349 = !{!2350, !2352, !2354, !2356, !2358, !2360, !2362, !2363, !2364, !2365, !2367, !2369, !2377, !2378, !2379}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2347, file: !2348, line: 48, baseType: !2351, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2102, line: 145, baseType: !876)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2347, file: !2348, line: 53, baseType: !2353, size: 64, offset: 64)
!2353 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2102, line: 148, baseType: !876)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2347, file: !2348, line: 61, baseType: !2355, size: 64, offset: 128)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2102, line: 151, baseType: !876)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2347, file: !2348, line: 62, baseType: !2357, size: 32, offset: 192)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2102, line: 150, baseType: !7)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2347, file: !2348, line: 64, baseType: !2359, size: 32, offset: 224)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2102, line: 146, baseType: !7)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2347, file: !2348, line: 65, baseType: !2361, size: 32, offset: 256)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2102, line: 147, baseType: !7)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2347, file: !2348, line: 67, baseType: !798, size: 32, offset: 288)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2347, file: !2348, line: 69, baseType: !2351, size: 64, offset: 320)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2347, file: !2348, line: 74, baseType: !2101, size: 64, offset: 384)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2347, file: !2348, line: 78, baseType: !2366, size: 64, offset: 448)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2102, line: 174, baseType: !893)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2347, file: !2348, line: 80, baseType: !2368, size: 64, offset: 512)
!2368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2102, line: 179, baseType: !893)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2347, file: !2348, line: 91, baseType: !2370, size: 128, offset: 576)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2371, line: 10, size: 128, elements: !2372)
!2371 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2372 = !{!2373, !2375}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2370, file: !2371, line: 12, baseType: !2374, size: 64)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2102, line: 160, baseType: !893)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2370, file: !2371, line: 16, baseType: !2376, size: 64, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2102, line: 196, baseType: !893)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2347, file: !2348, line: 92, baseType: !2370, size: 128, offset: 704)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2347, file: !2348, line: 93, baseType: !2370, size: 128, offset: 832)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2347, file: !2348, line: 106, baseType: !2380, size: 192, offset: 960)
!2380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2376, size: 192, elements: !993)
!2381 = !{!2382, !2383}
!2382 = !DILocalVariable(name: "__path", arg: 1, scope: !2342, file: !2343, line: 453, type: !803)
!2383 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2342, file: !2343, line: 453, type: !2346)
!2384 = !DILocation(line: 0, scope: !2342)
!2385 = !DILocation(line: 455, column: 10, scope: !2342)
!2386 = !DILocation(line: 455, column: 3, scope: !2342)
!2387 = distinct !DISubprogram(name: "lstat", scope: !2343, file: !2343, line: 460, type: !2344, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!2388 = !{!2389, !2390}
!2389 = !DILocalVariable(name: "__path", arg: 1, scope: !2387, file: !2343, line: 460, type: !803)
!2390 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2387, file: !2343, line: 460, type: !2346)
!2391 = !DILocation(line: 0, scope: !2387)
!2392 = !DILocation(line: 462, column: 10, scope: !2387)
!2393 = !DILocation(line: 462, column: 3, scope: !2387)
!2394 = distinct !DISubprogram(name: "fstat", scope: !2343, file: !2343, line: 467, type: !2395, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2397)
!2395 = !DISubroutineType(types: !2396)
!2396 = !{!798, !798, !2346}
!2397 = !{!2398, !2399}
!2398 = !DILocalVariable(name: "__fd", arg: 1, scope: !2394, file: !2343, line: 467, type: !798)
!2399 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2394, file: !2343, line: 467, type: !2346)
!2400 = !DILocation(line: 0, scope: !2394)
!2401 = !DILocation(line: 469, column: 10, scope: !2394)
!2402 = !DILocation(line: 469, column: 3, scope: !2394)
!2403 = distinct !DISubprogram(name: "fstatat", scope: !2343, file: !2343, line: 474, type: !2404, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2406)
!2404 = !DISubroutineType(types: !2405)
!2405 = !{!798, !798, !803, !2346, !798}
!2406 = !{!2407, !2408, !2409, !2410}
!2407 = !DILocalVariable(name: "__fd", arg: 1, scope: !2403, file: !2343, line: 474, type: !798)
!2408 = !DILocalVariable(name: "__filename", arg: 2, scope: !2403, file: !2343, line: 474, type: !803)
!2409 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2403, file: !2343, line: 474, type: !2346)
!2410 = !DILocalVariable(name: "__flag", arg: 4, scope: !2403, file: !2343, line: 474, type: !798)
!2411 = !DILocation(line: 0, scope: !2403)
!2412 = !DILocation(line: 477, column: 10, scope: !2403)
!2413 = !DILocation(line: 477, column: 3, scope: !2403)
!2414 = distinct !DISubprogram(name: "mknod", scope: !2343, file: !2343, line: 483, type: !2415, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2417)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{!798, !803, !2357, !2351}
!2417 = !{!2418, !2419, !2420}
!2418 = !DILocalVariable(name: "__path", arg: 1, scope: !2414, file: !2343, line: 483, type: !803)
!2419 = !DILocalVariable(name: "__mode", arg: 2, scope: !2414, file: !2343, line: 483, type: !2357)
!2420 = !DILocalVariable(name: "__dev", arg: 3, scope: !2414, file: !2343, line: 483, type: !2351)
!2421 = !DILocation(line: 0, scope: !2414)
!2422 = !DILocation(line: 485, column: 10, scope: !2414)
!2423 = !DILocation(line: 485, column: 3, scope: !2414)
!2424 = distinct !DISubprogram(name: "mknodat", scope: !2343, file: !2343, line: 491, type: !2425, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2427)
!2425 = !DISubroutineType(types: !2426)
!2426 = !{!798, !798, !803, !2357, !2351}
!2427 = !{!2428, !2429, !2430, !2431}
!2428 = !DILocalVariable(name: "__fd", arg: 1, scope: !2424, file: !2343, line: 491, type: !798)
!2429 = !DILocalVariable(name: "__path", arg: 2, scope: !2424, file: !2343, line: 491, type: !803)
!2430 = !DILocalVariable(name: "__mode", arg: 3, scope: !2424, file: !2343, line: 491, type: !2357)
!2431 = !DILocalVariable(name: "__dev", arg: 4, scope: !2424, file: !2343, line: 491, type: !2351)
!2432 = !DILocation(line: 0, scope: !2424)
!2433 = !DILocation(line: 494, column: 10, scope: !2424)
!2434 = !DILocation(line: 494, column: 3, scope: !2424)
!2435 = distinct !DISubprogram(name: "stat64", scope: !2343, file: !2343, line: 502, type: !2436, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2458)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!798, !803, !2438}
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2348, line: 119, size: 1152, elements: !2440)
!2440 = !{!2441, !2442, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2454, !2455, !2456, !2457}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2439, file: !2348, line: 121, baseType: !2351, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2439, file: !2348, line: 123, baseType: !2443, size: 64, offset: 64)
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2102, line: 149, baseType: !876)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2439, file: !2348, line: 124, baseType: !2355, size: 64, offset: 128)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2439, file: !2348, line: 125, baseType: !2357, size: 32, offset: 192)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2439, file: !2348, line: 132, baseType: !2359, size: 32, offset: 224)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2439, file: !2348, line: 133, baseType: !2361, size: 32, offset: 256)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2439, file: !2348, line: 135, baseType: !798, size: 32, offset: 288)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2439, file: !2348, line: 136, baseType: !2351, size: 64, offset: 320)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2439, file: !2348, line: 137, baseType: !2101, size: 64, offset: 384)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2439, file: !2348, line: 143, baseType: !2366, size: 64, offset: 448)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2439, file: !2348, line: 144, baseType: !2453, size: 64, offset: 512)
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2102, line: 180, baseType: !893)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2439, file: !2348, line: 152, baseType: !2370, size: 128, offset: 576)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2439, file: !2348, line: 153, baseType: !2370, size: 128, offset: 704)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2439, file: !2348, line: 154, baseType: !2370, size: 128, offset: 832)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2439, file: !2348, line: 164, baseType: !2380, size: 192, offset: 960)
!2458 = !{!2459, !2460}
!2459 = !DILocalVariable(name: "__path", arg: 1, scope: !2435, file: !2343, line: 502, type: !803)
!2460 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2435, file: !2343, line: 502, type: !2438)
!2461 = !DILocation(line: 0, scope: !2435)
!2462 = !DILocation(line: 504, column: 10, scope: !2435)
!2463 = !DILocation(line: 504, column: 3, scope: !2435)
!2464 = distinct !DISubprogram(name: "lstat64", scope: !2343, file: !2343, line: 509, type: !2436, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2465)
!2465 = !{!2466, !2467}
!2466 = !DILocalVariable(name: "__path", arg: 1, scope: !2464, file: !2343, line: 509, type: !803)
!2467 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2464, file: !2343, line: 509, type: !2438)
!2468 = !DILocation(line: 0, scope: !2464)
!2469 = !DILocation(line: 511, column: 10, scope: !2464)
!2470 = !DILocation(line: 511, column: 3, scope: !2464)
!2471 = distinct !DISubprogram(name: "fstat64", scope: !2343, file: !2343, line: 516, type: !2472, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2474)
!2472 = !DISubroutineType(types: !2473)
!2473 = !{!798, !798, !2438}
!2474 = !{!2475, !2476}
!2475 = !DILocalVariable(name: "__fd", arg: 1, scope: !2471, file: !2343, line: 516, type: !798)
!2476 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2471, file: !2343, line: 516, type: !2438)
!2477 = !DILocation(line: 0, scope: !2471)
!2478 = !DILocation(line: 518, column: 10, scope: !2471)
!2479 = !DILocation(line: 518, column: 3, scope: !2471)
!2480 = distinct !DISubprogram(name: "fstatat64", scope: !2343, file: !2343, line: 523, type: !2481, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2483)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!798, !798, !803, !2438, !798}
!2483 = !{!2484, !2485, !2486, !2487}
!2484 = !DILocalVariable(name: "__fd", arg: 1, scope: !2480, file: !2343, line: 523, type: !798)
!2485 = !DILocalVariable(name: "__filename", arg: 2, scope: !2480, file: !2343, line: 523, type: !803)
!2486 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2480, file: !2343, line: 523, type: !2438)
!2487 = !DILocalVariable(name: "__flag", arg: 4, scope: !2480, file: !2343, line: 523, type: !798)
!2488 = !DILocation(line: 0, scope: !2480)
!2489 = !DILocation(line: 526, column: 10, scope: !2480)
!2490 = !DILocation(line: 526, column: 3, scope: !2480)
!2491 = distinct !DISubprogram(name: "init_recog_no_volatile", scope: !3, file: !3, line: 111, type: !2492, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!2492 = !DISubroutineType(types: !2493)
!2493 = !{null}
!2494 = !DILocation(line: 113, column: 15, scope: !2491)
!2495 = !DILocation(line: 114, column: 1, scope: !2491)
!2496 = distinct !DISubprogram(name: "init_recog", scope: !3, file: !3, line: 117, type: !2492, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!2497 = !DILocation(line: 119, column: 15, scope: !2496)
!2498 = !DILocation(line: 120, column: 1, scope: !2496)
!2499 = distinct !DISubprogram(name: "check_asm_operands", scope: !3, file: !3, line: 127, type: !2500, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2502)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{!798, !806}
!2502 = !{!2503, !2504, !2505, !2506, !2507, !2508}
!2503 = !DILocalVariable(name: "x", arg: 1, scope: !2499, file: !3, line: 127, type: !806)
!2504 = !DILocalVariable(name: "noperands", scope: !2499, file: !3, line: 129, type: !798)
!2505 = !DILocalVariable(name: "operands", scope: !2499, file: !3, line: 130, type: !805)
!2506 = !DILocalVariable(name: "constraints", scope: !2499, file: !3, line: 131, type: !1876)
!2507 = !DILocalVariable(name: "i", scope: !2499, file: !3, line: 132, type: !798)
!2508 = !DILocalVariable(name: "c", scope: !2509, file: !3, line: 156, type: !803)
!2509 = distinct !DILexicalBlock(scope: !2510, file: !3, line: 155, column: 5)
!2510 = distinct !DILexicalBlock(scope: !2511, file: !3, line: 154, column: 3)
!2511 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 154, column: 3)
!2512 = !DILocation(line: 0, scope: !2499)
!2513 = !DILocation(line: 135, column: 7, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 135, column: 7)
!2515 = !DILocation(line: 135, column: 7, scope: !2499)
!2516 = !DILocation(line: 138, column: 21, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2514, file: !3, line: 136, column: 5)
!2518 = !DILocation(line: 138, column: 7, scope: !2517)
!2519 = !DILocation(line: 139, column: 7, scope: !2517)
!2520 = !DILocation(line: 140, column: 14, scope: !2517)
!2521 = !DILocation(line: 140, column: 32, scope: !2517)
!2522 = !DILocation(line: 140, column: 7, scope: !2517)
!2523 = !DILocation(line: 143, column: 15, scope: !2499)
!2524 = !DILocation(line: 144, column: 17, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 144, column: 7)
!2526 = !DILocation(line: 144, column: 7, scope: !2499)
!2527 = !DILocation(line: 146, column: 17, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 146, column: 7)
!2529 = !DILocation(line: 146, column: 7, scope: !2499)
!2530 = !DILocation(line: 149, column: 14, scope: !2499)
!2531 = !DILocation(line: 150, column: 17, scope: !2499)
!2532 = !DILocation(line: 152, column: 3, scope: !2499)
!2533 = !DILocation(line: 154, column: 17, scope: !2510)
!2534 = !DILocation(line: 154, column: 8, scope: !2511)
!2535 = !DILocation(line: 0, scope: !2511)
!2536 = !DILocation(line: 154, column: 3, scope: !2511)
!2537 = !DILocation(line: 156, column: 23, scope: !2509)
!2538 = !DILocation(line: 0, scope: !2509)
!2539 = !DILocation(line: 157, column: 11, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2509, file: !3, line: 157, column: 11)
!2541 = !DILocation(line: 157, column: 16, scope: !2540)
!2542 = !DILocation(line: 158, column: 3, scope: !2540)
!2543 = !DILocation(line: 157, column: 11, scope: !2509)
!2544 = !DILocation(line: 159, column: 29, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2509, file: !3, line: 159, column: 11)
!2546 = !DILocation(line: 159, column: 13, scope: !2545)
!2547 = !DILocation(line: 154, column: 31, scope: !2510)
!2548 = !DILocation(line: 154, column: 3, scope: !2510)
!2549 = distinct !{!2549, !2536, !2550}
!2550 = !DILocation(line: 161, column: 5, scope: !2511)
!2551 = !DILocation(line: 164, column: 1, scope: !2499)
!2552 = distinct !DISubprogram(name: "extract_insn", scope: !3, file: !3, line: 2037, type: !2553, scopeLine: 2038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2555)
!2553 = !DISubroutineType(types: !2554)
!2554 = !{null, !806}
!2555 = !{!2556, !2557, !2558, !2559, !2560, !2561, !2567, !2568}
!2556 = !DILocalVariable(name: "insn", arg: 1, scope: !2552, file: !3, line: 2037, type: !806)
!2557 = !DILocalVariable(name: "i", scope: !2552, file: !3, line: 2039, type: !798)
!2558 = !DILocalVariable(name: "icode", scope: !2552, file: !3, line: 2040, type: !798)
!2559 = !DILocalVariable(name: "noperands", scope: !2552, file: !3, line: 2041, type: !798)
!2560 = !DILocalVariable(name: "body", scope: !2552, file: !3, line: 2042, type: !806)
!2561 = !DILocalVariable(name: "p", scope: !2562, file: !3, line: 2087, type: !803)
!2562 = distinct !DILexicalBlock(scope: !2563, file: !3, line: 2086, column: 6)
!2563 = distinct !DILexicalBlock(scope: !2564, file: !3, line: 2085, column: 8)
!2564 = distinct !DILexicalBlock(scope: !2565, file: !3, line: 2074, column: 2)
!2565 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 2073, column: 11)
!2566 = distinct !DILexicalBlock(scope: !2552, file: !3, line: 2049, column: 5)
!2567 = !DILabel(scope: !2566, name: "asm_insn", file: !3, line: 2071)
!2568 = !DILabel(scope: !2566, name: "normal_insn", file: !3, line: 2097)
!2569 = !DILocation(line: 0, scope: !2552)
!2570 = !DILocation(line: 2042, column: 14, scope: !2552)
!2571 = !DILocation(line: 2044, column: 25, scope: !2552)
!2572 = !DILocation(line: 2045, column: 29, scope: !2552)
!2573 = !DILocation(line: 2046, column: 21, scope: !2552)
!2574 = !DILocation(line: 2048, column: 11, scope: !2552)
!2575 = !DILocation(line: 2048, column: 3, scope: !2552)
!2576 = !DILocation(line: 2059, column: 11, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 2059, column: 11)
!2578 = !DILocation(line: 2059, column: 37, scope: !2577)
!2579 = !DILocation(line: 2059, column: 11, scope: !2566)
!2580 = !DILocation(line: 2064, column: 12, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 2064, column: 11)
!2582 = !DILocation(line: 2064, column: 44, scope: !2581)
!2583 = !DILocation(line: 2065, column: 5, scope: !2581)
!2584 = !DILocation(line: 2065, column: 8, scope: !2581)
!2585 = !DILocation(line: 2065, column: 50, scope: !2581)
!2586 = !DILocation(line: 2066, column: 4, scope: !2581)
!2587 = !DILocation(line: 2066, column: 39, scope: !2581)
!2588 = !DILocation(line: 2064, column: 11, scope: !2566)
!2589 = !DILocation(line: 2071, column: 5, scope: !2566)
!2590 = !DILocation(line: 2072, column: 43, scope: !2566)
!2591 = !DILocation(line: 2072, column: 31, scope: !2566)
!2592 = !DILocation(line: 2072, column: 29, scope: !2566)
!2593 = !DILocation(line: 2073, column: 21, scope: !2565)
!2594 = !DILocation(line: 2073, column: 11, scope: !2566)
!2595 = !DILocation(line: 2078, column: 4, scope: !2564)
!2596 = !DILocation(line: 2081, column: 4, scope: !2564)
!2597 = !DILocation(line: 2085, column: 18, scope: !2563)
!2598 = !DILocation(line: 2085, column: 8, scope: !2564)
!2599 = !DILocation(line: 2087, column: 25, scope: !2562)
!2600 = !DILocation(line: 0, scope: !2562)
!2601 = !DILocation(line: 2089, column: 8, scope: !2562)
!2602 = !DILocation(line: 2089, column: 15, scope: !2562)
!2603 = !DILocation(line: 2090, column: 35, scope: !2562)
!2604 = !DILocation(line: 2090, column: 38, scope: !2562)
!2605 = !DILocation(line: 2090, column: 29, scope: !2562)
!2606 = distinct !{!2606, !2601, !2607}
!2607 = !DILocation(line: 2090, column: 44, scope: !2562)
!2608 = !DILocation(line: 2094, column: 7, scope: !2566)
!2609 = !DILocation(line: 2097, column: 5, scope: !2566)
!2610 = !DILocation(line: 2101, column: 15, scope: !2566)
!2611 = !DILocation(line: 2102, column: 17, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 2102, column: 11)
!2613 = !DILocation(line: 2102, column: 11, scope: !2566)
!2614 = !DILocation(line: 2103, column: 2, scope: !2612)
!2615 = !DILocation(line: 2105, column: 43, scope: !2566)
!2616 = !DILocation(line: 2105, column: 60, scope: !2566)
!2617 = !DILocation(line: 2105, column: 29, scope: !2566)
!2618 = !DILocation(line: 2106, column: 52, scope: !2566)
!2619 = !DILocation(line: 2106, column: 33, scope: !2566)
!2620 = !DILocation(line: 2107, column: 44, scope: !2566)
!2621 = !DILocation(line: 2107, column: 25, scope: !2566)
!2622 = !DILocation(line: 2109, column: 7, scope: !2566)
!2623 = !DILocation(line: 0, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2625, file: !3, line: 2112, column: 2)
!2625 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 2111, column: 7)
!2626 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 2111, column: 7)
!2627 = !DILocation(line: 2111, column: 12, scope: !2626)
!2628 = !DILocation(line: 0, scope: !2626)
!2629 = !DILocation(line: 2111, column: 21, scope: !2625)
!2630 = !DILocation(line: 2111, column: 7, scope: !2626)
!2631 = !DILocation(line: 2113, column: 49, scope: !2624)
!2632 = !DILocation(line: 2113, column: 60, scope: !2624)
!2633 = !DILocation(line: 2113, column: 4, scope: !2624)
!2634 = !DILocation(line: 2113, column: 30, scope: !2624)
!2635 = !DILocation(line: 2114, column: 61, scope: !2624)
!2636 = !DILocation(line: 2114, column: 4, scope: !2624)
!2637 = !DILocation(line: 2114, column: 31, scope: !2624)
!2638 = !DILocation(line: 2116, column: 35, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2624, file: !3, line: 2116, column: 8)
!2640 = !DILocation(line: 2116, column: 8, scope: !2624)
!2641 = !DILocation(line: 2117, column: 35, scope: !2639)
!2642 = !DILocation(line: 2117, column: 33, scope: !2639)
!2643 = !DILocation(line: 2117, column: 6, scope: !2639)
!2644 = !DILocation(line: 2111, column: 35, scope: !2625)
!2645 = !DILocation(line: 2111, column: 7, scope: !2625)
!2646 = distinct !{!2646, !2630, !2647}
!2647 = !DILocation(line: 2118, column: 2, scope: !2626)
!2648 = !DILocation(line: 2120, column: 8, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2552, file: !3, line: 2120, column: 3)
!2650 = !DILocation(line: 0, scope: !2566)
!2651 = !DILocation(line: 0, scope: !2649)
!2652 = !DILocation(line: 2120, column: 17, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2649, file: !3, line: 2120, column: 3)
!2654 = !DILocation(line: 2120, column: 3, scope: !2649)
!2655 = !DILocation(line: 2122, column: 10, scope: !2653)
!2656 = !DILocation(line: 2122, column: 39, scope: !2653)
!2657 = !DILocation(line: 2123, column: 34, scope: !2653)
!2658 = !DILocation(line: 2123, column: 5, scope: !2653)
!2659 = !DILocation(line: 2121, column: 5, scope: !2653)
!2660 = !DILocation(line: 2122, column: 7, scope: !2653)
!2661 = !DILocation(line: 2120, column: 31, scope: !2653)
!2662 = !DILocation(line: 2120, column: 3, scope: !2653)
!2663 = distinct !{!2663, !2654, !2664}
!2664 = !DILocation(line: 2124, column: 10, scope: !2649)
!2665 = !DILocation(line: 2126, column: 3, scope: !2552)
!2666 = !DILocation(line: 2128, column: 7, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2552, file: !3, line: 2128, column: 7)
!2668 = !DILocation(line: 2128, column: 24, scope: !2667)
!2669 = !DILocation(line: 2128, column: 7, scope: !2552)
!2670 = !DILocation(line: 2129, column: 32, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2672, file: !3, line: 2129, column: 5)
!2672 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 2129, column: 5)
!2673 = !DILocation(line: 2129, column: 5, scope: !2672)
!2674 = !DILocation(line: 0, scope: !2672)
!2675 = !DILocation(line: 2129, column: 19, scope: !2671)
!2676 = !DILocation(line: 2130, column: 7, scope: !2671)
!2677 = !DILocation(line: 2130, column: 43, scope: !2671)
!2678 = !DILocation(line: 2129, column: 49, scope: !2671)
!2679 = !DILocation(line: 2129, column: 5, scope: !2671)
!2680 = distinct !{!2680, !2673, !2681}
!2681 = !DILocation(line: 2130, column: 45, scope: !2672)
!2682 = !DILocation(line: 2133, column: 23, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 2132, column: 5)
!2684 = !DILocation(line: 2134, column: 12, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 2134, column: 7)
!2686 = !DILocation(line: 0, scope: !2685)
!2687 = !DILocation(line: 2134, column: 34, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !2685, file: !3, line: 2134, column: 7)
!2689 = !DILocation(line: 2134, column: 21, scope: !2688)
!2690 = !DILocation(line: 2134, column: 7, scope: !2685)
!2691 = !DILocation(line: 2136, column: 22, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2688, file: !3, line: 2135, column: 2)
!2693 = !DILocation(line: 2137, column: 42, scope: !2692)
!2694 = !DILocation(line: 2137, column: 4, scope: !2692)
!2695 = !DILocation(line: 2137, column: 40, scope: !2692)
!2696 = !DILocation(line: 2134, column: 51, scope: !2688)
!2697 = !DILocation(line: 2134, column: 7, scope: !2688)
!2698 = distinct !{!2698, !2690, !2699}
!2699 = !DILocation(line: 2138, column: 2, scope: !2685)
!2700 = !DILocation(line: 2141, column: 19, scope: !2552)
!2701 = !DILocation(line: 2142, column: 21, scope: !2552)
!2702 = !DILocation(line: 2143, column: 1, scope: !2552)
!2703 = distinct !DISubprogram(name: "constrain_operands", scope: !3, file: !3, line: 2320, type: !2140, scopeLine: 2321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2704)
!2704 = !{!2705, !2706, !2707, !2709, !2710, !2711, !2717, !2718, !2720, !2721, !2722, !2725, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2738, !2739, !2742, !2743, !2745, !2748}
!2705 = !DILocalVariable(name: "strict", arg: 1, scope: !2703, file: !3, line: 2320, type: !798)
!2706 = !DILocalVariable(name: "constraints", scope: !2703, file: !3, line: 2322, type: !1980)
!2707 = !DILocalVariable(name: "matching_operands", scope: !2703, file: !3, line: 2323, type: !2708)
!2708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 960, elements: !1975)
!2709 = !DILocalVariable(name: "earlyclobber", scope: !2703, file: !3, line: 2324, type: !2708)
!2710 = !DILocalVariable(name: "c", scope: !2703, file: !3, line: 2325, type: !798)
!2711 = !DILocalVariable(name: "funny_match", scope: !2703, file: !3, line: 2327, type: !2712)
!2712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2713, size: 1920, elements: !1975)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "funny_match", file: !3, line: 2314, size: 64, elements: !2714)
!2714 = !{!2715, !2716}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "this_op", scope: !2713, file: !3, line: 2316, baseType: !798, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !2713, file: !3, line: 2316, baseType: !798, size: 32, offset: 32)
!2717 = !DILocalVariable(name: "funny_match_index", scope: !2703, file: !3, line: 2328, type: !798)
!2718 = !DILocalVariable(name: "seen_earlyclobber_at", scope: !2719, file: !3, line: 2342, type: !798)
!2719 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 2341, column: 5)
!2720 = !DILocalVariable(name: "opno", scope: !2719, file: !3, line: 2343, type: !798)
!2721 = !DILocalVariable(name: "lose", scope: !2719, file: !3, line: 2344, type: !798)
!2722 = !DILocalVariable(name: "i", scope: !2723, file: !3, line: 2349, type: !798)
!2723 = distinct !DILexicalBlock(scope: !2724, file: !3, line: 2348, column: 2)
!2724 = distinct !DILexicalBlock(scope: !2719, file: !3, line: 2347, column: 11)
!2725 = !DILocalVariable(name: "op", scope: !2726, file: !3, line: 2360, type: !806)
!2726 = distinct !DILexicalBlock(scope: !2727, file: !3, line: 2359, column: 2)
!2727 = distinct !DILexicalBlock(scope: !2728, file: !3, line: 2358, column: 7)
!2728 = distinct !DILexicalBlock(scope: !2719, file: !3, line: 2358, column: 7)
!2729 = !DILocalVariable(name: "mode", scope: !2726, file: !3, line: 2361, type: !5)
!2730 = !DILocalVariable(name: "p", scope: !2726, file: !3, line: 2362, type: !803)
!2731 = !DILocalVariable(name: "offset", scope: !2726, file: !3, line: 2363, type: !798)
!2732 = !DILocalVariable(name: "win", scope: !2726, file: !3, line: 2364, type: !798)
!2733 = !DILocalVariable(name: "val", scope: !2726, file: !3, line: 2365, type: !798)
!2734 = !DILocalVariable(name: "len", scope: !2726, file: !3, line: 2366, type: !798)
!2735 = !DILocalVariable(name: "end", scope: !2736, file: !3, line: 2432, type: !800)
!2736 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2422, column: 3)
!2737 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 2393, column: 8)
!2738 = !DILocalVariable(name: "match", scope: !2736, file: !3, line: 2433, type: !798)
!2739 = !DILocalVariable(name: "op1", scope: !2740, file: !3, line: 2442, type: !806)
!2740 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 2441, column: 7)
!2741 = distinct !DILexicalBlock(scope: !2736, file: !3, line: 2438, column: 9)
!2742 = !DILocalVariable(name: "op2", scope: !2740, file: !3, line: 2443, type: !806)
!2743 = !DILocalVariable(name: "cl", scope: !2744, file: !3, line: 2621, type: !576)
!2744 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2620, column: 3)
!2745 = !DILocalVariable(name: "opno", scope: !2746, file: !3, line: 2670, type: !798)
!2746 = distinct !DILexicalBlock(scope: !2747, file: !3, line: 2669, column: 2)
!2747 = distinct !DILexicalBlock(scope: !2719, file: !3, line: 2668, column: 11)
!2748 = !DILocalVariable(name: "eopno", scope: !2746, file: !3, line: 2670, type: !798)
!2749 = !DILocation(line: 0, scope: !2703)
!2750 = !DILocation(line: 2322, column: 3, scope: !2703)
!2751 = !DILocation(line: 2322, column: 15, scope: !2703)
!2752 = !DILocation(line: 2323, column: 3, scope: !2703)
!2753 = !DILocation(line: 2323, column: 7, scope: !2703)
!2754 = !DILocation(line: 2324, column: 3, scope: !2703)
!2755 = !DILocation(line: 2324, column: 7, scope: !2703)
!2756 = !DILocation(line: 2327, column: 3, scope: !2703)
!2757 = !DILocation(line: 2327, column: 22, scope: !2703)
!2758 = !DILocation(line: 2330, column: 21, scope: !2703)
!2759 = !DILocation(line: 2331, column: 18, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 2331, column: 7)
!2761 = !DILocation(line: 2331, column: 29, scope: !2760)
!2762 = !DILocation(line: 2331, column: 34, scope: !2760)
!2763 = !DILocation(line: 2331, column: 48, scope: !2760)
!2764 = !DILocation(line: 2331, column: 63, scope: !2760)
!2765 = !DILocation(line: 2331, column: 7, scope: !2703)
!2766 = !DILocation(line: 2334, column: 3, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 2334, column: 3)
!2768 = !DILocation(line: 0, scope: !2767)
!2769 = !DILocation(line: 2334, column: 17, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2767, file: !3, line: 2334, column: 3)
!2771 = !DILocation(line: 0, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2608, column: 7)
!2773 = !DILocation(line: 0, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2478, column: 7)
!2775 = !DILocation(line: 0, scope: !2736)
!2776 = !DILocation(line: 2340, column: 3, scope: !2703)
!2777 = !DILocation(line: 2336, column: 24, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 2335, column: 5)
!2779 = !DILocation(line: 2336, column: 7, scope: !2778)
!2780 = !DILocation(line: 2336, column: 22, scope: !2778)
!2781 = !DILocation(line: 2337, column: 7, scope: !2778)
!2782 = !DILocation(line: 2337, column: 28, scope: !2778)
!2783 = !DILocation(line: 2334, column: 43, scope: !2770)
!2784 = !DILocation(line: 2334, column: 3, scope: !2770)
!2785 = distinct !{!2785, !2766, !2786}
!2786 = !DILocation(line: 2338, column: 5, scope: !2767)
!2787 = !DILocation(line: 2347, column: 45, scope: !2724)
!2788 = !DILocation(line: 0, scope: !2719)
!2789 = !DILocation(line: 2347, column: 12, scope: !2724)
!2790 = !DILocation(line: 2347, column: 11, scope: !2719)
!2791 = !DILocation(line: 2358, column: 7, scope: !2728)
!2792 = !DILocation(line: 2351, column: 4, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2723, file: !3, line: 2351, column: 4)
!2794 = !DILocation(line: 0, scope: !2793)
!2795 = !DILocation(line: 0, scope: !2723)
!2796 = !DILocation(line: 2351, column: 31, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 2351, column: 4)
!2798 = !DILocation(line: 2351, column: 18, scope: !2797)
!2799 = !DILocation(line: 2352, column: 41, scope: !2797)
!2800 = !DILocation(line: 2352, column: 23, scope: !2797)
!2801 = !DILocation(line: 2352, column: 21, scope: !2797)
!2802 = !DILocation(line: 2351, column: 44, scope: !2797)
!2803 = !DILocation(line: 2351, column: 4, scope: !2797)
!2804 = distinct !{!2804, !2792, !2805}
!2805 = !DILocation(line: 2352, column: 55, scope: !2793)
!2806 = !DILocation(line: 2354, column: 21, scope: !2723)
!2807 = !DILocation(line: 2344, column: 11, scope: !2719)
!2808 = !DILocation(line: 2342, column: 11, scope: !2719)
!2809 = !DILocation(line: 2345, column: 25, scope: !2719)
!2810 = !DILocation(line: 2358, column: 40, scope: !2727)
!2811 = !DILocation(line: 2358, column: 27, scope: !2727)
!2812 = !DILocation(line: 2360, column: 13, scope: !2726)
!2813 = !DILocation(line: 0, scope: !2726)
!2814 = !DILocation(line: 2361, column: 29, scope: !2726)
!2815 = !DILocation(line: 2362, column: 20, scope: !2726)
!2816 = !DILocation(line: 2368, column: 4, scope: !2726)
!2817 = !DILocation(line: 2368, column: 23, scope: !2726)
!2818 = !DILocation(line: 2372, column: 8, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 2372, column: 8)
!2820 = !DILocation(line: 2372, column: 8, scope: !2726)
!2821 = !DILocation(line: 2373, column: 11, scope: !2819)
!2822 = !DILocation(line: 0, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 2375, column: 8)
!2824 = !DILocation(line: 2375, column: 8, scope: !2823)
!2825 = !DILocation(line: 2373, column: 6, scope: !2819)
!2826 = !DILocation(line: 2375, column: 22, scope: !2823)
!2827 = !DILocation(line: 2375, column: 8, scope: !2726)
!2828 = !DILocation(line: 2377, column: 12, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2830, file: !3, line: 2377, column: 12)
!2830 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 2376, column: 6)
!2831 = !DILocation(line: 2378, column: 5, scope: !2829)
!2832 = !DILocation(line: 2383, column: 13, scope: !2830)
!2833 = !DILocation(line: 2378, column: 8, scope: !2829)
!2834 = !DILocation(line: 2378, column: 32, scope: !2829)
!2835 = !DILocation(line: 2377, column: 12, scope: !2830)
!2836 = !DILocation(line: 2379, column: 33, scope: !2829)
!2837 = !DILocation(line: 2380, column: 12, scope: !2829)
!2838 = !DILocation(line: 2381, column: 12, scope: !2829)
!2839 = !DILocation(line: 2382, column: 12, scope: !2829)
!2840 = !DILocation(line: 2379, column: 12, scope: !2829)
!2841 = !DILocation(line: 2379, column: 3, scope: !2829)
!2842 = !DILocation(line: 2384, column: 6, scope: !2830)
!2843 = !DILocation(line: 2388, column: 8, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 2388, column: 8)
!2845 = !DILocation(line: 2388, column: 11, scope: !2844)
!2846 = !DILocation(line: 2388, column: 16, scope: !2844)
!2847 = !DILocation(line: 2388, column: 22, scope: !2844)
!2848 = !DILocation(line: 2388, column: 8, scope: !2726)
!2849 = !DILocation(line: 2389, column: 6, scope: !2844)
!2850 = !DILocation(line: 0, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2591, column: 7)
!2852 = !DILocation(line: 0, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2545, column: 7)
!2854 = !DILocation(line: 0, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2856, file: !3, line: 2516, column: 11)
!2856 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 2515, column: 5)
!2857 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2514, column: 7)
!2858 = !DILocation(line: 2391, column: 4, scope: !2726)
!2859 = !DILocation(line: 2392, column: 18, scope: !2726)
!2860 = !DILocation(line: 2392, column: 28, scope: !2726)
!2861 = !DILocation(line: 2392, column: 6, scope: !2726)
!2862 = !DILocation(line: 2572, column: 7, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2572, column: 7)
!2864 = !DILocation(line: 2408, column: 3, scope: !2737)
!2865 = !DILocation(line: 2399, column: 3, scope: !2737)
!2866 = !DILocation(line: 2403, column: 3, scope: !2737)
!2867 = !DILocation(line: 2409, column: 6, scope: !2737)
!2868 = !DILocation(line: 2410, column: 10, scope: !2737)
!2869 = !DILocation(line: 2410, column: 19, scope: !2737)
!2870 = !DILocation(line: 2410, column: 13, scope: !2737)
!2871 = distinct !{!2871, !2864, !2872}
!2872 = !DILocation(line: 2410, column: 25, scope: !2737)
!2873 = !DILocation(line: 2415, column: 22, scope: !2737)
!2874 = !DILocation(line: 2416, column: 28, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2416, column: 7)
!2876 = !DILocation(line: 2416, column: 7, scope: !2737)
!2877 = !DILocation(line: 2418, column: 3, scope: !2737)
!2878 = !DILocation(line: 2432, column: 5, scope: !2736)
!2879 = !DILocation(line: 2435, column: 13, scope: !2736)
!2880 = !DILocation(line: 2436, column: 9, scope: !2736)
!2881 = !DILocation(line: 2438, column: 9, scope: !2736)
!2882 = !DILocation(line: 2456, column: 5, scope: !2736)
!2883 = !DILocation(line: 2442, column: 19, scope: !2740)
!2884 = !DILocation(line: 0, scope: !2740)
!2885 = !DILocation(line: 2443, column: 19, scope: !2740)
!2886 = !DILocation(line: 2447, column: 13, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2740, file: !3, line: 2447, column: 13)
!2888 = !DILocation(line: 2447, column: 13, scope: !2740)
!2889 = !DILocation(line: 2448, column: 10, scope: !2887)
!2890 = !DILocation(line: 2448, column: 4, scope: !2887)
!2891 = !DILocation(line: 2449, column: 13, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2740, file: !3, line: 2449, column: 13)
!2893 = !DILocation(line: 2449, column: 13, scope: !2740)
!2894 = !DILocation(line: 2450, column: 10, scope: !2892)
!2895 = !DILocation(line: 2450, column: 4, scope: !2892)
!2896 = !DILocation(line: 2452, column: 15, scope: !2740)
!2897 = !DILocation(line: 0, scope: !2741)
!2898 = !DILocation(line: 2455, column: 29, scope: !2736)
!2899 = !DILocation(line: 2456, column: 30, scope: !2736)
!2900 = !DILocation(line: 2458, column: 13, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2736, file: !3, line: 2458, column: 9)
!2902 = !DILocation(line: 2458, column: 9, scope: !2736)
!2903 = !DILocation(line: 2464, column: 13, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2736, file: !3, line: 2464, column: 9)
!2905 = !DILocation(line: 2464, column: 18, scope: !2904)
!2906 = !DILocation(line: 2466, column: 9, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 2465, column: 7)
!2908 = !DILocation(line: 2466, column: 40, scope: !2907)
!2909 = !DILocation(line: 2466, column: 48, scope: !2907)
!2910 = !DILocation(line: 2467, column: 38, scope: !2907)
!2911 = !DILocation(line: 2467, column: 42, scope: !2907)
!2912 = !DILocation(line: 2467, column: 48, scope: !2907)
!2913 = !DILocation(line: 2468, column: 7, scope: !2907)
!2914 = !DILocation(line: 2469, column: 3, scope: !2737)
!2915 = !DILocation(line: 2471, column: 3, scope: !2737)
!2916 = !DILocation(line: 2479, column: 7, scope: !2774)
!2917 = !DILocation(line: 2479, column: 11, scope: !2774)
!2918 = !DILocation(line: 2478, column: 7, scope: !2737)
!2919 = !DILocation(line: 2481, column: 5, scope: !2774)
!2920 = !DILocation(line: 2491, column: 7, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2491, column: 7)
!2922 = !DILocation(line: 2491, column: 7, scope: !2737)
!2923 = !DILocation(line: 2495, column: 4, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2925, file: !3, line: 2493, column: 11)
!2925 = distinct !DILexicalBlock(scope: !2921, file: !3, line: 2492, column: 5)
!2926 = !DILocation(line: 2495, column: 8, scope: !2924)
!2927 = !DILocation(line: 2496, column: 8, scope: !2924)
!2928 = !DILocation(line: 2496, column: 11, scope: !2924)
!2929 = !DILocation(line: 2496, column: 22, scope: !2924)
!2930 = !DILocation(line: 2497, column: 4, scope: !2924)
!2931 = !DILocation(line: 2497, column: 7, scope: !2924)
!2932 = !DILocation(line: 2493, column: 11, scope: !2925)
!2933 = !DILocation(line: 2498, column: 9, scope: !2924)
!2934 = !DILocation(line: 2500, column: 23, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2921, file: !3, line: 2500, column: 12)
!2936 = !DILocation(line: 2500, column: 26, scope: !2935)
!2937 = !DILocation(line: 2500, column: 12, scope: !2921)
!2938 = !DILocation(line: 2501, column: 5, scope: !2935)
!2939 = !DILocation(line: 2509, column: 3, scope: !2737)
!2940 = !DILocation(line: 2514, column: 7, scope: !2857)
!2941 = !DILocation(line: 2514, column: 7, scope: !2737)
!2942 = !DILocation(line: 2517, column: 4, scope: !2855)
!2943 = !DILocation(line: 2518, column: 10, scope: !2855)
!2944 = !DILocation(line: 2518, column: 25, scope: !2855)
!2945 = !DILocation(line: 2519, column: 10, scope: !2855)
!2946 = !DILocation(line: 2517, column: 8, scope: !2855)
!2947 = !DILocation(line: 2516, column: 11, scope: !2856)
!2948 = !DILocation(line: 2522, column: 4, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2856, file: !3, line: 2521, column: 11)
!2950 = !DILocation(line: 2523, column: 10, scope: !2949)
!2951 = !DILocation(line: 2523, column: 25, scope: !2949)
!2952 = !DILocation(line: 2524, column: 10, scope: !2949)
!2953 = !DILocation(line: 2522, column: 8, scope: !2949)
!2954 = !DILocation(line: 2521, column: 11, scope: !2856)
!2955 = !DILocation(line: 2529, column: 23, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 2529, column: 12)
!2957 = !DILocation(line: 2529, column: 26, scope: !2956)
!2958 = !DILocation(line: 2529, column: 12, scope: !2857)
!2959 = !DILocation(line: 2532, column: 12, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 2532, column: 12)
!2961 = !DILocation(line: 2532, column: 31, scope: !2960)
!2962 = !DILocation(line: 2532, column: 34, scope: !2960)
!2963 = !DILocation(line: 2533, column: 5, scope: !2960)
!2964 = !DILocation(line: 2533, column: 8, scope: !2960)
!2965 = !DILocation(line: 2533, column: 19, scope: !2960)
!2966 = !DILocation(line: 2532, column: 12, scope: !2956)
!2967 = !DILocation(line: 0, scope: !2857)
!2968 = !DILocation(line: 2535, column: 3, scope: !2737)
!2969 = !DILocation(line: 2538, column: 7, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2538, column: 7)
!2971 = !DILocation(line: 2539, column: 7, scope: !2970)
!2972 = !DILocation(line: 2539, column: 11, scope: !2970)
!2973 = !DILocation(line: 2539, column: 35, scope: !2970)
!2974 = !DILocation(line: 2540, column: 4, scope: !2970)
!2975 = !DILocation(line: 2540, column: 31, scope: !2970)
!2976 = !DILocation(line: 2538, column: 7, scope: !2737)
!2977 = !DILocation(line: 2541, column: 5, scope: !2970)
!2978 = !DILocation(line: 2545, column: 7, scope: !2853)
!2979 = !DILocation(line: 2546, column: 7, scope: !2853)
!2980 = !DILocation(line: 2546, column: 11, scope: !2853)
!2981 = !DILocation(line: 2546, column: 35, scope: !2853)
!2982 = !DILocation(line: 2547, column: 4, scope: !2853)
!2983 = !DILocation(line: 2547, column: 31, scope: !2853)
!2984 = !DILocation(line: 2545, column: 7, scope: !2737)
!2985 = !DILocation(line: 2548, column: 5, scope: !2853)
!2986 = !DILocation(line: 2553, column: 7, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2553, column: 7)
!2988 = !DILocation(line: 2553, column: 21, scope: !2987)
!2989 = !DILocation(line: 2554, column: 7, scope: !2987)
!2990 = !DILocation(line: 2554, column: 25, scope: !2987)
!2991 = !DILocation(line: 2555, column: 4, scope: !2987)
!2992 = !DILocation(line: 2555, column: 7, scope: !2987)
!2993 = !DILocation(line: 2555, column: 38, scope: !2987)
!2994 = !DILocation(line: 2553, column: 7, scope: !2737)
!2995 = !DILocation(line: 2556, column: 5, scope: !2987)
!2996 = !DILocation(line: 2561, column: 7, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2561, column: 7)
!2998 = !DILocation(line: 2561, column: 21, scope: !2997)
!2999 = !DILocation(line: 2562, column: 7, scope: !2997)
!3000 = !DILocation(line: 2562, column: 10, scope: !2997)
!3001 = !DILocation(line: 2561, column: 7, scope: !2737)
!3002 = !DILocation(line: 2567, column: 7, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2567, column: 7)
!3004 = !DILocation(line: 2568, column: 7, scope: !3003)
!3005 = !DILocation(line: 2568, column: 25, scope: !3003)
!3006 = !DILocation(line: 2569, column: 4, scope: !3003)
!3007 = !DILocation(line: 2569, column: 7, scope: !3003)
!3008 = !DILocation(line: 2569, column: 21, scope: !3003)
!3009 = !DILocation(line: 2567, column: 7, scope: !2737)
!3010 = !DILocation(line: 2572, column: 7, scope: !2737)
!3011 = !DILocation(line: 2574, column: 3, scope: !2737)
!3012 = !DILocation(line: 2577, column: 7, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2577, column: 7)
!3014 = !DILocation(line: 2578, column: 7, scope: !3013)
!3015 = !DILocation(line: 2578, column: 25, scope: !3013)
!3016 = !DILocation(line: 2579, column: 4, scope: !3013)
!3017 = !DILocation(line: 2579, column: 7, scope: !3013)
!3018 = !DILocation(line: 2579, column: 21, scope: !3013)
!3019 = !DILocation(line: 2577, column: 7, scope: !2737)
!3020 = !DILocation(line: 2580, column: 5, scope: !3013)
!3021 = !DILocation(line: 2591, column: 7, scope: !2851)
!3022 = !DILocation(line: 2592, column: 7, scope: !2851)
!3023 = !DILocation(line: 2592, column: 10, scope: !2851)
!3024 = !DILocation(line: 2591, column: 7, scope: !2737)
!3025 = !DILocation(line: 2597, column: 7, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 2597, column: 7)
!3027 = !DILocation(line: 2598, column: 7, scope: !3026)
!3028 = !DILocation(line: 2598, column: 23, scope: !3026)
!3029 = !DILocation(line: 2598, column: 28, scope: !3026)
!3030 = !DILocation(line: 2599, column: 4, scope: !3026)
!3031 = !DILocation(line: 2600, column: 8, scope: !3026)
!3032 = !DILocation(line: 2600, column: 13, scope: !3026)
!3033 = !DILocation(line: 2600, column: 29, scope: !3026)
!3034 = !DILocation(line: 2600, column: 32, scope: !3026)
!3035 = !DILocation(line: 2601, column: 4, scope: !3026)
!3036 = !DILocation(line: 2601, column: 8, scope: !3026)
!3037 = !DILocation(line: 2602, column: 8, scope: !3026)
!3038 = !DILocation(line: 2602, column: 13, scope: !3026)
!3039 = !DILocation(line: 2603, column: 6, scope: !3026)
!3040 = !DILocation(line: 2603, column: 9, scope: !3026)
!3041 = !DILocation(line: 2603, column: 20, scope: !3026)
!3042 = !DILocation(line: 2597, column: 7, scope: !2737)
!3043 = !DILocation(line: 2604, column: 5, scope: !3026)
!3044 = !DILocation(line: 2608, column: 19, scope: !2772)
!3045 = !DILocation(line: 2608, column: 22, scope: !2772)
!3046 = !DILocation(line: 2609, column: 7, scope: !2772)
!3047 = !DILocation(line: 2609, column: 23, scope: !2772)
!3048 = !DILocation(line: 2609, column: 26, scope: !2772)
!3049 = !DILocation(line: 2611, column: 7, scope: !2772)
!3050 = !DILocation(line: 2612, column: 4, scope: !2772)
!3051 = !DILocation(line: 2612, column: 8, scope: !2772)
!3052 = !DILocation(line: 2612, column: 24, scope: !2772)
!3053 = !DILocation(line: 2612, column: 27, scope: !2772)
!3054 = !DILocation(line: 2614, column: 7, scope: !2772)
!3055 = !DILocation(line: 2614, column: 11, scope: !2772)
!3056 = !DILocation(line: 2614, column: 30, scope: !2772)
!3057 = !DILocation(line: 2614, column: 33, scope: !2772)
!3058 = !DILocation(line: 2615, column: 4, scope: !2772)
!3059 = !DILocation(line: 2615, column: 7, scope: !2772)
!3060 = !DILocation(line: 2615, column: 18, scope: !2772)
!3061 = !DILocation(line: 2608, column: 7, scope: !2737)
!3062 = !DILocation(line: 2616, column: 5, scope: !2772)
!3063 = !DILocation(line: 2623, column: 13, scope: !2744)
!3064 = !DILocation(line: 2623, column: 11, scope: !2744)
!3065 = !DILocation(line: 2624, column: 24, scope: !2744)
!3066 = !DILocation(line: 0, scope: !2744)
!3067 = !DILocation(line: 2625, column: 12, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !2744, file: !3, line: 2625, column: 9)
!3069 = !DILocation(line: 2625, column: 9, scope: !2744)
!3070 = !DILocation(line: 2628, column: 6, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3072, file: !3, line: 2627, column: 13)
!3072 = distinct !DILexicalBlock(scope: !3068, file: !3, line: 2626, column: 7)
!3073 = !DILocation(line: 2629, column: 10, scope: !3071)
!3074 = !DILocation(line: 2629, column: 13, scope: !3071)
!3075 = !DILocation(line: 2630, column: 10, scope: !3071)
!3076 = !DILocation(line: 2630, column: 13, scope: !3071)
!3077 = !DILocation(line: 2630, column: 24, scope: !3071)
!3078 = !DILocation(line: 2631, column: 6, scope: !3071)
!3079 = !DILocation(line: 2631, column: 22, scope: !3071)
!3080 = !DILocation(line: 2631, column: 25, scope: !3071)
!3081 = !DILocation(line: 2631, column: 39, scope: !3071)
!3082 = !DILocation(line: 2632, column: 6, scope: !3071)
!3083 = !DILocation(line: 2632, column: 10, scope: !3071)
!3084 = !DILocation(line: 2633, column: 10, scope: !3071)
!3085 = !DILocation(line: 2633, column: 13, scope: !3071)
!3086 = !DILocation(line: 2627, column: 13, scope: !3072)
!3087 = !DILocation(line: 2634, column: 11, scope: !3071)
!3088 = !DILocation(line: 2637, column: 14, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3068, file: !3, line: 2637, column: 14)
!3090 = !DILocation(line: 2658, column: 13, scope: !2726)
!3091 = !DILocation(line: 2657, column: 8, scope: !2737)
!3092 = distinct !{!3092, !2858, !3093}
!3093 = !DILocation(line: 2658, column: 22, scope: !2726)
!3094 = !DILocation(line: 2660, column: 22, scope: !2726)
!3095 = !DILocation(line: 2663, column: 10, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 2663, column: 8)
!3097 = !DILocation(line: 2663, column: 8, scope: !2726)
!3098 = !DILocation(line: 2358, column: 56, scope: !2727)
!3099 = !DILocation(line: 2358, column: 7, scope: !2727)
!3100 = distinct !{!3100, !2791, !3101}
!3101 = !DILocation(line: 2665, column: 2, scope: !2728)
!3102 = !DILocation(line: 2668, column: 13, scope: !2747)
!3103 = !DILocation(line: 2668, column: 11, scope: !2719)
!3104 = !DILocation(line: 2675, column: 44, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 2675, column: 8)
!3106 = !DILocation(line: 2675, column: 20, scope: !3105)
!3107 = !DILocation(line: 2676, column: 6, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 2676, column: 6)
!3109 = !DILocation(line: 2677, column: 23, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3108, file: !3, line: 2676, column: 6)
!3111 = !DILocation(line: 0, scope: !2746)
!3112 = !DILocation(line: 2677, column: 10, scope: !3110)
!3113 = !DILocation(line: 2682, column: 12, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 2682, column: 12)
!3115 = !DILocation(line: 2683, column: 5, scope: !3114)
!3116 = !DILocation(line: 2683, column: 8, scope: !3114)
!3117 = !DILocation(line: 2682, column: 12, scope: !3110)
!3118 = !DILocation(line: 2684, column: 3, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 2684, column: 3)
!3120 = !DILocation(line: 2684, column: 36, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 2684, column: 3)
!3122 = !DILocation(line: 2684, column: 23, scope: !3121)
!3123 = !DILocation(line: 2685, column: 10, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 2685, column: 9)
!3125 = !DILocation(line: 2686, column: 10, scope: !3124)
!3126 = !DILocation(line: 2686, column: 13, scope: !3124)
!3127 = !DILocation(line: 2686, column: 43, scope: !3124)
!3128 = !DILocation(line: 2687, column: 17, scope: !3124)
!3129 = !DILocation(line: 2687, column: 9, scope: !3124)
!3130 = !DILocation(line: 2689, column: 9, scope: !3124)
!3131 = !DILocation(line: 2689, column: 13, scope: !3124)
!3132 = !DILocation(line: 2689, column: 12, scope: !3124)
!3133 = !DILocation(line: 2689, column: 42, scope: !3124)
!3134 = !DILocation(line: 2690, column: 9, scope: !3124)
!3135 = !DILocation(line: 2690, column: 15, scope: !3124)
!3136 = !DILocation(line: 2690, column: 39, scope: !3124)
!3137 = !DILocation(line: 2691, column: 8, scope: !3124)
!3138 = !DILocation(line: 2692, column: 8, scope: !3124)
!3139 = !DILocation(line: 2691, column: 11, scope: !3124)
!3140 = !DILocation(line: 2693, column: 9, scope: !3124)
!3141 = !DILocation(line: 2693, column: 38, scope: !3124)
!3142 = !DILocation(line: 2694, column: 10, scope: !3124)
!3143 = !DILocation(line: 2693, column: 14, scope: !3124)
!3144 = !DILocation(line: 2685, column: 9, scope: !3121)
!3145 = !DILocation(line: 2684, column: 52, scope: !3121)
!3146 = !DILocation(line: 2684, column: 3, scope: !3121)
!3147 = distinct !{!3147, !3118, !3148}
!3148 = !DILocation(line: 2695, column: 14, scope: !3119)
!3149 = !DILocation(line: 2678, column: 9, scope: !3110)
!3150 = !DILocation(line: 2676, column: 6, scope: !3110)
!3151 = distinct !{!3151, !3107, !3152}
!3152 = !DILocation(line: 2695, column: 14, scope: !3108)
!3153 = !DILocation(line: 2697, column: 10, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 2697, column: 8)
!3155 = !DILocation(line: 2697, column: 8, scope: !2746)
!3156 = !DILocation(line: 2699, column: 8, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 2698, column: 6)
!3158 = !DILocation(line: 2699, column: 15, scope: !3157)
!3159 = !DILocation(line: 2699, column: 35, scope: !3157)
!3160 = !DILocation(line: 2702, column: 59, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3157, file: !3, line: 2700, column: 3)
!3162 = !DILocation(line: 2702, column: 9, scope: !3161)
!3163 = !DILocation(line: 2701, column: 55, scope: !3161)
!3164 = !DILocation(line: 2701, column: 5, scope: !3161)
!3165 = !DILocation(line: 2702, column: 7, scope: !3161)
!3166 = distinct !{!3166, !3156, !3167}
!3167 = !DILocation(line: 2703, column: 3, scope: !3157)
!3168 = !DILocation(line: 2709, column: 24, scope: !2719)
!3169 = !DILocation(line: 2710, column: 5, scope: !2703)
!3170 = !DILocation(line: 2711, column: 10, scope: !2703)
!3171 = !DILocation(line: 2711, column: 41, scope: !2703)
!3172 = !DILocation(line: 2711, column: 30, scope: !2703)
!3173 = !DILocation(line: 2711, column: 28, scope: !2703)
!3174 = !DILocation(line: 2710, column: 5, scope: !2719)
!3175 = distinct !{!3175, !2776, !3176}
!3176 = !DILocation(line: 2711, column: 55, scope: !2703)
!3177 = !DILocation(line: 2713, column: 21, scope: !2703)
!3178 = !DILocation(line: 2716, column: 7, scope: !2703)
!3179 = !DILocation(line: 2717, column: 12, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 2716, column: 7)
!3181 = !DILocation(line: 2717, column: 5, scope: !3180)
!3182 = !DILocation(line: 2720, column: 1, scope: !2703)
!3183 = distinct !DISubprogram(name: "asm_noperands", scope: !3, file: !3, line: 1428, type: !3184, scopeLine: 1429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3187)
!3184 = !DISubroutineType(types: !3185)
!3185 = !{!798, !3186}
!3186 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !807, line: 51, baseType: !1878)
!3187 = !{!3188, !3189, !3190, !3191, !3195}
!3188 = !DILocalVariable(name: "body", arg: 1, scope: !3183, file: !3, line: 1428, type: !3186)
!3189 = !DILocalVariable(name: "asm_op", scope: !3183, file: !3, line: 1430, type: !806)
!3190 = !DILocalVariable(name: "n_sets", scope: !3183, file: !3, line: 1431, type: !798)
!3191 = !DILocalVariable(name: "i", scope: !3192, file: !3, line: 1440, type: !798)
!3192 = distinct !DILexicalBlock(scope: !3193, file: !3, line: 1439, column: 5)
!3193 = distinct !DILexicalBlock(scope: !3194, file: !3, line: 1438, column: 12)
!3194 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 1436, column: 7)
!3195 = !DILocalVariable(name: "elt", scope: !3196, file: !3, line: 1463, type: !806)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 1462, column: 6)
!3197 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 1461, column: 4)
!3198 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 1461, column: 4)
!3199 = distinct !DILexicalBlock(scope: !3200, file: !3, line: 1442, column: 2)
!3200 = distinct !DILexicalBlock(scope: !3192, file: !3, line: 1441, column: 11)
!3201 = !DILocation(line: 0, scope: !3183)
!3202 = !DILocation(line: 1430, column: 16, scope: !3183)
!3203 = !DILocation(line: 1433, column: 14, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 1433, column: 7)
!3205 = !DILocation(line: 1433, column: 7, scope: !3183)
!3206 = !DILocation(line: 1436, column: 7, scope: !3194)
!3207 = !DILocation(line: 1436, column: 23, scope: !3194)
!3208 = !DILocation(line: 1436, column: 7, scope: !3183)
!3209 = !DILocation(line: 1438, column: 28, scope: !3193)
!3210 = !DILocation(line: 1438, column: 12, scope: !3194)
!3211 = !DILocation(line: 1441, column: 11, scope: !3200)
!3212 = !DILocation(line: 1441, column: 43, scope: !3200)
!3213 = !DILocation(line: 0, scope: !3200)
!3214 = !DILocation(line: 1441, column: 11, scope: !3192)
!3215 = !DILocation(line: 1447, column: 4, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 1447, column: 4)
!3217 = !DILocation(line: 0, scope: !3216)
!3218 = !DILocation(line: 0, scope: !3192)
!3219 = !DILocation(line: 1447, column: 34, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 1447, column: 4)
!3221 = !DILocation(line: 1449, column: 12, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3223, file: !3, line: 1449, column: 12)
!3223 = distinct !DILexicalBlock(scope: !3220, file: !3, line: 1448, column: 6)
!3224 = !DILocation(line: 1449, column: 48, scope: !3222)
!3225 = !DILocation(line: 1449, column: 12, scope: !3223)
!3226 = !DILocation(line: 1451, column: 48, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3223, file: !3, line: 1451, column: 12)
!3228 = !DILocation(line: 1451, column: 12, scope: !3223)
!3229 = !DILocation(line: 1447, column: 4, scope: !3220)
!3230 = distinct !{!3230, !3215, !3231}
!3231 = !DILocation(line: 1453, column: 6, scope: !3216)
!3232 = !DILocation(line: 0, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3196, file: !3, line: 1470, column: 12)
!3234 = !DILocation(line: 1461, column: 9, scope: !3198)
!3235 = !DILocation(line: 0, scope: !3198)
!3236 = !DILocation(line: 1461, column: 18, scope: !3197)
!3237 = !DILocation(line: 1461, column: 4, scope: !3198)
!3238 = !DILocation(line: 1463, column: 18, scope: !3196)
!3239 = !DILocation(line: 0, scope: !3196)
!3240 = !DILocation(line: 1464, column: 12, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3196, file: !3, line: 1464, column: 12)
!3242 = !DILocation(line: 1464, column: 27, scope: !3241)
!3243 = !DILocation(line: 1464, column: 12, scope: !3196)
!3244 = !DILocation(line: 1466, column: 12, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3196, file: !3, line: 1466, column: 12)
!3246 = !DILocation(line: 1466, column: 37, scope: !3245)
!3247 = !DILocation(line: 1466, column: 12, scope: !3196)
!3248 = !DILocation(line: 1470, column: 12, scope: !3233)
!3249 = !DILocation(line: 1471, column: 8, scope: !3233)
!3250 = !DILocation(line: 1471, column: 5, scope: !3233)
!3251 = !DILocation(line: 0, scope: !3197)
!3252 = !DILocation(line: 1461, column: 29, scope: !3197)
!3253 = !DILocation(line: 1461, column: 4, scope: !3197)
!3254 = distinct !{!3254, !3237, !3255}
!3255 = !DILocation(line: 1473, column: 6, scope: !3198)
!3256 = !DILocation(line: 1480, column: 9, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 1480, column: 4)
!3258 = distinct !DILexicalBlock(scope: !3200, file: !3, line: 1476, column: 2)
!3259 = !DILocation(line: 0, scope: !3257)
!3260 = !DILocation(line: 1480, column: 38, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1480, column: 4)
!3262 = !DILocation(line: 1480, column: 4, scope: !3257)
!3263 = !DILocation(line: 1481, column: 10, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 1481, column: 10)
!3265 = !DILocation(line: 1481, column: 42, scope: !3264)
!3266 = !DILocation(line: 1481, column: 10, scope: !3261)
!3267 = !DILocation(line: 1480, column: 4, scope: !3261)
!3268 = distinct !{!3268, !3262, !3269}
!3269 = !DILocation(line: 1482, column: 16, scope: !3257)
!3270 = !DILocation(line: 0, scope: !3194)
!3271 = !DILocation(line: 1486, column: 11, scope: !3183)
!3272 = !DILocation(line: 1487, column: 6, scope: !3183)
!3273 = !DILocation(line: 1487, column: 4, scope: !3183)
!3274 = !DILocation(line: 1487, column: 41, scope: !3183)
!3275 = !DILocation(line: 1486, column: 3, scope: !3183)
!3276 = !DILocation(line: 1488, column: 1, scope: !3183)
!3277 = distinct !DISubprogram(name: "decode_asm_operands", scope: !3, file: !3, line: 1501, type: !3278, scopeLine: 1504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3283)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{!803, !806, !805, !3280, !1876, !3281, !3282}
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!3283 = !{!3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294}
!3284 = !DILocalVariable(name: "body", arg: 1, scope: !3277, file: !3, line: 1501, type: !806)
!3285 = !DILocalVariable(name: "operands", arg: 2, scope: !3277, file: !3, line: 1501, type: !805)
!3286 = !DILocalVariable(name: "operand_locs", arg: 3, scope: !3277, file: !3, line: 1501, type: !3280)
!3287 = !DILocalVariable(name: "constraints", arg: 4, scope: !3277, file: !3, line: 1502, type: !1876)
!3288 = !DILocalVariable(name: "modes", arg: 5, scope: !3277, file: !3, line: 1502, type: !3281)
!3289 = !DILocalVariable(name: "loc", arg: 6, scope: !3277, file: !3, line: 1503, type: !3282)
!3290 = !DILocalVariable(name: "nbase", scope: !3277, file: !3, line: 1505, type: !798)
!3291 = !DILocalVariable(name: "n", scope: !3277, file: !3, line: 1505, type: !798)
!3292 = !DILocalVariable(name: "i", scope: !3277, file: !3, line: 1505, type: !798)
!3293 = !DILocalVariable(name: "asmop", scope: !3277, file: !3, line: 1506, type: !806)
!3294 = !DILocalVariable(name: "nparallel", scope: !3295, file: !3, line: 1534, type: !798)
!3295 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 1533, column: 7)
!3296 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 1509, column: 5)
!3297 = !DILocation(line: 0, scope: !3277)
!3298 = !DILocation(line: 1508, column: 11, scope: !3277)
!3299 = !DILocation(line: 1508, column: 3, scope: !3277)
!3300 = !DILocation(line: 1517, column: 15, scope: !3296)
!3301 = !DILocation(line: 1521, column: 11, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 1521, column: 11)
!3303 = !DILocation(line: 1521, column: 11, scope: !3296)
!3304 = !DILocation(line: 1522, column: 16, scope: !3302)
!3305 = !DILocation(line: 1522, column: 14, scope: !3302)
!3306 = !DILocation(line: 1522, column: 2, scope: !3302)
!3307 = !DILocation(line: 1523, column: 11, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 1523, column: 11)
!3309 = !DILocation(line: 1523, column: 11, scope: !3296)
!3310 = !DILocation(line: 1524, column: 21, scope: !3308)
!3311 = !DILocation(line: 1524, column: 18, scope: !3308)
!3312 = !DILocation(line: 1524, column: 2, scope: !3308)
!3313 = !DILocation(line: 1525, column: 11, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 1525, column: 11)
!3315 = !DILocation(line: 1525, column: 11, scope: !3296)
!3316 = !DILocation(line: 1526, column: 19, scope: !3314)
!3317 = !DILocation(line: 1526, column: 17, scope: !3314)
!3318 = !DILocation(line: 1526, column: 2, scope: !3314)
!3319 = !DILocation(line: 1527, column: 11, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 1527, column: 11)
!3321 = !DILocation(line: 1527, column: 11, scope: !3296)
!3322 = !DILocation(line: 1528, column: 13, scope: !3320)
!3323 = !DILocation(line: 1528, column: 11, scope: !3320)
!3324 = !DILocation(line: 1528, column: 2, scope: !3320)
!3325 = !DILocation(line: 1534, column: 18, scope: !3295)
!3326 = !DILocation(line: 0, scope: !3295)
!3327 = !DILocation(line: 1536, column: 10, scope: !3295)
!3328 = !DILocation(line: 1537, column: 6, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3295, file: !3, line: 1537, column: 6)
!3330 = !DILocation(line: 1537, column: 23, scope: !3329)
!3331 = !DILocation(line: 1537, column: 6, scope: !3295)
!3332 = !DILocation(line: 1539, column: 14, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3329, file: !3, line: 1538, column: 4)
!3334 = !DILocation(line: 0, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1547, column: 7)
!3336 = distinct !DILexicalBlock(scope: !3337, file: !3, line: 1544, column: 8)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 1543, column: 6)
!3338 = distinct !DILexicalBlock(scope: !3333, file: !3, line: 1543, column: 6)
!3339 = !DILocation(line: 0, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1549, column: 7)
!3341 = !DILocation(line: 0, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1551, column: 7)
!3343 = !DILocation(line: 0, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1553, column: 7)
!3345 = !DILocation(line: 1543, column: 11, scope: !3338)
!3346 = !DILocation(line: 0, scope: !3338)
!3347 = !DILocation(line: 1543, column: 20, scope: !3337)
!3348 = !DILocation(line: 1543, column: 6, scope: !3338)
!3349 = !DILocation(line: 1545, column: 7, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1545, column: 7)
!3351 = !DILocation(line: 1545, column: 39, scope: !3350)
!3352 = !DILocation(line: 1545, column: 7, scope: !3336)
!3353 = !DILocation(line: 1549, column: 7, scope: !3336)
!3354 = !DILocation(line: 1550, column: 24, scope: !3340)
!3355 = !DILocation(line: 1550, column: 5, scope: !3340)
!3356 = !DILocation(line: 1550, column: 21, scope: !3340)
!3357 = !DILocation(line: 1551, column: 7, scope: !3336)
!3358 = !DILocation(line: 1552, column: 22, scope: !3342)
!3359 = !DILocation(line: 1552, column: 5, scope: !3342)
!3360 = !DILocation(line: 1552, column: 20, scope: !3342)
!3361 = !DILocation(line: 1553, column: 7, scope: !3336)
!3362 = !DILocation(line: 1554, column: 16, scope: !3344)
!3363 = !DILocation(line: 1554, column: 5, scope: !3344)
!3364 = !DILocation(line: 1554, column: 14, scope: !3344)
!3365 = !DILocation(line: 1543, column: 34, scope: !3337)
!3366 = !DILocation(line: 1543, column: 6, scope: !3337)
!3367 = distinct !{!3367, !3348, !3368}
!3368 = !DILocation(line: 1555, column: 8, scope: !3338)
!3369 = !DILocation(line: 1565, column: 7, scope: !3277)
!3370 = !DILocation(line: 1548, column: 19, scope: !3335)
!3371 = !DILocation(line: 1548, column: 5, scope: !3335)
!3372 = !DILocation(line: 1548, column: 17, scope: !3335)
!3373 = !DILocation(line: 1562, column: 7, scope: !3296)
!3374 = !DILocation(line: 1563, column: 5, scope: !3296)
!3375 = !DILocation(line: 0, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 1568, column: 11)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 1567, column: 5)
!3378 = distinct !DILexicalBlock(scope: !3379, file: !3, line: 1566, column: 3)
!3379 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 1566, column: 3)
!3380 = !DILocation(line: 0, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 1570, column: 11)
!3382 = !DILocation(line: 0, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 1572, column: 11)
!3384 = !DILocation(line: 0, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 1574, column: 11)
!3386 = !DILocation(line: 1566, column: 8, scope: !3379)
!3387 = !DILocation(line: 0, scope: !3379)
!3388 = !DILocation(line: 1566, column: 17, scope: !3378)
!3389 = !DILocation(line: 1566, column: 3, scope: !3379)
!3390 = !DILocation(line: 1570, column: 11, scope: !3377)
!3391 = !DILocation(line: 1571, column: 24, scope: !3381)
!3392 = !DILocation(line: 1571, column: 17, scope: !3381)
!3393 = !DILocation(line: 1571, column: 2, scope: !3381)
!3394 = !DILocation(line: 1571, column: 22, scope: !3381)
!3395 = !DILocation(line: 1572, column: 11, scope: !3377)
!3396 = !DILocation(line: 1573, column: 27, scope: !3383)
!3397 = !DILocation(line: 1573, column: 20, scope: !3383)
!3398 = !DILocation(line: 1573, column: 2, scope: !3383)
!3399 = !DILocation(line: 1573, column: 25, scope: !3383)
!3400 = !DILocation(line: 1574, column: 11, scope: !3377)
!3401 = !DILocation(line: 1575, column: 21, scope: !3385)
!3402 = !DILocation(line: 1575, column: 14, scope: !3385)
!3403 = !DILocation(line: 1575, column: 2, scope: !3385)
!3404 = !DILocation(line: 1575, column: 19, scope: !3385)
!3405 = !DILocation(line: 1566, column: 23, scope: !3378)
!3406 = !DILocation(line: 1566, column: 3, scope: !3378)
!3407 = distinct !{!3407, !3389, !3408}
!3408 = !DILocation(line: 1576, column: 5, scope: !3379)
!3409 = !DILocation(line: 1577, column: 9, scope: !3277)
!3410 = !DILocation(line: 1569, column: 29, scope: !3376)
!3411 = !DILocation(line: 1569, column: 21, scope: !3376)
!3412 = !DILocation(line: 1569, column: 2, scope: !3376)
!3413 = !DILocation(line: 1569, column: 26, scope: !3376)
!3414 = !DILocation(line: 1579, column: 7, scope: !3277)
!3415 = !DILocation(line: 1580, column: 8, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 1580, column: 3)
!3417 = !DILocation(line: 0, scope: !3416)
!3418 = !DILocation(line: 1580, column: 17, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3416, file: !3, line: 1580, column: 3)
!3420 = !DILocation(line: 1580, column: 3, scope: !3416)
!3421 = !DILocation(line: 1586, column: 11, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 1581, column: 5)
!3423 = !DILocation(line: 1587, column: 20, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 1586, column: 11)
!3425 = !DILocation(line: 1587, column: 2, scope: !3424)
!3426 = !DILocation(line: 1587, column: 25, scope: !3424)
!3427 = !DILocation(line: 1588, column: 11, scope: !3422)
!3428 = !DILocation(line: 1589, column: 14, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 1588, column: 11)
!3430 = !DILocation(line: 1589, column: 2, scope: !3429)
!3431 = !DILocation(line: 1589, column: 19, scope: !3429)
!3432 = !DILocation(line: 1580, column: 23, scope: !3419)
!3433 = !DILocation(line: 1580, column: 3, scope: !3419)
!3434 = distinct !{!3434, !3420, !3435}
!3435 = !DILocation(line: 1590, column: 5, scope: !3416)
!3436 = !DILocation(line: 1592, column: 7, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 1592, column: 7)
!3438 = !DILocation(line: 1585, column: 24, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 1584, column: 11)
!3440 = !DILocation(line: 1585, column: 17, scope: !3439)
!3441 = !DILocation(line: 1585, column: 2, scope: !3439)
!3442 = !DILocation(line: 1585, column: 22, scope: !3439)
!3443 = !DILocation(line: 1583, column: 29, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 1582, column: 11)
!3445 = !DILocation(line: 1583, column: 21, scope: !3444)
!3446 = !DILocation(line: 1583, column: 2, scope: !3444)
!3447 = !DILocation(line: 1583, column: 26, scope: !3444)
!3448 = !DILocation(line: 1584, column: 11, scope: !3422)
!3449 = !DILocation(line: 1592, column: 7, scope: !3277)
!3450 = !DILocation(line: 1593, column: 12, scope: !3437)
!3451 = !DILocation(line: 1593, column: 10, scope: !3437)
!3452 = !DILocation(line: 1593, column: 5, scope: !3437)
!3453 = !DILocation(line: 1595, column: 10, scope: !3277)
!3454 = !DILocation(line: 1595, column: 3, scope: !3277)
!3455 = distinct !DISubprogram(name: "asm_operand_ok", scope: !3, file: !3, line: 1602, type: !3456, scopeLine: 1603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3458)
!3456 = !DISubroutineType(types: !3457)
!3457 = !{!798, !806, !803, !1876}
!3458 = !{!3459, !3460, !3461, !3462, !3463, !3465, !3466, !3470}
!3459 = !DILocalVariable(name: "op", arg: 1, scope: !3455, file: !3, line: 1602, type: !806)
!3460 = !DILocalVariable(name: "constraint", arg: 2, scope: !3455, file: !3, line: 1602, type: !803)
!3461 = !DILocalVariable(name: "constraints", arg: 3, scope: !3455, file: !3, line: 1602, type: !1876)
!3462 = !DILocalVariable(name: "result", scope: !3455, file: !3, line: 1604, type: !798)
!3463 = !DILocalVariable(name: "c", scope: !3464, file: !3, line: 1616, type: !801)
!3464 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 1615, column: 5)
!3465 = !DILocalVariable(name: "len", scope: !3464, file: !3, line: 1617, type: !798)
!3466 = !DILocalVariable(name: "end", scope: !3467, file: !3, line: 1642, type: !800)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 1641, column: 6)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1640, column: 8)
!3469 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 1619, column: 2)
!3470 = !DILocalVariable(name: "match", scope: !3467, file: !3, line: 1643, type: !876)
!3471 = !DILocation(line: 0, scope: !3455)
!3472 = !DILocation(line: 1607, column: 3, scope: !3455)
!3473 = !DILocation(line: 1611, column: 7, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 1611, column: 7)
!3475 = !DILocation(line: 1611, column: 19, scope: !3474)
!3476 = !DILocation(line: 1611, column: 7, scope: !3455)
!3477 = !DILocation(line: 0, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1773, column: 8)
!3479 = !DILocation(line: 0, scope: !3468)
!3480 = !DILocation(line: 0, scope: !3467)
!3481 = !DILocation(line: 1614, column: 3, scope: !3455)
!3482 = !DILocation(line: 1614, column: 10, scope: !3455)
!3483 = !DILocation(line: 1604, column: 7, scope: !3455)
!3484 = !DILocation(line: 0, scope: !3464)
!3485 = !DILocation(line: 1618, column: 15, scope: !3464)
!3486 = !DILocation(line: 1618, column: 7, scope: !3464)
!3487 = !DILocation(line: 1726, column: 8, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1726, column: 8)
!3489 = !DILocation(line: 1621, column: 14, scope: !3469)
!3490 = !DILocation(line: 1622, column: 4, scope: !3469)
!3491 = distinct !{!3491, !3481, !3492}
!3492 = !DILocation(line: 1816, column: 5, scope: !3455)
!3493 = !DILocation(line: 1640, column: 8, scope: !3469)
!3494 = !DILocation(line: 1652, column: 8, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 1651, column: 6)
!3496 = !DILocation(line: 1642, column: 8, scope: !3467)
!3497 = !DILocation(line: 1645, column: 16, scope: !3467)
!3498 = !DILocation(line: 1646, column: 13, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 1646, column: 12)
!3500 = !DILocation(line: 1646, column: 12, scope: !3467)
!3501 = !DILocation(line: 1647, column: 32, scope: !3499)
!3502 = !DILocation(line: 1647, column: 12, scope: !3499)
!3503 = !DILocation(line: 1647, column: 3, scope: !3499)
!3504 = !DILocation(line: 1648, column: 36, scope: !3467)
!3505 = !DILocation(line: 1649, column: 6, scope: !3468)
!3506 = !DILocation(line: 1649, column: 6, scope: !3467)
!3507 = !DILocation(line: 1653, column: 13, scope: !3495)
!3508 = !DILocation(line: 1654, column: 15, scope: !3495)
!3509 = !DILocation(line: 1653, column: 3, scope: !3495)
!3510 = distinct !{!3510, !3494, !3511}
!3511 = !DILocation(line: 1654, column: 36, scope: !3495)
!3512 = !DILocation(line: 1655, column: 14, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 1655, column: 12)
!3514 = !DILocation(line: 1655, column: 12, scope: !3495)
!3515 = !DILocation(line: 1661, column: 8, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1661, column: 8)
!3517 = !DILocation(line: 1661, column: 8, scope: !3469)
!3518 = !DILocation(line: 1663, column: 4, scope: !3469)
!3519 = !DILocation(line: 1667, column: 8, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1667, column: 8)
!3521 = !DILocation(line: 1667, column: 8, scope: !3469)
!3522 = !DILocation(line: 1669, column: 4, scope: !3469)
!3523 = !DILocation(line: 1672, column: 8, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1672, column: 8)
!3525 = !DILocation(line: 1672, column: 8, scope: !3469)
!3526 = !DILocation(line: 1674, column: 4, scope: !3469)
!3527 = !DILocation(line: 1684, column: 8, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1684, column: 8)
!3529 = !DILocation(line: 1684, column: 8, scope: !3469)
!3530 = !DILocation(line: 1689, column: 4, scope: !3469)
!3531 = !DILocation(line: 1692, column: 8, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1692, column: 8)
!3533 = !DILocation(line: 1692, column: 8, scope: !3469)
!3534 = !DILocation(line: 1697, column: 4, scope: !3469)
!3535 = !DILocation(line: 1701, column: 8, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1701, column: 8)
!3537 = !DILocation(line: 1701, column: 22, scope: !3536)
!3538 = !DILocation(line: 1702, column: 8, scope: !3536)
!3539 = !DILocation(line: 1702, column: 26, scope: !3536)
!3540 = !DILocation(line: 1703, column: 5, scope: !3536)
!3541 = !DILocation(line: 1703, column: 8, scope: !3536)
!3542 = !DILocation(line: 1703, column: 39, scope: !3536)
!3543 = !DILocation(line: 1701, column: 8, scope: !3469)
!3544 = !DILocation(line: 1704, column: 6, scope: !3536)
!3545 = !DILocation(line: 1708, column: 8, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1708, column: 8)
!3547 = !DILocation(line: 1708, column: 22, scope: !3546)
!3548 = !DILocation(line: 1709, column: 8, scope: !3546)
!3549 = !DILocation(line: 1709, column: 11, scope: !3546)
!3550 = !DILocation(line: 1708, column: 8, scope: !3469)
!3551 = !DILocation(line: 1713, column: 8, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1713, column: 8)
!3553 = !DILocation(line: 1713, column: 22, scope: !3552)
!3554 = !DILocation(line: 1714, column: 8, scope: !3552)
!3555 = !DILocation(line: 1714, column: 11, scope: !3552)
!3556 = !DILocation(line: 1713, column: 8, scope: !3469)
!3557 = !DILocation(line: 1719, column: 8, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1719, column: 8)
!3559 = !DILocation(line: 1720, column: 8, scope: !3558)
!3560 = !DILocation(line: 1720, column: 26, scope: !3558)
!3561 = !DILocation(line: 1721, column: 5, scope: !3558)
!3562 = !DILocation(line: 1721, column: 8, scope: !3558)
!3563 = !DILocation(line: 1721, column: 22, scope: !3558)
!3564 = !DILocation(line: 1719, column: 8, scope: !3469)
!3565 = !DILocation(line: 1726, column: 24, scope: !3488)
!3566 = !DILocation(line: 1726, column: 30, scope: !3488)
!3567 = !DILocation(line: 1726, column: 39, scope: !3488)
!3568 = !DILocation(line: 1726, column: 42, scope: !3488)
!3569 = !DILocation(line: 1726, column: 8, scope: !3469)
!3570 = !DILocation(line: 1727, column: 6, scope: !3488)
!3571 = !DILocation(line: 1731, column: 8, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1731, column: 8)
!3573 = !DILocation(line: 1732, column: 8, scope: !3572)
!3574 = !DILocation(line: 1732, column: 26, scope: !3572)
!3575 = !DILocation(line: 1733, column: 5, scope: !3572)
!3576 = !DILocation(line: 1733, column: 8, scope: !3572)
!3577 = !DILocation(line: 1733, column: 22, scope: !3572)
!3578 = !DILocation(line: 1731, column: 8, scope: !3469)
!3579 = !DILocation(line: 1734, column: 6, scope: !3572)
!3580 = !DILocation(line: 1738, column: 8, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1738, column: 8)
!3582 = !DILocation(line: 1739, column: 8, scope: !3581)
!3583 = !DILocation(line: 1739, column: 11, scope: !3581)
!3584 = !DILocation(line: 1738, column: 8, scope: !3469)
!3585 = !DILocation(line: 1743, column: 8, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1743, column: 8)
!3587 = !DILocation(line: 1744, column: 8, scope: !3586)
!3588 = !DILocation(line: 1744, column: 11, scope: !3586)
!3589 = !DILocation(line: 1743, column: 8, scope: !3469)
!3590 = !DILocation(line: 1748, column: 8, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1748, column: 8)
!3592 = !DILocation(line: 1749, column: 8, scope: !3591)
!3593 = !DILocation(line: 1749, column: 11, scope: !3591)
!3594 = !DILocation(line: 1748, column: 8, scope: !3469)
!3595 = !DILocation(line: 1753, column: 8, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1753, column: 8)
!3597 = !DILocation(line: 1754, column: 8, scope: !3596)
!3598 = !DILocation(line: 1754, column: 11, scope: !3596)
!3599 = !DILocation(line: 1753, column: 8, scope: !3469)
!3600 = !DILocation(line: 1758, column: 8, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1758, column: 8)
!3602 = !DILocation(line: 1759, column: 8, scope: !3601)
!3603 = !DILocation(line: 1759, column: 11, scope: !3601)
!3604 = !DILocation(line: 1758, column: 8, scope: !3469)
!3605 = !DILocation(line: 1763, column: 8, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1763, column: 8)
!3607 = !DILocation(line: 1764, column: 8, scope: !3606)
!3608 = !DILocation(line: 1764, column: 11, scope: !3606)
!3609 = !DILocation(line: 1763, column: 8, scope: !3469)
!3610 = !DILocation(line: 1768, column: 8, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1768, column: 8)
!3612 = !DILocation(line: 1769, column: 8, scope: !3611)
!3613 = !DILocation(line: 1769, column: 11, scope: !3611)
!3614 = !DILocation(line: 1768, column: 8, scope: !3469)
!3615 = !DILocation(line: 1773, column: 8, scope: !3478)
!3616 = !DILocation(line: 1774, column: 8, scope: !3478)
!3617 = !DILocation(line: 1774, column: 11, scope: !3478)
!3618 = !DILocation(line: 1773, column: 8, scope: !3469)
!3619 = !DILocation(line: 1780, column: 4, scope: !3469)
!3620 = !DILocation(line: 1783, column: 8, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1783, column: 8)
!3622 = !DILocation(line: 1783, column: 8, scope: !3469)
!3623 = !DILocation(line: 1785, column: 4, scope: !3469)
!3624 = !DILocation(line: 1790, column: 8, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1790, column: 8)
!3626 = !DILocation(line: 1790, column: 50, scope: !3625)
!3627 = !DILocation(line: 1790, column: 8, scope: !3469)
!3628 = !DILocation(line: 1793, column: 12, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 1793, column: 12)
!3630 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1791, column: 6)
!3631 = !DILocation(line: 1793, column: 26, scope: !3629)
!3632 = !DILocation(line: 1793, column: 12, scope: !3630)
!3633 = !DILocation(line: 1795, column: 12, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 1795, column: 12)
!3635 = !DILocation(line: 1795, column: 12, scope: !3630)
!3636 = !DILocation(line: 1797, column: 6, scope: !3630)
!3637 = !DILocation(line: 1805, column: 13, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 1805, column: 13)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 1802, column: 13)
!3640 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1799, column: 13)
!3641 = !DILocation(line: 1805, column: 13, scope: !3639)
!3642 = !DILocation(line: 1810, column: 13, scope: !3464)
!3643 = !DILocation(line: 1811, column: 7, scope: !3464)
!3644 = !DILocation(line: 1812, column: 12, scope: !3464)
!3645 = !DILocation(line: 1813, column: 14, scope: !3464)
!3646 = !DILocation(line: 1813, column: 20, scope: !3464)
!3647 = !DILocation(line: 1813, column: 23, scope: !3464)
!3648 = !DILocation(line: 1812, column: 2, scope: !3464)
!3649 = distinct !{!3649, !3643, !3650}
!3650 = !DILocation(line: 1813, column: 34, scope: !3464)
!3651 = !DILocation(line: 1814, column: 11, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 1814, column: 11)
!3653 = !DILocation(line: 1819, column: 1, scope: !3455)
!3654 = distinct !DISubprogram(name: "validate_change", scope: !3, file: !3, line: 253, type: !3655, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3657)
!3655 = !DISubroutineType(types: !3656)
!3656 = !{!797, !806, !805, !806, !797}
!3657 = !{!3658, !3659, !3660, !3661}
!3658 = !DILocalVariable(name: "object", arg: 1, scope: !3654, file: !3, line: 253, type: !806)
!3659 = !DILocalVariable(name: "loc", arg: 2, scope: !3654, file: !3, line: 253, type: !805)
!3660 = !DILocalVariable(name: "new_rtx", arg: 3, scope: !3654, file: !3, line: 253, type: !806)
!3661 = !DILocalVariable(name: "in_group", arg: 4, scope: !3654, file: !3, line: 253, type: !797)
!3662 = !DILocation(line: 0, scope: !3654)
!3663 = !DILocation(line: 255, column: 10, scope: !3654)
!3664 = !DILocation(line: 255, column: 3, scope: !3654)
!3665 = distinct !DISubprogram(name: "validate_change_1", scope: !3, file: !3, line: 201, type: !3666, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3668)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{!797, !806, !805, !806, !797, !797}
!3668 = !{!3669, !3670, !3671, !3672, !3673, !3674}
!3669 = !DILocalVariable(name: "object", arg: 1, scope: !3665, file: !3, line: 201, type: !806)
!3670 = !DILocalVariable(name: "loc", arg: 2, scope: !3665, file: !3, line: 201, type: !805)
!3671 = !DILocalVariable(name: "new_rtx", arg: 3, scope: !3665, file: !3, line: 201, type: !806)
!3672 = !DILocalVariable(name: "in_group", arg: 4, scope: !3665, file: !3, line: 201, type: !797)
!3673 = !DILocalVariable(name: "unshare", arg: 5, scope: !3665, file: !3, line: 201, type: !797)
!3674 = !DILocalVariable(name: "old", scope: !3665, file: !3, line: 203, type: !806)
!3675 = !DILocation(line: 0, scope: !3665)
!3676 = !DILocation(line: 203, column: 13, scope: !3665)
!3677 = !DILocation(line: 205, column: 11, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 205, column: 7)
!3679 = !DILocation(line: 205, column: 22, scope: !3678)
!3680 = !DILocation(line: 205, column: 25, scope: !3678)
!3681 = !DILocation(line: 205, column: 7, scope: !3665)
!3682 = !DILocation(line: 208, column: 3, scope: !3665)
!3683 = !DILocation(line: 213, column: 7, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 213, column: 7)
!3685 = !DILocation(line: 210, column: 8, scope: !3665)
!3686 = !DILocation(line: 213, column: 22, scope: !3684)
!3687 = !DILocation(line: 213, column: 19, scope: !3684)
!3688 = !DILocation(line: 213, column: 7, scope: !3665)
!3689 = !DILocation(line: 225, column: 3, scope: !3665)
!3690 = !DILocation(line: 215, column: 29, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 215, column: 11)
!3692 = distinct !DILexicalBlock(scope: !3684, file: !3, line: 214, column: 5)
!3693 = !DILocation(line: 215, column: 11, scope: !3692)
!3694 = !DILocation(line: 218, column: 2, scope: !3691)
!3695 = !DILocation(line: 220, column: 20, scope: !3691)
!3696 = !DILocation(line: 0, scope: !3691)
!3697 = !DILocation(line: 222, column: 17, scope: !3692)
!3698 = !DILocation(line: 222, column: 15, scope: !3692)
!3699 = !DILocation(line: 223, column: 5, scope: !3692)
!3700 = !DILocation(line: 225, column: 11, scope: !3665)
!3701 = !DILocation(line: 227, column: 11, scope: !3665)
!3702 = !DILocation(line: 225, column: 24, scope: !3665)
!3703 = !DILocation(line: 225, column: 31, scope: !3665)
!3704 = !DILocation(line: 226, column: 3, scope: !3665)
!3705 = !DILocation(line: 226, column: 24, scope: !3665)
!3706 = !DILocation(line: 226, column: 28, scope: !3665)
!3707 = !DILocation(line: 227, column: 3, scope: !3665)
!3708 = !DILocation(line: 227, column: 24, scope: !3665)
!3709 = !DILocation(line: 227, column: 28, scope: !3665)
!3710 = !DILocation(line: 228, column: 3, scope: !3665)
!3711 = !DILocation(line: 228, column: 24, scope: !3665)
!3712 = !DILocation(line: 228, column: 32, scope: !3665)
!3713 = !DILocation(line: 230, column: 7, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 230, column: 7)
!3715 = !DILocation(line: 230, column: 14, scope: !3714)
!3716 = !DILocation(line: 230, column: 18, scope: !3714)
!3717 = !DILocation(line: 230, column: 7, scope: !3665)
!3718 = !DILocation(line: 234, column: 39, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 231, column: 5)
!3720 = !DILocation(line: 234, column: 7, scope: !3719)
!3721 = !DILocation(line: 234, column: 15, scope: !3719)
!3722 = !DILocation(line: 234, column: 28, scope: !3719)
!3723 = !DILocation(line: 234, column: 37, scope: !3719)
!3724 = !DILocation(line: 235, column: 26, scope: !3719)
!3725 = !DILocation(line: 236, column: 5, scope: !3719)
!3726 = !DILocation(line: 238, column: 14, scope: !3665)
!3727 = !DILocation(line: 243, column: 7, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 243, column: 7)
!3729 = !DILocation(line: 243, column: 7, scope: !3665)
!3730 = !DILocation(line: 246, column: 12, scope: !3728)
!3731 = !DILocation(line: 246, column: 5, scope: !3728)
!3732 = !DILocation(line: 247, column: 1, scope: !3665)
!3733 = distinct !DISubprogram(name: "validate_unshare_change", scope: !3, file: !3, line: 262, type: !3655, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3734)
!3734 = !{!3735, !3736, !3737, !3738}
!3735 = !DILocalVariable(name: "object", arg: 1, scope: !3733, file: !3, line: 262, type: !806)
!3736 = !DILocalVariable(name: "loc", arg: 2, scope: !3733, file: !3, line: 262, type: !805)
!3737 = !DILocalVariable(name: "new_rtx", arg: 3, scope: !3733, file: !3, line: 262, type: !806)
!3738 = !DILocalVariable(name: "in_group", arg: 4, scope: !3733, file: !3, line: 262, type: !797)
!3739 = !DILocation(line: 0, scope: !3733)
!3740 = !DILocation(line: 264, column: 10, scope: !3733)
!3741 = !DILocation(line: 264, column: 3, scope: !3733)
!3742 = distinct !DISubprogram(name: "canonicalize_change_group", scope: !3, file: !3, line: 274, type: !3743, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3745)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{!797, !806, !806}
!3745 = !{!3746, !3747, !3748}
!3746 = !DILocalVariable(name: "insn", arg: 1, scope: !3742, file: !3, line: 274, type: !806)
!3747 = !DILocalVariable(name: "x", arg: 2, scope: !3742, file: !3, line: 274, type: !806)
!3748 = !DILocalVariable(name: "tem", scope: !3749, file: !3, line: 281, type: !806)
!3749 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 278, column: 5)
!3750 = distinct !DILexicalBlock(scope: !3742, file: !3, line: 276, column: 7)
!3751 = !DILocation(line: 0, scope: !3742)
!3752 = !DILocation(line: 276, column: 7, scope: !3750)
!3753 = !DILocation(line: 277, column: 7, scope: !3750)
!3754 = !DILocation(line: 277, column: 39, scope: !3750)
!3755 = !DILocation(line: 277, column: 52, scope: !3750)
!3756 = !DILocation(line: 277, column: 10, scope: !3750)
!3757 = !DILocation(line: 276, column: 7, scope: !3742)
!3758 = !DILocation(line: 281, column: 17, scope: !3749)
!3759 = !DILocation(line: 0, scope: !3749)
!3760 = !DILocation(line: 282, column: 44, scope: !3749)
!3761 = !DILocation(line: 282, column: 7, scope: !3749)
!3762 = !DILocation(line: 283, column: 7, scope: !3749)
!3763 = !DILocation(line: 0, scope: !3750)
!3764 = !DILocation(line: 288, column: 1, scope: !3742)
!3765 = distinct !DISubprogram(name: "insn_invalid_p", scope: !3, file: !3, line: 295, type: !2500, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3766)
!3766 = !{!3767, !3768, !3769, !3770, !3771, !3772}
!3767 = !DILocalVariable(name: "insn", arg: 1, scope: !3765, file: !3, line: 295, type: !806)
!3768 = !DILocalVariable(name: "pat", scope: !3765, file: !3, line: 297, type: !806)
!3769 = !DILocalVariable(name: "num_clobbers", scope: !3765, file: !3, line: 298, type: !798)
!3770 = !DILocalVariable(name: "icode", scope: !3765, file: !3, line: 301, type: !798)
!3771 = !DILocalVariable(name: "is_asm", scope: !3765, file: !3, line: 305, type: !798)
!3772 = !DILocalVariable(name: "newpat", scope: !3773, file: !3, line: 319, type: !806)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 318, column: 5)
!3774 = distinct !DILexicalBlock(scope: !3765, file: !3, line: 317, column: 7)
!3775 = !DILocation(line: 0, scope: !3765)
!3776 = !DILocation(line: 297, column: 13, scope: !3765)
!3777 = !DILocation(line: 298, column: 3, scope: !3765)
!3778 = !DILocation(line: 298, column: 7, scope: !3765)
!3779 = !DILocation(line: 302, column: 9, scope: !3765)
!3780 = !DILocation(line: 302, column: 24, scope: !3765)
!3781 = !DILocation(line: 303, column: 14, scope: !3765)
!3782 = !DILocation(line: 303, column: 36, scope: !3765)
!3783 = !DILocation(line: 303, column: 9, scope: !3765)
!3784 = !DILocation(line: 301, column: 15, scope: !3765)
!3785 = !DILocation(line: 305, column: 22, scope: !3765)
!3786 = !DILocation(line: 305, column: 26, scope: !3765)
!3787 = !DILocation(line: 305, column: 44, scope: !3765)
!3788 = !DILocation(line: 305, column: 29, scope: !3765)
!3789 = !DILocation(line: 305, column: 60, scope: !3765)
!3790 = !DILocation(line: 310, column: 15, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3765, file: !3, line: 310, column: 7)
!3792 = !DILocation(line: 310, column: 40, scope: !3791)
!3793 = !DILocation(line: 310, column: 20, scope: !3791)
!3794 = !DILocation(line: 311, column: 7, scope: !3791)
!3795 = !DILocation(line: 311, column: 19, scope: !3791)
!3796 = !DILocation(line: 310, column: 7, scope: !3765)
!3797 = !DILocation(line: 317, column: 7, scope: !3774)
!3798 = !DILocation(line: 317, column: 20, scope: !3774)
!3799 = !DILocation(line: 317, column: 7, scope: !3765)
!3800 = !DILocation(line: 321, column: 11, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 321, column: 11)
!3802 = !DILocation(line: 321, column: 11, scope: !3773)
!3803 = !DILocation(line: 324, column: 16, scope: !3773)
!3804 = !DILocation(line: 0, scope: !3773)
!3805 = !DILocation(line: 325, column: 7, scope: !3773)
!3806 = !DILocation(line: 325, column: 30, scope: !3773)
!3807 = !DILocation(line: 326, column: 7, scope: !3773)
!3808 = !DILocation(line: 327, column: 22, scope: !3773)
!3809 = !DILocation(line: 328, column: 5, scope: !3774)
!3810 = !DILocation(line: 331, column: 7, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3765, file: !3, line: 331, column: 7)
!3812 = !DILocation(line: 331, column: 7, scope: !3765)
!3813 = !DILocation(line: 333, column: 7, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 332, column: 5)
!3815 = !DILocation(line: 335, column: 13, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 335, column: 11)
!3817 = !DILocation(line: 335, column: 11, scope: !3814)
!3818 = !DILocation(line: 339, column: 3, scope: !3765)
!3819 = !DILocation(line: 339, column: 20, scope: !3765)
!3820 = !DILocation(line: 340, column: 3, scope: !3765)
!3821 = !DILocation(line: 341, column: 1, scope: !3765)
!3822 = distinct !DISubprogram(name: "num_changes_pending", scope: !3, file: !3, line: 345, type: !2066, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!3823 = !DILocation(line: 347, column: 10, scope: !3822)
!3824 = !DILocation(line: 347, column: 3, scope: !3822)
!3825 = distinct !DISubprogram(name: "verify_changes", scope: !3, file: !3, line: 354, type: !2140, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3826)
!3826 = !{!3827, !3828, !3829, !3830, !3834, !3840, !3843}
!3827 = !DILocalVariable(name: "num", arg: 1, scope: !3825, file: !3, line: 354, type: !798)
!3828 = !DILocalVariable(name: "i", scope: !3825, file: !3, line: 356, type: !798)
!3829 = !DILocalVariable(name: "last_validated", scope: !3825, file: !3, line: 357, type: !806)
!3830 = !DILocalVariable(name: "object", scope: !3831, file: !3, line: 370, type: !806)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 369, column: 5)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 368, column: 3)
!3833 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 368, column: 3)
!3834 = !DILocalVariable(name: "pat", scope: !3835, file: !3, line: 398, type: !806)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 397, column: 2)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 396, column: 16)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 394, column: 16)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 384, column: 16)
!3839 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 377, column: 11)
!3840 = !DILocalVariable(name: "newpat", scope: !3841, file: !3, line: 409, type: !806)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 408, column: 6)
!3842 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 405, column: 8)
!3843 = !DILocalVariable(name: "j", scope: !3844, file: !3, line: 415, type: !798)
!3844 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 414, column: 3)
!3845 = distinct !DILexicalBlock(scope: !3841, file: !3, line: 411, column: 12)
!3846 = !DILocation(line: 0, scope: !3825)
!3847 = !DILocation(line: 368, column: 8, scope: !3833)
!3848 = !DILocation(line: 357, column: 7, scope: !3825)
!3849 = !DILocation(line: 368, column: 21, scope: !3832)
!3850 = !DILocation(line: 368, column: 19, scope: !3832)
!3851 = !DILocation(line: 368, column: 3, scope: !3833)
!3852 = !DILocation(line: 370, column: 20, scope: !3831)
!3853 = !DILocation(line: 370, column: 31, scope: !3831)
!3854 = !DILocation(line: 0, scope: !3831)
!3855 = !DILocation(line: 374, column: 18, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 374, column: 11)
!3857 = !DILocation(line: 374, column: 33, scope: !3856)
!3858 = !DILocation(line: 374, column: 23, scope: !3856)
!3859 = !DILocation(line: 377, column: 11, scope: !3839)
!3860 = !DILocation(line: 377, column: 11, scope: !3831)
!3861 = !DILocation(line: 379, column: 39, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 379, column: 8)
!3863 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 378, column: 2)
!3864 = !DILocation(line: 380, column: 11, scope: !3862)
!3865 = !DILocation(line: 381, column: 11, scope: !3862)
!3866 = !DILocation(line: 379, column: 10, scope: !3862)
!3867 = !DILocation(line: 379, column: 8, scope: !3863)
!3868 = !DILocation(line: 384, column: 16, scope: !3838)
!3869 = !DILocation(line: 385, column: 9, scope: !3838)
!3870 = !DILocation(line: 385, column: 27, scope: !3838)
!3871 = !DILocation(line: 385, column: 12, scope: !3838)
!3872 = !DILocation(line: 385, column: 45, scope: !3838)
!3873 = !DILocation(line: 386, column: 9, scope: !3838)
!3874 = !DILocation(line: 386, column: 12, scope: !3838)
!3875 = !DILocation(line: 386, column: 38, scope: !3838)
!3876 = !DILocation(line: 387, column: 9, scope: !3838)
!3877 = !DILocation(line: 387, column: 12, scope: !3838)
!3878 = !DILocation(line: 388, column: 9, scope: !3838)
!3879 = !DILocation(line: 388, column: 12, scope: !3838)
!3880 = !DILocation(line: 384, column: 16, scope: !3839)
!3881 = !DILocation(line: 394, column: 16, scope: !3837)
!3882 = !DILocation(line: 394, column: 16, scope: !3838)
!3883 = !DILocation(line: 396, column: 16, scope: !3836)
!3884 = !DILocation(line: 396, column: 16, scope: !3837)
!3885 = !DILocation(line: 398, column: 14, scope: !3835)
!3886 = !DILocation(line: 0, scope: !3835)
!3887 = !DILocation(line: 405, column: 8, scope: !3842)
!3888 = !DILocation(line: 405, column: 23, scope: !3842)
!3889 = !DILocation(line: 406, column: 8, scope: !3842)
!3890 = !DILocation(line: 406, column: 11, scope: !3842)
!3891 = !DILocation(line: 406, column: 61, scope: !3842)
!3892 = !DILocation(line: 407, column: 8, scope: !3842)
!3893 = !DILocation(line: 407, column: 11, scope: !3842)
!3894 = !DILocation(line: 407, column: 44, scope: !3842)
!3895 = !DILocation(line: 405, column: 8, scope: !3835)
!3896 = !DILocation(line: 436, column: 13, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 436, column: 13)
!3898 = !DILocation(line: 411, column: 12, scope: !3845)
!3899 = !DILocation(line: 411, column: 29, scope: !3845)
!3900 = !DILocation(line: 411, column: 12, scope: !3841)
!3901 = !DILocation(line: 412, column: 12, scope: !3845)
!3902 = !DILocation(line: 0, scope: !3841)
!3903 = !DILocation(line: 412, column: 3, scope: !3845)
!3904 = !DILocation(line: 418, column: 9, scope: !3844)
!3905 = !DILocation(line: 0, scope: !3844)
!3906 = !DILocation(line: 0, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !3, line: 420, column: 5)
!3908 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 420, column: 5)
!3909 = !DILocation(line: 420, column: 10, scope: !3908)
!3910 = !DILocation(line: 0, scope: !3908)
!3911 = !DILocation(line: 420, column: 21, scope: !3907)
!3912 = !DILocation(line: 420, column: 19, scope: !3907)
!3913 = !DILocation(line: 420, column: 5, scope: !3908)
!3914 = !DILocation(line: 421, column: 32, scope: !3907)
!3915 = !DILocation(line: 421, column: 7, scope: !3907)
!3916 = !DILocation(line: 421, column: 30, scope: !3907)
!3917 = !DILocation(line: 420, column: 43, scope: !3907)
!3918 = !DILocation(line: 420, column: 5, scope: !3907)
!3919 = distinct !{!3919, !3913, !3920}
!3920 = !DILocation(line: 421, column: 32, scope: !3908)
!3921 = !DILocation(line: 433, column: 34, scope: !3841)
!3922 = !DILocation(line: 0, scope: !3845)
!3923 = !DILocation(line: 433, column: 8, scope: !3841)
!3924 = !DILocation(line: 436, column: 28, scope: !3897)
!3925 = !DILocation(line: 436, column: 35, scope: !3897)
!3926 = !DILocation(line: 436, column: 53, scope: !3897)
!3927 = !DILocation(line: 437, column: 6, scope: !3897)
!3928 = !DILocation(line: 437, column: 24, scope: !3897)
!3929 = !DILocation(line: 436, column: 13, scope: !3842)
!3930 = !DILocation(line: 445, column: 5, scope: !3832)
!3931 = !DILocation(line: 447, column: 16, scope: !3825)
!3932 = !DILocation(line: 368, column: 35, scope: !3832)
!3933 = !DILocation(line: 368, column: 3, scope: !3832)
!3934 = distinct !{!3934, !3851, !3935}
!3935 = !DILocation(line: 445, column: 5, scope: !3833)
!3936 = !DILocation(line: 447, column: 13, scope: !3825)
!3937 = !DILocation(line: 447, column: 3, scope: !3825)
!3938 = distinct !DISubprogram(name: "memory_address_addr_space_p", scope: !3, file: !3, line: 1277, type: !3939, scopeLine: 1279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3942)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!798, !5, !806, !3941}
!3941 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !807, line: 73, baseType: !797)
!3942 = !{!3943, !3944, !3945}
!3943 = !DILocalVariable(name: "mode", arg: 1, scope: !3938, file: !3, line: 1277, type: !5)
!3944 = !DILocalVariable(name: "addr", arg: 2, scope: !3938, file: !3, line: 1278, type: !806)
!3945 = !DILocalVariable(name: "as", arg: 3, scope: !3938, file: !3, line: 1278, type: !3941)
!3946 = !DILocation(line: 0, scope: !3938)
!3947 = !DILocation(line: 1288, column: 29, scope: !3938)
!3948 = !DILocation(line: 1288, column: 10, scope: !3938)
!3949 = !DILocation(line: 1288, column: 3, scope: !3938)
!3950 = distinct !DISubprogram(name: "confirm_change_group", scope: !3, file: !3, line: 455, type: !2492, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3951)
!3951 = !{!3952, !3953, !3954}
!3952 = !DILocalVariable(name: "i", scope: !3950, file: !3, line: 457, type: !798)
!3953 = !DILocalVariable(name: "last_object", scope: !3950, file: !3, line: 458, type: !806)
!3954 = !DILocalVariable(name: "object", scope: !3955, file: !3, line: 462, type: !806)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 461, column: 5)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 460, column: 3)
!3957 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 460, column: 3)
!3958 = !DILocation(line: 0, scope: !3950)
!3959 = !DILocation(line: 460, column: 8, scope: !3957)
!3960 = !DILocation(line: 460, column: 19, scope: !3956)
!3961 = !DILocation(line: 460, column: 17, scope: !3956)
!3962 = !DILocation(line: 460, column: 3, scope: !3957)
!3963 = !DILocation(line: 462, column: 20, scope: !3955)
!3964 = !DILocation(line: 462, column: 31, scope: !3955)
!3965 = !DILocation(line: 0, scope: !3955)
!3966 = !DILocation(line: 464, column: 22, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3955, file: !3, line: 464, column: 11)
!3968 = !DILocation(line: 464, column: 11, scope: !3967)
!3969 = !DILocation(line: 464, column: 11, scope: !3955)
!3970 = !DILocation(line: 465, column: 42, scope: !3967)
!3971 = !DILocation(line: 465, column: 30, scope: !3967)
!3972 = !DILocation(line: 465, column: 20, scope: !3967)
!3973 = !DILocation(line: 465, column: 3, scope: !3967)
!3974 = !DILocation(line: 465, column: 14, scope: !3967)
!3975 = !DILocation(line: 465, column: 18, scope: !3967)
!3976 = !DILocation(line: 465, column: 2, scope: !3967)
!3977 = !DILocation(line: 469, column: 11, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3955, file: !3, line: 469, column: 11)
!3979 = !DILocation(line: 469, column: 11, scope: !3955)
!3980 = !DILocation(line: 471, column: 15, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 471, column: 8)
!3982 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 470, column: 2)
!3983 = !DILocation(line: 471, column: 33, scope: !3981)
!3984 = !DILocation(line: 471, column: 30, scope: !3981)
!3985 = !DILocation(line: 471, column: 48, scope: !3981)
!3986 = !DILocation(line: 471, column: 8, scope: !3982)
!3987 = !DILocation(line: 472, column: 6, scope: !3981)
!3988 = !DILocation(line: 460, column: 33, scope: !3956)
!3989 = !DILocation(line: 460, column: 3, scope: !3956)
!3990 = distinct !{!3990, !3962, !3991}
!3991 = !DILocation(line: 475, column: 5, scope: !3957)
!3992 = !DILocation(line: 477, column: 7, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 477, column: 7)
!3994 = !DILocation(line: 477, column: 19, scope: !3993)
!3995 = !DILocation(line: 477, column: 22, scope: !3993)
!3996 = !DILocation(line: 477, column: 7, scope: !3950)
!3997 = !DILocation(line: 478, column: 5, scope: !3993)
!3998 = !DILocation(line: 479, column: 15, scope: !3950)
!3999 = !DILocation(line: 480, column: 1, scope: !3950)
!4000 = distinct !DISubprogram(name: "apply_change_group", scope: !3, file: !3, line: 487, type: !2066, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!4001 = !DILocation(line: 489, column: 7, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 489, column: 7)
!4003 = !DILocation(line: 489, column: 7, scope: !4000)
!4004 = !DILocation(line: 491, column: 7, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 490, column: 5)
!4006 = !DILocation(line: 492, column: 7, scope: !4005)
!4007 = !DILocation(line: 496, column: 7, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 495, column: 5)
!4009 = !DILocation(line: 497, column: 7, scope: !4008)
!4010 = !DILocation(line: 0, scope: !4002)
!4011 = !DILocation(line: 499, column: 1, scope: !4000)
!4012 = distinct !DISubprogram(name: "cancel_changes", scope: !3, file: !3, line: 513, type: !4013, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4015)
!4013 = !DISubroutineType(types: !4014)
!4014 = !{null, !798}
!4015 = !{!4016, !4017}
!4016 = !DILocalVariable(name: "num", arg: 1, scope: !4012, file: !3, line: 513, type: !798)
!4017 = !DILocalVariable(name: "i", scope: !4012, file: !3, line: 515, type: !798)
!4018 = !DILocation(line: 0, scope: !4012)
!4019 = !DILocation(line: 519, column: 12, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 519, column: 3)
!4021 = !DILocation(line: 519, column: 8, scope: !4020)
!4022 = !DILocation(line: 0, scope: !4020)
!4023 = !DILocation(line: 519, column: 31, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 519, column: 3)
!4025 = !DILocation(line: 519, column: 3, scope: !4020)
!4026 = !DILocation(line: 521, column: 25, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 520, column: 5)
!4028 = !DILocation(line: 521, column: 36, scope: !4027)
!4029 = !DILocation(line: 521, column: 19, scope: !4027)
!4030 = !DILocation(line: 521, column: 23, scope: !4027)
!4031 = !DILocation(line: 522, column: 11, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 522, column: 11)
!4033 = !DILocation(line: 522, column: 22, scope: !4032)
!4034 = !DILocation(line: 522, column: 29, scope: !4032)
!4035 = !DILocation(line: 522, column: 33, scope: !4032)
!4036 = !DILocation(line: 522, column: 11, scope: !4027)
!4037 = !DILocation(line: 523, column: 45, scope: !4032)
!4038 = !DILocation(line: 523, column: 2, scope: !4032)
!4039 = !DILocation(line: 523, column: 32, scope: !4032)
!4040 = !DILocation(line: 519, column: 3, scope: !4024)
!4041 = distinct !{!4041, !4025, !4042}
!4042 = !DILocation(line: 524, column: 5, scope: !4020)
!4043 = !DILocation(line: 525, column: 15, scope: !4012)
!4044 = !DILocation(line: 526, column: 1, scope: !4012)
!4045 = distinct !DISubprogram(name: "num_validated_changes", scope: !3, file: !3, line: 505, type: !2066, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!4046 = !DILocation(line: 507, column: 10, scope: !4045)
!4047 = !DILocation(line: 507, column: 3, scope: !4045)
!4048 = distinct !DISubprogram(name: "validate_replace_rtx_subexp", scope: !3, file: !3, line: 751, type: !4049, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4051)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{!798, !806, !806, !806, !805}
!4051 = !{!4052, !4053, !4054, !4055}
!4052 = !DILocalVariable(name: "from", arg: 1, scope: !4048, file: !3, line: 751, type: !806)
!4053 = !DILocalVariable(name: "to", arg: 2, scope: !4048, file: !3, line: 751, type: !806)
!4054 = !DILocalVariable(name: "insn", arg: 3, scope: !4048, file: !3, line: 751, type: !806)
!4055 = !DILocalVariable(name: "loc", arg: 4, scope: !4048, file: !3, line: 751, type: !805)
!4056 = !DILocation(line: 0, scope: !4048)
!4057 = !DILocation(line: 753, column: 3, scope: !4048)
!4058 = !DILocation(line: 754, column: 10, scope: !4048)
!4059 = !DILocation(line: 754, column: 3, scope: !4048)
!4060 = distinct !DISubprogram(name: "validate_replace_rtx_1", scope: !3, file: !3, line: 663, type: !4061, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4063)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{null, !805, !806, !806, !806, !797}
!4063 = !{!4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075}
!4064 = !DILocalVariable(name: "loc", arg: 1, scope: !4060, file: !3, line: 663, type: !805)
!4065 = !DILocalVariable(name: "from", arg: 2, scope: !4060, file: !3, line: 663, type: !806)
!4066 = !DILocalVariable(name: "to", arg: 3, scope: !4060, file: !3, line: 663, type: !806)
!4067 = !DILocalVariable(name: "object", arg: 4, scope: !4060, file: !3, line: 663, type: !806)
!4068 = !DILocalVariable(name: "simplify", arg: 5, scope: !4060, file: !3, line: 664, type: !797)
!4069 = !DILocalVariable(name: "i", scope: !4060, file: !3, line: 666, type: !798)
!4070 = !DILocalVariable(name: "j", scope: !4060, file: !3, line: 666, type: !798)
!4071 = !DILocalVariable(name: "fmt", scope: !4060, file: !3, line: 667, type: !803)
!4072 = !DILocalVariable(name: "x", scope: !4060, file: !3, line: 668, type: !806)
!4073 = !DILocalVariable(name: "code", scope: !4060, file: !3, line: 669, type: !377)
!4074 = !DILocalVariable(name: "op0_mode", scope: !4060, file: !3, line: 670, type: !5)
!4075 = !DILocalVariable(name: "prev_changes", scope: !4060, file: !3, line: 671, type: !798)
!4076 = !DILocation(line: 0, scope: !4060)
!4077 = !DILocation(line: 668, column: 11, scope: !4060)
!4078 = !DILocation(line: 671, column: 22, scope: !4060)
!4079 = !DILocation(line: 673, column: 8, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 673, column: 7)
!4081 = !DILocation(line: 673, column: 7, scope: !4060)
!4082 = !DILocation(line: 676, column: 10, scope: !4060)
!4083 = !DILocation(line: 677, column: 9, scope: !4060)
!4084 = !DILocation(line: 678, column: 7, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 678, column: 7)
!4086 = !DILocation(line: 678, column: 14, scope: !4085)
!4087 = !DILocation(line: 678, column: 7, scope: !4060)
!4088 = !DILocation(line: 679, column: 16, scope: !4085)
!4089 = !DILocation(line: 679, column: 5, scope: !4085)
!4090 = !DILocation(line: 685, column: 9, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 685, column: 7)
!4092 = !DILocation(line: 686, column: 7, scope: !4091)
!4093 = !DILocation(line: 686, column: 11, scope: !4091)
!4094 = !DILocation(line: 686, column: 21, scope: !4091)
!4095 = !DILocation(line: 686, column: 24, scope: !4091)
!4096 = !DILocation(line: 687, column: 4, scope: !4091)
!4097 = !DILocation(line: 687, column: 20, scope: !4091)
!4098 = !DILocation(line: 688, column: 4, scope: !4091)
!4099 = !DILocation(line: 688, column: 7, scope: !4091)
!4100 = !DILocation(line: 688, column: 20, scope: !4091)
!4101 = !DILocation(line: 688, column: 17, scope: !4091)
!4102 = !DILocation(line: 689, column: 7, scope: !4091)
!4103 = !DILocation(line: 689, column: 11, scope: !4091)
!4104 = !DILocation(line: 689, column: 27, scope: !4091)
!4105 = !DILocation(line: 689, column: 24, scope: !4091)
!4106 = !DILocation(line: 689, column: 43, scope: !4091)
!4107 = !DILocation(line: 689, column: 59, scope: !4091)
!4108 = !DILocation(line: 690, column: 4, scope: !4091)
!4109 = !DILocation(line: 690, column: 7, scope: !4091)
!4110 = !DILocation(line: 685, column: 7, scope: !4060)
!4111 = !DILocation(line: 701, column: 7, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 701, column: 7)
!4113 = !DILocation(line: 692, column: 7, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4091, file: !3, line: 691, column: 5)
!4115 = !DILocation(line: 693, column: 7, scope: !4114)
!4116 = !DILocation(line: 701, column: 20, scope: !4112)
!4117 = !DILocation(line: 701, column: 7, scope: !4060)
!4118 = !DILocation(line: 703, column: 16, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 703, column: 7)
!4120 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 702, column: 5)
!4121 = !DILocation(line: 703, column: 12, scope: !4119)
!4122 = !DILocation(line: 0, scope: !4119)
!4123 = !DILocation(line: 703, column: 38, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 703, column: 7)
!4125 = !DILocation(line: 703, column: 7, scope: !4119)
!4126 = !DILocation(line: 705, column: 8, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 705, column: 8)
!4128 = distinct !DILexicalBlock(scope: !4124, file: !3, line: 704, column: 2)
!4129 = !DILocation(line: 705, column: 10, scope: !4127)
!4130 = !DILocation(line: 716, column: 31, scope: !4127)
!4131 = !DILocation(line: 705, column: 13, scope: !4127)
!4132 = !DILocation(line: 705, column: 42, scope: !4127)
!4133 = !DILocation(line: 706, column: 8, scope: !4127)
!4134 = !DILocation(line: 706, column: 11, scope: !4127)
!4135 = !DILocation(line: 706, column: 50, scope: !4127)
!4136 = !DILocation(line: 705, column: 8, scope: !4128)
!4137 = !DILocation(line: 709, column: 8, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 707, column: 6)
!4139 = !DILocation(line: 712, column: 33, scope: !4138)
!4140 = !DILocation(line: 0, scope: !4138)
!4141 = !DILocation(line: 712, column: 8, scope: !4138)
!4142 = !DILocation(line: 714, column: 6, scope: !4138)
!4143 = !DILocation(line: 716, column: 6, scope: !4127)
!4144 = !DILocation(line: 703, column: 7, scope: !4124)
!4145 = distinct !{!4145, !4125, !4146}
!4146 = !DILocation(line: 718, column: 2, scope: !4119)
!4147 = !DILocation(line: 721, column: 14, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 721, column: 5)
!4149 = !DILocation(line: 0, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 726, column: 4)
!4151 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 725, column: 11)
!4152 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 723, column: 6)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 722, column: 7)
!4154 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 721, column: 5)
!4155 = !DILocation(line: 721, column: 10, scope: !4148)
!4156 = !DILocation(line: 0, scope: !4148)
!4157 = !DILocation(line: 721, column: 43, scope: !4154)
!4158 = !DILocation(line: 721, column: 5, scope: !4148)
!4159 = !DILocation(line: 723, column: 6, scope: !4152)
!4160 = !DILocation(line: 723, column: 13, scope: !4152)
!4161 = !DILocation(line: 723, column: 6, scope: !4153)
!4162 = !DILocation(line: 724, column: 29, scope: !4152)
!4163 = !DILocation(line: 724, column: 4, scope: !4152)
!4164 = !DILocation(line: 725, column: 18, scope: !4151)
!4165 = !DILocation(line: 725, column: 11, scope: !4152)
!4166 = !DILocation(line: 726, column: 13, scope: !4150)
!4167 = !DILocation(line: 726, column: 9, scope: !4150)
!4168 = !DILocation(line: 726, column: 35, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 726, column: 4)
!4170 = !DILocation(line: 726, column: 4, scope: !4150)
!4171 = !DILocation(line: 727, column: 31, scope: !4169)
!4172 = !DILocation(line: 727, column: 6, scope: !4169)
!4173 = !DILocation(line: 726, column: 4, scope: !4169)
!4174 = distinct !{!4174, !4170, !4175}
!4175 = !DILocation(line: 728, column: 45, scope: !4150)
!4176 = !DILocation(line: 721, column: 5, scope: !4154)
!4177 = distinct !{!4177, !4158, !4178}
!4178 = !DILocation(line: 729, column: 7, scope: !4148)
!4179 = !DILocation(line: 732, column: 7, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 732, column: 7)
!4181 = !DILocation(line: 732, column: 19, scope: !4180)
!4182 = !DILocation(line: 732, column: 7, scope: !4060)
!4183 = !DILocation(line: 737, column: 7, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 737, column: 7)
!4185 = !DILocation(line: 737, column: 14, scope: !4184)
!4186 = !DILocation(line: 737, column: 21, scope: !4184)
!4187 = !DILocation(line: 737, column: 24, scope: !4184)
!4188 = !DILocation(line: 737, column: 47, scope: !4184)
!4189 = !DILocation(line: 737, column: 7, scope: !4060)
!4190 = !DILocation(line: 738, column: 16, scope: !4184)
!4191 = !DILocation(line: 738, column: 5, scope: !4184)
!4192 = !DILocation(line: 742, column: 7, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 742, column: 7)
!4194 = !DILocation(line: 742, column: 7, scope: !4060)
!4195 = !DILocation(line: 743, column: 5, scope: !4193)
!4196 = !DILocation(line: 744, column: 1, scope: !4060)
!4197 = distinct !DISubprogram(name: "validate_replace_rtx", scope: !3, file: !3, line: 761, type: !4198, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4200)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!798, !806, !806, !806}
!4200 = !{!4201, !4202, !4203}
!4201 = !DILocalVariable(name: "from", arg: 1, scope: !4197, file: !3, line: 761, type: !806)
!4202 = !DILocalVariable(name: "to", arg: 2, scope: !4197, file: !3, line: 761, type: !806)
!4203 = !DILocalVariable(name: "insn", arg: 3, scope: !4197, file: !3, line: 761, type: !806)
!4204 = !DILocation(line: 0, scope: !4197)
!4205 = !DILocation(line: 763, column: 28, scope: !4197)
!4206 = !DILocation(line: 763, column: 3, scope: !4197)
!4207 = !DILocation(line: 764, column: 10, scope: !4197)
!4208 = !DILocation(line: 764, column: 3, scope: !4197)
!4209 = distinct !DISubprogram(name: "validate_replace_rtx_part", scope: !3, file: !3, line: 774, type: !4210, scopeLine: 775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4212)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{!798, !806, !806, !805, !806}
!4212 = !{!4213, !4214, !4215, !4216}
!4213 = !DILocalVariable(name: "from", arg: 1, scope: !4209, file: !3, line: 774, type: !806)
!4214 = !DILocalVariable(name: "to", arg: 2, scope: !4209, file: !3, line: 774, type: !806)
!4215 = !DILocalVariable(name: "where", arg: 3, scope: !4209, file: !3, line: 774, type: !805)
!4216 = !DILocalVariable(name: "insn", arg: 4, scope: !4209, file: !3, line: 774, type: !806)
!4217 = !DILocation(line: 0, scope: !4209)
!4218 = !DILocation(line: 776, column: 3, scope: !4209)
!4219 = !DILocation(line: 777, column: 10, scope: !4209)
!4220 = !DILocation(line: 777, column: 3, scope: !4209)
!4221 = distinct !DISubprogram(name: "validate_replace_rtx_part_nosimplify", scope: !3, file: !3, line: 782, type: !4210, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4222)
!4222 = !{!4223, !4224, !4225, !4226}
!4223 = !DILocalVariable(name: "from", arg: 1, scope: !4221, file: !3, line: 782, type: !806)
!4224 = !DILocalVariable(name: "to", arg: 2, scope: !4221, file: !3, line: 782, type: !806)
!4225 = !DILocalVariable(name: "where", arg: 3, scope: !4221, file: !3, line: 782, type: !805)
!4226 = !DILocalVariable(name: "insn", arg: 4, scope: !4221, file: !3, line: 783, type: !806)
!4227 = !DILocation(line: 0, scope: !4221)
!4228 = !DILocation(line: 785, column: 3, scope: !4221)
!4229 = !DILocation(line: 786, column: 10, scope: !4221)
!4230 = !DILocation(line: 786, column: 3, scope: !4221)
!4231 = distinct !DISubprogram(name: "validate_replace_rtx_group", scope: !3, file: !3, line: 794, type: !4232, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4234)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{null, !806, !806, !806}
!4234 = !{!4235, !4236, !4237, !4238}
!4235 = !DILocalVariable(name: "from", arg: 1, scope: !4231, file: !3, line: 794, type: !806)
!4236 = !DILocalVariable(name: "to", arg: 2, scope: !4231, file: !3, line: 794, type: !806)
!4237 = !DILocalVariable(name: "insn", arg: 3, scope: !4231, file: !3, line: 794, type: !806)
!4238 = !DILocalVariable(name: "note", scope: !4231, file: !3, line: 796, type: !806)
!4239 = !DILocation(line: 0, scope: !4231)
!4240 = !DILocation(line: 797, column: 28, scope: !4231)
!4241 = !DILocation(line: 797, column: 3, scope: !4231)
!4242 = !DILocation(line: 798, column: 15, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 798, column: 3)
!4244 = !DILocation(line: 798, column: 8, scope: !4243)
!4245 = !DILocation(line: 0, scope: !4243)
!4246 = !DILocation(line: 798, column: 3, scope: !4243)
!4247 = !DILocation(line: 799, column: 9, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 799, column: 9)
!4249 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 798, column: 3)
!4250 = !DILocation(line: 799, column: 30, scope: !4248)
!4251 = !DILocation(line: 800, column: 2, scope: !4248)
!4252 = !DILocation(line: 800, column: 26, scope: !4248)
!4253 = !DILocation(line: 799, column: 9, scope: !4249)
!4254 = !DILocation(line: 801, column: 32, scope: !4248)
!4255 = !DILocation(line: 801, column: 7, scope: !4248)
!4256 = !DILocation(line: 798, column: 46, scope: !4249)
!4257 = !DILocation(line: 798, column: 3, scope: !4249)
!4258 = distinct !{!4258, !4246, !4259}
!4259 = !DILocation(line: 801, column: 68, scope: !4243)
!4260 = !DILocation(line: 802, column: 1, scope: !4231)
!4261 = distinct !DISubprogram(name: "validate_replace_src_group", scope: !3, file: !3, line: 825, type: !4232, scopeLine: 826, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4262)
!4262 = !{!4263, !4264, !4265, !4266}
!4263 = !DILocalVariable(name: "from", arg: 1, scope: !4261, file: !3, line: 825, type: !806)
!4264 = !DILocalVariable(name: "to", arg: 2, scope: !4261, file: !3, line: 825, type: !806)
!4265 = !DILocalVariable(name: "insn", arg: 3, scope: !4261, file: !3, line: 825, type: !806)
!4266 = !DILocalVariable(name: "d", scope: !4261, file: !3, line: 827, type: !1892)
!4267 = !DILocation(line: 0, scope: !4261)
!4268 = !DILocation(line: 827, column: 3, scope: !4261)
!4269 = !DILocation(line: 829, column: 5, scope: !4261)
!4270 = !DILocation(line: 829, column: 10, scope: !4261)
!4271 = !DILocation(line: 830, column: 5, scope: !4261)
!4272 = !DILocation(line: 830, column: 8, scope: !4261)
!4273 = !DILocation(line: 831, column: 5, scope: !4261)
!4274 = !DILocation(line: 831, column: 10, scope: !4261)
!4275 = !DILocation(line: 832, column: 15, scope: !4261)
!4276 = !DILocation(line: 832, column: 3, scope: !4261)
!4277 = !DILocation(line: 833, column: 1, scope: !4261)
!4278 = distinct !DISubprogram(name: "validate_replace_src_1", scope: !3, file: !3, line: 813, type: !4279, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4281)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{null, !805, !802}
!4281 = !{!4282, !4283, !4284}
!4282 = !DILocalVariable(name: "x", arg: 1, scope: !4278, file: !3, line: 813, type: !805)
!4283 = !DILocalVariable(name: "data", arg: 2, scope: !4278, file: !3, line: 813, type: !802)
!4284 = !DILocalVariable(name: "d", scope: !4278, file: !3, line: 815, type: !1891)
!4285 = !DILocation(line: 0, scope: !4278)
!4286 = !DILocation(line: 818, column: 33, scope: !4278)
!4287 = !DILocation(line: 818, column: 42, scope: !4278)
!4288 = !DILocation(line: 818, column: 49, scope: !4278)
!4289 = !DILocation(line: 818, column: 3, scope: !4278)
!4290 = !DILocation(line: 819, column: 1, scope: !4278)
!4291 = distinct !DISubprogram(name: "validate_simplify_insn", scope: !3, file: !3, line: 840, type: !4292, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4294)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{!797, !806}
!4294 = !{!4295, !4296, !4297, !4298, !4299}
!4295 = !DILocalVariable(name: "insn", arg: 1, scope: !4291, file: !3, line: 840, type: !806)
!4296 = !DILocalVariable(name: "i", scope: !4291, file: !3, line: 842, type: !798)
!4297 = !DILocalVariable(name: "pat", scope: !4291, file: !3, line: 843, type: !806)
!4298 = !DILocalVariable(name: "newpat", scope: !4291, file: !3, line: 844, type: !806)
!4299 = !DILocalVariable(name: "s", scope: !4300, file: !3, line: 860, type: !806)
!4300 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 859, column: 7)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 858, column: 5)
!4302 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 858, column: 5)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !3, line: 857, column: 12)
!4304 = distinct !DILexicalBlock(scope: !4291, file: !3, line: 848, column: 7)
!4305 = !DILocation(line: 0, scope: !4291)
!4306 = !DILocation(line: 846, column: 9, scope: !4291)
!4307 = !DILocation(line: 848, column: 7, scope: !4304)
!4308 = !DILocation(line: 848, column: 22, scope: !4304)
!4309 = !DILocation(line: 848, column: 7, scope: !4291)
!4310 = !DILocation(line: 850, column: 30, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4304, file: !3, line: 849, column: 5)
!4312 = !DILocation(line: 850, column: 16, scope: !4311)
!4313 = !DILocation(line: 851, column: 11, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 851, column: 11)
!4315 = !DILocation(line: 851, column: 18, scope: !4314)
!4316 = !DILocation(line: 851, column: 35, scope: !4314)
!4317 = !DILocation(line: 851, column: 22, scope: !4314)
!4318 = !DILocation(line: 851, column: 11, scope: !4311)
!4319 = !DILocation(line: 852, column: 2, scope: !4314)
!4320 = !DILocation(line: 853, column: 30, scope: !4311)
!4321 = !DILocation(line: 853, column: 16, scope: !4311)
!4322 = !DILocation(line: 854, column: 11, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 854, column: 11)
!4324 = !DILocation(line: 854, column: 18, scope: !4323)
!4325 = !DILocation(line: 854, column: 35, scope: !4323)
!4326 = !DILocation(line: 854, column: 22, scope: !4323)
!4327 = !DILocation(line: 854, column: 11, scope: !4311)
!4328 = !DILocation(line: 855, column: 2, scope: !4323)
!4329 = !DILocation(line: 857, column: 27, scope: !4303)
!4330 = !DILocation(line: 857, column: 12, scope: !4304)
!4331 = !DILocation(line: 0, scope: !4301)
!4332 = !DILocation(line: 858, column: 5, scope: !4302)
!4333 = !DILocation(line: 0, scope: !4302)
!4334 = !DILocation(line: 858, column: 21, scope: !4301)
!4335 = !DILocation(line: 858, column: 19, scope: !4301)
!4336 = !DILocation(line: 860, column: 10, scope: !4300)
!4337 = !DILocation(line: 0, scope: !4300)
!4338 = !DILocation(line: 862, column: 6, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 862, column: 6)
!4340 = !DILocation(line: 862, column: 37, scope: !4339)
!4341 = !DILocation(line: 862, column: 6, scope: !4300)
!4342 = !DILocation(line: 864, column: 29, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 863, column: 4)
!4344 = !DILocation(line: 864, column: 15, scope: !4343)
!4345 = !DILocation(line: 865, column: 10, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 865, column: 10)
!4347 = !DILocation(line: 865, column: 17, scope: !4346)
!4348 = !DILocation(line: 865, column: 34, scope: !4346)
!4349 = !DILocation(line: 865, column: 21, scope: !4346)
!4350 = !DILocation(line: 865, column: 10, scope: !4343)
!4351 = !DILocation(line: 866, column: 8, scope: !4346)
!4352 = !DILocation(line: 867, column: 29, scope: !4343)
!4353 = !DILocation(line: 867, column: 15, scope: !4343)
!4354 = !DILocation(line: 868, column: 10, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 868, column: 10)
!4356 = !DILocation(line: 868, column: 17, scope: !4355)
!4357 = !DILocation(line: 868, column: 34, scope: !4355)
!4358 = !DILocation(line: 868, column: 21, scope: !4355)
!4359 = !DILocation(line: 868, column: 10, scope: !4343)
!4360 = !DILocation(line: 869, column: 8, scope: !4355)
!4361 = !DILocation(line: 858, column: 40, scope: !4301)
!4362 = !DILocation(line: 858, column: 5, scope: !4301)
!4363 = distinct !{!4363, !4332, !4364}
!4364 = !DILocation(line: 871, column: 7, scope: !4302)
!4365 = !DILocation(line: 872, column: 12, scope: !4291)
!4366 = !DILocation(line: 872, column: 35, scope: !4291)
!4367 = !DILocation(line: 872, column: 40, scope: !4291)
!4368 = !DILocation(line: 872, column: 44, scope: !4291)
!4369 = !DILocation(line: 872, column: 66, scope: !4291)
!4370 = !DILocation(line: 872, column: 3, scope: !4291)
!4371 = distinct !DISubprogram(name: "general_operand", scope: !3, file: !3, line: 912, type: !4372, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4374)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!798, !806, !5}
!4374 = !{!4375, !4376, !4377, !4378, !4381}
!4375 = !DILocalVariable(name: "op", arg: 1, scope: !4371, file: !3, line: 912, type: !806)
!4376 = !DILocalVariable(name: "mode", arg: 2, scope: !4371, file: !3, line: 912, type: !5)
!4377 = !DILocalVariable(name: "code", scope: !4371, file: !3, line: 914, type: !377)
!4378 = !DILocalVariable(name: "sub", scope: !4379, file: !3, line: 945, type: !806)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !3, line: 944, column: 5)
!4380 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 943, column: 7)
!4381 = !DILocalVariable(name: "y", scope: !4382, file: !3, line: 983, type: !806)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 982, column: 5)
!4383 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 981, column: 7)
!4384 = !DILocation(line: 0, scope: !4371)
!4385 = !DILocation(line: 914, column: 24, scope: !4371)
!4386 = !DILocation(line: 916, column: 12, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 916, column: 7)
!4388 = !DILocation(line: 916, column: 7, scope: !4371)
!4389 = !DILocation(line: 917, column: 12, scope: !4387)
!4390 = !DILocation(line: 917, column: 5, scope: !4387)
!4391 = !DILocation(line: 921, column: 7, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 921, column: 7)
!4393 = !DILocation(line: 921, column: 21, scope: !4392)
!4394 = !DILocation(line: 921, column: 41, scope: !4392)
!4395 = !DILocation(line: 921, column: 33, scope: !4392)
!4396 = !DILocation(line: 922, column: 10, scope: !4392)
!4397 = !DILocation(line: 922, column: 32, scope: !4392)
!4398 = !DILocation(line: 923, column: 7, scope: !4392)
!4399 = !DILocation(line: 923, column: 32, scope: !4392)
!4400 = !DILocation(line: 921, column: 7, scope: !4371)
!4401 = !DILocation(line: 926, column: 7, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 926, column: 7)
!4403 = !DILocation(line: 927, column: 7, scope: !4402)
!4404 = !DILocation(line: 928, column: 30, scope: !4402)
!4405 = !DILocation(line: 928, column: 10, scope: !4402)
!4406 = !DILocation(line: 928, column: 52, scope: !4402)
!4407 = !DILocation(line: 928, column: 49, scope: !4402)
!4408 = !DILocation(line: 926, column: 7, scope: !4371)
!4409 = !DILocation(line: 931, column: 7, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 931, column: 7)
!4411 = !DILocation(line: 931, column: 7, scope: !4371)
!4412 = !DILocation(line: 932, column: 28, scope: !4410)
!4413 = !DILocation(line: 932, column: 40, scope: !4410)
!4414 = !DILocation(line: 932, column: 57, scope: !4410)
!4415 = !DILocation(line: 933, column: 15, scope: !4410)
!4416 = !DILocation(line: 933, column: 7, scope: !4410)
!4417 = !DILocation(line: 934, column: 12, scope: !4410)
!4418 = !DILocation(line: 934, column: 21, scope: !4410)
!4419 = !DILocation(line: 934, column: 24, scope: !4410)
!4420 = !DILocation(line: 935, column: 6, scope: !4410)
!4421 = !DILocation(line: 935, column: 9, scope: !4410)
!4422 = !DILocation(line: 932, column: 5, scope: !4410)
!4423 = !DILocation(line: 940, column: 21, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 940, column: 7)
!4425 = !DILocation(line: 940, column: 7, scope: !4371)
!4426 = !DILocation(line: 943, column: 12, scope: !4380)
!4427 = !DILocation(line: 943, column: 7, scope: !4371)
!4428 = !DILocation(line: 945, column: 17, scope: !4379)
!4429 = !DILocation(line: 0, scope: !4379)
!4430 = !DILocation(line: 952, column: 12, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 952, column: 11)
!4432 = !DILocation(line: 952, column: 29, scope: !4431)
!4433 = !DILocation(line: 952, column: 32, scope: !4431)
!4434 = !DILocation(line: 953, column: 4, scope: !4431)
!4435 = !DILocation(line: 953, column: 7, scope: !4431)
!4436 = !DILocation(line: 953, column: 30, scope: !4431)
!4437 = !DILocation(line: 953, column: 28, scope: !4431)
!4438 = !DILocation(line: 952, column: 11, scope: !4379)
!4439 = !DILocation(line: 962, column: 29, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 962, column: 11)
!4441 = !DILocation(line: 962, column: 32, scope: !4440)
!4442 = !DILocation(line: 962, column: 49, scope: !4440)
!4443 = !DILocation(line: 963, column: 4, scope: !4440)
!4444 = !DILocation(line: 963, column: 7, scope: !4440)
!4445 = !DILocation(line: 962, column: 11, scope: !4379)
!4446 = !DILocation(line: 968, column: 11, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 968, column: 11)
!4448 = !DILocation(line: 969, column: 4, scope: !4447)
!4449 = !DILocation(line: 973, column: 14, scope: !4379)
!4450 = !DILocation(line: 969, column: 7, scope: !4447)
!4451 = !DILocation(line: 969, column: 39, scope: !4447)
!4452 = !DILocation(line: 969, column: 37, scope: !4447)
!4453 = !DILocation(line: 968, column: 11, scope: !4379)
!4454 = !DILocation(line: 974, column: 5, scope: !4380)
!4455 = !DILocation(line: 914, column: 17, scope: !4371)
!4456 = !DILocation(line: 976, column: 7, scope: !4371)
!4457 = !DILocation(line: 978, column: 13, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 976, column: 7)
!4459 = !DILocation(line: 978, column: 24, scope: !4458)
!4460 = !DILocation(line: 979, column: 6, scope: !4458)
!4461 = !DILocation(line: 979, column: 9, scope: !4458)
!4462 = !DILocation(line: 979, column: 38, scope: !4458)
!4463 = !DILocation(line: 978, column: 5, scope: !4458)
!4464 = !DILocation(line: 983, column: 15, scope: !4382)
!4465 = !DILocation(line: 0, scope: !4382)
!4466 = !DILocation(line: 985, column: 13, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 985, column: 11)
!4468 = !DILocation(line: 985, column: 25, scope: !4467)
!4469 = !DILocation(line: 0, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 989, column: 11)
!4471 = !DILocation(line: 989, column: 40, scope: !4470)
!4472 = !DILocation(line: 985, column: 28, scope: !4467)
!4473 = !DILocation(line: 985, column: 11, scope: !4382)
!4474 = !DILocation(line: 989, column: 58, scope: !4470)
!4475 = !DILocation(line: 989, column: 11, scope: !4470)
!4476 = !DILocation(line: 0, scope: !4383)
!4477 = !DILocation(line: 993, column: 3, scope: !4371)
!4478 = !DILocation(line: 994, column: 1, scope: !4371)
!4479 = distinct !DISubprogram(name: "rhs_regno", scope: !378, file: !378, line: 1051, type: !4480, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4482)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!7, !3186}
!4482 = !{!4483}
!4483 = !DILocalVariable(name: "x", arg: 1, scope: !4479, file: !378, line: 1051, type: !3186)
!4484 = !DILocation(line: 0, scope: !4479)
!4485 = !DILocation(line: 1053, column: 10, scope: !4479)
!4486 = !DILocation(line: 1053, column: 3, scope: !4479)
!4487 = distinct !DISubprogram(name: "address_operand", scope: !3, file: !3, line: 1003, type: !4372, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4488)
!4488 = !{!4489, !4490}
!4489 = !DILocalVariable(name: "op", arg: 1, scope: !4487, file: !3, line: 1003, type: !806)
!4490 = !DILocalVariable(name: "mode", arg: 2, scope: !4487, file: !3, line: 1003, type: !5)
!4491 = !DILocation(line: 0, scope: !4487)
!4492 = !DILocation(line: 1005, column: 10, scope: !4487)
!4493 = !DILocation(line: 1005, column: 3, scope: !4487)
!4494 = distinct !DISubprogram(name: "register_operand", scope: !3, file: !3, line: 1023, type: !4372, scopeLine: 1024, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4495)
!4495 = !{!4496, !4497, !4498}
!4496 = !DILocalVariable(name: "op", arg: 1, scope: !4494, file: !3, line: 1023, type: !806)
!4497 = !DILocalVariable(name: "mode", arg: 2, scope: !4494, file: !3, line: 1023, type: !5)
!4498 = !DILocalVariable(name: "sub", scope: !4499, file: !3, line: 1030, type: !806)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 1029, column: 5)
!4500 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 1028, column: 7)
!4501 = !DILocation(line: 0, scope: !4494)
!4502 = !DILocation(line: 1025, column: 7, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 1025, column: 7)
!4504 = !DILocation(line: 1025, column: 21, scope: !4503)
!4505 = !DILocation(line: 1025, column: 37, scope: !4503)
!4506 = !DILocation(line: 1025, column: 29, scope: !4503)
!4507 = !DILocation(line: 1028, column: 7, scope: !4500)
!4508 = !DILocation(line: 1028, column: 21, scope: !4500)
!4509 = !DILocation(line: 1028, column: 7, scope: !4494)
!4510 = !DILocation(line: 1030, column: 17, scope: !4499)
!4511 = !DILocation(line: 0, scope: !4499)
!4512 = !DILocation(line: 1038, column: 13, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 1038, column: 11)
!4514 = !DILocation(line: 1038, column: 30, scope: !4513)
!4515 = !DILocation(line: 0, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 1042, column: 11)
!4517 = !DILocation(line: 1042, column: 11, scope: !4516)
!4518 = !DILocation(line: 1038, column: 33, scope: !4513)
!4519 = !DILocation(line: 1038, column: 11, scope: !4499)
!4520 = !DILocation(line: 1039, column: 9, scope: !4513)
!4521 = !DILocation(line: 1039, column: 2, scope: !4513)
!4522 = !DILocation(line: 1043, column: 4, scope: !4516)
!4523 = !DILocation(line: 1043, column: 7, scope: !4516)
!4524 = !DILocation(line: 1043, column: 19, scope: !4516)
!4525 = !DILocation(line: 1044, column: 4, scope: !4516)
!4526 = !DILocation(line: 1044, column: 7, scope: !4516)
!4527 = !DILocation(line: 1045, column: 4, scope: !4516)
!4528 = !DILocation(line: 1045, column: 7, scope: !4516)
!4529 = !DILocation(line: 1045, column: 39, scope: !4516)
!4530 = !DILocation(line: 1046, column: 4, scope: !4516)
!4531 = !DILocation(line: 1046, column: 39, scope: !4516)
!4532 = !DILocation(line: 1042, column: 11, scope: !4499)
!4533 = !DILocation(line: 1052, column: 11, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 1052, column: 11)
!4535 = !DILocation(line: 1053, column: 4, scope: !4534)
!4536 = !DILocation(line: 1053, column: 7, scope: !4534)
!4537 = !DILocation(line: 1053, column: 39, scope: !4534)
!4538 = !DILocation(line: 1053, column: 37, scope: !4534)
!4539 = !DILocation(line: 1052, column: 11, scope: !4499)
!4540 = !DILocation(line: 1057, column: 5, scope: !4500)
!4541 = !DILocation(line: 1061, column: 11, scope: !4494)
!4542 = !DILocation(line: 1062, column: 4, scope: !4494)
!4543 = !DILocation(line: 1062, column: 8, scope: !4494)
!4544 = !DILocation(line: 1062, column: 19, scope: !4494)
!4545 = !DILocation(line: 1063, column: 8, scope: !4494)
!4546 = !DILocation(line: 1063, column: 11, scope: !4494)
!4547 = !DILocation(line: 1063, column: 40, scope: !4494)
!4548 = !DILocation(line: 1061, column: 3, scope: !4494)
!4549 = !DILocation(line: 1064, column: 1, scope: !4494)
!4550 = distinct !DISubprogram(name: "pmode_register_operand", scope: !3, file: !3, line: 1069, type: !4372, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4551)
!4551 = !{!4552, !4553}
!4552 = !DILocalVariable(name: "op", arg: 1, scope: !4550, file: !3, line: 1069, type: !806)
!4553 = !DILocalVariable(name: "mode", arg: 2, scope: !4550, file: !3, line: 1069, type: !5)
!4554 = !DILocation(line: 0, scope: !4550)
!4555 = !DILocation(line: 1071, column: 10, scope: !4550)
!4556 = !DILocation(line: 1071, column: 3, scope: !4550)
!4557 = distinct !DISubprogram(name: "scratch_operand", scope: !3, file: !3, line: 1078, type: !4372, scopeLine: 1079, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4558)
!4558 = !{!4559, !4560}
!4559 = !DILocalVariable(name: "op", arg: 1, scope: !4557, file: !3, line: 1078, type: !806)
!4560 = !DILocalVariable(name: "mode", arg: 2, scope: !4557, file: !3, line: 1078, type: !5)
!4561 = !DILocation(line: 0, scope: !4557)
!4562 = !DILocation(line: 1080, column: 7, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4557, file: !3, line: 1080, column: 7)
!4564 = !DILocation(line: 1080, column: 21, scope: !4563)
!4565 = !DILocation(line: 1080, column: 37, scope: !4563)
!4566 = !DILocation(line: 1080, column: 29, scope: !4563)
!4567 = !DILocation(line: 1083, column: 11, scope: !4557)
!4568 = !DILocation(line: 1083, column: 25, scope: !4557)
!4569 = !DILocation(line: 1084, column: 4, scope: !4557)
!4570 = !DILocation(line: 1084, column: 8, scope: !4557)
!4571 = !DILocation(line: 1085, column: 8, scope: !4557)
!4572 = !DILocation(line: 1085, column: 11, scope: !4557)
!4573 = !DILocation(line: 1085, column: 22, scope: !4557)
!4574 = !DILocation(line: 1083, column: 3, scope: !4557)
!4575 = !DILocation(line: 1086, column: 1, scope: !4557)
!4576 = distinct !DISubprogram(name: "immediate_operand", scope: !3, file: !3, line: 1094, type: !4372, scopeLine: 1095, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4577)
!4577 = !{!4578, !4579}
!4578 = !DILocalVariable(name: "op", arg: 1, scope: !4576, file: !3, line: 1094, type: !806)
!4579 = !DILocalVariable(name: "mode", arg: 2, scope: !4576, file: !3, line: 1094, type: !5)
!4580 = !DILocation(line: 0, scope: !4576)
!4581 = !DILocation(line: 1098, column: 7, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 1098, column: 7)
!4583 = !DILocation(line: 1098, column: 21, scope: !4582)
!4584 = !DILocation(line: 1098, column: 41, scope: !4582)
!4585 = !DILocation(line: 1098, column: 33, scope: !4582)
!4586 = !DILocation(line: 1099, column: 10, scope: !4582)
!4587 = !DILocation(line: 1099, column: 32, scope: !4582)
!4588 = !DILocation(line: 1100, column: 7, scope: !4582)
!4589 = !DILocation(line: 1100, column: 32, scope: !4582)
!4590 = !DILocation(line: 1098, column: 7, scope: !4576)
!4591 = !DILocation(line: 1103, column: 7, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 1103, column: 7)
!4593 = !DILocation(line: 1104, column: 7, scope: !4592)
!4594 = !DILocation(line: 1105, column: 30, scope: !4592)
!4595 = !DILocation(line: 1105, column: 10, scope: !4592)
!4596 = !DILocation(line: 1105, column: 52, scope: !4592)
!4597 = !DILocation(line: 1105, column: 49, scope: !4592)
!4598 = !DILocation(line: 1103, column: 7, scope: !4576)
!4599 = !DILocation(line: 1108, column: 11, scope: !4576)
!4600 = !DILocation(line: 1109, column: 4, scope: !4576)
!4601 = !DILocation(line: 1109, column: 8, scope: !4576)
!4602 = !DILocation(line: 1109, column: 22, scope: !4576)
!4603 = !DILocation(line: 1109, column: 38, scope: !4576)
!4604 = !DILocation(line: 1109, column: 30, scope: !4576)
!4605 = !DILocation(line: 1110, column: 11, scope: !4576)
!4606 = !DILocation(line: 1110, column: 25, scope: !4576)
!4607 = !DILocation(line: 1111, column: 4, scope: !4576)
!4608 = !DILocation(line: 1111, column: 10, scope: !4576)
!4609 = !DILocation(line: 1111, column: 19, scope: !4576)
!4610 = !DILocation(line: 1111, column: 22, scope: !4576)
!4611 = !DILocation(line: 1112, column: 4, scope: !4576)
!4612 = !DILocation(line: 1112, column: 7, scope: !4576)
!4613 = !DILocation(line: 1108, column: 3, scope: !4576)
!4614 = !DILocation(line: 1113, column: 1, scope: !4576)
!4615 = distinct !DISubprogram(name: "const_int_operand", scope: !3, file: !3, line: 1118, type: !4372, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4616)
!4616 = !{!4617, !4618}
!4617 = !DILocalVariable(name: "op", arg: 1, scope: !4615, file: !3, line: 1118, type: !806)
!4618 = !DILocalVariable(name: "mode", arg: 2, scope: !4615, file: !3, line: 1118, type: !5)
!4619 = !DILocation(line: 0, scope: !4615)
!4620 = !DILocation(line: 1120, column: 8, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 1120, column: 7)
!4622 = !DILocation(line: 1120, column: 7, scope: !4615)
!4623 = !DILocation(line: 1123, column: 12, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 1123, column: 7)
!4625 = !DILocation(line: 1124, column: 7, scope: !4624)
!4626 = !DILocation(line: 1124, column: 30, scope: !4624)
!4627 = !DILocation(line: 1124, column: 10, scope: !4624)
!4628 = !DILocation(line: 1124, column: 52, scope: !4624)
!4629 = !DILocation(line: 1124, column: 49, scope: !4624)
!4630 = !DILocation(line: 1123, column: 7, scope: !4615)
!4631 = !DILocation(line: 1127, column: 3, scope: !4615)
!4632 = !DILocation(line: 1128, column: 1, scope: !4615)
!4633 = distinct !DISubprogram(name: "const_double_operand", scope: !3, file: !3, line: 1134, type: !4372, scopeLine: 1135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4634)
!4634 = !{!4635, !4636}
!4635 = !DILocalVariable(name: "op", arg: 1, scope: !4633, file: !3, line: 1134, type: !806)
!4636 = !DILocalVariable(name: "mode", arg: 2, scope: !4633, file: !3, line: 1134, type: !5)
!4637 = !DILocation(line: 0, scope: !4633)
!4638 = !DILocation(line: 1138, column: 7, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 1138, column: 7)
!4640 = !DILocation(line: 1138, column: 21, scope: !4639)
!4641 = !DILocation(line: 1138, column: 41, scope: !4639)
!4642 = !DILocation(line: 1138, column: 33, scope: !4639)
!4643 = !DILocation(line: 1139, column: 10, scope: !4639)
!4644 = !DILocation(line: 1139, column: 32, scope: !4639)
!4645 = !DILocation(line: 1140, column: 7, scope: !4639)
!4646 = !DILocation(line: 1140, column: 32, scope: !4639)
!4647 = !DILocation(line: 1138, column: 7, scope: !4633)
!4648 = !DILocation(line: 1143, column: 12, scope: !4633)
!4649 = !DILocation(line: 1143, column: 26, scope: !4633)
!4650 = !DILocation(line: 1143, column: 42, scope: !4633)
!4651 = !DILocation(line: 1143, column: 45, scope: !4633)
!4652 = !DILocation(line: 1144, column: 4, scope: !4633)
!4653 = !DILocation(line: 1144, column: 13, scope: !4633)
!4654 = !DILocation(line: 1144, column: 25, scope: !4633)
!4655 = !DILocation(line: 1144, column: 28, scope: !4633)
!4656 = !DILocation(line: 1144, column: 42, scope: !4633)
!4657 = !DILocation(line: 1145, column: 8, scope: !4633)
!4658 = !DILocation(line: 1143, column: 3, scope: !4633)
!4659 = !DILocation(line: 1146, column: 1, scope: !4633)
!4660 = distinct !DISubprogram(name: "nonimmediate_operand", scope: !3, file: !3, line: 1151, type: !4372, scopeLine: 1152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4661)
!4661 = !{!4662, !4663}
!4662 = !DILocalVariable(name: "op", arg: 1, scope: !4660, file: !3, line: 1151, type: !806)
!4663 = !DILocalVariable(name: "mode", arg: 2, scope: !4660, file: !3, line: 1151, type: !5)
!4664 = !DILocation(line: 0, scope: !4660)
!4665 = !DILocation(line: 1153, column: 11, scope: !4660)
!4666 = !DILocation(line: 1153, column: 38, scope: !4660)
!4667 = !DILocation(line: 1153, column: 43, scope: !4660)
!4668 = !DILocation(line: 1153, column: 3, scope: !4660)
!4669 = distinct !DISubprogram(name: "nonmemory_operand", scope: !3, file: !3, line: 1159, type: !4372, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4670)
!4670 = !{!4671, !4672}
!4671 = !DILocalVariable(name: "op", arg: 1, scope: !4669, file: !3, line: 1159, type: !806)
!4672 = !DILocalVariable(name: "mode", arg: 2, scope: !4669, file: !3, line: 1159, type: !5)
!4673 = !DILocation(line: 0, scope: !4669)
!4674 = !DILocation(line: 1161, column: 7, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 1161, column: 7)
!4676 = !DILocation(line: 1161, column: 7, scope: !4669)
!4677 = !DILocation(line: 1165, column: 25, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 1165, column: 11)
!4679 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 1162, column: 5)
!4680 = !DILocation(line: 1165, column: 45, scope: !4678)
!4681 = !DILocation(line: 1165, column: 37, scope: !4678)
!4682 = !DILocation(line: 1166, column: 7, scope: !4678)
!4683 = !DILocation(line: 1166, column: 29, scope: !4678)
!4684 = !DILocation(line: 1167, column: 4, scope: !4678)
!4685 = !DILocation(line: 1167, column: 29, scope: !4678)
!4686 = !DILocation(line: 1165, column: 11, scope: !4679)
!4687 = !DILocation(line: 1170, column: 11, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 1170, column: 11)
!4689 = !DILocation(line: 1171, column: 4, scope: !4688)
!4690 = !DILocation(line: 1172, column: 27, scope: !4688)
!4691 = !DILocation(line: 1172, column: 7, scope: !4688)
!4692 = !DILocation(line: 1172, column: 49, scope: !4688)
!4693 = !DILocation(line: 1172, column: 46, scope: !4688)
!4694 = !DILocation(line: 1170, column: 11, scope: !4679)
!4695 = !DILocation(line: 1175, column: 16, scope: !4679)
!4696 = !DILocation(line: 1175, column: 30, scope: !4679)
!4697 = !DILocation(line: 1175, column: 42, scope: !4679)
!4698 = !DILocation(line: 1175, column: 45, scope: !4679)
!4699 = !DILocation(line: 1175, column: 59, scope: !4679)
!4700 = !DILocation(line: 1176, column: 17, scope: !4679)
!4701 = !DILocation(line: 1176, column: 9, scope: !4679)
!4702 = !DILocation(line: 1177, column: 14, scope: !4679)
!4703 = !DILocation(line: 1177, column: 23, scope: !4679)
!4704 = !DILocation(line: 1177, column: 26, scope: !4679)
!4705 = !DILocation(line: 1178, column: 8, scope: !4679)
!4706 = !DILocation(line: 1178, column: 11, scope: !4679)
!4707 = !DILocation(line: 1175, column: 7, scope: !4679)
!4708 = !DILocation(line: 1181, column: 21, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 1181, column: 7)
!4710 = !DILocation(line: 1181, column: 37, scope: !4709)
!4711 = !DILocation(line: 1181, column: 29, scope: !4709)
!4712 = !DILocation(line: 1184, column: 21, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 1184, column: 7)
!4714 = !DILocation(line: 1184, column: 7, scope: !4669)
!4715 = !DILocation(line: 1192, column: 13, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !3, line: 1192, column: 11)
!4717 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 1185, column: 5)
!4718 = !DILocation(line: 1192, column: 30, scope: !4716)
!4719 = !DILocation(line: 0, scope: !4717)
!4720 = !DILocation(line: 1194, column: 12, scope: !4717)
!4721 = !DILocation(line: 1192, column: 33, scope: !4716)
!4722 = !DILocation(line: 1192, column: 11, scope: !4717)
!4723 = !DILocation(line: 1193, column: 9, scope: !4716)
!4724 = !DILocation(line: 1193, column: 2, scope: !4716)
!4725 = !DILocation(line: 1199, column: 11, scope: !4669)
!4726 = !DILocation(line: 1195, column: 5, scope: !4717)
!4727 = !DILocation(line: 1200, column: 4, scope: !4669)
!4728 = !DILocation(line: 1200, column: 8, scope: !4669)
!4729 = !DILocation(line: 1200, column: 19, scope: !4669)
!4730 = !DILocation(line: 1201, column: 8, scope: !4669)
!4731 = !DILocation(line: 1201, column: 11, scope: !4669)
!4732 = !DILocation(line: 1201, column: 40, scope: !4669)
!4733 = !DILocation(line: 1199, column: 3, scope: !4669)
!4734 = !DILocation(line: 1202, column: 1, scope: !4669)
!4735 = distinct !DISubprogram(name: "push_operand", scope: !3, file: !3, line: 1211, type: !4372, scopeLine: 1212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4736)
!4736 = !{!4737, !4738, !4739}
!4737 = !DILocalVariable(name: "op", arg: 1, scope: !4735, file: !3, line: 1211, type: !806)
!4738 = !DILocalVariable(name: "mode", arg: 2, scope: !4735, file: !3, line: 1211, type: !5)
!4739 = !DILocalVariable(name: "rounded_size", scope: !4735, file: !3, line: 1213, type: !7)
!4740 = !DILocation(line: 0, scope: !4735)
!4741 = !DILocation(line: 1213, column: 31, scope: !4735)
!4742 = !DILocation(line: 1216, column: 18, scope: !4735)
!4743 = !DILocation(line: 1219, column: 8, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 1219, column: 7)
!4745 = !DILocation(line: 1219, column: 7, scope: !4735)
!4746 = !DILocation(line: 1222, column: 12, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 1222, column: 7)
!4748 = !DILocation(line: 1222, column: 24, scope: !4747)
!4749 = !DILocation(line: 1222, column: 27, scope: !4747)
!4750 = !DILocation(line: 1222, column: 41, scope: !4747)
!4751 = !DILocation(line: 1222, column: 7, scope: !4735)
!4752 = !DILocation(line: 1225, column: 8, scope: !4735)
!4753 = !DILocation(line: 1227, column: 20, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 1227, column: 7)
!4755 = !DILocation(line: 0, scope: !4754)
!4756 = !DILocation(line: 1227, column: 7, scope: !4735)
!4757 = !DILocation(line: 1229, column: 25, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 1229, column: 11)
!4759 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 1228, column: 5)
!4760 = !DILocation(line: 1229, column: 11, scope: !4759)
!4761 = !DILocation(line: 1247, column: 10, scope: !4735)
!4762 = !DILocation(line: 1234, column: 25, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 1234, column: 11)
!4764 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 1233, column: 5)
!4765 = !DILocation(line: 1235, column: 4, scope: !4763)
!4766 = !DILocation(line: 1235, column: 7, scope: !4763)
!4767 = !DILocation(line: 1235, column: 31, scope: !4763)
!4768 = !DILocation(line: 1236, column: 4, scope: !4763)
!4769 = !DILocation(line: 1236, column: 7, scope: !4763)
!4770 = !DILocation(line: 1236, column: 33, scope: !4763)
!4771 = !DILocation(line: 1236, column: 30, scope: !4763)
!4772 = !DILocation(line: 1237, column: 4, scope: !4763)
!4773 = !DILocation(line: 1237, column: 8, scope: !4763)
!4774 = !DILocation(line: 1239, column: 4, scope: !4763)
!4775 = !DILocation(line: 1239, column: 7, scope: !4763)
!4776 = !DILocation(line: 1239, column: 42, scope: !4763)
!4777 = !DILocation(line: 1239, column: 39, scope: !4763)
!4778 = !DILocation(line: 1234, column: 11, scope: !4764)
!4779 = !DILocation(line: 1247, column: 26, scope: !4735)
!4780 = !DILocation(line: 1247, column: 23, scope: !4735)
!4781 = !DILocation(line: 1247, column: 3, scope: !4735)
!4782 = !DILocation(line: 1248, column: 1, scope: !4735)
!4783 = distinct !DISubprogram(name: "pop_operand", scope: !3, file: !3, line: 1257, type: !4372, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4784)
!4784 = !{!4785, !4786}
!4785 = !DILocalVariable(name: "op", arg: 1, scope: !4783, file: !3, line: 1257, type: !806)
!4786 = !DILocalVariable(name: "mode", arg: 2, scope: !4783, file: !3, line: 1257, type: !5)
!4787 = !DILocation(line: 0, scope: !4783)
!4788 = !DILocation(line: 1259, column: 8, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4783, file: !3, line: 1259, column: 7)
!4790 = !DILocation(line: 1259, column: 7, scope: !4783)
!4791 = !DILocation(line: 1262, column: 12, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4783, file: !3, line: 1262, column: 7)
!4793 = !DILocation(line: 1262, column: 24, scope: !4792)
!4794 = !DILocation(line: 1262, column: 27, scope: !4792)
!4795 = !DILocation(line: 1262, column: 41, scope: !4792)
!4796 = !DILocation(line: 1262, column: 7, scope: !4783)
!4797 = !DILocation(line: 1265, column: 8, scope: !4783)
!4798 = !DILocation(line: 1267, column: 7, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4783, file: !3, line: 1267, column: 7)
!4800 = !DILocation(line: 1267, column: 21, scope: !4799)
!4801 = !DILocation(line: 1267, column: 7, scope: !4783)
!4802 = !DILocation(line: 1270, column: 10, scope: !4783)
!4803 = !DILocation(line: 1270, column: 26, scope: !4783)
!4804 = !DILocation(line: 1270, column: 23, scope: !4783)
!4805 = !DILocation(line: 1270, column: 3, scope: !4783)
!4806 = !DILocation(line: 1271, column: 1, scope: !4783)
!4807 = distinct !DISubprogram(name: "memory_operand", scope: !3, file: !3, line: 1299, type: !4372, scopeLine: 1300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4808)
!4808 = !{!4809, !4810, !4811}
!4809 = !DILocalVariable(name: "op", arg: 1, scope: !4807, file: !3, line: 1299, type: !806)
!4810 = !DILocalVariable(name: "mode", arg: 2, scope: !4807, file: !3, line: 1299, type: !5)
!4811 = !DILocalVariable(name: "inner", scope: !4807, file: !3, line: 1301, type: !806)
!4812 = !DILocation(line: 0, scope: !4807)
!4813 = !DILocation(line: 1303, column: 9, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 1303, column: 7)
!4815 = !DILocation(line: 1303, column: 7, scope: !4807)
!4816 = !DILocation(line: 1306, column: 12, scope: !4814)
!4817 = !DILocation(line: 1306, column: 23, scope: !4814)
!4818 = !DILocation(line: 1306, column: 26, scope: !4814)
!4819 = !DILocation(line: 1306, column: 5, scope: !4814)
!4820 = !DILocation(line: 1308, column: 12, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 1308, column: 7)
!4822 = !DILocation(line: 1308, column: 24, scope: !4821)
!4823 = !DILocation(line: 0, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 1312, column: 7)
!4825 = !DILocation(line: 1312, column: 7, scope: !4824)
!4826 = !DILocation(line: 1308, column: 27, scope: !4821)
!4827 = !DILocation(line: 1308, column: 41, scope: !4821)
!4828 = !DILocation(line: 1308, column: 7, scope: !4807)
!4829 = !DILocation(line: 1312, column: 24, scope: !4824)
!4830 = !DILocation(line: 1312, column: 7, scope: !4807)
!4831 = !DILocation(line: 1313, column: 13, scope: !4824)
!4832 = !DILocation(line: 1315, column: 11, scope: !4807)
!4833 = !DILocation(line: 1313, column: 5, scope: !4824)
!4834 = !DILocation(line: 1315, column: 25, scope: !4807)
!4835 = !DILocation(line: 1315, column: 28, scope: !4807)
!4836 = !DILocation(line: 1315, column: 3, scope: !4807)
!4837 = !DILocation(line: 1316, column: 1, scope: !4807)
!4838 = distinct !DISubprogram(name: "indirect_operand", scope: !3, file: !3, line: 1322, type: !4372, scopeLine: 1323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4839)
!4839 = !{!4840, !4841, !4842, !4845}
!4840 = !DILocalVariable(name: "op", arg: 1, scope: !4838, file: !3, line: 1322, type: !806)
!4841 = !DILocalVariable(name: "mode", arg: 2, scope: !4838, file: !3, line: 1322, type: !5)
!4842 = !DILocalVariable(name: "offset", scope: !4843, file: !3, line: 1328, type: !798)
!4843 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 1327, column: 5)
!4844 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 1325, column: 7)
!4845 = !DILocalVariable(name: "inner", scope: !4843, file: !3, line: 1329, type: !806)
!4846 = !DILocation(line: 0, scope: !4838)
!4847 = !DILocation(line: 1325, column: 9, scope: !4844)
!4848 = !DILocation(line: 1326, column: 7, scope: !4844)
!4849 = !DILocation(line: 1346, column: 11, scope: !4838)
!4850 = !DILocation(line: 1326, column: 10, scope: !4844)
!4851 = !DILocation(line: 1326, column: 24, scope: !4844)
!4852 = !DILocation(line: 1326, column: 34, scope: !4844)
!4853 = !DILocation(line: 1326, column: 37, scope: !4844)
!4854 = !DILocation(line: 1325, column: 7, scope: !4838)
!4855 = !DILocation(line: 1328, column: 20, scope: !4843)
!4856 = !DILocation(line: 0, scope: !4843)
!4857 = !DILocation(line: 1331, column: 16, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 1331, column: 11)
!4859 = !DILocation(line: 1331, column: 28, scope: !4858)
!4860 = !DILocation(line: 1331, column: 31, scope: !4858)
!4861 = !DILocation(line: 1331, column: 45, scope: !4858)
!4862 = !DILocation(line: 1331, column: 11, scope: !4843)
!4863 = !DILocation(line: 1339, column: 23, scope: !4843)
!4864 = !DILocation(line: 1339, column: 28, scope: !4843)
!4865 = !DILocation(line: 1339, column: 48, scope: !4843)
!4866 = !DILocation(line: 1339, column: 31, scope: !4843)
!4867 = !DILocation(line: 1340, column: 8, scope: !4843)
!4868 = !DILocation(line: 1340, column: 12, scope: !4843)
!4869 = !DILocation(line: 1340, column: 39, scope: !4843)
!4870 = !DILocation(line: 1341, column: 5, scope: !4843)
!4871 = !DILocation(line: 1341, column: 8, scope: !4843)
!4872 = !DILocation(line: 1342, column: 5, scope: !4843)
!4873 = !DILocation(line: 1342, column: 8, scope: !4843)
!4874 = !DILocation(line: 1342, column: 46, scope: !4843)
!4875 = !DILocation(line: 1342, column: 43, scope: !4843)
!4876 = !DILocation(line: 1343, column: 5, scope: !4843)
!4877 = !DILocation(line: 1343, column: 25, scope: !4843)
!4878 = !DILocation(line: 1343, column: 8, scope: !4843)
!4879 = !DILocation(line: 1339, column: 7, scope: !4843)
!4880 = !DILocation(line: 1347, column: 4, scope: !4838)
!4881 = !DILocation(line: 1347, column: 7, scope: !4838)
!4882 = !DILocation(line: 1348, column: 4, scope: !4838)
!4883 = !DILocation(line: 1348, column: 24, scope: !4838)
!4884 = !DILocation(line: 1348, column: 7, scope: !4838)
!4885 = !DILocation(line: 1346, column: 3, scope: !4838)
!4886 = !DILocation(line: 1349, column: 1, scope: !4838)
!4887 = distinct !DISubprogram(name: "ordered_comparison_operator", scope: !3, file: !3, line: 1355, type: !4372, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4888)
!4888 = !{!4889, !4890}
!4889 = !DILocalVariable(name: "op", arg: 1, scope: !4887, file: !3, line: 1355, type: !806)
!4890 = !DILocalVariable(name: "mode", arg: 2, scope: !4887, file: !3, line: 1355, type: !5)
!4891 = !DILocation(line: 0, scope: !4887)
!4892 = !DILocation(line: 1357, column: 12, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 1357, column: 7)
!4894 = !DILocation(line: 1357, column: 24, scope: !4893)
!4895 = !DILocation(line: 1359, column: 11, scope: !4887)
!4896 = !DILocation(line: 1357, column: 27, scope: !4893)
!4897 = !DILocation(line: 1357, column: 41, scope: !4893)
!4898 = !DILocation(line: 1357, column: 7, scope: !4887)
!4899 = !DILocation(line: 1359, column: 3, scope: !4887)
!4900 = !DILocation(line: 0, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 1360, column: 5)
!4902 = !DILocation(line: 1375, column: 1, scope: !4887)
!4903 = distinct !DISubprogram(name: "comparison_operator", scope: !3, file: !3, line: 1381, type: !4372, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4904)
!4904 = !{!4905, !4906}
!4905 = !DILocalVariable(name: "op", arg: 1, scope: !4903, file: !3, line: 1381, type: !806)
!4906 = !DILocalVariable(name: "mode", arg: 2, scope: !4903, file: !3, line: 1381, type: !5)
!4907 = !DILocation(line: 0, scope: !4903)
!4908 = !DILocation(line: 1383, column: 17, scope: !4903)
!4909 = !DILocation(line: 1383, column: 29, scope: !4903)
!4910 = !DILocation(line: 1384, column: 7, scope: !4903)
!4911 = !DILocation(line: 1383, column: 32, scope: !4903)
!4912 = !DILocation(line: 1383, column: 46, scope: !4903)
!4913 = !DILocation(line: 1384, column: 4, scope: !4903)
!4914 = !DILocation(line: 1383, column: 3, scope: !4903)
!4915 = distinct !DISubprogram(name: "extract_asm_operands", scope: !3, file: !3, line: 1390, type: !4916, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4918)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{!806, !806}
!4918 = !{!4919, !4920}
!4919 = !DILocalVariable(name: "body", arg: 1, scope: !4915, file: !3, line: 1390, type: !806)
!4920 = !DILocalVariable(name: "tmp", scope: !4915, file: !3, line: 1392, type: !806)
!4921 = !DILocation(line: 0, scope: !4915)
!4922 = !DILocation(line: 1393, column: 11, scope: !4915)
!4923 = !DILocation(line: 1393, column: 3, scope: !4915)
!4924 = !DILocation(line: 1400, column: 13, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 1394, column: 5)
!4926 = !DILocation(line: 1401, column: 11, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4925, file: !3, line: 1401, column: 11)
!4928 = !DILocation(line: 1401, column: 26, scope: !4927)
!4929 = !DILocation(line: 1401, column: 11, scope: !4925)
!4930 = !DILocation(line: 1406, column: 13, scope: !4925)
!4931 = !DILocation(line: 1407, column: 11, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4925, file: !3, line: 1407, column: 11)
!4933 = !DILocation(line: 1407, column: 26, scope: !4932)
!4934 = !DILocation(line: 1407, column: 11, scope: !4925)
!4935 = !DILocation(line: 1409, column: 26, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4925, file: !3, line: 1409, column: 11)
!4937 = !DILocation(line: 1409, column: 11, scope: !4925)
!4938 = !DILocation(line: 1411, column: 10, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 1410, column: 2)
!4940 = !DILocation(line: 1412, column: 8, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4939, file: !3, line: 1412, column: 8)
!4942 = !DILocation(line: 1412, column: 23, scope: !4941)
!4943 = !DILocation(line: 1412, column: 8, scope: !4939)
!4944 = !DILocation(line: 1420, column: 3, scope: !4915)
!4945 = !DILocation(line: 1421, column: 1, scope: !4915)
!4946 = distinct !DISubprogram(name: "offsettable_nonstrict_memref_p", scope: !3, file: !3, line: 1890, type: !2500, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4947)
!4947 = !{!4948}
!4948 = !DILocalVariable(name: "op", arg: 1, scope: !4946, file: !3, line: 1890, type: !806)
!4949 = !DILocation(line: 0, scope: !4946)
!4950 = !DILocation(line: 1892, column: 12, scope: !4946)
!4951 = !DILocation(line: 1893, column: 4, scope: !4946)
!4952 = !DILocation(line: 1893, column: 44, scope: !4946)
!4953 = !DILocation(line: 1893, column: 59, scope: !4946)
!4954 = !DILocation(line: 1894, column: 13, scope: !4946)
!4955 = !DILocation(line: 1893, column: 7, scope: !4946)
!4956 = !DILocation(line: 1892, column: 3, scope: !4946)
!4957 = distinct !DISubprogram(name: "insn_constraint_len", scope: !4958, file: !4958, line: 177, type: !4959, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4961)
!4958 = !DIFile(filename: "./tm-preds.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4959 = !DISubroutineType(types: !4960)
!4960 = !{!1312, !801, !803}
!4961 = !{!4962, !4963}
!4962 = !DILocalVariable(name: "fc", arg: 1, scope: !4957, file: !4958, line: 177, type: !801)
!4963 = !DILocalVariable(name: "str", arg: 2, scope: !4957, file: !4958, line: 177, type: !803)
!4964 = !DILocation(line: 0, scope: !4957)
!4965 = !DILocation(line: 179, column: 3, scope: !4957)
!4966 = !DILocation(line: 185, column: 1, scope: !4957)
!4967 = distinct !DISubprogram(name: "find_constant_term_loc", scope: !3, file: !3, line: 1826, type: !4968, scopeLine: 1827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4970)
!4968 = !DISubroutineType(types: !4969)
!4969 = !{!805, !805}
!4970 = !{!4971, !4972, !4973}
!4971 = !DILocalVariable(name: "p", arg: 1, scope: !4967, file: !3, line: 1826, type: !805)
!4972 = !DILocalVariable(name: "tem", scope: !4967, file: !3, line: 1828, type: !805)
!4973 = !DILocalVariable(name: "code", scope: !4967, file: !3, line: 1829, type: !377)
!4974 = !DILocation(line: 0, scope: !4967)
!4975 = !DILocation(line: 1829, column: 24, scope: !4967)
!4976 = !DILocation(line: 1833, column: 25, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1833, column: 7)
!4978 = !DILocation(line: 1839, column: 7, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1839, column: 7)
!4980 = !DILocation(line: 1839, column: 21, scope: !4979)
!4981 = !DILocation(line: 1839, column: 7, scope: !4967)
!4982 = !DILocation(line: 1844, column: 7, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1844, column: 7)
!4984 = !DILocation(line: 1844, column: 20, scope: !4983)
!4985 = !DILocation(line: 1844, column: 23, scope: !4983)
!4986 = !DILocation(line: 1845, column: 7, scope: !4983)
!4987 = !DILocation(line: 1845, column: 10, scope: !4983)
!4988 = !DILocation(line: 1845, column: 23, scope: !4983)
!4989 = !DILocation(line: 1845, column: 26, scope: !4983)
!4990 = !DILocation(line: 1844, column: 7, scope: !4967)
!4991 = !DILocation(line: 1850, column: 7, scope: !4967)
!4992 = !DILocation(line: 1852, column: 13, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 1851, column: 5)
!4994 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1850, column: 7)
!4995 = !DILocation(line: 1853, column: 15, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 1853, column: 11)
!4997 = !DILocation(line: 1853, column: 11, scope: !4993)
!4998 = !DILocation(line: 1857, column: 7, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1857, column: 7)
!5000 = !DILocation(line: 1857, column: 20, scope: !4999)
!5001 = !DILocation(line: 1857, column: 7, scope: !4967)
!5002 = !DILocation(line: 1859, column: 38, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 1858, column: 5)
!5004 = !DILocation(line: 1859, column: 13, scope: !5003)
!5005 = !DILocation(line: 1860, column: 15, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 1860, column: 11)
!5007 = !DILocation(line: 1860, column: 11, scope: !5003)
!5008 = !DILocation(line: 1864, column: 3, scope: !4967)
!5009 = !DILocation(line: 1865, column: 1, scope: !4967)
!5010 = distinct !DISubprogram(name: "offsettable_memref_p", scope: !3, file: !3, line: 1879, type: !2500, scopeLine: 1880, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5011)
!5011 = !{!5012}
!5012 = !DILocalVariable(name: "op", arg: 1, scope: !5010, file: !3, line: 1879, type: !806)
!5013 = !DILocation(line: 0, scope: !5010)
!5014 = !DILocation(line: 1881, column: 12, scope: !5010)
!5015 = !DILocation(line: 1882, column: 4, scope: !5010)
!5016 = !DILocation(line: 1882, column: 44, scope: !5010)
!5017 = !DILocation(line: 1882, column: 59, scope: !5010)
!5018 = !DILocation(line: 1883, column: 13, scope: !5010)
!5019 = !DILocation(line: 1882, column: 7, scope: !5010)
!5020 = !DILocation(line: 1881, column: 3, scope: !5010)
!5021 = distinct !DISubprogram(name: "offsettable_address_addr_space_p", scope: !3, file: !3, line: 1908, type: !5022, scopeLine: 1910, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5024)
!5022 = !DISubroutineType(types: !5023)
!5023 = !{!798, !798, !5, !806, !3941}
!5024 = !{!5025, !5026, !5027, !5028, !5029, !5030, !5031, !5032, !5033, !5035, !5036}
!5025 = !DILocalVariable(name: "strictp", arg: 1, scope: !5021, file: !3, line: 1908, type: !798)
!5026 = !DILocalVariable(name: "mode", arg: 2, scope: !5021, file: !3, line: 1908, type: !5)
!5027 = !DILocalVariable(name: "y", arg: 3, scope: !5021, file: !3, line: 1908, type: !806)
!5028 = !DILocalVariable(name: "as", arg: 4, scope: !5021, file: !3, line: 1909, type: !3941)
!5029 = !DILocalVariable(name: "ycode", scope: !5021, file: !3, line: 1911, type: !377)
!5030 = !DILocalVariable(name: "z", scope: !5021, file: !3, line: 1912, type: !806)
!5031 = !DILocalVariable(name: "y1", scope: !5021, file: !3, line: 1913, type: !806)
!5032 = !DILocalVariable(name: "y2", scope: !5021, file: !3, line: 1914, type: !805)
!5033 = !DILocalVariable(name: "addressp", scope: !5021, file: !3, line: 1915, type: !5034)
!5034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!5035 = !DILocalVariable(name: "mode_sz", scope: !5021, file: !3, line: 1918, type: !7)
!5036 = !DILocalVariable(name: "good", scope: !5037, file: !3, line: 1941, type: !798)
!5037 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 1940, column: 5)
!5038 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 1939, column: 7)
!5039 = !DILocation(line: 0, scope: !5021)
!5040 = !DILocation(line: 1911, column: 25, scope: !5021)
!5041 = !DILocation(line: 1913, column: 3, scope: !5021)
!5042 = !DILocation(line: 1913, column: 7, scope: !5021)
!5043 = !DILocation(line: 1916, column: 6, scope: !5021)
!5044 = !DILocation(line: 1918, column: 26, scope: !5021)
!5045 = !DILocation(line: 1920, column: 7, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 1920, column: 7)
!5047 = !DILocation(line: 1920, column: 7, scope: !5021)
!5048 = !DILocation(line: 1926, column: 7, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 1926, column: 7)
!5050 = !DILocation(line: 1926, column: 7, scope: !5021)
!5051 = !DILocation(line: 1933, column: 15, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 1933, column: 7)
!5053 = !DILocation(line: 1933, column: 7, scope: !5021)
!5054 = !DILocation(line: 1934, column: 15, scope: !5052)
!5055 = !DILocation(line: 1934, column: 33, scope: !5052)
!5056 = !DILocation(line: 1934, column: 5, scope: !5052)
!5057 = !DILocation(line: 1939, column: 14, scope: !5038)
!5058 = !DILocation(line: 1939, column: 23, scope: !5038)
!5059 = !DILocation(line: 1939, column: 32, scope: !5038)
!5060 = !DILocation(line: 1939, column: 30, scope: !5038)
!5061 = !DILocation(line: 1939, column: 7, scope: !5021)
!5062 = !DILocation(line: 1943, column: 12, scope: !5037)
!5063 = !DILocation(line: 1943, column: 10, scope: !5037)
!5064 = !DILocation(line: 1944, column: 28, scope: !5037)
!5065 = !DILocation(line: 1944, column: 41, scope: !5037)
!5066 = !DILocation(line: 1944, column: 33, scope: !5037)
!5067 = !DILocation(line: 1944, column: 13, scope: !5037)
!5068 = !DILocation(line: 1944, column: 11, scope: !5037)
!5069 = !DILocation(line: 1947, column: 14, scope: !5037)
!5070 = !DILocation(line: 0, scope: !5037)
!5071 = !DILocation(line: 1950, column: 13, scope: !5037)
!5072 = !DILocation(line: 1950, column: 11, scope: !5037)
!5073 = !DILocation(line: 1954, column: 7, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 1954, column: 7)
!5075 = !DILocation(line: 1954, column: 29, scope: !5074)
!5076 = !DILocation(line: 1954, column: 7, scope: !5021)
!5077 = !DILocation(line: 1962, column: 7, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 1962, column: 7)
!5079 = !DILocation(line: 1962, column: 20, scope: !5078)
!5080 = !DILocation(line: 1963, column: 15, scope: !5078)
!5081 = !DILocation(line: 1963, column: 7, scope: !5078)
!5082 = !DILocation(line: 1964, column: 21, scope: !5078)
!5083 = !DILocation(line: 1964, column: 47, scope: !5078)
!5084 = !DILocation(line: 1964, column: 18, scope: !5078)
!5085 = !DILocation(line: 1962, column: 7, scope: !5021)
!5086 = !DILocation(line: 1965, column: 9, scope: !5078)
!5087 = !DILocation(line: 1965, column: 5, scope: !5078)
!5088 = !DILocation(line: 1968, column: 35, scope: !5078)
!5089 = !DILocation(line: 1968, column: 27, scope: !5078)
!5090 = !DILocation(line: 1968, column: 9, scope: !5078)
!5091 = !DILocation(line: 0, scope: !5078)
!5092 = !DILocation(line: 1972, column: 10, scope: !5021)
!5093 = !DILocation(line: 1972, column: 3, scope: !5021)
!5094 = !DILocation(line: 1973, column: 1, scope: !5021)
!5095 = distinct !DISubprogram(name: "mode_dependent_address_p", scope: !3, file: !3, line: 1982, type: !2500, scopeLine: 1983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5096)
!5096 = !{!5097, !5098}
!5097 = !DILocalVariable(name: "addr", arg: 1, scope: !5095, file: !3, line: 1982, type: !806)
!5098 = !DILabel(scope: !5095, name: "win", file: !3, line: 1996)
!5099 = !DILocation(line: 0, scope: !5095)
!5100 = !DILocation(line: 1987, column: 7, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 1987, column: 7)
!5102 = !DILocation(line: 1987, column: 23, scope: !5101)
!5103 = !DILocation(line: 1988, column: 7, scope: !5101)
!5104 = !DILocation(line: 1988, column: 26, scope: !5101)
!5105 = !DILocation(line: 1989, column: 7, scope: !5101)
!5106 = !DILocation(line: 1989, column: 26, scope: !5101)
!5107 = !DILocation(line: 1990, column: 7, scope: !5101)
!5108 = !DILocation(line: 1990, column: 26, scope: !5101)
!5109 = !DILocation(line: 1987, column: 7, scope: !5095)
!5110 = !DILocation(line: 1998, column: 1, scope: !5095)
!5111 = distinct !DISubprogram(name: "extract_insn_cached", scope: !3, file: !3, line: 2005, type: !2553, scopeLine: 2006, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5112)
!5112 = !{!5113}
!5113 = !DILocalVariable(name: "insn", arg: 1, scope: !5111, file: !3, line: 2005, type: !806)
!5114 = !DILocation(line: 0, scope: !5111)
!5115 = !DILocation(line: 2007, column: 18, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 2007, column: 7)
!5117 = !DILocation(line: 2007, column: 23, scope: !5116)
!5118 = !DILocation(line: 2007, column: 31, scope: !5116)
!5119 = !DILocation(line: 2007, column: 34, scope: !5116)
!5120 = !DILocation(line: 2007, column: 51, scope: !5116)
!5121 = !DILocation(line: 2007, column: 7, scope: !5111)
!5122 = !DILocation(line: 2009, column: 3, scope: !5111)
!5123 = !DILocation(line: 2010, column: 19, scope: !5111)
!5124 = !DILocation(line: 2011, column: 1, scope: !5111)
!5125 = distinct !DISubprogram(name: "extract_constrain_insn_cached", scope: !3, file: !3, line: 2016, type: !2553, scopeLine: 2017, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5126)
!5126 = !{!5127}
!5127 = !DILocalVariable(name: "insn", arg: 1, scope: !5125, file: !3, line: 2016, type: !806)
!5128 = !DILocation(line: 0, scope: !5125)
!5129 = !DILocation(line: 2018, column: 3, scope: !5125)
!5130 = !DILocation(line: 2019, column: 7, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 2019, column: 7)
!5132 = !DILocation(line: 2019, column: 25, scope: !5131)
!5133 = !DILocation(line: 2020, column: 7, scope: !5131)
!5134 = !DILocation(line: 2020, column: 31, scope: !5131)
!5135 = !DILocation(line: 2020, column: 11, scope: !5131)
!5136 = !DILocation(line: 2019, column: 7, scope: !5125)
!5137 = !DILocation(line: 2021, column: 5, scope: !5131)
!5138 = !DILocation(line: 2022, column: 1, scope: !5125)
!5139 = distinct !DISubprogram(name: "constrain_operands_cached", scope: !3, file: !3, line: 2026, type: !2140, scopeLine: 2027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5140)
!5140 = !{!5141}
!5141 = !DILocalVariable(name: "strict", arg: 1, scope: !5139, file: !3, line: 2026, type: !798)
!5142 = !DILocation(line: 0, scope: !5139)
!5143 = !DILocation(line: 2028, column: 7, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 2028, column: 7)
!5145 = !DILocation(line: 2028, column: 25, scope: !5144)
!5146 = !DILocation(line: 2028, column: 7, scope: !5139)
!5147 = !DILocation(line: 2029, column: 12, scope: !5144)
!5148 = !DILocation(line: 2029, column: 5, scope: !5144)
!5149 = !DILocation(line: 0, scope: !5144)
!5150 = !DILocation(line: 2032, column: 1, scope: !5139)
!5151 = distinct !DISubprogram(name: "recog_memoized", scope: !790, file: !790, line: 150, type: !2500, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5152)
!5152 = !{!5153}
!5153 = !DILocalVariable(name: "insn", arg: 1, scope: !5151, file: !790, line: 150, type: !806)
!5154 = !DILocation(line: 0, scope: !5151)
!5155 = !DILocation(line: 152, column: 7, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5151, file: !790, line: 152, column: 7)
!5157 = !DILocation(line: 152, column: 24, scope: !5156)
!5158 = !DILocation(line: 152, column: 7, scope: !5151)
!5159 = !DILocation(line: 153, column: 31, scope: !5156)
!5160 = !DILocation(line: 153, column: 24, scope: !5156)
!5161 = !DILocation(line: 153, column: 22, scope: !5156)
!5162 = !DILocation(line: 153, column: 5, scope: !5156)
!5163 = !DILocation(line: 154, column: 10, scope: !5151)
!5164 = !DILocation(line: 154, column: 3, scope: !5151)
!5165 = distinct !DISubprogram(name: "get_attr_enabled", scope: !3, file: !3, line: 66, type: !4292, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5166)
!5166 = !{!5167}
!5167 = !DILocalVariable(name: "insn", arg: 1, scope: !5165, file: !3, line: 66, type: !806)
!5168 = !DILocation(line: 0, scope: !5165)
!5169 = !DILocation(line: 68, column: 3, scope: !5165)
!5170 = distinct !DISubprogram(name: "preprocess_constraints", scope: !3, file: !3, line: 2149, type: !2492, scopeLine: 2150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5171)
!5171 = !{!5172, !5173, !5177, !5179, !5180, !5187}
!5172 = !DILocalVariable(name: "i", scope: !5170, file: !3, line: 2151, type: !798)
!5173 = !DILocalVariable(name: "j", scope: !5174, file: !3, line: 2159, type: !798)
!5174 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 2158, column: 5)
!5175 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 2157, column: 3)
!5176 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 2157, column: 3)
!5177 = !DILocalVariable(name: "op_alt", scope: !5174, file: !3, line: 2160, type: !5178)
!5178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!5179 = !DILocalVariable(name: "p", scope: !5174, file: !3, line: 2161, type: !803)
!5180 = !DILocalVariable(name: "c", scope: !5181, file: !3, line: 2186, type: !801)
!5181 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 2185, column: 6)
!5182 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 2184, column: 4)
!5183 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 2184, column: 4)
!5184 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 2166, column: 2)
!5185 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 2165, column: 7)
!5186 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 2165, column: 7)
!5187 = !DILocalVariable(name: "end", scope: !5188, file: !3, line: 2220, type: !800)
!5188 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 2219, column: 5)
!5189 = distinct !DILexicalBlock(scope: !5181, file: !3, line: 2198, column: 3)
!5190 = !DILocation(line: 0, scope: !5170)
!5191 = !DILocation(line: 2153, column: 8, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 2153, column: 3)
!5193 = !DILocation(line: 0, scope: !5192)
!5194 = !DILocation(line: 2153, column: 30, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 2153, column: 3)
!5196 = !DILocation(line: 2153, column: 17, scope: !5195)
!5197 = !DILocation(line: 2153, column: 3, scope: !5192)
!5198 = !DILocation(line: 0, scope: !5188)
!5199 = !DILocation(line: 2157, column: 3, scope: !5176)
!5200 = !DILocation(line: 2154, column: 13, scope: !5195)
!5201 = !DILocation(line: 2154, column: 45, scope: !5195)
!5202 = !DILocation(line: 2154, column: 34, scope: !5195)
!5203 = !DILocation(line: 2155, column: 6, scope: !5195)
!5204 = !DILocation(line: 2154, column: 5, scope: !5195)
!5205 = !DILocation(line: 2153, column: 43, scope: !5195)
!5206 = !DILocation(line: 2153, column: 3, scope: !5195)
!5207 = distinct !{!5207, !5197, !5208}
!5208 = !DILocation(line: 2155, column: 44, scope: !5192)
!5209 = !DILocation(line: 2157, column: 30, scope: !5175)
!5210 = !DILocation(line: 2157, column: 17, scope: !5175)
!5211 = !DILocation(line: 2161, column: 23, scope: !5174)
!5212 = !DILocation(line: 0, scope: !5174)
!5213 = !DILocation(line: 2165, column: 12, scope: !5186)
!5214 = !DILocation(line: 2161, column: 19, scope: !5174)
!5215 = !DILocation(line: 2165, column: 34, scope: !5185)
!5216 = !DILocation(line: 2165, column: 21, scope: !5185)
!5217 = !DILocation(line: 2165, column: 7, scope: !5186)
!5218 = !DILocation(line: 2167, column: 14, scope: !5184)
!5219 = !DILocation(line: 2167, column: 17, scope: !5184)
!5220 = !DILocation(line: 2168, column: 14, scope: !5184)
!5221 = !DILocation(line: 2168, column: 25, scope: !5184)
!5222 = !DILocation(line: 2169, column: 14, scope: !5184)
!5223 = !DILocation(line: 2169, column: 22, scope: !5184)
!5224 = !DILocation(line: 2170, column: 14, scope: !5184)
!5225 = !DILocation(line: 2170, column: 22, scope: !5184)
!5226 = !DILocation(line: 2172, column: 9, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 2172, column: 8)
!5228 = !DILocation(line: 2172, column: 8, scope: !5184)
!5229 = !DILocation(line: 2174, column: 12, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 2173, column: 6)
!5231 = !DILocation(line: 2175, column: 8, scope: !5230)
!5232 = !DILocation(line: 2178, column: 8, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 2178, column: 8)
!5234 = !DILocation(line: 2178, column: 11, scope: !5233)
!5235 = !DILocation(line: 2178, column: 19, scope: !5233)
!5236 = !DILocation(line: 2178, column: 25, scope: !5233)
!5237 = !DILocation(line: 2178, column: 8, scope: !5184)
!5238 = !DILocation(line: 0, scope: !5189)
!5239 = !DILocation(line: 2187, column: 12, scope: !5181)
!5240 = !DILocation(line: 2180, column: 18, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 2179, column: 6)
!5242 = !DILocation(line: 2180, column: 30, scope: !5241)
!5243 = !DILocation(line: 2181, column: 8, scope: !5241)
!5244 = !DILocation(line: 2186, column: 17, scope: !5181)
!5245 = !DILocation(line: 0, scope: !5181)
!5246 = !DILocation(line: 2187, column: 14, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5181, file: !3, line: 2187, column: 12)
!5248 = !DILocation(line: 2188, column: 3, scope: !5247)
!5249 = !DILocation(line: 2189, column: 10, scope: !5247)
!5250 = !DILocation(line: 2189, column: 9, scope: !5247)
!5251 = !DILocation(line: 2190, column: 12, scope: !5247)
!5252 = !DILocation(line: 2190, column: 19, scope: !5247)
!5253 = !DILocation(line: 2189, column: 5, scope: !5247)
!5254 = distinct !{!5254, !5248, !5255}
!5255 = !DILocation(line: 2190, column: 31, scope: !5247)
!5256 = !DILocation(line: 2191, column: 14, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5181, file: !3, line: 2191, column: 12)
!5258 = !DILocation(line: 2191, column: 26, scope: !5257)
!5259 = !DILocation(line: 2191, column: 21, scope: !5257)
!5260 = !DILocation(line: 2193, column: 6, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5257, file: !3, line: 2192, column: 3)
!5262 = !DILocation(line: 2194, column: 5, scope: !5261)
!5263 = !DILocation(line: 2197, column: 16, scope: !5181)
!5264 = !DILocation(line: 2197, column: 8, scope: !5181)
!5265 = !DILocation(line: 2208, column: 22, scope: !5189)
!5266 = !DILocation(line: 2209, column: 5, scope: !5189)
!5267 = !DILocation(line: 2211, column: 22, scope: !5189)
!5268 = !DILocation(line: 2212, column: 5, scope: !5189)
!5269 = !DILocation(line: 2214, column: 28, scope: !5189)
!5270 = !DILocation(line: 2215, column: 5, scope: !5189)
!5271 = !DILocation(line: 2220, column: 7, scope: !5188)
!5272 = !DILocation(line: 2221, column: 27, scope: !5188)
!5273 = !DILocation(line: 2221, column: 25, scope: !5188)
!5274 = !DILocation(line: 2222, column: 7, scope: !5188)
!5275 = !DILocation(line: 2222, column: 42, scope: !5188)
!5276 = !DILocation(line: 2222, column: 50, scope: !5188)
!5277 = !DILocation(line: 2223, column: 11, scope: !5188)
!5278 = !DILocation(line: 2224, column: 5, scope: !5189)
!5279 = !DILocation(line: 2225, column: 5, scope: !5189)
!5280 = distinct !{!5280, !5281, !5282}
!5281 = !DILocation(line: 2184, column: 4, scope: !5183)
!5282 = !DILocation(line: 2282, column: 6, scope: !5183)
!5283 = !DILocation(line: 2228, column: 25, scope: !5189)
!5284 = !DILocation(line: 2229, column: 5, scope: !5189)
!5285 = !DILocation(line: 2231, column: 25, scope: !5189)
!5286 = !DILocation(line: 2232, column: 5, scope: !5189)
!5287 = !DILocation(line: 2234, column: 25, scope: !5189)
!5288 = !DILocation(line: 2235, column: 5, scope: !5189)
!5289 = !DILocation(line: 2237, column: 28, scope: !5189)
!5290 = !DILocation(line: 2238, column: 5, scope: !5189)
!5291 = !DILocation(line: 2240, column: 25, scope: !5189)
!5292 = !DILocation(line: 2241, column: 5, scope: !5189)
!5293 = !DILocation(line: 2243, column: 27, scope: !5189)
!5294 = !DILocation(line: 2244, column: 5, scope: !5189)
!5295 = !DILocation(line: 2247, column: 26, scope: !5189)
!5296 = !DILocation(line: 2248, column: 55, scope: !5189)
!5297 = !DILocation(line: 2248, column: 20, scope: !5189)
!5298 = !DILocation(line: 2249, column: 16, scope: !5189)
!5299 = !DILocation(line: 2248, column: 18, scope: !5189)
!5300 = !DILocation(line: 2250, column: 5, scope: !5189)
!5301 = !DILocation(line: 2255, column: 41, scope: !5189)
!5302 = !DILocation(line: 2255, column: 6, scope: !5189)
!5303 = !DILocation(line: 2254, column: 18, scope: !5189)
!5304 = !DILocation(line: 2256, column: 5, scope: !5189)
!5305 = !DILocation(line: 2277, column: 27, scope: !5189)
!5306 = !DILocation(line: 2276, column: 10, scope: !5189)
!5307 = !DILocation(line: 2278, column: 17, scope: !5189)
!5308 = !DILocation(line: 2276, column: 7, scope: !5189)
!5309 = !DILocation(line: 2279, column: 5, scope: !5189)
!5310 = !DILocation(line: 2281, column: 13, scope: !5181)
!5311 = !DILocation(line: 2281, column: 10, scope: !5181)
!5312 = !DILocation(line: 2282, column: 6, scope: !5182)
!5313 = !DILocation(line: 2165, column: 51, scope: !5185)
!5314 = !DILocation(line: 2165, column: 7, scope: !5185)
!5315 = distinct !{!5315, !5217, !5316}
!5316 = !DILocation(line: 2283, column: 2, scope: !5186)
!5317 = !DILocation(line: 2157, column: 43, scope: !5175)
!5318 = !DILocation(line: 2157, column: 3, scope: !5175)
!5319 = distinct !{!5319, !5199, !5320}
!5320 = !DILocation(line: 2284, column: 5, scope: !5176)
!5321 = !DILocation(line: 2285, column: 1, scope: !5170)
!5322 = distinct !DISubprogram(name: "skip_alternative", scope: !790, file: !790, line: 161, type: !5323, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5325)
!5323 = !DISubroutineType(types: !5324)
!5324 = !{!803, !803}
!5325 = !{!5326, !5327}
!5326 = !DILocalVariable(name: "p", arg: 1, scope: !5322, file: !790, line: 161, type: !803)
!5327 = !DILocalVariable(name: "r", scope: !5322, file: !790, line: 163, type: !803)
!5328 = !DILocation(line: 0, scope: !5322)
!5329 = !DILocation(line: 164, column: 3, scope: !5322)
!5330 = !DILocation(line: 164, column: 10, scope: !5322)
!5331 = !DILocation(line: 164, column: 13, scope: !5322)
!5332 = !DILocation(line: 164, column: 27, scope: !5322)
!5333 = !DILocation(line: 164, column: 21, scope: !5322)
!5334 = !DILocation(line: 165, column: 6, scope: !5322)
!5335 = distinct !{!5335, !5329, !5334}
!5336 = !DILocation(line: 166, column: 10, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5322, file: !790, line: 166, column: 7)
!5338 = !DILocation(line: 167, column: 6, scope: !5337)
!5339 = !DILocation(line: 166, column: 7, scope: !5322)
!5340 = !DILocation(line: 168, column: 3, scope: !5322)
!5341 = distinct !DISubprogram(name: "base_reg_class", scope: !5342, file: !5342, line: 25, type: !5343, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5345)
!5342 = !DIFile(filename: "./addresses.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5343 = !DISubroutineType(types: !5344)
!5344 = !{!576, !5, !377, !377}
!5345 = !{!5346, !5347, !5348}
!5346 = !DILocalVariable(name: "mode", arg: 1, scope: !5341, file: !5342, line: 25, type: !5)
!5347 = !DILocalVariable(name: "outer_code", arg: 2, scope: !5341, file: !5342, line: 26, type: !377)
!5348 = !DILocalVariable(name: "index_code", arg: 3, scope: !5341, file: !5342, line: 27, type: !377)
!5349 = !DILocation(line: 0, scope: !5341)
!5350 = !DILocation(line: 39, column: 3, scope: !5341)
!5351 = distinct !DISubprogram(name: "reg_fits_class_p", scope: !3, file: !3, line: 2728, type: !5352, scopeLine: 2730, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5354)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{!798, !806, !576, !798, !5}
!5354 = !{!5355, !5356, !5357, !5358, !5359}
!5355 = !DILocalVariable(name: "operand", arg: 1, scope: !5351, file: !3, line: 2728, type: !806)
!5356 = !DILocalVariable(name: "cl", arg: 2, scope: !5351, file: !3, line: 2728, type: !576)
!5357 = !DILocalVariable(name: "offset", arg: 3, scope: !5351, file: !3, line: 2728, type: !798)
!5358 = !DILocalVariable(name: "mode", arg: 4, scope: !5351, file: !3, line: 2729, type: !5)
!5359 = !DILocalVariable(name: "regno", scope: !5351, file: !3, line: 2731, type: !798)
!5360 = !DILocation(line: 0, scope: !5351)
!5361 = !DILocation(line: 2731, column: 15, scope: !5351)
!5362 = !DILocation(line: 2733, column: 10, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 2733, column: 7)
!5364 = !DILocation(line: 2733, column: 7, scope: !5351)
!5365 = !DILocation(line: 2736, column: 17, scope: !5351)
!5366 = !DILocation(line: 2737, column: 4, scope: !5351)
!5367 = !DILocation(line: 2737, column: 26, scope: !5351)
!5368 = !DILocation(line: 2738, column: 17, scope: !5351)
!5369 = !DILocation(line: 2737, column: 7, scope: !5351)
!5370 = !DILocation(line: 2736, column: 3, scope: !5351)
!5371 = !DILocation(line: 2739, column: 1, scope: !5351)
!5372 = distinct !DISubprogram(name: "in_hard_reg_set_p", scope: !5373, file: !5373, line: 335, type: !5374, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5377)
!5373 = !DIFile(filename: "./regs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5374 = !DISubroutineType(types: !5375)
!5375 = !{!797, !5376, !5, !7}
!5376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1880)
!5377 = !{!5378, !5379, !5380, !5381}
!5378 = !DILocalVariable(name: "regs", arg: 1, scope: !5372, file: !5373, line: 335, type: !5376)
!5379 = !DILocalVariable(name: "mode", arg: 2, scope: !5372, file: !5373, line: 335, type: !5)
!5380 = !DILocalVariable(name: "regno", arg: 3, scope: !5372, file: !5373, line: 336, type: !7)
!5381 = !DILocalVariable(name: "end_regno", scope: !5372, file: !5373, line: 338, type: !7)
!5382 = !DILocation(line: 0, scope: !5372)
!5383 = !DILocation(line: 340, column: 8, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5372, file: !5373, line: 340, column: 7)
!5385 = !DILocation(line: 340, column: 7, scope: !5372)
!5386 = !DILocation(line: 343, column: 15, scope: !5372)
!5387 = !DILocation(line: 344, column: 3, scope: !5372)
!5388 = !DILocation(line: 344, column: 10, scope: !5372)
!5389 = !DILocation(line: 344, column: 18, scope: !5372)
!5390 = !DILocation(line: 345, column: 10, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5372, file: !5373, line: 345, column: 9)
!5392 = !DILocation(line: 345, column: 9, scope: !5372)
!5393 = distinct !{!5393, !5387, !5394}
!5394 = !DILocation(line: 346, column: 14, scope: !5372)
!5395 = !DILocation(line: 349, column: 1, scope: !5372)
!5396 = distinct !DISubprogram(name: "split_all_insns", scope: !3, file: !3, line: 2798, type: !2492, scopeLine: 2799, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5397)
!5397 = !{!5398, !5409, !5410, !5411, !5415, !5416, !5417, !5423}
!5398 = !DILocalVariable(name: "blocks", scope: !5396, file: !3, line: 2800, type: !5399)
!5399 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !5400, line: 45, baseType: !5401)
!5400 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5402, size: 64)
!5402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !5400, line: 39, size: 192, elements: !5403)
!5403 = !{!5404, !5405, !5406, !5407}
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !5402, file: !5400, line: 41, baseType: !796, size: 64)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !5402, file: !5400, line: 42, baseType: !7, size: 32, offset: 64)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5402, file: !5400, line: 43, baseType: !7, size: 32, offset: 96)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !5402, file: !5400, line: 44, baseType: !5408, size: 64, offset: 128)
!5408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !876, size: 64, elements: !841)
!5409 = !DILocalVariable(name: "changed", scope: !5396, file: !3, line: 2801, type: !797)
!5410 = !DILocalVariable(name: "bb", scope: !5396, file: !3, line: 2802, type: !1179)
!5411 = !DILocalVariable(name: "insn", scope: !5412, file: !3, line: 2810, type: !806)
!5412 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 2809, column: 5)
!5413 = distinct !DILexicalBlock(scope: !5414, file: !3, line: 2808, column: 3)
!5414 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 2808, column: 3)
!5415 = !DILocalVariable(name: "next", scope: !5412, file: !3, line: 2810, type: !806)
!5416 = !DILocalVariable(name: "finish", scope: !5412, file: !3, line: 2811, type: !797)
!5417 = !DILocalVariable(name: "set", scope: !5418, file: !3, line: 2822, type: !806)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 2821, column: 6)
!5419 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 2820, column: 8)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 2815, column: 2)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 2814, column: 7)
!5422 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 2814, column: 7)
!5423 = !DILocalVariable(name: "last", scope: !5424, file: !3, line: 2839, type: !806)
!5424 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 2838, column: 3)
!5425 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 2827, column: 12)
!5426 = !DILocation(line: 2804, column: 27, scope: !5396)
!5427 = !DILocation(line: 2804, column: 12, scope: !5396)
!5428 = !DILocation(line: 0, scope: !5396)
!5429 = !DILocation(line: 2805, column: 3, scope: !5396)
!5430 = !DILocation(line: 2808, column: 3, scope: !5414)
!5431 = !DILocation(line: 2808, column: 3, scope: !5413)
!5432 = !DILocation(line: 2806, column: 11, scope: !5396)
!5433 = !DILocation(line: 0, scope: !5414)
!5434 = !DILocation(line: 0, scope: !5412)
!5435 = !DILocation(line: 2813, column: 7, scope: !5412)
!5436 = !DILocation(line: 2814, column: 19, scope: !5422)
!5437 = !DILocation(line: 0, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 2841, column: 7)
!5439 = distinct !DILexicalBlock(scope: !5424, file: !3, line: 2840, column: 9)
!5440 = !DILocation(line: 2814, column: 12, scope: !5422)
!5441 = !DILocation(line: 0, scope: !5422)
!5442 = !DILocation(line: 2814, column: 33, scope: !5421)
!5443 = !DILocation(line: 2814, column: 7, scope: !5422)
!5444 = !DILocation(line: 2818, column: 11, scope: !5420)
!5445 = !DILocation(line: 2819, column: 22, scope: !5420)
!5446 = !DILocation(line: 2819, column: 19, scope: !5420)
!5447 = !DILocation(line: 2819, column: 13, scope: !5420)
!5448 = !DILocation(line: 2820, column: 8, scope: !5419)
!5449 = !DILocation(line: 2820, column: 8, scope: !5420)
!5450 = !DILocation(line: 2822, column: 18, scope: !5418)
!5451 = !DILocation(line: 0, scope: !5418)
!5452 = !DILocation(line: 2827, column: 12, scope: !5425)
!5453 = !DILocation(line: 2827, column: 16, scope: !5425)
!5454 = !DILocation(line: 2827, column: 19, scope: !5425)
!5455 = !DILocation(line: 2827, column: 12, scope: !5418)
!5456 = !DILocation(line: 2834, column: 9, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 2834, column: 9)
!5458 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 2828, column: 3)
!5459 = !DILocation(line: 2834, column: 9, scope: !5458)
!5460 = !DILocation(line: 2835, column: 9, scope: !5457)
!5461 = !DILocation(line: 2839, column: 16, scope: !5424)
!5462 = !DILocation(line: 0, scope: !5424)
!5463 = !DILocation(line: 2840, column: 9, scope: !5439)
!5464 = !DILocation(line: 2840, column: 9, scope: !5424)
!5465 = !DILocation(line: 2846, column: 9, scope: !5438)
!5466 = !DILocation(line: 2846, column: 16, scope: !5438)
!5467 = !DILocation(line: 2847, column: 11, scope: !5438)
!5468 = distinct !{!5468, !5465, !5467}
!5469 = !DILocation(line: 2848, column: 30, scope: !5438)
!5470 = !DILocation(line: 2848, column: 9, scope: !5438)
!5471 = !DILocation(line: 2850, column: 7, scope: !5438)
!5472 = !DILocation(line: 2814, column: 7, scope: !5421)
!5473 = distinct !{!5473, !5443, !5474}
!5474 = !DILocation(line: 2853, column: 2, scope: !5422)
!5475 = !DILocation(line: 0, scope: !5413)
!5476 = distinct !{!5476, !5430, !5477}
!5477 = !DILocation(line: 2854, column: 5, scope: !5414)
!5478 = !DILocation(line: 2856, column: 3, scope: !5396)
!5479 = !DILocation(line: 2857, column: 7, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 2857, column: 7)
!5481 = !DILocation(line: 2857, column: 7, scope: !5396)
!5482 = !DILocation(line: 2858, column: 5, scope: !5480)
!5483 = !DILocation(line: 2864, column: 3, scope: !5396)
!5484 = !DILocation(line: 2865, column: 1, scope: !5396)
!5485 = distinct !DISubprogram(name: "split_insn", scope: !3, file: !3, line: 2746, type: !4916, scopeLine: 2747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5486)
!5486 = !{!5487, !5488, !5489, !5490, !5491, !5492}
!5487 = !DILocalVariable(name: "insn", arg: 1, scope: !5485, file: !3, line: 2746, type: !806)
!5488 = !DILocalVariable(name: "first", scope: !5485, file: !3, line: 2749, type: !806)
!5489 = !DILocalVariable(name: "last", scope: !5485, file: !3, line: 2750, type: !806)
!5490 = !DILocalVariable(name: "insn_set", scope: !5485, file: !3, line: 2751, type: !806)
!5491 = !DILocalVariable(name: "last_set", scope: !5485, file: !3, line: 2751, type: !806)
!5492 = !DILocalVariable(name: "note", scope: !5485, file: !3, line: 2751, type: !806)
!5493 = !DILocation(line: 0, scope: !5485)
!5494 = !DILocation(line: 2749, column: 15, scope: !5485)
!5495 = !DILocation(line: 2750, column: 25, scope: !5485)
!5496 = !DILocation(line: 2750, column: 14, scope: !5485)
!5497 = !DILocation(line: 2753, column: 12, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 2753, column: 7)
!5499 = !DILocation(line: 2753, column: 7, scope: !5485)
!5500 = !DILocation(line: 2760, column: 14, scope: !5485)
!5501 = !DILocation(line: 2761, column: 7, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 2761, column: 7)
!5503 = !DILocation(line: 2761, column: 7, scope: !5485)
!5504 = !DILocation(line: 2763, column: 18, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 2762, column: 5)
!5506 = !DILocation(line: 2764, column: 11, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 2764, column: 11)
!5508 = !DILocation(line: 2764, column: 20, scope: !5507)
!5509 = !DILocation(line: 2764, column: 36, scope: !5507)
!5510 = !DILocation(line: 2764, column: 57, scope: !5507)
!5511 = !DILocation(line: 2764, column: 23, scope: !5507)
!5512 = !DILocation(line: 2764, column: 11, scope: !5505)
!5513 = !DILocation(line: 2766, column: 11, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 2765, column: 2)
!5515 = !DILocation(line: 2767, column: 8, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 2767, column: 8)
!5517 = !DILocation(line: 2767, column: 13, scope: !5516)
!5518 = !DILocation(line: 2767, column: 16, scope: !5516)
!5519 = !DILocation(line: 2767, column: 8, scope: !5514)
!5520 = !DILocation(line: 2768, column: 6, scope: !5516)
!5521 = !DILocation(line: 2769, column: 13, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5516, file: !3, line: 2769, column: 13)
!5523 = !DILocation(line: 2769, column: 13, scope: !5516)
!5524 = !DILocation(line: 2770, column: 6, scope: !5522)
!5525 = !DILocation(line: 2775, column: 3, scope: !5485)
!5526 = !DILocation(line: 2779, column: 7, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 2779, column: 7)
!5528 = !DILocation(line: 2779, column: 33, scope: !5527)
!5529 = !DILocation(line: 2779, column: 24, scope: !5527)
!5530 = !DILocation(line: 2782, column: 7, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 2780, column: 5)
!5532 = !DILocation(line: 0, scope: !5531)
!5533 = !DILocation(line: 2784, column: 8, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 2784, column: 8)
!5535 = distinct !DILexicalBlock(scope: !5536, file: !3, line: 2783, column: 2)
!5536 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2782, column: 7)
!5537 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 2782, column: 7)
!5538 = !DILocation(line: 2784, column: 8, scope: !5535)
!5539 = !DILocation(line: 2785, column: 6, scope: !5534)
!5540 = !DILocation(line: 2786, column: 14, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 2786, column: 8)
!5542 = !DILocation(line: 2786, column: 8, scope: !5535)
!5543 = !DILocation(line: 2782, column: 7, scope: !5536)
!5544 = distinct !{!5544, !5545, !5546}
!5545 = !DILocation(line: 2782, column: 7, scope: !5537)
!5546 = !DILocation(line: 2789, column: 2, scope: !5537)
!5547 = !DILocation(line: 2793, column: 1, scope: !5485)
!5548 = distinct !DISubprogram(name: "SET_BIT", scope: !5400, file: !5400, line: 63, type: !5549, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5551)
!5549 = !DISubroutineType(types: !5550)
!5550 = !{null, !5399, !7}
!5551 = !{!5552, !5553, !5554}
!5552 = !DILocalVariable(name: "map", arg: 1, scope: !5548, file: !5400, line: 63, type: !5399)
!5553 = !DILocalVariable(name: "bitno", arg: 2, scope: !5548, file: !5400, line: 63, type: !7)
!5554 = !DILocalVariable(name: "oldbit", scope: !5555, file: !5400, line: 67, type: !797)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !5400, line: 66, column: 5)
!5556 = distinct !DILexicalBlock(scope: !5548, file: !5400, line: 65, column: 7)
!5557 = !DILocation(line: 0, scope: !5548)
!5558 = !DILocation(line: 65, column: 12, scope: !5556)
!5559 = !DILocation(line: 65, column: 7, scope: !5556)
!5560 = !DILocation(line: 65, column: 7, scope: !5548)
!5561 = !DILocation(line: 73, column: 40, scope: !5548)
!5562 = !DILocation(line: 73, column: 29, scope: !5548)
!5563 = !DILocation(line: 72, column: 19, scope: !5548)
!5564 = !DILocation(line: 72, column: 3, scope: !5548)
!5565 = !DILocation(line: 68, column: 16, scope: !5555)
!5566 = !DILocation(line: 69, column: 12, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5555, file: !5400, line: 69, column: 11)
!5568 = !DILocation(line: 69, column: 11, scope: !5555)
!5569 = !DILocation(line: 70, column: 2, scope: !5567)
!5570 = !DILocation(line: 70, column: 41, scope: !5567)
!5571 = !DILocation(line: 73, column: 5, scope: !5548)
!5572 = !DILocation(line: 74, column: 1, scope: !5548)
!5573 = distinct !DISubprogram(name: "split_all_insns_noflow", scope: !3, file: !3, line: 2871, type: !1946, scopeLine: 2872, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5574)
!5574 = !{!5575, !5576, !5577}
!5575 = !DILocalVariable(name: "next", scope: !5573, file: !3, line: 2873, type: !806)
!5576 = !DILocalVariable(name: "insn", scope: !5573, file: !3, line: 2873, type: !806)
!5577 = !DILocalVariable(name: "set", scope: !5578, file: !3, line: 2883, type: !806)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 2879, column: 2)
!5579 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 2878, column: 11)
!5580 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 2876, column: 5)
!5581 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 2875, column: 3)
!5582 = distinct !DILexicalBlock(scope: !5573, file: !3, line: 2875, column: 3)
!5583 = !DILocation(line: 2875, column: 15, scope: !5582)
!5584 = !DILocation(line: 0, scope: !5573)
!5585 = !DILocation(line: 2875, column: 8, scope: !5582)
!5586 = !DILocation(line: 0, scope: !5582)
!5587 = !DILocation(line: 2875, column: 3, scope: !5582)
!5588 = !DILocation(line: 2877, column: 14, scope: !5580)
!5589 = !DILocation(line: 2878, column: 11, scope: !5579)
!5590 = !DILocation(line: 2878, column: 11, scope: !5580)
!5591 = !DILocation(line: 2883, column: 14, scope: !5578)
!5592 = !DILocation(line: 0, scope: !5578)
!5593 = !DILocation(line: 2884, column: 8, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 2884, column: 8)
!5595 = !DILocation(line: 2884, column: 12, scope: !5594)
!5596 = !DILocation(line: 2884, column: 15, scope: !5594)
!5597 = !DILocation(line: 2884, column: 8, scope: !5578)
!5598 = !DILocation(line: 2893, column: 12, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5600, file: !3, line: 2893, column: 12)
!5600 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 2885, column: 6)
!5601 = !DILocation(line: 2893, column: 12, scope: !5600)
!5602 = !DILocation(line: 2894, column: 3, scope: !5599)
!5603 = !DILocation(line: 2897, column: 6, scope: !5594)
!5604 = !DILocation(line: 2875, column: 3, scope: !5581)
!5605 = distinct !{!5605, !5587, !5606}
!5606 = !DILocation(line: 2899, column: 5, scope: !5582)
!5607 = !DILocation(line: 2900, column: 3, scope: !5573)
!5608 = distinct !DISubprogram(name: "peep2_next_insn", scope: !3, file: !3, line: 2925, type: !5609, scopeLine: 2926, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5611)
!5609 = !DISubroutineType(types: !5610)
!5610 = !{!806, !798}
!5611 = !{!5612}
!5612 = !DILocalVariable(name: "n", arg: 1, scope: !5608, file: !3, line: 2925, type: !798)
!5613 = !DILocation(line: 0, scope: !5608)
!5614 = !DILocation(line: 2927, column: 3, scope: !5608)
!5615 = !DILocation(line: 2929, column: 8, scope: !5608)
!5616 = !DILocation(line: 2929, column: 5, scope: !5608)
!5617 = !DILocation(line: 2930, column: 9, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 2930, column: 7)
!5619 = !DILocation(line: 2931, column: 7, scope: !5618)
!5620 = !DILocation(line: 2930, column: 7, scope: !5608)
!5621 = !DILocation(line: 2933, column: 10, scope: !5608)
!5622 = !DILocation(line: 2933, column: 29, scope: !5608)
!5623 = !DILocation(line: 2933, column: 3, scope: !5608)
!5624 = distinct !DISubprogram(name: "peep2_regno_dead_p", scope: !3, file: !3, line: 2940, type: !5625, scopeLine: 2941, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5627)
!5625 = !DISubroutineType(types: !5626)
!5626 = !{!798, !798, !798}
!5627 = !{!5628, !5629}
!5628 = !DILocalVariable(name: "ofs", arg: 1, scope: !5624, file: !3, line: 2940, type: !798)
!5629 = !DILocalVariable(name: "regno", arg: 2, scope: !5624, file: !3, line: 2940, type: !798)
!5630 = !DILocation(line: 0, scope: !5624)
!5631 = !DILocation(line: 2942, column: 3, scope: !5624)
!5632 = !DILocation(line: 2944, column: 10, scope: !5624)
!5633 = !DILocation(line: 2944, column: 7, scope: !5624)
!5634 = !DILocation(line: 2945, column: 11, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 2945, column: 7)
!5636 = !DILocation(line: 2946, column: 9, scope: !5635)
!5637 = !DILocation(line: 2945, column: 7, scope: !5624)
!5638 = !DILocation(line: 2948, column: 3, scope: !5624)
!5639 = !DILocation(line: 2950, column: 12, scope: !5624)
!5640 = !DILocation(line: 2950, column: 10, scope: !5624)
!5641 = !DILocation(line: 2950, column: 3, scope: !5624)
!5642 = distinct !DISubprogram(name: "peep2_reg_dead_p", scope: !3, file: !3, line: 2956, type: !5643, scopeLine: 2957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5645)
!5643 = !DISubroutineType(types: !5644)
!5644 = !{!798, !798, !806}
!5645 = !{!5646, !5647, !5648, !5649}
!5646 = !DILocalVariable(name: "ofs", arg: 1, scope: !5642, file: !3, line: 2956, type: !798)
!5647 = !DILocalVariable(name: "reg", arg: 2, scope: !5642, file: !3, line: 2956, type: !806)
!5648 = !DILocalVariable(name: "regno", scope: !5642, file: !3, line: 2958, type: !798)
!5649 = !DILocalVariable(name: "n", scope: !5642, file: !3, line: 2958, type: !798)
!5650 = !DILocation(line: 0, scope: !5642)
!5651 = !DILocation(line: 2960, column: 3, scope: !5642)
!5652 = !DILocation(line: 2962, column: 10, scope: !5642)
!5653 = !DILocation(line: 2962, column: 7, scope: !5642)
!5654 = !DILocation(line: 2963, column: 11, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 2963, column: 7)
!5656 = !DILocation(line: 2964, column: 9, scope: !5655)
!5657 = !DILocation(line: 2963, column: 7, scope: !5642)
!5658 = !DILocation(line: 2966, column: 3, scope: !5642)
!5659 = !DILocation(line: 2968, column: 11, scope: !5642)
!5660 = !DILocation(line: 2969, column: 7, scope: !5642)
!5661 = !DILocation(line: 2969, column: 31, scope: !5642)
!5662 = !DILocation(line: 2971, column: 9, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 2971, column: 9)
!5664 = !DILocation(line: 2970, column: 3, scope: !5642)
!5665 = !DILocation(line: 2970, column: 10, scope: !5642)
!5666 = !DILocation(line: 2970, column: 14, scope: !5642)
!5667 = !DILocation(line: 2971, column: 9, scope: !5642)
!5668 = distinct !{!5668, !5664, !5669}
!5669 = !DILocation(line: 2972, column: 14, scope: !5642)
!5670 = !DILocation(line: 2974, column: 1, scope: !5642)
!5671 = !DILocation(line: 0, scope: !1909)
!5672 = !DILocation(line: 2993, column: 3, scope: !1909)
!5673 = !DILocation(line: 2996, column: 3, scope: !1909)
!5674 = !DILocation(line: 2997, column: 3, scope: !1909)
!5675 = !DILocation(line: 2999, column: 11, scope: !1909)
!5676 = !DILocation(line: 2999, column: 8, scope: !1909)
!5677 = !DILocation(line: 3000, column: 12, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !1909, file: !3, line: 3000, column: 7)
!5679 = !DILocation(line: 3001, column: 10, scope: !5678)
!5680 = !DILocation(line: 3000, column: 7, scope: !1909)
!5681 = !DILocation(line: 3002, column: 6, scope: !1909)
!5682 = !DILocation(line: 3003, column: 10, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !1909, file: !3, line: 3003, column: 7)
!5684 = !DILocation(line: 3003, column: 7, scope: !1909)
!5685 = !DILocation(line: 3006, column: 3, scope: !1909)
!5686 = !DILocation(line: 3007, column: 3, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !1909, file: !3, line: 3007, column: 3)
!5688 = !DILocation(line: 0, scope: !1923)
!5689 = !DILocation(line: 3009, column: 3, scope: !1909)
!5690 = !DILocation(line: 3009, column: 15, scope: !1909)
!5691 = !DILocation(line: 3011, column: 7, scope: !1923)
!5692 = !DILocation(line: 3013, column: 11, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !1923, file: !3, line: 3013, column: 11)
!5694 = !DILocation(line: 3013, column: 18, scope: !5693)
!5695 = !DILocation(line: 3013, column: 11, scope: !1923)
!5696 = !DILocation(line: 3015, column: 7, scope: !1923)
!5697 = !DILocation(line: 3016, column: 7, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !1923, file: !3, line: 3016, column: 7)
!5699 = !DILocation(line: 3017, column: 7, scope: !1923)
!5700 = !DILocation(line: 3018, column: 5, scope: !1909)
!5701 = distinct !{!5701, !5689, !5700}
!5702 = !DILocation(line: 3020, column: 9, scope: !1909)
!5703 = !DILocation(line: 3020, column: 22, scope: !1909)
!5704 = !DILocation(line: 3021, column: 7, scope: !1909)
!5705 = !DILocation(line: 0, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 3044, column: 11)
!5707 = !DILocation(line: 0, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 3061, column: 7)
!5709 = !DILocation(line: 3023, column: 8, scope: !1927)
!5710 = !DILocation(line: 0, scope: !1927)
!5711 = !DILocation(line: 3023, column: 17, scope: !1926)
!5712 = !DILocation(line: 3023, column: 3, scope: !1927)
!5713 = !DILocation(line: 3028, column: 19, scope: !1925)
!5714 = !DILocation(line: 3028, column: 30, scope: !1925)
!5715 = !DILocation(line: 0, scope: !1925)
!5716 = !DILocation(line: 3029, column: 21, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 3029, column: 11)
!5718 = !DILocation(line: 3030, column: 12, scope: !5717)
!5719 = !DILocation(line: 3029, column: 11, scope: !1925)
!5720 = !DILocation(line: 3032, column: 15, scope: !1925)
!5721 = !DILocation(line: 3038, column: 11, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 3038, column: 11)
!5723 = !DILocation(line: 3038, column: 11, scope: !1925)
!5724 = !DILocation(line: 3041, column: 11, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 3041, column: 11)
!5726 = !DILocation(line: 3041, column: 11, scope: !1925)
!5727 = !DILocation(line: 3044, column: 13, scope: !5706)
!5728 = !DILocation(line: 3044, column: 11, scope: !1925)
!5729 = !DILocation(line: 3047, column: 13, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 3047, column: 11)
!5731 = !DILocation(line: 3047, column: 11, scope: !1925)
!5732 = !DILocation(line: 3050, column: 13, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 3050, column: 11)
!5734 = !DILocation(line: 3050, column: 35, scope: !5733)
!5735 = !DILocation(line: 3050, column: 40, scope: !5733)
!5736 = !DILocation(line: 3050, column: 11, scope: !1925)
!5737 = !DILocation(line: 3052, column: 21, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 3052, column: 11)
!5739 = !DILocation(line: 3052, column: 13, scope: !5738)
!5740 = !DILocation(line: 3052, column: 11, scope: !1925)
!5741 = !DILocation(line: 3056, column: 42, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 3056, column: 11)
!5743 = !DILocation(line: 3057, column: 10, scope: !5742)
!5744 = !DILocation(line: 3057, column: 27, scope: !5742)
!5745 = !DILocation(line: 3057, column: 30, scope: !5742)
!5746 = !DILocation(line: 3056, column: 11, scope: !1925)
!5747 = !DILocation(line: 3061, column: 16, scope: !5708)
!5748 = !DILocation(line: 0, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 3063, column: 8)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 3062, column: 2)
!5751 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 3061, column: 7)
!5752 = !DILocation(line: 3061, column: 12, scope: !5708)
!5753 = !DILocation(line: 3061, column: 53, scope: !5751)
!5754 = !DILocation(line: 3061, column: 7, scope: !5708)
!5755 = !DILocation(line: 3063, column: 8, scope: !5749)
!5756 = !DILocation(line: 3064, column: 8, scope: !5749)
!5757 = !DILocation(line: 3064, column: 11, scope: !5749)
!5758 = !DILocation(line: 3063, column: 8, scope: !5750)
!5759 = !DILocation(line: 3061, column: 7, scope: !5751)
!5760 = distinct !{!5760, !5754, !5761}
!5761 = !DILocation(line: 3069, column: 2, scope: !5708)
!5762 = !DILocation(line: 3070, column: 11, scope: !1925)
!5763 = !DILocation(line: 3072, column: 4, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 3071, column: 2)
!5765 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 3070, column: 11)
!5766 = !DILocation(line: 3075, column: 8, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 3075, column: 8)
!5768 = !DILocation(line: 3075, column: 20, scope: !5767)
!5769 = !DILocation(line: 3075, column: 8, scope: !5764)
!5770 = !DILocation(line: 3077, column: 15, scope: !5764)
!5771 = !DILocation(line: 3079, column: 11, scope: !5764)
!5772 = !DILocation(line: 3079, column: 4, scope: !5764)
!5773 = !DILocation(line: 3023, column: 43, scope: !1926)
!5774 = !DILocation(line: 3023, column: 3, scope: !1926)
!5775 = distinct !{!5775, !5712, !5776}
!5776 = !DILocation(line: 3081, column: 5, scope: !1927)
!5777 = !DILocation(line: 3083, column: 14, scope: !1909)
!5778 = !DILocation(line: 3084, column: 3, scope: !1909)
!5779 = !DILocation(line: 3085, column: 1, scope: !1909)
!5780 = distinct !DISubprogram(name: "add_to_hard_reg_set", scope: !5373, file: !5373, line: 307, type: !5781, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5783)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{null, !1912, !5, !7}
!5783 = !{!5784, !5785, !5786, !5787}
!5784 = !DILocalVariable(name: "regs", arg: 1, scope: !5780, file: !5373, line: 307, type: !1912)
!5785 = !DILocalVariable(name: "mode", arg: 2, scope: !5780, file: !5373, line: 307, type: !5)
!5786 = !DILocalVariable(name: "regno", arg: 3, scope: !5780, file: !5373, line: 308, type: !7)
!5787 = !DILocalVariable(name: "end_regno", scope: !5780, file: !5373, line: 310, type: !7)
!5788 = !DILocation(line: 0, scope: !5780)
!5789 = !DILocation(line: 312, column: 15, scope: !5780)
!5790 = !DILocation(line: 314, column: 5, scope: !5780)
!5791 = !DILocation(line: 313, column: 3, scope: !5780)
!5792 = !DILocation(line: 315, column: 10, scope: !5780)
!5793 = !DILocation(line: 315, column: 18, scope: !5780)
!5794 = distinct !{!5794, !5791, !5795}
!5795 = !DILocation(line: 315, column: 29, scope: !5780)
!5796 = !DILocation(line: 316, column: 1, scope: !5780)
!5797 = distinct !DISubprogram(name: "store_data_bypass_p", scope: !3, file: !3, line: 3356, type: !5798, scopeLine: 3357, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5800)
!5798 = !DISubroutineType(types: !5799)
!5799 = !{!798, !806, !806}
!5800 = !{!5801, !5802, !5803, !5804, !5805, !5806, !5807, !5808, !5809, !5810}
!5801 = !DILocalVariable(name: "out_insn", arg: 1, scope: !5797, file: !3, line: 3356, type: !806)
!5802 = !DILocalVariable(name: "in_insn", arg: 2, scope: !5797, file: !3, line: 3356, type: !806)
!5803 = !DILocalVariable(name: "out_set", scope: !5797, file: !3, line: 3358, type: !806)
!5804 = !DILocalVariable(name: "in_set", scope: !5797, file: !3, line: 3358, type: !806)
!5805 = !DILocalVariable(name: "out_pat", scope: !5797, file: !3, line: 3359, type: !806)
!5806 = !DILocalVariable(name: "in_pat", scope: !5797, file: !3, line: 3359, type: !806)
!5807 = !DILocalVariable(name: "out_exp", scope: !5797, file: !3, line: 3360, type: !806)
!5808 = !DILocalVariable(name: "in_exp", scope: !5797, file: !3, line: 3360, type: !806)
!5809 = !DILocalVariable(name: "i", scope: !5797, file: !3, line: 3361, type: !798)
!5810 = !DILocalVariable(name: "j", scope: !5797, file: !3, line: 3361, type: !798)
!5811 = !DILocation(line: 0, scope: !5797)
!5812 = !DILocation(line: 3363, column: 12, scope: !5797)
!5813 = !DILocation(line: 3364, column: 7, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 3364, column: 7)
!5815 = !DILocation(line: 3364, column: 7, scope: !5797)
!5816 = !DILocation(line: 3366, column: 12, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 3366, column: 11)
!5818 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 3365, column: 5)
!5819 = !DILocation(line: 3366, column: 11, scope: !5818)
!5820 = !DILocation(line: 3369, column: 17, scope: !5818)
!5821 = !DILocation(line: 3370, column: 11, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 3370, column: 11)
!5823 = !DILocation(line: 3370, column: 11, scope: !5818)
!5824 = !DILocation(line: 3372, column: 32, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 3372, column: 15)
!5826 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 3371, column: 9)
!5827 = !DILocation(line: 3372, column: 52, scope: !5825)
!5828 = !DILocation(line: 3372, column: 15, scope: !5825)
!5829 = !DILocation(line: 3372, column: 15, scope: !5826)
!5830 = !DILocation(line: 3377, column: 21, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 3376, column: 9)
!5832 = !DILocation(line: 3379, column: 8, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 3379, column: 8)
!5834 = !DILocation(line: 3379, column: 27, scope: !5833)
!5835 = !DILocation(line: 3379, column: 8, scope: !5831)
!5836 = !DILocation(line: 0, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 3382, column: 11)
!5838 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 3382, column: 11)
!5839 = !DILocation(line: 0, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 3391, column: 17)
!5841 = distinct !DILexicalBlock(scope: !5837, file: !3, line: 3383, column: 11)
!5842 = !DILocation(line: 3382, column: 11, scope: !5838)
!5843 = !DILocation(line: 0, scope: !5838)
!5844 = !DILocation(line: 3382, column: 27, scope: !5837)
!5845 = !DILocation(line: 3382, column: 25, scope: !5837)
!5846 = !DILocation(line: 3384, column: 23, scope: !5841)
!5847 = !DILocation(line: 3386, column: 17, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 3386, column: 17)
!5849 = !DILocation(line: 3386, column: 36, scope: !5848)
!5850 = !DILocation(line: 3386, column: 17, scope: !5841)
!5851 = !DILocation(line: 3389, column: 13, scope: !5841)
!5852 = !DILocation(line: 3391, column: 34, scope: !5840)
!5853 = !DILocation(line: 3391, column: 54, scope: !5840)
!5854 = !DILocation(line: 3391, column: 17, scope: !5840)
!5855 = !DILocation(line: 3391, column: 17, scope: !5841)
!5856 = !DILocation(line: 3382, column: 50, scope: !5837)
!5857 = !DILocation(line: 3382, column: 11, scope: !5837)
!5858 = distinct !{!5858, !5842, !5859}
!5859 = !DILocation(line: 3393, column: 11, scope: !5838)
!5860 = !DILocation(line: 3398, column: 16, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 3397, column: 5)
!5862 = !DILocation(line: 3399, column: 7, scope: !5861)
!5863 = !DILocation(line: 0, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 3401, column: 7)
!5865 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 3401, column: 7)
!5866 = !DILocation(line: 0, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 3402, column: 2)
!5868 = !DILocation(line: 3401, column: 12, scope: !5865)
!5869 = !DILocation(line: 0, scope: !5865)
!5870 = !DILocation(line: 3401, column: 23, scope: !5864)
!5871 = !DILocation(line: 3401, column: 21, scope: !5864)
!5872 = !DILocation(line: 3401, column: 7, scope: !5865)
!5873 = !DILocation(line: 3403, column: 13, scope: !5867)
!5874 = !DILocation(line: 3405, column: 8, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 3405, column: 8)
!5876 = !DILocation(line: 3405, column: 26, scope: !5875)
!5877 = !DILocation(line: 3405, column: 8, scope: !5867)
!5878 = !DILocation(line: 3408, column: 4, scope: !5867)
!5879 = !DILocation(line: 3410, column: 9, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 3410, column: 8)
!5881 = !DILocation(line: 3410, column: 8, scope: !5867)
!5882 = !DILocation(line: 3413, column: 21, scope: !5867)
!5883 = !DILocation(line: 3414, column: 15, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 3414, column: 15)
!5885 = !DILocation(line: 3414, column: 15, scope: !5867)
!5886 = !DILocation(line: 3416, column: 36, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 3416, column: 19)
!5888 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 3415, column: 13)
!5889 = !DILocation(line: 3416, column: 56, scope: !5887)
!5890 = !DILocation(line: 3416, column: 19, scope: !5887)
!5891 = !DILocation(line: 3416, column: 19, scope: !5888)
!5892 = !DILocation(line: 3421, column: 25, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 3420, column: 13)
!5894 = !DILocation(line: 3422, column: 15, scope: !5893)
!5895 = !DILocation(line: 0, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 3424, column: 15)
!5897 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 3424, column: 15)
!5898 = !DILocation(line: 0, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3433, column: 23)
!5900 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 3425, column: 17)
!5901 = !DILocation(line: 3424, column: 20, scope: !5897)
!5902 = !DILocation(line: 0, scope: !5897)
!5903 = !DILocation(line: 3424, column: 31, scope: !5896)
!5904 = !DILocation(line: 3424, column: 29, scope: !5896)
!5905 = !DILocation(line: 3424, column: 15, scope: !5897)
!5906 = !DILocation(line: 3426, column: 29, scope: !5900)
!5907 = !DILocation(line: 3428, column: 23, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3428, column: 23)
!5909 = !DILocation(line: 3428, column: 42, scope: !5908)
!5910 = !DILocation(line: 3428, column: 23, scope: !5900)
!5911 = !DILocation(line: 3431, column: 19, scope: !5900)
!5912 = !DILocation(line: 3433, column: 40, scope: !5899)
!5913 = !DILocation(line: 3433, column: 60, scope: !5899)
!5914 = !DILocation(line: 3433, column: 23, scope: !5899)
!5915 = !DILocation(line: 3433, column: 23, scope: !5900)
!5916 = !DILocation(line: 3424, column: 54, scope: !5896)
!5917 = !DILocation(line: 3424, column: 15, scope: !5896)
!5918 = distinct !{!5918, !5905, !5919}
!5919 = !DILocation(line: 3435, column: 17, scope: !5897)
!5920 = !DILocation(line: 3401, column: 45, scope: !5864)
!5921 = !DILocation(line: 3401, column: 7, scope: !5864)
!5922 = distinct !{!5922, !5872, !5923}
!5923 = !DILocation(line: 3437, column: 9, scope: !5865)
!5924 = !DILocation(line: 3440, column: 3, scope: !5797)
!5925 = !DILocation(line: 3441, column: 1, scope: !5797)
!5926 = distinct !DISubprogram(name: "if_test_bypass_p", scope: !3, file: !3, line: 3449, type: !5798, scopeLine: 3450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5927)
!5927 = !{!5928, !5929, !5930, !5931, !5932, !5935, !5936}
!5928 = !DILocalVariable(name: "out_insn", arg: 1, scope: !5926, file: !3, line: 3449, type: !806)
!5929 = !DILocalVariable(name: "in_insn", arg: 2, scope: !5926, file: !3, line: 3449, type: !806)
!5930 = !DILocalVariable(name: "out_set", scope: !5926, file: !3, line: 3451, type: !806)
!5931 = !DILocalVariable(name: "in_set", scope: !5926, file: !3, line: 3451, type: !806)
!5932 = !DILocalVariable(name: "out_pat", scope: !5933, file: !3, line: 3473, type: !806)
!5933 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 3472, column: 5)
!5934 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 3465, column: 7)
!5935 = !DILocalVariable(name: "i", scope: !5933, file: !3, line: 3474, type: !798)
!5936 = !DILocalVariable(name: "exp", scope: !5937, file: !3, line: 3481, type: !806)
!5937 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 3480, column: 2)
!5938 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 3479, column: 7)
!5939 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 3479, column: 7)
!5940 = !DILocation(line: 0, scope: !5926)
!5941 = !DILocation(line: 3453, column: 12, scope: !5926)
!5942 = !DILocation(line: 3454, column: 9, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 3454, column: 7)
!5944 = !DILocation(line: 3454, column: 7, scope: !5926)
!5945 = !DILocation(line: 3456, column: 7, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 3455, column: 5)
!5947 = !DILocation(line: 3460, column: 7, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 3460, column: 7)
!5949 = !DILocation(line: 3460, column: 35, scope: !5948)
!5950 = !DILocation(line: 3460, column: 7, scope: !5926)
!5951 = !DILocation(line: 3464, column: 13, scope: !5926)
!5952 = !DILocation(line: 3465, column: 7, scope: !5934)
!5953 = !DILocation(line: 3465, column: 7, scope: !5926)
!5954 = !DILocation(line: 3467, column: 28, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5956, file: !3, line: 3467, column: 11)
!5956 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 3466, column: 5)
!5957 = !DILocation(line: 3467, column: 48, scope: !5955)
!5958 = !DILocation(line: 3467, column: 11, scope: !5955)
!5959 = !DILocation(line: 3468, column: 4, scope: !5955)
!5960 = !DILocation(line: 3468, column: 24, scope: !5955)
!5961 = !DILocation(line: 3468, column: 44, scope: !5955)
!5962 = !DILocation(line: 3468, column: 7, scope: !5955)
!5963 = !DILocation(line: 3467, column: 11, scope: !5956)
!5964 = !DILocation(line: 3476, column: 17, scope: !5933)
!5965 = !DILocation(line: 0, scope: !5933)
!5966 = !DILocation(line: 3477, column: 7, scope: !5933)
!5967 = !DILocation(line: 0, scope: !5938)
!5968 = !DILocation(line: 0, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 3488, column: 8)
!5970 = !DILocation(line: 3479, column: 12, scope: !5939)
!5971 = !DILocation(line: 0, scope: !5939)
!5972 = !DILocation(line: 3479, column: 23, scope: !5938)
!5973 = !DILocation(line: 3479, column: 21, scope: !5938)
!5974 = !DILocation(line: 3479, column: 7, scope: !5939)
!5975 = !DILocation(line: 3481, column: 14, scope: !5937)
!5976 = !DILocation(line: 0, scope: !5937)
!5977 = !DILocation(line: 3483, column: 8, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 3483, column: 8)
!5979 = !DILocation(line: 3483, column: 23, scope: !5978)
!5980 = !DILocation(line: 3483, column: 8, scope: !5937)
!5981 = !DILocation(line: 3486, column: 4, scope: !5937)
!5982 = !DILocation(line: 3488, column: 25, scope: !5969)
!5983 = !DILocation(line: 3488, column: 45, scope: !5969)
!5984 = !DILocation(line: 3488, column: 8, scope: !5969)
!5985 = !DILocation(line: 3489, column: 8, scope: !5969)
!5986 = !DILocation(line: 3489, column: 28, scope: !5969)
!5987 = !DILocation(line: 3489, column: 48, scope: !5969)
!5988 = !DILocation(line: 3489, column: 11, scope: !5969)
!5989 = !DILocation(line: 3488, column: 8, scope: !5937)
!5990 = !DILocation(line: 3479, column: 46, scope: !5938)
!5991 = !DILocation(line: 3479, column: 7, scope: !5938)
!5992 = distinct !{!5992, !5974, !5993}
!5993 = !DILocation(line: 3491, column: 2, scope: !5939)
!5994 = !DILocation(line: 3494, column: 3, scope: !5926)
!5995 = !DILocation(line: 3495, column: 1, scope: !5926)
!5996 = distinct !DISubprogram(name: "gate_handle_peephole2", scope: !3, file: !3, line: 3498, type: !1942, scopeLine: 3499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!5997 = !DILocation(line: 3500, column: 11, scope: !5996)
!5998 = !DILocation(line: 3500, column: 20, scope: !5996)
!5999 = !DILocation(line: 3500, column: 24, scope: !5996)
!6000 = !DILocation(line: 3500, column: 10, scope: !5996)
!6001 = !DILocation(line: 3500, column: 3, scope: !5996)
!6002 = distinct !DISubprogram(name: "rest_of_handle_peephole2", scope: !3, file: !3, line: 3504, type: !1946, scopeLine: 3505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!6003 = !DILocation(line: 3507, column: 3, scope: !6002)
!6004 = !DILocation(line: 3509, column: 3, scope: !6002)
!6005 = distinct !DISubprogram(name: "rest_of_handle_split_all_insns", scope: !3, file: !3, line: 3533, type: !1946, scopeLine: 3534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!6006 = !DILocation(line: 3535, column: 3, scope: !6005)
!6007 = !DILocation(line: 3536, column: 3, scope: !6005)
!6008 = distinct !DISubprogram(name: "rest_of_handle_split_after_reload", scope: !3, file: !3, line: 3559, type: !1946, scopeLine: 3560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!6009 = !DILocation(line: 3565, column: 5, scope: !6008)
!6010 = !DILocation(line: 3566, column: 3, scope: !6008)
!6011 = distinct !DISubprogram(name: "gate_handle_split_before_regstack", scope: !3, file: !3, line: 3589, type: !1942, scopeLine: 3590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!6012 = !DILocation(line: 3597, column: 11, scope: !6011)
!6013 = !DILocation(line: 3597, column: 20, scope: !6011)
!6014 = !DILocation(line: 3597, column: 24, scope: !6011)
!6015 = !DILocation(line: 3597, column: 23, scope: !6011)
!6016 = !DILocation(line: 3597, column: 3, scope: !6011)
!6017 = distinct !DISubprogram(name: "rest_of_handle_split_before_regstack", scope: !3, file: !3, line: 3607, type: !1946, scopeLine: 3608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!6018 = !DILocation(line: 3609, column: 3, scope: !6017)
!6019 = !DILocation(line: 3610, column: 3, scope: !6017)
!6020 = distinct !DISubprogram(name: "gate_handle_split_before_sched2", scope: !3, file: !3, line: 3633, type: !1942, scopeLine: 3634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!6021 = !DILocation(line: 3636, column: 10, scope: !6020)
!6022 = !DILocation(line: 3636, column: 19, scope: !6020)
!6023 = !DILocation(line: 3636, column: 23, scope: !6020)
!6024 = !DILocation(line: 3636, column: 3, scope: !6020)
!6025 = distinct !DISubprogram(name: "rest_of_handle_split_before_sched2", scope: !3, file: !3, line: 3643, type: !1946, scopeLine: 3644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!6026 = !DILocation(line: 3646, column: 3, scope: !6025)
!6027 = !DILocation(line: 3648, column: 3, scope: !6025)
!6028 = distinct !DISubprogram(name: "gate_do_final_split", scope: !3, file: !3, line: 3674, type: !1942, scopeLine: 3675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!6029 = !DILocation(line: 3679, column: 3, scope: !6028)
!6030 = distinct !DISubprogram(name: "simplify_while_replacing", scope: !3, file: !3, line: 532, type: !6031, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6033)
!6031 = !DISubroutineType(types: !6032)
!6032 = !{null, !805, !806, !806, !5}
!6033 = !{!6034, !6035, !6036, !6037, !6038, !6039, !6040, !6041, !6045, !6046, !6047, !6050, !6053, !6056}
!6034 = !DILocalVariable(name: "loc", arg: 1, scope: !6030, file: !3, line: 532, type: !805)
!6035 = !DILocalVariable(name: "to", arg: 2, scope: !6030, file: !3, line: 532, type: !806)
!6036 = !DILocalVariable(name: "object", arg: 3, scope: !6030, file: !3, line: 532, type: !806)
!6037 = !DILocalVariable(name: "op0_mode", arg: 4, scope: !6030, file: !3, line: 533, type: !5)
!6038 = !DILocalVariable(name: "x", scope: !6030, file: !3, line: 535, type: !806)
!6039 = !DILocalVariable(name: "code", scope: !6030, file: !3, line: 536, type: !377)
!6040 = !DILocalVariable(name: "new_rtx", scope: !6030, file: !3, line: 537, type: !806)
!6041 = !DILocalVariable(name: "wanted_mode", scope: !6042, file: !3, line: 610, type: !5)
!6042 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 609, column: 2)
!6043 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 604, column: 11)
!6044 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 552, column: 5)
!6045 = !DILocalVariable(name: "is_mode", scope: !6042, file: !3, line: 611, type: !5)
!6046 = !DILocalVariable(name: "pos", scope: !6042, file: !3, line: 612, type: !798)
!6047 = !DILocalVariable(name: "new_mode", scope: !6048, file: !3, line: 616, type: !5)
!6048 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 615, column: 6)
!6049 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 614, column: 8)
!6050 = !DILocalVariable(name: "new_mode", scope: !6051, file: !3, line: 623, type: !5)
!6051 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 622, column: 6)
!6052 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 621, column: 13)
!6053 = !DILocalVariable(name: "offset", scope: !6054, file: !3, line: 633, type: !798)
!6054 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 632, column: 6)
!6055 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 630, column: 8)
!6056 = !DILocalVariable(name: "newmem", scope: !6054, file: !3, line: 634, type: !806)
!6057 = !DILocation(line: 0, scope: !6030)
!6058 = !DILocation(line: 535, column: 11, scope: !6030)
!6059 = !DILocation(line: 536, column: 24, scope: !6030)
!6060 = !DILocation(line: 539, column: 7, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 539, column: 7)
!6062 = !DILocation(line: 540, column: 7, scope: !6061)
!6063 = !DILocation(line: 540, column: 39, scope: !6061)
!6064 = !DILocation(line: 540, column: 52, scope: !6061)
!6065 = !DILocation(line: 540, column: 10, scope: !6061)
!6066 = !DILocation(line: 539, column: 7, scope: !6030)
!6067 = !DILocation(line: 543, column: 11, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 541, column: 5)
!6069 = !DILocation(line: 542, column: 7, scope: !6068)
!6070 = !DILocation(line: 547, column: 11, scope: !6068)
!6071 = !DILocation(line: 548, column: 14, scope: !6068)
!6072 = !DILocation(line: 549, column: 5, scope: !6068)
!6073 = !DILocation(line: 551, column: 3, scope: !6030)
!6074 = !DILocation(line: 558, column: 11, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 558, column: 11)
!6076 = !DILocation(line: 558, column: 37, scope: !6075)
!6077 = !DILocation(line: 558, column: 52, scope: !6075)
!6078 = !DILocation(line: 558, column: 11, scope: !6044)
!6079 = !DILocation(line: 561, column: 12, scope: !6075)
!6080 = !DILocation(line: 561, column: 26, scope: !6075)
!6081 = !DILocation(line: 560, column: 5, scope: !6075)
!6082 = !DILocation(line: 559, column: 2, scope: !6075)
!6083 = !DILocation(line: 564, column: 11, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 564, column: 11)
!6085 = !DILocation(line: 565, column: 4, scope: !6084)
!6086 = !DILocation(line: 565, column: 30, scope: !6084)
!6087 = !DILocation(line: 564, column: 11, scope: !6044)
!6088 = !DILocation(line: 568, column: 12, scope: !6084)
!6089 = !DILocation(line: 568, column: 26, scope: !6084)
!6090 = !DILocation(line: 569, column: 6, scope: !6084)
!6091 = !DILocation(line: 567, column: 5, scope: !6084)
!6092 = !DILocation(line: 566, column: 2, scope: !6084)
!6093 = !DILocation(line: 575, column: 11, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 575, column: 11)
!6095 = !DILocation(line: 575, column: 34, scope: !6094)
!6096 = !DILocation(line: 575, column: 11, scope: !6044)
!6097 = !DILocation(line: 577, column: 40, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 576, column: 2)
!6099 = !DILocation(line: 577, column: 14, scope: !6098)
!6100 = !DILocation(line: 581, column: 9, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 581, column: 8)
!6102 = !DILocation(line: 581, column: 8, scope: !6098)
!6103 = !DILocation(line: 582, column: 16, scope: !6101)
!6104 = !DILocation(line: 582, column: 6, scope: !6101)
!6105 = !DILocation(line: 0, scope: !6098)
!6106 = !DILocation(line: 583, column: 4, scope: !6098)
!6107 = !DILocation(line: 584, column: 2, scope: !6098)
!6108 = !DILocation(line: 588, column: 34, scope: !6044)
!6109 = !DILocation(line: 588, column: 48, scope: !6044)
!6110 = !DILocation(line: 589, column: 9, scope: !6044)
!6111 = !DILocation(line: 588, column: 17, scope: !6044)
!6112 = !DILocation(line: 592, column: 12, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 592, column: 11)
!6114 = !DILocation(line: 592, column: 20, scope: !6113)
!6115 = !DILocation(line: 592, column: 23, scope: !6113)
!6116 = !DILocation(line: 592, column: 49, scope: !6113)
!6117 = !DILocation(line: 592, column: 11, scope: !6044)
!6118 = !DILocation(line: 593, column: 12, scope: !6113)
!6119 = !DILocation(line: 593, column: 2, scope: !6113)
!6120 = !DILocation(line: 0, scope: !6044)
!6121 = !DILocation(line: 594, column: 11, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 594, column: 11)
!6123 = !DILocation(line: 594, column: 11, scope: !6044)
!6124 = !DILocation(line: 595, column: 2, scope: !6122)
!6125 = !DILocation(line: 604, column: 11, scope: !6043)
!6126 = !DILocation(line: 605, column: 4, scope: !6043)
!6127 = !DILocation(line: 605, column: 7, scope: !6043)
!6128 = !DILocation(line: 606, column: 4, scope: !6043)
!6129 = !DILocation(line: 606, column: 7, scope: !6043)
!6130 = !DILocation(line: 607, column: 4, scope: !6043)
!6131 = !DILocation(line: 607, column: 34, scope: !6043)
!6132 = !DILocation(line: 607, column: 8, scope: !6043)
!6133 = !DILocation(line: 608, column: 4, scope: !6043)
!6134 = !DILocation(line: 608, column: 8, scope: !6043)
!6135 = !DILocation(line: 604, column: 11, scope: !6044)
!6136 = !DILocation(line: 0, scope: !6042)
!6137 = !DILocation(line: 611, column: 32, scope: !6042)
!6138 = !DILocation(line: 612, column: 14, scope: !6042)
!6139 = !DILocation(line: 614, column: 8, scope: !6049)
!6140 = !DILocation(line: 614, column: 21, scope: !6049)
!6141 = !DILocation(line: 614, column: 8, scope: !6042)
!6142 = !DILocation(line: 617, column: 5, scope: !6048)
!6143 = !DILocation(line: 0, scope: !6048)
!6144 = !DILocation(line: 618, column: 21, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 618, column: 12)
!6146 = !DILocation(line: 618, column: 12, scope: !6048)
!6147 = !DILocation(line: 620, column: 6, scope: !6048)
!6148 = !DILocation(line: 621, column: 26, scope: !6052)
!6149 = !DILocation(line: 621, column: 13, scope: !6049)
!6150 = !DILocation(line: 624, column: 5, scope: !6051)
!6151 = !DILocation(line: 0, scope: !6051)
!6152 = !DILocation(line: 625, column: 21, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 625, column: 12)
!6154 = !DILocation(line: 625, column: 12, scope: !6051)
!6155 = !DILocation(line: 627, column: 6, scope: !6051)
!6156 = !DILocation(line: 0, scope: !6049)
!6157 = !DILocation(line: 630, column: 20, scope: !6055)
!6158 = !DILocation(line: 631, column: 8, scope: !6055)
!6159 = !DILocation(line: 631, column: 11, scope: !6055)
!6160 = !DILocation(line: 631, column: 41, scope: !6055)
!6161 = !DILocation(line: 631, column: 39, scope: !6055)
!6162 = !DILocation(line: 630, column: 8, scope: !6042)
!6163 = !DILocation(line: 633, column: 25, scope: !6054)
!6164 = !DILocation(line: 0, scope: !6054)
!6165 = !DILocation(line: 643, column: 15, scope: !6054)
!6166 = !DILocation(line: 643, column: 12, scope: !6054)
!6167 = !DILocation(line: 645, column: 17, scope: !6054)
!6168 = !DILocation(line: 647, column: 47, scope: !6054)
!6169 = !DILocation(line: 647, column: 8, scope: !6054)
!6170 = !DILocation(line: 648, column: 8, scope: !6054)
!6171 = !DILocation(line: 649, column: 6, scope: !6054)
!6172 = !DILocation(line: 657, column: 1, scope: !6030)
!6173 = distinct !DISubprogram(name: "end_hard_regno", scope: !5373, file: !5373, line: 290, type: !6174, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6176)
!6174 = !DISubroutineType(types: !6175)
!6175 = !{!7, !5, !7}
!6176 = !{!6177, !6178}
!6177 = !DILocalVariable(name: "mode", arg: 1, scope: !6173, file: !5373, line: 290, type: !5)
!6178 = !DILocalVariable(name: "regno", arg: 2, scope: !6173, file: !5373, line: 290, type: !7)
!6179 = !DILocation(line: 0, scope: !6173)
!6180 = !DILocation(line: 292, column: 18, scope: !6173)
!6181 = !DILocation(line: 292, column: 16, scope: !6173)
!6182 = !DILocation(line: 292, column: 3, scope: !6173)
!6183 = distinct !DISubprogram(name: "peephole2_optimize", scope: !3, file: !3, line: 3110, type: !2492, scopeLine: 3111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6184)
!6184 = !{!6185, !6186, !6187, !6188, !6189, !6190, !6191, !6192, !6201, !6202, !6203, !6204, !6205, !6206, !6212, !6213, !6214, !6215, !6218, !6225, !6231, !6232}
!6185 = !DILocalVariable(name: "insn", scope: !6183, file: !3, line: 3112, type: !806)
!6186 = !DILocalVariable(name: "prev", scope: !6183, file: !3, line: 3112, type: !806)
!6187 = !DILocalVariable(name: "live", scope: !6183, file: !3, line: 3113, type: !1897)
!6188 = !DILocalVariable(name: "i", scope: !6183, file: !3, line: 3114, type: !798)
!6189 = !DILocalVariable(name: "bb", scope: !6183, file: !3, line: 3115, type: !1179)
!6190 = !DILocalVariable(name: "do_cleanup_cfg", scope: !6183, file: !3, line: 3116, type: !797)
!6191 = !DILocalVariable(name: "do_rebuild_jump_labels", scope: !6183, file: !3, line: 3117, type: !797)
!6192 = !DILocalVariable(name: "attempt", scope: !6193, file: !3, line: 3141, type: !806)
!6193 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 3140, column: 6)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 3139, column: 8)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 3137, column: 2)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 3136, column: 7)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 3136, column: 7)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 3128, column: 5)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 3127, column: 3)
!6200 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 3127, column: 3)
!6201 = !DILocalVariable(name: "before_try", scope: !6193, file: !3, line: 3141, type: !806)
!6202 = !DILocalVariable(name: "x", scope: !6193, file: !3, line: 3141, type: !806)
!6203 = !DILocalVariable(name: "match_len", scope: !6193, file: !3, line: 3142, type: !798)
!6204 = !DILocalVariable(name: "note", scope: !6193, file: !3, line: 3143, type: !806)
!6205 = !DILocalVariable(name: "was_call", scope: !6193, file: !3, line: 3144, type: !797)
!6206 = !DILocalVariable(name: "j", scope: !6207, file: !3, line: 3175, type: !798)
!6207 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 3174, column: 7)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 3173, column: 5)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 3173, column: 5)
!6210 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 3169, column: 3)
!6211 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 3168, column: 12)
!6212 = !DILocalVariable(name: "old_insn", scope: !6207, file: !3, line: 3176, type: !806)
!6213 = !DILocalVariable(name: "new_insn", scope: !6207, file: !3, line: 3176, type: !806)
!6214 = !DILocalVariable(name: "note", scope: !6207, file: !3, line: 3176, type: !806)
!6215 = !DILocalVariable(name: "eh_edge", scope: !6216, file: !3, line: 3243, type: !1196)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 3242, column: 7)
!6217 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 3241, column: 9)
!6218 = !DILocalVariable(name: "ei", scope: !6216, file: !3, line: 3244, type: !6219)
!6219 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !135, line: 682, baseType: !6220)
!6220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !135, line: 679, size: 128, elements: !6221)
!6221 = !{!6222, !6223}
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !6220, file: !135, line: 680, baseType: !7, size: 32)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !6220, file: !135, line: 681, baseType: !6224, size: 64, offset: 64)
!6224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!6225 = !DILocalVariable(name: "nfte", scope: !6226, file: !3, line: 3260, type: !1196)
!6226 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 3259, column: 8)
!6227 = distinct !DILexicalBlock(scope: !6228, file: !3, line: 3256, column: 10)
!6228 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 3255, column: 4)
!6229 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 3255, column: 4)
!6230 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 3254, column: 13)
!6231 = !DILocalVariable(name: "nehe", scope: !6226, file: !3, line: 3260, type: !1196)
!6232 = !DILocalVariable(name: "flags", scope: !6226, file: !3, line: 3261, type: !798)
!6233 = !DILocation(line: 0, scope: !6183)
!6234 = !DILocation(line: 3119, column: 3, scope: !6183)
!6235 = !DILocation(line: 3120, column: 3, scope: !6183)
!6236 = !DILocation(line: 3123, column: 8, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 3123, column: 3)
!6238 = !DILocation(line: 0, scope: !6237)
!6239 = !DILocation(line: 3123, column: 17, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 3123, column: 3)
!6241 = !DILocation(line: 3123, column: 3, scope: !6237)
!6242 = !DILocation(line: 3124, column: 24, scope: !6240)
!6243 = !DILocation(line: 3124, column: 36, scope: !6240)
!6244 = !DILocation(line: 3123, column: 44, scope: !6240)
!6245 = !DILocation(line: 3123, column: 3, scope: !6240)
!6246 = distinct !{!6246, !6241, !6247}
!6247 = !DILocation(line: 3124, column: 38, scope: !6237)
!6248 = !DILocation(line: 3127, column: 3, scope: !6200)
!6249 = !DILocation(line: 0, scope: !6193)
!6250 = !DILocation(line: 0, scope: !6216)
!6251 = !DILocation(line: 0, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 3246, column: 9)
!6253 = !DILocation(line: 0, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 3246, column: 9)
!6255 = !DILocation(line: 3127, column: 3, scope: !6199)
!6256 = !DILocation(line: 3117, column: 8, scope: !6183)
!6257 = !DILocation(line: 0, scope: !6200)
!6258 = !DILocation(line: 3129, column: 7, scope: !6198)
!6259 = !DILocation(line: 3132, column: 26, scope: !6198)
!6260 = !DILocation(line: 3132, column: 7, scope: !6198)
!6261 = !DILocation(line: 3133, column: 7, scope: !6198)
!6262 = !DILocation(line: 3134, column: 7, scope: !6198)
!6263 = !DILocation(line: 3136, column: 19, scope: !6197)
!6264 = !DILocation(line: 3136, column: 12, scope: !6197)
!6265 = !DILocation(line: 0, scope: !6197)
!6266 = !DILocation(line: 3138, column: 11, scope: !6195)
!6267 = !DILocation(line: 3139, column: 8, scope: !6194)
!6268 = !DILocation(line: 3139, column: 8, scope: !6195)
!6269 = !DILocation(line: 3142, column: 8, scope: !6193)
!6270 = !DILocation(line: 3147, column: 12, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 3147, column: 12)
!6272 = !DILocation(line: 3147, column: 28, scope: !6271)
!6273 = !DILocation(line: 3147, column: 12, scope: !6193)
!6274 = !DILocation(line: 3149, column: 12, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 3149, column: 12)
!6276 = !DILocation(line: 3149, column: 32, scope: !6275)
!6277 = !DILocation(line: 3150, column: 5, scope: !6275)
!6278 = !DILocation(line: 3152, column: 8, scope: !6193)
!6279 = !DILocation(line: 3150, column: 8, scope: !6275)
!6280 = !DILocation(line: 3150, column: 39, scope: !6275)
!6281 = !DILocation(line: 3150, column: 44, scope: !6275)
!6282 = !DILocation(line: 3149, column: 12, scope: !6193)
!6283 = !DILocation(line: 3151, column: 22, scope: !6275)
!6284 = !DILocation(line: 3151, column: 3, scope: !6275)
!6285 = !DILocation(line: 3152, column: 39, scope: !6193)
!6286 = !DILocation(line: 3152, column: 44, scope: !6193)
!6287 = !DILocation(line: 3153, column: 8, scope: !6193)
!6288 = !DILocation(line: 3154, column: 8, scope: !6193)
!6289 = !DILocation(line: 3156, column: 12, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 3156, column: 12)
!6291 = !DILocation(line: 3156, column: 12, scope: !6193)
!6292 = !DILocation(line: 3161, column: 5, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 3157, column: 3)
!6294 = !DILocation(line: 3163, column: 3, scope: !6293)
!6295 = !DILocation(line: 3166, column: 30, scope: !6290)
!6296 = !DILocation(line: 3166, column: 13, scope: !6290)
!6297 = !DILocation(line: 0, scope: !6290)
!6298 = !DILocation(line: 3168, column: 20, scope: !6211)
!6299 = !DILocation(line: 3168, column: 12, scope: !6193)
!6300 = !DILocation(line: 3173, column: 22, scope: !6208)
!6301 = !DILocation(line: 3173, column: 5, scope: !6209)
!6302 = !DILocation(line: 0, scope: !6209)
!6303 = !DILocation(line: 3173, column: 19, scope: !6208)
!6304 = !DILocation(line: 3178, column: 17, scope: !6207)
!6305 = !DILocation(line: 3178, column: 15, scope: !6207)
!6306 = !DILocation(line: 0, scope: !6207)
!6307 = !DILocation(line: 3179, column: 15, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 3179, column: 13)
!6309 = !DILocation(line: 3180, column: 6, scope: !6308)
!6310 = !DILocation(line: 3179, column: 13, scope: !6207)
!6311 = !DILocation(line: 3181, column: 20, scope: !6207)
!6312 = !DILocation(line: 3181, column: 39, scope: !6207)
!6313 = !DILocation(line: 3182, column: 14, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 3182, column: 13)
!6315 = !DILocation(line: 3182, column: 13, scope: !6207)
!6316 = !DILocation(line: 3187, column: 9, scope: !6207)
!6317 = !DILocation(line: 3189, column: 10, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 3189, column: 10)
!6319 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 3188, column: 4)
!6320 = !DILocation(line: 3189, column: 10, scope: !6319)
!6321 = !DILocation(line: 3191, column: 17, scope: !6319)
!6322 = distinct !{!6322, !6316, !6323}
!6323 = !DILocation(line: 3192, column: 4, scope: !6207)
!6324 = !DILocation(line: 3194, column: 9, scope: !6207)
!6325 = !DILocation(line: 3197, column: 6, scope: !6207)
!6326 = !DILocation(line: 3196, column: 9, scope: !6207)
!6327 = !DILocation(line: 3197, column: 4, scope: !6207)
!6328 = !DILocation(line: 3199, column: 21, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 3199, column: 9)
!6330 = !DILocation(line: 3199, column: 14, scope: !6329)
!6331 = !DILocation(line: 0, scope: !6329)
!6332 = !DILocation(line: 3199, column: 9, scope: !6329)
!6333 = !DILocation(line: 3215, column: 9, scope: !6207)
!6334 = !DILocation(line: 3202, column: 12, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 3199, column: 9)
!6336 = !DILocation(line: 3202, column: 4, scope: !6335)
!6337 = !DILocation(line: 3206, column: 32, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 3203, column: 6)
!6339 = !DILocation(line: 3207, column: 8, scope: !6338)
!6340 = !DILocation(line: 3206, column: 8, scope: !6338)
!6341 = !DILocation(line: 3208, column: 8, scope: !6338)
!6342 = !DILocation(line: 3201, column: 14, scope: !6335)
!6343 = !DILocation(line: 3199, column: 9, scope: !6335)
!6344 = distinct !{!6344, !6332, !6345}
!6345 = !DILocation(line: 3212, column: 6, scope: !6329)
!6346 = !DILocation(line: 3215, column: 16, scope: !6207)
!6347 = !DILocation(line: 3215, column: 23, scope: !6207)
!6348 = !DILocation(line: 3215, column: 20, scope: !6207)
!6349 = !DILocation(line: 3217, column: 14, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 3216, column: 4)
!6351 = !DILocation(line: 3217, column: 12, scope: !6350)
!6352 = !DILocation(line: 3218, column: 12, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 3218, column: 10)
!6354 = !DILocation(line: 3219, column: 10, scope: !6353)
!6355 = !DILocation(line: 3218, column: 10, scope: !6350)
!6356 = !DILocation(line: 3220, column: 17, scope: !6350)
!6357 = !DILocation(line: 3220, column: 36, scope: !6350)
!6358 = !DILocation(line: 3221, column: 6, scope: !6350)
!6359 = distinct !{!6359, !6333, !6360}
!6360 = !DILocation(line: 3222, column: 4, scope: !6207)
!6361 = !DILocation(line: 3173, column: 33, scope: !6208)
!6362 = !DILocation(line: 3173, column: 5, scope: !6208)
!6363 = distinct !{!6363, !6301, !6364}
!6364 = !DILocation(line: 3224, column: 7, scope: !6209)
!6365 = !DILocation(line: 3226, column: 9, scope: !6210)
!6366 = !DILocation(line: 3226, column: 21, scope: !6210)
!6367 = !DILocation(line: 3226, column: 19, scope: !6210)
!6368 = !DILocation(line: 3227, column: 11, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 3227, column: 9)
!6370 = !DILocation(line: 3228, column: 9, scope: !6369)
!6371 = !DILocation(line: 3227, column: 9, scope: !6210)
!6372 = !DILocation(line: 3230, column: 27, scope: !6210)
!6373 = !DILocation(line: 3230, column: 46, scope: !6210)
!6374 = !DILocation(line: 3230, column: 12, scope: !6210)
!6375 = !DILocation(line: 3235, column: 30, scope: !6210)
!6376 = !DILocation(line: 3236, column: 12, scope: !6210)
!6377 = !DILocation(line: 3234, column: 15, scope: !6210)
!6378 = !DILocation(line: 3237, column: 18, scope: !6210)
!6379 = !DILocation(line: 3238, column: 49, scope: !6210)
!6380 = !DILocation(line: 3238, column: 5, scope: !6210)
!6381 = !DILocation(line: 3241, column: 9, scope: !6217)
!6382 = !DILocation(line: 3241, column: 14, scope: !6217)
!6383 = !DILocation(line: 3241, column: 18, scope: !6217)
!6384 = !DILocation(line: 3241, column: 30, scope: !6217)
!6385 = !DILocation(line: 3241, column: 27, scope: !6217)
!6386 = !DILocation(line: 3243, column: 9, scope: !6216)
!6387 = !DILocation(line: 3244, column: 9, scope: !6216)
!6388 = !DILocation(line: 3246, column: 9, scope: !6252)
!6389 = !DILocation(line: 3246, column: 9, scope: !6254)
!6390 = !DILocation(line: 3247, column: 8, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 3247, column: 8)
!6392 = !DILocation(line: 3247, column: 17, scope: !6391)
!6393 = !DILocation(line: 3247, column: 23, scope: !6391)
!6394 = !DILocation(line: 3247, column: 8, scope: !6254)
!6395 = distinct !{!6395, !6388, !6396}
!6396 = !DILocation(line: 3248, column: 6, scope: !6252)
!6397 = !DILocation(line: 3250, column: 13, scope: !6216)
!6398 = !DILocation(line: 3251, column: 4, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 3250, column: 13)
!6400 = !DILocation(line: 3254, column: 13, scope: !6230)
!6401 = !DILocation(line: 3254, column: 13, scope: !6216)
!6402 = !DILocation(line: 3255, column: 4, scope: !6229)
!6403 = !DILocation(line: 0, scope: !6229)
!6404 = !DILocation(line: 3255, column: 25, scope: !6228)
!6405 = !DILocation(line: 3256, column: 15, scope: !6227)
!6406 = !DILocation(line: 3256, column: 12, scope: !6227)
!6407 = !DILocation(line: 3257, column: 10, scope: !6227)
!6408 = !DILocation(line: 3257, column: 14, scope: !6227)
!6409 = !DILocation(line: 3258, column: 7, scope: !6227)
!6410 = !DILocation(line: 3258, column: 10, scope: !6227)
!6411 = !DILocation(line: 3256, column: 10, scope: !6228)
!6412 = !DILocation(line: 3263, column: 34, scope: !6226)
!6413 = !DILocation(line: 3263, column: 17, scope: !6226)
!6414 = !DILocation(line: 0, scope: !6226)
!6415 = !DILocation(line: 3264, column: 19, scope: !6226)
!6416 = !DILocation(line: 3264, column: 28, scope: !6226)
!6417 = !DILocation(line: 3265, column: 12, scope: !6226)
!6418 = !DILocation(line: 3266, column: 14, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 3266, column: 14)
!6420 = !DILocation(line: 3267, column: 11, scope: !6419)
!6421 = !DILocation(line: 3266, column: 14, scope: !6226)
!6422 = !DILocation(line: 3268, column: 34, scope: !6226)
!6423 = !DILocation(line: 3268, column: 48, scope: !6226)
!6424 = !DILocation(line: 3268, column: 17, scope: !6226)
!6425 = !DILocation(line: 3271, column: 30, scope: !6226)
!6426 = !DILocation(line: 3271, column: 39, scope: !6226)
!6427 = !DILocation(line: 3271, column: 16, scope: !6226)
!6428 = !DILocation(line: 3271, column: 28, scope: !6226)
!6429 = !DILocation(line: 3273, column: 24, scope: !6226)
!6430 = !DILocation(line: 3272, column: 16, scope: !6226)
!6431 = !DILocation(line: 3273, column: 5, scope: !6226)
!6432 = !DILocation(line: 3275, column: 52, scope: !6226)
!6433 = !DILocation(line: 3275, column: 28, scope: !6226)
!6434 = !DILocation(line: 3276, column: 21, scope: !6226)
!6435 = !DILocation(line: 3277, column: 18, scope: !6226)
!6436 = !DILocation(line: 3278, column: 8, scope: !6226)
!6437 = !DILocation(line: 3255, column: 45, scope: !6228)
!6438 = !DILocation(line: 3255, column: 4, scope: !6228)
!6439 = distinct !{!6439, !6402, !6440}
!6440 = !DILocation(line: 3278, column: 8, scope: !6229)
!6441 = !DILocation(line: 3282, column: 27, scope: !6216)
!6442 = !DILocation(line: 3283, column: 7, scope: !6217)
!6443 = !DILocation(line: 3283, column: 7, scope: !6216)
!6444 = !DILocation(line: 3285, column: 17, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 3285, column: 9)
!6446 = !DILocation(line: 3285, column: 9, scope: !6445)
!6447 = !DILocation(line: 3285, column: 9, scope: !6210)
!6448 = !DILocation(line: 3287, column: 9, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 3287, column: 9)
!6450 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 3286, column: 7)
!6451 = !DILocation(line: 0, scope: !6449)
!6452 = !DILocation(line: 3287, column: 23, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 3287, column: 9)
!6454 = !DILocation(line: 3288, column: 23, scope: !6453)
!6455 = !DILocation(line: 3288, column: 28, scope: !6453)
!6456 = !DILocation(line: 3287, column: 50, scope: !6453)
!6457 = !DILocation(line: 3287, column: 9, scope: !6453)
!6458 = distinct !{!6458, !6448, !6459}
!6459 = !DILocation(line: 3288, column: 30, scope: !6449)
!6460 = !DILocation(line: 3289, column: 47, scope: !6450)
!6461 = !DILocation(line: 3289, column: 25, scope: !6450)
!6462 = !DILocation(line: 3289, column: 9, scope: !6450)
!6463 = !DILocation(line: 3289, column: 45, scope: !6450)
!6464 = !DILocation(line: 3290, column: 29, scope: !6450)
!6465 = !DILocation(line: 3291, column: 7, scope: !6450)
!6466 = !DILocation(line: 3296, column: 13, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 3296, column: 13)
!6468 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 3293, column: 7)
!6469 = !DILocation(line: 3296, column: 17, scope: !6467)
!6470 = !DILocation(line: 3296, column: 13, scope: !6468)
!6471 = !DILocation(line: 3298, column: 28, scope: !6468)
!6472 = !DILocation(line: 3298, column: 47, scope: !6468)
!6473 = !DILocation(line: 3298, column: 9, scope: !6468)
!6474 = !DILocation(line: 3302, column: 9, scope: !6468)
!6475 = !DILocation(line: 0, scope: !6468)
!6476 = !DILocation(line: 3304, column: 10, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 3304, column: 10)
!6478 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 3303, column: 4)
!6479 = !DILocation(line: 3304, column: 10, scope: !6478)
!6480 = !DILocation(line: 3306, column: 14, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6482, file: !3, line: 3306, column: 14)
!6482 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 3305, column: 8)
!6483 = !DILocation(line: 3306, column: 18, scope: !6481)
!6484 = !DILocation(line: 3306, column: 14, scope: !6482)
!6485 = !DILocation(line: 3308, column: 14, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6482, file: !3, line: 3308, column: 14)
!6487 = !DILocation(line: 3308, column: 34, scope: !6486)
!6488 = !DILocation(line: 3309, column: 7, scope: !6486)
!6489 = !DILocation(line: 3311, column: 10, scope: !6482)
!6490 = !DILocation(line: 3309, column: 10, scope: !6486)
!6491 = !DILocation(line: 3309, column: 29, scope: !6486)
!6492 = !DILocation(line: 3309, column: 34, scope: !6486)
!6493 = !DILocation(line: 3308, column: 14, scope: !6482)
!6494 = !DILocation(line: 3310, column: 24, scope: !6486)
!6495 = !DILocation(line: 3310, column: 5, scope: !6486)
!6496 = !DILocation(line: 3311, column: 29, scope: !6482)
!6497 = !DILocation(line: 3311, column: 34, scope: !6482)
!6498 = !DILocation(line: 3312, column: 10, scope: !6482)
!6499 = !DILocation(line: 3313, column: 10, scope: !6482)
!6500 = !DILocation(line: 3314, column: 42, scope: !6482)
!6501 = !DILocation(line: 3314, column: 10, scope: !6482)
!6502 = !DILocation(line: 3316, column: 8, scope: !6482)
!6503 = !DILocation(line: 3317, column: 10, scope: !6478)
!6504 = !DILocation(line: 3319, column: 18, scope: !6468)
!6505 = !DILocation(line: 3318, column: 4, scope: !6478)
!6506 = distinct !{!6506, !6474, !6507}
!6507 = !DILocation(line: 3319, column: 25, scope: !6468)
!6508 = !DILocation(line: 3321, column: 23, scope: !6468)
!6509 = !DILocation(line: 3326, column: 10, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 3326, column: 5)
!6511 = !DILocation(line: 0, scope: !6510)
!6512 = !DILocation(line: 3326, column: 25, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 3326, column: 5)
!6514 = !DILocation(line: 3326, column: 5, scope: !6510)
!6515 = !DILocation(line: 3327, column: 11, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 3327, column: 11)
!6517 = !DILocation(line: 3327, column: 11, scope: !6513)
!6518 = !DILocation(line: 3326, column: 44, scope: !6513)
!6519 = !DILocation(line: 3326, column: 5, scope: !6513)
!6520 = distinct !{!6520, !6514, !6521}
!6521 = !DILocation(line: 3331, column: 9, scope: !6510)
!6522 = !DILocation(line: 3333, column: 6, scope: !6194)
!6523 = !DILocation(line: 3333, column: 6, scope: !6193)
!6524 = !DILocation(line: 3335, column: 16, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 3335, column: 8)
!6526 = !DILocation(line: 3335, column: 13, scope: !6525)
!6527 = !DILocation(line: 3335, column: 8, scope: !6195)
!6528 = distinct !{!6528, !6529, !6530}
!6529 = !DILocation(line: 3136, column: 7, scope: !6197)
!6530 = !DILocation(line: 3337, column: 2, scope: !6197)
!6531 = !DILocation(line: 0, scope: !6199)
!6532 = distinct !{!6532, !6248, !6533}
!6533 = !DILocation(line: 3338, column: 5, scope: !6200)
!6534 = !DILocation(line: 3340, column: 3, scope: !6183)
!6535 = !DILocation(line: 3341, column: 8, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 3341, column: 3)
!6537 = !DILocation(line: 0, scope: !6536)
!6538 = !DILocation(line: 3341, column: 17, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 3341, column: 3)
!6540 = !DILocation(line: 3341, column: 3, scope: !6536)
!6541 = !DILocation(line: 3342, column: 5, scope: !6539)
!6542 = !DILocation(line: 3341, column: 44, scope: !6539)
!6543 = !DILocation(line: 3341, column: 3, scope: !6539)
!6544 = distinct !{!6544, !6540, !6545}
!6545 = !DILocation(line: 3342, column: 5, scope: !6536)
!6546 = !DILocation(line: 3343, column: 3, scope: !6183)
!6547 = !DILocation(line: 3344, column: 7, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 3344, column: 7)
!6549 = !DILocation(line: 3344, column: 7, scope: !6183)
!6550 = !DILocation(line: 3345, column: 26, scope: !6548)
!6551 = !DILocation(line: 3345, column: 5, scope: !6548)
!6552 = !DILocation(line: 3346, column: 1, scope: !6183)
!6553 = distinct !DISubprogram(name: "df_lr_get_bb_info", scope: !1900, file: !1900, line: 1052, type: !6554, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6556)
!6554 = !DISubroutineType(types: !6555)
!6555 = !{!1898, !7}
!6556 = !{!6557}
!6557 = !DILocalVariable(name: "index", arg: 1, scope: !6553, file: !1900, line: 1052, type: !7)
!6558 = !DILocation(line: 0, scope: !6553)
!6559 = !DILocation(line: 1054, column: 15, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6553, file: !1900, line: 1054, column: 7)
!6561 = !DILocation(line: 1054, column: 22, scope: !6560)
!6562 = !DILocation(line: 1054, column: 13, scope: !6560)
!6563 = !DILocation(line: 1054, column: 7, scope: !6553)
!6564 = !DILocation(line: 1055, column: 44, scope: !6560)
!6565 = !DILocation(line: 1055, column: 37, scope: !6560)
!6566 = !DILocation(line: 1055, column: 5, scope: !6560)
!6567 = !DILocation(line: 0, scope: !6560)
!6568 = !DILocation(line: 1058, column: 1, scope: !6553)
!6569 = distinct !DISubprogram(name: "peep2_reinit_state", scope: !3, file: !3, line: 3091, type: !6570, scopeLine: 3092, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6572)
!6570 = !DISubroutineType(types: !6571)
!6571 = !{null, !2031}
!6572 = !{!6573, !6574}
!6573 = !DILocalVariable(name: "live", arg: 1, scope: !6569, file: !3, line: 3091, type: !2031)
!6574 = !DILocalVariable(name: "i", scope: !6569, file: !3, line: 3093, type: !798)
!6575 = !DILocation(line: 0, scope: !6569)
!6576 = !DILocation(line: 3096, column: 8, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 3096, column: 3)
!6578 = !DILocation(line: 0, scope: !6577)
!6579 = !DILocation(line: 3096, column: 17, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 3096, column: 3)
!6581 = !DILocation(line: 3096, column: 3, scope: !6577)
!6582 = !DILocation(line: 3097, column: 24, scope: !6580)
!6583 = !DILocation(line: 3097, column: 29, scope: !6580)
!6584 = !DILocation(line: 3096, column: 40, scope: !6580)
!6585 = !DILocation(line: 3096, column: 3, scope: !6580)
!6586 = distinct !{!6586, !6581, !6587}
!6587 = !DILocation(line: 3097, column: 31, scope: !6577)
!6588 = !DILocation(line: 3098, column: 23, scope: !6569)
!6589 = !DILocation(line: 3101, column: 47, scope: !6569)
!6590 = !DILocation(line: 3101, column: 45, scope: !6569)
!6591 = !DILocation(line: 3102, column: 17, scope: !6569)
!6592 = !DILocation(line: 3104, column: 3, scope: !6569)
!6593 = !DILocation(line: 3105, column: 1, scope: !6569)
!6594 = distinct !DISubprogram(name: "ei_start_1", scope: !135, file: !135, line: 696, type: !6595, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6597)
!6595 = !DISubroutineType(types: !6596)
!6596 = !{!6219, !6224}
!6597 = !{!6598, !6599}
!6598 = !DILocalVariable(name: "ev", arg: 1, scope: !6594, file: !135, line: 696, type: !6224)
!6599 = !DILocalVariable(name: "i", scope: !6594, file: !135, line: 698, type: !6219)
!6600 = !DILocation(line: 0, scope: !6594)
!6601 = !DILocation(line: 700, column: 5, scope: !6594)
!6602 = !DILocation(line: 700, column: 11, scope: !6594)
!6603 = !DILocation(line: 701, column: 5, scope: !6594)
!6604 = !DILocation(line: 701, column: 15, scope: !6594)
!6605 = !DILocation(line: 703, column: 3, scope: !6594)
!6606 = distinct !DISubprogram(name: "ei_cond", scope: !135, file: !135, line: 771, type: !6607, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6610)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{!797, !6219, !6609}
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!6610 = !{!6611, !6612}
!6611 = !DILocalVariable(name: "ei", arg: 1, scope: !6606, file: !135, line: 771, type: !6219)
!6612 = !DILocalVariable(name: "p", arg: 2, scope: !6606, file: !135, line: 771, type: !6609)
!6613 = !DILocation(line: 0, scope: !6606)
!6614 = !DILocation(line: 773, column: 8, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6606, file: !135, line: 773, column: 7)
!6616 = !DILocation(line: 773, column: 7, scope: !6606)
!6617 = !DILocation(line: 775, column: 12, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6615, file: !135, line: 774, column: 5)
!6619 = !DILocation(line: 776, column: 7, scope: !6618)
!6620 = !DILocation(line: 781, column: 7, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6615, file: !135, line: 779, column: 5)
!6622 = !DILocation(line: 0, scope: !6615)
!6623 = !DILocation(line: 783, column: 1, scope: !6606)
!6624 = distinct !DISubprogram(name: "ei_next", scope: !135, file: !135, line: 736, type: !6625, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6628)
!6625 = !DISubroutineType(types: !6626)
!6626 = !{null, !6627}
!6627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6219, size: 64)
!6628 = !{!6629}
!6629 = !DILocalVariable(name: "i", arg: 1, scope: !6624, file: !135, line: 736, type: !6627)
!6630 = !DILocation(line: 0, scope: !6624)
!6631 = !DILocation(line: 738, column: 3, scope: !6624)
!6632 = !DILocation(line: 739, column: 11, scope: !6624)
!6633 = !DILocation(line: 740, column: 1, scope: !6624)
!6634 = distinct !DISubprogram(name: "ei_end_p", scope: !135, file: !135, line: 721, type: !6635, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6637)
!6635 = !DISubroutineType(types: !6636)
!6636 = !{!797, !6219}
!6637 = !{!6638}
!6638 = !DILocalVariable(name: "i", arg: 1, scope: !6634, file: !135, line: 721, type: !6219)
!6639 = !DILocation(line: 723, column: 22, scope: !6634)
!6640 = !DILocation(line: 723, column: 19, scope: !6634)
!6641 = !DILocation(line: 723, column: 10, scope: !6634)
!6642 = !DILocation(line: 723, column: 3, scope: !6634)
!6643 = distinct !DISubprogram(name: "ei_edge", scope: !135, file: !135, line: 752, type: !6644, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6646)
!6644 = !DISubroutineType(types: !6645)
!6645 = !{!1196, !6219}
!6646 = !{!6647}
!6647 = !DILocalVariable(name: "i", arg: 1, scope: !6643, file: !135, line: 752, type: !6219)
!6648 = !DILocation(line: 754, column: 10, scope: !6643)
!6649 = !DILocation(line: 754, column: 3, scope: !6643)
!6650 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !135, file: !135, line: 150, type: !6651, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6655)
!6651 = !DISubroutineType(types: !6652)
!6652 = !{!7, !6653}
!6653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6654, size: 64)
!6654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1189)
!6655 = !{!6656}
!6656 = !DILocalVariable(name: "vec_", arg: 1, scope: !6650, file: !135, line: 150, type: !6653)
!6657 = !DILocation(line: 0, scope: !6650)
!6658 = !DILocation(line: 150, column: 1, scope: !6650)
!6659 = distinct !DISubprogram(name: "ei_container", scope: !135, file: !135, line: 685, type: !6660, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6662)
!6660 = !DISubroutineType(types: !6661)
!6661 = !{!1184, !6219}
!6662 = !{!6663}
!6663 = !DILocalVariable(name: "i", arg: 1, scope: !6659, file: !135, line: 685, type: !6219)
!6664 = !DILocation(line: 687, column: 3, scope: !6659)
!6665 = !DILocation(line: 688, column: 10, scope: !6659)
!6666 = !DILocation(line: 688, column: 3, scope: !6659)
!6667 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !135, file: !135, line: 150, type: !6668, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6670)
!6668 = !DISubroutineType(types: !6669)
!6669 = !{!1196, !6653, !7}
!6670 = !{!6671, !6672}
!6671 = !DILocalVariable(name: "vec_", arg: 1, scope: !6667, file: !135, line: 150, type: !6653)
!6672 = !DILocalVariable(name: "ix_", arg: 2, scope: !6667, file: !135, line: 150, type: !7)
!6673 = !DILocation(line: 0, scope: !6667)
!6674 = !DILocation(line: 150, column: 1, scope: !6667)
