; ModuleID = 'tree-ssa-loop-ivopts.bc'
source_filename = "tree-ssa-loop-ivopts.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_sbitmap_heap = type { %struct.VEC_sbitmap_base }
%struct.VEC_sbitmap_base = type { i32, i32, [1 x %struct.simple_bitmap_def*] }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.iv = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i8, i8, i32 }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.ivopts_data = type { %struct.loop*, %struct.pointer_map_t*, i32, i32, %struct.version_info*, %struct.bitmap_head_def*, %struct.VEC_iv_use_p_heap*, %struct.VEC_iv_cand_p_heap*, %struct.bitmap_head_def*, i32, i8, i8 }
%struct.version_info = type { %union.tree_node*, %struct.iv*, i8, i32, i8 }
%struct.VEC_iv_use_p_heap = type { %struct.VEC_iv_use_p_base }
%struct.VEC_iv_use_p_base = type { i32, i32, [1 x %struct.iv_use*] }
%struct.iv_use = type { i32, i32, %struct.iv*, %union.gimple_statement_d*, %union.tree_node**, %struct.bitmap_head_def*, i32, %struct.cost_pair*, %struct.iv_cand* }
%struct.cost_pair = type { %struct.iv_cand*, %struct.comp_cost, %struct.bitmap_head_def*, %union.tree_node* }
%struct.comp_cost = type { i32, i32 }
%struct.iv_cand = type { i32, i8, i32, %union.gimple_statement_d*, %union.tree_node*, %union.tree_node*, %struct.iv*, i32, i32, %struct.iv_use*, %struct.bitmap_head_def* }
%struct.VEC_iv_cand_p_heap = type { %struct.VEC_iv_cand_p_base }
%struct.VEC_iv_cand_p_base = type { i32, i32, [1 x %struct.iv_cand*] }
%struct.VEC_address_cost_data_heap = type { %struct.VEC_address_cost_data_base }
%struct.VEC_address_cost_data_base = type { i32, i32, [1 x %struct.anon*] }
%struct.anon = type { i64, i64, [2 x [2 x [2 x [2 x i32]]]] }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.mbc_entry = type { i64, i32, i32 }
%struct.loop_iterator = type { %struct.VEC_int_heap*, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.iv_ca = type { i32, i32, %struct.cost_pair**, i32*, %struct.bitmap_head_def*, i32, i32, %struct.comp_cost, i32, i32*, %struct.comp_cost }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.tree_ssa_name = type { %struct.tree_common, %union.tree_node*, %union.gimple_statement_d*, i32, %struct.ptr_info_def*, %struct.ssa_use_operand_d }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.affine_iv = type { %union.tree_node*, %union.tree_node*, i8 }
%struct.tree_niter_desc = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.double_int, %struct.affine_iv, %union.tree_node*, i32 }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.ifs_ivopts_data = type { %struct.ivopts_data*, %union.gimple_statement_d*, %union.tree_node* }
%struct.pointer_set_t = type opaque
%struct.affine_tree_combination = type { %union.tree_node*, %struct.double_int, i32, [8 x %struct.aff_comb_elt], %union.tree_node* }
%struct.aff_comb_elt = type { %union.tree_node*, %struct.double_int }
%struct.iv_ca_delta = type { %struct.iv_use*, %struct.cost_pair*, %struct.cost_pair*, %struct.iv_ca_delta* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [10 x i8] c"ssa name \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"  type \00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"  base \00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"  step \00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"  invariant \00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"  base object \00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"  is a biv\0A\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"use %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"  generic\0A\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"  address\0A\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"  compare\0A\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"tree-ssa-loop-ivopts.c\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"  in statement \00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"  at position \00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"  related candidates \00", align 1
@.str.17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"candidate %d%s\0A\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c" (important)\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"  depends on \00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"  final value replacement\0A\00", align 1
@.str.22 = private unnamed_addr constant [32 x i8] c"  incremented before exit test\0A\00", align 1
@.str.23 = private unnamed_addr constant [29 x i8] c"  incremented before use %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [28 x i8] c"  incremented after use %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"  incremented at end\0A\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"  original biv\0A\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@multiply_by_cost.costs = internal unnamed_addr global %struct.htab* null, align 8, !dbg !0
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.27 = private unnamed_addr constant [37 x i8] c"Multiplication by %d in %s costs %d\0A\00", align 1
@mode_name = external dso_local local_unnamed_addr constant [87 x i8*], align 16
@multiplier_allowed_in_address_p.valid_mult_list = internal global %struct.VEC_sbitmap_heap* null, align 8, !dbg !2254
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str.28 = private unnamed_addr constant [23 x i8] c"  allowed multipliers:\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.30 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@decl_rtl_to_reset = internal global %struct.VEC_tree_heap* null, align 8, !dbg !2272
@.str.31 = private unnamed_addr constant [20 x i8] c"Processing loop %d\0A\00", align 1
@.str.32 = private unnamed_addr constant [40 x i8] c"  single exit %d -> %d, exit condition \00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.33 = private unnamed_addr constant [24 x i8] c"  number of iterations \00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"Induction variables:\0A\0A\00", align 1
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.36 = private unnamed_addr constant [8 x i8] c"Uses:\0A\0A\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.38 = private unnamed_addr constant [22 x i8] c" is invariant (%d)%s\0A\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c", eliminable\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@extract_cond_operands.const_iv = internal global %struct.iv zeroinitializer, align 8, !dbg !2274
@extract_cond_operands.zero = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !2296
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.41 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@.str.42 = private unnamed_addr constant [6 x i8] c"ivtmp\00", align 1
@fd_ivopts_data = internal unnamed_addr global %struct.ivopts_data* null, align 8, !dbg !2298
@.str.43 = private unnamed_addr constant [27 x i8] c"Candidate %d is important\0A\00", align 1
@.str.44 = private unnamed_addr constant [35 x i8] c"Candidate %d is related to use %d\0A\00", align 1
@target_spill_cost = external dso_local local_unnamed_addr global [2 x i32], align 4
@force_expr_to_var_cost.costs_initialized = internal unnamed_addr global i1 false, align 1, !dbg !2414
@force_expr_to_var_cost.integer_cost = internal unnamed_addr global [2 x i32] zeroinitializer, align 4, !dbg !2331
@force_expr_to_var_cost.symbol_cost = internal unnamed_addr global [2 x i32] zeroinitializer, align 4, !dbg !2333
@force_expr_to_var_cost.address_cost = internal unnamed_addr global [2 x i32] zeroinitializer, align 4, !dbg !2335
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@.str.45 = private unnamed_addr constant [9 x i8] c"test_var\00", align 1
@.str.46 = private unnamed_addr constant [34 x i8] c"force_expr_to_var_cost %s costs:\0A\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"speed\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"  integer %d\0A\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"  symbol %d\0A\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"  address %d\0A\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"  other %d\0A\00", align 1
@add_cost.costs = internal unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !2337
@.str.53 = private unnamed_addr constant [25 x i8] c"Addition in %s costs %d\0A\00", align 1
@get_address_cost.address_cost_data_list = internal global %struct.VEC_address_cost_data_heap* null, align 8, !dbg !2350
@ix86_isa_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.54 = private unnamed_addr constant [19 x i8] c"get_address_cost:\0A\00", align 1
@.str.55 = private unnamed_addr constant [20 x i8] c"  min offset %s %d\0A\00", align 1
@.str.56 = private unnamed_addr constant [20 x i8] c"  max offset %s %d\0A\00", align 1
@cse_not_expected = external dso_local local_unnamed_addr global i32, align 4
@.str.57 = private unnamed_addr constant [16 x i8] c"Address costs:\0A\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"sym + \00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"var + \00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"cst + \00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"rat * \00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"index costs %d\0A\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c"  May include autoinc/dec\0A\00", align 1
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@.str.64 = private unnamed_addr constant [18 x i8] c"Candidate costs:\0A\00", align 1
@.str.65 = private unnamed_addr constant [13 x i8] c"  cand\09cost\0A\00", align 1
@.str.66 = private unnamed_addr constant [9 x i8] c"  %d\09%d\0A\00", align 1
@.str.67 = private unnamed_addr constant [22 x i8] c"Use-candidate costs:\0A\00", align 1
@.str.68 = private unnamed_addr constant [9 x i8] c"Use %d:\0A\00", align 1
@.str.69 = private unnamed_addr constant [31 x i8] c"  cand\09cost\09compl.\09depends on\0A\00", align 1
@.str.70 = private unnamed_addr constant [12 x i8] c"  %d\09%d\09%d\09\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"Global costs:\0A\00", align 1
@.str.72 = private unnamed_addr constant [24 x i8] c"  target_avail_regs %d\0A\00", align 1
@target_avail_regs = external dso_local local_unnamed_addr global i32, align 4
@.str.73 = private unnamed_addr constant [22 x i8] c"  target_reg_cost %d\0A\00", align 1
@target_reg_cost = external dso_local local_unnamed_addr global [2 x i32], align 4
@.str.74 = private unnamed_addr constant [24 x i8] c"  target_spill_cost %d\0A\00", align 1
@.str.75 = private unnamed_addr constant [16 x i8] c"  regs_used %d\0A\00", align 1
@.str.76 = private unnamed_addr constant [18 x i8] c"  cost for size:\0A\00", align 1
@.str.77 = private unnamed_addr constant [12 x i8] c"  ivs\09cost\0A\00", align 1
@.str.78 = private unnamed_addr constant [39 x i8] c"Unable to substitute for ivs, failed.\0A\00", align 1
@.str.79 = private unnamed_addr constant [28 x i8] c"Initial set of candidates:\0A\00", align 1
@.str.80 = private unnamed_addr constant [14 x i8] c"Improved to:\0A\00", align 1
@.str.81 = private unnamed_addr constant [32 x i8] c"Final cost %d (complexity %d)\0A\0A\00", align 1
@.str.82 = private unnamed_addr constant [14 x i8] c"  invariants \00", align 1
@.str.83 = private unnamed_addr constant [27 x i8] c"  cost %d (complexity %d)\0A\00", align 1
@.str.84 = private unnamed_addr constant [14 x i8] c"  candidates \00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"%s%d\00", align 1
@.str.86 = private unnamed_addr constant [3 x i8] c", \00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2419 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2432, metadata !DIExpression()), !dbg !2434
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2433, metadata !DIExpression()), !dbg !2434
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2435
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2436
  ret i32 %call, !dbg !2437
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2438 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2442
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2443
  ret i32 %call, !dbg !2444
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2445 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2499, metadata !DIExpression()), !dbg !2500
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2501
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2501
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2501
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2501
  %cmp = icmp uge i8* %0, %1, !dbg !2501
  %conv1 = zext i1 %cmp to i64, !dbg !2501
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2501
  %tobool = icmp eq i64 %expval, 0, !dbg !2501
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2501

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2501
  br label %cond.end, !dbg !2501

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2501
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2501
  %2 = load i8, i8* %0, align 1, !dbg !2501
  %conv3 = zext i8 %2 to i32, !dbg !2501
  br label %cond.end, !dbg !2501

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2501
  ret i32 %cond, !dbg !2502
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2503 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2505, metadata !DIExpression()), !dbg !2506
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2507
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2507
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2507
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2507
  %cmp = icmp uge i8* %0, %1, !dbg !2507
  %conv1 = zext i1 %cmp to i64, !dbg !2507
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2507
  %tobool = icmp eq i64 %expval, 0, !dbg !2507
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2507

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2507
  br label %cond.end, !dbg !2507

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2507
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2507
  %2 = load i8, i8* %0, align 1, !dbg !2507
  %conv3 = zext i8 %2 to i32, !dbg !2507
  br label %cond.end, !dbg !2507

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2507
  ret i32 %cond, !dbg !2508
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2509 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2510
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2510
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2510
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2510
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2510
  %cmp = icmp uge i8* %1, %2, !dbg !2510
  %conv1 = zext i1 %cmp to i64, !dbg !2510
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2510
  %tobool = icmp eq i64 %expval, 0, !dbg !2510
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2510

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2510
  br label %cond.end, !dbg !2510

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2510
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2510
  %3 = load i8, i8* %1, align 1, !dbg !2510
  %conv3 = zext i8 %3 to i32, !dbg !2510
  br label %cond.end, !dbg !2510

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2510
  ret i32 %cond, !dbg !2511
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2512 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2516, metadata !DIExpression()), !dbg !2517
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2518
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2519
  ret i32 %call, !dbg !2520
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2521 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2525, metadata !DIExpression()), !dbg !2527
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2526, metadata !DIExpression()), !dbg !2527
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2528
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2528
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2528
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2528
  %cmp = icmp uge i8* %0, %1, !dbg !2528
  %conv1 = zext i1 %cmp to i64, !dbg !2528
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2528
  %tobool = icmp eq i64 %expval, 0, !dbg !2528
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2528

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2528
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2528
  br label %cond.end, !dbg !2528

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2528
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2528
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2528
  store i8 %conv2, i8* %0, align 1, !dbg !2528
  %conv6 = and i32 %__c, 255, !dbg !2528
  br label %cond.end, !dbg !2528

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2528
  ret i32 %cond, !dbg !2529
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2530 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2532, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2533, metadata !DIExpression()), !dbg !2534
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2535
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2535
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2535
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2535
  %cmp = icmp uge i8* %0, %1, !dbg !2535
  %conv1 = zext i1 %cmp to i64, !dbg !2535
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2535
  %tobool = icmp eq i64 %expval, 0, !dbg !2535
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2535

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2535
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2535
  br label %cond.end, !dbg !2535

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2535
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2535
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2535
  store i8 %conv2, i8* %0, align 1, !dbg !2535
  %conv6 = and i32 %__c, 255, !dbg !2535
  br label %cond.end, !dbg !2535

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2535
  ret i32 %cond, !dbg !2536
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2537 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2539, metadata !DIExpression()), !dbg !2540
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2541
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2541
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2541
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2541
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2541
  %cmp = icmp uge i8* %1, %2, !dbg !2541
  %conv1 = zext i1 %cmp to i64, !dbg !2541
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2541
  %tobool = icmp eq i64 %expval, 0, !dbg !2541
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2541

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2541
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2541
  br label %cond.end, !dbg !2541

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2541
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2541
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2541
  store i8 %conv4, i8* %1, align 1, !dbg !2541
  %conv6 = and i32 %__c, 255, !dbg !2541
  br label %cond.end, !dbg !2541

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2541
  ret i32 %cond, !dbg !2542
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2543 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2549, metadata !DIExpression()), !dbg !2552
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2550, metadata !DIExpression()), !dbg !2552
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2551, metadata !DIExpression()), !dbg !2552
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2553
  ret i64 %call, !dbg !2554
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2555 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2557, metadata !DIExpression()), !dbg !2558
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2559
  %0 = load i32, i32* %_flags, align 8, !dbg !2559
  %and = lshr i32 %0, 4, !dbg !2559
  %and.lobit = and i32 %and, 1, !dbg !2559
  ret i32 %and.lobit, !dbg !2560
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2561 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2563, metadata !DIExpression()), !dbg !2564
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2565
  %0 = load i32, i32* %_flags, align 8, !dbg !2565
  %and = lshr i32 %0, 5, !dbg !2565
  %and.lobit = and i32 %and, 1, !dbg !2565
  ret i32 %and.lobit, !dbg !2566
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2567 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2570, metadata !DIExpression()), !dbg !2571
  %__c.off = add i32 %__c, 128, !dbg !2572
  %0 = icmp ult i32 %__c.off, 384, !dbg !2572
  br i1 %0, label %cond.true, label %cond.end, !dbg !2572

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2573
  %1 = load i32*, i32** %call, align 8, !dbg !2574
  %idxprom = sext i32 %__c to i64, !dbg !2575
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2575
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2575
  br label %cond.end, !dbg !2576

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2576
  ret i32 %cond, !dbg !2577
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2578 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2580, metadata !DIExpression()), !dbg !2581
  %__c.off = add i32 %__c, 128, !dbg !2582
  %0 = icmp ult i32 %__c.off, 384, !dbg !2582
  br i1 %0, label %cond.true, label %cond.end, !dbg !2582

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2583
  %1 = load i32*, i32** %call, align 8, !dbg !2584
  %idxprom = sext i32 %__c to i64, !dbg !2585
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2585
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2585
  br label %cond.end, !dbg !2586

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2586
  ret i32 %cond, !dbg !2587
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2588 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2593, metadata !DIExpression()), !dbg !2594
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2595
  %conv = trunc i64 %call to i32, !dbg !2596
  ret i32 %conv, !dbg !2597
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2598 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2602, metadata !DIExpression()), !dbg !2603
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2604
  ret i64 %call, !dbg !2605
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2606 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2611, metadata !DIExpression()), !dbg !2612
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2613
  ret i64 %call, !dbg !2614
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2615 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2621, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2622, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2623, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2624, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2625, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.value(metadata i64 0, metadata !2626, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2627, metadata !DIExpression()), !dbg !2631
  br label %while.cond, !dbg !2632

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2633
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2631
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2627, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2626, metadata !DIExpression()), !dbg !2631
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2634
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2632

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2635
  %div = lshr i64 %add, 1, !dbg !2637
  call void @llvm.dbg.value(metadata i64 %div, metadata !2628, metadata !DIExpression()), !dbg !2631
  %mul = mul i64 %div, %__size, !dbg !2638
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2639
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2629, metadata !DIExpression()), !dbg !2631
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2640
  call void @llvm.dbg.value(metadata i32 %call, metadata !2630, metadata !DIExpression()), !dbg !2631
  %cmp1 = icmp slt i32 %call, 0, !dbg !2641
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2643

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2644
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2646

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2647
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2626, metadata !DIExpression()), !dbg !2631
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2631
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2631
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2627, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2626, metadata !DIExpression()), !dbg !2631
  br label %while.cond, !dbg !2632, !llvm.loop !2648

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2631
  ret i8* %retval.0, !dbg !2650
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2651 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2657, metadata !DIExpression()), !dbg !2658
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2659
  ret double %call, !dbg !2660
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2661 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2670, metadata !DIExpression()), !dbg !2673
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2671, metadata !DIExpression()), !dbg !2673
  call void @llvm.dbg.value(metadata i32 %base, metadata !2672, metadata !DIExpression()), !dbg !2673
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2674
  ret i64 %call, !dbg !2675
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2676 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2682, metadata !DIExpression()), !dbg !2685
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2683, metadata !DIExpression()), !dbg !2685
  call void @llvm.dbg.value(metadata i32 %base, metadata !2684, metadata !DIExpression()), !dbg !2685
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2686
  ret i64 %call, !dbg !2687
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2688 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2699, metadata !DIExpression()), !dbg !2702
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2700, metadata !DIExpression()), !dbg !2702
  call void @llvm.dbg.value(metadata i32 %base, metadata !2701, metadata !DIExpression()), !dbg !2702
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2703
  ret i64 %call, !dbg !2704
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2705 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2709, metadata !DIExpression()), !dbg !2712
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2710, metadata !DIExpression()), !dbg !2712
  call void @llvm.dbg.value(metadata i32 %base, metadata !2711, metadata !DIExpression()), !dbg !2712
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2713
  ret i64 %call, !dbg !2714
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2715 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2755, metadata !DIExpression()), !dbg !2757
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2756, metadata !DIExpression()), !dbg !2757
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2758
  ret i32 %call, !dbg !2759
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2760 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2762, metadata !DIExpression()), !dbg !2764
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2763, metadata !DIExpression()), !dbg !2764
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2765
  ret i32 %call, !dbg !2766
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2767 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2771, metadata !DIExpression()), !dbg !2773
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2772, metadata !DIExpression()), !dbg !2773
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2774
  ret i32 %call, !dbg !2775
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2776 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2780, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2781, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2782, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2783, metadata !DIExpression()), !dbg !2784
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2785
  ret i32 %call, !dbg !2786
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2787 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2791, metadata !DIExpression()), !dbg !2794
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2792, metadata !DIExpression()), !dbg !2794
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2793, metadata !DIExpression()), !dbg !2794
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2793, metadata !DIExpression(DW_OP_deref)), !dbg !2794
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2795
  ret i32 %call, !dbg !2796
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2797 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2801, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2802, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2803, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2804, metadata !DIExpression()), !dbg !2805
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2804, metadata !DIExpression(DW_OP_deref)), !dbg !2805
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2806
  ret i32 %call, !dbg !2807
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2808 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2832, metadata !DIExpression()), !dbg !2834
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2833, metadata !DIExpression()), !dbg !2834
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2835
  ret i32 %call, !dbg !2836
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2837 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2839, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2840, metadata !DIExpression()), !dbg !2841
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2842
  ret i32 %call, !dbg !2843
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2844 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2848, metadata !DIExpression()), !dbg !2850
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2849, metadata !DIExpression()), !dbg !2850
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2851
  ret i32 %call, !dbg !2852
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2853 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2857, metadata !DIExpression()), !dbg !2861
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2858, metadata !DIExpression()), !dbg !2861
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2859, metadata !DIExpression()), !dbg !2861
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2860, metadata !DIExpression()), !dbg !2861
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2862
  ret i32 %call, !dbg !2863
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.edge_def* @single_dom_exit(%struct.loop* %loop) local_unnamed_addr #5 !dbg !2864 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2868, metadata !DIExpression()), !dbg !2870
  %call = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !2871
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !2869, metadata !DIExpression()), !dbg !2870
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !2872
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2874

if.end:                                           ; preds = %entry
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !2875
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !2875
  %call1 = tail call zeroext i8 @just_once_each_iteration_p(%struct.loop* %loop, %struct.basic_block_def* %0) #6, !dbg !2877
  %tobool2 = icmp eq i8 %call1, 0, !dbg !2877
  %call. = select i1 %tobool2, %struct.edge_def* null, %struct.edge_def* %call, !dbg !2870
  br label %cleanup, !dbg !2870

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.edge_def* [ null, %entry ], [ %call., %if.end ], !dbg !2870
  ret %struct.edge_def* %retval.0, !dbg !2878
}

declare dso_local %struct.edge_def* @single_exit(%struct.loop*) local_unnamed_addr #2

declare dso_local zeroext i8 @just_once_each_iteration_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dump_iv(%struct._IO_FILE* %file, %struct.iv* %iv) local_unnamed_addr #5 !dbg !2879 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2883, metadata !DIExpression()), !dbg !2885
  call void @llvm.dbg.value(metadata %struct.iv* %iv, metadata !2884, metadata !DIExpression()), !dbg !2885
  %ssa_name = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 3, !dbg !2886
  %0 = load %union.tree_node*, %union.tree_node** %ssa_name, align 8, !dbg !2886
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !2888
  br i1 %tobool, label %if.end, label %if.then, !dbg !2889

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #6, !dbg !2890
  %1 = load %union.tree_node*, %union.tree_node** %ssa_name, align 8, !dbg !2892
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %1, i32 2) #6, !dbg !2893
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2894
  br label %if.end, !dbg !2895

if.end:                                           ; preds = %entry, %if.then
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2896
  %2 = bitcast %struct.iv* %iv to %struct.tree_common**, !dbg !2897
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !2897
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !2897
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2897
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %4, i32 2) #6, !dbg !2898
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2899
  %step = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 2, !dbg !2900
  %5 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !2900
  %tobool5 = icmp eq %union.tree_node* %5, null, !dbg !2902
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !2903

if.then6:                                         ; preds = %if.end
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !2904
  %base8 = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 0, !dbg !2906
  %6 = load %union.tree_node*, %union.tree_node** %base8, align 8, !dbg !2906
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %6, i32 2) #6, !dbg !2907
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2908
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2909
  %7 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !2910
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %7, i32 2) #6, !dbg !2911
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2912
  br label %if.end16, !dbg !2913

if.else:                                          ; preds = %if.end
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2914
  %base14 = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 0, !dbg !2916
  %8 = load %union.tree_node*, %union.tree_node** %base14, align 8, !dbg !2916
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %8, i32 2) #6, !dbg !2917
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2918
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then6
  %base_object = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 1, !dbg !2919
  %9 = load %union.tree_node*, %union.tree_node** %base_object, align 8, !dbg !2919
  %tobool17 = icmp eq %union.tree_node* %9, null, !dbg !2921
  br i1 %tobool17, label %if.end22, label %if.then18, !dbg !2922

if.then18:                                        ; preds = %if.end16
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !2923
  %10 = load %union.tree_node*, %union.tree_node** %base_object, align 8, !dbg !2925
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %10, i32 2) #6, !dbg !2926
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2927
  br label %if.end22, !dbg !2928

if.end22:                                         ; preds = %if.end16, %if.then18
  %biv_p = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 4, !dbg !2929
  %11 = load i8, i8* %biv_p, align 8, !dbg !2929
  %tobool23 = icmp eq i8 %11, 0, !dbg !2931
  br i1 %tobool23, label %if.end26, label %if.then24, !dbg !2932

if.then24:                                        ; preds = %if.end22
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2933
  br label %if.end26, !dbg !2933

if.end26:                                         ; preds = %if.end22, %if.then24
  ret void, !dbg !2934
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dump_use(%struct._IO_FILE* %file, %struct.iv_use* %use) local_unnamed_addr #5 !dbg !2935 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2939, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !2940, metadata !DIExpression()), !dbg !2941
  %id = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 0, !dbg !2942
  %0 = load i32, i32* %id, align 8, !dbg !2942
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i32 %0) #6, !dbg !2943
  %type = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 1, !dbg !2944
  %1 = load i32, i32* %type, align 4, !dbg !2944
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb4
  ], !dbg !2945

sw.bb:                                            ; preds = %entry
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2946
  br label %sw.epilog, !dbg !2948

sw.bb2:                                           ; preds = %entry
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !2949
  br label %sw.epilog, !dbg !2950

sw.bb4:                                           ; preds = %entry
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !2951
  br label %sw.epilog, !dbg !2952

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 455, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !2953
  br label %sw.epilog, !dbg !2954

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb2, %sw.bb
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !2955
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !2956
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !2956
  tail call void @print_gimple_stmt(%struct._IO_FILE* %file, %union.gimple_statement_d* %2, i32 0, i32 0) #6, !dbg !2957
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2958
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !2959
  %op_p = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 4, !dbg !2960
  %3 = load %union.tree_node**, %union.tree_node*** %op_p, align 8, !dbg !2960
  %tobool = icmp eq %union.tree_node** %3, null, !dbg !2962
  br i1 %tobool, label %if.end, label %if.then, !dbg !2963

if.then:                                          ; preds = %sw.epilog
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !2964
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %4, i32 2) #6, !dbg !2965
  br label %if.end, !dbg !2965

if.end:                                           ; preds = %sw.epilog, %if.then
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2966
  %iv = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 2, !dbg !2967
  %5 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !2967
  tail call void @dump_iv(%struct._IO_FILE* %file, %struct.iv* %5) #7, !dbg !2968
  %related_cands = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 5, !dbg !2969
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %related_cands, align 8, !dbg !2969
  %tobool11 = icmp eq %struct.bitmap_head_def* %6, null, !dbg !2971
  br i1 %tobool11, label %if.end15, label %if.then12, !dbg !2972

if.then12:                                        ; preds = %if.end
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !2973
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %related_cands, align 8, !dbg !2975
  tail call void @bitmap_print(%struct._IO_FILE* %file, %struct.bitmap_head_def* %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2975
  br label %if.end15, !dbg !2976

if.end15:                                         ; preds = %if.end, %if.then12
  ret void, !dbg !2977
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

declare dso_local void @bitmap_print(%struct._IO_FILE*, %struct.bitmap_head_def*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dump_uses(%struct._IO_FILE* %file, %struct.ivopts_data* %data) local_unnamed_addr #5 !dbg !2978 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2982, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !2983, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.value(metadata i32 0, metadata !2984, metadata !DIExpression()), !dbg !2986
  br label %for.cond, !dbg !2987

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2989
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2984, metadata !DIExpression()), !dbg !2986
  %call = tail call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !2990
  %cmp = icmp ult i32 %i.0, %call, !dbg !2992
  br i1 %cmp, label %for.body, label %for.end, !dbg !2993

for.body:                                         ; preds = %for.cond
  %call1 = tail call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !2994
  call void @llvm.dbg.value(metadata %struct.iv_use* %call1, metadata !2985, metadata !DIExpression()), !dbg !2986
  tail call void @dump_use(%struct._IO_FILE* %file, %struct.iv_use* %call1) #7, !dbg !2996
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2997
  %inc = add i32 %i.0, 1, !dbg !2998
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2984, metadata !DIExpression()), !dbg !2986
  br label %for.cond, !dbg !2999, !llvm.loop !3000

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3002
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) unnamed_addr #0 !dbg !3003 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !3007, metadata !DIExpression()), !dbg !3008
  %iv_uses = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 6, !dbg !3009
  %0 = load %struct.VEC_iv_use_p_heap*, %struct.VEC_iv_use_p_heap** %iv_uses, align 8, !dbg !3009
  %tobool = icmp eq %struct.VEC_iv_use_p_heap* %0, null, !dbg !3009
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3009

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_iv_use_p_heap, %struct.VEC_iv_use_p_heap* %0, i64 0, i32 0, !dbg !3009
  br label %cond.end, !dbg !3009

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_iv_use_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3009
  %call = tail call fastcc i32 @VEC_iv_use_p_base_length(%struct.VEC_iv_use_p_base* %cond) #7, !dbg !3009
  ret i32 %call, !dbg !3010
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i) unnamed_addr #0 !dbg !3011 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !3015, metadata !DIExpression()), !dbg !3017
  call void @llvm.dbg.value(metadata i32 %i, metadata !3016, metadata !DIExpression()), !dbg !3017
  %iv_uses = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 6, !dbg !3018
  %0 = load %struct.VEC_iv_use_p_heap*, %struct.VEC_iv_use_p_heap** %iv_uses, align 8, !dbg !3018
  %tobool = icmp eq %struct.VEC_iv_use_p_heap* %0, null, !dbg !3018
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3018

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_iv_use_p_heap, %struct.VEC_iv_use_p_heap* %0, i64 0, i32 0, !dbg !3018
  br label %cond.end, !dbg !3018

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_iv_use_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3018
  %call = tail call fastcc %struct.iv_use* @VEC_iv_use_p_base_index(%struct.VEC_iv_use_p_base* %cond, i32 %i) #7, !dbg !3018
  ret %struct.iv_use* %call, !dbg !3019
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_cand(%struct._IO_FILE* %file, %struct.iv_cand* %cand) local_unnamed_addr #5 !dbg !3020 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3024, metadata !DIExpression()), !dbg !3027
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !3025, metadata !DIExpression()), !dbg !3027
  %iv1 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 6, !dbg !3028
  %0 = load %struct.iv*, %struct.iv** %iv1, align 8, !dbg !3028
  call void @llvm.dbg.value(metadata %struct.iv* %0, metadata !3026, metadata !DIExpression()), !dbg !3027
  %id = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 0, !dbg !3029
  %1 = load i32, i32* %id, align 8, !dbg !3029
  %important = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 1, !dbg !3030
  %2 = load i8, i8* %important, align 4, !dbg !3030
  %tobool = icmp eq i8 %2, 0, !dbg !3031
  %cond = select i1 %tobool, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), !dbg !3031
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i32 %1, i8* %cond) #6, !dbg !3032
  %depends_on = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 10, !dbg !3033
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on, align 8, !dbg !3033
  %tobool2 = icmp eq %struct.bitmap_head_def* %3, null, !dbg !3035
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3036

if.then:                                          ; preds = %entry
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !3037
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on, align 8, !dbg !3039
  tail call void @bitmap_print(%struct._IO_FILE* %file, %struct.bitmap_head_def* %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3039
  br label %if.end, !dbg !3040

if.end:                                           ; preds = %entry, %if.then
  %tobool5 = icmp eq %struct.iv* %0, null, !dbg !3041
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !3043

if.then6:                                         ; preds = %if.end
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !3044
  br label %cleanup.cont, !dbg !3046

if.end8:                                          ; preds = %if.end
  %pos = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 2, !dbg !3047
  %5 = load i32, i32* %pos, align 8, !dbg !3047
  switch i32 %5, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb10
    i32 3, label %sw.bb13
    i32 1, label %sw.bb17
    i32 4, label %sw.bb19
  ], !dbg !3048

sw.bb:                                            ; preds = %if.end8
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !3049
  br label %sw.epilog, !dbg !3051

sw.bb10:                                          ; preds = %if.end8
  %ainc_use = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 9, !dbg !3052
  %6 = load %struct.iv_use*, %struct.iv_use** %ainc_use, align 8, !dbg !3052
  %id11 = getelementptr inbounds %struct.iv_use, %struct.iv_use* %6, i64 0, i32 0, !dbg !3053
  %7 = load i32, i32* %id11, align 8, !dbg !3053
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i64 0, i64 0), i32 %7) #6, !dbg !3054
  br label %sw.epilog, !dbg !3055

sw.bb13:                                          ; preds = %if.end8
  %ainc_use14 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 9, !dbg !3056
  %8 = load %struct.iv_use*, %struct.iv_use** %ainc_use14, align 8, !dbg !3056
  %id15 = getelementptr inbounds %struct.iv_use, %struct.iv_use* %8, i64 0, i32 0, !dbg !3057
  %9 = load i32, i32* %id15, align 8, !dbg !3057
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.24, i64 0, i64 0), i32 %9) #6, !dbg !3058
  br label %sw.epilog, !dbg !3059

sw.bb17:                                          ; preds = %if.end8
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !3060
  br label %sw.epilog, !dbg !3061

sw.bb19:                                          ; preds = %if.end8
  %call20 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !3062
  br label %sw.epilog, !dbg !3063

sw.epilog:                                        ; preds = %if.end8, %sw.bb19, %sw.bb17, %sw.bb13, %sw.bb10, %sw.bb
  tail call void @dump_iv(%struct._IO_FILE* %file, %struct.iv* nonnull %0) #7, !dbg !3064
  br label %cleanup.cont, !dbg !3065

cleanup.cont:                                     ; preds = %if.then6, %sw.epilog
  ret void, !dbg !3065
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @contains_abnormal_ssa_name_p(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !3066 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3070, metadata !DIExpression()), !dbg !3073
  %tobool = icmp eq %union.tree_node* %expr, null, !dbg !3074
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3076

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3077
  %bf.load = load i64, i64* %0, align 8, !dbg !3077
  %1 = trunc i64 %bf.load to i32, !dbg !3077
  %bf.cast = and i32 %1, 65535, !dbg !3077
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !3071, metadata !DIExpression()), !dbg !3073
  %idxprom = zext i32 %bf.cast to i64, !dbg !3078
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !3078
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3078
  call void @llvm.dbg.value(metadata i32 %2, metadata !3072, metadata !DIExpression()), !dbg !3073
  %trunc = trunc i64 %bf.load to i16, !dbg !3079
  switch i16 %trunc, label %lor.lhs.false [
    i16 141, label %if.then1
    i16 23, label %cleanup
  ], !dbg !3079

if.then1:                                         ; preds = %if.end
  %bf.cast51 = lshr i64 %bf.load, 22, !dbg !3080
  %3 = trunc i64 %bf.cast51 to i8, !dbg !3080
  %4 = and i8 %3, 1, !dbg !3080
  br label %cleanup, !dbg !3082

lor.lhs.false:                                    ; preds = %if.end
  %call = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %expr) #6, !dbg !3083
  %tobool12 = icmp eq i8 %call, 0, !dbg !3083
  br i1 %tobool12, label %if.end14, label %cleanup, !dbg !3085

if.end14:                                         ; preds = %lor.lhs.false
  %cmp15 = icmp eq i32 %bf.cast, 121, !dbg !3086
  br i1 %cmp15, label %if.then17, label %if.end22, !dbg !3088

if.then17:                                        ; preds = %if.end14
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3089
  %call19 = tail call zeroext i8 @for_each_index(%union.tree_node** nonnull %operands, i8 (%union.tree_node*, %union.tree_node**, i8*)* nonnull @idx_contains_abnormal_ssa_name_p, i8* null) #6, !dbg !3090
  %tobool20 = icmp eq i8 %call19, 0, !dbg !3091
  %conv21 = zext i1 %tobool20 to i8, !dbg !3091
  br label %cleanup, !dbg !3092

if.end22:                                         ; preds = %if.end14
  switch i32 %2, label %sw.default [
    i32 7, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb30
  ], !dbg !3093

sw.bb:                                            ; preds = %if.end22, %if.end22
  %operands24 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3094
  %arrayidx25 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands24, i64 1, !dbg !3094
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8, !dbg !3094
  %call26 = tail call zeroext i8 @contains_abnormal_ssa_name_p(%union.tree_node* %5) #7, !dbg !3097
  %tobool27 = icmp eq i8 %call26, 0, !dbg !3097
  br i1 %tobool27, label %sw.bb30, label %cleanup, !dbg !3098

sw.bb30:                                          ; preds = %sw.bb, %if.end22
  %operands32 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3099
  %6 = load %union.tree_node*, %union.tree_node** %operands32, align 8, !dbg !3099
  %call34 = tail call zeroext i8 @contains_abnormal_ssa_name_p(%union.tree_node* %6) #7, !dbg !3101
  %tobool35 = icmp eq i8 %call34, 0, !dbg !3101
  br i1 %tobool35, label %sw.epilog, label %cleanup, !dbg !3102

sw.default:                                       ; preds = %if.end22
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 703, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3103
  br label %sw.epilog, !dbg !3104

sw.epilog:                                        ; preds = %sw.bb30, %sw.default
  br label %cleanup, !dbg !3105

cleanup:                                          ; preds = %sw.bb, %sw.bb30, %lor.lhs.false, %entry, %if.end, %sw.epilog, %if.then17, %if.then1
  %retval.0 = phi i8 [ %4, %if.then1 ], [ %conv21, %if.then17 ], [ 0, %sw.epilog ], [ 0, %entry ], [ 0, %if.end ], [ 0, %lor.lhs.false ], [ 1, %sw.bb ], [ 1, %sw.bb30 ], !dbg !3073
  ret i8 %retval.0, !dbg !3106
}

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @for_each_index(%union.tree_node**, i8 (%union.tree_node*, %union.tree_node**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @idx_contains_abnormal_ssa_name_p(%union.tree_node* %base, %union.tree_node** %index, i8* %data) #5 !dbg !3107 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !3111, metadata !DIExpression()), !dbg !3114
  call void @llvm.dbg.value(metadata %union.tree_node** %index, metadata !3112, metadata !DIExpression()), !dbg !3114
  call void @llvm.dbg.value(metadata i8* %data, metadata !3113, metadata !DIExpression()), !dbg !3114
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3115
  %bf.load = load i64, i64* %0, align 8, !dbg !3115
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3117
  %cmp = icmp eq i64 %bf.cast1, 45, !dbg !3117
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3118

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast1, 46, !dbg !3119
  br i1 %cmp6, label %if.then, label %if.end15, !dbg !3120

if.then:                                          ; preds = %lor.lhs.false, %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3121
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !3121
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3121
  %call = tail call fastcc zeroext i8 @abnormal_ssa_name_p(%union.tree_node* %1) #7, !dbg !3124
  %tobool = icmp eq i8 %call, 0, !dbg !3124
  br i1 %tobool, label %if.end, label %return, !dbg !3125

if.end:                                           ; preds = %if.then
  %arrayidx10 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !3126
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx10, align 8, !dbg !3126
  %call11 = tail call fastcc zeroext i8 @abnormal_ssa_name_p(%union.tree_node* %2) #7, !dbg !3128
  %tobool12 = icmp eq i8 %call11, 0, !dbg !3128
  br i1 %tobool12, label %if.end15, label %return, !dbg !3129

if.end15:                                         ; preds = %if.end, %lor.lhs.false
  %3 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !3130
  %call16 = tail call fastcc zeroext i8 @abnormal_ssa_name_p(%union.tree_node* %3) #7, !dbg !3131
  %tobool17 = icmp eq i8 %call16, 0, !dbg !3132
  %conv = zext i1 %tobool17 to i8, !dbg !3132
  br label %return, !dbg !3133

return:                                           ; preds = %if.end, %if.then, %if.end15
  %retval.0 = phi i8 [ %conv, %if.end15 ], [ 0, %if.then ], [ 0, %if.end ], !dbg !3114
  ret i8 %retval.0, !dbg !3134
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %loop, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !3135 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3139, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3140, metadata !DIExpression()), !dbg !3144
  %call = tail call fastcc i32 @loop_depth(%struct.loop* %loop) #7, !dbg !3145
  %cmp = icmp eq i32 %call, 0, !dbg !3145
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3145

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 1290, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3145
  br label %cond.end, !dbg !3145

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %expr) #6, !dbg !3146
  %tobool = icmp eq i8 %call1, 0, !dbg !3146
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3148

if.end:                                           ; preds = %cond.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3149
  %bf.load = load i64, i64* %0, align 8, !dbg !3149
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3151
  %cmp2 = icmp eq i64 %bf.cast1, 141, !dbg !3151
  br i1 %cmp2, label %if.then3, label %if.end10, !dbg !3152

if.then3:                                         ; preds = %if.end
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3153
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !3153
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !3153
  %call4 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %2) #7, !dbg !3155
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call4, metadata !3141, metadata !DIExpression()), !dbg !3144
  %tobool5 = icmp eq %struct.basic_block_def* %call4, null, !dbg !3156
  br i1 %tobool5, label %if.end9, label %land.lhs.true, !dbg !3158

land.lhs.true:                                    ; preds = %if.then3
  %call6 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %loop, %struct.basic_block_def* nonnull %call4) #6, !dbg !3159
  %tobool7 = icmp eq i8 %call6, 0, !dbg !3159
  br i1 %tobool7, label %if.end9, label %cleanup, !dbg !3160

if.end9:                                          ; preds = %land.lhs.true, %if.then3
  br label %cleanup, !dbg !3161

if.end10:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast1, !dbg !3162
  %3 = load i32, i32* %arrayidx, align 4, !dbg !3162
  %cmp15 = icmp ugt i32 %3, 3, !dbg !3162
  br i1 %cmp15, label %land.lhs.true17, label %cleanup, !dbg !3162

land.lhs.true17:                                  ; preds = %if.end10
  %cmp24 = icmp ult i32 %3, 11, !dbg !3162
  br i1 %cmp24, label %if.end27, label %cleanup, !dbg !3164

if.end27:                                         ; preds = %land.lhs.true17
  %call28 = tail call fastcc i32 @tree_operand_length(%union.tree_node* %expr) #7, !dbg !3165
  call void @llvm.dbg.value(metadata i32 %call28, metadata !3143, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.value(metadata i32 0, metadata !3142, metadata !DIExpression()), !dbg !3144
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3166
  %wide.trip.count = zext i32 %call28 to i64, !dbg !3170
  br label %for.cond, !dbg !3171

for.cond:                                         ; preds = %for.inc, %if.end27
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end27 ], !dbg !3172
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3142, metadata !DIExpression()), !dbg !3144
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !3170
  br i1 %exitcond, label %cleanup.loopexit, label %for.body, !dbg !3173

for.body:                                         ; preds = %for.cond
  %arrayidx32 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %indvars.iv, !dbg !3166
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx32, align 8, !dbg !3166
  %call33 = tail call zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %loop, %union.tree_node* %4) #7, !dbg !3174
  %tobool34 = icmp eq i8 %call33, 0, !dbg !3174
  br i1 %tobool34, label %cleanup.loopexit, label %for.inc, !dbg !3175

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3176
  br label %for.cond, !dbg !3177, !llvm.loop !3178

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i8 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup, !dbg !3180

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true, %cond.end, %if.end10, %land.lhs.true17, %if.end9
  %retval.0 = phi i8 [ 1, %if.end9 ], [ 1, %cond.end ], [ 0, %land.lhs.true ], [ 0, %land.lhs.true17 ], [ 0, %if.end10 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !3144
  ret i8 %retval.0, !dbg !3180
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @loop_depth(%struct.loop* %loop) unnamed_addr #0 !dbg !3181 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3187, metadata !DIExpression()), !dbg !3188
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !3189
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3189
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !3189
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3189

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !3189
  br label %cond.end, !dbg !3189

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3189
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !3189
  ret i32 %call, !dbg !3190
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3191 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3196, metadata !DIExpression()), !dbg !3197
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !3198
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3198
  ret %struct.basic_block_def* %0, !dbg !3199
}

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @tree_operand_length(%union.tree_node* %node) unnamed_addr #0 !dbg !3200 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !3205, metadata !DIExpression()), !dbg !3206
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3207
  %bf.load = load i64, i64* %0, align 8, !dbg !3207
  %bf.cast = and i64 %bf.load, 65535, !dbg !3207
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3207
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3207
  %cmp = icmp eq i32 %1, 9, !dbg !3207
  br i1 %cmp, label %if.then, label %if.else, !dbg !3209

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3210
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !3210
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !3210
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !3210
  %4 = load i64, i64* %low, align 8, !dbg !3210
  %conv = trunc i64 %4 to i32, !dbg !3210
  br label %return, !dbg !3211

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !3212
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !3212
  %conv9 = zext i8 %5 to i32, !dbg !3212
  br label %return, !dbg !3213

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv9, %if.else ], !dbg !3214
  ret i32 %retval.0, !dbg !3215
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @stmt_invariant_in_loop_p(%struct.loop* %loop, %union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !3216 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3220, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3221, metadata !DIExpression()), !dbg !3228
  %call = tail call fastcc i32 @loop_depth(%struct.loop* %loop) #7, !dbg !3229
  %cmp = icmp eq i32 %call, 0, !dbg !3229
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3229

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 1326, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3229
  br label %cond.end, !dbg !3229

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !3230
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3223, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i32 0, metadata !3222, metadata !DIExpression()), !dbg !3228
  br label %for.cond, !dbg !3231

for.cond:                                         ; preds = %for.inc, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.inc ], !dbg !3232
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3222, metadata !DIExpression()), !dbg !3228
  %call2 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %stmt) #7, !dbg !3233
  %cmp3 = icmp ult i32 %i.0, %call2, !dbg !3234
  br i1 %cmp3, label %for.body, label %cleanup7, !dbg !3235

for.body:                                         ; preds = %for.cond
  %call4 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %stmt, i32 %i.0) #7, !dbg !3236
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !3224, metadata !DIExpression()), !dbg !3237
  %cmp5 = icmp eq %union.tree_node* %call4, %call1, !dbg !3238
  br i1 %cmp5, label %if.end, label %land.lhs.true, !dbg !3240

land.lhs.true:                                    ; preds = %for.body
  %call6 = tail call zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %loop, %union.tree_node* %call4) #7, !dbg !3241
  %tobool = icmp eq i8 %call6, 0, !dbg !3241
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3242

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %cleanup, !dbg !3243

cleanup:                                          ; preds = %land.lhs.true, %if.end
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %land.lhs.true ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup7

for.inc:                                          ; preds = %cleanup
  %inc = add i32 %i.0, 1, !dbg !3244
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3222, metadata !DIExpression()), !dbg !3228
  br label %for.cond, !dbg !3245, !llvm.loop !3246

cleanup7:                                         ; preds = %for.cond, %cleanup
  %retval.2 = phi i8 [ 0, %cleanup ], [ 1, %for.cond ]
  ret i8 %retval.2, !dbg !3248
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3249 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3253, metadata !DIExpression()), !dbg !3254
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !3255
  %0 = load i32, i32* %num_ops, align 4, !dbg !3255
  ret i32 %0, !dbg !3256
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !3257 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3261, metadata !DIExpression()), !dbg !3263
  call void @llvm.dbg.value(metadata i32 %i, metadata !3262, metadata !DIExpression()), !dbg !3263
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !3264
  %tobool = icmp eq i8 %call, 0, !dbg !3264
  br i1 %tobool, label %return, label %if.then, !dbg !3266

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !3267
  %idxprom = zext i32 %i to i64, !dbg !3267
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !3267
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3267
  br label %return, !dbg !3269

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !3270
  ret %union.tree_node* %retval.0, !dbg !3271
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_int_cst_sign_bit(%union.tree_node* %t) local_unnamed_addr #5 !dbg !3272 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3274, metadata !DIExpression()), !dbg !3277
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3278
  %0 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !3278
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !3278
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 6, !dbg !3278
  %bf.load = load i32, i32* %precision, align 4, !dbg !3278
  %bf.clear = and i32 %bf.load, 1023, !dbg !3278
  %sub = add nsw i32 %bf.clear, -1, !dbg !3279
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3275, metadata !DIExpression()), !dbg !3277
  %cmp = icmp ult i32 %sub, 64, !dbg !3280
  %int_cst2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3282
  br i1 %cmp, label %if.then, label %if.else, !dbg !3283

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !3284

if.else:                                          ; preds = %entry
  %high = getelementptr inbounds i32, i32* %int_cst2, i64 2, !dbg !3285
  %sub5 = add nsw i32 %bf.clear, -65, !dbg !3287
  call void @llvm.dbg.value(metadata i32 %sub5, metadata !3275, metadata !DIExpression()), !dbg !3277
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %bitno.0 = phi i32 [ %sub, %if.then ], [ %sub5, %if.else ], !dbg !3277
  %w.0.in.in = phi i32* [ %int_cst2, %if.then ], [ %high, %if.else ]
  %w.0.in = bitcast i32* %w.0.in.in to i64*, !dbg !3282
  %w.0 = load i64, i64* %w.0.in, align 8, !dbg !3282
  call void @llvm.dbg.value(metadata i64 %w.0, metadata !3276, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.value(metadata i32 %bitno.0, metadata !3275, metadata !DIExpression()), !dbg !3277
  %sh_prom = zext i32 %bitno.0 to i64, !dbg !3288
  %shr = lshr i64 %w.0, %sh_prom, !dbg !3288
  %2 = trunc i64 %shr to i32, !dbg !3289
  %conv = and i32 %2, 1, !dbg !3289
  ret i32 %conv, !dbg !3290
}

; Function Attrs: nounwind uwtable
define dso_local i32 @multiply_by_cost(i64 %cst, i32 %mode, i8 zeroext %speed) local_unnamed_addr #5 !dbg !2 {
entry:
  %act = alloca %struct.mbc_entry, align 8
  call void @llvm.dbg.value(metadata i64 %cst, metadata !2407, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2408, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.value(metadata i8 %speed, metadata !2409, metadata !DIExpression()), !dbg !3291
  %0 = bitcast %struct.mbc_entry* %act to i8*, !dbg !3292
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3292
  %1 = load %struct.htab*, %struct.htab** @multiply_by_cost.costs, align 8, !dbg !3293
  %tobool = icmp eq %struct.htab* %1, null, !dbg !3293
  br i1 %tobool, label %if.then, label %if.end, !dbg !3295

if.then:                                          ; preds = %entry
  %call = tail call %struct.htab* @htab_create(i64 100, i32 (i8*)* nonnull @mbc_entry_hash, i32 (i8*, i8*)* nonnull @mbc_entry_eq, void (i8*)* nonnull @free) #6, !dbg !3296
  store %struct.htab* %call, %struct.htab** @multiply_by_cost.costs, align 8, !dbg !3297
  br label %if.end, !dbg !3298

if.end:                                           ; preds = %entry, %if.then
  %2 = phi %struct.htab* [ %1, %entry ], [ %call, %if.then ], !dbg !3299
  %mode1 = getelementptr inbounds %struct.mbc_entry, %struct.mbc_entry* %act, i64 0, i32 1, !dbg !3300
  store i32 %mode, i32* %mode1, align 8, !dbg !3301
  %cst2 = getelementptr inbounds %struct.mbc_entry, %struct.mbc_entry* %act, i64 0, i32 0, !dbg !3302
  store i64 %cst, i64* %cst2, align 8, !dbg !3303
  %call3 = call i8** @htab_find_slot(%struct.htab* %2, i8* nonnull %0, i32 1) #6, !dbg !3304
  %3 = bitcast i8** %call3 to %struct.mbc_entry**, !dbg !3305
  call void @llvm.dbg.value(metadata %struct.mbc_entry** %3, metadata !2410, metadata !DIExpression()), !dbg !3291
  %4 = load %struct.mbc_entry*, %struct.mbc_entry** %3, align 8, !dbg !3306
  %tobool4 = icmp eq %struct.mbc_entry* %4, null, !dbg !3306
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !3308

if.then5:                                         ; preds = %if.end
  %cost6 = getelementptr inbounds %struct.mbc_entry, %struct.mbc_entry* %4, i64 0, i32 2, !dbg !3309
  %5 = load i32, i32* %cost6, align 4, !dbg !3309
  br label %cleanup, !dbg !3310

if.end7:                                          ; preds = %if.end
  %call8 = call i8* @xmalloc(i64 16) #6, !dbg !3311
  store i8* %call8, i8** %call3, align 8, !dbg !3312
  %mode9 = getelementptr inbounds i8, i8* %call8, i64 8, !dbg !3313
  %6 = bitcast i8* %mode9 to i32*, !dbg !3313
  store i32 %mode, i32* %6, align 8, !dbg !3314
  %7 = load %struct.mbc_entry*, %struct.mbc_entry** %3, align 8, !dbg !3315
  %cst10 = getelementptr inbounds %struct.mbc_entry, %struct.mbc_entry* %7, i64 0, i32 0, !dbg !3316
  store i64 %cst, i64* %cst10, align 8, !dbg !3317
  call void @start_sequence() #6, !dbg !3318
  %call11 = call %struct.rtx_def* @gen_raw_REG(i32 %mode, i32 58) #6, !dbg !3319
  %call12 = call %struct.rtx_def* @gen_int_mode(i64 %cst, i32 %mode) #6, !dbg !3320
  %call13 = call %struct.rtx_def* @expand_mult(i32 %mode, %struct.rtx_def* %call11, %struct.rtx_def* %call12, %struct.rtx_def* null, i32 0) #6, !dbg !3321
  %call14 = call %struct.rtx_def* @get_insns() #6, !dbg !3322
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !2412, metadata !DIExpression()), !dbg !3291
  call void @end_sequence() #6, !dbg !3323
  %call15 = call fastcc i32 @seq_cost(%struct.rtx_def* %call14, i8 zeroext %speed) #7, !dbg !3324
  call void @llvm.dbg.value(metadata i32 %call15, metadata !2413, metadata !DIExpression()), !dbg !3291
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3325
  %tobool16 = icmp eq %struct._IO_FILE* %8, null, !dbg !3325
  br i1 %tobool16, label %if.end20, label %land.lhs.true, !dbg !3327

land.lhs.true:                                    ; preds = %if.end7
  %9 = load i32, i32* @dump_flags, align 4, !dbg !3328
  %and = and i32 %9, 8, !dbg !3329
  %tobool17 = icmp eq i32 %and, 0, !dbg !3329
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !3330

if.then18:                                        ; preds = %land.lhs.true
  %conv = trunc i64 %cst to i32, !dbg !3331
  %idxprom = zext i32 %mode to i64, !dbg !3332
  %arrayidx = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom, !dbg !3332
  %10 = load i8*, i8** %arrayidx, align 8, !dbg !3332
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.27, i64 0, i64 0), i32 %conv, i8* %10, i32 %call15) #6, !dbg !3333
  br label %if.end20, !dbg !3333

if.end20:                                         ; preds = %land.lhs.true, %if.end7, %if.then18
  %11 = load %struct.mbc_entry*, %struct.mbc_entry** %3, align 8, !dbg !3334
  %cost21 = getelementptr inbounds %struct.mbc_entry, %struct.mbc_entry* %11, i64 0, i32 2, !dbg !3335
  store i32 %call15, i32* %cost21, align 4, !dbg !3336
  br label %cleanup, !dbg !3337

cleanup:                                          ; preds = %if.end20, %if.then5
  %retval.0 = phi i32 [ %5, %if.then5 ], [ %call15, %if.end20 ], !dbg !3291
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3338
  ret i32 %retval.0, !dbg !3338
}

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @mbc_entry_hash(i8* %entry1) #5 !dbg !3339 {
entry:
  call void @llvm.dbg.value(metadata i8* %entry1, metadata !3341, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %entry1, metadata !3342, metadata !DIExpression()), !dbg !3343
  %mode = getelementptr inbounds i8, i8* %entry1, i64 8, !dbg !3344
  %0 = bitcast i8* %mode to i32*, !dbg !3344
  %1 = load i32, i32* %0, align 8, !dbg !3344
  %mul = mul i32 %1, 57, !dbg !3345
  %cst = bitcast i8* %entry1 to i64*, !dbg !3346
  %2 = load i64, i64* %cst, align 8, !dbg !3346
  %rem = srem i64 %2, 877, !dbg !3347
  %conv = trunc i64 %rem to i32, !dbg !3348
  %add = add i32 %mul, %conv, !dbg !3349
  ret i32 %add, !dbg !3350
}

; Function Attrs: nounwind uwtable
define internal i32 @mbc_entry_eq(i8* %entry1, i8* %entry2) #5 !dbg !3351 {
entry:
  call void @llvm.dbg.value(metadata i8* %entry1, metadata !3353, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i8* %entry2, metadata !3354, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i8* %entry1, metadata !3355, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i8* %entry2, metadata !3356, metadata !DIExpression()), !dbg !3357
  %mode = getelementptr inbounds i8, i8* %entry1, i64 8, !dbg !3358
  %0 = bitcast i8* %mode to i32*, !dbg !3358
  %1 = load i32, i32* %0, align 8, !dbg !3358
  %mode1 = getelementptr inbounds i8, i8* %entry2, i64 8, !dbg !3359
  %2 = bitcast i8* %mode1 to i32*, !dbg !3359
  %3 = load i32, i32* %2, align 8, !dbg !3359
  %cmp = icmp eq i32 %1, %3, !dbg !3360
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3361

land.rhs:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %entry2, metadata !3356, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i8* %entry1, metadata !3355, metadata !DIExpression()), !dbg !3357
  %cst = bitcast i8* %entry1 to i64*, !dbg !3362
  %4 = load i64, i64* %cst, align 8, !dbg !3362
  %cst2 = bitcast i8* %entry2 to i64*, !dbg !3363
  %5 = load i64, i64* %cst2, align 8, !dbg !3363
  %cmp3 = icmp eq i64 %4, %5, !dbg !3364
  %phitmp = zext i1 %cmp3 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %6, !dbg !3365
}

declare dso_local void @free(i8*) #2

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local void @start_sequence() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @expand_mult(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_raw_REG(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_int_mode(i64, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #2

declare dso_local void @end_sequence() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @seq_cost(%struct.rtx_def* %seq, i8 zeroext %speed) unnamed_addr #5 !dbg !3366 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %seq, metadata !3370, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i8 %speed, metadata !3371, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 0, metadata !3372, metadata !DIExpression()), !dbg !3374
  br label %for.cond, !dbg !3375

for.cond:                                         ; preds = %for.inc, %entry
  %cost.0 = phi i32 [ 0, %entry ], [ %cost.1, %for.inc ], !dbg !3374
  %seq.addr.0 = phi %struct.rtx_def* [ %seq, %entry ], [ %6, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %seq.addr.0, metadata !3370, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !3372, metadata !DIExpression()), !dbg !3374
  %tobool = icmp eq %struct.rtx_def* %seq.addr.0, null, !dbg !3376
  br i1 %tobool, label %for.end, label %for.body, !dbg !3376

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %seq.addr.0, i64 0, i32 0, !dbg !3378
  %bf.load = load i32, i32* %0, align 8, !dbg !3378
  %bf.clear = and i32 %bf.load, 65535, !dbg !3378
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3378
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !3378

lor.lhs.false:                                    ; preds = %for.body
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3378
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !3378

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3378
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !3378

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3378
  br i1 %cmp11, label %cond.true, label %cond.end25, !dbg !3378

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %for.body
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %seq.addr.0, i64 0, i32 1, !dbg !3378
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3378
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !3378
  %3 = load i32*, i32** %2, align 8, !dbg !3378
  %bf.load12 = load i32, i32* %3, align 8, !dbg !3378
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3378
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !3378
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !3378
  br i1 %cmp14, label %cond.end25, label %cond.false, !dbg !3378

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %seq.addr.0, %struct.rtx_def* %4) #6, !dbg !3378
  br label %cond.end25, !dbg !3378

cond.end25:                                       ; preds = %lor.lhs.false8, %cond.false, %cond.true
  %cond26 = phi %struct.rtx_def* [ %call, %cond.false ], [ %4, %cond.true ], [ null, %lor.lhs.false8 ], !dbg !3378
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond26, metadata !3373, metadata !DIExpression()), !dbg !3374
  %tobool27 = icmp eq %struct.rtx_def* %cond26, null, !dbg !3381
  br i1 %tobool27, label %if.else, label %if.then, !dbg !3383

if.then:                                          ; preds = %cond.end25
  %call28 = tail call i32 @rtx_cost(%struct.rtx_def* nonnull %cond26, i32 23, i8 zeroext %speed) #6, !dbg !3384
  br label %for.inc, !dbg !3385

if.else:                                          ; preds = %cond.end25
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !3372, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3374
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %call28.pn = phi i32 [ %call28, %if.then ], [ 1, %if.else ]
  %cost.1 = add i32 %cost.0, %call28.pn, !dbg !3386
  call void @llvm.dbg.value(metadata i32 %cost.1, metadata !3372, metadata !DIExpression()), !dbg !3374
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %seq.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3387
  %rt_rtx32 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !3387
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !3387
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !3370, metadata !DIExpression()), !dbg !3374
  br label %for.cond, !dbg !3388, !llvm.loop !3389

for.end:                                          ; preds = %for.cond
  %cost.0.lcssa = phi i32 [ %cost.0, %for.cond ], !dbg !3374
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !3372, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !3372, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !3372, metadata !DIExpression()), !dbg !3374
  ret i32 %cost.0.lcssa, !dbg !3391
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @multiplier_allowed_in_address_p(i64 %ratio, i32 %mode, i8 zeroext %as) local_unnamed_addr #5 !dbg !2256 {
entry:
  call void @llvm.dbg.value(metadata i64 %ratio, metadata !2261, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2262, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.value(metadata i8 %as, metadata !2263, metadata !DIExpression()), !dbg !3392
  %conv = zext i8 %as to i32, !dbg !3393
  %mul = mul nuw nsw i32 %conv, 87, !dbg !3394
  %add = add nsw i32 %mul, %mode, !dbg !3395
  call void @llvm.dbg.value(metadata i32 %add, metadata !2264, metadata !DIExpression()), !dbg !3392
  %0 = load %struct.VEC_sbitmap_heap*, %struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list, align 8, !dbg !3396
  %base = getelementptr inbounds %struct.VEC_sbitmap_heap, %struct.VEC_sbitmap_heap* %0, i64 0, i32 0, !dbg !3396
  %call = tail call fastcc i32 @VEC_sbitmap_base_length(%struct.VEC_sbitmap_base* %base) #7, !dbg !3396
  %cmp = icmp ult i32 %add, %call, !dbg !3398
  br i1 %cmp, label %if.end, label %if.then, !dbg !3399

if.then:                                          ; preds = %entry
  %add2 = add i32 %add, 1, !dbg !3400
  tail call fastcc void @VEC_sbitmap_heap_safe_grow_cleared(%struct.VEC_sbitmap_heap** nonnull @multiplier_allowed_in_address_p.valid_mult_list, i32 %add2) #7, !dbg !3400
  br label %if.end, !dbg !3400

if.end:                                           ; preds = %entry, %if.then
  %1 = load %struct.VEC_sbitmap_heap*, %struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list, align 8, !dbg !3401
  %base5 = getelementptr inbounds %struct.VEC_sbitmap_heap, %struct.VEC_sbitmap_heap* %1, i64 0, i32 0, !dbg !3401
  %call9 = tail call fastcc %struct.simple_bitmap_def* @VEC_sbitmap_base_index(%struct.VEC_sbitmap_base* %base5, i32 %add) #7, !dbg !3401
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call9, metadata !2265, metadata !DIExpression()), !dbg !3392
  %tobool10 = icmp eq %struct.simple_bitmap_def* %call9, null, !dbg !3402
  br i1 %tobool10, label %if.then11, label %if.end55, !dbg !3403

if.then11:                                        ; preds = %if.end
  %2 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !3404
  %call12 = tail call i32 %2(i8 zeroext %as) #6, !dbg !3405
  call void @llvm.dbg.value(metadata i32 %call12, metadata !2266, metadata !DIExpression()), !dbg !3406
  %call13 = tail call %struct.rtx_def* @gen_raw_REG(i32 %call12, i32 58) #6, !dbg !3407
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !2269, metadata !DIExpression()), !dbg !3406
  %call14 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 257) #6, !dbg !3408
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call14, metadata !2265, metadata !DIExpression()), !dbg !3392
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call14) #6, !dbg !3409
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %call12, %struct.rtx_def* %call13, %struct.rtx_def* null) #6, !dbg !3410
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15, metadata !2270, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i64 -128, metadata !2271, metadata !DIExpression()), !dbg !3406
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call15, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3411
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !3411
  br label %for.cond, !dbg !3415

for.cond:                                         ; preds = %for.inc, %if.then11
  %i.0 = phi i64 [ -128, %if.then11 ], [ %inc, %for.inc ], !dbg !3416
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !2271, metadata !DIExpression()), !dbg !3406
  %exitcond3 = icmp eq i64 %i.0, 129, !dbg !3417
  br i1 %exitcond3, label %for.end, label %for.body, !dbg !3418

for.body:                                         ; preds = %for.cond
  %call18 = tail call %struct.rtx_def* @gen_int_mode(i64 %i.0, i32 %call12) #6, !dbg !3419
  store %struct.rtx_def* %call18, %struct.rtx_def** %rt_rtx, align 8, !dbg !3420
  %call19 = tail call i32 @memory_address_addr_space_p(i32 %mode, %struct.rtx_def* %call15, i8 zeroext %as) #6, !dbg !3421
  %tobool20 = icmp eq i32 %call19, 0, !dbg !3421
  br i1 %tobool20, label %for.inc, label %if.then21, !dbg !3423

if.then21:                                        ; preds = %for.body
  %4 = trunc i64 %i.0 to i32, !dbg !3424
  %conv23 = add i32 %4, 128, !dbg !3424
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call14, i32 %conv23) #7, !dbg !3425
  br label %for.inc, !dbg !3425

for.inc:                                          ; preds = %for.body, %if.then21
  %inc = add nsw i64 %i.0, 1, !dbg !3426
  call void @llvm.dbg.value(metadata i64 %inc, metadata !2271, metadata !DIExpression()), !dbg !3406
  br label %for.cond, !dbg !3427, !llvm.loop !3428

for.end:                                          ; preds = %for.cond
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3430
  %tobool25 = icmp eq %struct._IO_FILE* %5, null, !dbg !3430
  br i1 %tobool25, label %if.end47, label %land.lhs.true, !dbg !3432

land.lhs.true:                                    ; preds = %for.end
  %6 = load i32, i32* @dump_flags, align 4, !dbg !3433
  %and = and i32 %6, 8, !dbg !3434
  %tobool26 = icmp eq i32 %and, 0, !dbg !3434
  br i1 %tobool26, label %if.end47, label %if.then27, !dbg !3435

if.then27:                                        ; preds = %land.lhs.true
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !3436
  call void @llvm.dbg.value(metadata i64 -128, metadata !2271, metadata !DIExpression()), !dbg !3406
  br label %for.cond29, !dbg !3438

for.cond29:                                       ; preds = %for.inc42, %if.then27
  %i.1 = phi i64 [ -128, %if.then27 ], [ %inc43, %for.inc42 ], !dbg !3440
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !2271, metadata !DIExpression()), !dbg !3406
  %exitcond = icmp eq i64 %i.1, 129, !dbg !3441
  br i1 %exitcond, label %for.end44, label %for.body32, !dbg !3443

for.body32:                                       ; preds = %for.cond29
  %add33 = add nsw i64 %i.1, 128, !dbg !3444
  %div.udiv = lshr i64 %add33, 6
  %arrayidx34 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call14, i64 0, i32 3, i64 %div.udiv, !dbg !3444
  %7 = load i64, i64* %arrayidx34, align 8, !dbg !3444
  %rem2 = and i64 %i.1, 63, !dbg !3444
  %8 = shl i64 1, %rem2, !dbg !3444
  %9 = and i64 %7, %8, !dbg !3444
  %tobool37 = icmp eq i64 %9, 0, !dbg !3444
  br i1 %tobool37, label %for.inc42, label %if.then38, !dbg !3446

if.then38:                                        ; preds = %for.body32
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3447
  %conv39 = trunc i64 %i.1 to i32, !dbg !3448
  %call40 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i32 %conv39) #6, !dbg !3449
  br label %for.inc42, !dbg !3449

for.inc42:                                        ; preds = %for.body32, %if.then38
  %inc43 = add nsw i64 %i.1, 1, !dbg !3450
  call void @llvm.dbg.value(metadata i64 %inc43, metadata !2271, metadata !DIExpression()), !dbg !3406
  br label %for.cond29, !dbg !3451, !llvm.loop !3452

for.end44:                                        ; preds = %for.cond29
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3454
  %call45 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3455
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3456
  %call46 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3457
  br label %if.end47, !dbg !3458

if.end47:                                         ; preds = %land.lhs.true, %for.end, %for.end44
  %13 = load %struct.VEC_sbitmap_heap*, %struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list, align 8, !dbg !3459
  %base50 = getelementptr inbounds %struct.VEC_sbitmap_heap, %struct.VEC_sbitmap_heap* %13, i64 0, i32 0, !dbg !3459
  %call54 = tail call fastcc %struct.simple_bitmap_def* @VEC_sbitmap_base_replace(%struct.VEC_sbitmap_base* %base50, i32 %add, %struct.simple_bitmap_def* %call14) #7, !dbg !3459
  br label %if.end55, !dbg !3460

if.end55:                                         ; preds = %if.end, %if.end47
  %valid_mult.0 = phi %struct.simple_bitmap_def* [ %call9, %if.end ], [ %call14, %if.end47 ], !dbg !3392
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %valid_mult.0, metadata !2265, metadata !DIExpression()), !dbg !3392
  %ratio.off = add i64 %ratio, 128, !dbg !3461
  %14 = icmp ugt i64 %ratio.off, 256, !dbg !3461
  br i1 %14, label %cleanup, label %if.end61, !dbg !3461

if.end61:                                         ; preds = %if.end55
  %div64 = sdiv i64 %ratio.off, 64, !dbg !3463
  %arrayidx65 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %valid_mult.0, i64 0, i32 3, i64 %div64, !dbg !3463
  %15 = load i64, i64* %arrayidx65, align 8, !dbg !3463
  %rem671 = and i64 %ratio, 63, !dbg !3463
  %shr68 = lshr i64 %15, %rem671, !dbg !3463
  %16 = trunc i64 %shr68 to i8, !dbg !3463
  %conv70 = and i8 %16, 1, !dbg !3463
  br label %cleanup, !dbg !3464

cleanup:                                          ; preds = %if.end55, %if.end61
  %retval.0 = phi i8 [ %conv70, %if.end61 ], [ 0, %if.end55 ], !dbg !3392
  ret i8 %retval.0, !dbg !3465
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_sbitmap_base_length(%struct.VEC_sbitmap_base* %vec_) unnamed_addr #0 !dbg !3466 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sbitmap_base* %vec_, metadata !3472, metadata !DIExpression()), !dbg !3473
  %tobool = icmp eq %struct.VEC_sbitmap_base* %vec_, null, !dbg !3474
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3474

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_sbitmap_base, %struct.VEC_sbitmap_base* %vec_, i64 0, i32 0, !dbg !3474
  %0 = load i32, i32* %num, align 8, !dbg !3474
  br label %cond.end, !dbg !3474

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3474
  ret i32 %cond, !dbg !3474
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_sbitmap_heap_safe_grow_cleared(%struct.VEC_sbitmap_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !3475 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list, metadata !3480, metadata !DIExpression()), !dbg !3483
  call void @llvm.dbg.value(metadata i32 %size_, metadata !3481, metadata !DIExpression()), !dbg !3483
  %0 = load %struct.VEC_sbitmap_heap*, %struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list, align 8, !dbg !3484
  %tobool = icmp eq %struct.VEC_sbitmap_heap* %0, null, !dbg !3484
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3484

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_sbitmap_heap, %struct.VEC_sbitmap_heap* %0, i64 0, i32 0, !dbg !3484
  br label %cond.end, !dbg !3484

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_sbitmap_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3484
  %call = tail call fastcc i32 @VEC_sbitmap_base_length(%struct.VEC_sbitmap_base* %cond) #7, !dbg !3484
  call void @llvm.dbg.value(metadata i32 %call, metadata !3482, metadata !DIExpression()), !dbg !3483
  tail call fastcc void @VEC_sbitmap_heap_safe_grow(%struct.VEC_sbitmap_heap** nonnull @multiplier_allowed_in_address_p.valid_mult_list, i32 %size_) #7, !dbg !3484
  %1 = load %struct.VEC_sbitmap_heap*, %struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list, align 8, !dbg !3484
  %tobool1 = icmp eq %struct.VEC_sbitmap_heap* %1, null, !dbg !3484
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !3484

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_sbitmap_heap, %struct.VEC_sbitmap_heap* %1, i64 0, i32 0, !dbg !3484
  br label %cond.end5, !dbg !3484

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_sbitmap_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !3484
  %call7 = tail call fastcc %struct.simple_bitmap_def** @VEC_sbitmap_base_address(%struct.VEC_sbitmap_base* %cond6) #7, !dbg !3484
  %idxprom = sext i32 %call to i64, !dbg !3484
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %call7, i64 %idxprom, !dbg !3484
  %2 = bitcast %struct.simple_bitmap_def** %arrayidx to i8*, !dbg !3484
  %sub = sub nsw i32 %size_, %call, !dbg !3484
  %conv = sext i32 %sub to i64, !dbg !3484
  %mul = shl nsw i64 %conv, 3, !dbg !3484
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !3484
  ret void, !dbg !3484
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.simple_bitmap_def* @VEC_sbitmap_base_index(%struct.VEC_sbitmap_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3485 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sbitmap_base* %vec_, metadata !3489, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3490, metadata !DIExpression()), !dbg !3491
  br label %land.end, !dbg !3492

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3492
  %arrayidx = getelementptr inbounds %struct.VEC_sbitmap_base, %struct.VEC_sbitmap_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3492
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx, align 8, !dbg !3492
  ret %struct.simple_bitmap_def* %0, !dbg !3492
}

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @memory_address_addr_space_p(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !3493 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !3497, metadata !DIExpression()), !dbg !3502
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !3498, metadata !DIExpression()), !dbg !3502
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !3503
  %0 = load i8*, i8** %popcount, align 8, !dbg !3503
  %tobool = icmp eq i8* %0, null, !dbg !3504
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !3505

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !3506
  %.pre2 = zext i32 %.pre to i64, !dbg !3507
  %.pre3 = shl i64 1, %.pre2, !dbg !3507
  %.pre4 = lshr i32 %bitno, 6, !dbg !3508
  %.pre5 = zext i32 %.pre4 to i64, !dbg !3509
  br label %if.end7, !dbg !3505

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !3510
  %idxprom = zext i32 %div to i64, !dbg !3510
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !3510
  %1 = load i64, i64* %arrayidx, align 8, !dbg !3510
  %rem = and i32 %bitno, 63, !dbg !3510
  %sh_prom = zext i32 %rem to i64, !dbg !3510
  %2 = shl i64 1, %sh_prom, !dbg !3511
  %3 = and i64 %1, %2, !dbg !3511
  %tobool1 = icmp eq i64 %3, 0, !dbg !3511
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !3513

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !3514
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !3515
  %inc = add i8 %4, 1, !dbg !3515
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !3515
  br label %if.end7, !dbg !3514

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !3509
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !3507
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !3509
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !3516
  %or = or i64 %5, %shl.pre-phi, !dbg !3516
  store i64 %or, i64* %arrayidx13, align 8, !dbg !3516
  ret void, !dbg !3517
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.simple_bitmap_def* @VEC_sbitmap_base_replace(%struct.VEC_sbitmap_base* %vec_, i32 %ix_, %struct.simple_bitmap_def* %obj_) unnamed_addr #0 !dbg !3518 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sbitmap_base* %vec_, metadata !3523, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3524, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %obj_, metadata !3525, metadata !DIExpression()), !dbg !3527
  %idxprom = zext i32 %ix_ to i64, !dbg !3528
  %arrayidx = getelementptr inbounds %struct.VEC_sbitmap_base, %struct.VEC_sbitmap_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3528
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx, align 8, !dbg !3528
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %0, metadata !3526, metadata !DIExpression()), !dbg !3527
  store %struct.simple_bitmap_def* %obj_, %struct.simple_bitmap_def** %arrayidx, align 8, !dbg !3528
  ret %struct.simple_bitmap_def* %0, !dbg !3528
}

; Function Attrs: nounwind uwtable
define dso_local void @tree_ssa_iv_optimize() local_unnamed_addr #5 !dbg !3529 {
entry:
  %loop = alloca %struct.loop*, align 8
  %data = alloca %struct.ivopts_data, align 8
  %li = alloca %struct.loop_iterator, align 8
  %0 = bitcast %struct.loop** %loop to i8*, !dbg !3541
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3541
  %1 = bitcast %struct.ivopts_data* %data to i8*, !dbg !3542
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1) #8, !dbg !3542
  %2 = bitcast %struct.loop_iterator* %li to i8*, !dbg !3543
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3543
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !3534, metadata !DIExpression(DW_OP_deref)), !dbg !3544
  call fastcc void @tree_ssa_iv_optimize_init(%struct.ivopts_data* nonnull %data) #7, !dbg !3545
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3533, metadata !DIExpression(DW_OP_deref)), !dbg !3544
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3535, metadata !DIExpression(DW_OP_deref)), !dbg !3544
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 2) #7, !dbg !3546
  br label %for.cond, !dbg !3546

for.cond:                                         ; preds = %if.end, %entry
  %3 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3548
  call void @llvm.dbg.value(metadata %struct.loop* %3, metadata !3533, metadata !DIExpression()), !dbg !3544
  %tobool = icmp eq %struct.loop* %3, null, !dbg !3546
  br i1 %tobool, label %for.end, label %for.body, !dbg !3546

for.body:                                         ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3550
  %tobool1 = icmp eq %struct._IO_FILE* %4, null, !dbg !3550
  br i1 %tobool1, label %if.end, label %land.lhs.true, !dbg !3553

land.lhs.true:                                    ; preds = %for.body
  %5 = load i32, i32* @dump_flags, align 4, !dbg !3554
  %and = and i32 %5, 8, !dbg !3555
  %tobool2 = icmp eq i32 %and, 0, !dbg !3555
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3556

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.loop* %3, metadata !3533, metadata !DIExpression()), !dbg !3544
  call void @flow_loop_dump(%struct.loop* nonnull %3, %struct._IO_FILE* nonnull %4, void (%struct.loop*, %struct._IO_FILE*, i32)* null, i32 1) #6, !dbg !3557
  %.pre = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3558
  br label %if.end, !dbg !3557

if.end:                                           ; preds = %land.lhs.true, %for.body, %if.then
  %6 = phi %struct.loop* [ %3, %land.lhs.true ], [ %3, %for.body ], [ %.pre, %if.then ], !dbg !3558
  call void @llvm.dbg.value(metadata %struct.loop* %6, metadata !3533, metadata !DIExpression()), !dbg !3544
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !3534, metadata !DIExpression(DW_OP_deref)), !dbg !3544
  %call = call fastcc zeroext i8 @tree_ssa_iv_optimize_loop(%struct.ivopts_data* nonnull %data, %struct.loop* %6) #7, !dbg !3559
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3533, metadata !DIExpression(DW_OP_deref)), !dbg !3544
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3535, metadata !DIExpression(DW_OP_deref)), !dbg !3544
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #7, !dbg !3548
  br label %for.cond, !dbg !3548, !llvm.loop !3560

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !3534, metadata !DIExpression(DW_OP_deref)), !dbg !3544
  call fastcc void @tree_ssa_iv_optimize_finalize(%struct.ivopts_data* nonnull %data) #7, !dbg !3562
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3563
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1) #8, !dbg !3563
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3563
  ret void, !dbg !3563
}

; Function Attrs: nounwind uwtable
define internal fastcc void @tree_ssa_iv_optimize_init(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !3564 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !3568, metadata !DIExpression()), !dbg !3569
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3570
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 3, !dbg !3570
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3570
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 2, !dbg !3570
  %2 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3570
  %tobool = icmp eq %struct.VEC_tree_gc* %2, null, !dbg !3570
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3570

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %2, i64 0, i32 0, !dbg !3570
  br label %cond.end, !dbg !3570

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3570
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !3570
  %mul = shl i32 %call, 1, !dbg !3571
  %version_info_size = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 3, !dbg !3572
  store i32 %mul, i32* %version_info_size, align 4, !dbg !3573
  %conv = zext i32 %mul to i64, !dbg !3574
  %call5 = tail call i8* @xcalloc(i64 %conv, i64 32) #6, !dbg !3574
  %version_info = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 4, !dbg !3575
  %3 = bitcast %struct.version_info** %version_info to i8**, !dbg !3576
  store i8* %call5, i8** %3, align 8, !dbg !3576
  %call6 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3577
  %relevant = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 5, !dbg !3578
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** %relevant, align 8, !dbg !3579
  %call7 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3580
  %important_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 8, !dbg !3581
  store %struct.bitmap_head_def* %call7, %struct.bitmap_head_def** %important_candidates, align 8, !dbg !3582
  %max_inv_id = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 9, !dbg !3583
  store i32 0, i32* %max_inv_id, align 8, !dbg !3584
  %niters = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 1, !dbg !3585
  store %struct.pointer_map_t* null, %struct.pointer_map_t** %niters, align 8, !dbg !3586
  %call8 = tail call fastcc %struct.VEC_iv_use_p_heap* @VEC_iv_use_p_heap_alloc(i32 20) #7, !dbg !3587
  %iv_uses = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 6, !dbg !3588
  store %struct.VEC_iv_use_p_heap* %call8, %struct.VEC_iv_use_p_heap** %iv_uses, align 8, !dbg !3589
  %call9 = tail call fastcc %struct.VEC_iv_cand_p_heap* @VEC_iv_cand_p_heap_alloc(i32 20) #7, !dbg !3590
  %iv_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 7, !dbg !3591
  store %struct.VEC_iv_cand_p_heap* %call9, %struct.VEC_iv_cand_p_heap** %iv_candidates, align 8, !dbg !3592
  %call10 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 20) #7, !dbg !3593
  store %struct.VEC_tree_heap* %call10, %struct.VEC_tree_heap** @decl_rtl_to_reset, align 8, !dbg !3594
  ret void, !dbg !3595
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_init(%struct.loop_iterator* %li, %struct.loop** %loop, i32 %flags) unnamed_addr #0 !dbg !3596 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3602, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3603, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 2, metadata !3604, metadata !DIExpression()), !dbg !3608
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !3609
  store i32 0, i32* %idx, align 8, !dbg !3610
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3611
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !3611
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3611
  %tobool = icmp eq %struct.loops* %1, null, !dbg !3611
  br i1 %tobool, label %if.then, label %if.end, !dbg !3613

if.then:                                          ; preds = %entry
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3614
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %to_visit, align 8, !dbg !3616
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !3617
  br label %cleanup, !dbg !3618

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @number_of_loops() #7, !dbg !3619
  %call1 = tail call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %call) #7, !dbg !3619
  %to_visit2 = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3620
  store %struct.VEC_int_heap* %call1, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !3621
  call void @llvm.dbg.value(metadata i32 1, metadata !3607, metadata !DIExpression()), !dbg !3608
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3622
  %x_current_loops35 = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 4, !dbg !3622
  %3 = load %struct.loops*, %struct.loops** %x_current_loops35, align 8, !dbg !3622
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %3, i64 0, i32 3, !dbg !3622
  %4 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !3622
  br label %for.cond36, !dbg !3625

for.cond36:                                       ; preds = %if.end, %for.inc40
  %5 = phi %struct.loop* [ %4, %if.end ], [ %12, %for.inc40 ]
  %6 = phi %struct.loop* [ %4, %if.end ], [ %12, %for.inc40 ]
  %7 = phi %struct.loop* [ %4, %if.end ], [ %12, %for.inc40 ]
  %8 = phi %struct.loop* [ %4, %if.end ], [ %12, %for.inc40 ]
  %9 = phi %struct.loop* [ %4, %if.end ], [ %12, %for.inc40 ]
  %10 = phi %struct.loop* [ %4, %if.end ], [ %12, %for.inc40 ], !dbg !3628
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !3605, metadata !DIExpression()), !dbg !3608
  %inner37 = getelementptr inbounds %struct.loop, %struct.loop* %10, i64 0, i32 8, !dbg !3630
  %11 = load %struct.loop*, %struct.loop** %inner37, align 8, !dbg !3630
  %cmp38 = icmp eq %struct.loop* %11, null, !dbg !3631
  br i1 %cmp38, label %while.cond.preheader, label %for.inc40, !dbg !3625

while.cond.preheader:                             ; preds = %for.cond36
  %.lcssa12 = phi %struct.loop* [ %5, %for.cond36 ]
  %.lcssa11 = phi %struct.loop* [ %6, %for.cond36 ]
  %.lcssa10 = phi %struct.loop* [ %7, %for.cond36 ]
  %.lcssa9 = phi %struct.loop* [ %8, %for.cond36 ]
  br label %while.cond, !dbg !3632

for.inc40:                                        ; preds = %for.cond36
  call void @llvm.dbg.value(metadata %struct.loop* %9, metadata !3605, metadata !DIExpression()), !dbg !3608
  %inner41 = getelementptr inbounds %struct.loop, %struct.loop* %9, i64 0, i32 8, !dbg !3633
  %12 = load %struct.loop*, %struct.loop** %inner41, align 8, !dbg !3633
  br label %for.cond36, !dbg !3634, !llvm.loop !3635

while.cond:                                       ; preds = %while.cond.preheader, %if.end74
  %13 = phi %struct.loop* [ %.lcssa12, %while.cond.preheader ], [ %26, %if.end74 ]
  %14 = phi %struct.loop* [ %.lcssa11, %while.cond.preheader ], [ %27, %if.end74 ]
  %15 = phi %struct.loop* [ %.lcssa10, %while.cond.preheader ], [ %27, %if.end74 ]
  %16 = phi %struct.loop* [ %.lcssa9, %while.cond.preheader ], [ %27, %if.end74 ], !dbg !3637
  call void @llvm.dbg.value(metadata %struct.loop* %16, metadata !3605, metadata !DIExpression()), !dbg !3608
  %num43 = getelementptr inbounds %struct.loop, %struct.loop* %16, i64 0, i32 0, !dbg !3640
  %17 = load i32, i32* %num43, align 8, !dbg !3640
  %cmp44 = icmp slt i32 %17, 1, !dbg !3641
  br i1 %cmp44, label %if.end56, label %if.then45, !dbg !3642

if.then45:                                        ; preds = %while.cond
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !3643
  %tobool47 = icmp eq %struct.VEC_int_heap* %18, null, !dbg !3643
  br i1 %tobool47, label %cond.end52, label %cond.true48, !dbg !3643

cond.true48:                                      ; preds = %if.then45
  %base50 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i64 0, i32 0, !dbg !3643
  br label %cond.end52, !dbg !3643

cond.end52:                                       ; preds = %if.then45, %cond.true48
  %cond53 = phi %struct.VEC_int_base* [ %base50, %cond.true48 ], [ null, %if.then45 ], !dbg !3643
  call void @llvm.dbg.value(metadata %struct.loop* %15, metadata !3605, metadata !DIExpression()), !dbg !3608
  %num54 = getelementptr inbounds %struct.loop, %struct.loop* %15, i64 0, i32 0, !dbg !3643
  %19 = load i32, i32* %num54, align 8, !dbg !3643
  %call55 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond53, i32 %19) #7, !dbg !3643
  br label %if.end56, !dbg !3643

if.end56:                                         ; preds = %while.cond, %cond.end52
  call void @llvm.dbg.value(metadata %struct.loop* %14, metadata !3605, metadata !DIExpression()), !dbg !3608
  %next = getelementptr inbounds %struct.loop, %struct.loop* %14, i64 0, i32 9, !dbg !3644
  %20 = load %struct.loop*, %struct.loop** %next, align 8, !dbg !3644
  %tobool57 = icmp eq %struct.loop* %20, null, !dbg !3646
  call void @llvm.dbg.value(metadata %struct.loop* %14, metadata !3605, metadata !DIExpression()), !dbg !3608
  br i1 %tobool57, label %if.else67, label %if.then58, !dbg !3647

if.then58:                                        ; preds = %if.end56
  br label %for.cond60, !dbg !3648

for.cond60:                                       ; preds = %for.inc64, %if.then58
  %21 = phi %struct.loop* [ %25, %for.inc64 ], [ %20, %if.then58 ]
  %22 = phi %struct.loop* [ %25, %for.inc64 ], [ %20, %if.then58 ]
  %23 = phi %struct.loop* [ %25, %for.inc64 ], [ %20, %if.then58 ], !dbg !3651
  call void @llvm.dbg.value(metadata %struct.loop* %23, metadata !3605, metadata !DIExpression()), !dbg !3608
  %inner61 = getelementptr inbounds %struct.loop, %struct.loop* %23, i64 0, i32 8, !dbg !3653
  %24 = load %struct.loop*, %struct.loop** %inner61, align 8, !dbg !3653
  %cmp62 = icmp eq %struct.loop* %24, null, !dbg !3654
  br i1 %cmp62, label %if.end74.loopexit, label %for.inc64, !dbg !3655

for.inc64:                                        ; preds = %for.cond60
  call void @llvm.dbg.value(metadata %struct.loop* %22, metadata !3605, metadata !DIExpression()), !dbg !3608
  %inner65 = getelementptr inbounds %struct.loop, %struct.loop* %22, i64 0, i32 8, !dbg !3656
  %25 = load %struct.loop*, %struct.loop** %inner65, align 8, !dbg !3656
  br label %for.cond60, !dbg !3657, !llvm.loop !3658

if.else67:                                        ; preds = %if.end56
  %call68 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %14) #7, !dbg !3660
  %tobool69 = icmp eq %struct.loop* %call68, null, !dbg !3660
  br i1 %tobool69, label %if.end114.loopexit1, label %if.else71, !dbg !3662

if.else71:                                        ; preds = %if.else67
  call void @llvm.dbg.value(metadata %struct.loop* %13, metadata !3605, metadata !DIExpression()), !dbg !3608
  %call72 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %13) #7, !dbg !3663
  call void @llvm.dbg.value(metadata %struct.loop* %call72, metadata !3605, metadata !DIExpression()), !dbg !3608
  br label %if.end74

if.end74.loopexit:                                ; preds = %for.cond60
  %.lcssa8 = phi %struct.loop* [ %21, %for.cond60 ]
  %.lcssa = phi %struct.loop* [ %23, %for.cond60 ], !dbg !3651
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa, metadata !3605, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa, metadata !3605, metadata !DIExpression()), !dbg !3608
  br label %if.end74, !dbg !3632

if.end74:                                         ; preds = %if.end74.loopexit, %if.else71
  %26 = phi %struct.loop* [ %.lcssa8, %if.end74.loopexit ], [ %call72, %if.else71 ]
  %27 = phi %struct.loop* [ %.lcssa, %if.end74.loopexit ], [ %call72, %if.else71 ]
  br label %while.cond, !dbg !3632, !llvm.loop !3664

if.end114.loopexit1:                              ; preds = %if.else67
  call fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) #7, !dbg !3666
  br label %cleanup, !dbg !3667

cleanup:                                          ; preds = %if.end114.loopexit1, %if.then
  ret void, !dbg !3667
}

declare dso_local void @flow_loop_dump(%struct.loop*, %struct._IO_FILE*, void (%struct.loop*, %struct._IO_FILE*, i32)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @tree_ssa_iv_optimize_loop(%struct.ivopts_data* %data, %struct.loop* %loop) unnamed_addr #5 !dbg !3668 {
entry:
  %iv_ca = alloca %struct.iv_ca*, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !3672, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3673, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.value(metadata i8 0, metadata !3674, metadata !DIExpression()), !dbg !3680
  %0 = bitcast %struct.iv_ca** %iv_ca to i8*, !dbg !3681
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3681
  %niters = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 1, !dbg !3682
  %1 = load %struct.pointer_map_t*, %struct.pointer_map_t** %niters, align 8, !dbg !3682
  %tobool = icmp eq %struct.pointer_map_t* %1, null, !dbg !3682
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3682

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 5787, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3682
  br label %cond.end, !dbg !3682

cond.end:                                         ; preds = %entry, %cond.true
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !3683
  store %struct.loop* %loop, %struct.loop** %current_loop, align 8, !dbg !3684
  %call = tail call zeroext i8 @optimize_loop_for_speed_p(%struct.loop* %loop) #6, !dbg !3685
  %speed = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 11, !dbg !3686
  store i8 %call, i8* %speed, align 1, !dbg !3687
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3688
  %tobool1 = icmp eq %struct._IO_FILE* %2, null, !dbg !3688
  br i1 %tobool1, label %if.end13, label %land.lhs.true, !dbg !3690

land.lhs.true:                                    ; preds = %cond.end
  %3 = load i32, i32* @dump_flags, align 4, !dbg !3691
  %and = and i32 %3, 8, !dbg !3692
  %tobool2 = icmp eq i32 %and, 0, !dbg !3692
  br i1 %tobool2, label %if.end13, label %if.then, !dbg !3693

if.then:                                          ; preds = %land.lhs.true
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !3694
  %4 = load i32, i32* %num, align 8, !dbg !3694
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31, i64 0, i64 0), i32 %4) #6, !dbg !3696
  %call4 = tail call %struct.edge_def* @single_dom_exit(%struct.loop* %loop) #7, !dbg !3697
  call void @llvm.dbg.value(metadata %struct.edge_def* %call4, metadata !3676, metadata !DIExpression()), !dbg !3680
  %tobool5 = icmp eq %struct.edge_def* %call4, null, !dbg !3698
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !3700

if.then6:                                         ; preds = %if.then
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3701
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call4, i64 0, i32 0, !dbg !3703
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3703
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 9, !dbg !3704
  %7 = load i32, i32* %index, align 8, !dbg !3704
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call4, i64 0, i32 1, !dbg !3705
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3705
  %index7 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i64 0, i32 9, !dbg !3706
  %9 = load i32, i32* %index7, align 8, !dbg !3706
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.32, i64 0, i64 0), i32 %7, i32 %9) #6, !dbg !3707
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3708
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3709
  %call10 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %11) #6, !dbg !3710
  tail call void @print_gimple_stmt(%struct._IO_FILE* %10, %union.gimple_statement_d* %call10, i32 0, i32 2) #6, !dbg !3711
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3712
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3713
  br label %if.end, !dbg !3714

if.end:                                           ; preds = %if.then, %if.then6
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3715
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3716
  br label %if.end13, !dbg !3717

if.end13:                                         ; preds = %land.lhs.true, %cond.end, %if.end
  %call14 = tail call %struct.basic_block_def** @get_loop_body(%struct.loop* %loop) #6, !dbg !3718
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call14, metadata !3677, metadata !DIExpression()), !dbg !3680
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !3719
  %14 = load i32, i32* %num_nodes, align 4, !dbg !3719
  tail call void @renumber_gimple_stmt_uids_in_blocks(%struct.basic_block_def** %call14, i32 %14) #6, !dbg !3720
  %15 = bitcast %struct.basic_block_def** %call14 to i8*, !dbg !3721
  tail call void @free(i8* %15) #6, !dbg !3722
  %call15 = tail call fastcc zeroext i8 @find_induction_variables(%struct.ivopts_data* %data) #7, !dbg !3723
  %tobool16 = icmp eq i8 %call15, 0, !dbg !3723
  br i1 %tobool16, label %finish, label %if.end18, !dbg !3725

if.end18:                                         ; preds = %if.end13
  tail call fastcc void @find_interesting_uses(%struct.ivopts_data* %data) #7, !dbg !3726
  %call19 = tail call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !3727
  %16 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3729
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %16, i64 61, i32 1, !dbg !3729
  %17 = load i32, i32* %value, align 8, !dbg !3729
  %cmp = icmp ugt i32 %call19, %17, !dbg !3730
  br i1 %cmp, label %finish, label %if.end21, !dbg !3731

if.end21:                                         ; preds = %if.end18
  tail call fastcc void @find_iv_candidates(%struct.ivopts_data* %data) #7, !dbg !3732
  tail call fastcc void @determine_iv_costs(%struct.ivopts_data* %data) #7, !dbg !3733
  tail call fastcc void @determine_use_iv_costs(%struct.ivopts_data* %data) #7, !dbg !3734
  tail call fastcc void @determine_set_costs(%struct.ivopts_data* %data) #7, !dbg !3735
  %call22 = tail call fastcc %struct.iv_ca* @find_optimal_iv_set(%struct.ivopts_data* %data) #7, !dbg !3736
  call void @llvm.dbg.value(metadata %struct.iv_ca* %call22, metadata !3675, metadata !DIExpression()), !dbg !3680
  store %struct.iv_ca* %call22, %struct.iv_ca** %iv_ca, align 8, !dbg !3737
  call void @llvm.dbg.value(metadata %struct.iv_ca* %call22, metadata !3675, metadata !DIExpression()), !dbg !3680
  %tobool23 = icmp eq %struct.iv_ca* %call22, null, !dbg !3738
  br i1 %tobool23, label %finish, label %if.end25, !dbg !3740

if.end25:                                         ; preds = %if.end21
  call void @llvm.dbg.value(metadata i8 1, metadata !3674, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.value(metadata %struct.iv_ca* %call22, metadata !3675, metadata !DIExpression()), !dbg !3680
  tail call fastcc void @create_new_ivs(%struct.ivopts_data* %data, %struct.iv_ca* nonnull %call22) #7, !dbg !3741
  call void @llvm.dbg.value(metadata %struct.iv_ca** %iv_ca, metadata !3675, metadata !DIExpression(DW_OP_deref)), !dbg !3680
  call fastcc void @iv_ca_free(%struct.iv_ca** nonnull %iv_ca) #7, !dbg !3742
  call fastcc void @rewrite_uses(%struct.ivopts_data* %data) #7, !dbg !3743
  call fastcc void @remove_unused_ivs(%struct.ivopts_data* %data) #7, !dbg !3744
  call void @scev_reset() #6, !dbg !3745
  br label %finish, !dbg !3745

finish:                                           ; preds = %if.end21, %if.end13, %if.end18, %if.end25
  %changed.0 = phi i8 [ 1, %if.end25 ], [ 0, %if.end13 ], [ 0, %if.end18 ], [ 0, %if.end21 ], !dbg !3680
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !3674, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.label(metadata !3679), !dbg !3746
  call fastcc void @free_loop_data(%struct.ivopts_data* %data) #7, !dbg !3747
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3748
  ret i8 %changed.0, !dbg !3749
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) unnamed_addr #0 !dbg !3750 {
entry:
  %anum = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3754, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3755, metadata !DIExpression()), !dbg !3757
  %0 = bitcast i32* %anum to i8*, !dbg !3758
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3758
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3757
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !3757
  br label %while.cond, !dbg !3759

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit, align 8, !dbg !3760
  %tobool = icmp eq %struct.VEC_int_heap* %1, null, !dbg !3760
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3760

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !3760
  br label %cond.end, !dbg !3760

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !3760
  %2 = load i32, i32* %idx, align 8, !dbg !3760
  call void @llvm.dbg.value(metadata i32* %anum, metadata !3756, metadata !DIExpression(DW_OP_deref)), !dbg !3757
  %call = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %cond, i32 %2, i32* nonnull %anum) #7, !dbg !3760
  %tobool2 = icmp eq i32 %call, 0, !dbg !3759
  br i1 %tobool2, label %while.end, label %while.body, !dbg !3759

while.body:                                       ; preds = %cond.end
  %3 = load i32, i32* %idx, align 8, !dbg !3761
  %inc = add i32 %3, 1, !dbg !3761
  store i32 %inc, i32* %idx, align 8, !dbg !3761
  %4 = load i32, i32* %anum, align 4, !dbg !3763
  call void @llvm.dbg.value(metadata i32 %4, metadata !3756, metadata !DIExpression()), !dbg !3757
  %call4 = call fastcc %struct.loop* @get_loop(i32 %4) #7, !dbg !3764
  store %struct.loop* %call4, %struct.loop** %loop, align 8, !dbg !3765
  %tobool5 = icmp eq %struct.loop* %call4, null, !dbg !3766
  br i1 %tobool5, label %while.cond, label %cleanup.loopexit, !dbg !3768, !llvm.loop !3769

while.end:                                        ; preds = %cond.end
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %to_visit) #7, !dbg !3771
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !3772
  br label %cleanup, !dbg !3773

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !3773

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3773
  ret void, !dbg !3773
}

; Function Attrs: nounwind uwtable
define internal fastcc void @tree_ssa_iv_optimize_finalize(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !3774 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !3776, metadata !DIExpression()), !dbg !3777
  tail call fastcc void @free_loop_data(%struct.ivopts_data* %data) #7, !dbg !3778
  %version_info = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 4, !dbg !3779
  %0 = bitcast %struct.version_info** %version_info to i8**, !dbg !3779
  %1 = load i8*, i8** %0, align 8, !dbg !3779
  tail call void @free(i8* %1) #6, !dbg !3780
  %relevant = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 5, !dbg !3781
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %relevant, align 8, !dbg !3781
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !3781
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %relevant, align 8, !dbg !3781
  %important_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 8, !dbg !3782
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %important_candidates, align 8, !dbg !3782
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %3) #6, !dbg !3782
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %important_candidates, align 8, !dbg !3782
  tail call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull @decl_rtl_to_reset) #7, !dbg !3783
  %iv_uses = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 6, !dbg !3784
  tail call fastcc void @VEC_iv_use_p_heap_free(%struct.VEC_iv_use_p_heap** nonnull %iv_uses) #7, !dbg !3784
  %iv_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 7, !dbg !3785
  tail call fastcc void @VEC_iv_cand_p_heap_free(%struct.VEC_iv_cand_p_heap** nonnull %iv_candidates) #7, !dbg !3785
  ret void, !dbg !3786
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_iv_use_p_base_length(%struct.VEC_iv_use_p_base* %vec_) unnamed_addr #0 !dbg !3787 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_use_p_base* %vec_, metadata !3793, metadata !DIExpression()), !dbg !3794
  %tobool = icmp eq %struct.VEC_iv_use_p_base* %vec_, null, !dbg !3795
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3795

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_iv_use_p_base, %struct.VEC_iv_use_p_base* %vec_, i64 0, i32 0, !dbg !3795
  %0 = load i32, i32* %num, align 8, !dbg !3795
  br label %cond.end, !dbg !3795

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3795
  ret i32 %cond, !dbg !3795
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.iv_use* @VEC_iv_use_p_base_index(%struct.VEC_iv_use_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3796 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_use_p_base* %vec_, metadata !3800, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3801, metadata !DIExpression()), !dbg !3802
  br label %land.end, !dbg !3803

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3803
  %arrayidx = getelementptr inbounds %struct.VEC_iv_use_p_base, %struct.VEC_iv_use_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3803
  %0 = load %struct.iv_use*, %struct.iv_use** %arrayidx, align 8, !dbg !3803
  ret %struct.iv_use* %0, !dbg !3803
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @abnormal_ssa_name_p(%union.tree_node* %exp) unnamed_addr #5 !dbg !3804 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !3806, metadata !DIExpression()), !dbg !3807
  %tobool = icmp eq %union.tree_node* %exp, null, !dbg !3808
  br i1 %tobool, label %return, label %if.end, !dbg !3810

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3811
  %bf.load = load i64, i64* %0, align 8, !dbg !3811
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3813
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !3813
  br i1 %cmp, label %if.end2, label %return, !dbg !3814

if.end2:                                          ; preds = %if.end
  %bf.cast62 = lshr i64 %bf.load, 22, !dbg !3815
  %1 = trunc i64 %bf.cast62 to i8, !dbg !3815
  %2 = and i8 %1, 1, !dbg !3815
  br label %return, !dbg !3816

return:                                           ; preds = %if.end, %entry, %if.end2
  %retval.0 = phi i8 [ %2, %if.end2 ], [ 0, %entry ], [ 0, %if.end ], !dbg !3807
  ret i8 %retval.0, !dbg !3817
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !3818 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !3824, metadata !DIExpression()), !dbg !3825
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !3826
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3826

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !3826
  %0 = load i32, i32* %num, align 8, !dbg !3826
  br label %cond.end, !dbg !3826

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3826
  ret i32 %cond, !dbg !3826
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3827 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3831, metadata !DIExpression()), !dbg !3832
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !3833
  %cmp = icmp eq i32 %call, 0, !dbg !3834
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !3835

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !3836
  %cmp2 = icmp ult i32 %call1, 10, !dbg !3837
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !3838
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3839 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3843, metadata !DIExpression()), !dbg !3845
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !3846
  %idxprom = zext i32 %call to i64, !dbg !3847
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !3847
  %0 = load i64, i64* %arrayidx, align 8, !dbg !3847
  call void @llvm.dbg.value(metadata i64 %0, metadata !3844, metadata !DIExpression()), !dbg !3845
  %cmp = icmp eq i64 %0, 0, !dbg !3848
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3848

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3848
  br label %cond.end, !dbg !3848

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !3849
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !3850
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !3851
  ret %union.tree_node** %2, !dbg !3852
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3853 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3857, metadata !DIExpression()), !dbg !3858
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !3859
  %bf.load = load i32, i32* %0, align 8, !dbg !3859
  %bf.clear = and i32 %bf.load, 255, !dbg !3859
  ret i32 %bf.clear, !dbg !3860
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3861 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3865, metadata !DIExpression()), !dbg !3866
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !3867
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !3868
  ret i32 %call1, !dbg !3869
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !3870 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !3874, metadata !DIExpression()), !dbg !3875
  %idxprom = zext i32 %code to i64, !dbg !3876
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !3876
  %0 = load i32, i32* %arrayidx, align 4, !dbg !3876
  ret i32 %0, !dbg !3877
}

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @rtx_cost(%struct.rtx_def*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_sbitmap_heap_safe_grow(%struct.VEC_sbitmap_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !3878 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list, metadata !3880, metadata !DIExpression()), !dbg !3882
  call void @llvm.dbg.value(metadata i32 %size_, metadata !3881, metadata !DIExpression()), !dbg !3882
  %cmp = icmp sgt i32 %size_, -1, !dbg !3883
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3883

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_sbitmap_heap*, %struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list, align 8, !dbg !3883
  %tobool = icmp eq %struct.VEC_sbitmap_heap* %0, null, !dbg !3883
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3883

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_sbitmap_heap, %struct.VEC_sbitmap_heap* %0, i64 0, i32 0, !dbg !3883
  br label %cond.end, !dbg !3883

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_sbitmap_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !3883
  %call = tail call fastcc i32 @VEC_sbitmap_base_length(%struct.VEC_sbitmap_base* %cond) #7, !dbg !3883
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_sbitmap_heap*, %struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list, align 8, !dbg !3883
  %tobool2 = icmp eq %struct.VEC_sbitmap_heap* %1, null, !dbg !3883
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !3883

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_sbitmap_heap, %struct.VEC_sbitmap_heap* %1, i64 0, i32 0, i32 0, !dbg !3883
  %2 = load i32, i32* %num, align 8, !dbg !3883
  br label %cond.end11, !dbg !3883

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !3883
  %sub = sub nsw i32 %size_, %cond12, !dbg !3883
  %call13 = tail call fastcc i32 @VEC_sbitmap_heap_reserve_exact(%struct.VEC_sbitmap_heap** nonnull @multiplier_allowed_in_address_p.valid_mult_list, i32 %sub) #7, !dbg !3883
  %3 = load %struct.VEC_sbitmap_heap*, %struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list, align 8, !dbg !3883
  %num20 = getelementptr inbounds %struct.VEC_sbitmap_heap, %struct.VEC_sbitmap_heap* %3, i64 0, i32 0, i32 0, !dbg !3883
  store i32 %size_, i32* %num20, align 8, !dbg !3883
  ret void, !dbg !3883
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.simple_bitmap_def** @VEC_sbitmap_base_address(%struct.VEC_sbitmap_base* %vec_) unnamed_addr #0 !dbg !3884 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sbitmap_base* %vec_, metadata !3889, metadata !DIExpression()), !dbg !3890
  %tobool = icmp eq %struct.VEC_sbitmap_base* %vec_, null, !dbg !3891
  %arraydecay = getelementptr inbounds %struct.VEC_sbitmap_base, %struct.VEC_sbitmap_base* %vec_, i64 0, i32 2, i64 0, !dbg !3891
  %cond = select i1 %tobool, %struct.simple_bitmap_def** null, %struct.simple_bitmap_def** %arraydecay, !dbg !3891
  ret %struct.simple_bitmap_def** %cond, !dbg !3891
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_sbitmap_heap_reserve_exact(%struct.VEC_sbitmap_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3892 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list, metadata !3896, metadata !DIExpression()), !dbg !3899
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3897, metadata !DIExpression()), !dbg !3899
  %0 = load %struct.VEC_sbitmap_heap*, %struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list, align 8, !dbg !3900
  %tobool = icmp eq %struct.VEC_sbitmap_heap* %0, null, !dbg !3900
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3900

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_sbitmap_heap, %struct.VEC_sbitmap_heap* %0, i64 0, i32 0, !dbg !3900
  br label %cond.end, !dbg !3900

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_sbitmap_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3900
  %call = tail call fastcc i32 @VEC_sbitmap_base_space(%struct.VEC_sbitmap_base* %cond, i32 %alloc_) #7, !dbg !3900
  %tobool1 = icmp eq i32 %call, 0, !dbg !3900
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !3900
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !3898, metadata !DIExpression()), !dbg !3899
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3900

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list to i8**), align 8, !dbg !3901
  %call3 = tail call i8* @vec_heap_p_reserve_exact(i8* %1, i32 %alloc_) #6, !dbg !3901
  store i8* %call3, i8** bitcast (%struct.VEC_sbitmap_heap** @multiplier_allowed_in_address_p.valid_mult_list to i8**), align 8, !dbg !3901
  br label %if.end, !dbg !3901

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !3900
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_sbitmap_base_space(%struct.VEC_sbitmap_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3903 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sbitmap_base* %vec_, metadata !3907, metadata !DIExpression()), !dbg !3909
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3908, metadata !DIExpression()), !dbg !3909
  %tobool = icmp eq %struct.VEC_sbitmap_base* %vec_, null, !dbg !3910
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3910

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_sbitmap_base, %struct.VEC_sbitmap_base* %vec_, i64 0, i32 1, !dbg !3910
  %0 = load i32, i32* %alloc, align 4, !dbg !3910
  %num = getelementptr inbounds %struct.VEC_sbitmap_base, %struct.VEC_sbitmap_base* %vec_, i64 0, i32 0, !dbg !3910
  %1 = load i32, i32* %num, align 8, !dbg !3910
  %sub = sub i32 %0, %1, !dbg !3910
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !3910
  br label %cond.end, !dbg !3910

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !3910
  br label %cond.end, !dbg !3910

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !3910
  ret i32 %cond, !dbg !3910
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !3911 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3917, metadata !DIExpression()), !dbg !3918
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !3919
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3919

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !3919
  %0 = load i32, i32* %num, align 8, !dbg !3919
  br label %cond.end, !dbg !3919

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3919
  ret i32 %cond, !dbg !3919
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_iv_use_p_heap* @VEC_iv_use_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3920 {
entry:
  call void @llvm.dbg.value(metadata i32 20, metadata !3924, metadata !DIExpression()), !dbg !3925
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 20) #6, !dbg !3926
  %0 = bitcast i8* %call to %struct.VEC_iv_use_p_heap*, !dbg !3926
  ret %struct.VEC_iv_use_p_heap* %0, !dbg !3926
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_iv_cand_p_heap* @VEC_iv_cand_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3927 {
entry:
  call void @llvm.dbg.value(metadata i32 20, metadata !3931, metadata !DIExpression()), !dbg !3932
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 20) #6, !dbg !3933
  %0 = bitcast i8* %call to %struct.VEC_iv_cand_p_heap*, !dbg !3933
  ret %struct.VEC_iv_cand_p_heap* %0, !dbg !3933
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3934 {
entry:
  call void @llvm.dbg.value(metadata i32 20, metadata !3938, metadata !DIExpression()), !dbg !3939
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 20) #6, !dbg !3940
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !3940
  ret %struct.VEC_tree_heap* %0, !dbg !3940
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3941 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3945, metadata !DIExpression()), !dbg !3946
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 4) #6, !dbg !3947
  %0 = bitcast i8* %call to %struct.VEC_int_heap*, !dbg !3947
  ret %struct.VEC_int_heap* %0, !dbg !3947
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @number_of_loops() unnamed_addr #0 !dbg !3948 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3951
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !3951
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3951
  %tobool = icmp eq %struct.loops* %1, null, !dbg !3951
  br i1 %tobool, label %return, label %if.end, !dbg !3953

if.end:                                           ; preds = %entry
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !3954
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !3954
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !3954
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !3954

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !3954
  br label %cond.end, !dbg !3954

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3954
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !3954
  br label %return, !dbg !3955

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi i32 [ %call, %cond.end ], [ 0, %entry ], !dbg !3956
  ret i32 %retval.0, !dbg !3957
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !3958 {
entry:
  unreachable, !dbg !3965
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !3966 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !3971, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !3972, metadata !DIExpression()), !dbg !3974
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !3975
  %0 = load i32, i32* %num1, align 4, !dbg !3975
  %inc = add i32 %0, 1, !dbg !3975
  store i32 %inc, i32* %num1, align 4, !dbg !3975
  %idxprom = zext i32 %0 to i64, !dbg !3975
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3975
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !3973, metadata !DIExpression()), !dbg !3974
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !3975
  ret i32* %arrayidx, !dbg !3975
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !3976 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3980, metadata !DIExpression()), !dbg !3982
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !3983
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3983
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !3983
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3983

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !3983
  br label %cond.end, !dbg !3983

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3983
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !3983
  call void @llvm.dbg.value(metadata i32 %call, metadata !3981, metadata !DIExpression()), !dbg !3982
  %cmp = icmp eq i32 %call, 0, !dbg !3984
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3986

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3987
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !3987
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !3987

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !3987
  br label %cond.end8, !dbg !3987

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !3987
  %sub = add i32 %call, -1, !dbg !3987
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #7, !dbg !3987
  br label %cleanup, !dbg !3988

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !3982
  ret %struct.loop* %retval.0, !dbg !3989
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3990 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !3994, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3995, metadata !DIExpression()), !dbg !3996
  br label %land.end, !dbg !3997

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3997
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3997
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !3997
  ret %struct.loop* %0, !dbg !3997
}

declare dso_local zeroext i8 @optimize_loop_for_speed_p(%struct.loop*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @last_stmt(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def** @get_loop_body(%struct.loop*) local_unnamed_addr #2

declare dso_local void @renumber_gimple_stmt_uids_in_blocks(%struct.basic_block_def**, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @find_induction_variables(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !3998 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4002, metadata !DIExpression()), !dbg !4015
  %0 = bitcast i32* %i to i8*, !dbg !4016
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4016
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4017
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4017
  %call = tail call fastcc zeroext i8 @find_bivs(%struct.ivopts_data* %data) #7, !dbg !4018
  %tobool = icmp eq i8 %call, 0, !dbg !4018
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4020

if.end:                                           ; preds = %entry
  tail call fastcc void @find_givs(%struct.ivopts_data* %data) #7, !dbg !4021
  tail call fastcc void @mark_bivs(%struct.ivopts_data* %data) #7, !dbg !4022
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4023
  %tobool1 = icmp eq %struct._IO_FILE* %2, null, !dbg !4023
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !4024

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32, i32* @dump_flags, align 4, !dbg !4025
  %and = and i32 %3, 8, !dbg !4026
  %tobool2 = icmp eq i32 %and, 0, !dbg !4026
  br i1 %tobool2, label %cleanup, label %if.then3, !dbg !4027

if.then3:                                         ; preds = %land.lhs.true
  %call4 = tail call fastcc %union.tree_node* @niter_for_single_dom_exit(%struct.ivopts_data* %data) #7, !dbg !4028
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !4012, metadata !DIExpression()), !dbg !4029
  %tobool5 = icmp eq %union.tree_node* %call4, null, !dbg !4030
  br i1 %tobool5, label %if.end9, label %if.then6, !dbg !4032

if.then6:                                         ; preds = %if.then3
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4033
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !4035
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4036
  tail call void @print_generic_expr(%struct._IO_FILE* %5, %union.tree_node* nonnull %call4, i32 2) #6, !dbg !4037
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4038
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !4039
  br label %if.end9, !dbg !4040

if.end9:                                          ; preds = %if.then3, %if.then6
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4041
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !4042
  %relevant = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 5, !dbg !4043
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %relevant, align 8, !dbg !4043
  call void @llvm.dbg.value(metadata i32* %i, metadata !4003, metadata !DIExpression(DW_OP_deref)), !dbg !4015
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4004, metadata !DIExpression(DW_OP_deref)), !dbg !4015
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %8, i32 0, i32* nonnull %i) #7, !dbg !4043
  br label %for.cond, !dbg !4043

for.cond:                                         ; preds = %for.inc, %if.end9
  call void @llvm.dbg.value(metadata i32* %i, metadata !4003, metadata !DIExpression(DW_OP_deref)), !dbg !4015
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4004, metadata !DIExpression(DW_OP_deref)), !dbg !4015
  %call11 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4045
  %tobool12 = icmp eq i8 %call11, 0, !dbg !4043
  br i1 %tobool12, label %cleanup.loopexit, label %for.body, !dbg !4043

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !4047
  call void @llvm.dbg.value(metadata i32 %9, metadata !4003, metadata !DIExpression()), !dbg !4015
  %call13 = call fastcc %struct.version_info* @ver_info(%struct.ivopts_data* %data, i32 %9) #7, !dbg !4050
  %iv = getelementptr inbounds %struct.version_info, %struct.version_info* %call13, i64 0, i32 1, !dbg !4051
  %10 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !4051
  %tobool14 = icmp eq %struct.iv* %10, null, !dbg !4050
  br i1 %tobool14, label %for.inc, label %if.then15, !dbg !4052

if.then15:                                        ; preds = %for.body
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4053
  %12 = load i32, i32* %i, align 4, !dbg !4054
  call void @llvm.dbg.value(metadata i32 %12, metadata !4003, metadata !DIExpression()), !dbg !4015
  %call16 = call fastcc %struct.version_info* @ver_info(%struct.ivopts_data* %data, i32 %12) #7, !dbg !4055
  %iv17 = getelementptr inbounds %struct.version_info, %struct.version_info* %call16, i64 0, i32 1, !dbg !4056
  %13 = load %struct.iv*, %struct.iv** %iv17, align 8, !dbg !4056
  call void @dump_iv(%struct._IO_FILE* %11, %struct.iv* %13) #7, !dbg !4057
  br label %for.inc, !dbg !4057

for.inc:                                          ; preds = %for.body, %if.then15
  call void @llvm.dbg.value(metadata i32* %i, metadata !4003, metadata !DIExpression(DW_OP_deref)), !dbg !4015
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4004, metadata !DIExpression(DW_OP_deref)), !dbg !4015
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4045
  br label %for.cond, !dbg !4045, !llvm.loop !4058

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4060

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true, %if.end, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %land.lhs.true ], [ 1, %if.end ], [ 1, %cleanup.loopexit ], !dbg !4015
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4060
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4060
  ret i8 %retval.0, !dbg !4060
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_interesting_uses(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4061 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %i = alloca i32, align 4
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp17 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp25 = alloca %struct.gimple_stmt_iterator, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4063, metadata !DIExpression()), !dbg !4089
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !4090
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4090
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !4091
  %1 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !4091
  %call = tail call %struct.basic_block_def** @get_loop_body(%struct.loop* %1) #6, !dbg !4092
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !4072, metadata !DIExpression()), !dbg !4089
  %2 = bitcast i32* %i to i8*, !dbg !4093
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4093
  %3 = bitcast %struct.edge_def** %e to i8*, !dbg !4094
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4094
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4095
  %tobool = icmp eq %struct._IO_FILE* %4, null, !dbg !4095
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4097

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* @dump_flags, align 4, !dbg !4098
  %and = and i32 %5, 8, !dbg !4099
  %tobool1 = icmp eq i32 %and, 0, !dbg !4099
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4100

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !4101
  br label %if.end, !dbg !4101

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !4073, metadata !DIExpression()), !dbg !4089
  %6 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4102
  %7 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4103
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4103
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4103
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4105
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4105
  %12 = bitcast %struct.gimple_stmt_iterator* %tmp17 to i8*, !dbg !4107
  %13 = bitcast %struct.gimple_stmt_iterator* %tmp25 to i8*, !dbg !4109
  br label %for.cond, !dbg !4111

for.cond:                                         ; preds = %for.end38, %if.end
  %14 = phi i32 [ 0, %if.end ], [ %inc, %for.end38 ], !dbg !4112
  store i32 %14, i32* %i, align 4, !dbg !4112
  call void @llvm.dbg.value(metadata i32 %14, metadata !4073, metadata !DIExpression()), !dbg !4089
  %15 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !4113
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %15, i64 0, i32 6, !dbg !4114
  %16 = load i32, i32* %num_nodes, align 4, !dbg !4114
  %cmp = icmp ult i32 %14, %16, !dbg !4115
  br i1 %cmp, label %for.body, label %for.end40, !dbg !4116

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !4117
  call void @llvm.dbg.value(metadata i32 %14, metadata !4073, metadata !DIExpression()), !dbg !4089
  %idxprom = zext i32 %14 to i64, !dbg !4118
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %idxprom, !dbg !4118
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4118
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %17, metadata !4064, metadata !DIExpression()), !dbg !4089
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8, !dbg !4119
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i64 0, i32 1, !dbg !4119
  %call4 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !4119
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call4, 0, !dbg !4119
  store i32 %18, i32* %8, align 8, !dbg !4119
  %19 = extractvalue { i32, %struct.VEC_edge_gc** } %call4, 1, !dbg !4119
  store %struct.VEC_edge_gc** %19, %struct.VEC_edge_gc*** %9, align 8, !dbg !4119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %7, i64 16, i1 false), !dbg !4119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8, !dbg !4119
  br label %for.cond5, !dbg !4119

for.cond5:                                        ; preds = %for.inc, %for.body
  %20 = load i32, i32* %10, align 8, !dbg !4120
  %21 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !4120
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4075, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  %call6 = call fastcc zeroext i8 @ei_cond(i32 %20, %struct.VEC_edge_gc** %21, %struct.edge_def** nonnull %e) #7, !dbg !4120
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4119
  br i1 %tobool7, label %for.end, label %for.body8, !dbg !4119

for.body8:                                        ; preds = %for.cond5
  %22 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4121
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !4075, metadata !DIExpression()), !dbg !4089
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i64 0, i32 1, !dbg !4123
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4123
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4124
  %cfg = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, i32 1, !dbg !4124
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4124
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i64 0, i32 1, !dbg !4124
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4124
  %cmp9 = icmp eq %struct.basic_block_def* %23, %26, !dbg !4125
  br i1 %cmp9, label %for.inc, label %land.lhs.true10, !dbg !4126

land.lhs.true10:                                  ; preds = %for.body8
  %27 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !4127
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !4075, metadata !DIExpression()), !dbg !4089
  %call13 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %27, %struct.basic_block_def* %23) #6, !dbg !4128
  %tobool14 = icmp eq i8 %call13, 0, !dbg !4128
  br i1 %tobool14, label %if.then15, label %for.inc, !dbg !4129

if.then15:                                        ; preds = %land.lhs.true10
  %28 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4130
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !4075, metadata !DIExpression()), !dbg !4089
  call fastcc void @find_interesting_uses_outside(%struct.ivopts_data* %data, %struct.edge_def* %28) #7, !dbg !4131
  br label %for.inc, !dbg !4131

for.inc:                                          ; preds = %land.lhs.true10, %for.body8, %if.then15
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4076, metadata !DIExpression(DW_OP_deref)), !dbg !4102
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4120
  br label %for.cond5, !dbg !4120, !llvm.loop !4132

for.end:                                          ; preds = %for.cond5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8, !dbg !4134
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp17, %struct.basic_block_def* %17) #6, !dbg !4134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %12, i64 24, i1 false), !dbg !4134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8, !dbg !4134
  br label %for.cond18, !dbg !4135

for.cond18:                                       ; preds = %for.body21, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4065, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  %call19 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4136
  %tobool20 = icmp eq i8 %call19, 0, !dbg !4138
  br i1 %tobool20, label %for.body21, label %for.end24, !dbg !4139

for.body21:                                       ; preds = %for.cond18
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4065, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  %call22 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4140
  call fastcc void @find_interesting_uses_stmt(%struct.ivopts_data* %data, %union.gimple_statement_d* %call22) #7, !dbg !4141
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4065, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !4142
  br label %for.cond18, !dbg !4143, !llvm.loop !4144

for.end24:                                        ; preds = %for.cond18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8, !dbg !4146
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp25, %struct.basic_block_def* %17) #7, !dbg !4146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %13, i64 24, i1 false), !dbg !4146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8, !dbg !4146
  br label %for.cond26, !dbg !4147

for.cond26:                                       ; preds = %for.inc37, %for.end24
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4065, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  %call27 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4148
  %tobool28 = icmp eq i8 %call27, 0, !dbg !4150
  br i1 %tobool28, label %for.body30, label %for.end38, !dbg !4151

for.body30:                                       ; preds = %for.cond26
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4065, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  %call31 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4152
  %call32 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call31) #7, !dbg !4154
  %tobool33 = icmp eq i8 %call32, 0, !dbg !4154
  br i1 %tobool33, label %if.then34, label %for.inc37, !dbg !4155

if.then34:                                        ; preds = %for.body30
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4065, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  %call35 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4156
  call fastcc void @find_interesting_uses_stmt(%struct.ivopts_data* %data, %union.gimple_statement_d* %call35) #7, !dbg !4157
  br label %for.inc37, !dbg !4157

for.inc37:                                        ; preds = %for.body30, %if.then34
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4065, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !4158
  br label %for.cond26, !dbg !4159, !llvm.loop !4160

for.end38:                                        ; preds = %for.cond26
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !4162
  %29 = load i32, i32* %i, align 4, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %29, metadata !4073, metadata !DIExpression()), !dbg !4089
  %inc = add i32 %29, 1, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4073, metadata !DIExpression()), !dbg !4089
  br label %for.cond, !dbg !4164, !llvm.loop !4165

for.end40:                                        ; preds = %for.cond
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4167
  %tobool41 = icmp eq %struct._IO_FILE* %30, null, !dbg !4167
  br i1 %tobool41, label %if.end62, label %land.lhs.true42, !dbg !4168

land.lhs.true42:                                  ; preds = %for.end40
  %31 = load i32, i32* @dump_flags, align 4, !dbg !4169
  %and43 = and i32 %31, 8, !dbg !4170
  %tobool44 = icmp eq i32 %and43, 0, !dbg !4170
  br i1 %tobool44, label %if.end62, label %if.then45, !dbg !4171

if.then45:                                        ; preds = %land.lhs.true42
  %32 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4172
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #8, !dbg !4172
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4173
  %relevant = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 5, !dbg !4174
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %relevant, align 8, !dbg !4174
  call void @llvm.dbg.value(metadata i32* %i, metadata !4073, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4086, metadata !DIExpression(DW_OP_deref)), !dbg !4176
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %33, i32 0, i32* nonnull %i) #7, !dbg !4174
  br label %for.cond47, !dbg !4174

for.cond47:                                       ; preds = %for.inc59, %if.then45
  call void @llvm.dbg.value(metadata i32* %i, metadata !4073, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4086, metadata !DIExpression(DW_OP_deref)), !dbg !4176
  %call48 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4177
  %tobool49 = icmp eq i8 %call48, 0, !dbg !4174
  br i1 %tobool49, label %for.end60, label %for.body50, !dbg !4174

for.body50:                                       ; preds = %for.cond47
  %34 = load i32, i32* %i, align 4, !dbg !4179
  call void @llvm.dbg.value(metadata i32 %34, metadata !4073, metadata !DIExpression()), !dbg !4089
  %call51 = call fastcc %struct.version_info* @ver_info(%struct.ivopts_data* %data, i32 %34) #7, !dbg !4181
  call void @llvm.dbg.value(metadata %struct.version_info* %call51, metadata !4074, metadata !DIExpression()), !dbg !4089
  %inv_id = getelementptr inbounds %struct.version_info, %struct.version_info* %call51, i64 0, i32 3, !dbg !4182
  %35 = load i32, i32* %inv_id, align 4, !dbg !4182
  %tobool52 = icmp eq i32 %35, 0, !dbg !4184
  br i1 %tobool52, label %for.inc59, label %if.then53, !dbg !4185

if.then53:                                        ; preds = %for.body50
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4186
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !4188
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4189
  %name = getelementptr inbounds %struct.version_info, %struct.version_info* %call51, i64 0, i32 0, !dbg !4190
  %38 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !4190
  call void @print_generic_expr(%struct._IO_FILE* %37, %union.tree_node* %38, i32 2) #6, !dbg !4191
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4192
  %40 = load i32, i32* %inv_id, align 4, !dbg !4193
  %has_nonlin_use = getelementptr inbounds %struct.version_info, %struct.version_info* %call51, i64 0, i32 2, !dbg !4194
  %41 = load i8, i8* %has_nonlin_use, align 8, !dbg !4194
  %tobool56 = icmp eq i8 %41, 0, !dbg !4195
  %cond = select i1 %tobool56, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), !dbg !4195
  %call57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38, i64 0, i64 0), i32 %40, i8* %cond) #6, !dbg !4196
  br label %for.inc59, !dbg !4197

for.inc59:                                        ; preds = %for.body50, %if.then53
  call void @llvm.dbg.value(metadata i32* %i, metadata !4073, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4086, metadata !DIExpression(DW_OP_deref)), !dbg !4176
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4177
  br label %for.cond47, !dbg !4177, !llvm.loop !4198

for.end60:                                        ; preds = %for.cond47
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4200
  %call61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4201
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #8, !dbg !4202
  br label %if.end62, !dbg !4203

if.end62:                                         ; preds = %land.lhs.true42, %for.end40, %for.end60
  %43 = bitcast %struct.basic_block_def** %call to i8*, !dbg !4204
  call void @free(i8* %43) #6, !dbg !4205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4206
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4206
  ret void, !dbg !4206
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_iv_candidates(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4207 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4209, metadata !DIExpression()), !dbg !4210
  tail call fastcc void @add_standard_iv_candidates(%struct.ivopts_data* %data) #7, !dbg !4211
  tail call fastcc void @add_old_ivs_candidates(%struct.ivopts_data* %data) #7, !dbg !4212
  tail call fastcc void @add_derived_ivs_candidates(%struct.ivopts_data* %data) #7, !dbg !4213
  tail call fastcc void @set_autoinc_for_original_candidates(%struct.ivopts_data* %data) #7, !dbg !4214
  tail call fastcc void @record_important_candidates(%struct.ivopts_data* %data) #7, !dbg !4215
  ret void, !dbg !4216
}

; Function Attrs: nounwind uwtable
define internal fastcc void @determine_iv_costs(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4217 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4219, metadata !DIExpression()), !dbg !4225
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4226
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !4226
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4228

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !4229
  %and = and i32 %1, 8, !dbg !4230
  %tobool1 = icmp eq i32 %and, 0, !dbg !4230
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4231

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.64, i64 0, i64 0)) #6, !dbg !4232
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4234
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0)) #6, !dbg !4235
  br label %if.end, !dbg !4236

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !4220, metadata !DIExpression()), !dbg !4225
  br label %for.cond, !dbg !4237

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ], !dbg !4238
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4220, metadata !DIExpression()), !dbg !4225
  %call3 = tail call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !4239
  %cmp = icmp ult i32 %i.0, %call3, !dbg !4240
  br i1 %cmp, label %for.body, label %for.end, !dbg !4241

for.body:                                         ; preds = %for.cond
  %call4 = tail call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !4242
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call4, metadata !4221, metadata !DIExpression()), !dbg !4243
  tail call fastcc void @determine_iv_cost(%struct.ivopts_data* %data, %struct.iv_cand* %call4) #7, !dbg !4244
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4245
  %tobool5 = icmp eq %struct._IO_FILE* %3, null, !dbg !4245
  br i1 %tobool5, label %for.inc, label %land.lhs.true6, !dbg !4247

land.lhs.true6:                                   ; preds = %for.body
  %4 = load i32, i32* @dump_flags, align 4, !dbg !4248
  %and7 = and i32 %4, 8, !dbg !4249
  %tobool8 = icmp eq i32 %and7, 0, !dbg !4249
  br i1 %tobool8, label %for.inc, label %if.then9, !dbg !4250

if.then9:                                         ; preds = %land.lhs.true6
  %cost = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call4, i64 0, i32 7, !dbg !4251
  %5 = load i32, i32* %cost, align 8, !dbg !4251
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i64 0, i64 0), i32 %i.0, i32 %5) #6, !dbg !4252
  br label %for.inc, !dbg !4252

for.inc:                                          ; preds = %land.lhs.true6, %for.body, %if.then9
  %inc = add i32 %i.0, 1, !dbg !4253
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4220, metadata !DIExpression()), !dbg !4225
  br label %for.cond, !dbg !4254, !llvm.loop !4255

for.end:                                          ; preds = %for.cond
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4257
  %tobool12 = icmp eq %struct._IO_FILE* %6, null, !dbg !4257
  br i1 %tobool12, label %if.end18, label %land.lhs.true13, !dbg !4259

land.lhs.true13:                                  ; preds = %for.end
  %7 = load i32, i32* @dump_flags, align 4, !dbg !4260
  %and14 = and i32 %7, 8, !dbg !4261
  %tobool15 = icmp eq i32 %and14, 0, !dbg !4261
  br i1 %tobool15, label %if.end18, label %if.then16, !dbg !4262

if.then16:                                        ; preds = %land.lhs.true13
  %call17 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4263
  br label %if.end18, !dbg !4263

if.end18:                                         ; preds = %land.lhs.true13, %for.end, %if.then16
  ret void, !dbg !4264
}

; Function Attrs: nounwind uwtable
define internal fastcc void @determine_use_iv_costs(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4265 {
entry:
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4267, metadata !DIExpression()), !dbg !4279
  %0 = bitcast i32* %j to i8*, !dbg !4280
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4280
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4281
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !4272, metadata !DIExpression()), !dbg !4279
  tail call fastcc void @alloc_use_cost_map(%struct.ivopts_data* %data) #7, !dbg !4282
  call void @llvm.dbg.value(metadata i32 0, metadata !4268, metadata !DIExpression()), !dbg !4279
  %consider_all_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 10, !dbg !4283
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4284
  br label %for.cond, !dbg !4285

for.cond:                                         ; preds = %for.inc23, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc24, %for.inc23 ], !dbg !4286
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4268, metadata !DIExpression()), !dbg !4279
  %call1 = call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !4287
  %cmp = icmp ult i32 %i.0, %call1, !dbg !4288
  br i1 %cmp, label %for.body, label %for.end25, !dbg !4289

for.body:                                         ; preds = %for.cond
  %call2 = call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !4290
  call void @llvm.dbg.value(metadata %struct.iv_use* %call2, metadata !4270, metadata !DIExpression()), !dbg !4279
  %2 = load i8, i8* %consider_all_candidates, align 4, !dbg !4291
  %tobool = icmp eq i8 %2, 0, !dbg !4292
  br i1 %tobool, label %if.else, label %if.then, !dbg !4293

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 0, metadata !4269, metadata !DIExpression()), !dbg !4279
  br label %for.cond3, !dbg !4294

for.cond3:                                        ; preds = %for.body6, %if.then
  %storemerge1 = phi i32 [ 0, %if.then ], [ %inc, %for.body6 ], !dbg !4297
  store i32 %storemerge1, i32* %j, align 4, !dbg !4297
  call void @llvm.dbg.value(metadata i32 %storemerge1, metadata !4269, metadata !DIExpression()), !dbg !4279
  %call4 = call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !4298
  %cmp5 = icmp ult i32 %storemerge1, %call4, !dbg !4300
  br i1 %cmp5, label %for.body6, label %for.inc23.loopexit, !dbg !4301

for.body6:                                        ; preds = %for.cond3
  %3 = load i32, i32* %j, align 4, !dbg !4302
  call void @llvm.dbg.value(metadata i32 %3, metadata !4269, metadata !DIExpression()), !dbg !4279
  %call7 = call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %3) #7, !dbg !4304
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call7, metadata !4271, metadata !DIExpression()), !dbg !4279
  %call8 = call fastcc zeroext i8 @determine_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %call2, %struct.iv_cand* %call7) #7, !dbg !4305
  %4 = load i32, i32* %j, align 4, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %4, metadata !4269, metadata !DIExpression()), !dbg !4279
  %inc = add i32 %4, 1, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4269, metadata !DIExpression()), !dbg !4279
  br label %for.cond3, !dbg !4307, !llvm.loop !4308

if.else:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4310
  %related_cands = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call2, i64 0, i32 5, !dbg !4311
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %related_cands, align 8, !dbg !4311
  call void @llvm.dbg.value(metadata i32* %j, metadata !4269, metadata !DIExpression(DW_OP_deref)), !dbg !4279
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4273, metadata !DIExpression(DW_OP_deref)), !dbg !4284
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %5, i32 0, i32* nonnull %j) #7, !dbg !4311
  br label %for.cond9, !dbg !4311

for.cond9:                                        ; preds = %for.inc18, %if.else
  call void @llvm.dbg.value(metadata i32* %j, metadata !4269, metadata !DIExpression(DW_OP_deref)), !dbg !4279
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4273, metadata !DIExpression(DW_OP_deref)), !dbg !4284
  %call10 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !4313
  %tobool11 = icmp eq i8 %call10, 0, !dbg !4311
  br i1 %tobool11, label %for.end19, label %for.body12, !dbg !4311

for.body12:                                       ; preds = %for.cond9
  %6 = load i32, i32* %j, align 4, !dbg !4315
  call void @llvm.dbg.value(metadata i32 %6, metadata !4269, metadata !DIExpression()), !dbg !4279
  %call13 = call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %6) #7, !dbg !4317
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call13, metadata !4271, metadata !DIExpression()), !dbg !4279
  %call14 = call fastcc zeroext i8 @determine_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %call2, %struct.iv_cand* %call13) #7, !dbg !4318
  %tobool15 = icmp eq i8 %call14, 0, !dbg !4318
  br i1 %tobool15, label %if.then16, label %for.inc18, !dbg !4320

if.then16:                                        ; preds = %for.body12
  %7 = load i32, i32* %j, align 4, !dbg !4321
  call void @llvm.dbg.value(metadata i32 %7, metadata !4269, metadata !DIExpression()), !dbg !4279
  %call17 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %7) #6, !dbg !4322
  br label %for.inc18, !dbg !4322

for.inc18:                                        ; preds = %for.body12, %if.then16
  call void @llvm.dbg.value(metadata i32* %j, metadata !4269, metadata !DIExpression(DW_OP_deref)), !dbg !4279
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4273, metadata !DIExpression(DW_OP_deref)), !dbg !4284
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !4313
  br label %for.cond9, !dbg !4313, !llvm.loop !4323

for.end19:                                        ; preds = %for.cond9
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %related_cands, align 8, !dbg !4325
  %call21 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %8, %struct.bitmap_head_def* %call) #6, !dbg !4326
  call void @bitmap_clear(%struct.bitmap_head_def* %call) #6, !dbg !4327
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4328
  br label %for.inc23

for.inc23.loopexit:                               ; preds = %for.cond3
  br label %for.inc23, !dbg !4329

for.inc23:                                        ; preds = %for.inc23.loopexit, %for.end19
  %inc24 = add i32 %i.0, 1, !dbg !4329
  call void @llvm.dbg.value(metadata i32 %inc24, metadata !4268, metadata !DIExpression()), !dbg !4279
  br label %for.cond, !dbg !4330, !llvm.loop !4331

for.end25:                                        ; preds = %for.cond
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !4333
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !4272, metadata !DIExpression()), !dbg !4279
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4334
  %tobool26 = icmp eq %struct._IO_FILE* %9, null, !dbg !4334
  br i1 %tobool26, label %if.end82, label %land.lhs.true, !dbg !4336

land.lhs.true:                                    ; preds = %for.end25
  %10 = load i32, i32* @dump_flags, align 4, !dbg !4337
  %and = and i32 %10, 8, !dbg !4338
  %tobool27 = icmp eq i32 %and, 0, !dbg !4338
  br i1 %tobool27, label %if.end82, label %if.then28, !dbg !4339

if.then28:                                        ; preds = %land.lhs.true
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.67, i64 0, i64 0)) #6, !dbg !4340
  call void @llvm.dbg.value(metadata i32 0, metadata !4268, metadata !DIExpression()), !dbg !4279
  br label %for.cond30, !dbg !4342

for.cond30:                                       ; preds = %for.end76, %if.then28
  %i.1 = phi i32 [ 0, %if.then28 ], [ %inc79, %for.end76 ], !dbg !4344
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4268, metadata !DIExpression()), !dbg !4279
  %call31 = call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !4345
  %cmp32 = icmp ult i32 %i.1, %call31, !dbg !4347
  br i1 %cmp32, label %for.body33, label %for.end80, !dbg !4348

for.body33:                                       ; preds = %for.cond30
  %call34 = call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i.1) #7, !dbg !4349
  call void @llvm.dbg.value(metadata %struct.iv_use* %call34, metadata !4270, metadata !DIExpression()), !dbg !4279
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4351
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.68, i64 0, i64 0), i32 %i.1) #6, !dbg !4352
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4353
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !4354
  call void @llvm.dbg.value(metadata i32 0, metadata !4269, metadata !DIExpression()), !dbg !4279
  %n_map_members = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call34, i64 0, i32 6, !dbg !4355
  %cost_map = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call34, i64 0, i32 7, !dbg !4358
  br label %for.cond37, !dbg !4361

for.cond37:                                       ; preds = %for.inc74, %for.body33
  %13 = phi i32 [ 0, %for.body33 ], [ %inc75, %for.inc74 ], !dbg !4362
  store i32 %13, i32* %j, align 4, !dbg !4362
  call void @llvm.dbg.value(metadata i32 %13, metadata !4269, metadata !DIExpression()), !dbg !4279
  %14 = load i32, i32* %n_map_members, align 8, !dbg !4363
  %cmp38 = icmp ult i32 %13, %14, !dbg !4364
  br i1 %cmp38, label %for.body39, label %for.end76, !dbg !4365

for.body39:                                       ; preds = %for.cond37
  %15 = load %struct.cost_pair*, %struct.cost_pair** %cost_map, align 8, !dbg !4366
  call void @llvm.dbg.value(metadata i32 %13, metadata !4269, metadata !DIExpression()), !dbg !4279
  %idxprom = zext i32 %13 to i64, !dbg !4367
  %cand40 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %15, i64 %idxprom, i32 0, !dbg !4368
  %16 = load %struct.iv_cand*, %struct.iv_cand** %cand40, align 8, !dbg !4368
  %tobool41 = icmp eq %struct.iv_cand* %16, null, !dbg !4367
  br i1 %tobool41, label %for.inc74, label %lor.lhs.false, !dbg !4369

lor.lhs.false:                                    ; preds = %for.body39
  call void @llvm.dbg.value(metadata i32 %13, metadata !4269, metadata !DIExpression()), !dbg !4279
  %cost = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %15, i64 %idxprom, i32 1, !dbg !4370
  %17 = bitcast %struct.comp_cost* %cost to i64*, !dbg !4371
  %18 = load i64, i64* %17, align 8, !dbg !4371
  %call45 = call fastcc zeroext i8 @infinite_cost_p(i64 %18) #7, !dbg !4371
  %tobool46 = icmp eq i8 %call45, 0, !dbg !4371
  br i1 %tobool46, label %if.end48, label %for.inc74, !dbg !4372

if.end48:                                         ; preds = %lor.lhs.false
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4373
  %20 = load %struct.cost_pair*, %struct.cost_pair** %cost_map, align 8, !dbg !4374
  %21 = load i32, i32* %j, align 4, !dbg !4375
  call void @llvm.dbg.value(metadata i32 %21, metadata !4269, metadata !DIExpression()), !dbg !4279
  %idxprom50 = zext i32 %21 to i64, !dbg !4376
  %cand52 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %20, i64 %idxprom50, i32 0, !dbg !4377
  %22 = load %struct.iv_cand*, %struct.iv_cand** %cand52, align 8, !dbg !4377
  %id = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %22, i64 0, i32 0, !dbg !4378
  %23 = load i32, i32* %id, align 8, !dbg !4378
  call void @llvm.dbg.value(metadata i32 %21, metadata !4269, metadata !DIExpression()), !dbg !4279
  %cost57 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %20, i64 %idxprom50, i32 1, i32 0, !dbg !4379
  %24 = load i32, i32* %cost57, align 8, !dbg !4379
  call void @llvm.dbg.value(metadata i32 %21, metadata !4269, metadata !DIExpression()), !dbg !4279
  %complexity = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %20, i64 %idxprom50, i32 1, i32 1, !dbg !4380
  %25 = load i32, i32* %complexity, align 4, !dbg !4380
  %call62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.70, i64 0, i64 0), i32 %23, i32 %24, i32 %25) #6, !dbg !4381
  %26 = load %struct.cost_pair*, %struct.cost_pair** %cost_map, align 8, !dbg !4382
  %27 = load i32, i32* %j, align 4, !dbg !4384
  call void @llvm.dbg.value(metadata i32 %27, metadata !4269, metadata !DIExpression()), !dbg !4279
  %idxprom64 = zext i32 %27 to i64, !dbg !4385
  %depends_on = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %26, i64 %idxprom64, i32 2, !dbg !4386
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on, align 8, !dbg !4386
  %tobool66 = icmp eq %struct.bitmap_head_def* %28, null, !dbg !4385
  br i1 %tobool66, label %if.end72, label %if.then67, !dbg !4387

if.then67:                                        ; preds = %if.end48
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4388
  call void @llvm.dbg.value(metadata i32 %27, metadata !4269, metadata !DIExpression()), !dbg !4279
  call void @bitmap_print(%struct._IO_FILE* %29, %struct.bitmap_head_def* nonnull %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !4389
  br label %if.end72, !dbg !4389

if.end72:                                         ; preds = %if.end48, %if.then67
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4390
  %call73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4391
  br label %for.inc74, !dbg !4392

for.inc74:                                        ; preds = %lor.lhs.false, %for.body39, %if.end72
  %31 = load i32, i32* %j, align 4, !dbg !4393
  call void @llvm.dbg.value(metadata i32 %31, metadata !4269, metadata !DIExpression()), !dbg !4279
  %inc75 = add i32 %31, 1, !dbg !4393
  call void @llvm.dbg.value(metadata i32 %inc75, metadata !4269, metadata !DIExpression()), !dbg !4279
  br label %for.cond37, !dbg !4394, !llvm.loop !4395

for.end76:                                        ; preds = %for.cond37
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4397
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4398
  %inc79 = add i32 %i.1, 1, !dbg !4399
  call void @llvm.dbg.value(metadata i32 %inc79, metadata !4268, metadata !DIExpression()), !dbg !4279
  br label %for.cond30, !dbg !4400, !llvm.loop !4401

for.end80:                                        ; preds = %for.cond30
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4403
  %call81 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4404
  br label %if.end82, !dbg !4405

if.end82:                                         ; preds = %land.lhs.true, %for.end25, %for.end80
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4406
  ret void, !dbg !4406
}

; Function Attrs: nounwind uwtable
define internal fastcc void @determine_set_costs(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4407 {
entry:
  %j = alloca i32, align 4
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4409, metadata !DIExpression()), !dbg !4421
  %0 = bitcast i32* %j to i8*, !dbg !4422
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4422
  %1 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !4423
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4423
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !4424
  %2 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !4424
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !4415, metadata !DIExpression()), !dbg !4421
  %3 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4425
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8, !dbg !4425
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4426
  %tobool = icmp eq %struct._IO_FILE* %4, null, !dbg !4426
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4428

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* @dump_flags, align 4, !dbg !4429
  %and = and i32 %5, 8, !dbg !4430
  %tobool1 = icmp eq i32 %and, 0, !dbg !4430
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4431

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !4432
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4434
  %7 = load i32, i32* @target_avail_regs, align 4, !dbg !4435
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.72, i64 0, i64 0), i32 %7) #6, !dbg !4436
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4437
  %speed = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 11, !dbg !4438
  %9 = load i8, i8* %speed, align 1, !dbg !4438
  %idxprom = zext i8 %9 to i64, !dbg !4439
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* @target_reg_cost, i64 0, i64 %idxprom, !dbg !4439
  %10 = load i32, i32* %arrayidx, align 4, !dbg !4439
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i64 0, i64 0), i32 %10) #6, !dbg !4440
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4441
  %12 = load i8, i8* %speed, align 1, !dbg !4442
  %idxprom5 = zext i8 %12 to i64, !dbg !4443
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* @target_spill_cost, i64 0, i64 %idxprom5, !dbg !4443
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !4443
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.74, i64 0, i64 0), i32 %13) #6, !dbg !4444
  br label %if.end, !dbg !4445

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !4411, metadata !DIExpression()), !dbg !4421
  %14 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4446
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8, !dbg !4446
  %header = getelementptr inbounds %struct.loop, %struct.loop* %2, i64 0, i32 2, !dbg !4448
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !4448
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %15) #6, !dbg !4446
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %14, i64 24, i1 false), !dbg !4446
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8, !dbg !4446
  br label %for.cond, !dbg !4449

for.cond:                                         ; preds = %for.inc, %if.end
  %n.0 = phi i32 [ 0, %if.end ], [ %n.1, %for.inc ], !dbg !4450
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !4411, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4413, metadata !DIExpression(DW_OP_deref)), !dbg !4421
  %call8 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !4451
  %tobool9 = icmp eq i8 %call8, 0, !dbg !4453
  br i1 %tobool9, label %for.body, label %for.end, !dbg !4454

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4413, metadata !DIExpression(DW_OP_deref)), !dbg !4421
  %call10 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !4455
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call10, metadata !4412, metadata !DIExpression()), !dbg !4421
  %call11 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call10) #7, !dbg !4457
  %call12 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call11) #7, !dbg !4457
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !4414, metadata !DIExpression()), !dbg !4421
  %call13 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call12) #6, !dbg !4458
  %tobool14 = icmp eq i8 %call13, 0, !dbg !4458
  br i1 %tobool14, label %for.inc, label %if.end16, !dbg !4460

if.end16:                                         ; preds = %for.body
  %call17 = call fastcc %struct.iv* @get_iv(%struct.ivopts_data* %data, %union.tree_node* %call12) #7, !dbg !4461
  %tobool18 = icmp eq %struct.iv* %call17, null, !dbg !4461
  %inc = zext i1 %tobool18 to i32, !dbg !4463
  %spec.select1 = add i32 %n.0, %inc, !dbg !4463
  br label %for.inc, !dbg !4463

for.inc:                                          ; preds = %for.body, %if.end16
  %n.1 = phi i32 [ %n.0, %for.body ], [ %spec.select1, %if.end16 ], !dbg !4421
  call void @llvm.dbg.value(metadata i32 %n.1, metadata !4411, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4413, metadata !DIExpression(DW_OP_deref)), !dbg !4421
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !4464
  br label %for.cond, !dbg !4465, !llvm.loop !4466

for.end:                                          ; preds = %for.cond
  %n.0.lcssa = phi i32 [ %n.0, %for.cond ], !dbg !4450
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !4411, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !4411, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !4411, metadata !DIExpression()), !dbg !4421
  %relevant = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 5, !dbg !4468
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %relevant, align 8, !dbg !4468
  call void @llvm.dbg.value(metadata i32* %j, metadata !4410, metadata !DIExpression(DW_OP_deref)), !dbg !4421
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4416, metadata !DIExpression(DW_OP_deref)), !dbg !4421
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %16, i32 0, i32* nonnull %j) #7, !dbg !4468
  br label %for.cond21, !dbg !4468

for.cond21:                                       ; preds = %for.inc32, %for.end
  %n.2 = phi i32 [ %n.0.lcssa, %for.end ], [ %n.3, %for.inc32 ], !dbg !4421
  call void @llvm.dbg.value(metadata i32 %n.2, metadata !4411, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i32* %j, metadata !4410, metadata !DIExpression(DW_OP_deref)), !dbg !4421
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4416, metadata !DIExpression(DW_OP_deref)), !dbg !4421
  %call22 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !4469
  %tobool23 = icmp eq i8 %call22, 0, !dbg !4468
  br i1 %tobool23, label %for.end33, label %for.body24, !dbg !4468

for.body24:                                       ; preds = %for.cond21
  %17 = load i32, i32* %j, align 4, !dbg !4470
  call void @llvm.dbg.value(metadata i32 %17, metadata !4410, metadata !DIExpression()), !dbg !4421
  %call25 = call fastcc %struct.version_info* @ver_info(%struct.ivopts_data* %data, i32 %17) #7, !dbg !4471
  call void @llvm.dbg.value(metadata %struct.version_info* %call25, metadata !4417, metadata !DIExpression()), !dbg !4472
  %inv_id = getelementptr inbounds %struct.version_info, %struct.version_info* %call25, i64 0, i32 3, !dbg !4473
  %18 = load i32, i32* %inv_id, align 4, !dbg !4473
  %tobool26 = icmp eq i32 %18, 0, !dbg !4475
  br i1 %tobool26, label %for.inc32, label %land.lhs.true27, !dbg !4476

land.lhs.true27:                                  ; preds = %for.body24
  %has_nonlin_use = getelementptr inbounds %struct.version_info, %struct.version_info* %call25, i64 0, i32 2, !dbg !4477
  %19 = load i8, i8* %has_nonlin_use, align 8, !dbg !4477
  %tobool28 = icmp ne i8 %19, 0, !dbg !4478
  %inc30 = zext i1 %tobool28 to i32, !dbg !4479
  %spec.select = add i32 %n.2, %inc30, !dbg !4479
  br label %for.inc32, !dbg !4479

for.inc32:                                        ; preds = %for.body24, %land.lhs.true27
  %n.3 = phi i32 [ %n.2, %for.body24 ], [ %spec.select, %land.lhs.true27 ], !dbg !4421
  call void @llvm.dbg.value(metadata i32 %n.3, metadata !4411, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i32* %j, metadata !4410, metadata !DIExpression(DW_OP_deref)), !dbg !4421
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4416, metadata !DIExpression(DW_OP_deref)), !dbg !4421
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !4469
  br label %for.cond21, !dbg !4469, !llvm.loop !4480

for.end33:                                        ; preds = %for.cond21
  %n.2.lcssa = phi i32 [ %n.2, %for.cond21 ], !dbg !4421
  call void @llvm.dbg.value(metadata i32 %n.2.lcssa, metadata !4411, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i32 %n.2.lcssa, metadata !4411, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i32 %n.2.lcssa, metadata !4411, metadata !DIExpression()), !dbg !4421
  %regs_used = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 2, !dbg !4482
  store i32 %n.2.lcssa, i32* %regs_used, align 8, !dbg !4483
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4484
  %tobool34 = icmp eq %struct._IO_FILE* %20, null, !dbg !4484
  br i1 %tobool34, label %if.end40, label %land.lhs.true35, !dbg !4486

land.lhs.true35:                                  ; preds = %for.end33
  %21 = load i32, i32* @dump_flags, align 4, !dbg !4487
  %and36 = and i32 %21, 8, !dbg !4488
  %tobool37 = icmp eq i32 %and36, 0, !dbg !4488
  br i1 %tobool37, label %if.end40, label %if.then38, !dbg !4489

if.then38:                                        ; preds = %land.lhs.true35
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i64 0, i64 0), i32 %n.2.lcssa) #6, !dbg !4490
  %.pre = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4491
  br label %if.end40, !dbg !4490

if.end40:                                         ; preds = %land.lhs.true35, %for.end33, %if.then38
  %22 = phi %struct._IO_FILE* [ %20, %land.lhs.true35 ], [ null, %for.end33 ], [ %.pre, %if.then38 ], !dbg !4491
  %tobool41 = icmp eq %struct._IO_FILE* %22, null, !dbg !4491
  br i1 %tobool41, label %if.end57, label %land.lhs.true42, !dbg !4493

land.lhs.true42:                                  ; preds = %if.end40
  %23 = load i32, i32* @dump_flags, align 4, !dbg !4494
  %and43 = and i32 %23, 8, !dbg !4495
  %tobool44 = icmp eq i32 %and43, 0, !dbg !4495
  br i1 %tobool44, label %if.end57, label %if.then45, !dbg !4496

if.then45:                                        ; preds = %land.lhs.true42
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.76, i64 0, i64 0)) #6, !dbg !4497
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4499
  %call47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.77, i64 0, i64 0)) #6, !dbg !4500
  call void @llvm.dbg.value(metadata i32 0, metadata !4410, metadata !DIExpression()), !dbg !4421
  br label %for.cond48, !dbg !4501

for.cond48:                                       ; preds = %for.body50, %if.then45
  %25 = phi i32 [ 0, %if.then45 ], [ %inc54, %for.body50 ], !dbg !4503
  store i32 %25, i32* %j, align 4, !dbg !4503
  call void @llvm.dbg.value(metadata i32 %25, metadata !4410, metadata !DIExpression()), !dbg !4421
  %26 = load i32, i32* @target_avail_regs, align 4, !dbg !4504
  %mul = shl i32 %26, 1, !dbg !4506
  %cmp = icmp ugt i32 %25, %mul, !dbg !4507
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4508
  br i1 %cmp, label %for.end55, label %for.body50, !dbg !4509

for.body50:                                       ; preds = %for.cond48
  call void @llvm.dbg.value(metadata i32 %25, metadata !4410, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i32 %25, metadata !4410, metadata !DIExpression()), !dbg !4421
  %call51 = call fastcc i32 @ivopts_global_cost_for_size(%struct.ivopts_data* %data, i32 %25) #7, !dbg !4510
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i64 0, i64 0), i32 %25, i32 %call51) #6, !dbg !4511
  %28 = load i32, i32* %j, align 4, !dbg !4512
  call void @llvm.dbg.value(metadata i32 %28, metadata !4410, metadata !DIExpression()), !dbg !4421
  %inc54 = add i32 %28, 1, !dbg !4512
  call void @llvm.dbg.value(metadata i32 %inc54, metadata !4410, metadata !DIExpression()), !dbg !4421
  br label %for.cond48, !dbg !4513, !llvm.loop !4514

for.end55:                                        ; preds = %for.cond48
  %.lcssa = phi %struct._IO_FILE* [ %27, %for.cond48 ], !dbg !4508
  %call56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %.lcssa, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4516
  br label %if.end57, !dbg !4517

if.end57:                                         ; preds = %land.lhs.true42, %if.end40, %for.end55
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8, !dbg !4518
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4518
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4518
  ret void, !dbg !4518
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.iv_ca* @find_optimal_iv_set(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4519 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4523, metadata !DIExpression()), !dbg !4530
  %call = tail call fastcc %struct.iv_ca* @get_initial_solution(%struct.ivopts_data* %data) #7, !dbg !4531
  call void @llvm.dbg.value(metadata %struct.iv_ca* %call, metadata !4525, metadata !DIExpression()), !dbg !4530
  %tobool = icmp eq %struct.iv_ca* %call, null, !dbg !4532
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4530
  %tobool6 = icmp ne %struct._IO_FILE* %0, null, !dbg !4530
  br i1 %tobool, label %if.then, label %if.end5, !dbg !4534

if.then:                                          ; preds = %entry
  br i1 %tobool6, label %land.lhs.true, label %cleanup, !dbg !4535

land.lhs.true:                                    ; preds = %if.then
  %1 = load i32, i32* @dump_flags, align 4, !dbg !4538
  %and = and i32 %1, 8, !dbg !4539
  %tobool2 = icmp eq i32 %and, 0, !dbg !4539
  br i1 %tobool2, label %cleanup, label %if.then3, !dbg !4540

if.then3:                                         ; preds = %land.lhs.true
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.78, i64 0, i64 0)) #6, !dbg !4541
  br label %cleanup, !dbg !4541

if.end5:                                          ; preds = %entry
  br i1 %tobool6, label %land.lhs.true7, label %if.end12, !dbg !4542

land.lhs.true7:                                   ; preds = %if.end5
  %2 = load i32, i32* @dump_flags, align 4, !dbg !4544
  %and8 = and i32 %2, 8, !dbg !4545
  %tobool9 = icmp eq i32 %and8, 0, !dbg !4545
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !4546

if.then10:                                        ; preds = %land.lhs.true7
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.79, i64 0, i64 0)) #6, !dbg !4547
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4549
  tail call fastcc void @iv_ca_dump(%struct.ivopts_data* %data, %struct._IO_FILE* %3, %struct.iv_ca* nonnull %call) #7, !dbg !4550
  br label %if.end12, !dbg !4551

if.end12:                                         ; preds = %land.lhs.true7, %if.then10, %if.end5
  br label %while.cond, !dbg !4552

while.cond:                                       ; preds = %if.end21, %if.end12
  %call13 = tail call fastcc zeroext i8 @try_improve_iv_set(%struct.ivopts_data* %data, %struct.iv_ca* nonnull %call) #7, !dbg !4553
  %tobool14 = icmp eq i8 %call13, 0, !dbg !4552
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4530
  %tobool15 = icmp ne %struct._IO_FILE* %4, null, !dbg !4530
  br i1 %tobool14, label %while.end, label %while.body, !dbg !4552

while.body:                                       ; preds = %while.cond
  br i1 %tobool15, label %land.lhs.true16, label %if.end21, !dbg !4554

land.lhs.true16:                                  ; preds = %while.body
  %5 = load i32, i32* @dump_flags, align 4, !dbg !4557
  %and17 = and i32 %5, 8, !dbg !4558
  %tobool18 = icmp eq i32 %and17, 0, !dbg !4558
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !4559

if.then19:                                        ; preds = %land.lhs.true16
  %call20 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.80, i64 0, i64 0)) #6, !dbg !4560
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4562
  tail call fastcc void @iv_ca_dump(%struct.ivopts_data* %data, %struct._IO_FILE* %6, %struct.iv_ca* nonnull %call) #7, !dbg !4563
  br label %if.end21, !dbg !4564

if.end21:                                         ; preds = %land.lhs.true16, %if.then19, %while.body
  br label %while.cond, !dbg !4552, !llvm.loop !4565

while.end:                                        ; preds = %while.cond
  %tobool15.lcssa = phi i1 [ %tobool15, %while.cond ], !dbg !4530
  br i1 %tobool15.lcssa, label %land.lhs.true23, label %if.end30, !dbg !4567

land.lhs.true23:                                  ; preds = %while.end
  %7 = load i32, i32* @dump_flags, align 4, !dbg !4568
  %and24 = and i32 %7, 8, !dbg !4569
  %tobool25 = icmp eq i32 %and24, 0, !dbg !4569
  br i1 %tobool25, label %if.end30, label %if.then26, !dbg !4570

if.then26:                                        ; preds = %land.lhs.true23
  %call27 = tail call fastcc i64 @iv_ca_cost(%struct.iv_ca* nonnull %call) #7, !dbg !4571
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4572
  %9 = trunc i64 %call27 to i32, !dbg !4573
  %10 = lshr i64 %call27, 32, !dbg !4574
  %11 = trunc i64 %10 to i32, !dbg !4574
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.81, i64 0, i64 0), i32 %9, i32 %11) #6, !dbg !4575
  br label %if.end30, !dbg !4576

if.end30:                                         ; preds = %land.lhs.true23, %if.then26, %while.end
  call void @llvm.dbg.value(metadata i32 0, metadata !4524, metadata !DIExpression()), !dbg !4530
  br label %for.cond, !dbg !4577

for.cond:                                         ; preds = %for.body, %if.end30
  %i.0 = phi i32 [ 0, %if.end30 ], [ %inc, %for.body ], !dbg !4579
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4524, metadata !DIExpression()), !dbg !4530
  %call31 = tail call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !4580
  %cmp = icmp ult i32 %i.0, %call31, !dbg !4582
  br i1 %cmp, label %for.body, label %cleanup.loopexit, !dbg !4583

for.body:                                         ; preds = %for.cond
  %call32 = tail call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !4584
  call void @llvm.dbg.value(metadata %struct.iv_use* %call32, metadata !4526, metadata !DIExpression()), !dbg !4530
  %call33 = tail call fastcc %struct.cost_pair* @iv_ca_cand_for_use(%struct.iv_ca* nonnull %call, %struct.iv_use* %call32) #7, !dbg !4586
  %12 = bitcast %struct.cost_pair* %call33 to i64*, !dbg !4587
  %13 = load i64, i64* %12, align 8, !dbg !4587
  %selected = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call32, i64 0, i32 8, !dbg !4588
  %14 = bitcast %struct.iv_cand** %selected to i64*, !dbg !4589
  store i64 %13, i64* %14, align 8, !dbg !4589
  %inc = add i32 %i.0, 1, !dbg !4590
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4524, metadata !DIExpression()), !dbg !4530
  br label %for.cond, !dbg !4591, !llvm.loop !4592

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4594

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true, %if.then, %if.then3
  %retval.0 = phi %struct.iv_ca* [ null, %if.then3 ], [ null, %land.lhs.true ], [ null, %if.then ], [ %call, %cleanup.loopexit ], !dbg !4530
  ret %struct.iv_ca* %retval.0, !dbg !4594
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_ivs(%struct.ivopts_data* %data, %struct.iv_ca* %set) unnamed_addr #5 !dbg !4595 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4599, metadata !DIExpression()), !dbg !4604
  call void @llvm.dbg.value(metadata %struct.iv_ca* %set, metadata !4600, metadata !DIExpression()), !dbg !4604
  %0 = bitcast i32* %i to i8*, !dbg !4605
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4605
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4606
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4606
  %cands = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %set, i64 0, i32 4, !dbg !4607
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cands, align 8, !dbg !4607
  call void @llvm.dbg.value(metadata i32* %i, metadata !4601, metadata !DIExpression(DW_OP_deref)), !dbg !4604
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4603, metadata !DIExpression(DW_OP_deref)), !dbg !4604
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %2, i32 0, i32* nonnull %i) #7, !dbg !4607
  br label %for.cond, !dbg !4607

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !4601, metadata !DIExpression(DW_OP_deref)), !dbg !4604
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4603, metadata !DIExpression(DW_OP_deref)), !dbg !4604
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4609
  %tobool = icmp eq i8 %call, 0, !dbg !4607
  br i1 %tobool, label %for.end, label %for.body, !dbg !4607

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !4611
  call void @llvm.dbg.value(metadata i32 %3, metadata !4601, metadata !DIExpression()), !dbg !4604
  %call1 = call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %3) #7, !dbg !4613
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call1, metadata !4602, metadata !DIExpression()), !dbg !4604
  call fastcc void @create_new_iv(%struct.ivopts_data* %data, %struct.iv_cand* %call1) #7, !dbg !4614
  call void @llvm.dbg.value(metadata i32* %i, metadata !4601, metadata !DIExpression(DW_OP_deref)), !dbg !4604
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4603, metadata !DIExpression(DW_OP_deref)), !dbg !4604
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4609
  br label %for.cond, !dbg !4609, !llvm.loop !4615

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4617
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4617
  ret void, !dbg !4617
}

; Function Attrs: nounwind uwtable
define internal fastcc void @iv_ca_free(%struct.iv_ca** %ivs) unnamed_addr #5 !dbg !4618 {
entry:
  call void @llvm.dbg.value(metadata %struct.iv_ca** %ivs, metadata !4623, metadata !DIExpression()), !dbg !4624
  %0 = load %struct.iv_ca*, %struct.iv_ca** %ivs, align 8, !dbg !4625
  %cand_for_use = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %0, i64 0, i32 2, !dbg !4626
  %1 = bitcast %struct.cost_pair*** %cand_for_use to i8**, !dbg !4626
  %2 = load i8*, i8** %1, align 8, !dbg !4626
  tail call void @free(i8* %2) #6, !dbg !4627
  %3 = load %struct.iv_ca*, %struct.iv_ca** %ivs, align 8, !dbg !4628
  %n_cand_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %3, i64 0, i32 3, !dbg !4629
  %4 = bitcast i32** %n_cand_uses to i8**, !dbg !4629
  %5 = load i8*, i8** %4, align 8, !dbg !4629
  tail call void @free(i8* %5) #6, !dbg !4630
  %6 = load %struct.iv_ca*, %struct.iv_ca** %ivs, align 8, !dbg !4631
  %cands = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %6, i64 0, i32 4, !dbg !4631
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cands, align 8, !dbg !4631
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %7) #6, !dbg !4631
  %8 = load %struct.iv_ca*, %struct.iv_ca** %ivs, align 8, !dbg !4631
  %cands1 = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %8, i64 0, i32 4, !dbg !4631
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %cands1, align 8, !dbg !4631
  %9 = load %struct.iv_ca*, %struct.iv_ca** %ivs, align 8, !dbg !4632
  %n_invariant_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %9, i64 0, i32 9, !dbg !4633
  %10 = bitcast i32** %n_invariant_uses to i8**, !dbg !4633
  %11 = load i8*, i8** %10, align 8, !dbg !4633
  tail call void @free(i8* %11) #6, !dbg !4634
  %12 = bitcast %struct.iv_ca** %ivs to i8**, !dbg !4635
  %13 = load i8*, i8** %12, align 8, !dbg !4635
  tail call void @free(i8* %13) #6, !dbg !4636
  store %struct.iv_ca* null, %struct.iv_ca** %ivs, align 8, !dbg !4637
  ret void, !dbg !4638
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_uses(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4639 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4641, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.value(metadata i32 0, metadata !4642, metadata !DIExpression()), !dbg !4645
  br label %for.cond, !dbg !4646

for.cond:                                         ; preds = %cond.end, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cond.end ], !dbg !4648
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4642, metadata !DIExpression()), !dbg !4645
  %call = tail call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !4649
  %cmp = icmp ult i32 %i.0, %call, !dbg !4651
  br i1 %cmp, label %for.body, label %for.end, !dbg !4652

for.body:                                         ; preds = %for.cond
  %call1 = tail call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !4653
  call void @llvm.dbg.value(metadata %struct.iv_use* %call1, metadata !4644, metadata !DIExpression()), !dbg !4645
  %selected = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call1, i64 0, i32 8, !dbg !4655
  %0 = load %struct.iv_cand*, %struct.iv_cand** %selected, align 8, !dbg !4655
  call void @llvm.dbg.value(metadata %struct.iv_cand* %0, metadata !4643, metadata !DIExpression()), !dbg !4645
  %tobool = icmp eq %struct.iv_cand* %0, null, !dbg !4656
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4656

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 5654, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !4656
  br label %cond.end, !dbg !4656

cond.end:                                         ; preds = %for.body, %cond.true
  tail call fastcc void @rewrite_use(%struct.ivopts_data* %data, %struct.iv_use* %call1, %struct.iv_cand* %0) #7, !dbg !4657
  %inc = add i32 %i.0, 1, !dbg !4658
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4642, metadata !DIExpression()), !dbg !4645
  br label %for.cond, !dbg !4659, !llvm.loop !4660

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4662
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_unused_ivs(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4663 {
entry:
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4665, metadata !DIExpression()), !dbg !4673
  %0 = bitcast i32* %j to i8*, !dbg !4674
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4674
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4675
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4675
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4676
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !4668, metadata !DIExpression()), !dbg !4673
  %relevant = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 5, !dbg !4677
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %relevant, align 8, !dbg !4677
  call void @llvm.dbg.value(metadata i32* %j, metadata !4666, metadata !DIExpression(DW_OP_deref)), !dbg !4673
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4667, metadata !DIExpression(DW_OP_deref)), !dbg !4673
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %2, i32 0, i32* nonnull %j) #7, !dbg !4677
  br label %for.cond, !dbg !4677

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata i32* %j, metadata !4666, metadata !DIExpression(DW_OP_deref)), !dbg !4673
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4667, metadata !DIExpression(DW_OP_deref)), !dbg !4673
  %call1 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !4678
  %tobool = icmp eq i8 %call1, 0, !dbg !4677
  br i1 %tobool, label %for.end, label %for.body, !dbg !4677

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %j, align 4, !dbg !4679
  call void @llvm.dbg.value(metadata i32 %3, metadata !4666, metadata !DIExpression()), !dbg !4673
  %call2 = call fastcc %struct.version_info* @ver_info(%struct.ivopts_data* %data, i32 %3) #7, !dbg !4680
  call void @llvm.dbg.value(metadata %struct.version_info* %call2, metadata !4669, metadata !DIExpression()), !dbg !4681
  %iv = getelementptr inbounds %struct.version_info, %struct.version_info* %call2, i64 0, i32 1, !dbg !4682
  %4 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !4682
  %tobool3 = icmp eq %struct.iv* %4, null, !dbg !4684
  br i1 %tobool3, label %for.inc, label %land.lhs.true, !dbg !4685

land.lhs.true:                                    ; preds = %for.body
  %step = getelementptr inbounds %struct.iv, %struct.iv* %4, i64 0, i32 2, !dbg !4686
  %5 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !4686
  %call5 = call i32 @integer_zerop(%union.tree_node* %5) #6, !dbg !4687
  %tobool6 = icmp eq i32 %call5, 0, !dbg !4687
  br i1 %tobool6, label %land.lhs.true7, label %for.inc, !dbg !4688

land.lhs.true7:                                   ; preds = %land.lhs.true
  %inv_id = getelementptr inbounds %struct.version_info, %struct.version_info* %call2, i64 0, i32 3, !dbg !4689
  %6 = load i32, i32* %inv_id, align 4, !dbg !4689
  %tobool8 = icmp eq i32 %6, 0, !dbg !4690
  br i1 %tobool8, label %land.lhs.true9, label %for.inc, !dbg !4691

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %7 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !4692
  %have_use_for = getelementptr inbounds %struct.iv, %struct.iv* %7, i64 0, i32 5, !dbg !4693
  %8 = load i8, i8* %have_use_for, align 1, !dbg !4693
  %tobool11 = icmp eq i8 %8, 0, !dbg !4694
  br i1 %tobool11, label %land.lhs.true12, label %for.inc, !dbg !4695

land.lhs.true12:                                  ; preds = %land.lhs.true9
  %preserve_biv = getelementptr inbounds %struct.version_info, %struct.version_info* %call2, i64 0, i32 4, !dbg !4696
  %9 = load i8, i8* %preserve_biv, align 8, !dbg !4696
  %tobool13 = icmp eq i8 %9, 0, !dbg !4697
  br i1 %tobool13, label %if.then, label %for.inc, !dbg !4698

if.then:                                          ; preds = %land.lhs.true12
  %ssa_name = getelementptr inbounds %struct.iv, %struct.iv* %7, i64 0, i32 3, !dbg !4699
  %10 = bitcast %union.tree_node** %ssa_name to %struct.tree_ssa_name**, !dbg !4699
  %11 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %10, align 8, !dbg !4699
  %version = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %11, i64 0, i32 3, !dbg !4699
  %12 = load i32, i32* %version, align 8, !dbg !4699
  %call16 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %12) #6, !dbg !4700
  br label %for.inc, !dbg !4700

for.inc:                                          ; preds = %land.lhs.true12, %land.lhs.true9, %land.lhs.true7, %land.lhs.true, %for.body, %if.then
  call void @llvm.dbg.value(metadata i32* %j, metadata !4666, metadata !DIExpression(DW_OP_deref)), !dbg !4673
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4667, metadata !DIExpression(DW_OP_deref)), !dbg !4673
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !4678
  br label %for.cond, !dbg !4678, !llvm.loop !4701

for.end:                                          ; preds = %for.cond
  call void @release_defs_bitset(%struct.bitmap_head_def* %call) #6, !dbg !4703
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !4704
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !4668, metadata !DIExpression()), !dbg !4673
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4705
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4705
  ret void, !dbg !4705
}

declare dso_local void @scev_reset() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @free_loop_data(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4706 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %obj = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4708, metadata !DIExpression()), !dbg !4725
  %0 = bitcast i32* %i to i8*, !dbg !4726
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4726
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4727
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4727
  %2 = bitcast %union.tree_node** %obj to i8*, !dbg !4728
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4728
  %niters = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 1, !dbg !4729
  %3 = load %struct.pointer_map_t*, %struct.pointer_map_t** %niters, align 8, !dbg !4729
  %tobool = icmp eq %struct.pointer_map_t* %3, null, !dbg !4731
  br i1 %tobool, label %if.end, label %if.then, !dbg !4732

if.then:                                          ; preds = %entry
  tail call void @pointer_map_destroy(%struct.pointer_map_t* nonnull %3) #6, !dbg !4733
  store %struct.pointer_map_t* null, %struct.pointer_map_t** %niters, align 8, !dbg !4735
  br label %if.end, !dbg !4736

if.end:                                           ; preds = %entry, %if.then
  %relevant = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 5, !dbg !4737
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %relevant, align 8, !dbg !4737
  call void @llvm.dbg.value(metadata i32* %i, metadata !4709, metadata !DIExpression(DW_OP_deref)), !dbg !4725
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4711, metadata !DIExpression(DW_OP_deref)), !dbg !4725
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %4, i32 0, i32* nonnull %i) #7, !dbg !4737
  br label %for.cond, !dbg !4737

for.cond:                                         ; preds = %if.end8, %if.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !4709, metadata !DIExpression(DW_OP_deref)), !dbg !4725
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4711, metadata !DIExpression(DW_OP_deref)), !dbg !4725
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4738
  %tobool3 = icmp eq i8 %call, 0, !dbg !4737
  br i1 %tobool3, label %for.end, label %for.body, !dbg !4737

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !4739
  call void @llvm.dbg.value(metadata i32 %5, metadata !4709, metadata !DIExpression()), !dbg !4725
  %call4 = call fastcc %struct.version_info* @ver_info(%struct.ivopts_data* %data, i32 %5) #7, !dbg !4740
  call void @llvm.dbg.value(metadata %struct.version_info* %call4, metadata !4713, metadata !DIExpression()), !dbg !4741
  %iv = getelementptr inbounds %struct.version_info, %struct.version_info* %call4, i64 0, i32 1, !dbg !4742
  %6 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !4742
  %tobool5 = icmp eq %struct.iv* %6, null, !dbg !4744
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !4745

if.then6:                                         ; preds = %for.body
  %7 = bitcast %struct.iv* %6 to i8*, !dbg !4745
  call void @free(i8* nonnull %7) #6, !dbg !4746
  br label %if.end8, !dbg !4746

if.end8:                                          ; preds = %for.body, %if.then6
  store %struct.iv* null, %struct.iv** %iv, align 8, !dbg !4747
  %has_nonlin_use = getelementptr inbounds %struct.version_info, %struct.version_info* %call4, i64 0, i32 2, !dbg !4748
  store i8 0, i8* %has_nonlin_use, align 8, !dbg !4749
  %preserve_biv = getelementptr inbounds %struct.version_info, %struct.version_info* %call4, i64 0, i32 4, !dbg !4750
  store i8 0, i8* %preserve_biv, align 8, !dbg !4751
  %inv_id = getelementptr inbounds %struct.version_info, %struct.version_info* %call4, i64 0, i32 3, !dbg !4752
  store i32 0, i32* %inv_id, align 4, !dbg !4753
  call void @llvm.dbg.value(metadata i32* %i, metadata !4709, metadata !DIExpression(DW_OP_deref)), !dbg !4725
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4711, metadata !DIExpression(DW_OP_deref)), !dbg !4725
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4738
  br label %for.cond, !dbg !4738, !llvm.loop !4754

for.end:                                          ; preds = %for.cond
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %relevant, align 8, !dbg !4756
  call void @bitmap_clear(%struct.bitmap_head_def* %8) #6, !dbg !4757
  %important_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 8, !dbg !4758
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %important_candidates, align 8, !dbg !4758
  call void @bitmap_clear(%struct.bitmap_head_def* %9) #6, !dbg !4759
  call void @llvm.dbg.value(metadata i32 0, metadata !4709, metadata !DIExpression()), !dbg !4725
  br label %for.cond11, !dbg !4760

for.cond11:                                       ; preds = %for.end32, %for.end
  %storemerge = phi i32 [ 0, %for.end ], [ %inc35, %for.end32 ], !dbg !4761
  store i32 %storemerge, i32* %i, align 4, !dbg !4761
  call void @llvm.dbg.value(metadata i32 %storemerge, metadata !4709, metadata !DIExpression()), !dbg !4725
  %call12 = call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !4762
  %cmp = icmp ult i32 %storemerge, %call12, !dbg !4763
  br i1 %cmp, label %for.body13, label %for.end36, !dbg !4764

for.body13:                                       ; preds = %for.cond11
  %10 = load i32, i32* %i, align 4, !dbg !4765
  call void @llvm.dbg.value(metadata i32 %10, metadata !4709, metadata !DIExpression()), !dbg !4725
  %call14 = call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %10) #7, !dbg !4766
  call void @llvm.dbg.value(metadata %struct.iv_use* %call14, metadata !4717, metadata !DIExpression()), !dbg !4767
  %iv15 = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call14, i64 0, i32 2, !dbg !4768
  %11 = bitcast %struct.iv** %iv15 to i8**, !dbg !4768
  %12 = load i8*, i8** %11, align 8, !dbg !4768
  call void @free(i8* %12) #6, !dbg !4769
  %related_cands = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call14, i64 0, i32 5, !dbg !4770
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %related_cands, align 8, !dbg !4770
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %13) #6, !dbg !4770
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %related_cands, align 8, !dbg !4770
  call void @llvm.dbg.value(metadata i32 0, metadata !4710, metadata !DIExpression()), !dbg !4725
  %n_map_members = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call14, i64 0, i32 6, !dbg !4771
  %cost_map = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call14, i64 0, i32 7, !dbg !4767
  br label %for.cond17, !dbg !4774

for.cond17:                                       ; preds = %for.inc31, %for.body13
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc31 ], [ 0, %for.body13 ], !dbg !4775
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4710, metadata !DIExpression()), !dbg !4725
  %14 = load i32, i32* %n_map_members, align 8, !dbg !4776
  %15 = zext i32 %14 to i64, !dbg !4777
  %cmp18 = icmp ult i64 %indvars.iv, %15, !dbg !4777
  %16 = load %struct.cost_pair*, %struct.cost_pair** %cost_map, align 8, !dbg !4767
  br i1 %cmp18, label %for.body19, label %for.end32, !dbg !4778

for.body19:                                       ; preds = %for.cond17
  %depends_on = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %16, i64 %indvars.iv, i32 2, !dbg !4779
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on, align 8, !dbg !4779
  %tobool20 = icmp eq %struct.bitmap_head_def* %17, null, !dbg !4781
  br i1 %tobool20, label %for.inc31, label %if.then21, !dbg !4782

if.then21:                                        ; preds = %for.body19
  call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %17) #6, !dbg !4783
  %18 = load %struct.cost_pair*, %struct.cost_pair** %cost_map, align 8, !dbg !4783
  %depends_on29 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %18, i64 %indvars.iv, i32 2, !dbg !4783
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %depends_on29, align 8, !dbg !4783
  br label %for.inc31, !dbg !4783

for.inc31:                                        ; preds = %for.body19, %if.then21
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4784
  br label %for.cond17, !dbg !4785, !llvm.loop !4786

for.end32:                                        ; preds = %for.cond17
  %.lcssa = phi %struct.cost_pair* [ %16, %for.cond17 ], !dbg !4767
  %19 = bitcast %struct.cost_pair* %.lcssa to i8*, !dbg !4788
  call void @free(i8* %19) #6, !dbg !4789
  %20 = bitcast %struct.iv_use* %call14 to i8*, !dbg !4790
  call void @free(i8* %20) #6, !dbg !4791
  %21 = load i32, i32* %i, align 4, !dbg !4792
  call void @llvm.dbg.value(metadata i32 %21, metadata !4709, metadata !DIExpression()), !dbg !4725
  %inc35 = add i32 %21, 1, !dbg !4792
  call void @llvm.dbg.value(metadata i32 %inc35, metadata !4709, metadata !DIExpression()), !dbg !4725
  br label %for.cond11, !dbg !4793, !llvm.loop !4794

for.end36:                                        ; preds = %for.cond11
  %iv_uses = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 6, !dbg !4796
  %22 = load %struct.VEC_iv_use_p_heap*, %struct.VEC_iv_use_p_heap** %iv_uses, align 8, !dbg !4796
  %tobool37 = icmp eq %struct.VEC_iv_use_p_heap* %22, null, !dbg !4796
  br i1 %tobool37, label %cond.end, label %cond.true, !dbg !4796

cond.true:                                        ; preds = %for.end36
  %base = getelementptr inbounds %struct.VEC_iv_use_p_heap, %struct.VEC_iv_use_p_heap* %22, i64 0, i32 0, !dbg !4796
  br label %cond.end, !dbg !4796

cond.end:                                         ; preds = %for.end36, %cond.true
  %cond = phi %struct.VEC_iv_use_p_base* [ %base, %cond.true ], [ null, %for.end36 ], !dbg !4796
  call fastcc void @VEC_iv_use_p_base_truncate(%struct.VEC_iv_use_p_base* %cond, i32 0) #7, !dbg !4796
  call void @llvm.dbg.value(metadata i32 0, metadata !4709, metadata !DIExpression()), !dbg !4725
  br label %for.cond39, !dbg !4797

for.cond39:                                       ; preds = %if.end54, %cond.end
  %storemerge1 = phi i32 [ 0, %cond.end ], [ %inc56, %if.end54 ], !dbg !4798
  store i32 %storemerge1, i32* %i, align 4, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %storemerge1, metadata !4709, metadata !DIExpression()), !dbg !4725
  %call40 = call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !4799
  %cmp41 = icmp ult i32 %storemerge1, %call40, !dbg !4800
  br i1 %cmp41, label %for.body42, label %for.end57, !dbg !4801

for.body42:                                       ; preds = %for.cond39
  %23 = load i32, i32* %i, align 4, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %23, metadata !4709, metadata !DIExpression()), !dbg !4725
  %call43 = call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %23) #7, !dbg !4803
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call43, metadata !4721, metadata !DIExpression()), !dbg !4804
  %iv44 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call43, i64 0, i32 6, !dbg !4805
  %24 = load %struct.iv*, %struct.iv** %iv44, align 8, !dbg !4805
  %tobool45 = icmp eq %struct.iv* %24, null, !dbg !4807
  br i1 %tobool45, label %if.end48, label %if.then46, !dbg !4808

if.then46:                                        ; preds = %for.body42
  %25 = bitcast %struct.iv* %24 to i8*, !dbg !4808
  call void @free(i8* nonnull %25) #6, !dbg !4809
  br label %if.end48, !dbg !4809

if.end48:                                         ; preds = %for.body42, %if.then46
  %depends_on49 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call43, i64 0, i32 10, !dbg !4810
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on49, align 8, !dbg !4810
  %tobool50 = icmp eq %struct.bitmap_head_def* %26, null, !dbg !4812
  br i1 %tobool50, label %if.end54, label %if.then51, !dbg !4813

if.then51:                                        ; preds = %if.end48
  call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %26) #6, !dbg !4814
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %depends_on49, align 8, !dbg !4814
  br label %if.end54, !dbg !4814

if.end54:                                         ; preds = %if.end48, %if.then51
  %27 = bitcast %struct.iv_cand* %call43 to i8*, !dbg !4815
  call void @free(i8* %27) #6, !dbg !4816
  %28 = load i32, i32* %i, align 4, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %28, metadata !4709, metadata !DIExpression()), !dbg !4725
  %inc56 = add i32 %28, 1, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %inc56, metadata !4709, metadata !DIExpression()), !dbg !4725
  br label %for.cond39, !dbg !4818, !llvm.loop !4819

for.end57:                                        ; preds = %for.cond39
  %iv_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 7, !dbg !4821
  %29 = load %struct.VEC_iv_cand_p_heap*, %struct.VEC_iv_cand_p_heap** %iv_candidates, align 8, !dbg !4821
  %tobool58 = icmp eq %struct.VEC_iv_cand_p_heap* %29, null, !dbg !4821
  br i1 %tobool58, label %cond.end63, label %cond.true59, !dbg !4821

cond.true59:                                      ; preds = %for.end57
  %base61 = getelementptr inbounds %struct.VEC_iv_cand_p_heap, %struct.VEC_iv_cand_p_heap* %29, i64 0, i32 0, !dbg !4821
  br label %cond.end63, !dbg !4821

cond.end63:                                       ; preds = %for.end57, %cond.true59
  %cond64 = phi %struct.VEC_iv_cand_p_base* [ %base61, %cond.true59 ], [ null, %for.end57 ], !dbg !4821
  call fastcc void @VEC_iv_cand_p_base_truncate(%struct.VEC_iv_cand_p_base* %cond64, i32 0) #7, !dbg !4821
  %version_info_size = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 3, !dbg !4822
  %30 = load i32, i32* %version_info_size, align 4, !dbg !4822
  %31 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4824
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %31, i64 0, i32 3, !dbg !4824
  %32 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4824
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %32, i64 0, i32 2, !dbg !4824
  %33 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !4824
  %tobool65 = icmp eq %struct.VEC_tree_gc* %33, null, !dbg !4824
  br i1 %tobool65, label %cond.end72, label %cond.true66, !dbg !4824

cond.true66:                                      ; preds = %cond.end63
  %base70 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %33, i64 0, i32 0, !dbg !4824
  br label %cond.end72, !dbg !4824

cond.end72:                                       ; preds = %cond.end63, %cond.true66
  %cond73 = phi %struct.VEC_tree_base* [ %base70, %cond.true66 ], [ null, %cond.end63 ], !dbg !4824
  %call74 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond73) #7, !dbg !4824
  %cmp75 = icmp ult i32 %30, %call74, !dbg !4825
  br i1 %cmp75, label %if.then76, label %if.end94, !dbg !4826

if.then76:                                        ; preds = %cond.end72
  %34 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4827
  %gimple_df78 = getelementptr inbounds %struct.function, %struct.function* %34, i64 0, i32 3, !dbg !4827
  %35 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df78, align 8, !dbg !4827
  %ssa_names79 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %35, i64 0, i32 2, !dbg !4827
  %36 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names79, align 8, !dbg !4827
  %tobool80 = icmp eq %struct.VEC_tree_gc* %36, null, !dbg !4827
  br i1 %tobool80, label %cond.end87, label %cond.true81, !dbg !4827

cond.true81:                                      ; preds = %if.then76
  %base85 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %36, i64 0, i32 0, !dbg !4827
  br label %cond.end87, !dbg !4827

cond.end87:                                       ; preds = %if.then76, %cond.true81
  %cond88 = phi %struct.VEC_tree_base* [ %base85, %cond.true81 ], [ null, %if.then76 ], !dbg !4827
  %call89 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond88) #7, !dbg !4827
  %mul = shl i32 %call89, 1, !dbg !4829
  store i32 %mul, i32* %version_info_size, align 4, !dbg !4830
  %version_info = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 4, !dbg !4831
  %37 = bitcast %struct.version_info** %version_info to i8**, !dbg !4831
  %38 = load i8*, i8** %37, align 8, !dbg !4831
  call void @free(i8* %38) #6, !dbg !4832
  %39 = load i32, i32* %version_info_size, align 4, !dbg !4833
  %conv = zext i32 %39 to i64, !dbg !4833
  %call92 = call i8* @xcalloc(i64 %conv, i64 32) #6, !dbg !4833
  store i8* %call92, i8** %37, align 8, !dbg !4834
  br label %if.end94, !dbg !4835

if.end94:                                         ; preds = %cond.end87, %cond.end72
  %max_inv_id = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 9, !dbg !4836
  store i32 0, i32* %max_inv_id, align 8, !dbg !4837
  call void @llvm.dbg.value(metadata i32 0, metadata !4709, metadata !DIExpression()), !dbg !4725
  br label %for.cond95, !dbg !4838

for.cond95:                                       ; preds = %for.body104, %if.end94
  %storemerge2 = phi i32 [ 0, %if.end94 ], [ %inc106, %for.body104 ], !dbg !4840
  store i32 %storemerge2, i32* %i, align 4, !dbg !4840
  %40 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @decl_rtl_to_reset, align 8, !dbg !4841
  %base98 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %40, i64 0, i32 0, !dbg !4841
  call void @llvm.dbg.value(metadata i32 %storemerge2, metadata !4709, metadata !DIExpression()), !dbg !4725
  call void @llvm.dbg.value(metadata %union.tree_node** %obj, metadata !4712, metadata !DIExpression(DW_OP_deref)), !dbg !4725
  %call102 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base98, i32 %storemerge2, %union.tree_node** nonnull %obj) #7, !dbg !4841
  %tobool103 = icmp eq i32 %call102, 0, !dbg !4843
  br i1 %tobool103, label %for.end107, label %for.body104, !dbg !4843

for.body104:                                      ; preds = %for.cond95
  %41 = load %union.tree_node*, %union.tree_node** %obj, align 8, !dbg !4844
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !4712, metadata !DIExpression()), !dbg !4725
  call void @set_decl_rtl(%union.tree_node* %41, %struct.rtx_def* null) #6, !dbg !4844
  %42 = load i32, i32* %i, align 4, !dbg !4845
  call void @llvm.dbg.value(metadata i32 %42, metadata !4709, metadata !DIExpression()), !dbg !4725
  %inc106 = add i32 %42, 1, !dbg !4845
  call void @llvm.dbg.value(metadata i32 %inc106, metadata !4709, metadata !DIExpression()), !dbg !4725
  br label %for.cond95, !dbg !4846, !llvm.loop !4847

for.end107:                                       ; preds = %for.cond95
  %43 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @decl_rtl_to_reset, align 8, !dbg !4849
  %base110 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %43, i64 0, i32 0, !dbg !4849
  call fastcc void @VEC_tree_base_truncate(%struct.VEC_tree_base* %base110, i32 0) #7, !dbg !4849
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4850
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4850
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4850
  ret void, !dbg !4850
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @find_bivs(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4851 {
entry:
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4853, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8 0, metadata !4858, metadata !DIExpression()), !dbg !4861
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !4862
  %0 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !4862
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !4859, metadata !DIExpression()), !dbg !4861
  %1 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !4863
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4863
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4864
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4864
  %header = getelementptr inbounds %struct.loop, %struct.loop* %0, i64 0, i32 2, !dbg !4866
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !4866
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %3) #6, !dbg !4864
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !4864
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4864
  br label %for.cond, !dbg !4867

for.cond:                                         ; preds = %for.inc, %entry
  %found.0 = phi i8 [ 0, %entry ], [ %found.1, %for.inc ], !dbg !4868
  call void @llvm.dbg.value(metadata i8 %found.0, metadata !4858, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4860, metadata !DIExpression(DW_OP_deref)), !dbg !4861
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !4869
  %tobool = icmp eq i8 %call, 0, !dbg !4871
  br i1 %tobool, label %for.body, label %for.end, !dbg !4872

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4860, metadata !DIExpression(DW_OP_deref)), !dbg !4861
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !4873
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4854, metadata !DIExpression()), !dbg !4861
  %call2 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call1) #7, !dbg !4875
  %call3 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call2) #7, !dbg !4875
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4875
  %bf.load = load i64, i64* %4, align 8, !dbg !4875
  %bf.cast1 = and i64 %bf.load, 4194304, !dbg !4875
  %tobool5 = icmp eq i64 %bf.cast1, 0, !dbg !4875
  br i1 %tobool5, label %if.end, label %for.inc, !dbg !4877

if.end:                                           ; preds = %for.body
  %call6 = call fastcc %union.tree_node* @determine_biv_step(%union.gimple_statement_d* %call1) #7, !dbg !4878
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !4855, metadata !DIExpression()), !dbg !4861
  %tobool7 = icmp eq %union.tree_node* %call6, null, !dbg !4879
  br i1 %tobool7, label %for.inc, label %if.end9, !dbg !4881

if.end9:                                          ; preds = %if.end
  %call10 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %0) #6, !dbg !4882
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 6, !dbg !4882
  %5 = load i32, i32* %dest_idx, align 4, !dbg !4882
  %call11 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call1, i32 %5) #7, !dbg !4882
  %call12 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call11) #7, !dbg !4882
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !4857, metadata !DIExpression()), !dbg !4861
  %call13 = call %union.tree_node* @expand_simple_operations(%union.tree_node* %call12) #6, !dbg !4883
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !4857, metadata !DIExpression()), !dbg !4861
  %call14 = call zeroext i8 @contains_abnormal_ssa_name_p(%union.tree_node* %call13) #7, !dbg !4884
  %tobool15 = icmp eq i8 %call14, 0, !dbg !4884
  br i1 %tobool15, label %lor.lhs.false, label %for.inc, !dbg !4886

lor.lhs.false:                                    ; preds = %if.end9
  %call16 = call zeroext i8 @contains_abnormal_ssa_name_p(%union.tree_node* nonnull %call6) #7, !dbg !4887
  %tobool18 = icmp eq i8 %call16, 0, !dbg !4887
  br i1 %tobool18, label %if.end20, label %for.inc, !dbg !4888

if.end20:                                         ; preds = %lor.lhs.false
  %call21 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call1) #7, !dbg !4889
  %call22 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call21) #7, !dbg !4889
  %type23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4889
  %6 = load %union.tree_node*, %union.tree_node** %type23, align 8, !dbg !4889
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4856, metadata !DIExpression()), !dbg !4861
  %call24 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %6, %union.tree_node* %call13) #6, !dbg !4890
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !4857, metadata !DIExpression()), !dbg !4861
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4891
  %bf.load28 = load i64, i64* %7, align 8, !dbg !4891
  %bf.cast302 = and i64 %bf.load28, 65535, !dbg !4891
  %cmp = icmp eq i64 %bf.cast302, 10, !dbg !4891
  br i1 %cmp, label %if.then39, label %lor.lhs.false32, !dbg !4891

lor.lhs.false32:                                  ; preds = %if.end20
  %cmp37 = icmp eq i64 %bf.cast302, 12, !dbg !4891
  br i1 %cmp37, label %if.then39, label %if.else, !dbg !4895

if.then39:                                        ; preds = %lor.lhs.false32, %if.end20
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4896
  %call40 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %8, %union.tree_node* nonnull %call6) #6, !dbg !4896
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !4855, metadata !DIExpression()), !dbg !4861
  br label %if.end43, !dbg !4897

if.else:                                          ; preds = %lor.lhs.false32
  %call41 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %6, %union.tree_node* nonnull %call6) #6, !dbg !4898
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !4855, metadata !DIExpression()), !dbg !4861
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %if.else
  %step.1 = phi %union.tree_node* [ %call40, %if.then39 ], [ %call41, %if.else ], !dbg !4899
  call void @llvm.dbg.value(metadata %union.tree_node* %step.1, metadata !4855, metadata !DIExpression()), !dbg !4861
  %call44 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call1) #7, !dbg !4900
  %call45 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call44) #7, !dbg !4900
  call fastcc void @set_iv(%struct.ivopts_data* %data, %union.tree_node* %call45, %union.tree_node* %call24, %union.tree_node* %step.1) #7, !dbg !4901
  call void @llvm.dbg.value(metadata i8 1, metadata !4858, metadata !DIExpression()), !dbg !4861
  br label %for.inc, !dbg !4902

for.inc:                                          ; preds = %lor.lhs.false, %if.end9, %if.end, %for.body, %if.end43
  %found.1 = phi i8 [ 1, %if.end43 ], [ %found.0, %for.body ], [ %found.0, %if.end ], [ %found.0, %lor.lhs.false ], [ %found.0, %if.end9 ], !dbg !4861
  call void @llvm.dbg.value(metadata i8 %found.1, metadata !4858, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4860, metadata !DIExpression(DW_OP_deref)), !dbg !4861
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !4903
  br label %for.cond, !dbg !4904, !llvm.loop !4905

for.end:                                          ; preds = %for.cond
  %found.0.lcssa = phi i8 [ %found.0, %for.cond ], !dbg !4868
  call void @llvm.dbg.value(metadata i8 %found.0.lcssa, metadata !4858, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8 %found.0.lcssa, metadata !4858, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8 %found.0.lcssa, metadata !4858, metadata !DIExpression()), !dbg !4861
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4907
  ret i8 %found.0.lcssa, !dbg !4908
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_givs(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4909 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4911, metadata !DIExpression()), !dbg !4915
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !4916
  %0 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !4916
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !4912, metadata !DIExpression()), !dbg !4915
  %call = tail call %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop* %0) #6, !dbg !4917
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !4913, metadata !DIExpression()), !dbg !4915
  call void @llvm.dbg.value(metadata i32 0, metadata !4914, metadata !DIExpression()), !dbg !4915
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %0, i64 0, i32 6, !dbg !4918
  br label %for.cond, !dbg !4921

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !4922
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4914, metadata !DIExpression()), !dbg !4915
  %1 = load i32, i32* %num_nodes, align 4, !dbg !4923
  %2 = zext i32 %1 to i64, !dbg !4924
  %cmp = icmp ult i64 %indvars.iv, %2, !dbg !4924
  br i1 %cmp, label %for.body, label %for.end, !dbg !4925

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %indvars.iv, !dbg !4926
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4926
  tail call fastcc void @find_givs_in_bb(%struct.ivopts_data* %data, %struct.basic_block_def* %3) #7, !dbg !4927
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4928
  br label %for.cond, !dbg !4929, !llvm.loop !4930

for.end:                                          ; preds = %for.cond
  %4 = bitcast %struct.basic_block_def** %call to i8*, !dbg !4932
  tail call void @free(i8* %4) #6, !dbg !4933
  ret void, !dbg !4934
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_bivs(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4935 {
entry:
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4937, metadata !DIExpression()), !dbg !4945
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !4946
  %0 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !4946
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !4942, metadata !DIExpression()), !dbg !4945
  %1 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !4947
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4947
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4948
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4948
  %header = getelementptr inbounds %struct.loop, %struct.loop* %0, i64 0, i32 2, !dbg !4950
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !4950
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %3) #6, !dbg !4948
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !4948
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4948
  br label %for.cond, !dbg !4951

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4944, metadata !DIExpression(DW_OP_deref)), !dbg !4945
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !4952
  %tobool = icmp eq i8 %call, 0, !dbg !4954
  br i1 %tobool, label %for.body, label %for.end, !dbg !4955

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4944, metadata !DIExpression(DW_OP_deref)), !dbg !4945
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !4956
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4938, metadata !DIExpression()), !dbg !4945
  %call2 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call1) #7, !dbg !4958
  %call3 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call2) #7, !dbg !4958
  %call4 = call fastcc %struct.iv* @get_iv(%struct.ivopts_data* %data, %union.tree_node* %call3) #7, !dbg !4959
  call void @llvm.dbg.value(metadata %struct.iv* %call4, metadata !4940, metadata !DIExpression()), !dbg !4945
  %tobool5 = icmp eq %struct.iv* %call4, null, !dbg !4960
  br i1 %tobool5, label %for.inc, label %if.end, !dbg !4962

if.end:                                           ; preds = %for.body
  %call6 = call %struct.edge_def* @loop_latch_edge(%struct.loop* %0) #6, !dbg !4963
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call6, i64 0, i32 6, !dbg !4963
  %4 = load i32, i32* %dest_idx, align 4, !dbg !4963
  %call7 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call1, i32 %4) #7, !dbg !4963
  %call8 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call7) #7, !dbg !4963
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !4939, metadata !DIExpression()), !dbg !4945
  %call9 = call fastcc %struct.iv* @get_iv(%struct.ivopts_data* %data, %union.tree_node* %call8) #7, !dbg !4964
  call void @llvm.dbg.value(metadata %struct.iv* %call9, metadata !4941, metadata !DIExpression()), !dbg !4945
  %tobool10 = icmp eq %struct.iv* %call9, null, !dbg !4965
  br i1 %tobool10, label %for.inc, label %if.end12, !dbg !4967

if.end12:                                         ; preds = %if.end
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4968
  %5 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4968
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %5, align 8, !dbg !4968
  %call13 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %6) #7, !dbg !4969
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call13, metadata !4943, metadata !DIExpression()), !dbg !4945
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call13, i64 0, i32 3, !dbg !4970
  %7 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !4970
  %8 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !4972
  %cmp = icmp eq %struct.loop* %7, %8, !dbg !4973
  br i1 %cmp, label %lor.lhs.false, label %for.inc, !dbg !4974

lor.lhs.false:                                    ; preds = %if.end12
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call13, i64 0, i32 13, !dbg !4975
  %9 = load i32, i32* %flags, align 8, !dbg !4975
  %and = and i32 %9, 4, !dbg !4976
  %tobool15 = icmp eq i32 %and, 0, !dbg !4976
  br i1 %tobool15, label %if.end17, label %for.inc, !dbg !4977

if.end17:                                         ; preds = %lor.lhs.false
  %biv_p = getelementptr inbounds %struct.iv, %struct.iv* %call4, i64 0, i32 4, !dbg !4978
  store i8 1, i8* %biv_p, align 8, !dbg !4979
  %biv_p18 = getelementptr inbounds %struct.iv, %struct.iv* %call9, i64 0, i32 4, !dbg !4980
  store i8 1, i8* %biv_p18, align 8, !dbg !4981
  br label %for.inc, !dbg !4982

for.inc:                                          ; preds = %lor.lhs.false, %if.end12, %if.end, %for.body, %if.end17
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4944, metadata !DIExpression(DW_OP_deref)), !dbg !4945
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !4983
  br label %for.cond, !dbg !4984, !llvm.loop !4985

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4987
  ret void, !dbg !4987
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @niter_for_single_dom_exit(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !4988 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !4992, metadata !DIExpression()), !dbg !4994
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !4995
  %0 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !4995
  %call = tail call %struct.edge_def* @single_dom_exit(%struct.loop* %0) #7, !dbg !4996
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !4993, metadata !DIExpression()), !dbg !4994
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !4997
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4999

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @niter_for_exit(%struct.ivopts_data* %data, %struct.edge_def* nonnull %call) #7, !dbg !5000
  br label %cleanup, !dbg !5001

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call1, %if.end ], [ null, %entry ], !dbg !4994
  ret %union.tree_node* %retval.0, !dbg !5002
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !5003 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5011, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !5012, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.value(metadata i32 0, metadata !5013, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !5014, metadata !DIExpression()), !dbg !5015
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !5016
  %1 = load i64, i64* %0, align 8, !dbg !5016
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !5017
  store i64 %1, i64* %2, align 8, !dbg !5017
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !5018
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !5019
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !5020
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !5023
  br label %while.body, !dbg !5023

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !5024
  br i1 %tobool, label %if.then, label %if.end, !dbg !5025

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !5026
  br label %while.end, !dbg !5028

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !5029

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !5023, !llvm.loop !5030

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !5032

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !5032
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !5034
  %7 = load i32, i32* %indx9, align 8, !dbg !5034
  %cmp11 = icmp eq i32 %7, 0, !dbg !5035
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !5036

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !5037
  %8 = load i32, i32* %indx14, align 8, !dbg !5037
  %mul = shl i32 %8, 7, !dbg !5038
  call void @llvm.dbg.value(metadata i32 %mul, metadata !5013, metadata !DIExpression()), !dbg !5015
  br label %if.end15, !dbg !5039

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !5013, metadata !DIExpression()), !dbg !5015
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !5040
  store i32 0, i32* %word_no, align 8, !dbg !5041
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !5042
  %9 = load i64, i64* %arrayidx, align 8, !dbg !5042
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !5043
  store i64 %9, i64* %bits21, align 8, !dbg !5044
  %tobool23 = icmp eq i64 %9, 0, !dbg !5045
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !5045
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !5046
  call void @llvm.dbg.value(metadata i32 %add, metadata !5013, metadata !DIExpression()), !dbg !5015
  store i32 %add, i32* %bit_no, align 4, !dbg !5047
  ret void, !dbg !5048
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !5049 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5053, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !5054, metadata !DIExpression()), !dbg !5058
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !5059
  %0 = load i64, i64* %bits, align 8, !dbg !5059
  %tobool = icmp eq i64 %0, 0, !dbg !5060
  br i1 %tobool, label %if.end, label %next_bit, !dbg !5061

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !5062
  br label %next_bit, !dbg !5065

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !5055), !dbg !5066
  br label %while.cond, !dbg !5065

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !5067
  %and = and i64 %2, 1, !dbg !5068
  %tobool2 = icmp eq i64 %and, 0, !dbg !5069
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !5065

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !5070
  store i64 %shr, i64* %bits, align 8, !dbg !5070
  %3 = load i32, i32* %bit_no, align 4, !dbg !5072
  %add = add i32 %3, 1, !dbg !5072
  store i32 %add, i32* %bit_no, align 4, !dbg !5072
  %.pre = load i64, i64* %bits, align 8, !dbg !5067
  br label %while.cond, !dbg !5065, !llvm.loop !5073

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !5075
  %sub = add i32 %4, 63, !dbg !5076
  %div = and i32 %sub, -64, !dbg !5077
  store i32 %div, i32* %bit_no, align 4, !dbg !5078
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !5079
  %5 = load i32, i32* %word_no, align 8, !dbg !5080
  %inc = add i32 %5, 1, !dbg !5080
  store i32 %inc, i32* %word_no, align 8, !dbg !5080
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !5081
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !5081
  br label %while.body6, !dbg !5082

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !5083

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !5084
  %cmp = icmp eq i32 %8, 2, !dbg !5085
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !5081
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !5083

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !5062
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !5062
  %10 = load i64, i64* %arrayidx, align 8, !dbg !5062
  store i64 %10, i64* %bits, align 8, !dbg !5086
  %tobool14 = icmp eq i64 %10, 0, !dbg !5087
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !5089

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !5090
  %add17 = add i32 %11, 64, !dbg !5090
  store i32 %add17, i32* %bit_no, align 4, !dbg !5090
  %12 = load i32, i32* %word_no, align 8, !dbg !5091
  %inc19 = add i32 %12, 1, !dbg !5091
  store i32 %inc19, i32* %word_no, align 8, !dbg !5091
  br label %while.cond7, !dbg !5083, !llvm.loop !5092

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !5081
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !5094
  %14 = load i64, i64* %13, align 8, !dbg !5094
  store i64 %14, i64* %6, align 8, !dbg !5095
  %tobool24 = icmp eq i64 %14, 0, !dbg !5096
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !5098

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !5098
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !5099
  %16 = load i32, i32* %indx, align 8, !dbg !5099
  %mul28 = shl i32 %16, 7, !dbg !5100
  store i32 %mul28, i32* %bit_no, align 4, !dbg !5101
  store i32 0, i32* %word_no, align 8, !dbg !5102
  br label %while.body6, !dbg !5082, !llvm.loop !5103

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !5105

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !5105

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !5058
  ret i8 %retval.0, !dbg !5105
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.version_info* @ver_info(%struct.ivopts_data* %data, i32 %ver) unnamed_addr #0 !dbg !5106 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5110, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %ver, metadata !5111, metadata !DIExpression()), !dbg !5112
  %version_info = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 4, !dbg !5113
  %0 = load %struct.version_info*, %struct.version_info** %version_info, align 8, !dbg !5113
  %idx.ext = zext i32 %ver to i64, !dbg !5114
  %add.ptr = getelementptr inbounds %struct.version_info, %struct.version_info* %0, i64 %idx.ext, !dbg !5114
  ret %struct.version_info* %add.ptr, !dbg !5115
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !5116 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5120, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !5121, metadata !DIExpression()), !dbg !5122
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !5123
  %0 = load i64, i64* %bits, align 8, !dbg !5124
  %shr = lshr i64 %0, 1, !dbg !5124
  store i64 %shr, i64* %bits, align 8, !dbg !5124
  %1 = load i32, i32* %bit_no, align 4, !dbg !5125
  %add = add i32 %1, 1, !dbg !5125
  store i32 %add, i32* %bit_no, align 4, !dbg !5125
  ret void, !dbg !5126
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5127 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5131, metadata !DIExpression()), !dbg !5132
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5133
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5133
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !5134
  %conv1 = zext i1 %cmp to i8, !dbg !5135
  ret i8 %conv1, !dbg !5136
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5137 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5141, metadata !DIExpression()), !dbg !5142
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5143
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5143
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !5144
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5144
  ret %union.gimple_statement_d* %1, !dbg !5145
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !5146 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !5152, metadata !DIExpression()), !dbg !5153
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5154
  ret %union.tree_node* %0, !dbg !5155
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5156 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5158, metadata !DIExpression()), !dbg !5159
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !5160
  ret %union.tree_node** %result, !dbg !5161
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @determine_biv_step(%union.gimple_statement_d* %phi) unnamed_addr #5 !dbg !5162 {
entry:
  %iv = alloca %struct.affine_iv, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !5166, metadata !DIExpression()), !dbg !5176
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %phi) #7, !dbg !5177
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !5178
  %0 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5178
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !5167, metadata !DIExpression()), !dbg !5176
  %call1 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !5179
  %call2 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call1) #7, !dbg !5179
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !5168, metadata !DIExpression()), !dbg !5176
  %1 = bitcast %struct.affine_iv* %iv to i8*, !dbg !5180
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5180
  %call3 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call2) #6, !dbg !5181
  %tobool = icmp eq i8 %call3, 0, !dbg !5181
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5183

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.affine_iv* %iv, metadata !5169, metadata !DIExpression(DW_OP_deref)), !dbg !5176
  %call4 = call zeroext i8 @simple_iv(%struct.loop* %0, %struct.loop* %0, %union.tree_node* %call2, %struct.affine_iv* nonnull %iv, i8 zeroext 1) #6, !dbg !5184
  %tobool5 = icmp eq i8 %call4, 0, !dbg !5184
  br i1 %tobool5, label %cleanup, label %if.end7, !dbg !5186

if.end7:                                          ; preds = %if.end
  %step = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %iv, i64 0, i32 1, !dbg !5187
  %2 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !5187
  %call8 = call i32 @integer_zerop(%union.tree_node* %2) #6, !dbg !5188
  %tobool9 = icmp eq i32 %call8, 0, !dbg !5188
  %3 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !5188
  %cond = select i1 %tobool9, %union.tree_node* %3, %union.tree_node* null, !dbg !5188
  br label %cleanup, !dbg !5188

cleanup:                                          ; preds = %if.end, %entry, %if.end7
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ null, %if.end ], [ %cond, %if.end7 ], !dbg !5176
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5189
  ret %union.tree_node* %retval.0, !dbg !5189
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !5190 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !5194, metadata !DIExpression()), !dbg !5195
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !5196
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !5196
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5197
  ret %union.tree_node* %1, !dbg !5198
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5199 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5203, metadata !DIExpression()), !dbg !5205
  call void @llvm.dbg.value(metadata i32 %i, metadata !5204, metadata !DIExpression()), !dbg !5205
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !5206
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !5207
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !5208
}

declare dso_local %struct.edge_def* @loop_preheader_edge(%struct.loop*) local_unnamed_addr #2

declare dso_local %union.tree_node* @expand_simple_operations(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @set_iv(%struct.ivopts_data* %data, %union.tree_node* %iv, %union.tree_node* %base, %union.tree_node* %step) unnamed_addr #5 !dbg !5209 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5213, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata %union.tree_node* %iv, metadata !5214, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !5215, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata %union.tree_node* %step, metadata !5216, metadata !DIExpression()), !dbg !5218
  %call = tail call fastcc %struct.version_info* @name_info(%struct.ivopts_data* %data, %union.tree_node* %iv) #7, !dbg !5219
  call void @llvm.dbg.value(metadata %struct.version_info* %call, metadata !5217, metadata !DIExpression()), !dbg !5218
  %iv1 = getelementptr inbounds %struct.version_info, %struct.version_info* %call, i64 0, i32 1, !dbg !5220
  %0 = load %struct.iv*, %struct.iv** %iv1, align 8, !dbg !5220
  %tobool = icmp eq %struct.iv* %0, null, !dbg !5220
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5220

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5220
  br label %cond.end, !dbg !5220

cond.end:                                         ; preds = %entry, %cond.true
  %relevant = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 5, !dbg !5221
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %relevant, align 8, !dbg !5221
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %iv, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5222
  %2 = bitcast %union.tree_node** %version to i32*, !dbg !5222
  %3 = load i32, i32* %2, align 8, !dbg !5222
  %call2 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %1, i32 %3) #6, !dbg !5223
  %call3 = tail call fastcc %struct.iv* @alloc_iv(%union.tree_node* %base, %union.tree_node* %step) #7, !dbg !5224
  store %struct.iv* %call3, %struct.iv** %iv1, align 8, !dbg !5225
  %ssa_name6 = getelementptr inbounds %struct.iv, %struct.iv* %call3, i64 0, i32 3, !dbg !5226
  store %union.tree_node* %iv, %union.tree_node** %ssa_name6, align 8, !dbg !5227
  ret void, !dbg !5228
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !5229 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5234, metadata !DIExpression()), !dbg !5235
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5236
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5236
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !5237
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !5237
  %2 = load i64, i64* %1, align 8, !dbg !5237
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !5238
  store i64 %2, i64* %3, align 8, !dbg !5238
  ret void, !dbg !5239
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @simple_iv(%struct.loop*, %struct.loop*, %union.tree_node*, %struct.affine_iv*, i8 zeroext) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !5240 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5245, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.value(metadata i32 %index, metadata !5246, metadata !DIExpression()), !dbg !5247
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !5248
  %0 = load i32, i32* %capacity, align 8, !dbg !5248
  %cmp = icmp ult i32 %0, %index, !dbg !5248
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5248

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5248
  br label %cond.end, !dbg !5248

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !5249
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !5249
  ret %struct.phi_arg_d* %arrayidx, !dbg !5250
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.version_info* @name_info(%struct.ivopts_data* %data, %union.tree_node* %name) unnamed_addr #0 !dbg !5251 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5255, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5256, metadata !DIExpression()), !dbg !5257
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5258
  %0 = bitcast %union.tree_node** %version to i32*, !dbg !5258
  %1 = load i32, i32* %0, align 8, !dbg !5258
  %call = tail call fastcc %struct.version_info* @ver_info(%struct.ivopts_data* %data, i32 %1) #7, !dbg !5259
  ret %struct.version_info* %call, !dbg !5260
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.iv* @alloc_iv(%union.tree_node* %base, %union.tree_node* %step) unnamed_addr #5 !dbg !5261 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !5265, metadata !DIExpression()), !dbg !5268
  call void @llvm.dbg.value(metadata %union.tree_node* %step, metadata !5266, metadata !DIExpression()), !dbg !5268
  %call = tail call i8* @xcalloc(i64 1, i64 40) #6, !dbg !5269
  %0 = bitcast i8* %call to %struct.iv*, !dbg !5269
  call void @llvm.dbg.value(metadata %struct.iv* %0, metadata !5267, metadata !DIExpression()), !dbg !5268
  %cmp = icmp eq %union.tree_node* %step, null, !dbg !5270
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5270

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 838, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5270
  br label %cond.end, !dbg !5270

cond.end:                                         ; preds = %entry, %cond.true
  %base1 = bitcast i8* %call to %union.tree_node**, !dbg !5271
  store %union.tree_node* %base, %union.tree_node** %base1, align 8, !dbg !5272
  %call2 = tail call fastcc %union.tree_node* @determine_base_object(%union.tree_node* %base) #7, !dbg !5273
  %base_object = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5274
  %1 = bitcast i8* %base_object to %union.tree_node**, !dbg !5274
  store %union.tree_node* %call2, %union.tree_node** %1, align 8, !dbg !5275
  %step3 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !5276
  %2 = bitcast i8* %step3 to %union.tree_node**, !dbg !5276
  store %union.tree_node* %step, %union.tree_node** %2, align 8, !dbg !5277
  %3 = getelementptr inbounds i8, i8* %call, i64 32, !dbg !5278
  store i8 0, i8* %3, align 8, !dbg !5279
  %4 = getelementptr inbounds i8, i8* %call, i64 33, !dbg !5280
  store i8 0, i8* %4, align 1, !dbg !5281
  %use_id = getelementptr inbounds i8, i8* %call, i64 36, !dbg !5282
  %5 = bitcast i8* %use_id to i32*, !dbg !5282
  store i32 0, i32* %5, align 4, !dbg !5283
  %ssa_name = getelementptr inbounds i8, i8* %call, i64 24, !dbg !5284
  %6 = bitcast i8* %ssa_name to %union.tree_node**, !dbg !5284
  store %union.tree_node* null, %union.tree_node** %6, align 8, !dbg !5285
  ret %struct.iv* %0, !dbg !5286
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @determine_base_object(%union.tree_node* %expr) unnamed_addr #5 !dbg !5287 {
entry:
  br label %tailrecurse, !dbg !5295

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %expr.tr = phi %union.tree_node* [ %expr, %entry ], [ %expr.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr, metadata !5291, metadata !DIExpression()), !dbg !5297
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5298
  %bf.load = load i64, i64* %0, align 8, !dbg !5298
  %1 = trunc i64 %bf.load to i16, !dbg !5298
  %bf.cast51 = and i64 %bf.load, 65535, !dbg !5299
  %cmp = icmp eq i64 %bf.cast51, 116, !dbg !5299
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5299

lor.lhs.false:                                    ; preds = %tailrecurse
  %cmp10 = icmp eq i64 %bf.cast51, 113, !dbg !5299
  br i1 %cmp10, label %if.then, label %if.end, !dbg !5300

if.then:                                          ; preds = %lor.lhs.false, %tailrecurse
  br label %tailrecurse.backedge, !dbg !5295

tailrecurse.backedge:                             ; preds = %if.then, %if.then38, %sw.bb46
  %expr.tr.pn = phi %union.tree_node* [ %expr.tr, %if.then ], [ %call30, %if.then38 ], [ %expr.tr, %sw.bb46 ]
  %expr.tr.be.in = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5297
  %expr.tr.be = load %union.tree_node*, %union.tree_node** %expr.tr.be.in, align 8, !dbg !5297
  br label %tailrecurse, !dbg !5297

if.end:                                           ; preds = %lor.lhs.false
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5301
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !5301
  %3 = load i64*, i64** %2, align 8, !dbg !5301
  %bf.load12 = load i64, i64* %3, align 8, !dbg !5301
  %bf.cast143 = and i64 %bf.load12, 65535, !dbg !5301
  %cmp15 = icmp eq i64 %bf.cast143, 10, !dbg !5301
  br i1 %cmp15, label %if.end25, label %lor.lhs.false16, !dbg !5301

lor.lhs.false16:                                  ; preds = %if.end
  %cmp23 = icmp eq i64 %bf.cast143, 12, !dbg !5301
  br i1 %cmp23, label %if.end25, label %cleanup.loopexit, !dbg !5303

if.end25:                                         ; preds = %lor.lhs.false16, %if.end
  switch i16 %1, label %sw.default.loopexit [
    i16 23, label %cleanup.loopexit
    i16 121, label %sw.bb26
    i16 66, label %sw.bb46
    i16 63, label %sw.bb51
    i16 64, label %sw.bb51
  ], !dbg !5304

sw.bb26:                                          ; preds = %if.end25
  %operands28 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5305
  %4 = load %union.tree_node*, %union.tree_node** %operands28, align 8, !dbg !5305
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5294, metadata !DIExpression()), !dbg !5297
  %call30 = tail call %union.tree_node* @get_base_address(%union.tree_node* %4) #6, !dbg !5307
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !5293, metadata !DIExpression()), !dbg !5297
  %tobool = icmp eq %union.tree_node* %call30, null, !dbg !5308
  br i1 %tobool, label %cleanup.loopexit, label %if.end32, !dbg !5310

if.end32:                                         ; preds = %sw.bb26
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5311
  %bf.load34 = load i64, i64* %5, align 8, !dbg !5311
  %bf.cast365 = and i64 %bf.load34, 65535, !dbg !5313
  %cmp37 = icmp eq i64 %bf.cast365, 47, !dbg !5313
  br i1 %cmp37, label %if.then38, label %if.end43, !dbg !5314

if.then38:                                        ; preds = %if.end32
  br label %tailrecurse.backedge, !dbg !5315

if.end43:                                         ; preds = %if.end32
  %call30.lcssa = phi %union.tree_node* [ %call30, %if.end32 ], !dbg !5307
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !5316
  %call44 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* nonnull %call30.lcssa) #6, !dbg !5316
  %call45 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %6, %union.tree_node* %call44) #6, !dbg !5316
  br label %cleanup, !dbg !5317

sw.bb46:                                          ; preds = %if.end25
  br label %tailrecurse.backedge, !dbg !5318

sw.bb51:                                          ; preds = %if.end25, %if.end25
  %expr.tr.lcssa15 = phi %union.tree_node* [ %expr.tr, %if.end25 ], [ %expr.tr, %if.end25 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa15, metadata !5291, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa15, metadata !5291, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa15, metadata !5291, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa15, metadata !5291, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa15, metadata !5291, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa15, metadata !5291, metadata !DIExpression()), !dbg !5297
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 824, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5319
  br label %sw.default, !dbg !5319

sw.default.loopexit:                              ; preds = %if.end25
  %expr.tr.lcssa14 = phi %union.tree_node* [ %expr.tr, %if.end25 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa14, metadata !5291, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa14, metadata !5291, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa14, metadata !5291, metadata !DIExpression()), !dbg !5297
  br label %sw.default, !dbg !5320

sw.default:                                       ; preds = %sw.default.loopexit, %sw.bb51
  %expr.tr17 = phi %union.tree_node* [ %expr.tr.lcssa14, %sw.default.loopexit ], [ %expr.tr.lcssa15, %sw.bb51 ]
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !5320
  %call52 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %7, %union.tree_node* %expr.tr17) #6, !dbg !5320
  br label %cleanup, !dbg !5321

cleanup.loopexit:                                 ; preds = %lor.lhs.false16, %if.end25, %sw.bb26
  %retval.0.ph = phi %union.tree_node* [ %expr.tr, %sw.bb26 ], [ null, %if.end25 ], [ null, %lor.lhs.false16 ]
  br label %cleanup, !dbg !5322

cleanup:                                          ; preds = %cleanup.loopexit, %sw.default, %if.end43
  %retval.0 = phi %union.tree_node* [ %call52, %sw.default ], [ %call45, %if.end43 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !5297
  ret %union.tree_node* %retval.0, !dbg !5322
}

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_fold_addr_expr_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @find_givs_in_bb(%struct.ivopts_data* %data, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !5323 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5327, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5328, metadata !DIExpression()), !dbg !5330
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !5331
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5331
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5332
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5332
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !5332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !5332
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5332
  br label %for.cond, !dbg !5334

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5329, metadata !DIExpression(DW_OP_deref)), !dbg !5330
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !5335
  %tobool = icmp eq i8 %call, 0, !dbg !5337
  br i1 %tobool, label %for.body, label %for.end, !dbg !5338

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5329, metadata !DIExpression(DW_OP_deref)), !dbg !5330
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !5339
  call fastcc void @find_givs_in_stmt(%struct.ivopts_data* %data, %union.gimple_statement_d* %call1) #7, !dbg !5340
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5329, metadata !DIExpression(DW_OP_deref)), !dbg !5330
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !5341
  br label %for.cond, !dbg !5342, !llvm.loop !5343

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5345
  ret void, !dbg !5345
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5346 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5350, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5351, metadata !DIExpression()), !dbg !5354
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !5355
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !5352, metadata !DIExpression()), !dbg !5353
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !5356
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !5357
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5358
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !5359
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !5360
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !5361
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !5362
  ret void, !dbg !5363
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_givs_in_stmt(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5364 {
entry:
  %iv = alloca %struct.affine_iv, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5368, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5369, metadata !DIExpression()), !dbg !5371
  %0 = bitcast %struct.affine_iv* %iv to i8*, !dbg !5372
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5372
  call void @llvm.dbg.value(metadata %struct.affine_iv* %iv, metadata !5370, metadata !DIExpression(DW_OP_deref)), !dbg !5371
  %call = call fastcc zeroext i8 @find_givs_in_stmt_scev(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt, %struct.affine_iv* nonnull %iv) #7, !dbg !5373
  %tobool = icmp eq i8 %call, 0, !dbg !5373
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5375

if.end:                                           ; preds = %entry
  %call1 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !5376
  %base = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %iv, i64 0, i32 0, !dbg !5377
  %1 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !5377
  %step = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %iv, i64 0, i32 1, !dbg !5378
  %2 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !5378
  call fastcc void @set_iv(%struct.ivopts_data* %data, %union.tree_node* %call1, %union.tree_node* %1, %union.tree_node* %2) #7, !dbg !5379
  br label %cleanup, !dbg !5380

cleanup:                                          ; preds = %entry, %if.end
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5380
  ret void, !dbg !5380
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5381 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5388, metadata !DIExpression()), !dbg !5389
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !5390
  %0 = load i32, i32* %flags, align 8, !dbg !5390
  %and = and i32 %0, 512, !dbg !5391
  %tobool = icmp eq i32 %and, 0, !dbg !5391
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !5392

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !5393
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !5393
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !5394
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5395

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !5396
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !5396
  br label %cond.end, !dbg !5395

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !5395
  ret %struct.gimple_seq_d* %cond, !dbg !5397
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !5398 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !5405, metadata !DIExpression()), !dbg !5406
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !5407
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5407

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !5408
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !5408
  br label %cond.end, !dbg !5407

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !5407
  ret %struct.gimple_seq_node_d* %cond, !dbg !5409
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @find_givs_in_stmt_scev(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt, %struct.affine_iv* %iv) unnamed_addr #5 !dbg !5410 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5415, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5416, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.value(metadata %struct.affine_iv* %iv, metadata !5417, metadata !DIExpression()), !dbg !5420
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !5421
  %0 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !5421
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !5419, metadata !DIExpression()), !dbg !5420
  %base = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %iv, i64 0, i32 0, !dbg !5422
  store %union.tree_node* null, %union.tree_node** %base, align 8, !dbg !5423
  %step = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %iv, i64 0, i32 1, !dbg !5424
  store %union.tree_node* null, %union.tree_node** %step, align 8, !dbg !5425
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5426
  %cmp = icmp eq i32 %call, 6, !dbg !5428
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5429

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !5430
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5418, metadata !DIExpression()), !dbg !5420
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5431
  %bf.load = load i64, i64* %1, align 8, !dbg !5431
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5433
  %cmp3 = icmp eq i64 %bf.cast1, 141, !dbg !5433
  br i1 %cmp3, label %if.end5, label %cleanup, !dbg !5434

if.end5:                                          ; preds = %if.end
  %call6 = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !5435
  %call7 = tail call zeroext i8 @simple_iv(%struct.loop* %0, %struct.loop* %call6, %union.tree_node* %call1, %struct.affine_iv* %iv, i8 zeroext 1) #6, !dbg !5437
  %tobool = icmp eq i8 %call7, 0, !dbg !5437
  br i1 %tobool, label %cleanup, label %if.end9, !dbg !5438

if.end9:                                          ; preds = %if.end5
  %2 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !5439
  %call11 = tail call %union.tree_node* @expand_simple_operations(%union.tree_node* %2) #6, !dbg !5440
  store %union.tree_node* %call11, %union.tree_node** %base, align 8, !dbg !5441
  %call14 = tail call zeroext i8 @contains_abnormal_ssa_name_p(%union.tree_node* %call11) #7, !dbg !5442
  %tobool15 = icmp eq i8 %call14, 0, !dbg !5442
  br i1 %tobool15, label %lor.lhs.false, label %cleanup, !dbg !5444

lor.lhs.false:                                    ; preds = %if.end9
  %3 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !5445
  %call17 = tail call zeroext i8 @contains_abnormal_ssa_name_p(%union.tree_node* %3) #7, !dbg !5446
  %tobool19 = icmp eq i8 %call17, 0, !dbg !5446
  %spec.select = zext i1 %tobool19 to i8, !dbg !5447
  ret i8 %spec.select, !dbg !5447

cleanup:                                          ; preds = %if.end9, %if.end5, %if.end, %entry
  ret i8 0, !dbg !5448
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5449 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5453, metadata !DIExpression()), !dbg !5454
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !5455
  ret %union.tree_node* %call, !dbg !5456
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5457 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5461, metadata !DIExpression()), !dbg !5463
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !5464
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !5462, metadata !DIExpression()), !dbg !5463
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !5465
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5467

if.end:                                           ; preds = %entry
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !5468
  %0 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5468
  br label %cleanup, !dbg !5469

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.loop* [ %0, %if.end ], [ null, %entry ], !dbg !5463
  ret %struct.loop* %retval.0, !dbg !5470
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.iv* @get_iv(%struct.ivopts_data* %data, %union.tree_node* %var) unnamed_addr #5 !dbg !5471 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5475, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5476, metadata !DIExpression()), !dbg !5479
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5480
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !5480
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5478, metadata !DIExpression()), !dbg !5479
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5481
  %bf.load = load i64, i64* %1, align 8, !dbg !5481
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5481
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !5481
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !5481

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast1, 12, !dbg !5481
  br i1 %cmp6, label %if.end, label %land.lhs.true, !dbg !5483

land.lhs.true:                                    ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 6, !dbg !5484
  br i1 %cmp11, label %if.end, label %lor.lhs.false12, !dbg !5484

lor.lhs.false12:                                  ; preds = %land.lhs.true
  %cmp17 = icmp eq i64 %bf.cast1, 7, !dbg !5484
  br i1 %cmp17, label %if.end, label %lor.lhs.false18, !dbg !5484

lor.lhs.false18:                                  ; preds = %lor.lhs.false12
  %cmp23 = icmp eq i64 %bf.cast1, 8, !dbg !5484
  br i1 %cmp23, label %if.end, label %cleanup, !dbg !5485

if.end:                                           ; preds = %lor.lhs.false18, %lor.lhs.false12, %land.lhs.true, %lor.lhs.false, %entry
  %call = tail call fastcc %struct.version_info* @name_info(%struct.ivopts_data* %data, %union.tree_node* %var) #7, !dbg !5486
  %iv = getelementptr inbounds %struct.version_info, %struct.version_info* %call, i64 0, i32 1, !dbg !5488
  %2 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !5488
  %tobool = icmp eq %struct.iv* %2, null, !dbg !5486
  br i1 %tobool, label %if.then24, label %if.end33, !dbg !5489

if.then24:                                        ; preds = %if.end
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5490
  %3 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5490
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %3, align 8, !dbg !5490
  %call25 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %4) #7, !dbg !5492
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call25, metadata !5477, metadata !DIExpression()), !dbg !5479
  %tobool26 = icmp eq %struct.basic_block_def* %call25, null, !dbg !5493
  br i1 %tobool26, label %if.then30, label %lor.lhs.false27, !dbg !5495

lor.lhs.false27:                                  ; preds = %if.then24
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !5496
  %5 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !5496
  %call28 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %5, %struct.basic_block_def* nonnull %call25) #6, !dbg !5497
  %tobool29 = icmp eq i8 %call28, 0, !dbg !5497
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !5498

if.then30:                                        ; preds = %lor.lhs.false27, %if.then24
  %call31 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %0, i64 0) #6, !dbg !5499
  tail call fastcc void @set_iv(%struct.ivopts_data* %data, %union.tree_node* %var, %union.tree_node* %var, %union.tree_node* %call31) #7, !dbg !5500
  br label %if.end33, !dbg !5500

if.end33:                                         ; preds = %lor.lhs.false27, %if.end, %if.then30
  %call34 = tail call fastcc %struct.version_info* @name_info(%struct.ivopts_data* %data, %union.tree_node* %var) #7, !dbg !5501
  %iv35 = getelementptr inbounds %struct.version_info, %struct.version_info* %call34, i64 0, i32 1, !dbg !5502
  %6 = load %struct.iv*, %struct.iv** %iv35, align 8, !dbg !5502
  br label %cleanup, !dbg !5503

cleanup:                                          ; preds = %lor.lhs.false18, %if.end33
  %retval.0 = phi %struct.iv* [ %6, %if.end33 ], [ null, %lor.lhs.false18 ], !dbg !5479
  ret %struct.iv* %retval.0, !dbg !5504
}

declare dso_local %struct.edge_def* @loop_latch_edge(%struct.loop*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @niter_for_exit(%struct.ivopts_data* %data, %struct.edge_def* %exit) unnamed_addr #5 !dbg !5505 {
entry:
  %desc = alloca %struct.tree_niter_desc, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5509, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit, metadata !5510, metadata !DIExpression()), !dbg !5523
  %0 = bitcast %struct.tree_niter_desc* %desc to i8*, !dbg !5524
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %0) #8, !dbg !5524
  %niters = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 1, !dbg !5525
  %1 = load %struct.pointer_map_t*, %struct.pointer_map_t** %niters, align 8, !dbg !5525
  %tobool = icmp eq %struct.pointer_map_t* %1, null, !dbg !5527
  br i1 %tobool, label %if.then, label %if.else, !dbg !5528

if.then:                                          ; preds = %entry
  %call = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !5529
  store %struct.pointer_map_t* %call, %struct.pointer_map_t** %niters, align 8, !dbg !5531
  call void @llvm.dbg.value(metadata i8** null, metadata !5522, metadata !DIExpression()), !dbg !5523
  br label %if.end, !dbg !5532

if.else:                                          ; preds = %entry
  %2 = bitcast %struct.edge_def* %exit to i8*, !dbg !5533
  %call3 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* nonnull %1, i8* %2) #6, !dbg !5534
  call void @llvm.dbg.value(metadata i8** %call3, metadata !5522, metadata !DIExpression()), !dbg !5523
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %slot.0 = phi i8** [ %call3, %if.else ], [ null, %if.then ], !dbg !5535
  call void @llvm.dbg.value(metadata i8** %slot.0, metadata !5522, metadata !DIExpression()), !dbg !5523
  %tobool4 = icmp eq i8** %slot.0, null, !dbg !5536
  br i1 %tobool4, label %if.then5, label %if.else20, !dbg !5538

if.then5:                                         ; preds = %if.end
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !5539
  %3 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !5539
  call void @llvm.dbg.value(metadata %struct.tree_niter_desc* %desc, metadata !5511, metadata !DIExpression(DW_OP_deref)), !dbg !5523
  %call6 = call zeroext i8 @number_of_iterations_exit(%struct.loop* %3, %struct.edge_def* %exit, %struct.tree_niter_desc* nonnull %desc, i8 zeroext 1) #6, !dbg !5542
  %tobool7 = icmp eq i8 %call6, 0, !dbg !5542
  br i1 %tobool7, label %if.end17, label %land.lhs.true, !dbg !5543

land.lhs.true:                                    ; preds = %if.then5
  %may_be_zero = getelementptr inbounds %struct.tree_niter_desc, %struct.tree_niter_desc* %desc, i64 0, i32 1, !dbg !5544
  %4 = load %union.tree_node*, %union.tree_node** %may_be_zero, align 8, !dbg !5544
  %call8 = call i32 @integer_zerop(%union.tree_node* %4) #6, !dbg !5545
  %tobool9 = icmp eq i32 %call8, 0, !dbg !5545
  br i1 %tobool9, label %if.end17, label %land.lhs.true10, !dbg !5546

land.lhs.true10:                                  ; preds = %land.lhs.true
  %niter11 = getelementptr inbounds %struct.tree_niter_desc, %struct.tree_niter_desc* %desc, i64 0, i32 2, !dbg !5547
  %5 = load %union.tree_node*, %union.tree_node** %niter11, align 8, !dbg !5547
  %call12 = call zeroext i8 @contains_abnormal_ssa_name_p(%union.tree_node* %5) #7, !dbg !5548
  %tobool13 = icmp eq i8 %call12, 0, !dbg !5548
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !5549

if.then14:                                        ; preds = %land.lhs.true10
  %6 = load %union.tree_node*, %union.tree_node** %niter11, align 8, !dbg !5550
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !5521, metadata !DIExpression()), !dbg !5523
  br label %if.end17, !dbg !5551

if.end17:                                         ; preds = %land.lhs.true10, %land.lhs.true, %if.then5, %if.then14
  %niter.0 = phi %union.tree_node* [ %6, %if.then14 ], [ null, %land.lhs.true10 ], [ null, %land.lhs.true ], [ null, %if.then5 ], !dbg !5552
  call void @llvm.dbg.value(metadata %union.tree_node* %niter.0, metadata !5521, metadata !DIExpression()), !dbg !5523
  %7 = load %struct.pointer_map_t*, %struct.pointer_map_t** %niters, align 8, !dbg !5553
  %8 = bitcast %struct.edge_def* %exit to i8*, !dbg !5554
  %call19 = call i8** @pointer_map_insert(%struct.pointer_map_t* %7, i8* %8) #6, !dbg !5555
  %9 = bitcast i8** %call19 to %union.tree_node**, !dbg !5556
  store %union.tree_node* %niter.0, %union.tree_node** %9, align 8, !dbg !5556
  br label %if.end21, !dbg !5557

if.else20:                                        ; preds = %if.end
  %10 = bitcast i8** %slot.0 to %union.tree_node**, !dbg !5558
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !5558
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !5521, metadata !DIExpression()), !dbg !5523
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.end17
  %niter.1 = phi %union.tree_node* [ %11, %if.else20 ], [ %niter.0, %if.end17 ], !dbg !5559
  call void @llvm.dbg.value(metadata %union.tree_node* %niter.1, metadata !5521, metadata !DIExpression()), !dbg !5523
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %0) #8, !dbg !5560
  ret %union.tree_node* %niter.1, !dbg !5561
}

declare dso_local %struct.pointer_map_t* @pointer_map_create() local_unnamed_addr #2

declare dso_local i8** @pointer_map_contains(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @number_of_iterations_exit(%struct.loop*, %struct.edge_def*, %struct.tree_niter_desc*, i8 zeroext) local_unnamed_addr #2

declare dso_local i8** @pointer_map_insert(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !5562 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !5566, metadata !DIExpression()), !dbg !5568
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !5569
  store i32 0, i32* %index, align 8, !dbg !5570
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !5571
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !5572
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !5573
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !5573
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !5573
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !5574 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !5580, metadata !DIExpression()), !dbg !5581
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !5582
  %tobool = icmp eq i8 %call, 0, !dbg !5582
  br i1 %tobool, label %if.then, label %if.else, !dbg !5584

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !5585
  br label %return, !dbg !5587

if.else:                                          ; preds = %entry
  br label %return, !dbg !5588

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !5590
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !5590
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !5590
  ret i8 %retval.0, !dbg !5591
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_interesting_uses_outside(%struct.ivopts_data* %data, %struct.edge_def* %exit) unnamed_addr #5 !dbg !5592 {
entry:
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5596, metadata !DIExpression()), !dbg !5601
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit, metadata !5597, metadata !DIExpression()), !dbg !5601
  %0 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !5602
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5602
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5603
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5603
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit, i64 0, i32 1, !dbg !5605
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5605
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %2) #6, !dbg !5603
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !5603
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5603
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit, i64 0, i32 6, !dbg !5606
  br label %for.cond, !dbg !5609

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !5599, metadata !DIExpression(DW_OP_deref)), !dbg !5601
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !5610
  %tobool = icmp eq i8 %call, 0, !dbg !5611
  br i1 %tobool, label %for.body, label %for.end, !dbg !5612

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !5599, metadata !DIExpression(DW_OP_deref)), !dbg !5601
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !5613
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !5598, metadata !DIExpression()), !dbg !5601
  %3 = load i32, i32* %dest_idx, align 4, !dbg !5614
  %call2 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call1, i32 %3) #7, !dbg !5614
  %call3 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call2) #7, !dbg !5614
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5600, metadata !DIExpression()), !dbg !5601
  %call4 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call3) #6, !dbg !5615
  %tobool5 = icmp eq i8 %call4, 0, !dbg !5615
  br i1 %tobool5, label %for.inc, label %if.then, !dbg !5617

if.then:                                          ; preds = %for.body
  %call6 = call fastcc %struct.iv_use* @find_interesting_uses_op(%struct.ivopts_data* %data, %union.tree_node* %call3) #7, !dbg !5618
  br label %for.inc, !dbg !5618

for.inc:                                          ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !5599, metadata !DIExpression(DW_OP_deref)), !dbg !5601
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !5619
  br label %for.cond, !dbg !5620, !llvm.loop !5621

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5623
  ret void, !dbg !5623
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !5624 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !5629, metadata !DIExpression()), !dbg !5630
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !5631
  %0 = load i32, i32* %index, align 8, !dbg !5631
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !5631
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !5631
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !5631
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5631
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5631

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !5631
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !5631
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !5631
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5631
  br label %cond.end, !dbg !5631

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5631
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5631
  %cmp = icmp ult i32 %0, %call2, !dbg !5631
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !5631

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5631
  br label %cond.end5, !dbg !5631

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !5632
  %inc = add i32 %5, 1, !dbg !5632
  store i32 %inc, i32* %index, align 8, !dbg !5632
  ret void, !dbg !5633
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_interesting_uses_stmt(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5634 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5636, metadata !DIExpression()), !dbg !5657
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5637, metadata !DIExpression()), !dbg !5657
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !5658
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5658
  tail call fastcc void @find_invariants_stmt(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt) #7, !dbg !5659
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5660
  %cmp = icmp eq i32 %call, 1, !dbg !5662
  br i1 %cmp, label %if.then, label %if.end, !dbg !5663

if.then:                                          ; preds = %entry
  tail call fastcc void @find_interesting_uses_cond(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt) #7, !dbg !5664
  br label %cleanup, !dbg !5666

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !5667
  %tobool = icmp eq i8 %call1, 0, !dbg !5667
  br i1 %tobool, label %if.end55, label %if.then2, !dbg !5669

if.then2:                                         ; preds = %if.end
  %call3 = tail call fastcc %union.tree_node** @gimple_assign_lhs_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !5670
  call void @llvm.dbg.value(metadata %union.tree_node** %call3, metadata !5640, metadata !DIExpression()), !dbg !5657
  %call4 = tail call fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !5672
  call void @llvm.dbg.value(metadata %union.tree_node** %call4, metadata !5641, metadata !DIExpression()), !dbg !5657
  %1 = bitcast %union.tree_node** %call3 to i64**, !dbg !5673
  %2 = load i64*, i64** %1, align 8, !dbg !5673
  %bf.load = load i64, i64* %2, align 8, !dbg !5673
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5675
  %cmp5 = icmp eq i64 %bf.cast2, 141, !dbg !5675
  br i1 %cmp5, label %if.then6, label %if.end13, !dbg !5676

if.then6:                                         ; preds = %if.then2
  %3 = bitcast i64* %2 to %union.tree_node*, !dbg !5676
  %call7 = tail call fastcc %struct.iv* @get_iv(%struct.ivopts_data* %data, %union.tree_node* %3) #7, !dbg !5677
  call void @llvm.dbg.value(metadata %struct.iv* %call7, metadata !5638, metadata !DIExpression()), !dbg !5657
  %tobool8 = icmp eq %struct.iv* %call7, null, !dbg !5679
  br i1 %tobool8, label %if.end13, label %land.lhs.true, !dbg !5681

land.lhs.true:                                    ; preds = %if.then6
  %step = getelementptr inbounds %struct.iv, %struct.iv* %call7, i64 0, i32 2, !dbg !5682
  %4 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !5682
  %call9 = tail call i32 @integer_zerop(%union.tree_node* %4) #6, !dbg !5683
  %tobool10 = icmp eq i32 %call9, 0, !dbg !5683
  br i1 %tobool10, label %cleanup, label %if.end13, !dbg !5684

if.end13:                                         ; preds = %land.lhs.true, %if.then6, %if.then2
  %call14 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5685
  call void @llvm.dbg.value(metadata i32 %call14, metadata !5656, metadata !DIExpression()), !dbg !5657
  %call15 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call14) #7, !dbg !5686
  %cmp16 = icmp eq i32 %call15, 3, !dbg !5688
  br i1 %cmp16, label %land.lhs.true17, label %if.else47, !dbg !5689

land.lhs.true17:                                  ; preds = %if.end13
  %5 = bitcast %union.tree_node** %call4 to i64**, !dbg !5690
  %6 = load i64*, i64** %5, align 8, !dbg !5690
  %bf.load19 = load i64, i64* %6, align 8, !dbg !5690
  %bf.cast21 = and i64 %bf.load19, 65535, !dbg !5690
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast21, !dbg !5690
  %7 = load i32, i32* %arrayidx, align 4, !dbg !5690
  %cmp22 = icmp eq i32 %7, 4, !dbg !5690
  %8 = bitcast i64* %6 to %union.tree_node*, !dbg !5691
  br i1 %cmp22, label %if.then25, label %lor.lhs.false, !dbg !5691

lor.lhs.false:                                    ; preds = %land.lhs.true17
  %call23 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %8) #6, !dbg !5692
  %tobool24 = icmp eq i8 %call23, 0, !dbg !5692
  br i1 %tobool24, label %if.else47, label %lor.lhs.false.if.then25_crit_edge, !dbg !5693

lor.lhs.false.if.then25_crit_edge:                ; preds = %lor.lhs.false
  %.pre = load i64*, i64** %5, align 8, !dbg !5694
  %bf.load27.pre = load i64, i64* %.pre, align 8, !dbg !5694
  %9 = bitcast i64* %.pre to %union.tree_node*, !dbg !5693
  %.pre4 = and i64 %bf.load27.pre, 65535, !dbg !5694
  %arrayidx31.phi.trans.insert = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %.pre4, !dbg !5697
  %.pre5 = load i32, i32* %arrayidx31.phi.trans.insert, align 4, !dbg !5694
  %phitmp = icmp eq i32 %.pre5, 4, !dbg !5693
  br label %if.then25, !dbg !5693

if.then25:                                        ; preds = %lor.lhs.false.if.then25_crit_edge, %land.lhs.true17
  %10 = phi i1 [ %phitmp, %lor.lhs.false.if.then25_crit_edge ], [ true, %land.lhs.true17 ]
  %11 = phi %union.tree_node* [ %9, %lor.lhs.false.if.then25_crit_edge ], [ %8, %land.lhs.true17 ]
  br i1 %10, label %if.then34, label %if.else, !dbg !5698

if.then34:                                        ; preds = %if.then25
  tail call fastcc void @find_interesting_uses_address(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt, %union.tree_node** %call4) #7, !dbg !5699
  br label %if.end36, !dbg !5699

if.else:                                          ; preds = %if.then25
  %call35 = tail call fastcc %struct.iv_use* @find_interesting_uses_op(%struct.ivopts_data* %data, %union.tree_node* %11) #7, !dbg !5700
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then34
  %12 = load i64*, i64** %1, align 8, !dbg !5701
  %bf.load38 = load i64, i64* %12, align 8, !dbg !5701
  %bf.cast40 = and i64 %bf.load38, 65535, !dbg !5701
  %arrayidx42 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast40, !dbg !5701
  %13 = load i32, i32* %arrayidx42, align 4, !dbg !5701
  %cmp43 = icmp eq i32 %13, 4, !dbg !5701
  br i1 %cmp43, label %if.then45, label %cleanup, !dbg !5703

if.then45:                                        ; preds = %if.end36
  tail call fastcc void @find_interesting_uses_address(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt, %union.tree_node** %call3) #7, !dbg !5704
  br label %cleanup, !dbg !5704

if.else47:                                        ; preds = %lor.lhs.false, %if.end13
  %idxprom48 = sext i32 %call14 to i64, !dbg !5705
  %arrayidx49 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom48, !dbg !5705
  %14 = load i32, i32* %arrayidx49, align 4, !dbg !5705
  %cmp50 = icmp eq i32 %14, 5, !dbg !5707
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !5708

if.then52:                                        ; preds = %if.else47
  tail call fastcc void @find_interesting_uses_cond(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt) #7, !dbg !5709
  br label %cleanup, !dbg !5711

if.end55:                                         ; preds = %if.end, %if.else47
  %call56 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5712
  %cmp57 = icmp eq i32 %call56, 16, !dbg !5714
  br i1 %cmp57, label %land.lhs.true59, label %if.end74, !dbg !5715

land.lhs.true59:                                  ; preds = %if.end55
  %call60 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !5716
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !5717
  %15 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !5717
  %header = getelementptr inbounds %struct.loop, %struct.loop* %15, i64 0, i32 2, !dbg !5718
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !5718
  %cmp61 = icmp eq %struct.basic_block_def* %call60, %16, !dbg !5719
  br i1 %cmp61, label %if.then63, label %if.end74, !dbg !5720

if.then63:                                        ; preds = %land.lhs.true59
  %call64 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !5721
  %call65 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call64) #7, !dbg !5721
  %call66 = tail call fastcc %struct.iv* @get_iv(%struct.ivopts_data* %data, %union.tree_node* %call65) #7, !dbg !5723
  call void @llvm.dbg.value(metadata %struct.iv* %call66, metadata !5638, metadata !DIExpression()), !dbg !5657
  %tobool67 = icmp eq %struct.iv* %call66, null, !dbg !5724
  br i1 %tobool67, label %if.end74, label %land.lhs.true68, !dbg !5726

land.lhs.true68:                                  ; preds = %if.then63
  %step69 = getelementptr inbounds %struct.iv, %struct.iv* %call66, i64 0, i32 2, !dbg !5727
  %17 = load %union.tree_node*, %union.tree_node** %step69, align 8, !dbg !5727
  %call70 = tail call i32 @integer_zerop(%union.tree_node* %17) #6, !dbg !5728
  %tobool71 = icmp eq i32 %call70, 0, !dbg !5728
  br i1 %tobool71, label %cleanup, label %if.end74, !dbg !5729

if.end74:                                         ; preds = %land.lhs.true68, %if.then63, %land.lhs.true59, %if.end55
  %call75 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5730
  %cmp76 = icmp eq i32 %call75, 16, !dbg !5730
  br i1 %cmp76, label %cond.true, label %cond.false, !dbg !5730

cond.true:                                        ; preds = %if.end74
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5642, metadata !DIExpression(DW_OP_deref)), !dbg !5657
  %call78 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !5730
  br label %cond.end, !dbg !5730

cond.false:                                       ; preds = %if.end74
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5642, metadata !DIExpression(DW_OP_deref)), !dbg !5657
  %call79 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !5730
  br label %cond.end, !dbg !5730

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ssa_use_operand_d* [ %call78, %cond.true ], [ %call79, %cond.false ], !dbg !5730
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %cond, metadata !5655, metadata !DIExpression()), !dbg !5657
  br label %for.cond, !dbg !5730

for.cond:                                         ; preds = %for.inc, %cond.end
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %cond, %cond.end ], [ %call96, %for.inc ], !dbg !5732
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !5655, metadata !DIExpression()), !dbg !5657
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5642, metadata !DIExpression(DW_OP_deref)), !dbg !5657
  %call80 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5733
  %tobool81 = icmp eq i8 %call80, 0, !dbg !5733
  br i1 %tobool81, label %for.body, label %cleanup.loopexit, !dbg !5730

for.body:                                         ; preds = %for.cond
  %call82 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !5735
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !5639, metadata !DIExpression()), !dbg !5657
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5737
  %bf.load84 = load i64, i64* %18, align 8, !dbg !5737
  %bf.cast861 = and i64 %bf.load84, 65535, !dbg !5739
  %cmp87 = icmp eq i64 %bf.cast861, 141, !dbg !5739
  br i1 %cmp87, label %if.end90, label %for.inc, !dbg !5740

if.end90:                                         ; preds = %for.body
  %call91 = call fastcc %struct.iv* @get_iv(%struct.ivopts_data* %data, %union.tree_node* %call82) #7, !dbg !5741
  call void @llvm.dbg.value(metadata %struct.iv* %call91, metadata !5638, metadata !DIExpression()), !dbg !5657
  %tobool92 = icmp eq %struct.iv* %call91, null, !dbg !5742
  br i1 %tobool92, label %for.inc, label %if.end94, !dbg !5744

if.end94:                                         ; preds = %if.end90
  %call95 = call fastcc %struct.iv_use* @find_interesting_uses_op(%struct.ivopts_data* %data, %union.tree_node* %call82) #7, !dbg !5745
  br label %for.inc, !dbg !5746

for.inc:                                          ; preds = %if.end90, %for.body, %if.end94
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5642, metadata !DIExpression(DW_OP_deref)), !dbg !5657
  %call96 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5733
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call96, metadata !5655, metadata !DIExpression()), !dbg !5657
  br label %for.cond, !dbg !5733, !llvm.loop !5747

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !5749

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true, %land.lhs.true68, %if.end36, %if.then45, %if.then52, %if.then
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5749
  ret void, !dbg !5749
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5750 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5752, metadata !DIExpression()), !dbg !5753
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !5754
  %cmp = icmp eq i32 %call, 2, !dbg !5755
  %conv1 = zext i1 %cmp to i8, !dbg !5754
  ret i8 %conv1, !dbg !5756
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5757 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5762
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5762
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5762

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5762
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5762
  br label %cond.end, !dbg !5762

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5762
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5762
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !5763
  %conv3 = zext i1 %cmp to i8, !dbg !5764
  ret i8 %conv3, !dbg !5765
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5766 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5771
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5771
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5771

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5771
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5771
  br label %cond.end, !dbg !5771

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5771
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !5771
  ret %struct.edge_def* %call2, !dbg !5772
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !5773 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5779, metadata !DIExpression()), !dbg !5780
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !5781
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5781

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !5781
  %0 = load i32, i32* %num, align 8, !dbg !5781
  br label %cond.end, !dbg !5781

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5781
  ret i32 %cond, !dbg !5781
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5782 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !5787
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5787

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5787
  br label %cond.end, !dbg !5787

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !5788
  ret %struct.VEC_edge_gc* %0, !dbg !5789
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5790 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5794, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5795, metadata !DIExpression()), !dbg !5796
  br label %land.end, !dbg !5797

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5797
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5797
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !5797
  ret %struct.edge_def* %0, !dbg !5797
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.iv_use* @find_interesting_uses_op(%struct.ivopts_data* %data, %union.tree_node* %op) unnamed_addr #5 !dbg !5798 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5802, metadata !DIExpression()), !dbg !5808
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !5803, metadata !DIExpression()), !dbg !5808
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5809
  %bf.load = load i64, i64* %0, align 8, !dbg !5809
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5811
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5811
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5812

if.end:                                           ; preds = %entry
  %call = tail call fastcc %struct.iv* @get_iv(%struct.ivopts_data* %data, %union.tree_node* %op) #7, !dbg !5813
  call void @llvm.dbg.value(metadata %struct.iv* %call, metadata !5804, metadata !DIExpression()), !dbg !5808
  %tobool = icmp eq %struct.iv* %call, null, !dbg !5814
  br i1 %tobool, label %cleanup, label %if.end2, !dbg !5816

if.end2:                                          ; preds = %if.end
  %have_use_for = getelementptr inbounds %struct.iv, %struct.iv* %call, i64 0, i32 5, !dbg !5817
  %1 = load i8, i8* %have_use_for, align 1, !dbg !5817
  %tobool3 = icmp eq i8 %1, 0, !dbg !5819
  br i1 %tobool3, label %if.end7, label %if.then4, !dbg !5820

if.then4:                                         ; preds = %if.end2
  %use_id = getelementptr inbounds %struct.iv, %struct.iv* %call, i64 0, i32 6, !dbg !5821
  %2 = load i32, i32* %use_id, align 4, !dbg !5821
  %call5 = tail call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %2) #7, !dbg !5823
  call void @llvm.dbg.value(metadata %struct.iv_use* %call5, metadata !5807, metadata !DIExpression()), !dbg !5808
  %type = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call5, i64 0, i32 1, !dbg !5824
  %3 = load i32, i32* %type, align 4, !dbg !5824
  %cmp6 = icmp eq i32 %3, 0, !dbg !5824
  br i1 %cmp6, label %cleanup, label %cond.true, !dbg !5824

cond.true:                                        ; preds = %if.then4
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 1170, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5824
  br label %cleanup, !dbg !5824

if.end7:                                          ; preds = %if.end2
  %step = getelementptr inbounds %struct.iv, %struct.iv* %call, i64 0, i32 2, !dbg !5825
  %4 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !5825
  %call8 = tail call i32 @integer_zerop(%union.tree_node* %4) #6, !dbg !5827
  %tobool9 = icmp eq i32 %call8, 0, !dbg !5827
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !5828

if.then10:                                        ; preds = %if.end7
  tail call fastcc void @record_invariant(%struct.ivopts_data* %data, %union.tree_node* %op, i8 zeroext 1) #7, !dbg !5829
  br label %cleanup, !dbg !5831

if.end11:                                         ; preds = %if.end7
  store i8 1, i8* %have_use_for, align 1, !dbg !5832
  %call13 = tail call i8* @xmalloc(i64 40) #6, !dbg !5833
  %5 = bitcast i8* %call13 to %struct.iv*, !dbg !5833
  call void @llvm.dbg.value(metadata %struct.iv* %5, metadata !5805, metadata !DIExpression()), !dbg !5808
  %6 = bitcast %struct.iv* %call to i8*, !dbg !5834
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call13, i8* nonnull align 8 %6, i64 40, i1 false), !dbg !5834
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5835
  %7 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5835
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %7, align 8, !dbg !5835
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %8, metadata !5806, metadata !DIExpression()), !dbg !5808
  %call14 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %8) #7, !dbg !5836
  %cmp15 = icmp eq i32 %call14, 16, !dbg !5836
  br i1 %cmp15, label %cond.end20, label %lor.lhs.false, !dbg !5836

lor.lhs.false:                                    ; preds = %if.end11
  %call16 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %8) #7, !dbg !5836
  %tobool17 = icmp eq i8 %call16, 0, !dbg !5836
  br i1 %tobool17, label %cond.true18, label %cond.end20, !dbg !5836

cond.true18:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 1186, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5836
  br label %cond.end20, !dbg !5836

cond.end20:                                       ; preds = %lor.lhs.false, %if.end11, %cond.true18
  %call22 = tail call fastcc %struct.iv_use* @record_use(%struct.ivopts_data* %data, %union.tree_node** null, %struct.iv* %5, %union.gimple_statement_d* %8, i32 0) #7, !dbg !5837
  call void @llvm.dbg.value(metadata %struct.iv_use* %call22, metadata !5807, metadata !DIExpression()), !dbg !5808
  %id = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call22, i64 0, i32 0, !dbg !5838
  %9 = load i32, i32* %id, align 8, !dbg !5838
  %use_id23 = getelementptr inbounds %struct.iv, %struct.iv* %call, i64 0, i32 6, !dbg !5839
  store i32 %9, i32* %use_id23, align 4, !dbg !5840
  br label %cleanup, !dbg !5841

cleanup:                                          ; preds = %if.end, %entry, %cond.true, %if.then4, %cond.end20, %if.then10
  %retval.0 = phi %struct.iv_use* [ null, %if.then10 ], [ %call22, %cond.end20 ], [ null, %entry ], [ null, %if.end ], [ %call5, %if.then4 ], [ %call5, %cond.true ], !dbg !5808
  ret %struct.iv_use* %retval.0, !dbg !5842
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_invariant(%struct.ivopts_data* %data, %union.tree_node* %op, i8 zeroext %nonlinear_use) unnamed_addr #5 !dbg !5843 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5847, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !5848, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.value(metadata i8 %nonlinear_use, metadata !5849, metadata !DIExpression()), !dbg !5852
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5853
  %bf.load = load i64, i64* %0, align 8, !dbg !5853
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5855
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5855
  br i1 %cmp, label %lor.lhs.false, label %cleanup.cont, !dbg !5856

lor.lhs.false:                                    ; preds = %entry
  %call = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %op) #6, !dbg !5857
  %tobool = icmp eq i8 %call, 0, !dbg !5857
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !5858

if.end:                                           ; preds = %lor.lhs.false
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5859
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5859
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !5859
  %call1 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %2) #7, !dbg !5860
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call1, metadata !5850, metadata !DIExpression()), !dbg !5852
  %tobool2 = icmp eq %struct.basic_block_def* %call1, null, !dbg !5861
  br i1 %tobool2, label %if.end6, label %land.lhs.true, !dbg !5863

land.lhs.true:                                    ; preds = %if.end
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !5864
  %3 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !5864
  %call3 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %3, %struct.basic_block_def* nonnull %call1) #6, !dbg !5865
  %tobool4 = icmp eq i8 %call3, 0, !dbg !5865
  br i1 %tobool4, label %if.end6, label %cleanup.cont, !dbg !5866

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %call7 = tail call fastcc %struct.version_info* @name_info(%struct.ivopts_data* %data, %union.tree_node* %op) #7, !dbg !5867
  call void @llvm.dbg.value(metadata %struct.version_info* %call7, metadata !5851, metadata !DIExpression()), !dbg !5852
  %name = getelementptr inbounds %struct.version_info, %struct.version_info* %call7, i64 0, i32 0, !dbg !5868
  store %union.tree_node* %op, %union.tree_node** %name, align 8, !dbg !5869
  %has_nonlin_use = getelementptr inbounds %struct.version_info, %struct.version_info* %call7, i64 0, i32 2, !dbg !5870
  %4 = load i8, i8* %has_nonlin_use, align 8, !dbg !5871
  %or2 = or i8 %4, %nonlinear_use, !dbg !5871
  store i8 %or2, i8* %has_nonlin_use, align 8, !dbg !5871
  %inv_id = getelementptr inbounds %struct.version_info, %struct.version_info* %call7, i64 0, i32 3, !dbg !5872
  %5 = load i32, i32* %inv_id, align 4, !dbg !5872
  %tobool11 = icmp eq i32 %5, 0, !dbg !5874
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !5875

if.then12:                                        ; preds = %if.end6
  %max_inv_id = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 9, !dbg !5876
  %6 = load i32, i32* %max_inv_id, align 8, !dbg !5877
  %inc = add i32 %6, 1, !dbg !5877
  store i32 %inc, i32* %max_inv_id, align 8, !dbg !5877
  store i32 %inc, i32* %inv_id, align 4, !dbg !5878
  br label %if.end14, !dbg !5879

if.end14:                                         ; preds = %if.end6, %if.then12
  %relevant = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 5, !dbg !5880
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %relevant, align 8, !dbg !5880
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5881
  %8 = bitcast %union.tree_node** %version to i32*, !dbg !5881
  %9 = load i32, i32* %8, align 8, !dbg !5881
  %call16 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %7, i32 %9) #6, !dbg !5882
  br label %cleanup.cont, !dbg !5883

cleanup.cont:                                     ; preds = %land.lhs.true, %lor.lhs.false, %entry, %if.end14
  ret void, !dbg !5883
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5884 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5886, metadata !DIExpression()), !dbg !5887
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !5888
  %cmp = icmp eq i32 %call, 6, !dbg !5889
  %conv1 = zext i1 %cmp to i8, !dbg !5888
  ret i8 %conv1, !dbg !5890
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.iv_use* @record_use(%struct.ivopts_data* %data, %union.tree_node** %use_p, %struct.iv* %iv, %union.gimple_statement_d* %stmt, i32 %use_type) unnamed_addr #5 !dbg !5891 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5895, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node** %use_p, metadata !5896, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %struct.iv* %iv, metadata !5897, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5898, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i32 %use_type, metadata !5899, metadata !DIExpression()), !dbg !5901
  %call = tail call i8* @xcalloc(i64 1, i64 64) #6, !dbg !5902
  %0 = bitcast i8* %call to %struct.iv_use*, !dbg !5902
  call void @llvm.dbg.value(metadata %struct.iv_use* %0, metadata !5900, metadata !DIExpression()), !dbg !5901
  %call1 = tail call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !5903
  %id = bitcast i8* %call to i32*, !dbg !5904
  store i32 %call1, i32* %id, align 8, !dbg !5905
  %type = getelementptr inbounds i8, i8* %call, i64 4, !dbg !5906
  %1 = bitcast i8* %type to i32*, !dbg !5906
  store i32 %use_type, i32* %1, align 4, !dbg !5907
  %iv2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5908
  %2 = bitcast i8* %iv2 to %struct.iv**, !dbg !5908
  store %struct.iv* %iv, %struct.iv** %2, align 8, !dbg !5909
  %stmt3 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !5910
  %3 = bitcast i8* %stmt3 to %union.gimple_statement_d**, !dbg !5910
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %3, align 8, !dbg !5911
  %op_p = getelementptr inbounds i8, i8* %call, i64 24, !dbg !5912
  %4 = bitcast i8* %op_p to %union.tree_node***, !dbg !5912
  store %union.tree_node** %use_p, %union.tree_node*** %4, align 8, !dbg !5913
  %call4 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5914
  %related_cands = getelementptr inbounds i8, i8* %call, i64 32, !dbg !5915
  %5 = bitcast i8* %related_cands to %struct.bitmap_head_def**, !dbg !5915
  store %struct.bitmap_head_def* %call4, %struct.bitmap_head_def** %5, align 8, !dbg !5916
  %ssa_name = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 3, !dbg !5917
  store %union.tree_node* null, %union.tree_node** %ssa_name, align 8, !dbg !5918
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5919
  %tobool = icmp eq %struct._IO_FILE* %6, null, !dbg !5919
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5921

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* @dump_flags, align 4, !dbg !5922
  %and = and i32 %7, 8, !dbg !5923
  %tobool5 = icmp eq i32 %and, 0, !dbg !5923
  br i1 %tobool5, label %if.end, label %if.then, !dbg !5924

if.then:                                          ; preds = %land.lhs.true
  tail call void @dump_use(%struct._IO_FILE* nonnull %6, %struct.iv_use* %0) #7, !dbg !5925
  br label %if.end, !dbg !5925

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %iv_uses = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 6, !dbg !5926
  %call6 = tail call fastcc %struct.iv_use** @VEC_iv_use_p_heap_safe_push(%struct.VEC_iv_use_p_heap** nonnull %iv_uses, %struct.iv_use* %0) #7, !dbg !5926
  ret %struct.iv_use* %0, !dbg !5927
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.iv_use** @VEC_iv_use_p_heap_safe_push(%struct.VEC_iv_use_p_heap** %vec_, %struct.iv_use* %obj_) unnamed_addr #0 !dbg !5928 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_use_p_heap** %vec_, metadata !5934, metadata !DIExpression()), !dbg !5936
  call void @llvm.dbg.value(metadata %struct.iv_use* %obj_, metadata !5935, metadata !DIExpression()), !dbg !5936
  %call = tail call fastcc i32 @VEC_iv_use_p_heap_reserve(%struct.VEC_iv_use_p_heap** %vec_, i32 1) #7, !dbg !5937
  %0 = load %struct.VEC_iv_use_p_heap*, %struct.VEC_iv_use_p_heap** %vec_, align 8, !dbg !5937
  %tobool = icmp eq %struct.VEC_iv_use_p_heap* %0, null, !dbg !5937
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5937

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_iv_use_p_heap, %struct.VEC_iv_use_p_heap* %0, i64 0, i32 0, !dbg !5937
  br label %cond.end, !dbg !5937

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_iv_use_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5937
  %call1 = tail call fastcc %struct.iv_use** @VEC_iv_use_p_base_quick_push(%struct.VEC_iv_use_p_base* %cond, %struct.iv_use* %obj_) #7, !dbg !5937
  ret %struct.iv_use** %call1, !dbg !5937
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_iv_use_p_heap_reserve(%struct.VEC_iv_use_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5938 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_use_p_heap** %vec_, metadata !5942, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.value(metadata i32 1, metadata !5943, metadata !DIExpression()), !dbg !5945
  %0 = load %struct.VEC_iv_use_p_heap*, %struct.VEC_iv_use_p_heap** %vec_, align 8, !dbg !5946
  %tobool = icmp eq %struct.VEC_iv_use_p_heap* %0, null, !dbg !5946
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5946

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_iv_use_p_heap, %struct.VEC_iv_use_p_heap* %0, i64 0, i32 0, !dbg !5946
  br label %cond.end, !dbg !5946

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_iv_use_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5946
  %call = tail call fastcc i32 @VEC_iv_use_p_base_space(%struct.VEC_iv_use_p_base* %cond, i32 1) #7, !dbg !5946
  %tobool1 = icmp eq i32 %call, 0, !dbg !5946
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5946
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5944, metadata !DIExpression()), !dbg !5945
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5946

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_iv_use_p_heap** %vec_ to i8**, !dbg !5947
  %2 = load i8*, i8** %1, align 8, !dbg !5947
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !5947
  store i8* %call3, i8** %1, align 8, !dbg !5947
  br label %if.end, !dbg !5947

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5946
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.iv_use** @VEC_iv_use_p_base_quick_push(%struct.VEC_iv_use_p_base* %vec_, %struct.iv_use* %obj_) unnamed_addr #0 !dbg !5949 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_use_p_base* %vec_, metadata !5954, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata %struct.iv_use* %obj_, metadata !5955, metadata !DIExpression()), !dbg !5957
  %num1 = getelementptr inbounds %struct.VEC_iv_use_p_base, %struct.VEC_iv_use_p_base* %vec_, i64 0, i32 0, !dbg !5958
  %0 = load i32, i32* %num1, align 8, !dbg !5958
  %inc = add i32 %0, 1, !dbg !5958
  store i32 %inc, i32* %num1, align 8, !dbg !5958
  %idxprom = zext i32 %0 to i64, !dbg !5958
  %arrayidx = getelementptr inbounds %struct.VEC_iv_use_p_base, %struct.VEC_iv_use_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5958
  call void @llvm.dbg.value(metadata %struct.iv_use** %arrayidx, metadata !5956, metadata !DIExpression()), !dbg !5957
  store %struct.iv_use* %obj_, %struct.iv_use** %arrayidx, align 8, !dbg !5958
  ret %struct.iv_use** %arrayidx, !dbg !5958
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_iv_use_p_base_space(%struct.VEC_iv_use_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5959 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_use_p_base* %vec_, metadata !5963, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.value(metadata i32 1, metadata !5964, metadata !DIExpression()), !dbg !5965
  %tobool = icmp eq %struct.VEC_iv_use_p_base* %vec_, null, !dbg !5966
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5966

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_iv_use_p_base, %struct.VEC_iv_use_p_base* %vec_, i64 0, i32 1, !dbg !5966
  %0 = load i32, i32* %alloc, align 4, !dbg !5966
  %num = getelementptr inbounds %struct.VEC_iv_use_p_base, %struct.VEC_iv_use_p_base* %vec_, i64 0, i32 0, !dbg !5966
  %1 = load i32, i32* %num, align 8, !dbg !5966
  %cmp1 = icmp ne i32 %0, %1, !dbg !5966
  %phitmp = zext i1 %cmp1 to i32, !dbg !5966
  br label %cond.end, !dbg !5966

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5966

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5966
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @find_invariants_stmt(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5967 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5969, metadata !DIExpression()), !dbg !5974
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5970, metadata !DIExpression()), !dbg !5974
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !5975
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5975
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5976
  %cmp = icmp eq i32 %call, 16, !dbg !5976
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5976

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5971, metadata !DIExpression(DW_OP_deref)), !dbg !5974
  %call1 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !5976
  br label %cond.end, !dbg !5976

cond.false:                                       ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5971, metadata !DIExpression(DW_OP_deref)), !dbg !5974
  %call2 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !5976
  br label %cond.end, !dbg !5976

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ssa_use_operand_d* [ %call1, %cond.true ], [ %call2, %cond.false ], !dbg !5976
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %cond, metadata !5972, metadata !DIExpression()), !dbg !5974
  br label %for.cond, !dbg !5976

for.cond:                                         ; preds = %for.body, %cond.end
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %cond, %cond.end ], [ %call5, %for.body ], !dbg !5978
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !5972, metadata !DIExpression()), !dbg !5974
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5971, metadata !DIExpression(DW_OP_deref)), !dbg !5974
  %call3 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5979
  %tobool = icmp eq i8 %call3, 0, !dbg !5979
  br i1 %tobool, label %for.body, label %for.end, !dbg !5976

for.body:                                         ; preds = %for.cond
  %call4 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !5981
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5973, metadata !DIExpression()), !dbg !5974
  call fastcc void @record_invariant(%struct.ivopts_data* %data, %union.tree_node* %call4, i8 zeroext 0) #7, !dbg !5983
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5971, metadata !DIExpression(DW_OP_deref)), !dbg !5974
  %call5 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5979
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call5, metadata !5972, metadata !DIExpression()), !dbg !5974
  br label %for.cond, !dbg !5979, !llvm.loop !5984

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5986
  ret void, !dbg !5986
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_interesting_uses_cond(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5987 {
entry:
  %var_p = alloca %union.tree_node**, align 8
  %bound_p = alloca %union.tree_node**, align 8
  %var_iv = alloca %struct.iv*, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !5989, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5990, metadata !DIExpression()), !dbg !5995
  %0 = bitcast %union.tree_node*** %var_p to i8*, !dbg !5996
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5996
  %1 = bitcast %union.tree_node*** %bound_p to i8*, !dbg !5996
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5996
  %2 = bitcast %struct.iv** %var_iv to i8*, !dbg !5997
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5997
  call void @llvm.dbg.value(metadata %union.tree_node*** %var_p, metadata !5991, metadata !DIExpression(DW_OP_deref)), !dbg !5995
  call void @llvm.dbg.value(metadata %union.tree_node*** %bound_p, metadata !5992, metadata !DIExpression(DW_OP_deref)), !dbg !5995
  call void @llvm.dbg.value(metadata %struct.iv** %var_iv, metadata !5993, metadata !DIExpression(DW_OP_deref)), !dbg !5995
  %call = call fastcc zeroext i8 @extract_cond_operands(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt, %union.tree_node*** nonnull %var_p, %union.tree_node*** nonnull %bound_p, %struct.iv** nonnull %var_iv, %struct.iv** null) #7, !dbg !5998
  %tobool = icmp eq i8 %call, 0, !dbg !5998
  br i1 %tobool, label %if.then, label %if.end, !dbg !6000

if.then:                                          ; preds = %entry
  %3 = load %union.tree_node**, %union.tree_node*** %var_p, align 8, !dbg !6001
  call void @llvm.dbg.value(metadata %union.tree_node** %3, metadata !5991, metadata !DIExpression()), !dbg !5995
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !6003
  %call1 = call fastcc %struct.iv_use* @find_interesting_uses_op(%struct.ivopts_data* %data, %union.tree_node* %4) #7, !dbg !6004
  %5 = load %union.tree_node**, %union.tree_node*** %bound_p, align 8, !dbg !6005
  call void @llvm.dbg.value(metadata %union.tree_node** %5, metadata !5992, metadata !DIExpression()), !dbg !5995
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !6006
  %call2 = call fastcc %struct.iv_use* @find_interesting_uses_op(%struct.ivopts_data* %data, %union.tree_node* %6) #7, !dbg !6007
  br label %cleanup, !dbg !6008

if.end:                                           ; preds = %entry
  %call3 = call i8* @xmalloc(i64 40) #6, !dbg !6009
  %7 = bitcast i8* %call3 to %struct.iv*, !dbg !6009
  call void @llvm.dbg.value(metadata %struct.iv* %7, metadata !5994, metadata !DIExpression()), !dbg !5995
  %8 = bitcast %struct.iv** %var_iv to i8**, !dbg !6010
  %9 = load i8*, i8** %8, align 8, !dbg !6010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call3, i8* align 8 %9, i64 40, i1 false), !dbg !6011
  %call4 = call fastcc %struct.iv_use* @record_use(%struct.ivopts_data* %data, %union.tree_node** null, %struct.iv* %7, %union.gimple_statement_d* %stmt, i32 2) #7, !dbg !6012
  br label %cleanup, !dbg !6013

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6013
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6013
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6013
  ret void, !dbg !6013
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_assign_lhs_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6014 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6018, metadata !DIExpression()), !dbg !6019
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !6020
  ret %union.tree_node** %call, !dbg !6021
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6022 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6024, metadata !DIExpression()), !dbg !6025
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !6026
  ret %union.tree_node** %call, !dbg !6027
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6028 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6032, metadata !DIExpression()), !dbg !6034
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !6035
  call void @llvm.dbg.value(metadata i32 %call, metadata !6033, metadata !DIExpression()), !dbg !6034
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !6036
  %cmp = icmp eq i32 %call1, 3, !dbg !6038
  br i1 %cmp, label %if.then, label %if.end, !dbg !6039

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !6040
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6040
  %bf.load = load i64, i64* %0, align 8, !dbg !6040
  %1 = trunc i64 %bf.load to i32, !dbg !6040
  %bf.cast = and i32 %1, 65535, !dbg !6040
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !6033, metadata !DIExpression()), !dbg !6034
  br label %if.end, !dbg !6041

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !6034
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !6033, metadata !DIExpression()), !dbg !6034
  ret i32 %code.0, !dbg !6042
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !6043 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6047, metadata !DIExpression()), !dbg !6048
  %idxprom = sext i32 %code to i64, !dbg !6049
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !6049
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6049
  %conv = zext i8 %0 to i32, !dbg !6050
  ret i32 %conv, !dbg !6051
}

declare dso_local zeroext i8 @is_gimple_val(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @find_interesting_uses_address(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt, %union.tree_node** %op_p) unnamed_addr #5 !dbg !6052 {
entry:
  %base = alloca %union.tree_node*, align 8
  %ifs_ivopts_data = alloca %struct.ifs_ivopts_data, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !6056, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6057, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.value(metadata %union.tree_node** %op_p, metadata !6058, metadata !DIExpression()), !dbg !6075
  %0 = bitcast %union.tree_node** %base to i8*, !dbg !6076
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6076
  %1 = bitcast %union.tree_node** %op_p to i64*, !dbg !6077
  %2 = load i64, i64* %1, align 8, !dbg !6077
  %3 = bitcast %union.tree_node** %base to i64*, !dbg !6078
  store i64 %2, i64* %3, align 8, !dbg !6078
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !6079
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* %4, i64 0) #6, !dbg !6080
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6060, metadata !DIExpression()), !dbg !6075
  %5 = bitcast %struct.ifs_ivopts_data* %ifs_ivopts_data to i8*, !dbg !6081
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !6081
  %call1 = tail call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6082
  %tobool = icmp eq i8 %call1, 0, !dbg !6082
  %6 = inttoptr i64 %2 to %union.tree_node*, !dbg !6084
  br i1 %tobool, label %if.end, label %fail, !dbg !6084

if.end:                                           ; preds = %entry
  %7 = inttoptr i64 %2 to i64*, !dbg !6084
  %8 = bitcast %union.tree_node** %base to i64**, !dbg !6085
  %bf.load = load i64, i64* %7, align 8, !dbg !6085
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6087
  %cmp = icmp eq i64 %bf.cast2, 42, !dbg !6087
  br i1 %cmp, label %fail, label %if.end4, !dbg !6088

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !6059, metadata !DIExpression()), !dbg !6075
  %call5 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %6) #6, !dbg !6089
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !6059, metadata !DIExpression()), !dbg !6075
  store %union.tree_node* %call5, %union.tree_node** %base, align 8, !dbg !6090
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6091
  %bf.load7 = load i64, i64* %.cast, align 8, !dbg !6091
  %bf.cast93 = and i64 %bf.load7, 65535, !dbg !6092
  %cmp10 = icmp eq i64 %bf.cast93, 152, !dbg !6092
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !6093

if.then11:                                        ; preds = %if.end4
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6093
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6094
  %10 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !6094
  %call13 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %10) #6, !dbg !6095
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !6063, metadata !DIExpression()), !dbg !6096
  %arrayidx = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 2, !dbg !6097
  %11 = bitcast %struct.tree_common* %arrayidx to %union.tree_node**, !dbg !6097
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !6097
  %tobool14 = icmp eq %union.tree_node* %12, null, !dbg !6097
  br i1 %tobool14, label %if.then11.if.end36_crit_edge, label %land.lhs.true, !dbg !6099

if.then11.if.end36_crit_edge:                     ; preds = %if.then11
  br label %if.end36, !dbg !6099

land.lhs.true:                                    ; preds = %if.then11
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6099
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6100
  %bf.load19 = load i64, i64* %13, align 8, !dbg !6100
  %bf.cast2110 = and i64 %bf.load19, 65535, !dbg !6101
  %cmp22 = icmp eq i64 %bf.cast2110, 141, !dbg !6101
  br i1 %cmp22, label %if.then23, label %if.end36, !dbg !6102

if.then23:                                        ; preds = %land.lhs.true
  %call27 = tail call fastcc %struct.iv* @get_iv(%struct.ivopts_data* %data, %union.tree_node* nonnull %12) #7, !dbg !6103
  call void @llvm.dbg.value(metadata %struct.iv* %call27, metadata !6061, metadata !DIExpression()), !dbg !6075
  %tobool28 = icmp eq %struct.iv* %call27, null, !dbg !6105
  br i1 %tobool28, label %cleanup, label %if.end30, !dbg !6107

if.end30:                                         ; preds = %if.then23
  %15 = bitcast %struct.iv* %call27 to i64*, !dbg !6108
  %16 = load i64, i64* %15, align 8, !dbg !6108
  %17 = bitcast %union.tree_node** %14 to i64*, !dbg !6109
  store i64 %16, i64* %17, align 8, !dbg !6109
  %step35 = getelementptr inbounds %struct.iv, %struct.iv* %call27, i64 0, i32 2, !dbg !6110
  %18 = load %union.tree_node*, %union.tree_node** %step35, align 8, !dbg !6110
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !6060, metadata !DIExpression()), !dbg !6075
  br label %if.end36, !dbg !6111

if.end36:                                         ; preds = %if.then11.if.end36_crit_edge, %if.end30, %land.lhs.true
  %step.0 = phi %union.tree_node* [ %18, %if.end30 ], [ %call, %land.lhs.true ], [ %call, %if.then11.if.end36_crit_edge ], !dbg !6075
  call void @llvm.dbg.value(metadata %union.tree_node* %step.0, metadata !6060, metadata !DIExpression()), !dbg !6075
  %arrayidx39 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6112
  %19 = bitcast i40* %arrayidx39 to %union.tree_node**, !dbg !6112
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !6112
  %tobool40 = icmp eq %union.tree_node* %20, null, !dbg !6112
  br i1 %tobool40, label %if.end77, label %land.lhs.true41, !dbg !6114

land.lhs.true41:                                  ; preds = %if.end36
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6114
  %bf.load46 = load i64, i64* %21, align 8, !dbg !6115
  %bf.cast489 = and i64 %bf.load46, 65535, !dbg !6116
  %cmp49 = icmp eq i64 %bf.cast489, 141, !dbg !6116
  br i1 %cmp49, label %if.then50, label %if.end77, !dbg !6117

if.then50:                                        ; preds = %land.lhs.true41
  %call54 = tail call fastcc %struct.iv* @get_iv(%struct.ivopts_data* %data, %union.tree_node* nonnull %20) #7, !dbg !6118
  call void @llvm.dbg.value(metadata %struct.iv* %call54, metadata !6061, metadata !DIExpression()), !dbg !6075
  %tobool55 = icmp eq %struct.iv* %call54, null, !dbg !6120
  br i1 %tobool55, label %cleanup, label %if.end57, !dbg !6122

if.end57:                                         ; preds = %if.then50
  %22 = bitcast %struct.iv* %call54 to i64*, !dbg !6123
  %23 = load i64, i64* %22, align 8, !dbg !6123
  %24 = bitcast i40* %arrayidx39 to i64*, !dbg !6124
  store i64 %23, i64* %24, align 8, !dbg !6124
  %step62 = getelementptr inbounds %struct.iv, %struct.iv* %call54, i64 0, i32 2, !dbg !6125
  %25 = load %union.tree_node*, %union.tree_node** %step62, align 8, !dbg !6125
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !6066, metadata !DIExpression()), !dbg !6096
  %tobool63 = icmp eq %union.tree_node* %25, null, !dbg !6126
  br i1 %tobool63, label %if.end77, label %if.then64, !dbg !6128

if.then64:                                        ; preds = %if.end57
  %arrayidx67 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6129
  %26 = bitcast i32* %arrayidx67 to %union.tree_node**, !dbg !6129
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !6129
  %tobool68 = icmp eq %union.tree_node* %27, null, !dbg !6129
  br i1 %tobool68, label %if.end74, label %if.then69, !dbg !6132

if.then69:                                        ; preds = %if.then64
  %call73 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %call13, %union.tree_node* nonnull %27, %union.tree_node* nonnull %25) #6, !dbg !6133
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !6066, metadata !DIExpression()), !dbg !6096
  br label %if.end74, !dbg !6134

if.end74:                                         ; preds = %if.then64, %if.then69
  %astep.0 = phi %union.tree_node* [ %call73, %if.then69 ], [ %25, %if.then64 ], !dbg !6135
  call void @llvm.dbg.value(metadata %union.tree_node* %astep.0, metadata !6066, metadata !DIExpression()), !dbg !6096
  %call75 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %call13, %union.tree_node* %step.0, %union.tree_node* %astep.0) #6, !dbg !6136
  call void @llvm.dbg.value(metadata %union.tree_node* %call75, metadata !6060, metadata !DIExpression()), !dbg !6075
  br label %if.end77, !dbg !6137

if.end77:                                         ; preds = %if.end57, %if.end36, %if.end74, %land.lhs.true41
  %step.2 = phi %union.tree_node* [ %step.0, %land.lhs.true41 ], [ %step.0, %if.end36 ], [ %call75, %if.end74 ], [ %step.0, %if.end57 ], !dbg !6096
  call void @llvm.dbg.value(metadata %union.tree_node* %step.2, metadata !6060, metadata !DIExpression()), !dbg !6075
  %call78 = tail call i32 @integer_zerop(%union.tree_node* %step.2) #6, !dbg !6138
  %tobool79 = icmp eq i32 %call78, 0, !dbg !6138
  br i1 %tobool79, label %if.end81, label %cleanup, !dbg !6140

if.end81:                                         ; preds = %if.end77
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !6059, metadata !DIExpression()), !dbg !6075
  %call82 = tail call %union.tree_node* @tree_mem_ref_addr(%union.tree_node* %call13, %union.tree_node* %call5) #6, !dbg !6141
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !6059, metadata !DIExpression()), !dbg !6075
  store %union.tree_node* %call82, %union.tree_node** %base, align 8, !dbg !6142
  br label %cleanup, !dbg !6143

cleanup:                                          ; preds = %if.then23, %if.then50, %if.end77, %if.end81
  %step.3 = phi %union.tree_node* [ %step.2, %if.end81 ], [ %call, %if.then23 ], [ %step.0, %if.then50 ], [ %step.2, %if.end77 ], !dbg !6075
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end81 ], [ false, %if.then23 ], [ false, %if.then50 ], [ false, %if.end77 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %step.3, metadata !6060, metadata !DIExpression()), !dbg !6075
  br i1 %cleanup.dest.slot.0, label %if.end143, label %fail

if.else:                                          ; preds = %if.end4
  %ivopts_data = getelementptr inbounds %struct.ifs_ivopts_data, %struct.ifs_ivopts_data* %ifs_ivopts_data, i64 0, i32 0, !dbg !6144
  store %struct.ivopts_data* %data, %struct.ivopts_data** %ivopts_data, align 8, !dbg !6145
  %stmt84 = getelementptr inbounds %struct.ifs_ivopts_data, %struct.ifs_ivopts_data* %ifs_ivopts_data, i64 0, i32 1, !dbg !6146
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %stmt84, align 8, !dbg !6147
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !6148
  %call85 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %28, i64 0) #6, !dbg !6149
  %step86 = getelementptr inbounds %struct.ifs_ivopts_data, %struct.ifs_ivopts_data* %ifs_ivopts_data, i64 0, i32 2, !dbg !6150
  store %union.tree_node* %call85, %union.tree_node** %step86, align 8, !dbg !6151
  call void @llvm.dbg.value(metadata %union.tree_node** %base, metadata !6059, metadata !DIExpression(DW_OP_deref)), !dbg !6075
  %call87 = call zeroext i8 @for_each_index(%union.tree_node** nonnull %base, i8 (%union.tree_node*, %union.tree_node**, i8*)* nonnull @idx_find_step, i8* nonnull %5) #6, !dbg !6152
  %tobool88 = icmp eq i8 %call87, 0, !dbg !6152
  br i1 %tobool88, label %fail, label %lor.lhs.false, !dbg !6154

lor.lhs.false:                                    ; preds = %if.else
  %29 = load %union.tree_node*, %union.tree_node** %step86, align 8, !dbg !6155
  %call90 = call i32 @integer_zerop(%union.tree_node* %29) #6, !dbg !6156
  %tobool91 = icmp eq i32 %call90, 0, !dbg !6156
  br i1 %tobool91, label %if.end93, label %fail, !dbg !6157

if.end93:                                         ; preds = %lor.lhs.false
  %30 = load %union.tree_node*, %union.tree_node** %step86, align 8, !dbg !6158
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !6060, metadata !DIExpression()), !dbg !6075
  %31 = load i64*, i64** %8, align 8, !dbg !6159
  %bf.load96 = load i64, i64* %31, align 8, !dbg !6159
  %bf.cast984 = and i64 %bf.load96, 65535, !dbg !6159
  %cmp99 = icmp eq i64 %bf.cast984, 48, !dbg !6159
  br i1 %cmp99, label %cond.true, label %cond.end, !dbg !6159

cond.true:                                        ; preds = %if.end93
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 1669, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !6159
  %.pre = load i64*, i64** %8, align 8, !dbg !6160
  %bf.load101.pre = load i64, i64* %.pre, align 8, !dbg !6160
  br label %cond.end, !dbg !6159

cond.end:                                         ; preds = %if.end93, %cond.true
  %.in = phi i64* [ %31, %if.end93 ], [ %.pre, %cond.true ]
  %bf.load101 = phi i64 [ %bf.load96, %if.end93 ], [ %bf.load101.pre, %cond.true ], !dbg !6160
  %32 = bitcast i64* %.in to %union.tree_node*, !dbg !6159
  %bf.cast1035 = and i64 %bf.load101, 65535, !dbg !6160
  %cmp104 = icmp eq i64 %bf.cast1035, 49, !dbg !6160
  br i1 %cmp104, label %cond.true105, label %cond.end107, !dbg !6160

cond.true105:                                     ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 1670, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !6160
  %.pre13 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !6161
  br label %cond.end107, !dbg !6160

cond.end107:                                      ; preds = %cond.end, %cond.true105
  %33 = phi %union.tree_node* [ %32, %cond.end ], [ %.pre13, %cond.true105 ], !dbg !6161
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !6059, metadata !DIExpression()), !dbg !6075
  %call109 = call fastcc zeroext i8 @may_be_nonaddressable_p(%union.tree_node* %33) #7, !dbg !6163
  %tobool110 = icmp eq i8 %call109, 0, !dbg !6163
  br i1 %tobool110, label %if.end112, label %fail, !dbg !6164

if.end112:                                        ; preds = %cond.end107
  %34 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !6165
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !6059, metadata !DIExpression()), !dbg !6075
  %call113 = call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %34) #6, !dbg !6165
  call void @llvm.dbg.value(metadata %union.tree_node* %call113, metadata !6059, metadata !DIExpression()), !dbg !6075
  store %union.tree_node* %call113, %union.tree_node** %base, align 8, !dbg !6166
  %.cast6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6167
  %bf.load115 = load i64, i64* %.cast6, align 8, !dbg !6167
  %bf.cast1177 = and i64 %bf.load115, 65535, !dbg !6168
  %cmp118 = icmp eq i64 %bf.cast1177, 121, !dbg !6168
  br i1 %cmp118, label %if.then119, label %if.end143, !dbg !6169

if.then119:                                       ; preds = %if.end112
  call void @llvm.dbg.value(metadata %union.tree_node* %call113, metadata !6067, metadata !DIExpression(DW_OP_plus_uconst, 40, DW_OP_stack_value)), !dbg !6170
  br label %while.cond, !dbg !6171

while.cond:                                       ; preds = %while.body, %if.then119
  %call113.pn = phi %union.tree_node* [ %call113, %if.then119 ], [ %36, %while.body ]
  %ref.0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call113.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6170
  call void @llvm.dbg.value(metadata %union.tree_node** %ref.0, metadata !6067, metadata !DIExpression()), !dbg !6170
  %35 = load %union.tree_node*, %union.tree_node** %ref.0, align 8, !dbg !6172
  %call123 = call fastcc zeroext i8 @handled_component_p(%union.tree_node* %35) #7, !dbg !6173
  %tobool124 = icmp eq i8 %call123, 0, !dbg !6171
  %36 = load %union.tree_node*, %union.tree_node** %ref.0, align 8, !dbg !6170
  br i1 %tobool124, label %while.end, label %while.body, !dbg !6171

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %union.tree_node* %36, metadata !6067, metadata !DIExpression(DW_OP_plus_uconst, 40, DW_OP_stack_value)), !dbg !6170
  br label %while.cond, !dbg !6171, !llvm.loop !6174

while.end:                                        ; preds = %while.cond
  %ref.0.lcssa = phi %union.tree_node** [ %ref.0, %while.cond ], !dbg !6170
  %.lcssa = phi %union.tree_node* [ %36, %while.cond ], !dbg !6170
  call void @llvm.dbg.value(metadata %union.tree_node** %ref.0.lcssa, metadata !6067, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata %union.tree_node** %ref.0.lcssa, metadata !6067, metadata !DIExpression()), !dbg !6170
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6176
  %bf.load129 = load i64, i64* %37, align 8, !dbg !6176
  %bf.cast1318 = and i64 %bf.load129, 65535, !dbg !6177
  %cmp132 = icmp eq i64 %bf.cast1318, 47, !dbg !6177
  br i1 %cmp132, label %if.then133, label %if.end143, !dbg !6178

if.then133:                                       ; preds = %while.end
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6179
  %39 = load %union.tree_node*, %union.tree_node** %38, align 8, !dbg !6179
  %call137 = call %union.tree_node* @gimple_fold_indirect_ref(%union.tree_node* %39) #6, !dbg !6180
  call void @llvm.dbg.value(metadata %union.tree_node* %call137, metadata !6071, metadata !DIExpression()), !dbg !6181
  %tobool138 = icmp eq %union.tree_node* %call137, null, !dbg !6182
  br i1 %tobool138, label %if.end143, label %if.then139, !dbg !6184

if.then139:                                       ; preds = %if.then133
  store %union.tree_node* %call137, %union.tree_node** %ref.0.lcssa, align 8, !dbg !6185
  br label %if.end143, !dbg !6186

if.end143:                                        ; preds = %if.then133, %if.end112, %if.then139, %while.end, %cleanup
  %step.4 = phi %union.tree_node* [ %step.3, %cleanup ], [ %30, %while.end ], [ %30, %if.then139 ], [ %30, %if.then133 ], [ %30, %if.end112 ], !dbg !6187
  call void @llvm.dbg.value(metadata %union.tree_node* %step.4, metadata !6060, metadata !DIExpression()), !dbg !6075
  %40 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !6188
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !6059, metadata !DIExpression()), !dbg !6075
  %call144 = call fastcc %struct.iv* @alloc_iv(%union.tree_node* %40, %union.tree_node* %step.4) #7, !dbg !6189
  call void @llvm.dbg.value(metadata %struct.iv* %call144, metadata !6061, metadata !DIExpression()), !dbg !6075
  %call145 = call fastcc %struct.iv_use* @record_use(%struct.ivopts_data* %data, %union.tree_node** %op_p, %struct.iv* %call144, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !6190
  br label %cleanup147, !dbg !6191

fail:                                             ; preds = %cond.end107, %lor.lhs.false, %if.else, %entry, %cleanup, %if.end
  call void @llvm.dbg.label(metadata !6074), !dbg !6192
  %41 = bitcast %struct.ivopts_data* %data to i8*, !dbg !6193
  %call146 = call zeroext i8 @for_each_index(%union.tree_node** %op_p, i8 (%union.tree_node*, %union.tree_node**, i8*)* nonnull @idx_record_use, i8* %41) #6, !dbg !6194
  br label %cleanup147, !dbg !6195

cleanup147:                                       ; preds = %fail, %if.end143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !6195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6195
  ret void, !dbg !6195
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !6196 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6201, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !6202, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.value(metadata i32 1, metadata !6203, metadata !DIExpression()), !dbg !6206
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #7, !dbg !6207
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6204, metadata !DIExpression()), !dbg !6206
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6208
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6209
  store i8 0, i8* %done, align 8, !dbg !6210
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !6211
  %tobool = icmp eq i8 %call1, 0, !dbg !6211
  call void @llvm.dbg.value(metadata i1 %tobool, metadata !6205, metadata !DIExpression()), !dbg !6206
  br i1 %tobool, label %if.then, label %if.end, !dbg !6212

if.then:                                          ; preds = %entry
  store i8 1, i8* %done, align 8, !dbg !6213
  br label %cleanup, !dbg !6216

if.end:                                           ; preds = %entry
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6217
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6218
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !6219
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6220
  store i32 %call7, i32* %num_phi, align 4, !dbg !6221
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6222
  store i32 2, i32* %iter_type, align 4, !dbg !6223
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6224
  br label %cleanup, !dbg !6225

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !6206
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6226
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6227 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6229, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6230, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i32 1, metadata !6231, metadata !DIExpression()), !dbg !6232
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !6233
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6234
  store i32 2, i32* %iter_type, align 4, !dbg !6235
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6236
  ret %struct.ssa_use_operand_d* %call, !dbg !6237
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6238 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6244, metadata !DIExpression()), !dbg !6245
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6246
  %0 = load i8, i8* %done, align 8, !dbg !6246
  ret i8 %0, !dbg !6247
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6248 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6252, metadata !DIExpression()), !dbg !6254
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6255
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !6255
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !6257
  br i1 %tobool, label %if.end, label %if.then, !dbg !6258

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !6259
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !6253, metadata !DIExpression()), !dbg !6254
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !6261
  %2 = load i64, i64* %1, align 8, !dbg !6261
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !6262
  store i64 %2, i64* %3, align 8, !dbg !6262
  br label %cleanup, !dbg !6263

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6264
  %4 = load i32, i32* %phi_i, align 8, !dbg !6264
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6266
  %5 = load i32, i32* %num_phi, align 4, !dbg !6266
  %cmp = icmp slt i32 %4, %5, !dbg !6267
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !6268

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6269
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6269
  %inc = add nsw i32 %4, 1, !dbg !6269
  store i32 %inc, i32* %phi_i, align 8, !dbg !6269
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #7, !dbg !6269
  br label %cleanup, !dbg !6271

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6272
  store i8 1, i8* %done, align 8, !dbg !6273
  br label %cleanup, !dbg !6274

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !6254
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6275
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @extract_cond_operands(%struct.ivopts_data* %data, %union.gimple_statement_d* %stmt, %union.tree_node*** %control_var, %union.tree_node*** %bound, %struct.iv** %iv_var, %struct.iv** %iv_bound) unnamed_addr #5 !dbg !2276 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !2282, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2283, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %union.tree_node*** %control_var, metadata !2284, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %union.tree_node*** %bound, metadata !2285, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %struct.iv** %iv_var, metadata !2286, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %struct.iv** %iv_bound, metadata !2287, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %union.tree_node** @extract_cond_operands.zero, metadata !2288, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %union.tree_node** @extract_cond_operands.zero, metadata !2289, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %struct.iv* @extract_cond_operands.const_iv, metadata !2291, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %struct.iv* @extract_cond_operands.const_iv, metadata !2292, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata i8 0, metadata !2294, metadata !DIExpression()), !dbg !6276
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !6277
  %cmp = icmp eq i32 %call, 1, !dbg !6279
  br i1 %cmp, label %if.then, label %if.else, !dbg !6280

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_cond_lhs_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !6281
  call void @llvm.dbg.value(metadata %union.tree_node** %call1, metadata !2288, metadata !DIExpression()), !dbg !6276
  %call2 = tail call fastcc %union.tree_node** @gimple_cond_rhs_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !6283
  call void @llvm.dbg.value(metadata %union.tree_node** %call2, metadata !2289, metadata !DIExpression()), !dbg !6276
  br label %if.end, !dbg !6284

if.else:                                          ; preds = %entry
  %call3 = tail call fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !6285
  call void @llvm.dbg.value(metadata %union.tree_node** %call3, metadata !2288, metadata !DIExpression()), !dbg !6276
  %call4 = tail call fastcc %union.tree_node** @gimple_assign_rhs2_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !6287
  call void @llvm.dbg.value(metadata %union.tree_node** %call4, metadata !2289, metadata !DIExpression()), !dbg !6276
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %op0.0 = phi %union.tree_node** [ %call1, %if.then ], [ %call3, %if.else ], !dbg !6288
  %op1.0 = phi %union.tree_node** [ %call2, %if.then ], [ %call4, %if.else ], !dbg !6288
  call void @llvm.dbg.value(metadata %union.tree_node** %op1.0, metadata !2289, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %union.tree_node** %op0.0, metadata !2288, metadata !DIExpression()), !dbg !6276
  %0 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !6289
  store i64 %0, i64* bitcast (%union.tree_node** @extract_cond_operands.zero to i64*), align 8, !dbg !6290
  store i64 %0, i64* bitcast (%union.tree_node** getelementptr inbounds (%struct.iv, %struct.iv* @extract_cond_operands.const_iv, i64 0, i32 2) to i64*), align 8, !dbg !6291
  %1 = bitcast %union.tree_node** %op0.0 to i64**, !dbg !6292
  %2 = load i64*, i64** %1, align 8, !dbg !6292
  %bf.load = load i64, i64* %2, align 8, !dbg !6292
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !6294
  %cmp5 = icmp eq i64 %bf.cast4, 141, !dbg !6294
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !6295

if.then6:                                         ; preds = %if.end
  %3 = bitcast i64* %2 to %union.tree_node*, !dbg !6295
  %call7 = tail call fastcc %struct.iv* @get_iv(%struct.ivopts_data* %data, %union.tree_node* %3) #7, !dbg !6296
  call void @llvm.dbg.value(metadata %struct.iv* %call7, metadata !2291, metadata !DIExpression()), !dbg !6276
  br label %if.end8, !dbg !6297

if.end8:                                          ; preds = %if.then6, %if.end
  %iv0.0 = phi %struct.iv* [ %call7, %if.then6 ], [ @extract_cond_operands.const_iv, %if.end ], !dbg !6276
  call void @llvm.dbg.value(metadata %struct.iv* %iv0.0, metadata !2291, metadata !DIExpression()), !dbg !6276
  %4 = bitcast %union.tree_node** %op1.0 to i64**, !dbg !6298
  %5 = load i64*, i64** %4, align 8, !dbg !6298
  %bf.load10 = load i64, i64* %5, align 8, !dbg !6298
  %bf.cast125 = and i64 %bf.load10, 65535, !dbg !6300
  %cmp13 = icmp eq i64 %bf.cast125, 141, !dbg !6300
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !6301

if.then14:                                        ; preds = %if.end8
  %6 = bitcast i64* %5 to %union.tree_node*, !dbg !6301
  %call15 = tail call fastcc %struct.iv* @get_iv(%struct.ivopts_data* %data, %union.tree_node* %6) #7, !dbg !6302
  call void @llvm.dbg.value(metadata %struct.iv* %call15, metadata !2292, metadata !DIExpression()), !dbg !6276
  br label %if.end16, !dbg !6303

if.end16:                                         ; preds = %if.then14, %if.end8
  %iv1.0 = phi %struct.iv* [ %call15, %if.then14 ], [ @extract_cond_operands.const_iv, %if.end8 ], !dbg !6276
  call void @llvm.dbg.value(metadata %struct.iv* %iv1.0, metadata !2292, metadata !DIExpression()), !dbg !6276
  %tobool = icmp ne %struct.iv* %iv0.0, null, !dbg !6304
  %tobool17 = icmp ne %struct.iv* %iv1.0, null, !dbg !6306
  %or.cond = and i1 %tobool, %tobool17, !dbg !6307
  br i1 %or.cond, label %if.end19, label %end, !dbg !6307

if.end19:                                         ; preds = %if.end16
  %step = getelementptr inbounds %struct.iv, %struct.iv* %iv0.0, i64 0, i32 2, !dbg !6308
  %7 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !6308
  %call20 = tail call i32 @integer_zerop(%union.tree_node* %7) #6, !dbg !6310
  %tobool21 = icmp ne i32 %call20, 0, !dbg !6310
  %spec.select = select i1 %tobool21, %union.tree_node** %op1.0, %union.tree_node** %op0.0, !dbg !6311
  %spec.select1 = select i1 %tobool21, %union.tree_node** %op0.0, %union.tree_node** %op1.0, !dbg !6311
  %spec.select2 = select i1 %tobool21, %struct.iv* %iv1.0, %struct.iv* %iv0.0, !dbg !6311
  %spec.select3 = select i1 %tobool21, %struct.iv* %iv0.0, %struct.iv* %iv1.0, !dbg !6311
  call void @llvm.dbg.value(metadata %struct.iv* %spec.select3, metadata !2292, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %struct.iv* %spec.select2, metadata !2291, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %union.tree_node** %spec.select1, metadata !2289, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %union.tree_node** %spec.select, metadata !2288, metadata !DIExpression()), !dbg !6276
  %step24 = getelementptr inbounds %struct.iv, %struct.iv* %spec.select2, i64 0, i32 2, !dbg !6312
  %8 = load %union.tree_node*, %union.tree_node** %step24, align 8, !dbg !6312
  %call25 = tail call i32 @integer_zerop(%union.tree_node* %8) #6, !dbg !6313
  %tobool26 = icmp eq i32 %call25, 0, !dbg !6313
  br i1 %tobool26, label %land.rhs, label %land.end, !dbg !6314

land.rhs:                                         ; preds = %if.end19
  %step27 = getelementptr inbounds %struct.iv, %struct.iv* %spec.select3, i64 0, i32 2, !dbg !6315
  %9 = load %union.tree_node*, %union.tree_node** %step27, align 8, !dbg !6315
  %call28 = tail call i32 @integer_zerop(%union.tree_node* %9) #6, !dbg !6316
  %tobool29 = icmp ne i32 %call28, 0, !dbg !6314
  %phitmp = zext i1 %tobool29 to i8
  br label %land.end

land.end:                                         ; preds = %if.end19, %land.rhs
  %10 = phi i8 [ 0, %if.end19 ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %10, metadata !2294, metadata !DIExpression()), !dbg !6276
  br label %end, !dbg !6317

end:                                              ; preds = %if.end16, %land.end
  %op0.2 = phi %union.tree_node** [ %spec.select, %land.end ], [ %op0.0, %if.end16 ], !dbg !6276
  %op1.2 = phi %union.tree_node** [ %spec.select1, %land.end ], [ %op1.0, %if.end16 ], !dbg !6276
  %iv0.2 = phi %struct.iv* [ %spec.select2, %land.end ], [ %iv0.0, %if.end16 ], !dbg !6276
  %iv1.2 = phi %struct.iv* [ %spec.select3, %land.end ], [ %iv1.0, %if.end16 ], !dbg !6276
  %ret.0 = phi i8 [ %10, %land.end ], [ 0, %if.end16 ], !dbg !6276
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !2294, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %struct.iv* %iv1.2, metadata !2292, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %struct.iv* %iv0.2, metadata !2291, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %union.tree_node** %op1.2, metadata !2289, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %union.tree_node** %op0.2, metadata !2288, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.label(metadata !2295), !dbg !6318
  %tobool30 = icmp eq %union.tree_node*** %control_var, null, !dbg !6319
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !6321

if.then31:                                        ; preds = %end
  store %union.tree_node** %op0.2, %union.tree_node*** %control_var, align 8, !dbg !6322
  br label %if.end32, !dbg !6323

if.end32:                                         ; preds = %end, %if.then31
  %tobool33 = icmp eq %struct.iv** %iv_var, null, !dbg !6324
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !6326

if.then34:                                        ; preds = %if.end32
  store %struct.iv* %iv0.2, %struct.iv** %iv_var, align 8, !dbg !6327
  br label %if.end35, !dbg !6328

if.end35:                                         ; preds = %if.end32, %if.then34
  %tobool36 = icmp eq %union.tree_node*** %bound, null, !dbg !6329
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !6331

if.then37:                                        ; preds = %if.end35
  store %union.tree_node** %op1.2, %union.tree_node*** %bound, align 8, !dbg !6332
  br label %if.end38, !dbg !6333

if.end38:                                         ; preds = %if.end35, %if.then37
  %tobool39 = icmp eq %struct.iv** %iv_bound, null, !dbg !6334
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !6336

if.then40:                                        ; preds = %if.end38
  store %struct.iv* %iv1.2, %struct.iv** %iv_bound, align 8, !dbg !6337
  br label %if.end41, !dbg !6338

if.end41:                                         ; preds = %if.end38, %if.then40
  ret i8 %ret.0, !dbg !6339
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_cond_lhs_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6340 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6342, metadata !DIExpression()), !dbg !6343
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !6344
  ret %union.tree_node** %call, !dbg !6345
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_cond_rhs_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6346 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6348, metadata !DIExpression()), !dbg !6349
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !6350
  ret %union.tree_node** %call, !dbg !6351
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_assign_rhs2_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6352 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6354, metadata !DIExpression()), !dbg !6355
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !6356
  ret %union.tree_node** %call, !dbg !6357
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !6358 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6362, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.value(metadata i32 %i, metadata !6363, metadata !DIExpression()), !dbg !6364
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !6365
  %tobool = icmp eq i8 %call, 0, !dbg !6365
  br i1 %tobool, label %return, label %if.then, !dbg !6367

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !6368
  %idx.ext = zext i32 %i to i64, !dbg !6370
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idx.ext, !dbg !6370
  br label %return, !dbg !6371

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node** [ %add.ptr, %if.then ], [ null, %entry ], !dbg !6372
  ret %union.tree_node** %retval.0, !dbg !6373
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6374 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6376, metadata !DIExpression()), !dbg !6378
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !6379
  call void @llvm.dbg.value(metadata i32 %call, metadata !6377, metadata !DIExpression()), !dbg !6378
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !6380

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !6382
  %bf.load = load i32, i32* %0, align 8, !dbg !6382
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6382
  br label %cleanup, !dbg !6383

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !6384
  br label %cleanup, !dbg !6386

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !6378
  ret i32 %retval.0, !dbg !6387
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6388 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6390, metadata !DIExpression()), !dbg !6391
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !6392
  ret %union.tree_node* %call, !dbg !6393
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6394 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6396, metadata !DIExpression()), !dbg !6397
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6398
  %tobool = icmp eq i8 %call, 0, !dbg !6398
  br i1 %tobool, label %return, label %if.then, !dbg !6400

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !6401
  %bf.load = load i32, i32* %0, align 8, !dbg !6401
  %bf.lshr = lshr i32 %bf.load, 14, !dbg !6401
  %1 = trunc i32 %bf.lshr to i8, !dbg !6402
  %conv = and i8 %1, 1, !dbg !6402
  br label %return, !dbg !6403

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv, %if.then ], [ 0, %entry ], !dbg !6404
  ret i8 %retval.0, !dbg !6405
}

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_mem_ref_addr(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @idx_find_step(%union.tree_node* %base, %union.tree_node** %idx, i8* %data) #5 !dbg !6406 {
entry:
  %iv_base = alloca %union.tree_node*, align 8
  %iv_step = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !6408, metadata !DIExpression()), !dbg !6419
  call void @llvm.dbg.value(metadata %union.tree_node** %idx, metadata !6409, metadata !DIExpression()), !dbg !6419
  call void @llvm.dbg.value(metadata i8* %data, metadata !6410, metadata !DIExpression()), !dbg !6419
  call void @llvm.dbg.value(metadata i8* %data, metadata !6411, metadata !DIExpression()), !dbg !6419
  %0 = bitcast %union.tree_node** %iv_base to i8*, !dbg !6420
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6420
  %1 = bitcast %union.tree_node** %iv_step to i8*, !dbg !6420
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6420
  %ivopts_data = bitcast i8* %data to %struct.ivopts_data**, !dbg !6421
  %2 = load %struct.ivopts_data*, %struct.ivopts_data** %ivopts_data, align 8, !dbg !6421
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %2, i64 0, i32 0, !dbg !6422
  %3 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !6422
  call void @llvm.dbg.value(metadata %struct.loop* %3, metadata !6418, metadata !DIExpression()), !dbg !6419
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6423
  %bf.load = load i64, i64* %4, align 8, !dbg !6423
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6425
  %cmp = icmp eq i64 %bf.cast1, 49, !dbg !6425
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !6426

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast1, 48, !dbg !6427
  br i1 %cmp6, label %cleanup, label %if.end, !dbg !6428

if.end:                                           ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 41, !dbg !6429
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !6431

if.then12:                                        ; preds = %if.end
  %call = tail call %union.tree_node* @component_ref_field_offset(%union.tree_node* %base) #6, !dbg !6432
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6417, metadata !DIExpression()), !dbg !6419
  %call13 = tail call zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %3, %union.tree_node* %call) #7, !dbg !6434
  br label %cleanup, !dbg !6435

if.end14:                                         ; preds = %if.end
  %cmp19 = icmp eq i64 %bf.cast1, 45, !dbg !6436
  br i1 %cmp19, label %if.then26, label %lor.lhs.false20, !dbg !6438

lor.lhs.false20:                                  ; preds = %if.end14
  %cmp25 = icmp eq i64 %bf.cast1, 46, !dbg !6439
  br i1 %cmp25, label %if.then26, label %if.end45, !dbg !6440

if.then26:                                        ; preds = %lor.lhs.false20, %if.end14
  %cmp31 = icmp eq i64 %bf.cast1, 46, !dbg !6441
  br i1 %cmp31, label %land.lhs.true, label %if.end35, !dbg !6444

land.lhs.true:                                    ; preds = %if.then26
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6445
  %5 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !6445
  %6 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !6445
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 2, !dbg !6445
  %7 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !6445
  %call33 = tail call zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %3, %union.tree_node* %7) #7, !dbg !6446
  %tobool = icmp eq i8 %call33, 0, !dbg !6446
  br i1 %tobool, label %cleanup, label %if.end35, !dbg !6447

if.end35:                                         ; preds = %land.lhs.true, %if.then26
  %call36 = tail call %union.tree_node* @array_ref_element_size(%union.tree_node* %base) #6, !dbg !6448
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !6413, metadata !DIExpression()), !dbg !6419
  %call37 = tail call %union.tree_node* @array_ref_low_bound(%union.tree_node* %base) #6, !dbg !6449
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !6416, metadata !DIExpression()), !dbg !6419
  %call38 = tail call zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %3, %union.tree_node* %call36) #7, !dbg !6450
  %tobool39 = icmp eq i8 %call38, 0, !dbg !6450
  br i1 %tobool39, label %cleanup, label %lor.lhs.false40, !dbg !6452

lor.lhs.false40:                                  ; preds = %if.end35
  %call41 = tail call zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %3, %union.tree_node* %call37) #7, !dbg !6453
  %tobool42 = icmp eq i8 %call41, 0, !dbg !6453
  br i1 %tobool42, label %cleanup, label %if.end45, !dbg !6454

if.end45:                                         ; preds = %lor.lhs.false40, %lor.lhs.false20
  %8 = bitcast %union.tree_node** %idx to i64**, !dbg !6455
  %9 = load i64*, i64** %8, align 8, !dbg !6455
  %bf.load47 = load i64, i64* %9, align 8, !dbg !6455
  %bf.cast496 = and i64 %bf.load47, 65535, !dbg !6457
  %cmp50 = icmp eq i64 %bf.cast496, 141, !dbg !6457
  br i1 %cmp50, label %if.end52, label %cleanup, !dbg !6458

if.end52:                                         ; preds = %if.end45
  %10 = bitcast i64* %9 to %union.tree_node*, !dbg !6458
  %11 = load %struct.ivopts_data*, %struct.ivopts_data** %ivopts_data, align 8, !dbg !6459
  %call54 = tail call fastcc %struct.iv* @get_iv(%struct.ivopts_data* %11, %union.tree_node* %10) #7, !dbg !6460
  call void @llvm.dbg.value(metadata %struct.iv* %call54, metadata !6412, metadata !DIExpression()), !dbg !6419
  %tobool55 = icmp eq %struct.iv* %call54, null, !dbg !6461
  br i1 %tobool55, label %cleanup, label %if.end57, !dbg !6463

if.end57:                                         ; preds = %if.end52
  %12 = bitcast %struct.iv* %call54 to i64*, !dbg !6464
  %13 = load i64, i64* %12, align 8, !dbg !6464
  %14 = bitcast %union.tree_node** %idx to i64*, !dbg !6465
  store i64 %13, i64* %14, align 8, !dbg !6465
  %step59 = getelementptr inbounds %struct.iv, %struct.iv* %call54, i64 0, i32 2, !dbg !6466
  %15 = load %union.tree_node*, %union.tree_node** %step59, align 8, !dbg !6466
  %call60 = tail call i32 @integer_zerop(%union.tree_node* %15) #6, !dbg !6468
  %tobool61 = icmp eq i32 %call60, 0, !dbg !6468
  br i1 %tobool61, label %if.end63, label %cleanup, !dbg !6469

if.end63:                                         ; preds = %if.end57
  %bf.load65 = load i64, i64* %4, align 8, !dbg !6470
  %bf.cast677 = and i64 %bf.load65, 65535, !dbg !6472
  %cmp68 = icmp eq i64 %bf.cast677, 45, !dbg !6472
  br i1 %cmp68, label %if.then75, label %lor.lhs.false69, !dbg !6473

lor.lhs.false69:                                  ; preds = %if.end63
  %cmp74 = icmp eq i64 %bf.cast677, 46, !dbg !6474
  br i1 %cmp74, label %if.then75, label %if.else, !dbg !6475

if.then75:                                        ; preds = %lor.lhs.false69, %if.end63
  %call76 = tail call %union.tree_node* @array_ref_element_size(%union.tree_node* %base) #6, !dbg !6476
  call void @llvm.dbg.value(metadata %union.tree_node* %call76, metadata !6413, metadata !DIExpression()), !dbg !6419
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6478
  %bf.load78 = load i64, i64* %16, align 8, !dbg !6478
  %bf.cast809 = and i64 %bf.load78, 65535, !dbg !6480
  %cmp81 = icmp eq i64 %bf.cast809, 23, !dbg !6480
  br i1 %cmp81, label %if.end85, label %cleanup, !dbg !6481

if.else:                                          ; preds = %lor.lhs.false69
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !6482
  %call84 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %17, i64 1) #6, !dbg !6483
  call void @llvm.dbg.value(metadata %union.tree_node* %call84, metadata !6413, metadata !DIExpression()), !dbg !6419
  br label %if.end85

if.end85:                                         ; preds = %if.then75, %if.else
  %step.0 = phi %union.tree_node* [ %call84, %if.else ], [ %call76, %if.then75 ], !dbg !6484
  call void @llvm.dbg.value(metadata %union.tree_node* %step.0, metadata !6413, metadata !DIExpression()), !dbg !6419
  %18 = load i64, i64* %12, align 8, !dbg !6485
  %19 = bitcast %union.tree_node** %iv_base to i64*, !dbg !6486
  store i64 %18, i64* %19, align 8, !dbg !6486
  %20 = bitcast %union.tree_node** %step59 to i64*, !dbg !6487
  %21 = load i64, i64* %20, align 8, !dbg !6487
  %22 = bitcast %union.tree_node** %iv_step to i64*, !dbg !6488
  store i64 %21, i64* %22, align 8, !dbg !6488
  %23 = load %struct.ivopts_data*, %struct.ivopts_data** %ivopts_data, align 8, !dbg !6489
  %current_loop89 = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %23, i64 0, i32 0, !dbg !6491
  %24 = load %struct.loop*, %struct.loop** %current_loop89, align 8, !dbg !6491
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !6492
  %stmt = getelementptr inbounds i8, i8* %data, i64 8, !dbg !6493
  %26 = bitcast i8* %stmt to %union.gimple_statement_d**, !dbg !6493
  %27 = load %union.gimple_statement_d*, %union.gimple_statement_d** %26, align 8, !dbg !6493
  call void @llvm.dbg.value(metadata %union.tree_node** %iv_base, metadata !6414, metadata !DIExpression(DW_OP_deref)), !dbg !6419
  call void @llvm.dbg.value(metadata %union.tree_node** %iv_step, metadata !6415, metadata !DIExpression(DW_OP_deref)), !dbg !6419
  %call90 = call zeroext i8 @convert_affine_scev(%struct.loop* %24, %union.tree_node* %25, %union.tree_node** nonnull %iv_base, %union.tree_node** nonnull %iv_step, %union.gimple_statement_d* %27, i8 zeroext 0) #6, !dbg !6494
  %tobool91 = icmp eq i8 %call90, 0, !dbg !6494
  br i1 %tobool91, label %cleanup, label %if.end93, !dbg !6495

if.end93:                                         ; preds = %if.end85
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !6496
  %29 = load %union.tree_node*, %union.tree_node** %iv_step, align 8, !dbg !6496
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !6415, metadata !DIExpression()), !dbg !6419
  %call94 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %28, %union.tree_node* %step.0, %union.tree_node* %29) #6, !dbg !6496
  call void @llvm.dbg.value(metadata %union.tree_node* %call94, metadata !6413, metadata !DIExpression()), !dbg !6419
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !6497
  %step95 = getelementptr inbounds i8, i8* %data, i64 16, !dbg !6497
  %31 = bitcast i8* %step95 to %union.tree_node**, !dbg !6497
  %32 = load %union.tree_node*, %union.tree_node** %31, align 8, !dbg !6497
  %call96 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %30, %union.tree_node* %32, %union.tree_node* %call94) #6, !dbg !6497
  store %union.tree_node* %call96, %union.tree_node** %31, align 8, !dbg !6498
  br label %cleanup, !dbg !6499

cleanup:                                          ; preds = %land.lhs.true, %lor.lhs.false40, %if.end35, %if.then75, %if.end85, %if.end57, %if.end52, %if.end45, %entry, %lor.lhs.false, %if.end93, %if.then12
  %retval.0 = phi i8 [ %call13, %if.then12 ], [ 1, %if.end93 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false40 ], [ 0, %if.end35 ], [ 1, %if.end45 ], [ 0, %if.end52 ], [ 1, %if.end57 ], [ 0, %if.then75 ], [ 0, %if.end85 ], !dbg !6419
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6500
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6500
  ret i8 %retval.0, !dbg !6500
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @may_be_nonaddressable_p(%union.tree_node* %expr) unnamed_addr #5 !dbg !6501 {
entry:
  br label %tailrecurse, !dbg !6504

tailrecurse:                                      ; preds = %sw.bb22, %entry
  %expr.tr = phi %union.tree_node* [ %expr, %entry ], [ %9, %sw.bb22 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr, metadata !6503, metadata !DIExpression()), !dbg !6506
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6507
  %bf.load = load i64, i64* %0, align 8, !dbg !6507
  %1 = trunc i64 %bf.load to i16, !dbg !6507
  switch i16 %1, label %return.loopexit [
    i16 113, label %sw.bb27
    i16 41, label %sw.bb1
    i16 118, label %sw.bb10
    i16 45, label %sw.bb22
    i16 46, label %sw.bb22
    i16 116, label %sw.bb27
  ], !dbg !6508

sw.bb1:                                           ; preds = %tailrecurse
  %expr.tr.lcssa7 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa7, metadata !6503, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa7, metadata !6503, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa7, metadata !6503, metadata !DIExpression()), !dbg !6506
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6509
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6509
  %2 = bitcast %union.tree_node** %arrayidx to %struct.tree_decl_common**, !dbg !6509
  %3 = load %struct.tree_decl_common*, %struct.tree_decl_common** %2, align 8, !dbg !6509
  %decl_flag_2 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %3, i64 0, i32 2, !dbg !6509
  %4 = bitcast i40* %decl_flag_2 to i64*, !dbg !6509
  %bf.load2 = load i64, i64* %4, align 8, !dbg !6509
  %bf.cast41 = and i64 %bf.load2, 67108864, !dbg !6509
  %tobool = icmp eq i64 %bf.cast41, 0, !dbg !6509
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6510

lor.rhs:                                          ; preds = %sw.bb1
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6511
  %call = tail call fastcc zeroext i8 @may_be_nonaddressable_p(%union.tree_node* %5) #7, !dbg !6512
  %tobool8 = icmp ne i8 %call, 0, !dbg !6510
  %phitmp = zext i1 %tobool8 to i8, !dbg !6510
  br label %lor.end, !dbg !6510

lor.end:                                          ; preds = %sw.bb1, %lor.rhs
  %6 = phi i8 [ 1, %sw.bb1 ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !6513

sw.bb10:                                          ; preds = %tailrecurse
  %operands12 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6514
  %7 = load %union.tree_node*, %union.tree_node** %operands12, align 8, !dbg !6514
  %call14 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %7) #6, !dbg !6516
  %tobool16 = icmp eq i8 %call14, 0, !dbg !6516
  br i1 %tobool16, label %lor.lhs.false, label %return.loopexit, !dbg !6517

lor.lhs.false:                                    ; preds = %sw.bb10
  %8 = load %union.tree_node*, %union.tree_node** %operands12, align 8, !dbg !6518
  %call20 = tail call zeroext i8 @is_gimple_addressable(%union.tree_node* %8) #6, !dbg !6519
  %tobool21 = icmp eq i8 %call20, 0, !dbg !6519
  br i1 %tobool21, label %return.loopexit, label %sw.bb22, !dbg !6520

sw.bb22:                                          ; preds = %lor.lhs.false, %tailrecurse, %tailrecurse
  %operands24 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6521
  %9 = load %union.tree_node*, %union.tree_node** %operands24, align 8, !dbg !6521
  br label %tailrecurse, !dbg !6504

sw.bb27:                                          ; preds = %tailrecurse, %tailrecurse
  br label %return, !dbg !6522

return.loopexit:                                  ; preds = %tailrecurse, %sw.bb10, %lor.lhs.false
  %retval.0.ph = phi i8 [ 0, %tailrecurse ], [ 1, %sw.bb10 ], [ 1, %lor.lhs.false ]
  br label %return, !dbg !6523

return:                                           ; preds = %return.loopexit, %sw.bb27, %lor.end
  %retval.0 = phi i8 [ 1, %sw.bb27 ], [ %6, %lor.end ], [ %retval.0.ph, %return.loopexit ], !dbg !6506
  ret i8 %retval.0, !dbg !6523
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !6524 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6528, metadata !DIExpression()), !dbg !6529
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6530
  %bf.load = load i64, i64* %0, align 8, !dbg !6530
  %1 = trunc i64 %bf.load to i16, !dbg !6530
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !6531

sw.default:                                       ; preds = %entry
  br label %return, !dbg !6532

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !6534
  ret i8 %retval.0, !dbg !6535
}

declare dso_local %union.tree_node* @gimple_fold_indirect_ref(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @idx_record_use(%union.tree_node* %base, %union.tree_node** %idx, i8* %vdata) #5 !dbg !6536 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !6538, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata %union.tree_node** %idx, metadata !6539, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata i8* %vdata, metadata !6540, metadata !DIExpression()), !dbg !6542
  %0 = bitcast i8* %vdata to %struct.ivopts_data*, !dbg !6543
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %0, metadata !6541, metadata !DIExpression()), !dbg !6542
  %1 = load %union.tree_node*, %union.tree_node** %idx, align 8, !dbg !6544
  %call = tail call fastcc %struct.iv_use* @find_interesting_uses_op(%struct.ivopts_data* %0, %union.tree_node* %1) #7, !dbg !6545
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6546
  %bf.load = load i64, i64* %2, align 8, !dbg !6546
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6548
  %cmp = icmp eq i64 %bf.cast1, 45, !dbg !6548
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6549

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast1, 46, !dbg !6550
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6551

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call7 = tail call %union.tree_node* @array_ref_element_size(%union.tree_node* %base) #6, !dbg !6552
  %call8 = tail call fastcc %struct.iv_use* @find_interesting_uses_op(%struct.ivopts_data* %0, %union.tree_node* %call7) #7, !dbg !6554
  %call9 = tail call %union.tree_node* @array_ref_low_bound(%union.tree_node* %base) #6, !dbg !6555
  %call10 = tail call fastcc %struct.iv_use* @find_interesting_uses_op(%struct.ivopts_data* %0, %union.tree_node* %call9) #7, !dbg !6556
  br label %if.end, !dbg !6557

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret i8 1, !dbg !6558
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6559 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6561, metadata !DIExpression()), !dbg !6562
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6563
  %cmp = icmp ugt i32 %call, 5, !dbg !6564
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6565

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6566
  %cmp2 = icmp ult i32 %call1, 10, !dbg !6567
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6568
}

declare dso_local %union.tree_node* @component_ref_field_offset(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @array_ref_element_size(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @array_ref_low_bound(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @convert_affine_scev(%struct.loop*, %union.tree_node*, %union.tree_node**, %union.tree_node**, %union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_addressable(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6569 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6571, metadata !DIExpression()), !dbg !6572
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !6573
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !6573
  ret %union.tree_node* %0, !dbg !6574
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6575 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6579, metadata !DIExpression()), !dbg !6580
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6581
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !6582
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6583
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !6584
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6585
  store i32 0, i32* %iter_type, align 4, !dbg !6586
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6587
  store i32 0, i32* %phi_i, align 8, !dbg !6588
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6589
  store i32 0, i32* %num_phi, align 4, !dbg !6590
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6591
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6592
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6593
  store i8 1, i8* %done, align 8, !dbg !6594
  ret void, !dbg !6595
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6596 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6598, metadata !DIExpression()), !dbg !6599
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !6600
  %0 = load i32, i32* %nargs, align 4, !dbg !6600
  ret i32 %0, !dbg !6601
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6602 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6606, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6607, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i32 1, metadata !6608, metadata !DIExpression()), !dbg !6609
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6610
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !6611
  br i1 true, label %land.lhs.true16, label %entry.if.end_crit_edge, !dbg !6612

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end, !dbg !6612

land.lhs.true16:                                  ; preds = %entry
  br i1 true, label %if.end, label %land.lhs.true19, !dbg !6614

land.lhs.true19:                                  ; preds = %land.lhs.true16
  br i1 undef, label %land.lhs.true19.if.end_crit_edge, label %if.then, !dbg !6615

land.lhs.true19.if.end_crit_edge:                 ; preds = %land.lhs.true19
  br label %if.end, !dbg !6615

if.then:                                          ; preds = %land.lhs.true19
  br label %if.end, !dbg !6616

if.end:                                           ; preds = %land.lhs.true19.if.end_crit_edge, %entry.if.end_crit_edge, %land.lhs.true16, %if.then
  br i1 false, label %if.end.cond.end28_crit_edge, label %cond.true25, !dbg !6617

if.end.cond.end28_crit_edge:                      ; preds = %if.end
  br label %cond.end28, !dbg !6617

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6618
  br label %cond.end28, !dbg !6617

cond.end28:                                       ; preds = %if.end.cond.end28_crit_edge, %cond.true25
  %0 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ undef, %if.end.cond.end28_crit_edge ], !dbg !6617
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6619
  store %struct.use_optype_d* %0, %struct.use_optype_d** %uses, align 8, !dbg !6620
  br i1 true, label %land.lhs.true32, label %cond.end28.if.end42_crit_edge, !dbg !6621

cond.end28.if.end42_crit_edge:                    ; preds = %cond.end28
  br label %if.end42, !dbg !6621

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %0, null, !dbg !6623
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !6624

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !6625
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !6626
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !6627

if.then38:                                        ; preds = %land.lhs.true35
  %1 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !6628
  %2 = load i64*, i64** %1, align 8, !dbg !6628
  %3 = load i64, i64* %2, align 8, !dbg !6629
  %4 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !6630
  store i64 %3, i64* %4, align 8, !dbg !6630
  br label %if.end42, !dbg !6631

if.end42:                                         ; preds = %cond.end28.if.end42_crit_edge, %land.lhs.true35, %land.lhs.true32, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6632
  store i8 0, i8* %done, align 8, !dbg !6633
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6634
  store i32 0, i32* %phi_i, align 8, !dbg !6635
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6636
  store i32 0, i32* %num_phi, align 4, !dbg !6637
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6638
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6639
  ret void, !dbg !6640
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6641 {
entry:
  unreachable, !dbg !6646
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6647 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6649, metadata !DIExpression()), !dbg !6650
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !6651
  %tobool = icmp eq i8 %call, 0, !dbg !6651
  br i1 %tobool, label %return, label %if.end, !dbg !6653

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !6654
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !6654
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6654
  br label %return, !dbg !6655

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !6650
  ret %union.tree_node* %retval.0, !dbg !6656
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6657 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6661, metadata !DIExpression()), !dbg !6662
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !6663
  %tobool = icmp eq i8 %call, 0, !dbg !6663
  br i1 %tobool, label %return, label %if.end, !dbg !6665

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !6666
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !6666
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !6666
  br label %return, !dbg !6667

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !6662
  ret %struct.use_optype_d* %retval.0, !dbg !6668
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6669 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6671, metadata !DIExpression()), !dbg !6672
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !6673
  %tobool = icmp eq i8 %call, 0, !dbg !6673
  br i1 %tobool, label %return, label %if.end, !dbg !6675

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !6676
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !6676
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6676
  br label %return, !dbg !6677

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !6672
  ret %union.tree_node* %retval.0, !dbg !6678
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_standard_iv_candidates(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !6679 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !6681, metadata !DIExpression()), !dbg !6682
  tail call fastcc void @add_standard_iv_candidates_for_size(%struct.ivopts_data* %data, i32 32) #7, !dbg !6683
  ret void, !dbg !6684
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_old_ivs_candidates(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !6685 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !6687, metadata !DIExpression()), !dbg !6691
  %0 = bitcast i32* %i to i8*, !dbg !6692
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6692
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6693
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6693
  %relevant = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 5, !dbg !6694
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %relevant, align 8, !dbg !6694
  call void @llvm.dbg.value(metadata i32* %i, metadata !6688, metadata !DIExpression(DW_OP_deref)), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6690, metadata !DIExpression(DW_OP_deref)), !dbg !6691
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %2, i32 0, i32* nonnull %i) #7, !dbg !6694
  br label %for.cond, !dbg !6694

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !6688, metadata !DIExpression(DW_OP_deref)), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6690, metadata !DIExpression(DW_OP_deref)), !dbg !6691
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6696
  %tobool = icmp eq i8 %call, 0, !dbg !6694
  br i1 %tobool, label %for.end, label %for.body, !dbg !6694

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !6698
  call void @llvm.dbg.value(metadata i32 %3, metadata !6688, metadata !DIExpression()), !dbg !6691
  %call1 = call fastcc %struct.version_info* @ver_info(%struct.ivopts_data* %data, i32 %3) #7, !dbg !6700
  %iv2 = getelementptr inbounds %struct.version_info, %struct.version_info* %call1, i64 0, i32 1, !dbg !6701
  %4 = load %struct.iv*, %struct.iv** %iv2, align 8, !dbg !6701
  call void @llvm.dbg.value(metadata %struct.iv* %4, metadata !6689, metadata !DIExpression()), !dbg !6691
  %tobool3 = icmp eq %struct.iv* %4, null, !dbg !6702
  br i1 %tobool3, label %for.inc, label %land.lhs.true, !dbg !6704

land.lhs.true:                                    ; preds = %for.body
  %biv_p = getelementptr inbounds %struct.iv, %struct.iv* %4, i64 0, i32 4, !dbg !6705
  %5 = load i8, i8* %biv_p, align 8, !dbg !6705
  %tobool4 = icmp eq i8 %5, 0, !dbg !6706
  br i1 %tobool4, label %for.inc, label %land.lhs.true5, !dbg !6707

land.lhs.true5:                                   ; preds = %land.lhs.true
  %step = getelementptr inbounds %struct.iv, %struct.iv* %4, i64 0, i32 2, !dbg !6708
  %6 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !6708
  %call6 = call i32 @integer_zerop(%union.tree_node* %6) #6, !dbg !6709
  %tobool7 = icmp eq i32 %call6, 0, !dbg !6709
  br i1 %tobool7, label %if.then, label %for.inc, !dbg !6710

if.then:                                          ; preds = %land.lhs.true5
  call fastcc void @add_old_iv_candidates(%struct.ivopts_data* %data, %struct.iv* nonnull %4) #7, !dbg !6711
  br label %for.inc, !dbg !6711

for.inc:                                          ; preds = %land.lhs.true5, %land.lhs.true, %for.body, %if.then
  call void @llvm.dbg.value(metadata i32* %i, metadata !6688, metadata !DIExpression(DW_OP_deref)), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6690, metadata !DIExpression(DW_OP_deref)), !dbg !6691
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6696
  br label %for.cond, !dbg !6696, !llvm.loop !6712

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6714
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6714
  ret void, !dbg !6714
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_derived_ivs_candidates(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !6715 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !6717, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i32 0, metadata !6718, metadata !DIExpression()), !dbg !6723
  br label %for.cond, !dbg !6724

for.cond:                                         ; preds = %cleanup, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cleanup ], !dbg !6725
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6718, metadata !DIExpression()), !dbg !6723
  %call = tail call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !6726
  %cmp = icmp ult i32 %i.0, %call, !dbg !6727
  br i1 %cmp, label %for.body, label %for.end, !dbg !6728

for.body:                                         ; preds = %for.cond
  %call1 = tail call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !6729
  call void @llvm.dbg.value(metadata %struct.iv_use* %call1, metadata !6719, metadata !DIExpression()), !dbg !6730
  %tobool = icmp eq %struct.iv_use* %call1, null, !dbg !6731
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6733

if.end:                                           ; preds = %for.body
  %type = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call1, i64 0, i32 1, !dbg !6734
  %0 = load i32, i32* %type, align 4, !dbg !6734
  %switch = icmp ult i32 %0, 3, !dbg !6735
  br i1 %switch, label %sw.bb, label %sw.default, !dbg !6735

sw.bb:                                            ; preds = %if.end
  %iv = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call1, i64 0, i32 2, !dbg !6736
  %1 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !6736
  tail call fastcc void @add_iv_value_candidates(%struct.ivopts_data* %data, %struct.iv* %1, %struct.iv_use* nonnull %call1) #7, !dbg !6738
  br label %cleanup, !dbg !6739

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 2417, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !6740
  br label %cleanup, !dbg !6741

cleanup:                                          ; preds = %for.body, %sw.bb, %sw.default
  %inc = add i32 %i.0, 1, !dbg !6742
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6718, metadata !DIExpression()), !dbg !6723
  br label %for.cond, !dbg !6743, !llvm.loop !6744

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6746
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_autoinc_for_original_candidates(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !6747 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !6749, metadata !DIExpression()), !dbg !6762
  call void @llvm.dbg.value(metadata i32 0, metadata !6750, metadata !DIExpression()), !dbg !6762
  br label %for.cond, !dbg !6763

for.cond:                                         ; preds = %cleanup31, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc36, %cleanup31 ], !dbg !6764
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6750, metadata !DIExpression()), !dbg !6762
  %call = tail call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !6765
  %cmp = icmp ult i32 %i.0, %call, !dbg !6766
  br i1 %cmp, label %for.body, label %for.end37, !dbg !6767

for.body:                                         ; preds = %for.cond
  %call1 = tail call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !6768
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call1, metadata !6752, metadata !DIExpression()), !dbg !6769
  call void @llvm.dbg.value(metadata %struct.iv_use* null, metadata !6756, metadata !DIExpression()), !dbg !6769
  %pos = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call1, i64 0, i32 2, !dbg !6770
  %0 = load i32, i32* %pos, align 8, !dbg !6770
  %cmp2 = icmp eq i32 %0, 4, !dbg !6772
  br i1 %cmp2, label %for.cond3.preheader, label %cleanup31, !dbg !6773

for.cond3.preheader:                              ; preds = %for.body
  %incremented_at = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call1, i64 0, i32 3, !dbg !6774
  br label %for.cond3, !dbg !6776

for.cond3:                                        ; preds = %for.cond3.preheader, %cleanup
  %closest.0 = phi %struct.iv_use* [ %closest.2, %cleanup ], [ null, %for.cond3.preheader ], !dbg !6777
  %j.0 = phi i32 [ %inc, %cleanup ], [ 0, %for.cond3.preheader ], !dbg !6778
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !6751, metadata !DIExpression()), !dbg !6762
  call void @llvm.dbg.value(metadata %struct.iv_use* %closest.0, metadata !6756, metadata !DIExpression()), !dbg !6769
  %call4 = tail call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !6779
  %cmp5 = icmp ult i32 %j.0, %call4, !dbg !6780
  br i1 %cmp5, label %for.body6, label %for.end, !dbg !6776

for.body6:                                        ; preds = %for.cond3
  %call7 = tail call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %j.0) #7, !dbg !6781
  call void @llvm.dbg.value(metadata %struct.iv_use* %call7, metadata !6757, metadata !DIExpression()), !dbg !6782
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call7, i64 0, i32 3, !dbg !6783
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6783
  %call8 = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %1) #7, !dbg !6784
  call void @llvm.dbg.value(metadata i32 %call8, metadata !6761, metadata !DIExpression()), !dbg !6782
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6785
  %call10 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %2) #7, !dbg !6786
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %incremented_at, align 8, !dbg !6787
  %call11 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %3) #7, !dbg !6788
  %cmp12 = icmp eq %struct.basic_block_def* %call10, %call11, !dbg !6789
  br i1 %cmp12, label %lor.lhs.false, label %cleanup, !dbg !6790

lor.lhs.false:                                    ; preds = %for.body6
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %incremented_at, align 8, !dbg !6791
  %call14 = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %4) #7, !dbg !6792
  %cmp15 = icmp ugt i32 %call8, %call14, !dbg !6793
  br i1 %cmp15, label %cleanup, label %if.end17, !dbg !6794

if.end17:                                         ; preds = %lor.lhs.false
  %cmp18 = icmp eq %struct.iv_use* %closest.0, null, !dbg !6795
  br i1 %cmp18, label %if.then23, label %lor.lhs.false19, !dbg !6797

lor.lhs.false19:                                  ; preds = %if.end17
  %stmt20 = getelementptr inbounds %struct.iv_use, %struct.iv_use* %closest.0, i64 0, i32 3, !dbg !6798
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt20, align 8, !dbg !6798
  %call21 = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %5) #7, !dbg !6799
  %cmp22 = icmp ugt i32 %call8, %call21, !dbg !6800
  br i1 %cmp22, label %if.then23, label %cleanup, !dbg !6801

if.then23:                                        ; preds = %lor.lhs.false19, %if.end17
  call void @llvm.dbg.value(metadata %struct.iv_use* %call7, metadata !6756, metadata !DIExpression()), !dbg !6769
  br label %cleanup, !dbg !6802

cleanup:                                          ; preds = %for.body6, %lor.lhs.false19, %if.then23, %lor.lhs.false
  %closest.2 = phi %struct.iv_use* [ %closest.0, %lor.lhs.false ], [ %closest.0, %for.body6 ], [ %call7, %if.then23 ], [ %closest.0, %lor.lhs.false19 ], !dbg !6769
  call void @llvm.dbg.value(metadata %struct.iv_use* %closest.2, metadata !6756, metadata !DIExpression()), !dbg !6769
  %inc = add i32 %j.0, 1, !dbg !6803
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6751, metadata !DIExpression()), !dbg !6762
  br label %for.cond3, !dbg !6804, !llvm.loop !6805

for.end:                                          ; preds = %for.cond3
  %closest.0.lcssa = phi %struct.iv_use* [ %closest.0, %for.cond3 ], !dbg !6777
  call void @llvm.dbg.value(metadata %struct.iv_use* %closest.0.lcssa, metadata !6756, metadata !DIExpression()), !dbg !6769
  call void @llvm.dbg.value(metadata %struct.iv_use* %closest.0.lcssa, metadata !6756, metadata !DIExpression()), !dbg !6769
  call void @llvm.dbg.value(metadata %struct.iv_use* %closest.0.lcssa, metadata !6756, metadata !DIExpression()), !dbg !6769
  %cmp26 = icmp eq %struct.iv_use* %closest.0.lcssa, null, !dbg !6807
  br i1 %cmp26, label %cleanup31, label %lor.lhs.false27, !dbg !6809

lor.lhs.false27:                                  ; preds = %for.end
  %call28 = tail call fastcc zeroext i8 @autoinc_possible_for_pair(%struct.ivopts_data* %data, %struct.iv_use* nonnull %closest.0.lcssa, %struct.iv_cand* %call1) #7, !dbg !6810
  %tobool = icmp eq i8 %call28, 0, !dbg !6810
  br i1 %tobool, label %cleanup31, label %if.end30, !dbg !6811

if.end30:                                         ; preds = %lor.lhs.false27
  %ainc_use = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call1, i64 0, i32 9, !dbg !6812
  store %struct.iv_use* %closest.0.lcssa, %struct.iv_use** %ainc_use, align 8, !dbg !6813
  br label %cleanup31, !dbg !6814

cleanup31:                                        ; preds = %lor.lhs.false27, %for.body, %for.end, %if.end30
  %inc36 = add i32 %i.0, 1, !dbg !6815
  call void @llvm.dbg.value(metadata i32 %inc36, metadata !6750, metadata !DIExpression()), !dbg !6762
  br label %for.cond, !dbg !6816, !llvm.loop !6817

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !6819
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_important_candidates(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !6820 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !6822, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata i32 0, metadata !6823, metadata !DIExpression()), !dbg !6829
  %important_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 8, !dbg !6830
  br label %for.cond, !dbg !6832

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6833
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6823, metadata !DIExpression()), !dbg !6829
  %call = tail call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !6834
  %cmp = icmp ult i32 %i.0, %call, !dbg !6835
  br i1 %cmp, label %for.body, label %for.end, !dbg !6836

for.body:                                         ; preds = %for.cond
  %call1 = tail call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !6837
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call1, metadata !6825, metadata !DIExpression()), !dbg !6838
  %important = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call1, i64 0, i32 1, !dbg !6839
  %0 = load i8, i8* %important, align 4, !dbg !6839
  %tobool = icmp eq i8 %0, 0, !dbg !6840
  br i1 %tobool, label %for.inc, label %if.then, !dbg !6841

if.then:                                          ; preds = %for.body
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %important_candidates, align 8, !dbg !6842
  %call2 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %1, i32 %i.0) #6, !dbg !6843
  br label %for.inc, !dbg !6843

for.inc:                                          ; preds = %for.body, %if.then
  %inc = add i32 %i.0, 1, !dbg !6844
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6823, metadata !DIExpression()), !dbg !6829
  br label %for.cond, !dbg !6845, !llvm.loop !6846

for.end:                                          ; preds = %for.cond
  %call3 = tail call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !6848
  %2 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !6849
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %2, i64 60, i32 1, !dbg !6849
  %3 = load i32, i32* %value, align 8, !dbg !6849
  %cmp4 = icmp ule i32 %call3, %3, !dbg !6850
  %conv5 = zext i1 %cmp4 to i8, !dbg !6851
  %consider_all_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 10, !dbg !6852
  store i8 %conv5, i8* %consider_all_candidates, align 4, !dbg !6853
  call void @llvm.dbg.value(metadata i32 0, metadata !6823, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata i32 0, metadata !6823, metadata !DIExpression()), !dbg !6829
  br i1 %cmp4, label %for.cond9.preheader, label %for.cond19.preheader, !dbg !6854

for.cond19.preheader:                             ; preds = %for.end
  br label %for.cond19, !dbg !6855

for.cond9.preheader:                              ; preds = %for.end
  br label %for.cond9, !dbg !6859

for.cond9:                                        ; preds = %for.cond9.preheader, %for.body13
  %i.1 = phi i32 [ %inc17, %for.body13 ], [ 0, %for.cond9.preheader ], !dbg !6862
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6823, metadata !DIExpression()), !dbg !6829
  %call10 = tail call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !6863
  %cmp11 = icmp ult i32 %i.1, %call10, !dbg !6865
  br i1 %cmp11, label %for.body13, label %if.end31.loopexit, !dbg !6859

for.body13:                                       ; preds = %for.cond9
  %call14 = tail call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i.1) #7, !dbg !6866
  call void @llvm.dbg.value(metadata %struct.iv_use* %call14, metadata !6824, metadata !DIExpression()), !dbg !6829
  %related_cands = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call14, i64 0, i32 5, !dbg !6868
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %related_cands, align 8, !dbg !6868
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %4) #6, !dbg !6868
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %related_cands, align 8, !dbg !6868
  %inc17 = add i32 %i.1, 1, !dbg !6869
  call void @llvm.dbg.value(metadata i32 %inc17, metadata !6823, metadata !DIExpression()), !dbg !6829
  br label %for.cond9, !dbg !6870, !llvm.loop !6871

for.cond19:                                       ; preds = %for.cond19.preheader, %for.body23
  %i.2 = phi i32 [ %inc29, %for.body23 ], [ 0, %for.cond19.preheader ], !dbg !6873
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !6823, metadata !DIExpression()), !dbg !6829
  %call20 = tail call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !6874
  %cmp21 = icmp ult i32 %i.2, %call20, !dbg !6876
  br i1 %cmp21, label %for.body23, label %if.end31.loopexit1, !dbg !6855

for.body23:                                       ; preds = %for.cond19
  %call24 = tail call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i.2) #7, !dbg !6877
  %related_cands25 = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call24, i64 0, i32 5, !dbg !6878
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %related_cands25, align 8, !dbg !6878
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %important_candidates, align 8, !dbg !6879
  %call27 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %5, %struct.bitmap_head_def* %6) #6, !dbg !6880
  %inc29 = add i32 %i.2, 1, !dbg !6881
  call void @llvm.dbg.value(metadata i32 %inc29, metadata !6823, metadata !DIExpression()), !dbg !6829
  br label %for.cond19, !dbg !6882, !llvm.loop !6883

if.end31.loopexit:                                ; preds = %for.cond9
  br label %if.end31, !dbg !6885

if.end31.loopexit1:                               ; preds = %for.cond19
  br label %if.end31, !dbg !6885

if.end31:                                         ; preds = %if.end31.loopexit1, %if.end31.loopexit
  ret void, !dbg !6885
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_standard_iv_candidates_for_size(%struct.ivopts_data* %data, i32 %size) unnamed_addr #5 !dbg !6886 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !6890, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i32 32, metadata !6891, metadata !DIExpression()), !dbg !6893
  %0 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 3), align 8, !dbg !6894
  %call = tail call %union.tree_node* %0(i32 32, i32 1) #6, !dbg !6895
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6892, metadata !DIExpression()), !dbg !6893
  %call1 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %call, i64 0) #6, !dbg !6896
  %call2 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %call, i64 1) #6, !dbg !6897
  tail call fastcc void @add_candidate(%struct.ivopts_data* %data, %union.tree_node* %call1, %union.tree_node* %call2, i8 zeroext 1, %struct.iv_use* null) #7, !dbg !6898
  ret void, !dbg !6899
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_candidate(%struct.ivopts_data* %data, %union.tree_node* %base, %union.tree_node* %step, i8 zeroext %important, %struct.iv_use* %use) unnamed_addr #5 !dbg !6900 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !6904, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !6905, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %union.tree_node* %step, metadata !6906, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i8 %important, metadata !6907, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !6908, metadata !DIExpression()), !dbg !6909
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !6910
  %0 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !6910
  %call = tail call %struct.basic_block_def* @ip_normal_pos(%struct.loop* %0) #6, !dbg !6912
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !6912
  br i1 %tobool, label %if.end, label %if.then, !dbg !6913

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.iv_cand* @add_candidate_1(%struct.ivopts_data* %data, %union.tree_node* %base, %union.tree_node* %step, i8 zeroext %important, i32 0, %struct.iv_use* %use, %union.gimple_statement_d* null) #7, !dbg !6914
  br label %if.end, !dbg !6914

if.end:                                           ; preds = %entry, %if.then
  %1 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !6915
  %call3 = tail call %struct.basic_block_def* @ip_end_pos(%struct.loop* %1) #6, !dbg !6917
  %tobool4 = icmp eq %struct.basic_block_def* %call3, null, !dbg !6917
  br i1 %tobool4, label %if.end10, label %land.lhs.true, !dbg !6918

land.lhs.true:                                    ; preds = %if.end
  %2 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !6919
  %call6 = tail call fastcc zeroext i8 @allow_ip_end_pos_p(%struct.loop* %2) #7, !dbg !6920
  %tobool7 = icmp eq i8 %call6, 0, !dbg !6920
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !6921

if.then8:                                         ; preds = %land.lhs.true
  %call9 = tail call fastcc %struct.iv_cand* @add_candidate_1(%struct.ivopts_data* %data, %union.tree_node* %base, %union.tree_node* %step, i8 zeroext %important, i32 1, %struct.iv_use* %use, %union.gimple_statement_d* null) #7, !dbg !6922
  br label %if.end10, !dbg !6922

if.end10:                                         ; preds = %land.lhs.true, %if.end, %if.then8
  %cmp = icmp eq %struct.iv_use* %use, null, !dbg !6923
  br i1 %cmp, label %if.end16, label %land.lhs.true12, !dbg !6925

land.lhs.true12:                                  ; preds = %if.end10
  %type = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 1, !dbg !6926
  %3 = load i32, i32* %type, align 4, !dbg !6926
  %cmp13 = icmp eq i32 %3, 1, !dbg !6927
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !6928

if.then15:                                        ; preds = %land.lhs.true12
  tail call fastcc void @add_autoinc_candidates(%struct.ivopts_data* %data, %union.tree_node* %base, %union.tree_node* %step, i8 zeroext %important, %struct.iv_use* nonnull %use) #7, !dbg !6929
  br label %if.end16, !dbg !6929

if.end16:                                         ; preds = %if.end10, %if.then15, %land.lhs.true12
  ret void, !dbg !6930
}

declare dso_local %struct.basic_block_def* @ip_normal_pos(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.iv_cand* @add_candidate_1(%struct.ivopts_data* %data, %union.tree_node* %base, %union.tree_node* %step, i8 zeroext %important, i32 %pos, %struct.iv_use* %use, %union.gimple_statement_d* %incremented_at) unnamed_addr #5 !dbg !6931 {
entry:
  %step.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !6935, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !6936, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata %union.tree_node* %step, metadata !6937, metadata !DIExpression()), !dbg !6946
  store %union.tree_node* %step, %union.tree_node** %step.addr, align 8
  call void @llvm.dbg.value(metadata i8 %important, metadata !6938, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %pos, metadata !6939, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !6940, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %incremented_at, metadata !6941, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata %struct.iv_cand* null, metadata !6943, metadata !DIExpression()), !dbg !6946
  %tobool = icmp eq %union.tree_node* %base, null, !dbg !6947
  br i1 %tobool, label %if.end5, label %if.then, !dbg !6949

if.then:                                          ; preds = %entry
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6950
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !6950
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6945, metadata !DIExpression()), !dbg !6946
  %call = tail call fastcc %union.tree_node* @generic_type_for(%union.tree_node* %0) #7, !dbg !6952
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6944, metadata !DIExpression()), !dbg !6946
  %cmp = icmp eq %union.tree_node* %call, %0, !dbg !6953
  br i1 %cmp, label %if.end5, label %if.then2, !dbg !6955

if.then2:                                         ; preds = %if.then
  %call3 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call, %union.tree_node* nonnull %base) #6, !dbg !6956
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !6936, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata %union.tree_node* %step, metadata !6937, metadata !DIExpression()), !dbg !6946
  %call4 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call, %union.tree_node* %step) #6, !dbg !6958
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6937, metadata !DIExpression()), !dbg !6946
  store %union.tree_node* %call4, %union.tree_node** %step.addr, align 8, !dbg !6959
  br label %if.end5, !dbg !6960

if.end5:                                          ; preds = %if.then, %entry, %if.then2
  %1 = phi %union.tree_node* [ %step, %entry ], [ %call4, %if.then2 ], [ %step, %if.then ]
  %base.addr.1 = phi %union.tree_node* [ null, %entry ], [ %call3, %if.then2 ], [ %base, %if.then ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base.addr.1, metadata !6936, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 0, metadata !6942, metadata !DIExpression()), !dbg !6946
  %2 = and i32 %pos, -2, !dbg !6961
  %switch = icmp eq i32 %2, 2, !dbg !6961
  %tobool29 = icmp ne %union.tree_node* %base.addr.1, null, !dbg !6966
  br i1 %switch, label %if.end5.split.us, label %if.end5.if.end5.split_crit_edge, !dbg !6967

if.end5.if.end5.split_crit_edge:                  ; preds = %if.end5
  br i1 %tobool29, label %if.end5.split.split.us, label %if.end5.split.if.end5.split.split_crit_edge, !dbg !6967

if.end5.split.us:                                 ; preds = %if.end5
  br label %for.cond.us, !dbg !6967

for.cond.us:                                      ; preds = %for.inc.us, %if.end5.split.us
  %3 = phi %union.tree_node* [ %1, %if.end5.split.us ], [ %11, %for.inc.us ]
  %i.0.us = phi i32 [ 0, %if.end5.split.us ], [ %inc.us, %for.inc.us ], !dbg !6968
  %cand.0.us = phi %struct.iv_cand* [ null, %if.end5.split.us ], [ %call8.us, %for.inc.us ], !dbg !6946
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand.0.us, metadata !6943, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !6942, metadata !DIExpression()), !dbg !6946
  %call6.us = tail call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !6969
  %cmp7.us = icmp ult i32 %i.0.us, %call6.us, !dbg !6970
  br i1 %cmp7.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !6971

for.body.us:                                      ; preds = %for.cond.us
  %call8.us = tail call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %i.0.us) #7, !dbg !6972
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call8.us, metadata !6943, metadata !DIExpression()), !dbg !6946
  %pos9.us = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call8.us, i64 0, i32 2, !dbg !6973
  %4 = load i32, i32* %pos9.us, align 8, !dbg !6973
  %cmp10.us = icmp eq i32 %4, %pos, !dbg !6975
  br i1 %cmp10.us, label %if.end12.us, label %for.inc.us, !dbg !6976

if.end12.us:                                      ; preds = %for.body.us
  %incremented_at13.us = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call8.us, i64 0, i32 3, !dbg !6977
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %incremented_at13.us, align 8, !dbg !6977
  %cmp14.us = icmp eq %union.gimple_statement_d* %5, %incremented_at, !dbg !6978
  br i1 %cmp14.us, label %lor.lhs.false.us, label %for.inc.us, !dbg !6979

lor.lhs.false.us:                                 ; preds = %if.end12.us
  %ainc_use.us = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call8.us, i64 0, i32 9, !dbg !6980
  %6 = load %struct.iv_use*, %struct.iv_use** %ainc_use.us, align 8, !dbg !6980
  %cmp18.us = icmp eq %struct.iv_use* %6, %use, !dbg !6981
  br i1 %cmp18.us, label %if.end20.us, label %for.inc.us, !dbg !6982

if.end20.us:                                      ; preds = %lor.lhs.false.us
  %iv.us = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call8.us, i64 0, i32 6, !dbg !6983
  %7 = load %struct.iv*, %struct.iv** %iv.us, align 8, !dbg !6983
  %tobool21.us = icmp eq %struct.iv* %7, null, !dbg !6985
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6937, metadata !DIExpression()), !dbg !6946
  %tobool31.us = icmp ne %union.tree_node* %3, null, !dbg !6966
  %or.cond1.us = or i1 %tobool29, %tobool31.us, !dbg !6966
  br i1 %tobool21.us, label %if.then22.us, label %if.end28.us, !dbg !6986

if.end28.us:                                      ; preds = %if.end20.us
  br i1 %or.cond1.us, label %if.end33.us, label %for.inc.us, !dbg !6987

if.end33.us:                                      ; preds = %if.end28.us
  %base35.us = getelementptr inbounds %struct.iv, %struct.iv* %7, i64 0, i32 0, !dbg !6989
  %8 = load %union.tree_node*, %union.tree_node** %base35.us, align 8, !dbg !6989
  %call36.us = tail call i32 @operand_equal_p(%union.tree_node* %base.addr.1, %union.tree_node* %8, i32 0) #6, !dbg !6991
  %tobool37.us = icmp eq i32 %call36.us, 0, !dbg !6991
  br i1 %tobool37.us, label %for.inc.us, label %land.lhs.true38.us, !dbg !6992

land.lhs.true38.us:                               ; preds = %if.end33.us
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6937, metadata !DIExpression()), !dbg !6946
  %9 = load %struct.iv*, %struct.iv** %iv.us, align 8, !dbg !6993
  %step40.us = getelementptr inbounds %struct.iv, %struct.iv* %9, i64 0, i32 2, !dbg !6994
  %10 = load %union.tree_node*, %union.tree_node** %step40.us, align 8, !dbg !6994
  %call41.us = tail call i32 @operand_equal_p(%union.tree_node* %1, %union.tree_node* %10, i32 0) #6, !dbg !6995
  %tobool42.us = icmp eq i32 %call41.us, 0, !dbg !6995
  br i1 %tobool42.us, label %for.inc.us, label %for.end.us-lcssa.us, !dbg !6996

if.then22.us:                                     ; preds = %if.end20.us
  br i1 %or.cond1.us, label %for.inc.us, label %for.end.us-lcssa.us, !dbg !6997

for.inc.us:                                       ; preds = %if.then22.us, %land.lhs.true38.us, %if.end33.us, %if.end28.us, %lor.lhs.false.us, %if.end12.us, %for.body.us
  %11 = phi %union.tree_node* [ %3, %if.then22.us ], [ %1, %land.lhs.true38.us ], [ %3, %if.end33.us ], [ null, %if.end28.us ], [ %3, %lor.lhs.false.us ], [ %3, %if.end12.us ], [ %3, %for.body.us ]
  %inc.us = add i32 %i.0.us, 1, !dbg !7000
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !6942, metadata !DIExpression()), !dbg !6946
  br label %for.cond.us, !dbg !7001, !llvm.loop !7002

for.end.us-lcssa.us:                              ; preds = %if.then22.us, %land.lhs.true38.us, %for.cond.us
  %i.0.us.lcssa = phi i32 [ %i.0.us, %if.then22.us ], [ %i.0.us, %land.lhs.true38.us ], [ %i.0.us, %for.cond.us ], !dbg !6968
  %cand.1.ph.us = phi %struct.iv_cand* [ %call8.us, %land.lhs.true38.us ], [ %call8.us, %if.then22.us ], [ %cand.0.us, %for.cond.us ]
  call void @llvm.dbg.value(metadata i32 %i.0.us.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.us.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.us.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.us.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.us.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.us.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  br label %for.end, !dbg !7004

if.end5.split.if.end5.split.split_crit_edge:      ; preds = %if.end5.if.end5.split_crit_edge
  br label %for.cond, !dbg !6967

if.end5.split.split.us:                           ; preds = %if.end5.if.end5.split_crit_edge
  br label %for.cond.us6, !dbg !6967

for.cond.us6:                                     ; preds = %for.inc.us39, %if.end5.split.split.us
  %i.0.us7 = phi i32 [ 0, %if.end5.split.split.us ], [ %inc.us40, %for.inc.us39 ], !dbg !6968
  %cand.0.us8 = phi %struct.iv_cand* [ null, %if.end5.split.split.us ], [ %call8.us12, %for.inc.us39 ], !dbg !6946
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand.0.us8, metadata !6943, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.us7, metadata !6942, metadata !DIExpression()), !dbg !6946
  %call6.us9 = tail call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !6969
  %cmp7.us10 = icmp ult i32 %i.0.us7, %call6.us9, !dbg !6970
  br i1 %cmp7.us10, label %for.body.us11, label %for.end.us-lcssa.us-lcssa.us, !dbg !6971

for.body.us11:                                    ; preds = %for.cond.us6
  %call8.us12 = tail call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %i.0.us7) #7, !dbg !6972
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call8.us12, metadata !6943, metadata !DIExpression()), !dbg !6946
  %pos9.us13 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call8.us12, i64 0, i32 2, !dbg !6973
  %12 = load i32, i32* %pos9.us13, align 8, !dbg !6973
  %cmp10.us14 = icmp eq i32 %12, %pos, !dbg !6975
  br i1 %cmp10.us14, label %if.end12.us15, label %for.inc.us39, !dbg !6976

if.end12.us15:                                    ; preds = %for.body.us11
  %incremented_at13.us16 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call8.us12, i64 0, i32 3, !dbg !6977
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %incremented_at13.us16, align 8, !dbg !6977
  %cmp14.us17 = icmp eq %union.gimple_statement_d* %13, %incremented_at, !dbg !6978
  br i1 %cmp14.us17, label %lor.lhs.false.us18, label %for.inc.us39, !dbg !6979

lor.lhs.false.us18:                               ; preds = %if.end12.us15
  %iv.us23 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call8.us12, i64 0, i32 6, !dbg !6983
  %14 = load %struct.iv*, %struct.iv** %iv.us23, align 8, !dbg !6983
  %tobool21.us24 = icmp eq %struct.iv* %14, null, !dbg !6985
  br i1 %tobool21.us24, label %if.then22.us38, label %if.end28.us27, !dbg !6986

if.end28.us27:                                    ; preds = %lor.lhs.false.us18
  %base35.us30 = getelementptr inbounds %struct.iv, %struct.iv* %14, i64 0, i32 0, !dbg !6989
  %15 = load %union.tree_node*, %union.tree_node** %base35.us30, align 8, !dbg !6989
  %call36.us31 = tail call i32 @operand_equal_p(%union.tree_node* nonnull %base.addr.1, %union.tree_node* %15, i32 0) #6, !dbg !6991
  %tobool37.us32 = icmp eq i32 %call36.us31, 0, !dbg !6991
  br i1 %tobool37.us32, label %for.inc.us39, label %land.lhs.true38.us33, !dbg !6992

land.lhs.true38.us33:                             ; preds = %if.end28.us27
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6937, metadata !DIExpression()), !dbg !6946
  %16 = load %struct.iv*, %struct.iv** %iv.us23, align 8, !dbg !6993
  %step40.us35 = getelementptr inbounds %struct.iv, %struct.iv* %16, i64 0, i32 2, !dbg !6994
  %17 = load %union.tree_node*, %union.tree_node** %step40.us35, align 8, !dbg !6994
  %call41.us36 = tail call i32 @operand_equal_p(%union.tree_node* %1, %union.tree_node* %17, i32 0) #6, !dbg !6995
  %tobool42.us37 = icmp eq i32 %call41.us36, 0, !dbg !6995
  br i1 %tobool42.us37, label %for.inc.us39, label %for.end.us-lcssa.us-lcssa.us, !dbg !6996

if.then22.us38:                                   ; preds = %lor.lhs.false.us18
  br label %for.inc.us39, !dbg !6997

for.inc.us39:                                     ; preds = %if.then22.us38, %land.lhs.true38.us33, %if.end28.us27, %if.end12.us15, %for.body.us11
  %inc.us40 = add i32 %i.0.us7, 1, !dbg !7000
  call void @llvm.dbg.value(metadata i32 %inc.us40, metadata !6942, metadata !DIExpression()), !dbg !6946
  br label %for.cond.us6, !dbg !7001, !llvm.loop !7002

for.end.us-lcssa.us-lcssa.us:                     ; preds = %land.lhs.true38.us33, %for.cond.us6
  %i.0.us7.lcssa = phi i32 [ %i.0.us7, %land.lhs.true38.us33 ], [ %i.0.us7, %for.cond.us6 ], !dbg !6968
  %cand.1.ph.ph.us = phi %struct.iv_cand* [ %cand.0.us8, %for.cond.us6 ], [ %call8.us12, %land.lhs.true38.us33 ]
  call void @llvm.dbg.value(metadata i32 %i.0.us7.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.us7.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.us7.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.us7.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  br label %for.end.us-lcssa, !dbg !7004

for.cond:                                         ; preds = %for.inc, %if.end5.split.if.end5.split.split_crit_edge
  %18 = phi %union.tree_node* [ %1, %if.end5.split.if.end5.split.split_crit_edge ], [ %25, %for.inc ]
  %i.0 = phi i32 [ 0, %if.end5.split.if.end5.split.split_crit_edge ], [ %inc, %for.inc ], !dbg !6968
  %cand.0 = phi %struct.iv_cand* [ null, %if.end5.split.if.end5.split.split_crit_edge ], [ %call8, %for.inc ], !dbg !6946
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand.0, metadata !6943, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6942, metadata !DIExpression()), !dbg !6946
  %call6 = tail call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !6969
  %cmp7 = icmp ult i32 %i.0, %call6, !dbg !6970
  br i1 %cmp7, label %for.body, label %for.end.us-lcssa.us-lcssa, !dbg !6971

for.body:                                         ; preds = %for.cond
  %call8 = tail call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !6972
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call8, metadata !6943, metadata !DIExpression()), !dbg !6946
  %pos9 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call8, i64 0, i32 2, !dbg !6973
  %19 = load i32, i32* %pos9, align 8, !dbg !6973
  %cmp10 = icmp eq i32 %19, %pos, !dbg !6975
  br i1 %cmp10, label %if.end12, label %for.inc, !dbg !6976

if.end12:                                         ; preds = %for.body
  %incremented_at13 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call8, i64 0, i32 3, !dbg !6977
  %20 = load %union.gimple_statement_d*, %union.gimple_statement_d** %incremented_at13, align 8, !dbg !6977
  %cmp14 = icmp eq %union.gimple_statement_d* %20, %incremented_at, !dbg !6978
  br i1 %cmp14, label %lor.lhs.false, label %for.inc, !dbg !6979

lor.lhs.false:                                    ; preds = %if.end12
  %iv = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call8, i64 0, i32 6, !dbg !6983
  %21 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !6983
  %tobool21 = icmp eq %struct.iv* %21, null, !dbg !6985
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !6937, metadata !DIExpression()), !dbg !6946
  %tobool31 = icmp ne %union.tree_node* %18, null, !dbg !6966
  br i1 %tobool21, label %if.then22, label %if.end28, !dbg !6986

if.then22:                                        ; preds = %lor.lhs.false
  br i1 %tobool31, label %for.inc, label %for.end.us-lcssa.us-lcssa, !dbg !6997

if.end28:                                         ; preds = %lor.lhs.false
  br i1 %tobool31, label %if.end33, label %for.inc, !dbg !6987

if.end33:                                         ; preds = %if.end28
  %base35 = getelementptr inbounds %struct.iv, %struct.iv* %21, i64 0, i32 0, !dbg !6989
  %22 = load %union.tree_node*, %union.tree_node** %base35, align 8, !dbg !6989
  %call36 = tail call i32 @operand_equal_p(%union.tree_node* null, %union.tree_node* %22, i32 0) #6, !dbg !6991
  %tobool37 = icmp eq i32 %call36, 0, !dbg !6991
  br i1 %tobool37, label %for.inc, label %land.lhs.true38, !dbg !6992

land.lhs.true38:                                  ; preds = %if.end33
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6937, metadata !DIExpression()), !dbg !6946
  %23 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !6993
  %step40 = getelementptr inbounds %struct.iv, %struct.iv* %23, i64 0, i32 2, !dbg !6994
  %24 = load %union.tree_node*, %union.tree_node** %step40, align 8, !dbg !6994
  %call41 = tail call i32 @operand_equal_p(%union.tree_node* %1, %union.tree_node* %24, i32 0) #6, !dbg !6995
  %tobool42 = icmp eq i32 %call41, 0, !dbg !6995
  br i1 %tobool42, label %for.inc, label %for.end.us-lcssa.us-lcssa, !dbg !6996

for.inc:                                          ; preds = %land.lhs.true38, %if.end33, %if.end12, %for.body, %if.end28, %if.then22
  %25 = phi %union.tree_node* [ %1, %land.lhs.true38 ], [ %18, %if.end33 ], [ %18, %if.end12 ], [ %18, %for.body ], [ null, %if.end28 ], [ %18, %if.then22 ]
  %inc = add i32 %i.0, 1, !dbg !7000
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6942, metadata !DIExpression()), !dbg !6946
  br label %for.cond, !dbg !7001, !llvm.loop !7002

for.end.us-lcssa.us-lcssa:                        ; preds = %land.lhs.true38, %if.then22, %for.cond
  %i.0.lcssa42 = phi i32 [ %i.0, %land.lhs.true38 ], [ %i.0, %if.then22 ], [ %i.0, %for.cond ], !dbg !6968
  %cand.1.ph.ph = phi %struct.iv_cand* [ %cand.0, %for.cond ], [ %call8, %if.then22 ], [ %call8, %land.lhs.true38 ]
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa42, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa42, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa42, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa42, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa42, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa42, metadata !6942, metadata !DIExpression()), !dbg !6946
  br label %for.end.us-lcssa, !dbg !7004

for.end.us-lcssa:                                 ; preds = %for.end.us-lcssa.us-lcssa.us, %for.end.us-lcssa.us-lcssa
  %i.0.lcssa.ph = phi i32 [ %i.0.lcssa42, %for.end.us-lcssa.us-lcssa ], [ %i.0.us7.lcssa, %for.end.us-lcssa.us-lcssa.us ]
  %cand.1.ph = phi %struct.iv_cand* [ %cand.1.ph.ph, %for.end.us-lcssa.us-lcssa ], [ %cand.1.ph.ph.us, %for.end.us-lcssa.us-lcssa.us ]
  br label %for.end, !dbg !7004

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %i.0.lcssa = phi i32 [ %i.0.lcssa.ph, %for.end.us-lcssa ], [ %i.0.us.lcssa, %for.end.us-lcssa.us ], !dbg !6968
  %cand.1 = phi %struct.iv_cand* [ %cand.1.ph, %for.end.us-lcssa ], [ %cand.1.ph.us, %for.end.us-lcssa.us ], !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand.1, metadata !6943, metadata !DIExpression()), !dbg !6946
  %call45 = tail call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !7004
  %cmp46 = icmp eq i32 %i.0.lcssa, %call45, !dbg !7006
  br i1 %cmp46, label %if.then47, label %if.end91, !dbg !7007

if.then47:                                        ; preds = %for.end
  %call48 = tail call i8* @xcalloc(i64 1, i64 72) #6, !dbg !7008
  %26 = bitcast i8* %call48 to %struct.iv_cand*, !dbg !7008
  call void @llvm.dbg.value(metadata %struct.iv_cand* %26, metadata !6943, metadata !DIExpression()), !dbg !6946
  %id = bitcast i8* %call48 to i32*, !dbg !7010
  store i32 %i.0.lcssa, i32* %id, align 8, !dbg !7011
  %27 = load %union.tree_node*, %union.tree_node** %step.addr, align 8, !dbg !7012
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !6937, metadata !DIExpression()), !dbg !6946
  %tobool51 = icmp ne %union.tree_node* %27, null, !dbg !7012
  %or.cond2 = or i1 %tobool29, %tobool51, !dbg !7014
  br i1 %or.cond2, label %if.else, label %if.then52, !dbg !7014

if.then52:                                        ; preds = %if.then47
  %iv53 = getelementptr inbounds i8, i8* %call48, i64 40, !dbg !7015
  %28 = bitcast i8* %iv53 to %struct.iv**, !dbg !7015
  store %struct.iv* null, %struct.iv** %28, align 8, !dbg !7016
  br label %if.end56, !dbg !7017

if.else:                                          ; preds = %if.then47
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !6937, metadata !DIExpression()), !dbg !6946
  %call54 = tail call fastcc %struct.iv* @alloc_iv(%union.tree_node* %base.addr.1, %union.tree_node* %27) #7, !dbg !7018
  %iv55 = getelementptr inbounds i8, i8* %call48, i64 40, !dbg !7019
  %29 = bitcast i8* %iv55 to %struct.iv**, !dbg !7019
  store %struct.iv* %call54, %struct.iv** %29, align 8, !dbg !7020
  br label %if.end56

if.end56:                                         ; preds = %if.else, %if.then52
  %30 = phi %struct.iv* [ %call54, %if.else ], [ null, %if.then52 ]
  %pos57 = getelementptr inbounds i8, i8* %call48, i64 8, !dbg !7021
  %31 = bitcast i8* %pos57 to i32*, !dbg !7021
  store i32 %pos, i32* %31, align 8, !dbg !7022
  %cmp58 = icmp eq i32 %pos, 4, !dbg !7023
  br i1 %cmp58, label %if.end67, label %land.lhs.true59, !dbg !7025

land.lhs.true59:                                  ; preds = %if.end56
  %tobool61 = icmp eq %struct.iv* %30, null, !dbg !7026
  br i1 %tobool61, label %if.end67, label %if.then62, !dbg !7027

if.then62:                                        ; preds = %land.lhs.true59
  %type64 = getelementptr inbounds %union.tree_node, %union.tree_node* %base.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7028
  %32 = load %union.tree_node*, %union.tree_node** %type64, align 8, !dbg !7028
  %call65 = tail call %union.tree_node* @create_tmp_var_raw(%union.tree_node* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !7030
  %var_before = getelementptr inbounds i8, i8* %call48, i64 24, !dbg !7031
  %33 = bitcast i8* %var_before to %union.tree_node**, !dbg !7031
  store %union.tree_node* %call65, %union.tree_node** %33, align 8, !dbg !7032
  %.cast = ptrtoint %union.tree_node* %call65 to i64, !dbg !7033
  %var_after = getelementptr inbounds i8, i8* %call48, i64 32, !dbg !7034
  %34 = bitcast i8* %var_after to i64*, !dbg !7035
  store i64 %.cast, i64* %34, align 8, !dbg !7035
  br label %if.end67, !dbg !7036

if.end67:                                         ; preds = %land.lhs.true59, %if.end56, %if.then62
  %35 = getelementptr inbounds i8, i8* %call48, i64 4, !dbg !7037
  store i8 %important, i8* %35, align 4, !dbg !7038
  %incremented_at69 = getelementptr inbounds i8, i8* %call48, i64 16, !dbg !7039
  %36 = bitcast i8* %incremented_at69 to %union.gimple_statement_d**, !dbg !7039
  store %union.gimple_statement_d* %incremented_at, %union.gimple_statement_d** %36, align 8, !dbg !7040
  %iv_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 7, !dbg !7041
  %call70 = tail call fastcc %struct.iv_cand** @VEC_iv_cand_p_heap_safe_push(%struct.VEC_iv_cand_p_heap** nonnull %iv_candidates, %struct.iv_cand* %26) #7, !dbg !7041
  %37 = load %union.tree_node*, %union.tree_node** %step.addr, align 8, !dbg !7042
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !6937, metadata !DIExpression()), !dbg !6946
  %tobool71 = icmp eq %union.tree_node* %37, null, !dbg !7042
  br i1 %tobool71, label %if.end77, label %land.lhs.true72, !dbg !7044

land.lhs.true72:                                  ; preds = %if.end67
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7044
  %bf.load = load i64, i64* %38, align 8, !dbg !7045
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !7046
  %cmp74 = icmp eq i64 %bf.cast5, 23, !dbg !7046
  br i1 %cmp74, label %if.end77, label %if.then75, !dbg !7047

if.then75:                                        ; preds = %land.lhs.true72
  store %struct.ivopts_data* %data, %struct.ivopts_data** @fd_ivopts_data, align 8, !dbg !7048
  %depends_on = getelementptr inbounds i8, i8* %call48, i64 64, !dbg !7050
  call void @llvm.dbg.value(metadata %union.tree_node** %step.addr, metadata !6937, metadata !DIExpression(DW_OP_deref)), !dbg !6946
  %call76 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %step.addr, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_depends, i8* nonnull %depends_on, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !7050
  br label %if.end77, !dbg !7051

if.end77:                                         ; preds = %land.lhs.true72, %if.end67, %if.then75
  %ainc_use82 = getelementptr inbounds i8, i8* %call48, i64 56, !dbg !7052
  %39 = bitcast i8* %ainc_use82 to %struct.iv_use**, !dbg !7052
  br i1 %switch, label %if.then81, label %if.else83, !dbg !7054

if.then81:                                        ; preds = %if.end77
  br label %if.end85, !dbg !7055

if.else83:                                        ; preds = %if.end77
  br label %if.end85

if.end85:                                         ; preds = %if.else83, %if.then81
  %storemerge = phi %struct.iv_use* [ null, %if.else83 ], [ %use, %if.then81 ], !dbg !7052
  store %struct.iv_use* %storemerge, %struct.iv_use** %39, align 8, !dbg !7052
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7056
  %tobool86 = icmp eq %struct._IO_FILE* %40, null, !dbg !7056
  br i1 %tobool86, label %if.end91, label %land.lhs.true87, !dbg !7058

land.lhs.true87:                                  ; preds = %if.end85
  %41 = load i32, i32* @dump_flags, align 4, !dbg !7059
  %and = and i32 %41, 8, !dbg !7060
  %tobool88 = icmp eq i32 %and, 0, !dbg !7060
  br i1 %tobool88, label %if.end91, label %if.then89, !dbg !7061

if.then89:                                        ; preds = %land.lhs.true87
  call void @dump_cand(%struct._IO_FILE* nonnull %40, %struct.iv_cand* %26) #7, !dbg !7062
  br label %if.end91, !dbg !7062

if.end91:                                         ; preds = %land.lhs.true87, %if.end85, %if.then89, %for.end
  %cand.2 = phi %struct.iv_cand* [ %cand.1, %for.end ], [ %26, %if.then89 ], [ %26, %land.lhs.true87 ], [ %26, %if.end85 ], !dbg !6946
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand.2, metadata !6943, metadata !DIExpression()), !dbg !6946
  %tobool92 = icmp eq i8 %important, 0, !dbg !7063
  br i1 %tobool92, label %if.end106, label %land.lhs.true93, !dbg !7065

land.lhs.true93:                                  ; preds = %if.end91
  %important94 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand.2, i64 0, i32 1, !dbg !7066
  %42 = load i8, i8* %important94, align 4, !dbg !7066
  %tobool95 = icmp eq i8 %42, 0, !dbg !7067
  br i1 %tobool95, label %if.then96, label %if.end106, !dbg !7068

if.then96:                                        ; preds = %land.lhs.true93
  store i8 1, i8* %important94, align 4, !dbg !7069
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7071
  %tobool98 = icmp eq %struct._IO_FILE* %43, null, !dbg !7071
  br i1 %tobool98, label %if.end106, label %land.lhs.true99, !dbg !7073

land.lhs.true99:                                  ; preds = %if.then96
  %44 = load i32, i32* @dump_flags, align 4, !dbg !7074
  %and100 = and i32 %44, 8, !dbg !7075
  %tobool101 = icmp eq i32 %and100, 0, !dbg !7075
  br i1 %tobool101, label %if.end106, label %if.then102, !dbg !7076

if.then102:                                       ; preds = %land.lhs.true99
  %id103 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand.2, i64 0, i32 0, !dbg !7077
  %45 = load i32, i32* %id103, align 8, !dbg !7077
  %call104 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %43, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0), i32 %45) #6, !dbg !7078
  br label %if.end106, !dbg !7078

if.end106:                                        ; preds = %land.lhs.true99, %if.then96, %land.lhs.true93, %if.end91, %if.then102
  %tobool107 = icmp eq %struct.iv_use* %use, null, !dbg !7079
  br i1 %tobool107, label %if.end119, label %if.then108, !dbg !7081

if.then108:                                       ; preds = %if.end106
  %related_cands = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 5, !dbg !7082
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %related_cands, align 8, !dbg !7082
  %call109 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %46, i32 %i.0.lcssa) #6, !dbg !7084
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7085
  %tobool110 = icmp eq %struct._IO_FILE* %47, null, !dbg !7085
  br i1 %tobool110, label %if.end119, label %land.lhs.true111, !dbg !7087

land.lhs.true111:                                 ; preds = %if.then108
  %48 = load i32, i32* @dump_flags, align 4, !dbg !7088
  %and112 = and i32 %48, 8, !dbg !7089
  %tobool113 = icmp eq i32 %and112, 0, !dbg !7089
  br i1 %tobool113, label %if.end119, label %if.then114, !dbg !7090

if.then114:                                       ; preds = %land.lhs.true111
  %id115 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand.2, i64 0, i32 0, !dbg !7091
  %49 = load i32, i32* %id115, align 8, !dbg !7091
  %id116 = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 0, !dbg !7092
  %50 = load i32, i32* %id116, align 8, !dbg !7092
  %call117 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %47, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.44, i64 0, i64 0), i32 %49, i32 %50) #6, !dbg !7093
  br label %if.end119, !dbg !7093

if.end119:                                        ; preds = %land.lhs.true111, %if.then108, %if.end106, %if.then114
  ret %struct.iv_cand* %cand.2, !dbg !7094
}

declare dso_local %struct.basic_block_def* @ip_end_pos(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @allow_ip_end_pos_p(%struct.loop* %loop) unnamed_addr #5 !dbg !7095 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !7099, metadata !DIExpression()), !dbg !7100
  %call = tail call %struct.basic_block_def* @ip_normal_pos(%struct.loop* %loop) #6, !dbg !7101
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !7101
  br i1 %tobool, label %return, label %if.end, !dbg !7103

if.end:                                           ; preds = %entry
  %call1 = tail call %struct.basic_block_def* @ip_end_pos(%struct.loop* %loop) #6, !dbg !7104
  %call2 = tail call zeroext i8 @empty_block_p(%struct.basic_block_def* %call1) #6, !dbg !7106
  %tobool3 = icmp eq i8 %call2, 0, !dbg !7106
  %. = zext i1 %tobool3 to i8, !dbg !7100
  br label %return, !dbg !7100

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i8 [ 1, %entry ], [ %., %if.end ], !dbg !7100
  ret i8 %retval.0, !dbg !7107
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_autoinc_candidates(%struct.ivopts_data* %data, %union.tree_node* %base, %union.tree_node* %step, i8 zeroext %important, %struct.iv_use* %use) unnamed_addr #5 !dbg !7108 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !7110, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !7111, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata %union.tree_node* %step, metadata !7112, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata i8 %important, metadata !7113, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !7114, metadata !DIExpression()), !dbg !7118
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !7119
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7119
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %0) #7, !dbg !7120
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !7115, metadata !DIExpression()), !dbg !7118
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !7121
  %1 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !7121
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !7123
  %2 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !7123
  %cmp = icmp eq %struct.loop* %1, %2, !dbg !7124
  br i1 %cmp, label %lor.lhs.false, label %cleanup.cont, !dbg !7125

lor.lhs.false:                                    ; preds = %entry
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %1, i64 0, i32 3, !dbg !7126
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !7126
  %call2 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %3, %struct.basic_block_def* %call) #6, !dbg !7127
  %tobool = icmp eq i8 %call2, 0, !dbg !7127
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false3, !dbg !7128

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7129
  %call5 = tail call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %4) #6, !dbg !7130
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7130
  br i1 %tobool6, label %lor.lhs.false7, label %cleanup.cont, !dbg !7131

lor.lhs.false7:                                   ; preds = %lor.lhs.false3
  %call8 = tail call zeroext i8 @cst_and_fits_in_hwi(%union.tree_node* %step) #6, !dbg !7132
  %tobool9 = icmp eq i8 %call8, 0, !dbg !7132
  br i1 %tobool9, label %cleanup.cont, label %if.end, !dbg !7133

if.end:                                           ; preds = %lor.lhs.false7
  %call10 = tail call i64 @int_cst_value(%union.tree_node* %step) #6, !dbg !7134
  call void @llvm.dbg.value(metadata i64 %call10, metadata !7117, metadata !DIExpression()), !dbg !7118
  %op_p = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 4, !dbg !7135
  %5 = bitcast %union.tree_node*** %op_p to %struct.tree_common***, !dbg !7135
  %6 = load %struct.tree_common**, %struct.tree_common*** %5, align 8, !dbg !7135
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !7135
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !7135
  %8 = bitcast %union.tree_node** %type to i64**, !dbg !7135
  %9 = load i64*, i64** %8, align 8, !dbg !7135
  %bf.load = load i64, i64* %9, align 8, !dbg !7135
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7135
  %cmp12 = icmp eq i64 %bf.cast1, 14, !dbg !7135
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !7135

cond.true:                                        ; preds = %if.end
  %10 = bitcast i64* %9 to %union.tree_node*, !dbg !7135
  %call17 = tail call i32 @vector_type_mode(%union.tree_node* %10) #6, !dbg !7135
  br label %cleanup.cont, !dbg !7135

cond.false:                                       ; preds = %if.end
  br label %cleanup.cont, !dbg !7135

cleanup.cont:                                     ; preds = %lor.lhs.false7, %lor.lhs.false3, %lor.lhs.false, %entry, %cond.false, %cond.true
  ret void, !dbg !7136
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @generic_type_for(%union.tree_node* %type) unnamed_addr #5 !dbg !7137 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7139, metadata !DIExpression()), !dbg !7140
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7141
  %bf.load = load i64, i64* %0, align 8, !dbg !7141
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7141
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !7141
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7141

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 12, !dbg !7141
  br i1 %cmp5, label %if.then, label %if.end, !dbg !7143

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = tail call %union.tree_node* @unsigned_type_for(%union.tree_node* %type) #6, !dbg !7144
  br label %return, !dbg !7145

if.end:                                           ; preds = %lor.lhs.false
  %bf.cast93 = and i64 %bf.load, 2097152, !dbg !7146
  %tobool = icmp eq i64 %bf.cast93, 0, !dbg !7146
  br i1 %tobool, label %if.end11, label %return, !dbg !7148

if.end11:                                         ; preds = %if.end
  %call12 = tail call %union.tree_node* @unsigned_type_for(%union.tree_node* %type) #6, !dbg !7149
  br label %return, !dbg !7150

return:                                           ; preds = %if.end, %if.end11, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call12, %if.end11 ], [ %type, %if.end ], !dbg !7140
  ret %union.tree_node* %retval.0, !dbg !7151
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) unnamed_addr #0 !dbg !7152 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !7154, metadata !DIExpression()), !dbg !7155
  %iv_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 7, !dbg !7156
  %0 = load %struct.VEC_iv_cand_p_heap*, %struct.VEC_iv_cand_p_heap** %iv_candidates, align 8, !dbg !7156
  %tobool = icmp eq %struct.VEC_iv_cand_p_heap* %0, null, !dbg !7156
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7156

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_iv_cand_p_heap, %struct.VEC_iv_cand_p_heap* %0, i64 0, i32 0, !dbg !7156
  br label %cond.end, !dbg !7156

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_iv_cand_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7156
  %call = tail call fastcc i32 @VEC_iv_cand_p_base_length(%struct.VEC_iv_cand_p_base* %cond) #7, !dbg !7156
  ret i32 %call, !dbg !7157
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %i) unnamed_addr #0 !dbg !7158 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !7162, metadata !DIExpression()), !dbg !7164
  call void @llvm.dbg.value(metadata i32 %i, metadata !7163, metadata !DIExpression()), !dbg !7164
  %iv_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 7, !dbg !7165
  %0 = load %struct.VEC_iv_cand_p_heap*, %struct.VEC_iv_cand_p_heap** %iv_candidates, align 8, !dbg !7165
  %tobool = icmp eq %struct.VEC_iv_cand_p_heap* %0, null, !dbg !7165
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7165

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_iv_cand_p_heap, %struct.VEC_iv_cand_p_heap* %0, i64 0, i32 0, !dbg !7165
  br label %cond.end, !dbg !7165

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_iv_cand_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7165
  %call = tail call fastcc %struct.iv_cand* @VEC_iv_cand_p_base_index(%struct.VEC_iv_cand_p_base* %cond, i32 %i) #7, !dbg !7165
  ret %struct.iv_cand* %call, !dbg !7166
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_tmp_var_raw(%union.tree_node*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.iv_cand** @VEC_iv_cand_p_heap_safe_push(%struct.VEC_iv_cand_p_heap** %vec_, %struct.iv_cand* %obj_) unnamed_addr #0 !dbg !7167 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_cand_p_heap** %vec_, metadata !7173, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata %struct.iv_cand* %obj_, metadata !7174, metadata !DIExpression()), !dbg !7175
  %call = tail call fastcc i32 @VEC_iv_cand_p_heap_reserve(%struct.VEC_iv_cand_p_heap** %vec_, i32 1) #7, !dbg !7176
  %0 = load %struct.VEC_iv_cand_p_heap*, %struct.VEC_iv_cand_p_heap** %vec_, align 8, !dbg !7176
  %tobool = icmp eq %struct.VEC_iv_cand_p_heap* %0, null, !dbg !7176
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7176

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_iv_cand_p_heap, %struct.VEC_iv_cand_p_heap* %0, i64 0, i32 0, !dbg !7176
  br label %cond.end, !dbg !7176

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_iv_cand_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7176
  %call1 = tail call fastcc %struct.iv_cand** @VEC_iv_cand_p_base_quick_push(%struct.VEC_iv_cand_p_base* %cond, %struct.iv_cand* %obj_) #7, !dbg !7176
  ret %struct.iv_cand** %call1, !dbg !7176
}

declare dso_local %union.tree_node* @walk_tree_1(%union.tree_node**, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @find_depends(%union.tree_node** %expr_p, i32* %ws, i8* %data) #5 !dbg !7177 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !7181, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i32* %ws, metadata !7182, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i8* %data, metadata !7183, metadata !DIExpression()), !dbg !7186
  %0 = bitcast i8* %data to %struct.bitmap_head_def**, !dbg !7187
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %0, metadata !7184, metadata !DIExpression()), !dbg !7186
  %1 = bitcast %union.tree_node** %expr_p to i64**, !dbg !7188
  %2 = load i64*, i64** %1, align 8, !dbg !7188
  %bf.load = load i64, i64* %2, align 8, !dbg !7188
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7190
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !7190
  br i1 %cmp, label %if.end, label %cleanup, !dbg !7191

if.end:                                           ; preds = %entry
  %3 = bitcast i64* %2 to %union.tree_node*, !dbg !7191
  %4 = load %struct.ivopts_data*, %struct.ivopts_data** @fd_ivopts_data, align 8, !dbg !7192
  %call = tail call fastcc %struct.version_info* @name_info(%struct.ivopts_data* %4, %union.tree_node* %3) #7, !dbg !7193
  call void @llvm.dbg.value(metadata %struct.version_info* %call, metadata !7185, metadata !DIExpression()), !dbg !7186
  %inv_id = getelementptr inbounds %struct.version_info, %struct.version_info* %call, i64 0, i32 3, !dbg !7194
  %5 = load i32, i32* %inv_id, align 4, !dbg !7194
  %tobool = icmp eq i32 %5, 0, !dbg !7196
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !7197

lor.lhs.false:                                    ; preds = %if.end
  %has_nonlin_use = getelementptr inbounds %struct.version_info, %struct.version_info* %call, i64 0, i32 2, !dbg !7198
  %6 = load i8, i8* %has_nonlin_use, align 8, !dbg !7198
  %tobool1 = icmp eq i8 %6, 0, !dbg !7199
  br i1 %tobool1, label %if.end3, label %cleanup, !dbg !7200

if.end3:                                          ; preds = %lor.lhs.false
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, align 8, !dbg !7201
  %tobool4 = icmp eq %struct.bitmap_head_def* %7, null, !dbg !7201
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !7203

if.then5:                                         ; preds = %if.end3
  %call6 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7204
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** %0, align 8, !dbg !7205
  %.pre = load i32, i32* %inv_id, align 4, !dbg !7206
  br label %if.end7, !dbg !7207

if.end7:                                          ; preds = %if.end3, %if.then5
  %8 = phi i32 [ %5, %if.end3 ], [ %.pre, %if.then5 ], !dbg !7206
  %9 = phi %struct.bitmap_head_def* [ %7, %if.end3 ], [ %call6, %if.then5 ], !dbg !7208
  %call9 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %9, i32 %8) #6, !dbg !7209
  br label %cleanup, !dbg !7210

cleanup:                                          ; preds = %lor.lhs.false, %if.end, %entry, %if.end7
  ret %union.tree_node* null, !dbg !7211
}

declare dso_local %union.tree_node* @unsigned_type_for(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_iv_cand_p_base_length(%struct.VEC_iv_cand_p_base* %vec_) unnamed_addr #0 !dbg !7212 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_cand_p_base* %vec_, metadata !7218, metadata !DIExpression()), !dbg !7219
  %tobool = icmp eq %struct.VEC_iv_cand_p_base* %vec_, null, !dbg !7220
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7220

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_iv_cand_p_base, %struct.VEC_iv_cand_p_base* %vec_, i64 0, i32 0, !dbg !7220
  %0 = load i32, i32* %num, align 8, !dbg !7220
  br label %cond.end, !dbg !7220

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !7220
  ret i32 %cond, !dbg !7220
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.iv_cand* @VEC_iv_cand_p_base_index(%struct.VEC_iv_cand_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !7221 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_cand_p_base* %vec_, metadata !7225, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7226, metadata !DIExpression()), !dbg !7227
  br label %land.end, !dbg !7228

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !7228
  %arrayidx = getelementptr inbounds %struct.VEC_iv_cand_p_base, %struct.VEC_iv_cand_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7228
  %0 = load %struct.iv_cand*, %struct.iv_cand** %arrayidx, align 8, !dbg !7228
  ret %struct.iv_cand* %0, !dbg !7228
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_iv_cand_p_heap_reserve(%struct.VEC_iv_cand_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7229 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_cand_p_heap** %vec_, metadata !7233, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.value(metadata i32 1, metadata !7234, metadata !DIExpression()), !dbg !7236
  %0 = load %struct.VEC_iv_cand_p_heap*, %struct.VEC_iv_cand_p_heap** %vec_, align 8, !dbg !7237
  %tobool = icmp eq %struct.VEC_iv_cand_p_heap* %0, null, !dbg !7237
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7237

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_iv_cand_p_heap, %struct.VEC_iv_cand_p_heap* %0, i64 0, i32 0, !dbg !7237
  br label %cond.end, !dbg !7237

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_iv_cand_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7237
  %call = tail call fastcc i32 @VEC_iv_cand_p_base_space(%struct.VEC_iv_cand_p_base* %cond, i32 1) #7, !dbg !7237
  %tobool1 = icmp eq i32 %call, 0, !dbg !7237
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7237
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7235, metadata !DIExpression()), !dbg !7236
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7237

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_iv_cand_p_heap** %vec_ to i8**, !dbg !7238
  %2 = load i8*, i8** %1, align 8, !dbg !7238
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !7238
  store i8* %call3, i8** %1, align 8, !dbg !7238
  br label %if.end, !dbg !7238

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7237
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.iv_cand** @VEC_iv_cand_p_base_quick_push(%struct.VEC_iv_cand_p_base* %vec_, %struct.iv_cand* %obj_) unnamed_addr #0 !dbg !7240 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_cand_p_base* %vec_, metadata !7245, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata %struct.iv_cand* %obj_, metadata !7246, metadata !DIExpression()), !dbg !7248
  %num1 = getelementptr inbounds %struct.VEC_iv_cand_p_base, %struct.VEC_iv_cand_p_base* %vec_, i64 0, i32 0, !dbg !7249
  %0 = load i32, i32* %num1, align 8, !dbg !7249
  %inc = add i32 %0, 1, !dbg !7249
  store i32 %inc, i32* %num1, align 8, !dbg !7249
  %idxprom = zext i32 %0 to i64, !dbg !7249
  %arrayidx = getelementptr inbounds %struct.VEC_iv_cand_p_base, %struct.VEC_iv_cand_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7249
  call void @llvm.dbg.value(metadata %struct.iv_cand** %arrayidx, metadata !7247, metadata !DIExpression()), !dbg !7248
  store %struct.iv_cand* %obj_, %struct.iv_cand** %arrayidx, align 8, !dbg !7249
  ret %struct.iv_cand** %arrayidx, !dbg !7249
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_iv_cand_p_base_space(%struct.VEC_iv_cand_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7250 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_cand_p_base* %vec_, metadata !7254, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i32 1, metadata !7255, metadata !DIExpression()), !dbg !7256
  %tobool = icmp eq %struct.VEC_iv_cand_p_base* %vec_, null, !dbg !7257
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7257

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_iv_cand_p_base, %struct.VEC_iv_cand_p_base* %vec_, i64 0, i32 1, !dbg !7257
  %0 = load i32, i32* %alloc, align 4, !dbg !7257
  %num = getelementptr inbounds %struct.VEC_iv_cand_p_base, %struct.VEC_iv_cand_p_base* %vec_, i64 0, i32 0, !dbg !7257
  %1 = load i32, i32* %num, align 8, !dbg !7257
  %cmp1 = icmp ne i32 %0, %1, !dbg !7257
  %phitmp = zext i1 %cmp1 to i32, !dbg !7257
  br label %cond.end, !dbg !7257

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7257

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !7257
}

declare dso_local zeroext i8 @empty_block_p(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @cst_and_fits_in_hwi(%union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @int_cst_value(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_old_iv_candidates(%struct.ivopts_data* %data, %struct.iv* %iv) unnamed_addr #5 !dbg !7258 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !7262, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.value(metadata %struct.iv* %iv, metadata !7263, metadata !DIExpression()), !dbg !7267
  %base = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 0, !dbg !7268
  %0 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !7268
  %step = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 2, !dbg !7269
  %1 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !7269
  tail call fastcc void @add_candidate(%struct.ivopts_data* %data, %union.tree_node* %0, %union.tree_node* %1, i8 zeroext 1, %struct.iv_use* null) #7, !dbg !7270
  %2 = bitcast %struct.iv* %iv to %struct.tree_common**, !dbg !7271
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !7271
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !7271
  %4 = bitcast %union.tree_node** %type to i64**, !dbg !7271
  %5 = load i64*, i64** %4, align 8, !dbg !7271
  %bf.load = load i64, i64* %5, align 8, !dbg !7271
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7271
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !7271
  %6 = bitcast i64* %5 to %union.tree_node*, !dbg !7271
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7271

lor.lhs.false:                                    ; preds = %entry
  %cmp10 = icmp eq i64 %bf.cast1, 12, !dbg !7271
  br i1 %cmp10, label %if.then, label %if.else, !dbg !7273

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = tail call %union.tree_node* @size_int_kind(i64 0, i32 0) #6, !dbg !7274
  %7 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !7275
  tail call fastcc void @add_candidate(%struct.ivopts_data* %data, %union.tree_node* %call, %union.tree_node* %7, i8 zeroext 1, %struct.iv_use* null) #7, !dbg !7276
  br label %if.end, !dbg !7276

if.else:                                          ; preds = %lor.lhs.false
  %call15 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %6, i64 0) #6, !dbg !7277
  %8 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !7278
  tail call fastcc void @add_candidate(%struct.ivopts_data* %data, %union.tree_node* %call15, %union.tree_node* %8, i8 zeroext 1, %struct.iv_use* null) #7, !dbg !7279
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %ssa_name = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 3, !dbg !7280
  %9 = bitcast %union.tree_node** %ssa_name to %struct.tree_ssa_name**, !dbg !7280
  %10 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %9, align 8, !dbg !7280
  %def_stmt = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %10, i64 0, i32 2, !dbg !7280
  %11 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !7280
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %11, metadata !7264, metadata !DIExpression()), !dbg !7267
  %call18 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %11) #7, !dbg !7281
  %cmp19 = icmp eq i32 %call18, 16, !dbg !7283
  br i1 %cmp19, label %if.then20, label %if.end30, !dbg !7284

if.then20:                                        ; preds = %if.end
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !7285
  %12 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !7285
  %call21 = tail call %struct.edge_def* @loop_latch_edge(%struct.loop* %12) #6, !dbg !7285
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call21, i64 0, i32 6, !dbg !7285
  %13 = load i32, i32* %dest_idx, align 4, !dbg !7285
  %call22 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %11, i32 %13) #7, !dbg !7285
  %call23 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call22) #7, !dbg !7285
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !7265, metadata !DIExpression()), !dbg !7267
  %14 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !7287
  %15 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !7288
  %def_stmt27 = getelementptr inbounds %union.tree_node, %union.tree_node* %call23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7289
  %16 = bitcast %union.tree_node** %def_stmt27 to %union.gimple_statement_d**, !dbg !7289
  %17 = load %union.gimple_statement_d*, %union.gimple_statement_d** %16, align 8, !dbg !7289
  %call28 = tail call fastcc %struct.iv_cand* @add_candidate_1(%struct.ivopts_data* %data, %union.tree_node* %14, %union.tree_node* %15, i8 zeroext 1, i32 4, %struct.iv_use* null, %union.gimple_statement_d* %17) #7, !dbg !7290
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call28, metadata !7266, metadata !DIExpression()), !dbg !7267
  %18 = bitcast %union.tree_node** %ssa_name to i64*, !dbg !7291
  %19 = load i64, i64* %18, align 8, !dbg !7291
  %var_before = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call28, i64 0, i32 4, !dbg !7292
  %20 = bitcast %union.tree_node** %var_before to i64*, !dbg !7293
  store i64 %19, i64* %20, align 8, !dbg !7293
  %var_after = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call28, i64 0, i32 5, !dbg !7294
  store %union.tree_node* %call23, %union.tree_node** %var_after, align 8, !dbg !7295
  br label %if.end30, !dbg !7296

if.end30:                                         ; preds = %if.then20, %if.end
  ret void, !dbg !7297
}

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_iv_value_candidates(%struct.ivopts_data* %data, %struct.iv* %iv, %struct.iv_use* %use) unnamed_addr #5 !dbg !7298 {
entry:
  %offset = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !7302, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.value(metadata %struct.iv* %iv, metadata !7303, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !7304, metadata !DIExpression()), !dbg !7308
  %0 = bitcast i64* %offset to i8*, !dbg !7309
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7309
  %base1 = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 0, !dbg !7310
  %1 = load %union.tree_node*, %union.tree_node** %base1, align 8, !dbg !7310
  %step = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 2, !dbg !7311
  %2 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !7311
  tail call fastcc void @add_candidate(%struct.ivopts_data* %data, %union.tree_node* %1, %union.tree_node* %2, i8 zeroext 0, %struct.iv_use* %use) #7, !dbg !7312
  %3 = bitcast %struct.iv* %iv to %struct.tree_common**, !dbg !7313
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !7313
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !7313
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7313
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !7307, metadata !DIExpression()), !dbg !7308
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7314
  %bf.load = load i64, i64* %6, align 8, !dbg !7314
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7314
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !7314
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7314

lor.lhs.false:                                    ; preds = %entry
  %cmp8 = icmp eq i64 %bf.cast1, 12, !dbg !7314
  br i1 %cmp8, label %if.then, label %if.end, !dbg !7316

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !7317
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !7307, metadata !DIExpression()), !dbg !7308
  br label %if.end, !dbg !7318

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %basetype.0 = phi %union.tree_node* [ %7, %if.then ], [ %5, %lor.lhs.false ], !dbg !7308
  call void @llvm.dbg.value(metadata %union.tree_node* %basetype.0, metadata !7307, metadata !DIExpression()), !dbg !7308
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* %basetype.0, i64 0) #6, !dbg !7319
  %8 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !7320
  tail call fastcc void @add_candidate(%struct.ivopts_data* %data, %union.tree_node* %call, %union.tree_node* %8, i8 zeroext 1, %struct.iv_use* %use) #7, !dbg !7321
  %9 = load %union.tree_node*, %union.tree_node** %base1, align 8, !dbg !7322
  call void @llvm.dbg.value(metadata i64* %offset, metadata !7305, metadata !DIExpression(DW_OP_deref)), !dbg !7308
  %call11 = call fastcc %union.tree_node* @strip_offset(%union.tree_node* %9, i64* nonnull %offset) #7, !dbg !7323
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !7306, metadata !DIExpression()), !dbg !7308
  %10 = load i64, i64* %offset, align 8, !dbg !7324
  call void @llvm.dbg.value(metadata i64 %10, metadata !7305, metadata !DIExpression()), !dbg !7308
  %tobool = icmp eq i64 %10, 0, !dbg !7324
  br i1 %tobool, label %lor.lhs.false12, label %if.then15, !dbg !7326

lor.lhs.false12:                                  ; preds = %if.end
  %11 = load %union.tree_node*, %union.tree_node** %base1, align 8, !dbg !7327
  %cmp14 = icmp eq %union.tree_node* %call11, %11, !dbg !7328
  br i1 %cmp14, label %if.end17, label %if.then15, !dbg !7329

if.then15:                                        ; preds = %lor.lhs.false12, %if.end
  %12 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !7330
  call fastcc void @add_candidate(%struct.ivopts_data* %data, %union.tree_node* %call11, %union.tree_node* %12, i8 zeroext 0, %struct.iv_use* %use) #7, !dbg !7331
  br label %if.end17, !dbg !7331

if.end17:                                         ; preds = %lor.lhs.false12, %if.then15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7332
  ret void, !dbg !7332
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @strip_offset(%union.tree_node* %expr, i64* %offset) unnamed_addr #5 !dbg !7333 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7338, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i64* %offset, metadata !7339, metadata !DIExpression()), !dbg !7340
  %call = tail call fastcc %union.tree_node* @strip_offset_1(%union.tree_node* %expr, i8 zeroext 0, i8 zeroext 0, i64* %offset) #7, !dbg !7341
  ret %union.tree_node* %call, !dbg !7342
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @strip_offset_1(%union.tree_node* %expr, i8 zeroext %inside_addr, i8 zeroext %top_compref, i64* %offset) unnamed_addr #5 !dbg !7343 {
entry:
  %off0 = alloca i64, align 8
  %off1 = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7347, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i8 %inside_addr, metadata !7348, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i8 %top_compref, metadata !7349, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i64* %offset, metadata !7350, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7351, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7352, metadata !DIExpression()), !dbg !7362
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7363
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !7363
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7357, metadata !DIExpression()), !dbg !7362
  %1 = bitcast i64* %off0 to i8*, !dbg !7364
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7364
  %2 = bitcast i64* %off1 to i8*, !dbg !7364
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7364
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7361, metadata !DIExpression()), !dbg !7362
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #6, !dbg !7365
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7347, metadata !DIExpression()), !dbg !7362
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7366
  %3 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !7366
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7356, metadata !DIExpression()), !dbg !7362
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7367
  %bf.load = load i64, i64* %4, align 8, !dbg !7367
  %5 = trunc i64 %bf.load to i32, !dbg !7367
  %bf.cast = and i32 %5, 65535, !dbg !7367
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !7355, metadata !DIExpression()), !dbg !7362
  store i64 0, i64* %offset, align 8, !dbg !7368
  %trunc = trunc i64 %bf.load to i16, !dbg !7369
  switch i16 %trunc, label %cleanup [
    i16 23, label %sw.bb
    i16 66, label %sw.bb9
    i16 63, label %sw.bb9
    i16 64, label %sw.bb9
    i16 65, label %sw.bb41
    i16 45, label %sw.bb67
    i16 46, label %sw.bb67
    i16 41, label %sw.bb93
    i16 121, label %sw.bb112
    i16 47, label %sw.epilog
  ], !dbg !7369

sw.bb:                                            ; preds = %entry
  %call4 = tail call zeroext i8 @cst_and_fits_in_hwi(%union.tree_node* %call) #6, !dbg !7370
  %tobool = icmp eq i8 %call4, 0, !dbg !7370
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !7373

lor.lhs.false:                                    ; preds = %sw.bb
  %call5 = tail call i32 @integer_zerop(%union.tree_node* %call) #6, !dbg !7374
  %tobool6 = icmp eq i32 %call5, 0, !dbg !7374
  br i1 %tobool6, label %if.end, label %cleanup, !dbg !7375

if.end:                                           ; preds = %lor.lhs.false
  %call7 = tail call i64 @int_cst_value(%union.tree_node* %call) #6, !dbg !7376
  store i64 %call7, i64* %offset, align 8, !dbg !7377
  %call8 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %0, i64 0) #6, !dbg !7378
  br label %cleanup, !dbg !7379

sw.bb9:                                           ; preds = %entry, %entry, %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7380
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7380
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !7351, metadata !DIExpression()), !dbg !7362
  %arrayidx12 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7381
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !7381
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !7352, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i64* %off0, metadata !7358, metadata !DIExpression(DW_OP_deref)), !dbg !7362
  %call13 = call fastcc %union.tree_node* @strip_offset_1(%union.tree_node* %6, i8 zeroext 0, i8 zeroext 0, i64* nonnull %off0) #7, !dbg !7382
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !7351, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i64* %off1, metadata !7359, metadata !DIExpression(DW_OP_deref)), !dbg !7362
  %call14 = call fastcc %union.tree_node* @strip_offset_1(%union.tree_node* %7, i8 zeroext 0, i8 zeroext 0, i64* nonnull %off1) #7, !dbg !7383
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !7352, metadata !DIExpression()), !dbg !7362
  %cmp = icmp eq i32 %bf.cast, 64, !dbg !7384
  %8 = load i64, i64* %off0, align 8, !dbg !7385
  call void @llvm.dbg.value(metadata i64 %8, metadata !7358, metadata !DIExpression()), !dbg !7362
  %9 = load i64, i64* %off1, align 8, !dbg !7385
  call void @llvm.dbg.value(metadata i64 %9, metadata !7359, metadata !DIExpression()), !dbg !7362
  %10 = sub i64 0, %9, !dbg !7386
  %cond.p = select i1 %cmp, i64 %10, i64 %9, !dbg !7386
  %cond = add i64 %8, %cond.p, !dbg !7386
  store i64 %cond, i64* %offset, align 8, !dbg !7387
  %11 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7388
  %cmp18 = icmp eq %union.tree_node* %call13, %11, !dbg !7390
  br i1 %cmp18, label %land.lhs.true, label %if.end24, !dbg !7391

land.lhs.true:                                    ; preds = %sw.bb9
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !7392
  %cmp22 = icmp eq %union.tree_node* %call14, %12, !dbg !7393
  br i1 %cmp22, label %cleanup, label %if.end24, !dbg !7394

if.end24:                                         ; preds = %land.lhs.true, %sw.bb9
  %call25 = call i32 @integer_zerop(%union.tree_node* %call14) #6, !dbg !7395
  %tobool26 = icmp eq i32 %call25, 0, !dbg !7395
  br i1 %tobool26, label %if.else, label %if.end39, !dbg !7397

if.else:                                          ; preds = %if.end24
  %call28 = call i32 @integer_zerop(%union.tree_node* %call13) #6, !dbg !7398
  %tobool29 = icmp eq i32 %call28, 0, !dbg !7398
  br i1 %tobool29, label %if.else36, label %if.then30, !dbg !7400

if.then30:                                        ; preds = %if.else
  br i1 %cmp, label %if.then32, label %if.end39, !dbg !7401

if.then32:                                        ; preds = %if.then30
  %call33 = call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 79, %union.tree_node* %3, %union.tree_node* %call14) #6, !dbg !7403
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !7347, metadata !DIExpression()), !dbg !7362
  br label %if.end39, !dbg !7405

if.else36:                                        ; preds = %if.else
  %call37 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %bf.cast, %union.tree_node* %3, %union.tree_node* %call13, %union.tree_node* %call14) #6, !dbg !7406
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !7347, metadata !DIExpression()), !dbg !7362
  br label %if.end39

if.end39:                                         ; preds = %if.end24, %if.else36, %if.then30, %if.then32
  %expr.addr.2 = phi %union.tree_node* [ %call13, %if.end24 ], [ %call37, %if.else36 ], [ %call33, %if.then32 ], [ %call14, %if.then30 ], !dbg !7407
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.2, metadata !7347, metadata !DIExpression()), !dbg !7362
  %call40 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %0, %union.tree_node* %expr.addr.2) #6, !dbg !7408
  br label %cleanup, !dbg !7409

sw.bb41:                                          ; preds = %entry
  %operands43 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7410
  %arrayidx44 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands43, i64 1, !dbg !7410
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx44, align 8, !dbg !7410
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !7352, metadata !DIExpression()), !dbg !7362
  %call45 = tail call zeroext i8 @cst_and_fits_in_hwi(%union.tree_node* %13) #6, !dbg !7411
  %tobool46 = icmp eq i8 %call45, 0, !dbg !7411
  br i1 %tobool46, label %cleanup, label %if.end48, !dbg !7413

if.end48:                                         ; preds = %sw.bb41
  %14 = load %union.tree_node*, %union.tree_node** %operands43, align 8, !dbg !7414
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !7351, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i64* %off0, metadata !7358, metadata !DIExpression(DW_OP_deref)), !dbg !7362
  %call52 = call fastcc %union.tree_node* @strip_offset_1(%union.tree_node* %14, i8 zeroext 0, i8 zeroext 0, i64* nonnull %off0) #7, !dbg !7415
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !7351, metadata !DIExpression()), !dbg !7362
  %15 = load %union.tree_node*, %union.tree_node** %operands43, align 8, !dbg !7416
  %cmp56 = icmp eq %union.tree_node* %call52, %15, !dbg !7418
  br i1 %cmp56, label %cleanup, label %if.end58, !dbg !7419

if.end58:                                         ; preds = %if.end48
  %16 = load i64, i64* %off0, align 8, !dbg !7420
  call void @llvm.dbg.value(metadata i64 %16, metadata !7358, metadata !DIExpression()), !dbg !7362
  %call59 = call i64 @int_cst_value(%union.tree_node* %13) #6, !dbg !7421
  %mul = mul i64 %16, %call59, !dbg !7422
  store i64 %mul, i64* %offset, align 8, !dbg !7423
  %call60 = call i32 @integer_zerop(%union.tree_node* %call52) #6, !dbg !7424
  %tobool61 = icmp eq i32 %call60, 0, !dbg !7424
  br i1 %tobool61, label %if.else63, label %if.end65, !dbg !7426

if.else63:                                        ; preds = %if.end58
  %call64 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %3, %union.tree_node* %call52, %union.tree_node* %13) #6, !dbg !7427
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !7347, metadata !DIExpression()), !dbg !7362
  br label %if.end65

if.end65:                                         ; preds = %if.end58, %if.else63
  %expr.addr.3 = phi %union.tree_node* [ %call64, %if.else63 ], [ %call52, %if.end58 ], !dbg !7428
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.3, metadata !7347, metadata !DIExpression()), !dbg !7362
  %call66 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %0, %union.tree_node* %expr.addr.3) #6, !dbg !7429
  br label %cleanup, !dbg !7430

sw.bb67:                                          ; preds = %entry, %entry
  %tobool68 = icmp eq i8 %inside_addr, 0, !dbg !7431
  br i1 %tobool68, label %cleanup, label %if.end70, !dbg !7433

if.end70:                                         ; preds = %sw.bb67
  %call71 = tail call %union.tree_node* @array_ref_element_size(%union.tree_node* %call) #6, !dbg !7434
  call void @llvm.dbg.value(metadata %union.tree_node* %call71, metadata !7354, metadata !DIExpression()), !dbg !7362
  %call72 = tail call zeroext i8 @cst_and_fits_in_hwi(%union.tree_node* %call71) #6, !dbg !7435
  %tobool73 = icmp eq i8 %call72, 0, !dbg !7435
  br i1 %tobool73, label %sw.epilog, label %if.end75, !dbg !7437

if.end75:                                         ; preds = %if.end70
  %call76 = tail call i64 @int_cst_value(%union.tree_node* %call71) #6, !dbg !7438
  call void @llvm.dbg.value(metadata i64 %call76, metadata !7360, metadata !DIExpression()), !dbg !7362
  %operands78 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7439
  %arrayidx79 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands78, i64 1, !dbg !7439
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx79, align 8, !dbg !7439
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !7352, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i64* %off1, metadata !7359, metadata !DIExpression(DW_OP_deref)), !dbg !7362
  %call80 = call fastcc %union.tree_node* @strip_offset_1(%union.tree_node* %17, i8 zeroext 0, i8 zeroext 0, i64* nonnull %off1) #7, !dbg !7440
  call void @llvm.dbg.value(metadata %union.tree_node* %call80, metadata !7352, metadata !DIExpression()), !dbg !7362
  %18 = load i64, i64* %off1, align 8, !dbg !7441
  call void @llvm.dbg.value(metadata i64 %18, metadata !7359, metadata !DIExpression()), !dbg !7362
  %mul81 = mul i64 %18, %call76, !dbg !7442
  store i64 %mul81, i64* %offset, align 8, !dbg !7443
  %tobool82 = icmp eq i8 %top_compref, 0, !dbg !7444
  br i1 %tobool82, label %sw.epilog, label %land.lhs.true83, !dbg !7446

land.lhs.true83:                                  ; preds = %if.end75
  %call84 = call i32 @integer_zerop(%union.tree_node* %call80) #6, !dbg !7447
  %tobool85 = icmp eq i32 %call84, 0, !dbg !7447
  br i1 %tobool85, label %sw.epilog, label %if.then86, !dbg !7448

if.then86:                                        ; preds = %land.lhs.true83
  %19 = load %union.tree_node*, %union.tree_node** %operands78, align 8, !dbg !7449
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !7351, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i64* %off0, metadata !7358, metadata !DIExpression(DW_OP_deref)), !dbg !7362
  %call90 = call fastcc %union.tree_node* @strip_offset_1(%union.tree_node* %19, i8 zeroext %inside_addr, i8 zeroext %top_compref, i64* nonnull %off0) #7, !dbg !7451
  call void @llvm.dbg.value(metadata %union.tree_node* %call90, metadata !7351, metadata !DIExpression()), !dbg !7362
  %20 = load i64, i64* %off0, align 8, !dbg !7452
  call void @llvm.dbg.value(metadata i64 %20, metadata !7358, metadata !DIExpression()), !dbg !7362
  %21 = load i64, i64* %offset, align 8, !dbg !7453
  %add91 = add i64 %21, %20, !dbg !7453
  store i64 %add91, i64* %offset, align 8, !dbg !7453
  br label %cleanup, !dbg !7454

sw.bb93:                                          ; preds = %entry
  %tobool94 = icmp eq i8 %inside_addr, 0, !dbg !7455
  br i1 %tobool94, label %cleanup, label %if.end96, !dbg !7457

if.end96:                                         ; preds = %sw.bb93
  %call97 = tail call %union.tree_node* @component_ref_field_offset(%union.tree_node* %call) #6, !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %call97, metadata !7353, metadata !DIExpression()), !dbg !7362
  %tobool99 = icmp eq i8 %top_compref, 0, !dbg !7459
  br i1 %tobool99, label %sw.epilog, label %land.lhs.true100, !dbg !7461

land.lhs.true100:                                 ; preds = %if.end96
  %call101 = tail call zeroext i8 @cst_and_fits_in_hwi(%union.tree_node* %call97) #6, !dbg !7462
  %tobool103 = icmp eq i8 %call101, 0, !dbg !7462
  br i1 %tobool103, label %sw.epilog, label %if.then104, !dbg !7463

if.then104:                                       ; preds = %land.lhs.true100
  %operands106 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7464
  %22 = load %union.tree_node*, %union.tree_node** %operands106, align 8, !dbg !7464
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !7351, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i64* %off0, metadata !7358, metadata !DIExpression(DW_OP_deref)), !dbg !7362
  %call108 = call fastcc %union.tree_node* @strip_offset_1(%union.tree_node* %22, i8 zeroext %inside_addr, i8 zeroext %top_compref, i64* nonnull %off0) #7, !dbg !7466
  call void @llvm.dbg.value(metadata %union.tree_node* %call108, metadata !7351, metadata !DIExpression()), !dbg !7362
  %23 = load i64, i64* %off0, align 8, !dbg !7467
  call void @llvm.dbg.value(metadata i64 %23, metadata !7358, metadata !DIExpression()), !dbg !7362
  %call109 = call i64 @int_cst_value(%union.tree_node* %call97) #6, !dbg !7468
  %add110 = add i64 %23, %call109, !dbg !7469
  store i64 %add110, i64* %offset, align 8, !dbg !7470
  br label %cleanup, !dbg !7471

sw.bb112:                                         ; preds = %entry
  %operands114 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7472
  %24 = load %union.tree_node*, %union.tree_node** %operands114, align 8, !dbg !7472
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !7351, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i64* %off0, metadata !7358, metadata !DIExpression(DW_OP_deref)), !dbg !7362
  %call116 = call fastcc %union.tree_node* @strip_offset_1(%union.tree_node* %24, i8 zeroext 1, i8 zeroext 1, i64* nonnull %off0) #7, !dbg !7473
  call void @llvm.dbg.value(metadata %union.tree_node* %call116, metadata !7351, metadata !DIExpression()), !dbg !7362
  %25 = load i64, i64* %off0, align 8, !dbg !7474
  call void @llvm.dbg.value(metadata i64 %25, metadata !7358, metadata !DIExpression()), !dbg !7362
  %26 = load i64, i64* %offset, align 8, !dbg !7475
  %add117 = add i64 %26, %25, !dbg !7475
  store i64 %add117, i64* %offset, align 8, !dbg !7475
  %27 = load %union.tree_node*, %union.tree_node** %operands114, align 8, !dbg !7476
  %cmp121 = icmp eq %union.tree_node* %call116, %27, !dbg !7478
  br i1 %cmp121, label %cleanup, label %if.end124, !dbg !7479

if.end124:                                        ; preds = %sw.bb112
  %call125 = call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %call116) #6, !dbg !7480
  call void @llvm.dbg.value(metadata %union.tree_node* %call125, metadata !7347, metadata !DIExpression()), !dbg !7362
  %call126 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %0, %union.tree_node* %call125) #6, !dbg !7481
  br label %cleanup, !dbg !7482

sw.epilog:                                        ; preds = %land.lhs.true83, %if.end75, %if.end70, %land.lhs.true100, %if.end96, %entry
  %op1.0 = phi %union.tree_node* [ null, %if.end70 ], [ %call80, %land.lhs.true83 ], [ %call80, %if.end75 ], [ null, %land.lhs.true100 ], [ null, %if.end96 ], [ null, %entry ], !dbg !7362
  %inside_addr.addr.0 = phi i8 [ %inside_addr, %if.end70 ], [ %inside_addr, %land.lhs.true83 ], [ %inside_addr, %if.end75 ], [ %inside_addr, %land.lhs.true100 ], [ %inside_addr, %if.end96 ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i8 %inside_addr.addr.0, metadata !7348, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0, metadata !7352, metadata !DIExpression()), !dbg !7362
  %operands129 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7483
  %28 = load %union.tree_node*, %union.tree_node** %operands129, align 8, !dbg !7483
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !7351, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i64* %off0, metadata !7358, metadata !DIExpression(DW_OP_deref)), !dbg !7362
  %call131 = call fastcc %union.tree_node* @strip_offset_1(%union.tree_node* %28, i8 zeroext %inside_addr.addr.0, i8 zeroext 0, i64* nonnull %off0) #7, !dbg !7484
  call void @llvm.dbg.value(metadata %union.tree_node* %call131, metadata !7351, metadata !DIExpression()), !dbg !7362
  %29 = load i64, i64* %off0, align 8, !dbg !7485
  call void @llvm.dbg.value(metadata i64 %29, metadata !7358, metadata !DIExpression()), !dbg !7362
  %30 = load i64, i64* %offset, align 8, !dbg !7486
  %add132 = add i64 %30, %29, !dbg !7486
  store i64 %add132, i64* %offset, align 8, !dbg !7486
  %31 = load %union.tree_node*, %union.tree_node** %operands129, align 8, !dbg !7487
  %cmp136 = icmp eq %union.tree_node* %call131, %31, !dbg !7489
  br i1 %cmp136, label %land.lhs.true138, label %if.end147, !dbg !7490

land.lhs.true138:                                 ; preds = %sw.epilog
  %tobool139 = icmp eq %union.tree_node* %op1.0, null, !dbg !7491
  br i1 %tobool139, label %cleanup, label %lor.lhs.false140, !dbg !7492

lor.lhs.false140:                                 ; preds = %land.lhs.true138
  %arrayidx143 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands129, i64 1, !dbg !7493
  %32 = load %union.tree_node*, %union.tree_node** %arrayidx143, align 8, !dbg !7493
  %cmp144 = icmp eq %union.tree_node* %op1.0, %32, !dbg !7494
  br i1 %cmp144, label %cleanup, label %if.end147, !dbg !7495

if.end147:                                        ; preds = %lor.lhs.false140, %sw.epilog
  %call148 = call %union.tree_node* @copy_node_stat(%union.tree_node* %call) #6, !dbg !7496
  call void @llvm.dbg.value(metadata %union.tree_node* %call148, metadata !7347, metadata !DIExpression()), !dbg !7362
  %operands150 = getelementptr inbounds %union.tree_node, %union.tree_node* %call148, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7497
  store %union.tree_node* %call131, %union.tree_node** %operands150, align 8, !dbg !7498
  %tobool152 = icmp eq %union.tree_node* %op1.0, null, !dbg !7499
  br i1 %tobool152, label %if.end157, label %if.then153, !dbg !7501

if.then153:                                       ; preds = %if.end147
  %arrayidx156 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands150, i64 1, !dbg !7502
  store %union.tree_node* %op1.0, %union.tree_node** %arrayidx156, align 8, !dbg !7503
  br label %if.end157, !dbg !7502

if.end157:                                        ; preds = %if.end147, %if.then153
  %call158 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %0, %union.tree_node* %call148) #6, !dbg !7504
  call void @llvm.dbg.value(metadata %union.tree_node* %call158, metadata !7347, metadata !DIExpression()), !dbg !7362
  br label %cleanup, !dbg !7505

cleanup:                                          ; preds = %lor.lhs.false, %sw.bb, %sw.bb41, %sw.bb67, %sw.bb93, %land.lhs.true138, %lor.lhs.false140, %entry, %sw.bb112, %if.end48, %land.lhs.true, %if.end157, %if.end124, %if.then104, %if.then86, %if.end65, %if.end39, %if.end
  %retval.0 = phi %union.tree_node* [ %call158, %if.end157 ], [ %call126, %if.end124 ], [ %call108, %if.then104 ], [ %call90, %if.then86 ], [ %call66, %if.end65 ], [ %call40, %if.end39 ], [ %call8, %if.end ], [ %expr, %lor.lhs.false ], [ %expr, %sw.bb ], [ %expr, %land.lhs.true ], [ %expr, %sw.bb41 ], [ %expr, %if.end48 ], [ %expr, %sw.bb67 ], [ %expr, %sw.bb93 ], [ %expr, %sw.bb112 ], [ %expr, %entry ], [ %expr, %lor.lhs.false140 ], [ %expr, %land.lhs.true138 ], !dbg !7362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7506
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7506
  ret %union.tree_node* %retval.0, !dbg !7506
}

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_uid(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7507 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7509, metadata !DIExpression()), !dbg !7510
  %uid = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 1, !dbg !7511
  %0 = load i32, i32* %uid, align 4, !dbg !7511
  ret i32 %0, !dbg !7512
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @autoinc_possible_for_pair(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !7513 {
entry:
  %depends_on = alloca %struct.bitmap_head_def*, align 8
  %can_autoinc = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !7517, metadata !DIExpression()), !dbg !7523
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !7518, metadata !DIExpression()), !dbg !7523
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !7519, metadata !DIExpression()), !dbg !7523
  %0 = bitcast %struct.bitmap_head_def** %depends_on to i8*, !dbg !7524
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7524
  call void @llvm.dbg.value(metadata i8* %can_autoinc, metadata !7521, metadata !DIExpression(DW_OP_deref)), !dbg !7523
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %can_autoinc) #8, !dbg !7525
  %type = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 1, !dbg !7526
  %1 = load i32, i32* %type, align 4, !dbg !7526
  %cmp = icmp eq i32 %1, 1, !dbg !7528
  br i1 %cmp, label %if.end, label %cleanup, !dbg !7529

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %depends_on, metadata !7520, metadata !DIExpression(DW_OP_deref)), !dbg !7523
  call void @llvm.dbg.value(metadata i8* %can_autoinc, metadata !7521, metadata !DIExpression(DW_OP_deref)), !dbg !7523
  %call = call fastcc i64 @get_computation_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i8 zeroext 1, %struct.bitmap_head_def** nonnull %depends_on, i8* nonnull %can_autoinc) #7, !dbg !7530
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on, align 8, !dbg !7531
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %2, metadata !7520, metadata !DIExpression()), !dbg !7523
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !7531
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !7520, metadata !DIExpression()), !dbg !7523
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %depends_on, align 8, !dbg !7531
  %call1 = call fastcc zeroext i8 @infinite_cost_p(i64 %call) #7, !dbg !7532
  %tobool = icmp eq i8 %call1, 0, !dbg !7532
  %3 = load i8, i8* %can_autoinc, align 1, !dbg !7533
  call void @llvm.dbg.value(metadata i8 %3, metadata !7521, metadata !DIExpression()), !dbg !7523
  %tobool2 = icmp ne i8 %3, 0, !dbg !7533
  %4 = and i1 %tobool, %tobool2, !dbg !7533
  %conv3 = zext i1 %4 to i8, !dbg !7534
  br label %cleanup, !dbg !7535

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i8 [ %conv3, %if.end ], [ 0, %entry ], !dbg !7523
  call void @llvm.dbg.value(metadata i8* %can_autoinc, metadata !7521, metadata !DIExpression(DW_OP_deref)), !dbg !7523
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %can_autoinc) #8, !dbg !7536
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7536
  ret i8 %retval.0, !dbg !7536
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @get_computation_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i8 zeroext %address_p, %struct.bitmap_head_def** %depends_on, i8* %can_autoinc) unnamed_addr #5 !dbg !7537 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !7541, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !7542, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !7543, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata i8 %address_p, metadata !7544, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %depends_on, metadata !7545, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata i8* %can_autoinc, metadata !7546, metadata !DIExpression()), !dbg !7547
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !7548
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7548
  %call = tail call fastcc i64 @get_computation_cost_at(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i8 zeroext %address_p, %struct.bitmap_head_def** %depends_on, %union.gimple_statement_d* %0, i8* %can_autoinc) #7, !dbg !7549
  ret i64 %call, !dbg !7550
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @infinite_cost_p(i64 %cost.coerce) unnamed_addr #5 !dbg !7551 {
entry:
  %0 = trunc i64 %cost.coerce to i32, !dbg !7556
  %cmp = icmp eq i32 %0, 10000000, !dbg !7557
  %conv2 = zext i1 %cmp to i8, !dbg !7558
  ret i8 %conv2, !dbg !7559
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @get_computation_cost_at(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i8 zeroext %address_p, %struct.bitmap_head_def** %depends_on, %union.gimple_statement_d* %at, i8* %can_autoinc) unnamed_addr #5 !dbg !7560 {
entry:
  %offset = alloca i64, align 8
  %var_present = alloca i8, align 1
  %symbol_present = alloca i8, align 1
  %cost = alloca i64, align 8
  %tmpcast4 = bitcast i64* %cost to %struct.comp_cost*
  %rat = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !7564, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !7565, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !7566, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8 %address_p, metadata !7567, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %depends_on, metadata !7568, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %at, metadata !7569, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %can_autoinc, metadata !7570, metadata !DIExpression()), !dbg !7590
  %iv = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 2, !dbg !7591
  %0 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !7591
  %base = getelementptr inbounds %struct.iv, %struct.iv* %0, i64 0, i32 0, !dbg !7592
  %1 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !7592
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7571, metadata !DIExpression()), !dbg !7590
  %step = getelementptr inbounds %struct.iv, %struct.iv* %0, i64 0, i32 2, !dbg !7593
  %2 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !7593
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7572, metadata !DIExpression()), !dbg !7590
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7594
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7594
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7575, metadata !DIExpression()), !dbg !7590
  %4 = bitcast i64* %offset to i8*, !dbg !7595
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !7595
  call void @llvm.dbg.value(metadata i64 0, metadata !7578, metadata !DIExpression()), !dbg !7590
  store i64 0, i64* %offset, align 8, !dbg !7596
  call void @llvm.dbg.value(metadata i8* %var_present, metadata !7581, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %var_present) #8, !dbg !7597
  call void @llvm.dbg.value(metadata i8* %symbol_present, metadata !7582, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %symbol_present) #8, !dbg !7597
  %5 = bitcast i64* %cost to i8*, !dbg !7598
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !7598
  %6 = bitcast %struct.double_int* %rat to i8*, !dbg !7599
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !7599
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %at) #7, !dbg !7600
  %call2 = tail call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %call) #6, !dbg !7601
  call void @llvm.dbg.value(metadata i8 %call2, metadata !7586, metadata !DIExpression()), !dbg !7590
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %depends_on, align 8, !dbg !7602
  %iv3 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 6, !dbg !7603
  %7 = load %struct.iv*, %struct.iv** %iv3, align 8, !dbg !7603
  %tobool = icmp eq %struct.iv* %7, null, !dbg !7605
  br i1 %tobool, label %if.then, label %if.end, !dbg !7606

if.then:                                          ; preds = %entry
  br label %cleanup318, !dbg !7607

if.end:                                           ; preds = %entry
  %base5 = getelementptr inbounds %struct.iv, %struct.iv* %7, i64 0, i32 0, !dbg !7608
  %8 = load %union.tree_node*, %union.tree_node** %base5, align 8, !dbg !7608
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7573, metadata !DIExpression()), !dbg !7590
  %step7 = getelementptr inbounds %struct.iv, %struct.iv* %7, i64 0, i32 2, !dbg !7609
  %9 = load %union.tree_node*, %union.tree_node** %step7, align 8, !dbg !7609
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !7574, metadata !DIExpression()), !dbg !7590
  %type9 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7610
  %10 = bitcast %union.tree_node** %type9 to %struct.tree_type**, !dbg !7610
  %11 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !7610
  %type10 = bitcast %union.tree_node* %3 to %struct.tree_type*, !dbg !7611
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type10, i64 0, i32 6, !dbg !7611
  %bf.load = load i32, i32* %precision, align 4, !dbg !7611
  %bf.clear = and i32 %bf.load, 1023, !dbg !7611
  %precision12 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 6, !dbg !7613
  %bf.load13 = load i32, i32* %precision12, align 4, !dbg !7613
  %bf.clear14 = and i32 %bf.load13, 1023, !dbg !7613
  %cmp = icmp ugt i32 %bf.clear, %bf.clear14, !dbg !7614
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !7615

if.then15:                                        ; preds = %if.end
  br label %cleanup318, !dbg !7616

if.end16:                                         ; preds = %if.end
  %tobool17 = icmp eq i8 %address_p, 0, !dbg !7618
  br i1 %tobool17, label %if.end33, label %if.then18, !dbg !7620

if.then18:                                        ; preds = %if.end16
  %12 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !7621
  %base_object = getelementptr inbounds %struct.iv, %struct.iv* %12, i64 0, i32 1, !dbg !7624
  %13 = load %union.tree_node*, %union.tree_node** %base_object, align 8, !dbg !7624
  %tobool20 = icmp eq %union.tree_node* %13, null, !dbg !7625
  br i1 %tobool20, label %if.end33, label %land.lhs.true, !dbg !7626

land.lhs.true:                                    ; preds = %if.then18
  %base_object22 = getelementptr inbounds %struct.iv, %struct.iv* %7, i64 0, i32 1, !dbg !7627
  %14 = load %union.tree_node*, %union.tree_node** %base_object22, align 8, !dbg !7627
  %tobool23 = icmp eq %union.tree_node* %14, null, !dbg !7628
  br i1 %tobool23, label %if.end33, label %land.lhs.true24, !dbg !7629

land.lhs.true24:                                  ; preds = %land.lhs.true
  %call29 = tail call i32 @operand_equal_p(%union.tree_node* nonnull %13, %union.tree_node* nonnull %14, i32 0) #6, !dbg !7630
  %tobool30 = icmp eq i32 %call29, 0, !dbg !7630
  br i1 %tobool30, label %if.then31, label %land.lhs.true24.if.end33_crit_edge, !dbg !7631

land.lhs.true24.if.end33_crit_edge:               ; preds = %land.lhs.true24
  %bf.load36.pre = load i32, i32* %precision, align 4, !dbg !7632
  %bf.load40.pre = load i32, i32* %precision12, align 4, !dbg !7634
  %.pre28 = and i32 %bf.load36.pre, 1023, !dbg !7632
  %.pre29 = and i32 %bf.load40.pre, 1023, !dbg !7634
  br label %if.end33, !dbg !7631

if.then31:                                        ; preds = %land.lhs.true24
  br label %cleanup318, !dbg !7635

if.end33:                                         ; preds = %land.lhs.true24.if.end33_crit_edge, %land.lhs.true, %if.then18, %if.end16
  %bf.clear41.pre-phi = phi i32 [ %.pre29, %land.lhs.true24.if.end33_crit_edge ], [ %bf.clear14, %land.lhs.true ], [ %bf.clear14, %if.then18 ], [ %bf.clear14, %if.end16 ], !dbg !7634
  %bf.clear37.pre-phi = phi i32 [ %.pre28, %land.lhs.true24.if.end33_crit_edge ], [ %bf.clear, %land.lhs.true ], [ %bf.clear, %if.then18 ], [ %bf.clear, %if.end16 ], !dbg !7632
  %cmp42 = icmp ult i32 %bf.clear37.pre-phi, %bf.clear41.pre-phi, !dbg !7636
  br i1 %cmp42, label %fallback, label %if.end44, !dbg !7637

if.end44:                                         ; preds = %if.end33
  %call45 = tail call zeroext i8 @cst_and_fits_in_hwi(%union.tree_node* %9) #6, !dbg !7638
  %tobool46 = icmp eq i8 %call45, 0, !dbg !7638
  br i1 %tobool46, label %if.end49, label %if.then47, !dbg !7640

if.then47:                                        ; preds = %if.end44
  %call48 = tail call i64 @int_cst_value(%union.tree_node* %9) #6, !dbg !7641
  call void @llvm.dbg.value(metadata i64 %call48, metadata !7577, metadata !DIExpression()), !dbg !7590
  br label %if.end49, !dbg !7642

if.end49:                                         ; preds = %if.end44, %if.then47
  %cstepi.0 = phi i64 [ %call48, %if.then47 ], [ 0, %if.end44 ], !dbg !7643
  call void @llvm.dbg.value(metadata i64 %cstepi.0, metadata !7577, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata %struct.double_int* %rat, metadata !7585, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  %call50 = call fastcc zeroext i8 @constant_multiple_of(%union.tree_node* %2, %union.tree_node* %9, %struct.double_int* nonnull %rat) #7, !dbg !7644
  %tobool51 = icmp eq i8 %call50, 0, !dbg !7644
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !7646

if.then52:                                        ; preds = %if.end49
  br label %cleanup318, !dbg !7647

if.end53:                                         ; preds = %if.end49
  %15 = getelementptr inbounds %struct.double_int, %struct.double_int* %rat, i64 0, i32 0, !dbg !7648
  %16 = load i64, i64* %15, align 8, !dbg !7648
  %17 = getelementptr inbounds %struct.double_int, %struct.double_int* %rat, i64 0, i32 1, !dbg !7648
  %18 = load i64, i64* %17, align 8, !dbg !7648
  %call54 = call zeroext i8 @double_int_fits_in_shwi_p(i64 %16, i64 %18) #6, !dbg !7648
  %tobool55 = icmp eq i8 %call54, 0, !dbg !7648
  br i1 %tobool55, label %if.else58, label %if.then56, !dbg !7650

if.then56:                                        ; preds = %if.end53
  %19 = load i64, i64* %15, align 8, !dbg !7651
  %20 = load i64, i64* %17, align 8, !dbg !7651
  %call57 = call i64 @double_int_to_shwi(i64 %19, i64 %20) #6, !dbg !7651
  call void @llvm.dbg.value(metadata i64 %call57, metadata !7579, metadata !DIExpression()), !dbg !7590
  %call60 = call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %8) #6, !dbg !7652
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !7573, metadata !DIExpression()), !dbg !7590
  %type62 = getelementptr inbounds %union.tree_node, %union.tree_node* %call60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7653
  %21 = load %union.tree_node*, %union.tree_node** %type62, align 8, !dbg !7653
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !7576, metadata !DIExpression()), !dbg !7590
  %call63 = call zeroext i8 @cst_and_fits_in_hwi(%union.tree_node* %call60) #6, !dbg !7654
  %tobool64 = icmp eq i8 %call63, 0, !dbg !7654
  br i1 %tobool64, label %if.else69, label %if.then65, !dbg !7656

if.else58:                                        ; preds = %if.end53
  br label %cleanup318, !dbg !7657

if.then65:                                        ; preds = %if.then56
  %call66 = call i64 @int_cst_value(%union.tree_node* %call60) #6, !dbg !7658
  %22 = mul i64 %call57, %call66, !dbg !7660
  %mul = sub i64 0, %22, !dbg !7660
  call void @llvm.dbg.value(metadata i64 %mul, metadata !7578, metadata !DIExpression()), !dbg !7590
  store i64 %mul, i64* %offset, align 8, !dbg !7661
  %call67 = call %union.tree_node* @build_int_cst(%union.tree_node* %3, i64 0) #6, !dbg !7662
  call void @llvm.dbg.value(metadata i64* %offset, metadata !7578, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %var_present, metadata !7581, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %symbol_present, metadata !7582, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  %call68 = call fastcc i64 @difference_cost(%struct.ivopts_data* %data, %union.tree_node* %1, %union.tree_node* %call67, i8* nonnull %symbol_present, i8* nonnull %var_present, i64* nonnull %offset, %struct.bitmap_head_def** %depends_on) #7, !dbg !7663
  store i64 %call68, i64* %cost, align 8, !dbg !7663
  %23 = trunc i64 %call68 to i32, !dbg !7664
  br label %if.end148, !dbg !7664

if.else69:                                        ; preds = %if.then56
  %cmp70 = icmp eq i64 %call57, 1, !dbg !7665
  br i1 %cmp70, label %if.then71, label %if.else74, !dbg !7667

if.then71:                                        ; preds = %if.else69
  call void @llvm.dbg.value(metadata i64* %offset, metadata !7578, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %var_present, metadata !7581, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %symbol_present, metadata !7582, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  %call73 = call fastcc i64 @difference_cost(%struct.ivopts_data* %data, %union.tree_node* %1, %union.tree_node* %call60, i8* nonnull %symbol_present, i8* nonnull %var_present, i64* nonnull %offset, %struct.bitmap_head_def** %depends_on) #7, !dbg !7668
  store i64 %call73, i64* %cost, align 8, !dbg !7668
  %24 = trunc i64 %call73 to i32, !dbg !7670
  br label %if.end148, !dbg !7670

if.else74:                                        ; preds = %if.else69
  br i1 %tobool17, label %if.else120, label %land.lhs.true76, !dbg !7671

land.lhs.true76:                                  ; preds = %if.else74
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7673
  %bf.load78 = load i64, i64* %25, align 8, !dbg !7673
  %bf.cast14 = and i64 %bf.load78, 65535, !dbg !7673
  %cmp80 = icmp eq i64 %bf.cast14, 10, !dbg !7673
  br i1 %cmp80, label %if.else120, label %lor.lhs.false, !dbg !7673

lor.lhs.false:                                    ; preds = %land.lhs.true76
  %cmp86 = icmp eq i64 %bf.cast14, 12, !dbg !7673
  br i1 %cmp86, label %if.else120, label %land.lhs.true88, !dbg !7674

land.lhs.true88:                                  ; preds = %lor.lhs.false
  %type90 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7675
  %26 = bitcast %union.tree_node** %type90 to i64**, !dbg !7675
  %27 = load i64*, i64** %26, align 8, !dbg !7675
  %bf.load92 = load i64, i64* %27, align 8, !dbg !7675
  %bf.cast9416 = and i64 %bf.load92, 65535, !dbg !7675
  %cmp95 = icmp eq i64 %bf.cast9416, 14, !dbg !7675
  br i1 %cmp95, label %cond.true, label %cond.false, !dbg !7675

cond.true:                                        ; preds = %land.lhs.true88
  %.cast17 = bitcast i64* %27 to %union.tree_node*, !dbg !7675
  %call99 = call i32 @vector_type_mode(%union.tree_node* %.cast17) #6, !dbg !7675
  %.pre = load i64*, i64** %26, align 8, !dbg !7676
  %bf.load108.pre = load i64, i64* %.pre, align 8, !dbg !7676
  br label %cond.end, !dbg !7675

cond.false:                                       ; preds = %land.lhs.true88
  %type102 = bitcast i64* %27 to %struct.tree_type*, !dbg !7675
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type102, i64 0, i32 6, !dbg !7675
  %bf.load103 = load i32, i32* %mode, align 4, !dbg !7675
  %bf.lshr = lshr i32 %bf.load103, 16, !dbg !7675
  %bf.clear104 = and i32 %bf.lshr, 255, !dbg !7675
  br label %cond.end, !dbg !7675

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load108 = phi i64 [ %bf.load108.pre, %cond.true ], [ %bf.load92, %cond.false ], !dbg !7676
  %cond = phi i32 [ %call99, %cond.true ], [ %bf.clear104, %cond.false ], !dbg !7675
  %bf.lshr109 = lshr i64 %bf.load108, 56, !dbg !7676
  %conv111 = trunc i64 %bf.lshr109 to i8, !dbg !7676
  %call112 = call zeroext i8 @multiplier_allowed_in_address_p(i64 %call57, i32 %cond, i8 zeroext %conv111) #7, !dbg !7677
  %tobool114 = icmp eq i8 %call112, 0, !dbg !7677
  br i1 %tobool114, label %if.else120, label %if.then115, !dbg !7678

if.then115:                                       ; preds = %cond.end
  %call116 = call %union.tree_node* @build_int_cst(%union.tree_node* %21, i64 %call57) #6, !dbg !7679
  %call117 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %21, %union.tree_node* %call60, %union.tree_node* %call116) #6, !dbg !7679
  call void @llvm.dbg.value(metadata %union.tree_node* %call117, metadata !7573, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i64* %offset, metadata !7578, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %var_present, metadata !7581, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %symbol_present, metadata !7582, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  %call119 = call fastcc i64 @difference_cost(%struct.ivopts_data* %data, %union.tree_node* %1, %union.tree_node* %call117, i8* nonnull %symbol_present, i8* nonnull %var_present, i64* nonnull %offset, %struct.bitmap_head_def** %depends_on) #7, !dbg !7681
  store i64 %call119, i64* %cost, align 8, !dbg !7681
  %28 = trunc i64 %call119 to i32, !dbg !7682
  br label %if.end148, !dbg !7682

if.else120:                                       ; preds = %cond.end, %if.else74, %lor.lhs.false, %land.lhs.true76
  %call122 = call fastcc i64 @force_var_cost(%struct.ivopts_data* %data, %union.tree_node* %call60, %struct.bitmap_head_def** %depends_on) #7, !dbg !7683
  store i64 %call122, i64* %cost, align 8, !dbg !7683
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7685
  %bf.load124 = load i64, i64* %29, align 8, !dbg !7685
  %bf.cast1265 = and i64 %bf.load124, 65535, !dbg !7685
  %cmp127 = icmp eq i64 %bf.cast1265, 14, !dbg !7685
  %30 = trunc i64 %call122 to i32, !dbg !7685
  br i1 %cmp127, label %cond.true129, label %cond.false131, !dbg !7685

cond.true129:                                     ; preds = %if.else120
  %call130 = call i32 @vector_type_mode(%union.tree_node* %21) #6, !dbg !7685
  br label %cond.end137, !dbg !7685

cond.false131:                                    ; preds = %if.else120
  %type132 = bitcast %union.tree_node* %21 to %struct.tree_type*, !dbg !7685
  %mode133 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type132, i64 0, i32 6, !dbg !7685
  %bf.load134 = load i32, i32* %mode133, align 4, !dbg !7685
  %bf.lshr135 = lshr i32 %bf.load134, 16, !dbg !7685
  %bf.clear136 = and i32 %bf.lshr135, 255, !dbg !7685
  br label %cond.end137, !dbg !7685

cond.end137:                                      ; preds = %cond.false131, %cond.true129
  %cond138 = phi i32 [ %call130, %cond.true129 ], [ %bf.clear136, %cond.false131 ], !dbg !7685
  %speed139 = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 11, !dbg !7686
  %31 = load i8, i8* %speed139, align 1, !dbg !7686
  %call140 = call fastcc i32 @add_cost(i32 %cond138, i8 zeroext %31) #7, !dbg !7687
  %cost141 = bitcast i64* %cost to i32*, !dbg !7688
  %add = add i32 %call140, %30, !dbg !7689
  store i32 %add, i32* %cost141, align 8, !dbg !7689
  %call143 = call %union.tree_node* @build_int_cst(%union.tree_node* %3, i64 0) #6, !dbg !7690
  call void @llvm.dbg.value(metadata i64* %offset, metadata !7578, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %var_present, metadata !7581, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %symbol_present, metadata !7582, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  %call144 = call fastcc i64 @difference_cost(%struct.ivopts_data* %data, %union.tree_node* %1, %union.tree_node* %call143, i8* nonnull %symbol_present, i8* nonnull %var_present, i64* nonnull %offset, %struct.bitmap_head_def** %depends_on) #7, !dbg !7691
  %32 = load i64, i64* %cost, align 8, !dbg !7692
  %call145 = call fastcc i64 @add_costs(i64 %32, i64 %call144) #7, !dbg !7692
  store i64 %call145, i64* %cost, align 8, !dbg !7692
  %33 = trunc i64 %call145 to i32
  br label %if.end148

if.end148:                                        ; preds = %if.then71, %cond.end137, %if.then115, %if.then65
  %34 = phi i32 [ %24, %if.then71 ], [ %33, %cond.end137 ], [ %28, %if.then115 ], [ %23, %if.then65 ]
  %.in.in = phi i64 [ %call73, %if.then71 ], [ %call145, %cond.end137 ], [ %call119, %if.then115 ], [ %call68, %if.then65 ]
  %35 = phi i32 [ %24, %if.then71 ], [ %33, %cond.end137 ], [ %28, %if.then115 ], [ %23, %if.then65 ]
  %36 = phi i32 [ %24, %if.then71 ], [ %33, %cond.end137 ], [ %28, %if.then115 ], [ %23, %if.then65 ]
  %37 = phi i64 [ %call73, %if.then71 ], [ %call145, %cond.end137 ], [ %call119, %if.then115 ], [ %call68, %if.then65 ]
  %.in = lshr i64 %.in.in, 32
  %38 = trunc i64 %.in to i32
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !7693
  %39 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !7693
  %call149 = call fastcc zeroext i8 @stmt_after_increment(%struct.loop* %39, %struct.iv_cand* %cand, %union.gimple_statement_d* %at) #7, !dbg !7694
  call void @llvm.dbg.value(metadata i8 %call149, metadata !7583, metadata !DIExpression()), !dbg !7590
  %tobool150 = icmp eq i8 %call149, 0, !dbg !7695
  br i1 %tobool150, label %if.end154, label %if.then151, !dbg !7697

if.then151:                                       ; preds = %if.end148
  %mul152 = mul i64 %call57, %cstepi.0, !dbg !7698
  %40 = load i64, i64* %offset, align 8, !dbg !7699
  call void @llvm.dbg.value(metadata i64 %40, metadata !7578, metadata !DIExpression()), !dbg !7590
  %sub153 = sub i64 %40, %mul152, !dbg !7699
  call void @llvm.dbg.value(metadata i64 %sub153, metadata !7578, metadata !DIExpression()), !dbg !7590
  store i64 %sub153, i64* %offset, align 8, !dbg !7699
  br label %if.end154, !dbg !7700

if.end154:                                        ; preds = %if.end148, %if.then151
  %41 = load i8, i8* %symbol_present, align 1, !dbg !7590
  call void @llvm.dbg.value(metadata i8 %41, metadata !7582, metadata !DIExpression()), !dbg !7590
  br i1 %tobool17, label %if.end189, label %if.then156, !dbg !7701

if.then156:                                       ; preds = %if.end154
  %42 = load i8, i8* %var_present, align 1, !dbg !7702
  call void @llvm.dbg.value(metadata i8 %42, metadata !7581, metadata !DIExpression()), !dbg !7590
  %43 = load i64, i64* %offset, align 8, !dbg !7704
  call void @llvm.dbg.value(metadata i64 %43, metadata !7578, metadata !DIExpression()), !dbg !7590
  %type159 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7705
  %44 = bitcast %union.tree_node** %type159 to i64**, !dbg !7705
  %45 = load i64*, i64** %44, align 8, !dbg !7705
  %bf.load161 = load i64, i64* %45, align 8, !dbg !7705
  %bf.cast16312 = and i64 %bf.load161, 65535, !dbg !7705
  %cmp164 = icmp eq i64 %bf.cast16312, 14, !dbg !7705
  br i1 %cmp164, label %cond.true166, label %cond.false170, !dbg !7705

cond.true166:                                     ; preds = %if.then156
  %.cast = bitcast i64* %45 to %union.tree_node*, !dbg !7705
  %call169 = call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !7705
  %.pre24 = load i64*, i64** %44, align 8, !dbg !7706
  %bf.load183.pre = load i64, i64* %.pre24, align 8, !dbg !7706
  br label %cond.end178, !dbg !7705

cond.false170:                                    ; preds = %if.then156
  %type173 = bitcast i64* %45 to %struct.tree_type*, !dbg !7705
  %mode174 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type173, i64 0, i32 6, !dbg !7705
  %bf.load175 = load i32, i32* %mode174, align 4, !dbg !7705
  %bf.lshr176 = lshr i32 %bf.load175, 16, !dbg !7705
  %bf.clear177 = and i32 %bf.lshr176, 255, !dbg !7705
  br label %cond.end178, !dbg !7705

cond.end178:                                      ; preds = %cond.false170, %cond.true166
  %bf.load183 = phi i64 [ %bf.load183.pre, %cond.true166 ], [ %bf.load161, %cond.false170 ], !dbg !7706
  %cond179 = phi i32 [ %call169, %cond.true166 ], [ %bf.clear177, %cond.false170 ], !dbg !7705
  %bf.lshr184 = lshr i64 %bf.load183, 56, !dbg !7706
  %conv186 = trunc i64 %bf.lshr184 to i8, !dbg !7706
  %call187 = call fastcc i64 @get_address_cost(i8 zeroext %41, i8 zeroext %42, i64 %43, i64 %call57, i64 %cstepi.0, i32 %cond179, i8 zeroext %conv186, i8 zeroext %call2, i8 zeroext %call149, i8* %can_autoinc) #7, !dbg !7707
  %call188 = call fastcc i64 @add_costs(i64 %37, i64 %call187) #7, !dbg !7708
  br label %cleanup318, !dbg !7709

if.end189:                                        ; preds = %if.end154
  %46 = load i8, i8* %var_present, align 1, !dbg !7710
  call void @llvm.dbg.value(metadata i8 %46, metadata !7581, metadata !DIExpression()), !dbg !7590
  %47 = or i8 %41, %46, !dbg !7712
  %48 = icmp ne i8 %47, 0, !dbg !7712
  %49 = load i64, i64* %offset, align 8, !dbg !7713
  call void @llvm.dbg.value(metadata i64 %49, metadata !7578, metadata !DIExpression()), !dbg !7590
  %tobool194 = icmp ne i64 %49, 0, !dbg !7713
  %or.cond1 = or i1 %48, %tobool194, !dbg !7712
  br i1 %or.cond1, label %if.end219, label %if.then195, !dbg !7712

if.then195:                                       ; preds = %if.end189
  %cmp196 = icmp eq i64 %call57, 1, !dbg !7714
  br i1 %cmp196, label %if.end218, label %if.then198, !dbg !7717

if.then198:                                       ; preds = %if.then195
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7718
  %bf.load200 = load i64, i64* %50, align 8, !dbg !7718
  %bf.cast2028 = and i64 %bf.load200, 65535, !dbg !7718
  %cmp203 = icmp eq i64 %bf.cast2028, 14, !dbg !7718
  br i1 %cmp203, label %cond.true205, label %cond.false207, !dbg !7718

cond.true205:                                     ; preds = %if.then198
  %call206 = call i32 @vector_type_mode(%union.tree_node* %21) #6, !dbg !7718
  br label %cond.end213, !dbg !7718

cond.false207:                                    ; preds = %if.then198
  %type208 = bitcast %union.tree_node* %21 to %struct.tree_type*, !dbg !7718
  %mode209 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type208, i64 0, i32 6, !dbg !7718
  %bf.load210 = load i32, i32* %mode209, align 4, !dbg !7718
  %bf.lshr211 = lshr i32 %bf.load210, 16, !dbg !7718
  %bf.clear212 = and i32 %bf.lshr211, 255, !dbg !7718
  br label %cond.end213, !dbg !7718

cond.end213:                                      ; preds = %cond.false207, %cond.true205
  %cond214 = phi i32 [ %call206, %cond.true205 ], [ %bf.clear212, %cond.false207 ], !dbg !7718
  %call215 = call i32 @multiply_by_cost(i64 %call57, i32 %cond214, i8 zeroext %call2) #7, !dbg !7719
  %cost216 = bitcast i64* %cost to i32*, !dbg !7720
  %add217 = add i32 %36, %call215, !dbg !7721
  store i32 %add217, i32* %cost216, align 8, !dbg !7721
  %.pre26 = load i64, i64* %cost, align 8, !dbg !7722
  br label %if.end218, !dbg !7723

if.end218:                                        ; preds = %if.then195, %cond.end213
  %51 = phi i64 [ %37, %if.then195 ], [ %.pre26, %cond.end213 ], !dbg !7722
  br label %cleanup318, !dbg !7724

if.end219:                                        ; preds = %if.end189
  call void @llvm.dbg.value(metadata i8 %46, metadata !7581, metadata !DIExpression()), !dbg !7590
  %tobool221 = icmp eq i8 %46, 0, !dbg !7725
  br i1 %tobool221, label %if.end247, label %land.lhs.true222, !dbg !7727

land.lhs.true222:                                 ; preds = %if.end219
  call void @llvm.dbg.value(metadata i8 %41, metadata !7582, metadata !DIExpression()), !dbg !7590
  %tobool224 = icmp ne i8 %41, 0, !dbg !7728
  call void @llvm.dbg.value(metadata i64 %49, metadata !7578, metadata !DIExpression()), !dbg !7590
  %or.cond2 = or i1 %tobool224, %tobool194, !dbg !7729
  br i1 %or.cond2, label %if.then227, label %if.end247, !dbg !7729

if.then227:                                       ; preds = %land.lhs.true222
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7730
  %bf.load229 = load i64, i64* %52, align 8, !dbg !7730
  %bf.cast23111 = and i64 %bf.load229, 65535, !dbg !7730
  %cmp232 = icmp eq i64 %bf.cast23111, 14, !dbg !7730
  br i1 %cmp232, label %cond.true234, label %cond.false236, !dbg !7730

cond.true234:                                     ; preds = %if.then227
  %call235 = call i32 @vector_type_mode(%union.tree_node* %21) #6, !dbg !7730
  br label %cond.end242, !dbg !7730

cond.false236:                                    ; preds = %if.then227
  %type237 = bitcast %union.tree_node* %21 to %struct.tree_type*, !dbg !7730
  %mode238 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type237, i64 0, i32 6, !dbg !7730
  %bf.load239 = load i32, i32* %mode238, align 4, !dbg !7730
  %bf.lshr240 = lshr i32 %bf.load239, 16, !dbg !7730
  %bf.clear241 = and i32 %bf.lshr240, 255, !dbg !7730
  br label %cond.end242, !dbg !7730

cond.end242:                                      ; preds = %cond.false236, %cond.true234
  %cond243 = phi i32 [ %call235, %cond.true234 ], [ %bf.clear241, %cond.false236 ], !dbg !7730
  %call244 = call fastcc i32 @add_cost(i32 %cond243, i8 zeroext %call2) #7, !dbg !7731
  %div = udiv i32 %call244, 5, !dbg !7732
  %cost245 = bitcast i64* %cost to i32*, !dbg !7733
  %add246 = add i32 %35, %div, !dbg !7734
  store i32 %add246, i32* %cost245, align 8, !dbg !7734
  %.pre27 = load i64, i64* %offset, align 8, !dbg !7735
  br label %if.end247, !dbg !7737

if.end247:                                        ; preds = %if.end219, %land.lhs.true222, %cond.end242
  %53 = phi i32 [ %34, %if.end219 ], [ %34, %land.lhs.true222 ], [ %add246, %cond.end242 ]
  %54 = phi i64 [ %49, %if.end219 ], [ 0, %land.lhs.true222 ], [ %.pre27, %cond.end242 ], !dbg !7735
  call void @llvm.dbg.value(metadata i64 %54, metadata !7578, metadata !DIExpression()), !dbg !7590
  %tobool248 = icmp eq i64 %54, 0, !dbg !7735
  br i1 %tobool248, label %if.end250, label %if.then249, !dbg !7738

if.then249:                                       ; preds = %if.end247
  %complexity = getelementptr inbounds %struct.comp_cost, %struct.comp_cost* %tmpcast4, i64 0, i32 1, !dbg !7739
  %inc = add i32 %38, 1, !dbg !7740
  store i32 %inc, i32* %complexity, align 4, !dbg !7740
  br label %if.end250, !dbg !7741

if.end250:                                        ; preds = %if.end247, %if.then249
  %55 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7742
  %bf.load252 = load i64, i64* %55, align 8, !dbg !7742
  %bf.cast2549 = and i64 %bf.load252, 65535, !dbg !7742
  %cmp255 = icmp eq i64 %bf.cast2549, 14, !dbg !7742
  br i1 %cmp255, label %cond.true257, label %cond.false259, !dbg !7742

cond.true257:                                     ; preds = %if.end250
  %call258 = call i32 @vector_type_mode(%union.tree_node* %21) #6, !dbg !7742
  br label %cond.end265, !dbg !7742

cond.false259:                                    ; preds = %if.end250
  %type260 = bitcast %union.tree_node* %21 to %struct.tree_type*, !dbg !7742
  %mode261 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type260, i64 0, i32 6, !dbg !7742
  %bf.load262 = load i32, i32* %mode261, align 4, !dbg !7742
  %bf.lshr263 = lshr i32 %bf.load262, 16, !dbg !7742
  %bf.clear264 = and i32 %bf.lshr263, 255, !dbg !7742
  br label %cond.end265, !dbg !7742

cond.end265:                                      ; preds = %cond.false259, %cond.true257
  %cond266 = phi i32 [ %call258, %cond.true257 ], [ %bf.clear264, %cond.false259 ], !dbg !7742
  %call267 = call fastcc i32 @add_cost(i32 %cond266, i8 zeroext %call2) #7, !dbg !7743
  %cost268 = bitcast i64* %cost to i32*, !dbg !7744
  %add269 = add i32 %53, %call267, !dbg !7745
  store i32 %add269, i32* %cost268, align 8, !dbg !7745
  %cmp270 = icmp slt i64 %call57, 0, !dbg !7746
  %sub274 = sub nsw i64 0, %call57, !dbg !7747
  %cond276 = select i1 %cmp270, i64 %sub274, i64 %call57, !dbg !7747
  call void @llvm.dbg.value(metadata i64 %cond276, metadata !7580, metadata !DIExpression()), !dbg !7590
  %cmp277 = icmp eq i64 %cond276, 1, !dbg !7748
  br i1 %cmp277, label %fallback, label %if.then279, !dbg !7750

if.then279:                                       ; preds = %cond.end265
  %bf.load281 = load i64, i64* %55, align 8, !dbg !7751
  %bf.cast28310 = and i64 %bf.load281, 65535, !dbg !7751
  %cmp284 = icmp eq i64 %bf.cast28310, 14, !dbg !7751
  br i1 %cmp284, label %cond.true286, label %cond.false288, !dbg !7751

cond.true286:                                     ; preds = %if.then279
  %call287 = call i32 @vector_type_mode(%union.tree_node* %21) #6, !dbg !7751
  br label %cond.end294, !dbg !7751

cond.false288:                                    ; preds = %if.then279
  %type289 = bitcast %union.tree_node* %21 to %struct.tree_type*, !dbg !7751
  %mode290 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type289, i64 0, i32 6, !dbg !7751
  %bf.load291 = load i32, i32* %mode290, align 4, !dbg !7751
  %bf.lshr292 = lshr i32 %bf.load291, 16, !dbg !7751
  %bf.clear293 = and i32 %bf.lshr292, 255, !dbg !7751
  br label %cond.end294, !dbg !7751

cond.end294:                                      ; preds = %cond.false288, %cond.true286
  %cond295 = phi i32 [ %call287, %cond.true286 ], [ %bf.clear293, %cond.false288 ], !dbg !7751
  %call296 = call i32 @multiply_by_cost(i64 %cond276, i32 %cond295, i8 zeroext %call2) #7, !dbg !7752
  %add298 = add i32 %add269, %call296, !dbg !7753
  store i32 %add298, i32* %cost268, align 8, !dbg !7753
  br label %fallback, !dbg !7754

fallback:                                         ; preds = %cond.end265, %cond.end294, %if.end33
  call void @llvm.dbg.label(metadata !7589), !dbg !7755
  %tobool300 = icmp eq i8* %can_autoinc, null, !dbg !7756
  br i1 %tobool300, label %if.end302, label %if.then301, !dbg !7758

if.then301:                                       ; preds = %fallback
  store i8 0, i8* %can_autoinc, align 1, !dbg !7759
  br label %if.end302, !dbg !7760

if.end302:                                        ; preds = %fallback, %if.then301
  %current_loop303 = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !7761
  %56 = load %struct.loop*, %struct.loop** %current_loop303, align 8, !dbg !7761
  %call304 = call fastcc %union.tree_node* @get_computation_at(%struct.loop* %56, %struct.iv_use* %use, %struct.iv_cand* %cand, %union.gimple_statement_d* %at) #7, !dbg !7762
  call void @llvm.dbg.value(metadata %union.tree_node* %call304, metadata !7587, metadata !DIExpression()), !dbg !7763
  %tobool305 = icmp eq %union.tree_node* %call304, null, !dbg !7764
  br i1 %tobool305, label %if.then306, label %if.end307, !dbg !7766

if.then306:                                       ; preds = %if.end302
  br label %cleanup318, !dbg !7767

if.end307:                                        ; preds = %if.end302
  br i1 %tobool17, label %if.end315, label %if.then309, !dbg !7768

if.then309:                                       ; preds = %if.end307
  %type311 = getelementptr inbounds %union.tree_node, %union.tree_node* %call304, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7769
  %57 = bitcast %union.tree_node** %type311 to %struct.tree_common**, !dbg !7769
  %58 = load %struct.tree_common*, %struct.tree_common** %57, align 8, !dbg !7769
  %type313 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %58, i64 0, i32 2, !dbg !7769
  %59 = load %union.tree_node*, %union.tree_node** %type313, align 8, !dbg !7769
  %call314 = call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %59, %union.tree_node* nonnull %call304) #6, !dbg !7769
  call void @llvm.dbg.value(metadata %union.tree_node* %call314, metadata !7587, metadata !DIExpression()), !dbg !7763
  br label %if.end315, !dbg !7771

if.end315:                                        ; preds = %if.end307, %if.then309
  %comp.0 = phi %union.tree_node* [ %call314, %if.then309 ], [ %call304, %if.end307 ], !dbg !7763
  call void @llvm.dbg.value(metadata %union.tree_node* %comp.0, metadata !7587, metadata !DIExpression()), !dbg !7763
  %call316 = call fastcc i32 @computation_cost(%union.tree_node* %comp.0, i8 zeroext %call2) #7, !dbg !7772
  %call317 = call fastcc i64 @new_cost(i32 %call316, i32 0) #7, !dbg !7773
  br label %cleanup318, !dbg !7774

cleanup318:                                       ; preds = %if.then306, %if.end315, %if.end218, %cond.end178, %if.else58, %if.then52, %if.then31, %if.then15, %if.then
  %60 = phi i64 [ 42949672970000000, %if.then306 ], [ %call317, %if.end315 ], [ %51, %if.end218 ], [ %call188, %cond.end178 ], [ 42949672970000000, %if.else58 ], [ 42949672970000000, %if.then52 ], [ 42949672970000000, %if.then31 ], [ 42949672970000000, %if.then15 ], [ 42949672970000000, %if.then ], !dbg !7775
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !7775
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !7775
  call void @llvm.dbg.value(metadata i8* %symbol_present, metadata !7582, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %symbol_present) #8, !dbg !7775
  call void @llvm.dbg.value(metadata i8* %var_present, metadata !7581, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %var_present) #8, !dbg !7775
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !7775
  ret i64 %60, !dbg !7775
}

declare dso_local zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @constant_multiple_of(%union.tree_node* %top, %union.tree_node* %bot, %struct.double_int* %mul) unnamed_addr #5 !dbg !7776 {
entry:
  %res = alloca %struct.double_int, align 8
  %p0 = alloca %struct.double_int, align 8
  %p1 = alloca %struct.double_int, align 8
  %tmp = alloca %struct.double_int, align 8
  %tmp21 = alloca %struct.double_int, align 8
  %tmp41 = alloca %struct.double_int, align 8
  %tmp44 = alloca %struct.double_int, align 8
  %tmp56 = alloca %struct.double_int, align 8
  %tmp60 = alloca %struct.double_int, align 8
  %tmp68 = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %top, metadata !7781, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata %union.tree_node* %bot, metadata !7782, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata %struct.double_int* %mul, metadata !7783, metadata !DIExpression()), !dbg !7790
  %0 = bitcast %struct.double_int* %res to i8*, !dbg !7791
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7791
  %1 = bitcast %struct.double_int* %p0 to i8*, !dbg !7791
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7791
  %2 = bitcast %struct.double_int* %p1 to i8*, !dbg !7791
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7791
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %top, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7792
  %3 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !7792
  %4 = load %struct.tree_type*, %struct.tree_type** %3, align 8, !dbg !7792
  %precision2 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %4, i64 0, i32 6, !dbg !7792
  %bf.load = load i32, i32* %precision2, align 4, !dbg !7792
  %bf.clear = and i32 %bf.load, 1023, !dbg !7792
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7789, metadata !DIExpression()), !dbg !7790
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %top) #6, !dbg !7793
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7781, metadata !DIExpression()), !dbg !7790
  %call3 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %bot) #6, !dbg !7794
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !7782, metadata !DIExpression()), !dbg !7790
  %call4 = tail call i32 @operand_equal_p(%union.tree_node* %call, %union.tree_node* %call3, i32 0) #6, !dbg !7795
  %tobool = icmp eq i32 %call4, 0, !dbg !7795
  br i1 %tobool, label %if.end, label %if.then, !dbg !7797

if.then:                                          ; preds = %entry
  %5 = bitcast %struct.double_int* %tmp to i8*, !dbg !7798
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !7798
  %call5 = tail call fastcc { i64, i64 } @shwi_to_double_int(i64 1) #7, !dbg !7798
  %6 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 0, !dbg !7798
  %7 = extractvalue { i64, i64 } %call5, 0, !dbg !7798
  store i64 %7, i64* %6, align 8, !dbg !7798
  %8 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 1, !dbg !7798
  %9 = extractvalue { i64, i64 } %call5, 1, !dbg !7798
  store i64 %9, i64* %8, align 8, !dbg !7798
  %10 = bitcast %struct.double_int* %mul to i8*, !dbg !7798
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* nonnull align 8 %5, i64 16, i1 false), !dbg !7798
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !7798
  br label %cleanup, !dbg !7800

if.end:                                           ; preds = %entry
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7801
  %bf.load6 = load i64, i64* %11, align 8, !dbg !7801
  %trunc = trunc i64 %bf.load6 to i16, !dbg !7802
  switch i16 %trunc, label %cleanup [
    i16 65, label %sw.bb
    i16 63, label %sw.bb26
    i16 64, label %sw.bb26
    i16 23, label %sw.bb48
  ], !dbg !7802

sw.bb:                                            ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7803
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7803
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7803
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !7784, metadata !DIExpression()), !dbg !7790
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7805
  %bf.load9 = load i64, i64* %13, align 8, !dbg !7805
  %bf.cast113 = and i64 %bf.load9, 65535, !dbg !7807
  %cmp = icmp eq i64 %bf.cast113, 23, !dbg !7807
  br i1 %cmp, label %if.end13, label %cleanup, !dbg !7808

if.end13:                                         ; preds = %sw.bb
  %14 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7809
  call void @llvm.dbg.value(metadata %struct.double_int* %res, metadata !7786, metadata !DIExpression(DW_OP_deref)), !dbg !7790
  %call17 = call fastcc zeroext i8 @constant_multiple_of(%union.tree_node* %14, %union.tree_node* %call3, %struct.double_int* nonnull %res) #7, !dbg !7811
  %tobool18 = icmp eq i8 %call17, 0, !dbg !7811
  br i1 %tobool18, label %cleanup, label %if.end20, !dbg !7812

if.end20:                                         ; preds = %if.end13
  %15 = bitcast %struct.double_int* %tmp21 to i8*, !dbg !7813
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8, !dbg !7813
  %call23 = call { i64, i64 } @tree_to_double_int(%union.tree_node* %12) #6, !dbg !7814
  %16 = extractvalue { i64, i64 } %call23, 0, !dbg !7814
  %17 = extractvalue { i64, i64 } %call23, 1, !dbg !7814
  %18 = getelementptr inbounds %struct.double_int, %struct.double_int* %res, i64 0, i32 0, !dbg !7815
  %19 = load i64, i64* %18, align 8, !dbg !7815
  %20 = getelementptr inbounds %struct.double_int, %struct.double_int* %res, i64 0, i32 1, !dbg !7815
  %21 = load i64, i64* %20, align 8, !dbg !7815
  %call24 = call { i64, i64 } @double_int_mul(i64 %19, i64 %21, i64 %16, i64 %17) #6, !dbg !7815
  %22 = extractvalue { i64, i64 } %call24, 0, !dbg !7815
  %23 = extractvalue { i64, i64 } %call24, 1, !dbg !7815
  %call25 = call { i64, i64 } @double_int_sext(i64 %22, i64 %23, i32 %bf.clear) #6, !dbg !7813
  %24 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp21, i64 0, i32 0, !dbg !7813
  %25 = extractvalue { i64, i64 } %call25, 0, !dbg !7813
  store i64 %25, i64* %24, align 8, !dbg !7813
  %26 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp21, i64 0, i32 1, !dbg !7813
  %27 = extractvalue { i64, i64 } %call25, 1, !dbg !7813
  store i64 %27, i64* %26, align 8, !dbg !7813
  %28 = bitcast %struct.double_int* %mul to i8*, !dbg !7813
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %15, i64 16, i1 false), !dbg !7813
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8, !dbg !7813
  br label %cleanup, !dbg !7816

sw.bb26:                                          ; preds = %if.end, %if.end
  %operands28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7817
  %29 = load %union.tree_node*, %union.tree_node** %operands28, align 8, !dbg !7817
  call void @llvm.dbg.value(metadata %struct.double_int* %p0, metadata !7787, metadata !DIExpression(DW_OP_deref)), !dbg !7790
  %call30 = call fastcc zeroext i8 @constant_multiple_of(%union.tree_node* %29, %union.tree_node* %call3, %struct.double_int* nonnull %p0) #7, !dbg !7819
  %tobool31 = icmp eq i8 %call30, 0, !dbg !7819
  br i1 %tobool31, label %cleanup, label %lor.lhs.false, !dbg !7820

lor.lhs.false:                                    ; preds = %sw.bb26
  %arrayidx34 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands28, i64 1, !dbg !7821
  %30 = load %union.tree_node*, %union.tree_node** %arrayidx34, align 8, !dbg !7821
  call void @llvm.dbg.value(metadata %struct.double_int* %p1, metadata !7788, metadata !DIExpression(DW_OP_deref)), !dbg !7790
  %call35 = call fastcc zeroext i8 @constant_multiple_of(%union.tree_node* %30, %union.tree_node* %call3, %struct.double_int* nonnull %p1) #7, !dbg !7822
  %tobool36 = icmp eq i8 %call35, 0, !dbg !7822
  br i1 %tobool36, label %cleanup, label %if.end38, !dbg !7823

if.end38:                                         ; preds = %lor.lhs.false
  %bf.cast2 = and i64 %bf.load6, 65535, !dbg !7824
  %cmp39 = icmp eq i64 %bf.cast2, 64, !dbg !7824
  br i1 %cmp39, label %if.then40, label %if.end43, !dbg !7826

if.then40:                                        ; preds = %if.end38
  %31 = bitcast %struct.double_int* %tmp41 to i8*, !dbg !7827
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #8, !dbg !7827
  %32 = getelementptr inbounds %struct.double_int, %struct.double_int* %p1, i64 0, i32 0, !dbg !7827
  %33 = load i64, i64* %32, align 8, !dbg !7827
  %34 = getelementptr inbounds %struct.double_int, %struct.double_int* %p1, i64 0, i32 1, !dbg !7827
  %35 = load i64, i64* %34, align 8, !dbg !7827
  %call42 = call { i64, i64 } @double_int_neg(i64 %33, i64 %35) #6, !dbg !7827
  %36 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp41, i64 0, i32 0, !dbg !7827
  %37 = extractvalue { i64, i64 } %call42, 0, !dbg !7827
  store i64 %37, i64* %36, align 8, !dbg !7827
  %38 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp41, i64 0, i32 1, !dbg !7827
  %39 = extractvalue { i64, i64 } %call42, 1, !dbg !7827
  store i64 %39, i64* %38, align 8, !dbg !7827
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %31, i64 16, i1 false), !dbg !7827
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #8, !dbg !7827
  br label %if.end43, !dbg !7828

if.end43:                                         ; preds = %if.then40, %if.end38
  %40 = bitcast %struct.double_int* %tmp44 to i8*, !dbg !7829
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #8, !dbg !7829
  %41 = getelementptr inbounds %struct.double_int, %struct.double_int* %p0, i64 0, i32 0, !dbg !7830
  %42 = load i64, i64* %41, align 8, !dbg !7830
  %43 = getelementptr inbounds %struct.double_int, %struct.double_int* %p0, i64 0, i32 1, !dbg !7830
  %44 = load i64, i64* %43, align 8, !dbg !7830
  %45 = getelementptr inbounds %struct.double_int, %struct.double_int* %p1, i64 0, i32 0, !dbg !7830
  %46 = load i64, i64* %45, align 8, !dbg !7830
  %47 = getelementptr inbounds %struct.double_int, %struct.double_int* %p1, i64 0, i32 1, !dbg !7830
  %48 = load i64, i64* %47, align 8, !dbg !7830
  %call46 = call { i64, i64 } @double_int_add(i64 %42, i64 %44, i64 %46, i64 %48) #6, !dbg !7830
  %49 = extractvalue { i64, i64 } %call46, 0, !dbg !7830
  %50 = extractvalue { i64, i64 } %call46, 1, !dbg !7830
  %call47 = call { i64, i64 } @double_int_sext(i64 %49, i64 %50, i32 %bf.clear) #6, !dbg !7829
  %51 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp44, i64 0, i32 0, !dbg !7829
  %52 = extractvalue { i64, i64 } %call47, 0, !dbg !7829
  store i64 %52, i64* %51, align 8, !dbg !7829
  %53 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp44, i64 0, i32 1, !dbg !7829
  %54 = extractvalue { i64, i64 } %call47, 1, !dbg !7829
  store i64 %54, i64* %53, align 8, !dbg !7829
  %55 = bitcast %struct.double_int* %mul to i8*, !dbg !7829
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %40, i64 16, i1 false), !dbg !7829
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #8, !dbg !7829
  br label %cleanup, !dbg !7831

sw.bb48:                                          ; preds = %if.end
  %56 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7832
  %bf.load50 = load i64, i64* %56, align 8, !dbg !7832
  %bf.cast521 = and i64 %bf.load50, 65535, !dbg !7834
  %cmp53 = icmp eq i64 %bf.cast521, 23, !dbg !7834
  br i1 %cmp53, label %if.end55, label %cleanup, !dbg !7835

if.end55:                                         ; preds = %sw.bb48
  %57 = bitcast %struct.double_int* %tmp56 to i8*, !dbg !7836
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #8, !dbg !7836
  %call58 = tail call { i64, i64 } @tree_to_double_int(%union.tree_node* %call) #6, !dbg !7837
  %58 = extractvalue { i64, i64 } %call58, 0, !dbg !7837
  %59 = extractvalue { i64, i64 } %call58, 1, !dbg !7837
  %call59 = tail call { i64, i64 } @double_int_sext(i64 %58, i64 %59, i32 %bf.clear) #6, !dbg !7836
  %60 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp56, i64 0, i32 0, !dbg !7836
  %61 = extractvalue { i64, i64 } %call59, 0, !dbg !7836
  store i64 %61, i64* %60, align 8, !dbg !7836
  %62 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp56, i64 0, i32 1, !dbg !7836
  %63 = extractvalue { i64, i64 } %call59, 1, !dbg !7836
  store i64 %63, i64* %62, align 8, !dbg !7836
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %57, i64 16, i1 false), !dbg !7836
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #8, !dbg !7836
  %64 = bitcast %struct.double_int* %tmp60 to i8*, !dbg !7838
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #8, !dbg !7838
  %call62 = tail call { i64, i64 } @tree_to_double_int(%union.tree_node* %call3) #6, !dbg !7839
  %65 = extractvalue { i64, i64 } %call62, 0, !dbg !7839
  %66 = extractvalue { i64, i64 } %call62, 1, !dbg !7839
  %call63 = tail call { i64, i64 } @double_int_sext(i64 %65, i64 %66, i32 %bf.clear) #6, !dbg !7838
  %67 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp60, i64 0, i32 0, !dbg !7838
  %68 = extractvalue { i64, i64 } %call63, 0, !dbg !7838
  store i64 %68, i64* %67, align 8, !dbg !7838
  %69 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp60, i64 0, i32 1, !dbg !7838
  %70 = extractvalue { i64, i64 } %call63, 1, !dbg !7838
  store i64 %70, i64* %69, align 8, !dbg !7838
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %64, i64 16, i1 false), !dbg !7838
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #8, !dbg !7838
  %71 = getelementptr inbounds %struct.double_int, %struct.double_int* %p1, i64 0, i32 0, !dbg !7840
  %72 = load i64, i64* %71, align 8, !dbg !7840
  %73 = getelementptr inbounds %struct.double_int, %struct.double_int* %p1, i64 0, i32 1, !dbg !7840
  %74 = load i64, i64* %73, align 8, !dbg !7840
  %call64 = tail call fastcc zeroext i8 @double_int_zero_p(i64 %72, i64 %74) #7, !dbg !7840
  %tobool65 = icmp eq i8 %call64, 0, !dbg !7840
  br i1 %tobool65, label %if.end67, label %cleanup, !dbg !7842

if.end67:                                         ; preds = %if.end55
  %75 = bitcast %struct.double_int* %tmp68 to i8*, !dbg !7843
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #8, !dbg !7843
  %76 = getelementptr inbounds %struct.double_int, %struct.double_int* %p0, i64 0, i32 0, !dbg !7844
  %77 = load i64, i64* %76, align 8, !dbg !7844
  %78 = getelementptr inbounds %struct.double_int, %struct.double_int* %p0, i64 0, i32 1, !dbg !7844
  %79 = load i64, i64* %78, align 8, !dbg !7844
  call void @llvm.dbg.value(metadata %struct.double_int* %res, metadata !7786, metadata !DIExpression(DW_OP_deref)), !dbg !7790
  %call70 = call { i64, i64 } @double_int_sdivmod(i64 %77, i64 %79, i64 %72, i64 %74, i32 69, %struct.double_int* nonnull %res) #6, !dbg !7844
  %80 = extractvalue { i64, i64 } %call70, 0, !dbg !7844
  %81 = extractvalue { i64, i64 } %call70, 1, !dbg !7844
  %call71 = call { i64, i64 } @double_int_sext(i64 %80, i64 %81, i32 %bf.clear) #6, !dbg !7843
  %82 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp68, i64 0, i32 0, !dbg !7843
  %83 = extractvalue { i64, i64 } %call71, 0, !dbg !7843
  store i64 %83, i64* %82, align 8, !dbg !7843
  %84 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp68, i64 0, i32 1, !dbg !7843
  %85 = extractvalue { i64, i64 } %call71, 1, !dbg !7843
  store i64 %85, i64* %84, align 8, !dbg !7843
  %86 = bitcast %struct.double_int* %mul to i8*, !dbg !7843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* nonnull align 8 %75, i64 16, i1 false), !dbg !7843
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #8, !dbg !7843
  %87 = getelementptr inbounds %struct.double_int, %struct.double_int* %res, i64 0, i32 0, !dbg !7845
  %88 = load i64, i64* %87, align 8, !dbg !7845
  %89 = getelementptr inbounds %struct.double_int, %struct.double_int* %res, i64 0, i32 1, !dbg !7845
  %90 = load i64, i64* %89, align 8, !dbg !7845
  %call72 = call fastcc zeroext i8 @double_int_zero_p(i64 %88, i64 %90) #7, !dbg !7845
  br label %cleanup, !dbg !7846

cleanup:                                          ; preds = %if.end13, %sw.bb, %lor.lhs.false, %sw.bb26, %if.end55, %sw.bb48, %if.end, %if.end67, %if.end43, %if.end20, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ %call72, %if.end67 ], [ 1, %if.end43 ], [ 1, %if.end20 ], [ 0, %sw.bb ], [ 0, %if.end13 ], [ 0, %lor.lhs.false ], [ 0, %sw.bb26 ], [ 0, %sw.bb48 ], [ 0, %if.end55 ], [ 0, %if.end ], !dbg !7790
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7847
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7847
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7847
  ret i8 %retval.0, !dbg !7847
}

declare dso_local zeroext i8 @double_int_fits_in_shwi_p(i64, i64) local_unnamed_addr #2

declare dso_local i64 @double_int_to_shwi(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i64 @difference_cost(%struct.ivopts_data* %data, %union.tree_node* %e1, %union.tree_node* %e2, i8* %symbol_present, i8* %var_present, i64* %offset, %struct.bitmap_head_def** %depends_on) unnamed_addr #5 !dbg !7848 {
entry:
  %retval = alloca i64, align 8
  %off1 = alloca i64, align 8
  %off2 = alloca i64, align 8
  %aff_e1 = alloca %struct.affine_tree_combination, align 8
  %aff_e2 = alloca %struct.affine_tree_combination, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !7852, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata %union.tree_node* %e1, metadata !7853, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata %union.tree_node* %e2, metadata !7854, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i8* %symbol_present, metadata !7855, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i8* %var_present, metadata !7856, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i64* %offset, metadata !7857, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %depends_on, metadata !7858, metadata !DIExpression()), !dbg !7884
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %e1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7885
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !7885
  %1 = load i64*, i64** %0, align 8, !dbg !7885
  %bf.load = load i64, i64* %1, align 8, !dbg !7885
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7885
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !7885
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7885

cond.true:                                        ; preds = %entry
  %.cast = bitcast i64* %1 to %union.tree_node*, !dbg !7885
  %call = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !7885
  br label %cond.end, !dbg !7885

cond.false:                                       ; preds = %entry
  %type5 = bitcast i64* %1 to %struct.tree_type*, !dbg !7885
  %mode6 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type5, i64 0, i32 6, !dbg !7885
  %bf.load7 = load i32, i32* %mode6, align 4, !dbg !7885
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !7885
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !7885
  br label %cond.end, !dbg !7885

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear8, %cond.false ], !dbg !7885
  call void @llvm.dbg.value(metadata i32 %cond, metadata !7859, metadata !DIExpression()), !dbg !7884
  %2 = bitcast i64* %off1 to i8*, !dbg !7886
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7886
  %3 = bitcast i64* %off2 to i8*, !dbg !7886
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !7886
  %4 = bitcast %struct.affine_tree_combination* %aff_e1 to i8*, !dbg !7887
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %4) #8, !dbg !7887
  %5 = bitcast %struct.affine_tree_combination* %aff_e2 to i8*, !dbg !7887
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %5) #8, !dbg !7887
  call void @llvm.dbg.value(metadata i64* %off1, metadata !7860, metadata !DIExpression(DW_OP_deref)), !dbg !7884
  %call10 = call fastcc %union.tree_node* @strip_offset(%union.tree_node* %e1, i64* nonnull %off1) #7, !dbg !7888
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !7853, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i64* %off2, metadata !7861, metadata !DIExpression(DW_OP_deref)), !dbg !7884
  %call11 = call fastcc %union.tree_node* @strip_offset(%union.tree_node* %e2, i64* nonnull %off2) #7, !dbg !7889
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !7854, metadata !DIExpression()), !dbg !7884
  %6 = load i64, i64* %off1, align 8, !dbg !7890
  call void @llvm.dbg.value(metadata i64 %6, metadata !7860, metadata !DIExpression()), !dbg !7884
  %7 = load i64, i64* %off2, align 8, !dbg !7891
  call void @llvm.dbg.value(metadata i64 %7, metadata !7861, metadata !DIExpression()), !dbg !7884
  %sub = sub i64 %6, %7, !dbg !7892
  %8 = load i64, i64* %offset, align 8, !dbg !7893
  %add = add i64 %8, %sub, !dbg !7893
  store i64 %add, i64* %offset, align 8, !dbg !7893
  %call12 = call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %call10) #6, !dbg !7894
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !7853, metadata !DIExpression()), !dbg !7884
  %call13 = call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %call11) #6, !dbg !7895
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !7854, metadata !DIExpression()), !dbg !7884
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7896
  %bf.load15 = load i64, i64* %9, align 8, !dbg !7896
  %bf.cast172 = and i64 %bf.load15, 65535, !dbg !7898
  %cmp18 = icmp eq i64 %bf.cast172, 121, !dbg !7898
  br i1 %cmp18, label %if.then, label %if.end, !dbg !7899

if.then:                                          ; preds = %cond.end
  %call19 = call fastcc i64 @ptr_difference_cost(%struct.ivopts_data* %data, %union.tree_node* %call12, %union.tree_node* %call13, i8* %symbol_present, i8* %var_present, i64* %offset, %struct.bitmap_head_def** %depends_on) #7, !dbg !7900
  store i64 %call19, i64* %retval, align 8, !dbg !7900
  br label %cleanup, !dbg !7901

if.end:                                           ; preds = %cond.end
  store i8 0, i8* %symbol_present, align 1, !dbg !7902
  %call20 = call i32 @operand_equal_p(%union.tree_node* %call12, %union.tree_node* %call13, i32 0) #6, !dbg !7903
  %tobool = icmp eq i32 %call20, 0, !dbg !7903
  br i1 %tobool, label %if.end22, label %if.then21, !dbg !7905

if.then21:                                        ; preds = %if.end
  store i8 0, i8* %var_present, align 1, !dbg !7906
  store i64 0, i64* %retval, align 8, !dbg !7908
  br label %cleanup, !dbg !7909

if.end22:                                         ; preds = %if.end
  store i8 1, i8* %var_present, align 1, !dbg !7910
  %call23 = call i32 @integer_zerop(%union.tree_node* %call13) #6, !dbg !7911
  %tobool24 = icmp eq i32 %call23, 0, !dbg !7911
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !7913

if.then25:                                        ; preds = %if.end22
  %call26 = call fastcc i64 @force_var_cost(%struct.ivopts_data* %data, %union.tree_node* %call12, %struct.bitmap_head_def** %depends_on) #7, !dbg !7914
  store i64 %call26, i64* %retval, align 8, !dbg !7914
  br label %cleanup, !dbg !7915

if.end27:                                         ; preds = %if.end22
  %call28 = call i32 @integer_zerop(%union.tree_node* %call12) #6, !dbg !7916
  %tobool29 = icmp eq i32 %call28, 0, !dbg !7916
  br i1 %tobool29, label %if.end34, label %if.then30, !dbg !7917

if.then30:                                        ; preds = %if.end27
  %call31 = call fastcc i64 @force_var_cost(%struct.ivopts_data* %data, %union.tree_node* %call13, %struct.bitmap_head_def** %depends_on) #7, !dbg !7918
  store i64 %call31, i64* %retval, align 8, !dbg !7918
  %speed = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 11, !dbg !7919
  %10 = load i8, i8* %speed, align 1, !dbg !7919
  %call32 = call i32 @multiply_by_cost(i64 -1, i32 %cond, i8 zeroext %10) #7, !dbg !7920
  %cost = bitcast i64* %retval to i32*, !dbg !7921
  %11 = trunc i64 %call31 to i32, !dbg !7922
  %add33 = add i32 %call32, %11, !dbg !7922
  store i32 %add33, i32* %cost, align 8, !dbg !7922
  %.pre = load i64, i64* %retval, align 8, !dbg !7923
  br label %cleanup, !dbg !7924

if.end34:                                         ; preds = %if.end27
  %type36 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7925
  %12 = load %union.tree_node*, %union.tree_node** %type36, align 8, !dbg !7925
  %call37 = call %union.tree_node* @signed_type_for(%union.tree_node* %12) #6, !dbg !7926
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !7880, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff_e1, metadata !7862, metadata !DIExpression(DW_OP_deref)), !dbg !7884
  call void @tree_to_aff_combination(%union.tree_node* %call12, %union.tree_node* %call37, %struct.affine_tree_combination* nonnull %aff_e1) #6, !dbg !7927
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff_e2, metadata !7879, metadata !DIExpression(DW_OP_deref)), !dbg !7884
  call void @tree_to_aff_combination(%union.tree_node* %call13, %union.tree_node* %call37, %struct.affine_tree_combination* nonnull %aff_e2) #6, !dbg !7928
  %call38 = call fastcc { i64, i64 } @shwi_to_double_int(i64 -1) #7, !dbg !7929
  %13 = extractvalue { i64, i64 } %call38, 0, !dbg !7929
  %14 = extractvalue { i64, i64 } %call38, 1, !dbg !7929
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff_e2, metadata !7879, metadata !DIExpression(DW_OP_deref)), !dbg !7884
  call void @aff_combination_scale(%struct.affine_tree_combination* nonnull %aff_e2, i64 %13, i64 %14) #6, !dbg !7930
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff_e1, metadata !7862, metadata !DIExpression(DW_OP_deref)), !dbg !7884
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff_e2, metadata !7879, metadata !DIExpression(DW_OP_deref)), !dbg !7884
  call void @aff_combination_add(%struct.affine_tree_combination* nonnull %aff_e1, %struct.affine_tree_combination* nonnull %aff_e2) #6, !dbg !7931
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff_e1, metadata !7862, metadata !DIExpression(DW_OP_deref)), !dbg !7884
  %call39 = call %union.tree_node* @aff_combination_to_tree(%struct.affine_tree_combination* nonnull %aff_e1) #6, !dbg !7932
  %call40 = call fastcc i64 @force_var_cost(%struct.ivopts_data* %data, %union.tree_node* %call39, %struct.bitmap_head_def** %depends_on) #7, !dbg !7933
  store i64 %call40, i64* %retval, align 8, !dbg !7933
  br label %cleanup, !dbg !7934

cleanup:                                          ; preds = %if.end34, %if.then30, %if.then25, %if.then21, %if.then
  %15 = phi i64 [ %call40, %if.end34 ], [ %.pre, %if.then30 ], [ %call26, %if.then25 ], [ 0, %if.then21 ], [ %call19, %if.then ], !dbg !7923
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %5) #8, !dbg !7923
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %4) #8, !dbg !7923
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !7923
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7923
  ret i64 %15, !dbg !7923
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @force_var_cost(%struct.ivopts_data* %data, %union.tree_node* %expr, %struct.bitmap_head_def** %depends_on) unnamed_addr #5 !dbg !7935 {
entry:
  %expr.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !7939, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7940, metadata !DIExpression()), !dbg !7942
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %depends_on, metadata !7941, metadata !DIExpression()), !dbg !7942
  %tobool = icmp eq %struct.bitmap_head_def** %depends_on, null, !dbg !7943
  br i1 %tobool, label %if.end, label %if.then, !dbg !7945

if.then:                                          ; preds = %entry
  store %struct.ivopts_data* %data, %struct.ivopts_data** @fd_ivopts_data, align 8, !dbg !7946
  %0 = bitcast %struct.bitmap_head_def** %depends_on to i8*, !dbg !7948
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr, metadata !7940, metadata !DIExpression(DW_OP_deref)), !dbg !7942
  %call = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %expr.addr, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_depends, i8* nonnull %0, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !7948
  %.pre = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !7949
  br label %if.end, !dbg !7950

if.end:                                           ; preds = %entry, %if.then
  %1 = phi %union.tree_node* [ %expr, %entry ], [ %.pre, %if.then ], !dbg !7949
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7940, metadata !DIExpression()), !dbg !7942
  %speed = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 11, !dbg !7951
  %2 = load i8, i8* %speed, align 1, !dbg !7951
  %call1 = call fastcc i64 @force_expr_to_var_cost(%union.tree_node* %1, i8 zeroext %2) #7, !dbg !7952
  ret i64 %call1, !dbg !7953
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @add_cost(i32 %mode, i8 zeroext %speed) unnamed_addr #5 !dbg !2339 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2343, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata i8 %speed, metadata !2344, metadata !DIExpression()), !dbg !7954
  %idxprom = zext i32 %mode to i64, !dbg !7955
  %arrayidx = getelementptr inbounds [87 x i32], [87 x i32]* @add_cost.costs, i64 0, i64 %idxprom, !dbg !7955
  %0 = load i32, i32* %arrayidx, align 4, !dbg !7955
  %tobool = icmp eq i32 %0, 0, !dbg !7955
  br i1 %tobool, label %if.end, label %if.then, !dbg !7957

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !7958

if.end:                                           ; preds = %entry
  tail call void @start_sequence() #6, !dbg !7959
  %call = tail call %struct.rtx_def* @gen_raw_REG(i32 %mode, i32 58) #6, !dbg !7960
  %call3 = tail call %struct.rtx_def* @gen_raw_REG(i32 %mode, i32 59) #6, !dbg !7960
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %mode, %struct.rtx_def* %call, %struct.rtx_def* %call3) #6, !dbg !7960
  %call5 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call4, %struct.rtx_def* null) #6, !dbg !7961
  %call6 = tail call %struct.rtx_def* @get_insns() #6, !dbg !7962
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !2345, metadata !DIExpression()), !dbg !7954
  tail call void @end_sequence() #6, !dbg !7963
  %call7 = tail call fastcc i32 @seq_cost(%struct.rtx_def* %call6, i8 zeroext %speed) #7, !dbg !7964
  call void @llvm.dbg.value(metadata i32 %call7, metadata !2346, metadata !DIExpression()), !dbg !7954
  %tobool8 = icmp eq i32 %call7, 0, !dbg !7965
  %spec.select = select i1 %tobool8, i32 1, i32 %call7, !dbg !7967
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2346, metadata !DIExpression()), !dbg !7954
  store i32 %spec.select, i32* %arrayidx, align 4, !dbg !7968
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7969
  %tobool13 = icmp eq %struct._IO_FILE* %1, null, !dbg !7969
  br i1 %tobool13, label %cleanup, label %land.lhs.true, !dbg !7971

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* @dump_flags, align 4, !dbg !7972
  %and = and i32 %2, 8, !dbg !7973
  %tobool14 = icmp eq i32 %and, 0, !dbg !7973
  br i1 %tobool14, label %cleanup, label %if.then15, !dbg !7974

if.then15:                                        ; preds = %land.lhs.true
  %arrayidx17 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom, !dbg !7975
  %3 = load i8*, i8** %arrayidx17, align 8, !dbg !7975
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.53, i64 0, i64 0), i8* %3, i32 %spec.select) #6, !dbg !7976
  br label %cleanup, !dbg !7976

cleanup:                                          ; preds = %land.lhs.true, %if.end, %if.then15, %if.then
  %retval.0 = phi i32 [ %0, %if.then ], [ %spec.select, %if.then15 ], [ %spec.select, %land.lhs.true ], [ %spec.select, %if.end ], !dbg !7954
  ret i32 %retval.0, !dbg !7977
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @add_costs(i64 %cost1.coerce, i64 %cost2.coerce) unnamed_addr #5 !dbg !7978 {
entry:
  %cost1 = alloca i64, align 8
  %tmpcast = bitcast i64* %cost1 to %struct.comp_cost*
  %0 = trunc i64 %cost2.coerce to i32, !dbg !7984
  %cost3 = bitcast i64* %cost1 to i32*, !dbg !7985
  %1 = trunc i64 %cost1.coerce to i32, !dbg !7986
  %add = add nsw i32 %1, %0, !dbg !7986
  store i32 %add, i32* %cost3, align 8, !dbg !7986
  %2 = lshr i64 %cost2.coerce, 32, !dbg !7987
  %3 = trunc i64 %2 to i32, !dbg !7987
  %complexity4 = getelementptr inbounds %struct.comp_cost, %struct.comp_cost* %tmpcast, i64 0, i32 1, !dbg !7988
  %4 = lshr i64 %cost1.coerce, 32, !dbg !7989
  %5 = trunc i64 %4 to i32, !dbg !7989
  %add5 = add i32 %5, %3, !dbg !7989
  store i32 %add5, i32* %complexity4, align 4, !dbg !7989
  %6 = load i64, i64* %cost1, align 8, !dbg !7990
  ret i64 %6, !dbg !7991
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @stmt_after_increment(%struct.loop* %loop, %struct.iv_cand* %cand, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !7992 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !7996, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !7997, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7998, metadata !DIExpression()), !dbg !7999
  %pos = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 2, !dbg !8000
  %0 = load i32, i32* %pos, align 8, !dbg !8000
  switch i32 %0, label %sw.default [
    i32 1, label %return
    i32 0, label %sw.bb1
    i32 4, label %sw.bb2
    i32 3, label %sw.bb2
    i32 2, label %sw.bb4
  ], !dbg !8001

sw.bb1:                                           ; preds = %entry
  %call = tail call fastcc zeroext i8 @stmt_after_ip_normal_pos(%struct.loop* %loop, %union.gimple_statement_d* %stmt) #7, !dbg !8002
  br label %return, !dbg !8004

sw.bb2:                                           ; preds = %entry, %entry
  %call3 = tail call fastcc zeroext i8 @stmt_after_inc_pos(%struct.iv_cand* %cand, %union.gimple_statement_d* %stmt, i8 zeroext 0) #7, !dbg !8005
  br label %return, !dbg !8006

sw.bb4:                                           ; preds = %entry
  %call5 = tail call fastcc zeroext i8 @stmt_after_inc_pos(%struct.iv_cand* %cand, %union.gimple_statement_d* %stmt, i8 zeroext 1) #7, !dbg !8007
  br label %return, !dbg !8008

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !8009
  br label %return, !dbg !8010

return:                                           ; preds = %entry, %sw.default, %sw.bb4, %sw.bb2, %sw.bb1
  %retval.0 = phi i8 [ 0, %sw.default ], [ %call5, %sw.bb4 ], [ %call3, %sw.bb2 ], [ %call, %sw.bb1 ], [ 0, %entry ], !dbg !7999
  ret i8 %retval.0, !dbg !8011
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @get_address_cost(i8 zeroext %symbol_present, i8 zeroext %var_present, i64 %offset, i64 %ratio, i64 %cstep, i32 %mem_mode, i8 zeroext %as, i8 zeroext %speed, i8 zeroext %stmt_after_inc, i8* %may_autoinc) unnamed_addr #5 !dbg !2352 {
entry:
  call void @llvm.dbg.value(metadata i8 %symbol_present, metadata !2356, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8 %var_present, metadata !2357, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i64 %offset, metadata !2358, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i64 %ratio, metadata !2359, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i64 %cstep, metadata !2360, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 %mem_mode, metadata !2361, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8 %as, metadata !2362, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8 %speed, metadata !2363, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8 %stmt_after_inc, metadata !2364, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %may_autoinc, metadata !2365, metadata !DIExpression()), !dbg !8012
  %0 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !8013
  %call = tail call i32 %0(i8 zeroext %as) #6, !dbg !8014
  call void @llvm.dbg.value(metadata i32 %call, metadata !2366, metadata !DIExpression()), !dbg !8012
  %conv = zext i8 %as to i32, !dbg !8015
  %mul = mul nuw nsw i32 %conv, 87, !dbg !8016
  %add = add nsw i32 %mul, %mem_mode, !dbg !8017
  call void @llvm.dbg.value(metadata i32 %add, metadata !2367, metadata !DIExpression()), !dbg !8012
  %1 = load %struct.VEC_address_cost_data_heap*, %struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list, align 8, !dbg !8018
  %base = getelementptr inbounds %struct.VEC_address_cost_data_heap, %struct.VEC_address_cost_data_heap* %1, i64 0, i32 0, !dbg !8018
  %call1 = tail call fastcc i32 @VEC_address_cost_data_base_length(%struct.VEC_address_cost_data_base* %base) #7, !dbg !8018
  %cmp = icmp ult i32 %add, %call1, !dbg !8020
  br i1 %cmp, label %if.end, label %if.then, !dbg !8021

if.then:                                          ; preds = %entry
  %add3 = add i32 %add, 1, !dbg !8022
  tail call fastcc void @VEC_address_cost_data_heap_safe_grow_cleared(%struct.VEC_address_cost_data_heap** nonnull @get_address_cost.address_cost_data_list, i32 %add3) #7, !dbg !8022
  br label %if.end, !dbg !8022

if.end:                                           ; preds = %entry, %if.then
  %2 = load %struct.VEC_address_cost_data_heap*, %struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list, align 8, !dbg !8023
  %base6 = getelementptr inbounds %struct.VEC_address_cost_data_heap, %struct.VEC_address_cost_data_heap* %2, i64 0, i32 0, !dbg !8023
  %call10 = tail call fastcc %struct.anon* @VEC_address_cost_data_base_index(%struct.VEC_address_cost_data_base* %base6, i32 %add) #7, !dbg !8023
  call void @llvm.dbg.value(metadata %struct.anon* %call10, metadata !2368, metadata !DIExpression()), !dbg !8012
  %tobool11 = icmp eq %struct.anon* %call10, null, !dbg !8024
  br i1 %tobool11, label %if.then12, label %if.end281, !dbg !8025

if.then12:                                        ; preds = %if.end
  %3 = load i32, i32* @ix86_isa_flags, align 4, !dbg !8026
  %and = and i32 %3, 32, !dbg !8026
  %cmp13 = icmp eq i32 %and, 0, !dbg !8026
  %div = select i1 %cmp13, i64 16, i64 32, !dbg !8027
  call void @llvm.dbg.value(metadata i64 %div, metadata !2383, metadata !DIExpression()), !dbg !8028
  %call18 = tail call i8* @xcalloc(i64 1, i64 80) #6, !dbg !8029
  %4 = bitcast i8* %call18 to %struct.anon*, !dbg !8030
  call void @llvm.dbg.value(metadata %struct.anon* %4, metadata !2368, metadata !DIExpression()), !dbg !8012
  %call19 = tail call %struct.rtx_def* @gen_raw_REG(i32 %call, i32 58) #6, !dbg !8031
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !2396, metadata !DIExpression()), !dbg !8028
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %call, %struct.rtx_def* %call19, %struct.rtx_def* null) #6, !dbg !8032
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call20, metadata !2393, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 %div, metadata !2380, metadata !DIExpression()), !dbg !8028
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call20, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8033
  %rt_rtx = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !8033
  br label %for.cond, !dbg !8037

for.cond:                                         ; preds = %for.inc, %if.then12
  %i.0 = phi i64 [ %div, %if.then12 ], [ %shl, %for.inc ], !dbg !8038
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !2380, metadata !DIExpression()), !dbg !8028
  %cmp21 = icmp slt i64 %i.0, 1048577, !dbg !8039
  br i1 %cmp21, label %for.body, label %for.end, !dbg !8040

for.body:                                         ; preds = %for.cond
  %call23 = tail call %struct.rtx_def* @gen_int_mode(i64 %i.0, i32 %call) #6, !dbg !8041
  store %struct.rtx_def* %call23, %struct.rtx_def** %rt_rtx, align 8, !dbg !8042
  %call24 = tail call i32 @memory_address_addr_space_p(i32 %mem_mode, %struct.rtx_def* %call20, i8 zeroext %as) #6, !dbg !8043
  %tobool25 = icmp eq i32 %call24, 0, !dbg !8043
  br i1 %tobool25, label %for.end, label %for.inc, !dbg !8045

for.inc:                                          ; preds = %for.body
  %shl = shl i64 %i.0, 1, !dbg !8046
  call void @llvm.dbg.value(metadata i64 %shl, metadata !2380, metadata !DIExpression()), !dbg !8028
  br label %for.cond, !dbg !8047, !llvm.loop !8048

for.end:                                          ; preds = %for.body, %for.cond
  %i.0.lcssa = phi i64 [ %i.0, %for.body ], [ %i.0, %for.cond ], !dbg !8038
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2380, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2380, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2380, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2380, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2380, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2380, metadata !DIExpression()), !dbg !8028
  %cmp28 = icmp eq i64 %i.0.lcssa, %div, !dbg !8050
  %shr = ashr exact i64 %i.0.lcssa, 1, !dbg !8051
  %cond33 = select i1 %cmp28, i64 0, i64 %shr, !dbg !8051
  %max_offset = getelementptr inbounds i8, i8* %call18, i64 8, !dbg !8052
  %6 = bitcast i8* %max_offset to i64*, !dbg !8052
  store i64 %cond33, i64* %6, align 8, !dbg !8053
  call void @llvm.dbg.value(metadata i64 %cond33, metadata !2385, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 %div, metadata !2380, metadata !DIExpression()), !dbg !8028
  br label %for.cond35, !dbg !8054

for.cond35:                                       ; preds = %for.inc48, %for.end
  %i.1 = phi i64 [ %div, %for.end ], [ %shl49, %for.inc48 ], !dbg !8056
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !2380, metadata !DIExpression()), !dbg !8028
  %cmp36 = icmp slt i64 %i.1, 1048577, !dbg !8057
  br i1 %cmp36, label %for.body38, label %for.end50, !dbg !8059

for.body38:                                       ; preds = %for.cond35
  %sub = sub nsw i64 0, %i.1, !dbg !8060
  %call39 = tail call %struct.rtx_def* @gen_int_mode(i64 %sub, i32 %call) #6, !dbg !8062
  store %struct.rtx_def* %call39, %struct.rtx_def** %rt_rtx, align 8, !dbg !8063
  %call44 = tail call i32 @memory_address_addr_space_p(i32 %mem_mode, %struct.rtx_def* %call20, i8 zeroext %as) #6, !dbg !8064
  %tobool45 = icmp eq i32 %call44, 0, !dbg !8064
  br i1 %tobool45, label %for.end50, label %for.inc48, !dbg !8066

for.inc48:                                        ; preds = %for.body38
  %shl49 = shl i64 %i.1, 1, !dbg !8067
  call void @llvm.dbg.value(metadata i64 %shl49, metadata !2380, metadata !DIExpression()), !dbg !8028
  br label %for.cond35, !dbg !8068, !llvm.loop !8069

for.end50:                                        ; preds = %for.body38, %for.cond35
  %i.1.lcssa = phi i64 [ %i.1, %for.body38 ], [ %i.1, %for.cond35 ], !dbg !8056
  call void @llvm.dbg.value(metadata i64 %i.1.lcssa, metadata !2380, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 %i.1.lcssa, metadata !2380, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 %i.1.lcssa, metadata !2380, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 %i.1.lcssa, metadata !2380, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 %i.1.lcssa, metadata !2380, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 %i.1.lcssa, metadata !2380, metadata !DIExpression()), !dbg !8028
  %cmp51 = icmp eq i64 %i.1.lcssa, %div, !dbg !8071
  %shr55 = ashr exact i64 %i.1.lcssa, 1, !dbg !8072
  %sub56 = sub nsw i64 0, %shr55, !dbg !8072
  %cond58 = select i1 %cmp51, i64 0, i64 %sub56, !dbg !8072
  %min_offset = bitcast i8* %call18 to i64*, !dbg !8073
  store i64 %cond58, i64* %min_offset, align 8, !dbg !8074
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8075
  %tobool59 = icmp eq %struct._IO_FILE* %7, null, !dbg !8075
  br i1 %tobool59, label %if.end73, label %land.lhs.true, !dbg !8077

land.lhs.true:                                    ; preds = %for.end50
  %8 = load i32, i32* @dump_flags, align 4, !dbg !8078
  %and60 = and i32 %8, 8, !dbg !8079
  %tobool61 = icmp eq i32 %and60, 0, !dbg !8079
  br i1 %tobool61, label %if.end73, label %if.then62, !dbg !8080

if.then62:                                        ; preds = %land.lhs.true
  %call63 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.54, i64 0, i64 0)) #6, !dbg !8081
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8083
  %idxprom = zext i32 %mem_mode to i64, !dbg !8084
  %arrayidx64 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom, !dbg !8084
  %10 = load i8*, i8** %arrayidx64, align 8, !dbg !8084
  %11 = load i64, i64* %min_offset, align 8, !dbg !8085
  %conv66 = trunc i64 %11 to i32, !dbg !8086
  %call67 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.55, i64 0, i64 0), i8* %10, i32 %conv66) #6, !dbg !8087
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8088
  %13 = load i64, i64* %6, align 8, !dbg !8089
  %conv71 = trunc i64 %13 to i32, !dbg !8090
  %call72 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i64 0, i64 0), i8* %10, i32 %conv71) #6, !dbg !8091
  br label %if.end73, !dbg !8092

if.end73:                                         ; preds = %land.lhs.true, %for.end50, %if.then62
  call void @llvm.dbg.value(metadata i64 1, metadata !2384, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 2, metadata !2380, metadata !DIExpression()), !dbg !8028
  br label %for.cond74, !dbg !8093

for.cond74:                                       ; preds = %for.inc82, %if.end73
  %i.2 = phi i64 [ 2, %if.end73 ], [ %inc, %for.inc82 ], !dbg !8095
  call void @llvm.dbg.value(metadata i64 %i.2, metadata !2380, metadata !DIExpression()), !dbg !8028
  %exitcond17 = icmp eq i64 %i.2, 129, !dbg !8096
  br i1 %exitcond17, label %for.end83, label %for.body77, !dbg !8098

for.body77:                                       ; preds = %for.cond74
  %call78 = tail call zeroext i8 @multiplier_allowed_in_address_p(i64 %i.2, i32 %mem_mode, i8 zeroext %as) #7, !dbg !8099
  %tobool79 = icmp eq i8 %call78, 0, !dbg !8099
  br i1 %tobool79, label %for.inc82, label %for.end83, !dbg !8101

for.inc82:                                        ; preds = %for.body77
  %inc = add nuw nsw i64 %i.2, 1, !dbg !8102
  call void @llvm.dbg.value(metadata i64 %inc, metadata !2380, metadata !DIExpression()), !dbg !8028
  br label %for.cond74, !dbg !8103, !llvm.loop !8104

for.end83:                                        ; preds = %for.cond74, %for.body77
  %rat.0 = phi i64 [ 1, %for.cond74 ], [ %i.2, %for.body77 ], !dbg !8028
  call void @llvm.dbg.value(metadata i64 %rat.0, metadata !2384, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i32 0, metadata !2370, metadata !DIExpression()), !dbg !8012
  %call84 = tail call %struct.rtx_def* @gen_raw_REG(i32 %call, i32 58) #6, !dbg !8106
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call84, metadata !2395, metadata !DIExpression()), !dbg !8028
  %call85 = tail call %struct.rtx_def* @gen_raw_REG(i32 %call, i32 59) #6, !dbg !8107
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call85, metadata !2396, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 0, metadata !2380, metadata !DIExpression()), !dbg !8028
  %costs = getelementptr inbounds i8, i8* %call18, i64 16, !dbg !8108
  %14 = bitcast i8* %costs to [2 x [2 x [2 x [2 x i32]]]]*, !dbg !8108
  br label %for.cond86, !dbg !8112

for.cond86:                                       ; preds = %if.end132, %for.end83
  %i.3 = phi i64 [ 0, %for.end83 ], [ %inc150, %if.end132 ], !dbg !8113
  call void @llvm.dbg.value(metadata i64 %i.3, metadata !2380, metadata !DIExpression()), !dbg !8028
  %exitcond16 = icmp eq i64 %i.3, 16, !dbg !8114
  br i1 %exitcond16, label %for.end151, label %for.body89, !dbg !8115

for.body89:                                       ; preds = %for.cond86
  %15 = trunc i64 %i.3 to i32, !dbg !8116
  %conv91 = and i32 %15, 1, !dbg !8116
  call void @llvm.dbg.value(metadata i32 %conv91, metadata !2387, metadata !DIExpression()), !dbg !8028
  %16 = lshr i64 %i.3, 1, !dbg !8117
  %17 = trunc i64 %16 to i32, !dbg !8118
  %conv94 = and i32 %17, 1, !dbg !8118
  call void @llvm.dbg.value(metadata i32 %conv94, metadata !2388, metadata !DIExpression()), !dbg !8028
  %18 = lshr i64 %i.3, 2, !dbg !8119
  %19 = trunc i64 %18 to i32, !dbg !8120
  %conv97 = and i32 %19, 1, !dbg !8120
  call void @llvm.dbg.value(metadata i32 %conv97, metadata !2389, metadata !DIExpression()), !dbg !8028
  %20 = lshr i64 %i.3, 3, !dbg !8121
  %21 = trunc i64 %20 to i32, !dbg !8122
  %conv100 = and i32 %21, 1, !dbg !8122
  call void @llvm.dbg.value(metadata i32 %conv100, metadata !2390, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call84, metadata !2393, metadata !DIExpression()), !dbg !8028
  %tobool101 = icmp eq i32 %conv100, 0, !dbg !8123
  br i1 %tobool101, label %if.end105, label %if.then102, !dbg !8125

if.then102:                                       ; preds = %for.body89
  %call103 = tail call %struct.rtx_def* @gen_int_mode(i64 %rat.0, i32 %call) #6, !dbg !8126
  %call104 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %call, %struct.rtx_def* %call84, %struct.rtx_def* %call103) #6, !dbg !8126
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call104, metadata !2393, metadata !DIExpression()), !dbg !8028
  br label %if.end105, !dbg !8127

if.end105:                                        ; preds = %for.body89, %if.then102
  %addr.0 = phi %struct.rtx_def* [ %call104, %if.then102 ], [ %call84, %for.body89 ], !dbg !8108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.0, metadata !2393, metadata !DIExpression()), !dbg !8028
  %tobool106 = icmp eq i32 %conv94, 0, !dbg !8128
  br i1 %tobool106, label %if.end109, label %if.then107, !dbg !8130

if.then107:                                       ; preds = %if.end105
  %call108 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %call, %struct.rtx_def* %addr.0, %struct.rtx_def* %call85) #6, !dbg !8131
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call108, metadata !2393, metadata !DIExpression()), !dbg !8028
  br label %if.end109, !dbg !8132

if.end109:                                        ; preds = %if.end105, %if.then107
  %addr.1 = phi %struct.rtx_def* [ %call108, %if.then107 ], [ %addr.0, %if.end105 ], !dbg !8108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.1, metadata !2393, metadata !DIExpression()), !dbg !8028
  %tobool110 = icmp eq i32 %conv91, 0, !dbg !8133
  br i1 %tobool110, label %if.else, label %if.then111, !dbg !8135

if.then111:                                       ; preds = %if.end109
  %call112 = tail call i8* @ggc_alloc_string(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i32 -1) #6, !dbg !8136
  %call113 = tail call %struct.rtx_def* @gen_rtx_fmt_s00_stat(i32 45, i32 %call, i8* %call112) #6, !dbg !8136
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call113, metadata !2394, metadata !DIExpression()), !dbg !8028
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call113, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8138
  %rt_int = bitcast %union.rtunion_def* %22 to i32*, !dbg !8138
  store i32 2, i32* %rt_int, align 8, !dbg !8139
  %tobool117 = icmp eq i32 %conv97, 0, !dbg !8140
  br i1 %tobool117, label %if.end128, label %if.then118, !dbg !8142

if.then118:                                       ; preds = %if.then111
  %call119 = tail call %struct.rtx_def* @gen_int_mode(i64 %cond33, i32 %call) #6, !dbg !8143
  %call120 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %call, %struct.rtx_def* %call113, %struct.rtx_def* %call119) #6, !dbg !8143
  %call121 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 35, i32 %call, %struct.rtx_def* %call120) #6, !dbg !8143
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call121, metadata !2394, metadata !DIExpression()), !dbg !8028
  br label %if.end128, !dbg !8144

if.else:                                          ; preds = %if.end109
  %tobool123 = icmp eq i32 %conv97, 0, !dbg !8145
  br i1 %tobool123, label %if.end128, label %if.then124, !dbg !8147

if.then124:                                       ; preds = %if.else
  %call125 = tail call %struct.rtx_def* @gen_int_mode(i64 %cond33, i32 %call) #6, !dbg !8148
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call125, metadata !2394, metadata !DIExpression()), !dbg !8028
  br label %if.end128, !dbg !8149

if.end128:                                        ; preds = %if.then111, %if.else, %if.then124, %if.then118
  %base17.2 = phi %struct.rtx_def* [ %call121, %if.then118 ], [ %call113, %if.then111 ], [ %call125, %if.then124 ], [ null, %if.else ], !dbg !8150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %base17.2, metadata !2394, metadata !DIExpression()), !dbg !8028
  %tobool129 = icmp eq %struct.rtx_def* %base17.2, null, !dbg !8151
  br i1 %tobool129, label %if.end132, label %if.then130, !dbg !8153

if.then130:                                       ; preds = %if.end128
  %call131 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %call, %struct.rtx_def* %addr.1, %struct.rtx_def* nonnull %base17.2) #6, !dbg !8154
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call131, metadata !2393, metadata !DIExpression()), !dbg !8028
  br label %if.end132, !dbg !8155

if.end132:                                        ; preds = %if.end128, %if.then130
  %addr.2 = phi %struct.rtx_def* [ %call131, %if.then130 ], [ %addr.1, %if.end128 ], !dbg !8108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.2, metadata !2393, metadata !DIExpression()), !dbg !8028
  tail call void @start_sequence() #6, !dbg !8156
  %23 = load i32, i32* @cse_not_expected, align 4, !dbg !8157
  call void @llvm.dbg.value(metadata i32 %23, metadata !2386, metadata !DIExpression()), !dbg !8028
  store i32 1, i32* @cse_not_expected, align 4, !dbg !8158
  %call133 = tail call %struct.rtx_def* @memory_address_addr_space(i32 %mem_mode, %struct.rtx_def* %addr.2, i8 zeroext %as) #6, !dbg !8159
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call133, metadata !2393, metadata !DIExpression()), !dbg !8028
  store i32 %23, i32* @cse_not_expected, align 4, !dbg !8160
  %call134 = tail call %struct.rtx_def* @get_insns() #6, !dbg !8161
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call134, metadata !2392, metadata !DIExpression()), !dbg !8028
  tail call void @end_sequence() #6, !dbg !8162
  %call135 = tail call fastcc i32 @seq_cost(%struct.rtx_def* %call134, i8 zeroext %speed) #7, !dbg !8163
  call void @llvm.dbg.value(metadata i32 %call135, metadata !2370, metadata !DIExpression()), !dbg !8012
  %call136 = tail call i32 @address_cost(%struct.rtx_def* %call133, i32 %mem_mode, i8 zeroext %as, i8 zeroext %speed) #6, !dbg !8164
  %add137 = add i32 %call135, %call136, !dbg !8165
  call void @llvm.dbg.value(metadata i32 %add137, metadata !2370, metadata !DIExpression()), !dbg !8012
  %tobool138 = icmp eq i32 %add137, 0, !dbg !8166
  %spec.select = select i1 %tobool138, i32 1, i32 %add137, !dbg !8168
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2370, metadata !DIExpression()), !dbg !8012
  %idxprom141 = zext i32 %conv91 to i64, !dbg !8169
  %idxprom143 = zext i32 %conv94 to i64, !dbg !8169
  %idxprom145 = zext i32 %conv97 to i64, !dbg !8169
  %idxprom147 = zext i32 %conv100 to i64, !dbg !8169
  %arrayidx148 = getelementptr inbounds [2 x [2 x [2 x [2 x i32]]]], [2 x [2 x [2 x [2 x i32]]]]* %14, i64 0, i64 %idxprom141, i64 %idxprom143, i64 %idxprom145, i64 %idxprom147, !dbg !8169
  store i32 %spec.select, i32* %arrayidx148, align 4, !dbg !8170
  %inc150 = add nuw nsw i64 %i.3, 1, !dbg !8171
  call void @llvm.dbg.value(metadata i64 %inc150, metadata !2380, metadata !DIExpression()), !dbg !8028
  br label %for.cond86, !dbg !8172, !llvm.loop !8173

for.end151:                                       ; preds = %for.cond86
  %call152 = tail call fastcc i32 @add_cost(i32 %call, i8 zeroext %speed) #7, !dbg !8175
  call void @llvm.dbg.value(metadata i32 %call152, metadata !2391, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i64 0, metadata !2380, metadata !DIExpression()), !dbg !8028
  %arrayidx167 = getelementptr inbounds i8, i8* %call18, i64 32, !dbg !8176
  %24 = bitcast i8* %arrayidx167 to [2 x [2 x i32]]*, !dbg !8176
  %arrayidx178 = getelementptr inbounds i8, i8* %call18, i64 48, !dbg !8180
  %25 = bitcast i8* %arrayidx178 to [2 x [2 x [2 x i32]]]*, !dbg !8180
  br label %for.cond153, !dbg !8182

for.cond153:                                      ; preds = %for.inc197, %for.end151
  %i.4 = phi i64 [ 0, %for.end151 ], [ %inc198, %for.inc197 ], !dbg !8183
  call void @llvm.dbg.value(metadata i64 %i.4, metadata !2380, metadata !DIExpression()), !dbg !8028
  %exitcond15 = icmp eq i64 %i.4, 8, !dbg !8184
  br i1 %exitcond15, label %for.end199, label %for.body156, !dbg !8185

for.body156:                                      ; preds = %for.cond153
  %26 = trunc i64 %i.4 to i32, !dbg !8186
  %conv158 = and i32 %26, 1, !dbg !8186
  call void @llvm.dbg.value(metadata i32 %conv158, metadata !2388, metadata !DIExpression()), !dbg !8028
  %27 = lshr i64 %i.4, 1, !dbg !8187
  %conv161 = and i64 %27, 1, !dbg !8188
  %28 = lshr i64 %i.4, 2, !dbg !8189
  %conv164 = and i64 %28, 1, !dbg !8190
  call void @llvm.dbg.value(metadata i64 %conv164, metadata !2390, metadata !DIExpression()), !dbg !8028
  %arrayidx171 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %24, i64 0, i64 %conv161, i64 %conv164, !dbg !8191
  %29 = load i32, i32* %arrayidx171, align 4, !dbg !8191
  %add172 = add i32 %29, 1, !dbg !8192
  call void @llvm.dbg.value(metadata i32 %add172, metadata !2370, metadata !DIExpression()), !dbg !8012
  %tobool173 = icmp eq i32 %conv158, 0, !dbg !8193
  %add175 = select i1 %tobool173, i32 0, i32 %call152, !dbg !8195
  %spec.select1 = add i32 %add172, %add175, !dbg !8195
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !2370, metadata !DIExpression()), !dbg !8012
  %idxprom179 = zext i32 %conv158 to i64, !dbg !8196
  %arrayidx184 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %25, i64 0, i64 %idxprom179, i64 %conv161, i64 %conv164, !dbg !8196
  %30 = load i32, i32* %arrayidx184, align 4, !dbg !8196
  %cmp185 = icmp ult i32 %spec.select1, %30, !dbg !8197
  br i1 %cmp185, label %if.then187, label %for.inc197, !dbg !8198

if.then187:                                       ; preds = %for.body156
  store i32 %spec.select1, i32* %arrayidx184, align 4, !dbg !8199
  br label %for.inc197, !dbg !8200

for.inc197:                                       ; preds = %for.body156, %if.then187
  %inc198 = add nuw nsw i64 %i.4, 1, !dbg !8201
  call void @llvm.dbg.value(metadata i64 %inc198, metadata !2380, metadata !DIExpression()), !dbg !8028
  br label %for.cond153, !dbg !8202, !llvm.loop !8203

for.end199:                                       ; preds = %for.cond153
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8205
  %tobool200 = icmp eq %struct._IO_FILE* %31, null, !dbg !8205
  br i1 %tobool200, label %if.end273, label %land.lhs.true201, !dbg !8207

land.lhs.true201:                                 ; preds = %for.end199
  %32 = load i32, i32* @dump_flags, align 4, !dbg !8208
  %and202 = and i32 %32, 8, !dbg !8209
  %tobool203 = icmp eq i32 %and202, 0, !dbg !8209
  br i1 %tobool203, label %if.end273, label %if.then204, !dbg !8210

if.then204:                                       ; preds = %land.lhs.true201
  %call205 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %31, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i64 0, i64 0)) #6, !dbg !8211
  call void @llvm.dbg.value(metadata i64 0, metadata !2380, metadata !DIExpression()), !dbg !8028
  br label %for.cond206, !dbg !8213

for.cond206:                                      ; preds = %if.end237, %if.then204
  %i.5 = phi i64 [ 0, %if.then204 ], [ %inc249, %if.end237 ], !dbg !8215
  call void @llvm.dbg.value(metadata i64 %i.5, metadata !2380, metadata !DIExpression()), !dbg !8028
  %exitcond = icmp eq i64 %i.5, 16, !dbg !8216
  br i1 %exitcond, label %for.end250, label %for.body209, !dbg !8218

for.body209:                                      ; preds = %for.cond206
  %33 = trunc i64 %i.5 to i32, !dbg !8219
  %conv211 = and i32 %33, 1, !dbg !8219
  call void @llvm.dbg.value(metadata i32 %conv211, metadata !2387, metadata !DIExpression()), !dbg !8028
  %34 = lshr i64 %i.5, 1, !dbg !8221
  %35 = trunc i64 %34 to i32, !dbg !8222
  %conv214 = and i32 %35, 1, !dbg !8222
  call void @llvm.dbg.value(metadata i32 %conv214, metadata !2388, metadata !DIExpression()), !dbg !8028
  %36 = lshr i64 %i.5, 2, !dbg !8223
  %37 = trunc i64 %36 to i32, !dbg !8224
  %conv217 = and i32 %37, 1, !dbg !8224
  call void @llvm.dbg.value(metadata i32 %conv217, metadata !2389, metadata !DIExpression()), !dbg !8028
  %38 = lshr i64 %i.5, 3, !dbg !8225
  %39 = trunc i64 %38 to i32, !dbg !8226
  %conv220 = and i32 %39, 1, !dbg !8226
  call void @llvm.dbg.value(metadata i32 %conv220, metadata !2390, metadata !DIExpression()), !dbg !8028
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8227
  %call221 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !8228
  %tobool222 = icmp eq i32 %conv211, 0, !dbg !8229
  br i1 %tobool222, label %if.end225, label %if.then223, !dbg !8231

if.then223:                                       ; preds = %for.body209
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8232
  %call224 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0)) #6, !dbg !8233
  br label %if.end225, !dbg !8233

if.end225:                                        ; preds = %for.body209, %if.then223
  %tobool226 = icmp eq i32 %conv214, 0, !dbg !8234
  br i1 %tobool226, label %if.end229, label %if.then227, !dbg !8236

if.then227:                                       ; preds = %if.end225
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8237
  %call228 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i64 0, i64 0)) #6, !dbg !8238
  br label %if.end229, !dbg !8238

if.end229:                                        ; preds = %if.end225, %if.then227
  %tobool230 = icmp eq i32 %conv217, 0, !dbg !8239
  br i1 %tobool230, label %if.end233, label %if.then231, !dbg !8241

if.then231:                                       ; preds = %if.end229
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8242
  %call232 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !8243
  br label %if.end233, !dbg !8243

if.end233:                                        ; preds = %if.end229, %if.then231
  %tobool234 = icmp eq i32 %conv220, 0, !dbg !8244
  br i1 %tobool234, label %if.end237, label %if.then235, !dbg !8246

if.then235:                                       ; preds = %if.end233
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8247
  %call236 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !8248
  br label %if.end237, !dbg !8248

if.end237:                                        ; preds = %if.end233, %if.then235
  %idxprom239 = zext i32 %conv211 to i64, !dbg !8249
  %idxprom241 = zext i32 %conv214 to i64, !dbg !8249
  %idxprom243 = zext i32 %conv217 to i64, !dbg !8249
  %idxprom245 = zext i32 %conv220 to i64, !dbg !8249
  %arrayidx246 = getelementptr inbounds [2 x [2 x [2 x [2 x i32]]]], [2 x [2 x [2 x [2 x i32]]]]* %14, i64 0, i64 %idxprom239, i64 %idxprom241, i64 %idxprom243, i64 %idxprom245, !dbg !8249
  %45 = load i32, i32* %arrayidx246, align 4, !dbg !8249
  call void @llvm.dbg.value(metadata i32 %45, metadata !2370, metadata !DIExpression()), !dbg !8012
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8250
  %call247 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0), i32 %45) #6, !dbg !8251
  %inc249 = add nuw nsw i64 %i.5, 1, !dbg !8252
  call void @llvm.dbg.value(metadata i64 %inc249, metadata !2380, metadata !DIExpression()), !dbg !8028
  br label %for.cond206, !dbg !8253, !llvm.loop !8254

for.end250:                                       ; preds = %for.cond206
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8256
  %call272 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8257
  br label %if.end273, !dbg !8258

if.end273:                                        ; preds = %land.lhs.true201, %for.end199, %for.end250
  %48 = load %struct.VEC_address_cost_data_heap*, %struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list, align 8, !dbg !8259
  %base276 = getelementptr inbounds %struct.VEC_address_cost_data_heap, %struct.VEC_address_cost_data_heap* %48, i64 0, i32 0, !dbg !8259
  %call280 = tail call fastcc %struct.anon* @VEC_address_cost_data_base_replace(%struct.VEC_address_cost_data_base* %base276, i32 %add, %struct.anon* %4) #7, !dbg !8259
  br label %if.end281, !dbg !8260

if.end281:                                        ; preds = %if.end, %if.end273
  %data.0 = phi %struct.anon* [ %call10, %if.end ], [ %4, %if.end273 ], !dbg !8012
  call void @llvm.dbg.value(metadata %struct.anon* %data.0, metadata !2368, metadata !DIExpression()), !dbg !8012
  %idxprom282 = zext i32 %call to i64, !dbg !8261
  %arrayidx283 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom282, !dbg !8261
  %49 = load i8, i8* %arrayidx283, align 1, !dbg !8261
  %conv285 = zext i8 %49 to i64, !dbg !8261
  %mul286 = shl nuw nsw i64 %conv285, 3, !dbg !8261
  call void @llvm.dbg.value(metadata i8 %49, metadata !2379, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shl, DW_OP_stack_value)), !dbg !8012
  %sub289 = add nuw nsw i64 %mul286, 4294967295, !dbg !8262
  %sh_prom = and i64 %sub289, 4294967295, !dbg !8263
  %shl291 = shl i64 -2, %sh_prom, !dbg !8264
  %neg = xor i64 %shl291, -1, !dbg !8265
  call void @llvm.dbg.value(metadata i64 %neg, metadata !2378, metadata !DIExpression()), !dbg !8012
  %and292 = and i64 %neg, %offset, !dbg !8266
  call void @llvm.dbg.value(metadata i64 %and292, metadata !2358, metadata !DIExpression()), !dbg !8012
  %50 = shl i64 1, %sh_prom, !dbg !8267
  %51 = and i64 %and292, %50, !dbg !8267
  %tobool297 = icmp eq i64 %51, 0, !dbg !8267
  %or = or i64 %shl291, %offset, !dbg !8269
  %offset.addr.0 = select i1 %tobool297, i64 %and292, i64 %or, !dbg !8269
  call void @llvm.dbg.value(metadata i64 %offset.addr.0, metadata !2358, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i64 %offset.addr.0, metadata !2375, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8 0, metadata !2374, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i64 %offset.addr.0, metadata !2376, metadata !DIExpression()), !dbg !8012
  br label %if.end368, !dbg !8270

if.else319:                                       ; No predecessors!
  br label %if.end368, !dbg !8272

if.end368:                                        ; preds = %if.end281, %if.else319
  call void @llvm.dbg.value(metadata i8 0, metadata !2374, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 0, metadata !2369, metadata !DIExpression()), !dbg !8012
  %cmp369 = icmp eq i64 %offset.addr.0, 0, !dbg !8274
  br i1 %cmp369, label %land.end, label %land.lhs.true371, !dbg !8275

land.lhs.true371:                                 ; preds = %if.end368
  %min_offset372 = getelementptr inbounds %struct.anon, %struct.anon* %data.0, i64 0, i32 0, !dbg !8276
  %52 = load i64, i64* %min_offset372, align 8, !dbg !8276
  %cmp373 = icmp sgt i64 %52, %offset.addr.0, !dbg !8277
  br i1 %cmp373, label %land.end, label %land.rhs, !dbg !8278

land.rhs:                                         ; preds = %land.lhs.true371
  %max_offset375 = getelementptr inbounds %struct.anon, %struct.anon* %data.0, i64 0, i32 1, !dbg !8279
  %53 = load i64, i64* %max_offset375, align 8, !dbg !8279
  %cmp376 = icmp sle i64 %offset.addr.0, %53, !dbg !8280
  %phitmp = zext i1 %cmp376 to i8
  br label %land.end

land.end:                                         ; preds = %land.lhs.true371, %if.end368, %land.rhs
  %54 = phi i8 [ 0, %land.lhs.true371 ], [ 0, %if.end368 ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %54, metadata !2372, metadata !DIExpression()), !dbg !8012
  %cmp379 = icmp eq i64 %ratio, 1, !dbg !8281
  br i1 %cmp379, label %land.end385, label %land.rhs381, !dbg !8282

land.rhs381:                                      ; preds = %land.end
  %call382 = tail call zeroext i8 @multiplier_allowed_in_address_p(i64 %ratio, i32 %mem_mode, i8 zeroext %as) #7, !dbg !8283
  %tobool384 = icmp ne i8 %call382, 0, !dbg !8282
  %phitmp14 = zext i1 %tobool384 to i8
  br label %land.end385

land.end385:                                      ; preds = %land.end, %land.rhs381
  %55 = phi i8 [ 0, %land.end ], [ %phitmp14, %land.rhs381 ]
  call void @llvm.dbg.value(metadata i8 %55, metadata !2373, metadata !DIExpression()), !dbg !8012
  %tobool391 = icmp ne i8 %55, 0, !dbg !8284
  %or.cond11 = or i1 %cmp379, %tobool391, !dbg !8286
  br i1 %or.cond11, label %if.end395, label %if.then392, !dbg !8286

if.then392:                                       ; preds = %land.end385
  %call393 = tail call i32 @multiply_by_cost(i64 %ratio, i32 %call, i8 zeroext %speed) #7, !dbg !8287
  call void @llvm.dbg.value(metadata i32 %call393, metadata !2369, metadata !DIExpression()), !dbg !8012
  br label %if.end395, !dbg !8288

if.end395:                                        ; preds = %land.end385, %if.then392
  %cost.0 = phi i32 [ %call393, %if.then392 ], [ 0, %land.end385 ], !dbg !8012
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !2369, metadata !DIExpression()), !dbg !8012
  %56 = or i8 %54, %symbol_present, !dbg !8289
  %57 = icmp ne i8 %56, 0, !dbg !8289
  %58 = or i1 %57, %cmp369, !dbg !8289
  br i1 %58, label %if.end404, label %if.then401, !dbg !8289

if.then401:                                       ; preds = %if.end395
  %call402 = tail call fastcc i32 @add_cost(i32 %call, i8 zeroext %speed) #7, !dbg !8291
  %add403 = add i32 %cost.0, %call402, !dbg !8292
  call void @llvm.dbg.value(metadata i32 %add403, metadata !2369, metadata !DIExpression()), !dbg !8012
  br label %if.end404, !dbg !8293

if.end404:                                        ; preds = %if.end395, %if.then401
  %cost.1 = phi i32 [ %add403, %if.then401 ], [ %cost.0, %if.end395 ], !dbg !8012
  call void @llvm.dbg.value(metadata i32 %cost.1, metadata !2369, metadata !DIExpression()), !dbg !8012
  %tobool405 = icmp eq i8* %may_autoinc, null, !dbg !8294
  br i1 %tobool405, label %if.end407, label %if.then406, !dbg !8296

if.then406:                                       ; preds = %if.end404
  store i8 0, i8* %may_autoinc, align 1, !dbg !8297
  br label %if.end407, !dbg !8298

if.end407:                                        ; preds = %if.end404, %if.then406
  %idxprom409 = zext i8 %symbol_present to i64, !dbg !8299
  %idxprom411 = zext i8 %var_present to i64, !dbg !8299
  %idxprom413 = zext i8 %54 to i64, !dbg !8299
  %idxprom415 = zext i8 %55 to i64, !dbg !8299
  %arrayidx416 = getelementptr inbounds %struct.anon, %struct.anon* %data.0, i64 0, i32 2, i64 %idxprom409, i64 %idxprom411, i64 %idxprom413, i64 %idxprom415, !dbg !8299
  %59 = load i32, i32* %arrayidx416, align 4, !dbg !8299
  call void @llvm.dbg.value(metadata i32 %59, metadata !2370, metadata !DIExpression()), !dbg !8012
  %cmp418 = icmp ne i8 %symbol_present, 0, !dbg !8300
  %conv419 = zext i1 %cmp418 to i32, !dbg !8300
  %cmp421 = icmp ne i8 %var_present, 0, !dbg !8301
  %conv422 = zext i1 %cmp421 to i32, !dbg !8301
  %add423 = add nuw nsw i32 %conv419, %conv422, !dbg !8302
  %conv424 = zext i8 %54 to i32, !dbg !8303
  %add425 = add nuw nsw i32 %add423, %conv424, !dbg !8304
  %conv426 = zext i8 %55 to i32, !dbg !8305
  %add427 = add nuw nsw i32 %add425, %conv426, !dbg !8306
  call void @llvm.dbg.value(metadata i32 %add427, metadata !2371, metadata !DIExpression()), !dbg !8012
  %add428 = add i32 %cost.1, %59, !dbg !8307
  %call429 = tail call fastcc i64 @new_cost(i32 %add428, i32 %add427) #7, !dbg !8308
  ret i64 %call429, !dbg !8309
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_computation_at(%struct.loop* %loop, %struct.iv_use* %use, %struct.iv_cand* %cand, %union.gimple_statement_d* %at) unnamed_addr #5 !dbg !8310 {
entry:
  %aff = alloca %struct.affine_tree_combination, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !8314, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !8315, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !8316, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %at, metadata !8317, metadata !DIExpression()), !dbg !8320
  %0 = bitcast %struct.affine_tree_combination* %aff to i8*, !dbg !8321
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %0) #8, !dbg !8321
  %iv = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 2, !dbg !8322
  %1 = bitcast %struct.iv** %iv to %struct.tree_common***, !dbg !8322
  %2 = load %struct.tree_common**, %struct.tree_common*** %1, align 8, !dbg !8322
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !8322
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !8322
  %4 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !8322
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !8319, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff, metadata !8318, metadata !DIExpression(DW_OP_deref)), !dbg !8320
  %call = call fastcc zeroext i8 @get_computation_aff(%struct.loop* %loop, %struct.iv_use* %use, %struct.iv_cand* %cand, %union.gimple_statement_d* %at, %struct.affine_tree_combination* nonnull %aff) #7, !dbg !8323
  %tobool = icmp eq i8 %call, 0, !dbg !8323
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8325

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff, metadata !8318, metadata !DIExpression(DW_OP_deref)), !dbg !8320
  call void @unshare_aff_combination(%struct.affine_tree_combination* nonnull %aff) #6, !dbg !8326
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff, metadata !8318, metadata !DIExpression(DW_OP_deref)), !dbg !8320
  %call2 = call %union.tree_node* @aff_combination_to_tree(%struct.affine_tree_combination* nonnull %aff) #6, !dbg !8327
  %call3 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %4, %union.tree_node* %call2) #6, !dbg !8327
  br label %cleanup, !dbg !8328

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call3, %if.end ], [ null, %entry ], !dbg !8320
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %0) #8, !dbg !8329
  ret %union.tree_node* %retval.0, !dbg !8329
}

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i64 @new_cost(i32 %runtime, i32 %complexity) unnamed_addr #5 !dbg !8330 {
entry:
  %retval = alloca i64, align 8
  %tmpcast = bitcast i64* %retval to %struct.comp_cost*
  call void @llvm.dbg.value(metadata i32 %runtime, metadata !8334, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i32 %complexity, metadata !8335, metadata !DIExpression()), !dbg !8337
  %cost = bitcast i64* %retval to i32*, !dbg !8338
  store i32 %runtime, i32* %cost, align 8, !dbg !8339
  %complexity1 = getelementptr inbounds %struct.comp_cost, %struct.comp_cost* %tmpcast, i64 0, i32 1, !dbg !8340
  store i32 %complexity, i32* %complexity1, align 4, !dbg !8341
  %0 = load i64, i64* %retval, align 8, !dbg !8342
  ret i64 %0, !dbg !8342
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @computation_cost(%union.tree_node* %expr, i8 zeroext %speed) unnamed_addr #5 !dbg !8343 {
entry:
  %expr.addr = alloca %union.tree_node*, align 8
  %regno = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !8347, metadata !DIExpression()), !dbg !8355
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  call void @llvm.dbg.value(metadata i8 %speed, metadata !8348, metadata !DIExpression()), !dbg !8355
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8356
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !8356
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8351, metadata !DIExpression()), !dbg !8355
  %1 = bitcast i32* %regno to i8*, !dbg !8357
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !8357
  call void @llvm.dbg.value(metadata i32 58, metadata !8353, metadata !DIExpression()), !dbg !8355
  store i32 58, i32* %regno, align 4, !dbg !8358
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8359
  %function_frequency = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 20, !dbg !8360
  %bf.load = load i32, i32* %function_frequency, align 8, !dbg !8360
  %bf.clear = and i32 %bf.load, 196608, !dbg !8360
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !8354, metadata !DIExpression()), !dbg !8355
  %bf.clear5 = and i32 %bf.load, -196609, !dbg !8361
  %bf.set = or i32 %bf.clear5, 65536, !dbg !8361
  store i32 %bf.set, i32* %function_frequency, align 8, !dbg !8361
  store i8 %speed, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 42), align 2, !dbg !8362
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr, metadata !8347, metadata !DIExpression(DW_OP_deref)), !dbg !8355
  %call = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %expr.addr, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @prepare_decl_rtl, i8* nonnull %1, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !8363
  call void @start_sequence() #6, !dbg !8364
  %3 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8365
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !8347, metadata !DIExpression()), !dbg !8355
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8366
  %bf.load6 = load i64, i64* %4, align 8, !dbg !8366
  %bf.cast1 = and i64 %bf.load6, 65535, !dbg !8366
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !8366
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8366

cond.true:                                        ; preds = %entry
  %call8 = call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !8366
  br label %cond.end, !dbg !8366

cond.false:                                       ; preds = %entry
  %type9 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !8366
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type9, i64 0, i32 6, !dbg !8366
  %bf.load10 = load i32, i32* %mode, align 4, !dbg !8366
  %bf.lshr11 = lshr i32 %bf.load10, 16, !dbg !8366
  %bf.clear12 = and i32 %bf.lshr11, 255, !dbg !8366
  br label %cond.end, !dbg !8366

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call8, %cond.true ], [ %bf.clear12, %cond.false ], !dbg !8366
  %call13 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %3, %struct.rtx_def* null, i32 %cond, i32 0) #7, !dbg !8367
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !8350, metadata !DIExpression()), !dbg !8355
  %call14 = call %struct.rtx_def* @get_insns() #6, !dbg !8368
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !8349, metadata !DIExpression()), !dbg !8355
  call void @end_sequence() #6, !dbg !8369
  call void @default_rtl_profile() #6, !dbg !8370
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8371
  %function_frequency16 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 20, !dbg !8372
  %bf.load17 = load i32, i32* %function_frequency16, align 8, !dbg !8373
  %bf.clear18 = and i32 %bf.load17, -196609, !dbg !8373
  %bf.set19 = or i32 %bf.clear18, %bf.clear, !dbg !8373
  store i32 %bf.set19, i32* %function_frequency16, align 8, !dbg !8373
  %call20 = call fastcc i32 @seq_cost(%struct.rtx_def* %call14, i8 zeroext %speed) #7, !dbg !8374
  call void @llvm.dbg.value(metadata i32 %call20, metadata !8352, metadata !DIExpression()), !dbg !8355
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call13, i64 0, i32 0, !dbg !8375
  %bf.load21 = load i32, i32* %6, align 8, !dbg !8375
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !8375
  %cmp23 = icmp eq i32 %bf.clear22, 43, !dbg !8375
  br i1 %cmp23, label %if.then, label %if.end, !dbg !8377

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call13, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8378
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8378
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8378
  %bf.load25 = load i64, i64* %4, align 8, !dbg !8379
  %bf.cast272 = and i64 %bf.load25, 65535, !dbg !8379
  %cmp28 = icmp eq i64 %bf.cast272, 14, !dbg !8379
  br i1 %cmp28, label %cond.true29, label %cond.false31, !dbg !8379

cond.true29:                                      ; preds = %if.then
  %call30 = call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !8379
  %bf.load40.pre = load i64, i64* %4, align 8, !dbg !8380
  br label %cond.end37, !dbg !8379

cond.false31:                                     ; preds = %if.then
  %type32 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !8379
  %mode33 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type32, i64 0, i32 6, !dbg !8379
  %bf.load34 = load i32, i32* %mode33, align 4, !dbg !8379
  %bf.lshr35 = lshr i32 %bf.load34, 16, !dbg !8379
  %bf.clear36 = and i32 %bf.lshr35, 255, !dbg !8379
  br label %cond.end37, !dbg !8379

cond.end37:                                       ; preds = %cond.false31, %cond.true29
  %bf.load40 = phi i64 [ %bf.load40.pre, %cond.true29 ], [ %bf.load25, %cond.false31 ], !dbg !8380
  %cond38 = phi i32 [ %call30, %cond.true29 ], [ %bf.clear36, %cond.false31 ], !dbg !8379
  %bf.lshr41 = lshr i64 %bf.load40, 56, !dbg !8380
  %conv = trunc i64 %bf.lshr41 to i8, !dbg !8380
  %call43 = call i32 @address_cost(%struct.rtx_def* %7, i32 %cond38, i8 zeroext %conv, i8 zeroext %speed) #6, !dbg !8381
  %add = add i32 %call20, %call43, !dbg !8382
  call void @llvm.dbg.value(metadata i32 %add, metadata !8352, metadata !DIExpression()), !dbg !8355
  br label %if.end, !dbg !8383

if.end:                                           ; preds = %cond.end37, %cond.end
  %cost.0 = phi i32 [ %add, %cond.end37 ], [ %call20, %cond.end ], !dbg !8355
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !8352, metadata !DIExpression()), !dbg !8355
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !8384
  ret i32 %cost.0, !dbg !8385
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i64, i64 } @shwi_to_double_int(i64 %cst) unnamed_addr #0 !dbg !8386 {
entry:
  call void @llvm.dbg.value(metadata i64 %cst, metadata !8390, metadata !DIExpression()), !dbg !8392
  %cst.lobit = ashr i64 %cst, 63, !dbg !8393
  %0 = insertvalue { i64, i64 } undef, i64 %cst, 0, !dbg !8394
  %1 = insertvalue { i64, i64 } %0, i64 %cst.lobit, 1, !dbg !8394
  ret { i64, i64 } %1, !dbg !8394
}

declare dso_local { i64, i64 } @double_int_sext(i64, i64, i32) local_unnamed_addr #2

declare dso_local { i64, i64 } @double_int_mul(i64, i64, i64, i64) local_unnamed_addr #2

declare dso_local { i64, i64 } @tree_to_double_int(%union.tree_node*) local_unnamed_addr #2

declare dso_local { i64, i64 } @double_int_neg(i64, i64) local_unnamed_addr #2

declare dso_local { i64, i64 } @double_int_add(i64, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @double_int_zero_p(i64 %cst.coerce0, i64 %cst.coerce1) unnamed_addr #0 !dbg !8395 {
entry:
  %0 = or i64 %cst.coerce0, %cst.coerce1, !dbg !8400
  %1 = icmp eq i64 %0, 0, !dbg !8400
  %conv = zext i1 %1 to i8, !dbg !8401
  ret i8 %conv, !dbg !8402
}

declare dso_local { i64, i64 } @double_int_sdivmod(i64, i64, i64, i64, i32, %struct.double_int*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i64 @ptr_difference_cost(%struct.ivopts_data* %data, %union.tree_node* %e1, %union.tree_node* %e2, i8* %symbol_present, i8* %var_present, i64* %offset, %struct.bitmap_head_def** %depends_on) unnamed_addr #5 !dbg !8403 {
entry:
  %diff = alloca i64, align 8
  %aff_e1 = alloca %struct.affine_tree_combination, align 8
  %aff_e2 = alloca %struct.affine_tree_combination, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !8405, metadata !DIExpression()), !dbg !8416
  call void @llvm.dbg.value(metadata %union.tree_node* %e1, metadata !8406, metadata !DIExpression()), !dbg !8416
  call void @llvm.dbg.value(metadata %union.tree_node* %e2, metadata !8407, metadata !DIExpression()), !dbg !8416
  call void @llvm.dbg.value(metadata i8* %symbol_present, metadata !8408, metadata !DIExpression()), !dbg !8416
  call void @llvm.dbg.value(metadata i8* %var_present, metadata !8409, metadata !DIExpression()), !dbg !8416
  call void @llvm.dbg.value(metadata i64* %offset, metadata !8410, metadata !DIExpression()), !dbg !8416
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %depends_on, metadata !8411, metadata !DIExpression()), !dbg !8416
  %0 = bitcast i64* %diff to i8*, !dbg !8417
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8417
  call void @llvm.dbg.value(metadata i64 0, metadata !8412, metadata !DIExpression()), !dbg !8416
  store i64 0, i64* %diff, align 8, !dbg !8418
  %1 = bitcast %struct.affine_tree_combination* %aff_e1 to i8*, !dbg !8419
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %1) #8, !dbg !8419
  %2 = bitcast %struct.affine_tree_combination* %aff_e2 to i8*, !dbg !8419
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %2) #8, !dbg !8419
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %e1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8420
  %bf.load = load i64, i64* %3, align 8, !dbg !8420
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8420
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !8420
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8420

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 3607, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !8420
  br label %cond.end, !dbg !8420

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata i64* %diff, metadata !8412, metadata !DIExpression(DW_OP_deref)), !dbg !8416
  %call = call zeroext i8 @ptr_difference_const(%union.tree_node* %e1, %union.tree_node* %e2, i64* nonnull %diff) #6, !dbg !8421
  %tobool = icmp eq i8 %call, 0, !dbg !8421
  br i1 %tobool, label %if.end, label %if.then, !dbg !8423

if.then:                                          ; preds = %cond.end
  %4 = load i64, i64* %diff, align 8, !dbg !8424
  call void @llvm.dbg.value(metadata i64 %4, metadata !8412, metadata !DIExpression()), !dbg !8416
  %5 = load i64, i64* %offset, align 8, !dbg !8426
  %add = add i64 %5, %4, !dbg !8426
  store i64 %add, i64* %offset, align 8, !dbg !8426
  store i8 0, i8* %symbol_present, align 1, !dbg !8427
  store i8 0, i8* %var_present, align 1, !dbg !8428
  br label %cleanup, !dbg !8429

if.end:                                           ; preds = %cond.end
  %call1 = call i32 @integer_zerop(%union.tree_node* %e2) #6, !dbg !8430
  %tobool2 = icmp eq i32 %call1, 0, !dbg !8430
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !8432

if.then3:                                         ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %e1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8433
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !8433
  %call4 = call fastcc i64 @split_address_cost(%struct.ivopts_data* %data, %union.tree_node* %6, i8* %symbol_present, i8* %var_present, i64* %offset, %struct.bitmap_head_def** %depends_on) #7, !dbg !8434
  br label %cleanup, !dbg !8435

if.end5:                                          ; preds = %if.end
  store i8 0, i8* %symbol_present, align 1, !dbg !8436
  store i8 1, i8* %var_present, align 1, !dbg !8437
  %type6 = getelementptr inbounds %union.tree_node, %union.tree_node* %e1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8438
  %7 = load %union.tree_node*, %union.tree_node** %type6, align 8, !dbg !8438
  %call7 = call %union.tree_node* @signed_type_for(%union.tree_node* %7) #6, !dbg !8439
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !8415, metadata !DIExpression()), !dbg !8416
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff_e1, metadata !8413, metadata !DIExpression(DW_OP_deref)), !dbg !8416
  call void @tree_to_aff_combination(%union.tree_node* %e1, %union.tree_node* %call7, %struct.affine_tree_combination* nonnull %aff_e1) #6, !dbg !8440
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff_e2, metadata !8414, metadata !DIExpression(DW_OP_deref)), !dbg !8416
  call void @tree_to_aff_combination(%union.tree_node* %e2, %union.tree_node* %call7, %struct.affine_tree_combination* nonnull %aff_e2) #6, !dbg !8441
  %call8 = call fastcc { i64, i64 } @shwi_to_double_int(i64 -1) #7, !dbg !8442
  %8 = extractvalue { i64, i64 } %call8, 0, !dbg !8442
  %9 = extractvalue { i64, i64 } %call8, 1, !dbg !8442
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff_e2, metadata !8414, metadata !DIExpression(DW_OP_deref)), !dbg !8416
  call void @aff_combination_scale(%struct.affine_tree_combination* nonnull %aff_e2, i64 %8, i64 %9) #6, !dbg !8443
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff_e1, metadata !8413, metadata !DIExpression(DW_OP_deref)), !dbg !8416
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff_e2, metadata !8414, metadata !DIExpression(DW_OP_deref)), !dbg !8416
  call void @aff_combination_add(%struct.affine_tree_combination* nonnull %aff_e1, %struct.affine_tree_combination* nonnull %aff_e2) #6, !dbg !8444
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff_e1, metadata !8413, metadata !DIExpression(DW_OP_deref)), !dbg !8416
  %call9 = call %union.tree_node* @aff_combination_to_tree(%struct.affine_tree_combination* nonnull %aff_e1) #6, !dbg !8445
  %call10 = call fastcc i64 @force_var_cost(%struct.ivopts_data* %data, %union.tree_node* %call9, %struct.bitmap_head_def** %depends_on) #7, !dbg !8446
  br label %cleanup, !dbg !8447

cleanup:                                          ; preds = %if.end5, %if.then3, %if.then
  %10 = phi i64 [ %call10, %if.end5 ], [ %call4, %if.then3 ], [ 0, %if.then ], !dbg !8448
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %2) #8, !dbg !8448
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %1) #8, !dbg !8448
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8448
  ret i64 %10, !dbg !8448
}

declare dso_local %union.tree_node* @signed_type_for(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @tree_to_aff_combination(%union.tree_node*, %union.tree_node*, %struct.affine_tree_combination*) local_unnamed_addr #2

declare dso_local void @aff_combination_scale(%struct.affine_tree_combination*, i64, i64) local_unnamed_addr #2

declare dso_local void @aff_combination_add(%struct.affine_tree_combination*, %struct.affine_tree_combination*) local_unnamed_addr #2

declare dso_local %union.tree_node* @aff_combination_to_tree(%struct.affine_tree_combination*) local_unnamed_addr #2

declare dso_local zeroext i8 @ptr_difference_const(%union.tree_node*, %union.tree_node*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i64 @split_address_cost(%struct.ivopts_data* %data, %union.tree_node* %addr, i8* %symbol_present, i8* %var_present, i64* %offset, %struct.bitmap_head_def** %depends_on) unnamed_addr #5 !dbg !8449 {
entry:
  %addr.addr = alloca %union.tree_node*, align 8
  %bitsize = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %toffset = alloca %union.tree_node*, align 8
  %mode = alloca i32, align 4
  %unsignedp = alloca i32, align 4
  %volatilep = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !8453, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata %union.tree_node* %addr, metadata !8454, metadata !DIExpression()), !dbg !8466
  store %union.tree_node* %addr, %union.tree_node** %addr.addr, align 8
  call void @llvm.dbg.value(metadata i8* %symbol_present, metadata !8455, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata i8* %var_present, metadata !8456, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata i64* %offset, metadata !8457, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %depends_on, metadata !8458, metadata !DIExpression()), !dbg !8466
  %0 = bitcast i64* %bitsize to i8*, !dbg !8467
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8467
  %1 = bitcast i64* %bitpos to i8*, !dbg !8468
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8468
  %2 = bitcast %union.tree_node** %toffset to i8*, !dbg !8469
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !8469
  %3 = bitcast i32* %mode to i8*, !dbg !8470
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !8470
  %4 = bitcast i32* %unsignedp to i8*, !dbg !8471
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8, !dbg !8471
  %5 = bitcast i32* %volatilep to i8*, !dbg !8471
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8, !dbg !8471
  call void @llvm.dbg.value(metadata %union.tree_node* %addr, metadata !8454, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata i64* %bitsize, metadata !8460, metadata !DIExpression(DW_OP_deref)), !dbg !8466
  call void @llvm.dbg.value(metadata i64* %bitpos, metadata !8461, metadata !DIExpression(DW_OP_deref)), !dbg !8466
  call void @llvm.dbg.value(metadata %union.tree_node** %toffset, metadata !8462, metadata !DIExpression(DW_OP_deref)), !dbg !8466
  call void @llvm.dbg.value(metadata i32* %mode, metadata !8463, metadata !DIExpression(DW_OP_deref)), !dbg !8466
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !8464, metadata !DIExpression(DW_OP_deref)), !dbg !8466
  call void @llvm.dbg.value(metadata i32* %volatilep, metadata !8465, metadata !DIExpression(DW_OP_deref)), !dbg !8466
  %call = call %union.tree_node* @get_inner_reference(%union.tree_node* %addr, i64* nonnull %bitsize, i64* nonnull %bitpos, %union.tree_node** nonnull %toffset, i32* nonnull %mode, i32* nonnull %unsignedp, i32* nonnull %volatilep, i8 zeroext 0) #6, !dbg !8472
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8459, metadata !DIExpression()), !dbg !8466
  %6 = load %union.tree_node*, %union.tree_node** %toffset, align 8, !dbg !8473
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !8462, metadata !DIExpression()), !dbg !8466
  %cmp = icmp eq %union.tree_node* %6, null, !dbg !8475
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !8476

lor.lhs.false:                                    ; preds = %entry
  %7 = load i64, i64* %bitpos, align 8, !dbg !8477
  call void @llvm.dbg.value(metadata i64 %7, metadata !8461, metadata !DIExpression()), !dbg !8466
  %rem1 = and i64 %7, 7, !dbg !8478
  %cmp1 = icmp eq i64 %rem1, 0, !dbg !8478
  br i1 %cmp1, label %lor.lhs.false2, label %if.then, !dbg !8479

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8480
  %bf.load = load i64, i64* %8, align 8, !dbg !8480
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !8481
  %cmp3 = icmp eq i64 %bf.cast2, 32, !dbg !8481
  br i1 %cmp3, label %if.end, label %if.then, !dbg !8482

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i8 0, i8* %symbol_present, align 1, !dbg !8483
  store i8 1, i8* %var_present, align 1, !dbg !8485
  store %struct.ivopts_data* %data, %struct.ivopts_data** @fd_ivopts_data, align 8, !dbg !8486
  %9 = bitcast %struct.bitmap_head_def** %depends_on to i8*, !dbg !8487
  call void @llvm.dbg.value(metadata %union.tree_node** %addr.addr, metadata !8454, metadata !DIExpression(DW_OP_deref)), !dbg !8466
  %call4 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %addr.addr, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_depends, i8* %9, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !8487
  %speed = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 11, !dbg !8488
  %10 = load i8, i8* %speed, align 1, !dbg !8488
  %idxprom = zext i8 %10 to i64, !dbg !8489
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* @target_spill_cost, i64 0, i64 %idxprom, !dbg !8489
  %11 = load i32, i32* %arrayidx, align 4, !dbg !8489
  %call5 = call fastcc i64 @new_cost(i32 %11, i32 0) #7, !dbg !8490
  br label %cleanup, !dbg !8491

if.end:                                           ; preds = %lor.lhs.false2
  call void @llvm.dbg.value(metadata i64 %7, metadata !8461, metadata !DIExpression()), !dbg !8466
  %div = sdiv i64 %7, 8, !dbg !8492
  %12 = load i64, i64* %offset, align 8, !dbg !8493
  %add = add i64 %12, %div, !dbg !8493
  store i64 %add, i64* %offset, align 8, !dbg !8493
  %bf.load7 = load i64, i64* %8, align 8, !dbg !8494
  %bf.cast93 = and i64 %bf.load7, 67108864, !dbg !8494
  %tobool = icmp eq i64 %bf.cast93, 0, !dbg !8494
  br i1 %tobool, label %lor.lhs.false10, label %if.then16, !dbg !8496

lor.lhs.false10:                                  ; preds = %if.end
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8497
  %13 = bitcast i40* %decl_flag_1 to i64*, !dbg !8497
  %bf.load11 = load i64, i64* %13, align 8, !dbg !8497
  %bf.cast144 = and i64 %bf.load11, 33554432, !dbg !8497
  %tobool15 = icmp eq i64 %bf.cast144, 0, !dbg !8497
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !8498

if.then16:                                        ; preds = %lor.lhs.false10, %if.end
  store i8 1, i8* %symbol_present, align 1, !dbg !8499
  store i8 0, i8* %var_present, align 1, !dbg !8501
  br label %cleanup, !dbg !8502

if.end17:                                         ; preds = %lor.lhs.false10
  store i8 0, i8* %symbol_present, align 1, !dbg !8503
  store i8 1, i8* %var_present, align 1, !dbg !8504
  br label %cleanup, !dbg !8505

cleanup:                                          ; preds = %if.end17, %if.then16, %if.then
  %14 = phi i64 [ 0, %if.end17 ], [ 0, %if.then16 ], [ %call5, %if.then ], !dbg !8506
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8, !dbg !8506
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8, !dbg !8506
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !8506
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !8506
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8506
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8506
  ret i64 %14, !dbg !8506
}

declare dso_local %union.tree_node* @get_inner_reference(%union.tree_node*, i64*, i64*, %union.tree_node**, i32*, i32*, i32*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i64 @force_expr_to_var_cost(%union.tree_node* %expr, i8 zeroext %speed) unnamed_addr #5 !dbg !2307 {
entry:
  %cost = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !2311, metadata !DIExpression()), !dbg !8507
  call void @llvm.dbg.value(metadata i8 %speed, metadata !2312, metadata !DIExpression()), !dbg !8507
  %0 = bitcast i64* %cost to i8*, !dbg !8508
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8508
  %.b = load i1, i1* @force_expr_to_var_cost.costs_initialized, align 1, !dbg !8509
  br i1 %.b, label %if.end35, label %if.then, !dbg !8510

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !8511
  %call = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %1) #6, !dbg !8512
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !2319, metadata !DIExpression()), !dbg !8513
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !8514
  %call1 = tail call %union.tree_node* @create_tmp_var_raw(%union.tree_node* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !8515
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !2322, metadata !DIExpression()), !dbg !8513
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8516
  %bf.load = load i64, i64* %3, align 8, !dbg !8517
  %bf.set = or i64 %bf.load, 67108864, !dbg !8517
  store i64 %bf.set, i64* %3, align 8, !dbg !8517
  %call2 = tail call fastcc %struct.rtx_def* @produce_memory_decl_rtl(%union.tree_node* %call1, i32* null) #7, !dbg !8518
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !2324, metadata !DIExpression()), !dbg !8513
  tail call void @set_decl_rtl(%union.tree_node* %call1, %struct.rtx_def* %call2) #6, !dbg !8519
  %call3 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %call, %union.tree_node* %call1) #6, !dbg !8520
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !2323, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.value(metadata i32 0, metadata !2325, metadata !DIExpression()), !dbg !8513
  br label %for.cond, !dbg !8521

for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !8523
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %if.then ], !dbg !8523
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2325, metadata !DIExpression()), !dbg !8513
  %exitcond = icmp eq i64 %indvars.iv, 2, !dbg !8524
  br i1 %exitcond, label %for.end, label %for.body, !dbg !8526

for.body:                                         ; preds = %for.cond
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !8527
  %call4 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %4, i64 2000) #6, !dbg !8529
  %conv = trunc i32 %i.0 to i8, !dbg !8530
  %call5 = tail call fastcc i32 @computation_cost(%union.tree_node* %call4, i8 zeroext %conv) #7, !dbg !8531
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* @force_expr_to_var_cost.integer_cost, i64 0, i64 %indvars.iv, !dbg !8532
  store i32 %call5, i32* %arrayidx, align 4, !dbg !8533
  %call7 = tail call fastcc i32 @computation_cost(%union.tree_node* %call3, i8 zeroext %conv) #7, !dbg !8534
  %add = add i32 %call7, 1, !dbg !8535
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* @force_expr_to_var_cost.symbol_cost, i64 0, i64 %indvars.iv, !dbg !8536
  store i32 %add, i32* %arrayidx9, align 4, !dbg !8537
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !8538
  %call10 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %5, i64 2000) #6, !dbg !8538
  %call11 = tail call %union.tree_node* @build2_stat(i32 66, %union.tree_node* %call, %union.tree_node* %call3, %union.tree_node* %call10) #6, !dbg !8538
  %call13 = tail call fastcc i32 @computation_cost(%union.tree_node* %call11, i8 zeroext %conv) #7, !dbg !8539
  %add14 = add i32 %call13, 1, !dbg !8540
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* @force_expr_to_var_cost.address_cost, i64 0, i64 %indvars.iv, !dbg !8541
  store i32 %add14, i32* %arrayidx16, align 4, !dbg !8542
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8543
  %tobool17 = icmp eq %struct._IO_FILE* %6, null, !dbg !8543
  br i1 %tobool17, label %for.inc, label %land.lhs.true, !dbg !8545

land.lhs.true:                                    ; preds = %for.body
  %7 = load i32, i32* @dump_flags, align 4, !dbg !8546
  %and = and i32 %7, 8, !dbg !8547
  %tobool18 = icmp eq i32 %and, 0, !dbg !8547
  br i1 %tobool18, label %for.inc, label %if.then19, !dbg !8548

if.then19:                                        ; preds = %land.lhs.true
  %tobool20 = icmp eq i64 %indvars.iv, 0, !dbg !8549
  %cond = select i1 %tobool20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0), !dbg !8549
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.46, i64 0, i64 0), i8* %cond) #6, !dbg !8551
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8552
  %9 = load i32, i32* %arrayidx, align 4, !dbg !8553
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i64 0, i64 0), i32 %9) #6, !dbg !8554
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8555
  %11 = load i32, i32* %arrayidx9, align 4, !dbg !8556
  %call27 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i64 0, i64 0), i32 %11) #6, !dbg !8557
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8558
  %13 = load i32, i32* %arrayidx16, align 4, !dbg !8559
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0), i32 %13) #6, !dbg !8560
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8561
  %arrayidx32 = getelementptr inbounds [2 x i32], [2 x i32]* @target_spill_cost, i64 0, i64 %indvars.iv, !dbg !8562
  %15 = load i32, i32* %arrayidx32, align 4, !dbg !8562
  %call33 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), i32 %15) #6, !dbg !8563
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8564
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8565
  br label %for.inc, !dbg !8566

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then19
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8567
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8567
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2325, metadata !DIExpression()), !dbg !8513
  br label %for.cond, !dbg !8568, !llvm.loop !8569

for.end:                                          ; preds = %for.cond
  store i1 true, i1* @force_expr_to_var_cost.costs_initialized, align 1, !dbg !8571
  br label %if.end35, !dbg !8572

if.end35:                                         ; preds = %entry, %for.end
  %call36 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #6, !dbg !8573
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !2311, metadata !DIExpression()), !dbg !8507
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8574
  %bf.load38 = load i64, i64* %17, align 8, !dbg !8574
  %bf.cast2 = and i64 %bf.load38, 65535, !dbg !8574
  %cmp40 = icmp eq i64 %bf.cast2, 32, !dbg !8574
  br i1 %cmp40, label %if.then88, label %lor.lhs.false, !dbg !8574

lor.lhs.false:                                    ; preds = %if.end35
  %cmp46 = icmp eq i64 %bf.cast2, 34, !dbg !8574
  br i1 %cmp46, label %if.then88, label %lor.lhs.false48, !dbg !8574

lor.lhs.false48:                                  ; preds = %lor.lhs.false
  %cmp53 = icmp eq i64 %bf.cast2, 36, !dbg !8574
  br i1 %cmp53, label %if.then88, label %lor.lhs.false55, !dbg !8574

lor.lhs.false55:                                  ; preds = %lor.lhs.false48
  %cmp60 = icmp eq i64 %bf.cast2, 141, !dbg !8574
  br i1 %cmp60, label %land.lhs.true62, label %if.end89, !dbg !8574

land.lhs.true62:                                  ; preds = %lor.lhs.false55
  %var63 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8574
  %18 = bitcast i32* %var63 to i64**, !dbg !8574
  %19 = load i64*, i64** %18, align 8, !dbg !8574
  %bf.load65 = load i64, i64* %19, align 8, !dbg !8574
  %bf.cast6724 = and i64 %bf.load65, 65535, !dbg !8574
  %cmp68 = icmp eq i64 %bf.cast6724, 32, !dbg !8574
  br i1 %cmp68, label %if.then88, label %lor.lhs.false70, !dbg !8574

lor.lhs.false70:                                  ; preds = %land.lhs.true62
  %cmp77 = icmp eq i64 %bf.cast6724, 34, !dbg !8574
  br i1 %cmp77, label %if.then88, label %lor.lhs.false79, !dbg !8574

lor.lhs.false79:                                  ; preds = %lor.lhs.false70
  %cmp86 = icmp eq i64 %bf.cast6724, 36, !dbg !8574
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !8576

if.then88:                                        ; preds = %lor.lhs.false79, %lor.lhs.false70, %land.lhs.true62, %lor.lhs.false48, %lor.lhs.false, %if.end35
  br label %cleanup244, !dbg !8577

if.end89:                                         ; preds = %lor.lhs.false79, %lor.lhs.false55
  %call90 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call36) #6, !dbg !8578
  %tobool91 = icmp eq i8 %call90, 0, !dbg !8578
  %bf.load94 = load i64, i64* %17, align 8, !dbg !8507
  br i1 %tobool91, label %if.end141, label %if.then92, !dbg !8579

if.then92:                                        ; preds = %if.end89
  %bf.cast9619 = and i64 %bf.load94, 65535, !dbg !8580
  %cmp97 = icmp eq i64 %bf.cast9619, 23, !dbg !8580
  br i1 %cmp97, label %if.then99, label %if.end103, !dbg !8582

if.then99:                                        ; preds = %if.then92
  %idxprom100 = zext i8 %speed to i64, !dbg !8583
  %arrayidx101 = getelementptr inbounds [2 x i32], [2 x i32]* @force_expr_to_var_cost.integer_cost, i64 0, i64 %idxprom100, !dbg !8583
  %20 = load i32, i32* %arrayidx101, align 4, !dbg !8583
  %call102 = tail call fastcc i64 @new_cost(i32 %20, i32 0) #7, !dbg !8584
  br label %cleanup244, !dbg !8585

if.end103:                                        ; preds = %if.then92
  %cmp108 = icmp eq i64 %bf.cast9619, 121, !dbg !8586
  br i1 %cmp108, label %if.then110, label %if.end137, !dbg !8587

if.then110:                                       ; preds = %if.end103
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8588
  %21 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !8588
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !2326, metadata !DIExpression()), !dbg !8589
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8590
  %bf.load113 = load i64, i64* %22, align 8, !dbg !8590
  %bf.cast11521 = and i64 %bf.load113, 65535, !dbg !8592
  %cmp116 = icmp eq i64 %bf.cast11521, 32, !dbg !8592
  br i1 %cmp116, label %if.then132, label %lor.lhs.false118, !dbg !8593

lor.lhs.false118:                                 ; preds = %if.then110
  %cmp123 = icmp eq i64 %bf.cast11521, 34, !dbg !8594
  br i1 %cmp123, label %if.then132, label %lor.lhs.false125, !dbg !8595

lor.lhs.false125:                                 ; preds = %lor.lhs.false118
  %cmp130 = icmp eq i64 %bf.cast11521, 36, !dbg !8596
  br i1 %cmp130, label %if.then132, label %cleanup, !dbg !8597

if.then132:                                       ; preds = %lor.lhs.false125, %lor.lhs.false118, %if.then110
  %idxprom133 = zext i8 %speed to i64, !dbg !8598
  %arrayidx134 = getelementptr inbounds [2 x i32], [2 x i32]* @force_expr_to_var_cost.symbol_cost, i64 0, i64 %idxprom133, !dbg !8598
  %23 = load i32, i32* %arrayidx134, align 4, !dbg !8598
  %call135 = tail call fastcc i64 @new_cost(i32 %23, i32 0) #7, !dbg !8599
  br label %cleanup, !dbg !8600

cleanup:                                          ; preds = %lor.lhs.false125, %if.then132
  %24 = phi i64 [ %call135, %if.then132 ], [ undef, %lor.lhs.false125 ]
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then132 ], [ true, %lor.lhs.false125 ]
  br i1 %cleanup.dest.slot.0, label %if.end137, label %cleanup244

if.end137:                                        ; preds = %cleanup, %if.end103
  %idxprom138 = zext i8 %speed to i64, !dbg !8601
  %arrayidx139 = getelementptr inbounds [2 x i32], [2 x i32]* @force_expr_to_var_cost.address_cost, i64 0, i64 %idxprom138, !dbg !8601
  %25 = load i32, i32* %arrayidx139, align 4, !dbg !8601
  %call140 = tail call fastcc i64 @new_cost(i32 %25, i32 0) #7, !dbg !8602
  br label %cleanup244, !dbg !8603

if.end141:                                        ; preds = %if.end89
  %trunc = trunc i64 %bf.load94 to i16, !dbg !8604
  switch i16 %trunc, label %sw.default [
    i16 66, label %sw.bb
    i16 63, label %sw.bb
    i16 64, label %sw.bb
    i16 65, label %sw.bb
    i16 79, label %sw.bb166
  ], !dbg !8604

sw.bb:                                            ; preds = %if.end141, %if.end141, %if.end141, %if.end141
  %operands147 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8605
  %26 = load %union.tree_node*, %union.tree_node** %operands147, align 8, !dbg !8605
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !2313, metadata !DIExpression()), !dbg !8507
  %arrayidx151 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands147, i64 1, !dbg !8607
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx151, align 8, !dbg !8607
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !2314, metadata !DIExpression()), !dbg !8507
  %call152 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %26) #6, !dbg !8608
  call void @llvm.dbg.value(metadata %union.tree_node* %call152, metadata !2313, metadata !DIExpression()), !dbg !8507
  %call153 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %27) #6, !dbg !8609
  call void @llvm.dbg.value(metadata %union.tree_node* %call153, metadata !2314, metadata !DIExpression()), !dbg !8507
  %call154 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %call152) #6, !dbg !8610
  %tobool155 = icmp eq i8 %call154, 0, !dbg !8610
  br i1 %tobool155, label %if.else, label %if.then156, !dbg !8612

if.then156:                                       ; preds = %sw.bb
  br label %if.end158, !dbg !8613

if.else:                                          ; preds = %sw.bb
  %call157 = tail call fastcc i64 @force_expr_to_var_cost(%union.tree_node* %call152, i8 zeroext %speed) #7, !dbg !8614
  br label %if.end158

if.end158:                                        ; preds = %if.else, %if.then156
  %storemerge18 = phi i64 [ 0, %if.then156 ], [ %call157, %if.else ], !dbg !8615
  %call159 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %call153) #6, !dbg !8616
  %tobool160 = icmp eq i8 %call159, 0, !dbg !8616
  br i1 %tobool160, label %if.else162, label %if.then161, !dbg !8618

if.then161:                                       ; preds = %if.end158
  br label %sw.epilog, !dbg !8619

if.else162:                                       ; preds = %if.end158
  %call164 = tail call fastcc i64 @force_expr_to_var_cost(%union.tree_node* %call153, i8 zeroext %speed) #7, !dbg !8620
  br label %sw.epilog

sw.bb166:                                         ; preds = %if.end141
  %operands168 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8621
  %28 = load %union.tree_node*, %union.tree_node** %operands168, align 8, !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !2313, metadata !DIExpression()), !dbg !8507
  %call170 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %28) #6, !dbg !8622
  call void @llvm.dbg.value(metadata %union.tree_node* %call170, metadata !2313, metadata !DIExpression()), !dbg !8507
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2314, metadata !DIExpression()), !dbg !8507
  %call171 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %call170) #6, !dbg !8623
  %tobool172 = icmp eq i8 %call171, 0, !dbg !8623
  br i1 %tobool172, label %if.else174, label %if.then173, !dbg !8625

if.then173:                                       ; preds = %sw.bb166
  br label %if.end177, !dbg !8626

if.else174:                                       ; preds = %sw.bb166
  %call176 = tail call fastcc i64 @force_expr_to_var_cost(%union.tree_node* %call170, i8 zeroext %speed) #7, !dbg !8627
  br label %if.end177

if.end177:                                        ; preds = %if.else174, %if.then173
  %storemerge = phi i64 [ 0, %if.then173 ], [ %call176, %if.else174 ], !dbg !8628
  br label %sw.epilog, !dbg !8629

sw.default:                                       ; preds = %if.end141
  %idxprom178 = zext i8 %speed to i64, !dbg !8630
  %arrayidx179 = getelementptr inbounds [2 x i32], [2 x i32]* @target_spill_cost, i64 0, i64 %idxprom178, !dbg !8630
  %29 = load i32, i32* %arrayidx179, align 4, !dbg !8630
  %call180 = tail call fastcc i64 @new_cost(i32 %29, i32 0) #7, !dbg !8631
  br label %cleanup244, !dbg !8632

sw.epilog:                                        ; preds = %if.then161, %if.else162, %if.end177
  %30 = phi i64 [ 0, %if.end177 ], [ %call164, %if.else162 ], [ 0, %if.then161 ]
  %31 = phi i64 [ %storemerge, %if.end177 ], [ %storemerge18, %if.else162 ], [ %storemerge18, %if.then161 ]
  %op1.0 = phi %union.tree_node* [ null, %if.end177 ], [ %call153, %if.else162 ], [ %call153, %if.then161 ], !dbg !8633
  %op0.0 = phi %union.tree_node* [ %call170, %if.end177 ], [ %call152, %if.else162 ], [ %call152, %if.then161 ], !dbg !8633
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0, metadata !2313, metadata !DIExpression()), !dbg !8507
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0, metadata !2314, metadata !DIExpression()), !dbg !8507
  %type181 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8634
  %32 = bitcast %union.tree_node** %type181 to i64**, !dbg !8634
  %33 = load i64*, i64** %32, align 8, !dbg !8634
  %bf.load183 = load i64, i64* %33, align 8, !dbg !8634
  %bf.cast1857 = and i64 %bf.load183, 65535, !dbg !8634
  %cmp186 = icmp eq i64 %bf.cast1857, 14, !dbg !8634
  br i1 %cmp186, label %cond.true, label %cond.false, !dbg !8634

cond.true:                                        ; preds = %sw.epilog
  %.cast = bitcast i64* %33 to %union.tree_node*, !dbg !8634
  %call190 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !8634
  br label %cond.end, !dbg !8634

cond.false:                                       ; preds = %sw.epilog
  %type193 = bitcast i64* %33 to %struct.tree_type*, !dbg !8634
  %mode194 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type193, i64 0, i32 6, !dbg !8634
  %bf.load195 = load i32, i32* %mode194, align 4, !dbg !8634
  %bf.lshr = lshr i32 %bf.load195, 16, !dbg !8634
  %bf.clear196 = and i32 %bf.lshr, 255, !dbg !8634
  br label %cond.end, !dbg !8634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond197 = phi i32 [ %call190, %cond.true ], [ %bf.clear196, %cond.false ], !dbg !8634
  call void @llvm.dbg.value(metadata i32 %cond197, metadata !2318, metadata !DIExpression()), !dbg !8507
  %bf.load199 = load i64, i64* %17, align 8, !dbg !8635
  %34 = trunc i64 %bf.load199 to i16, !dbg !8635
  switch i16 %34, label %sw.default228 [
    i16 66, label %sw.bb202
    i16 63, label %sw.bb202
    i16 64, label %sw.bb202
    i16 79, label %sw.bb202
    i16 65, label %sw.bb206
  ], !dbg !8636

sw.bb202:                                         ; preds = %cond.end, %cond.end, %cond.end, %cond.end
  %call204 = tail call fastcc i32 @add_cost(i32 %cond197, i8 zeroext %speed) #7, !dbg !8637
  %call205 = tail call fastcc i64 @new_cost(i32 %call204, i32 0) #7, !dbg !8639
  store i64 %call205, i64* %cost, align 8, !dbg !8639
  br label %sw.epilog229, !dbg !8640

sw.bb206:                                         ; preds = %cond.end
  %call207 = tail call zeroext i8 @cst_and_fits_in_hwi(%union.tree_node* %op0.0) #6, !dbg !8641
  %tobool208 = icmp eq i8 %call207, 0, !dbg !8641
  br i1 %tobool208, label %if.else214, label %if.then209, !dbg !8643

if.then209:                                       ; preds = %sw.bb206
  %call211 = tail call i64 @int_cst_value(%union.tree_node* %op0.0) #6, !dbg !8644
  %call212 = tail call i32 @multiply_by_cost(i64 %call211, i32 %cond197, i8 zeroext %speed) #7, !dbg !8645
  %call213 = tail call fastcc i64 @new_cost(i32 %call212, i32 0) #7, !dbg !8646
  store i64 %call213, i64* %cost, align 8, !dbg !8646
  br label %sw.epilog229, !dbg !8647

if.else214:                                       ; preds = %sw.bb206
  %call215 = tail call zeroext i8 @cst_and_fits_in_hwi(%union.tree_node* %op1.0) #6, !dbg !8648
  %tobool216 = icmp eq i8 %call215, 0, !dbg !8648
  br i1 %tobool216, label %if.else222, label %if.then217, !dbg !8650

if.then217:                                       ; preds = %if.else214
  %call219 = tail call i64 @int_cst_value(%union.tree_node* %op1.0) #6, !dbg !8651
  %call220 = tail call i32 @multiply_by_cost(i64 %call219, i32 %cond197, i8 zeroext %speed) #7, !dbg !8652
  %call221 = tail call fastcc i64 @new_cost(i32 %call220, i32 0) #7, !dbg !8653
  store i64 %call221, i64* %cost, align 8, !dbg !8653
  br label %sw.epilog229

if.else222:                                       ; preds = %if.else214
  %idxprom223 = zext i8 %speed to i64, !dbg !8654
  %arrayidx224 = getelementptr inbounds [2 x i32], [2 x i32]* @target_spill_cost, i64 0, i64 %idxprom223, !dbg !8654
  %35 = load i32, i32* %arrayidx224, align 4, !dbg !8654
  %call225 = tail call fastcc i64 @new_cost(i32 %35, i32 0) #7, !dbg !8655
  br label %cleanup244, !dbg !8656

sw.default228:                                    ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 3515, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !8657
  br label %sw.epilog229, !dbg !8658

sw.epilog229:                                     ; preds = %if.then209, %if.then217, %sw.default228, %sw.bb202
  %36 = phi i64 [ %call213, %if.then209 ], [ %call221, %if.then217 ], [ undef, %sw.default228 ], [ %call205, %sw.bb202 ], !dbg !8659
  %call231 = tail call fastcc i64 @add_costs(i64 %36, i64 %31) #7, !dbg !8659
  %call233 = tail call fastcc i64 @add_costs(i64 %call231, i64 %30) #7, !dbg !8660
  store i64 %call233, i64* %cost, align 8, !dbg !8660
  %37 = trunc i64 %call233 to i32, !dbg !8661
  %idxprom235 = zext i8 %speed to i64, !dbg !8663
  %arrayidx236 = getelementptr inbounds [2 x i32], [2 x i32]* @target_spill_cost, i64 0, i64 %idxprom235, !dbg !8663
  %38 = load i32, i32* %arrayidx236, align 4, !dbg !8663
  %cmp237 = icmp slt i32 %38, %37, !dbg !8664
  br i1 %cmp237, label %if.then239, label %if.end243, !dbg !8665

if.then239:                                       ; preds = %sw.epilog229
  %cost234 = bitcast i64* %cost to i32*, !dbg !8661
  store i32 %38, i32* %cost234, align 8, !dbg !8666
  %.pre = load i64, i64* %cost, align 8, !dbg !8667
  br label %if.end243, !dbg !8668

if.end243:                                        ; preds = %if.then239, %sw.epilog229
  %39 = phi i64 [ %.pre, %if.then239 ], [ %call233, %sw.epilog229 ], !dbg !8667
  br label %cleanup244, !dbg !8669

cleanup244:                                       ; preds = %cleanup, %if.end243, %if.else222, %sw.default, %if.end137, %if.then99, %if.then88
  %40 = phi i64 [ %24, %cleanup ], [ %39, %if.end243 ], [ %call225, %if.else222 ], [ %call180, %sw.default ], [ %call140, %if.end137 ], [ %call102, %if.then99 ], [ 0, %if.then88 ], !dbg !8670
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8670
  ret i64 %40, !dbg !8670
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @produce_memory_decl_rtl(%union.tree_node* %obj, i32* %regno) unnamed_addr #5 !dbg !8671 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %obj, metadata !8675, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata i32* %regno, metadata !8676, metadata !DIExpression()), !dbg !8683
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %obj, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8684
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !8684
  %1 = load i64*, i64** %0, align 8, !dbg !8684
  %bf.load = load i64, i64* %1, align 8, !dbg !8684
  %bf.lshr = lshr i64 %bf.load, 56, !dbg !8684
  %conv = trunc i64 %bf.lshr to i8, !dbg !8684
  call void @llvm.dbg.value(metadata i8 %conv, metadata !8677, metadata !DIExpression()), !dbg !8683
  %2 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !8685
  %call = tail call i32 %2(i8 zeroext %conv) #6, !dbg !8686
  call void @llvm.dbg.value(metadata i32 %call, metadata !8678, metadata !DIExpression()), !dbg !8683
  %tobool = icmp eq %union.tree_node* %obj, null, !dbg !8687
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8687

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 2656, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !8687
  br label %cond.end, !dbg !8687

cond.end:                                         ; preds = %entry, %cond.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %obj, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8688
  %bf.load2 = load i64, i64* %3, align 8, !dbg !8688
  %bf.cast41 = and i64 %bf.load2, 67108864, !dbg !8688
  %tobool5 = icmp eq i64 %bf.cast41, 0, !dbg !8688
  br i1 %tobool5, label %lor.lhs.false, label %if.then, !dbg !8689

lor.lhs.false:                                    ; preds = %cond.end
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %obj, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8690
  %4 = bitcast i40* %decl_flag_1 to i64*, !dbg !8690
  %bf.load6 = load i64, i64* %4, align 8, !dbg !8690
  %bf.cast92 = and i64 %bf.load6, 33554432, !dbg !8690
  %tobool10 = icmp eq i64 %bf.cast92, 0, !dbg !8690
  br i1 %tobool10, label %if.else, label %if.then, !dbg !8691

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  %call11 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %obj) #6, !dbg !8692
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8692
  %str = bitcast i32* %id to i8**, !dbg !8692
  %5 = load i8*, i8** %str, align 8, !dbg !8692
  call void @llvm.dbg.value(metadata i8* %5, metadata !8680, metadata !DIExpression()), !dbg !8693
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_s00_stat(i32 45, i32 %call, i8* %5) #6, !dbg !8694
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call12, metadata !8679, metadata !DIExpression()), !dbg !8683
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call12, i64 0, i32 0, !dbg !8695
  %bf.load13 = load i32, i32* %6, align 8, !dbg !8695
  %bf.clear15 = and i32 %bf.load13, 67108864, !dbg !8695
  %tobool16 = icmp eq i32 %bf.clear15, 0, !dbg !8695
  br i1 %tobool16, label %cond.end19, label %cond.true17, !dbg !8695

cond.true17:                                      ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 2661, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !8695
  br label %cond.end19, !dbg !8695

cond.end19:                                       ; preds = %if.then, %cond.true17
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call12, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8695
  %rt_tree = bitcast %union.rtunion_def* %7 to %union.tree_node**, !dbg !8695
  store %union.tree_node* %obj, %union.tree_node** %rt_tree, align 8, !dbg !8695
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %obj, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8696
  %8 = bitcast i40* %mode to i64*, !dbg !8696
  %bf.load22 = load i64, i64* %8, align 8, !dbg !8696
  %9 = trunc i64 %bf.load22 to i32, !dbg !8696
  %bf.cast24 = and i32 %9, 255, !dbg !8696
  %call25 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast24, %struct.rtx_def* %call12) #6, !dbg !8697
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call25, metadata !8679, metadata !DIExpression()), !dbg !8683
  tail call void @set_mem_addr_space(%struct.rtx_def* %call25, i8 zeroext %conv) #6, !dbg !8698
  %10 = load void (%union.tree_node*, %struct.rtx_def*, i32)*, void (%union.tree_node*, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 51), align 8, !dbg !8699
  tail call void %10(%union.tree_node* %obj, %struct.rtx_def* %call25, i32 1) #6, !dbg !8700
  br label %if.end, !dbg !8701

if.else:                                          ; preds = %lor.lhs.false
  %11 = load i32, i32* %regno, align 4, !dbg !8702
  %inc = add nsw i32 %11, 1, !dbg !8702
  store i32 %inc, i32* %regno, align 4, !dbg !8702
  %call26 = tail call %struct.rtx_def* @gen_raw_REG(i32 %call, i32 %11) #6, !dbg !8704
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call26, metadata !8679, metadata !DIExpression()), !dbg !8683
  %bf.load29 = load i64, i64* %4, align 8, !dbg !8705
  %12 = trunc i64 %bf.load29 to i32, !dbg !8705
  %bf.cast31 = and i32 %12, 255, !dbg !8705
  %call32 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast31, %struct.rtx_def* %call26) #6, !dbg !8706
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call32, metadata !8679, metadata !DIExpression()), !dbg !8683
  tail call void @set_mem_addr_space(%struct.rtx_def* %call32, i8 zeroext %conv) #6, !dbg !8707
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end19
  %x.0 = phi %struct.rtx_def* [ %call25, %cond.end19 ], [ %call32, %if.else ], !dbg !8708
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !8679, metadata !DIExpression()), !dbg !8683
  ret %struct.rtx_def* %x.0, !dbg !8709
}

declare dso_local void @set_decl_rtl(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_assembler_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_s00_stat(i32, i32, i8*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @set_mem_addr_space(%struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @stmt_after_ip_normal_pos(%struct.loop* %loop, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !8710 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !8712, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8713, metadata !DIExpression()), !dbg !8716
  %call = tail call %struct.basic_block_def* @ip_normal_pos(%struct.loop* %loop) #6, !dbg !8717
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !8714, metadata !DIExpression()), !dbg !8716
  %call1 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !8718
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call1, metadata !8715, metadata !DIExpression()), !dbg !8716
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !8719
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8719

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 567, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !8719
  br label %cond.end, !dbg !8719

cond.end:                                         ; preds = %entry, %cond.true
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !8720
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !8720
  %cmp = icmp eq %struct.basic_block_def* %call1, %0, !dbg !8722
  br i1 %cmp, label %cleanup, label %if.end, !dbg !8723

if.end:                                           ; preds = %cond.end
  %cmp2 = icmp eq %struct.basic_block_def* %call1, %call, !dbg !8724
  br i1 %cmp2, label %if.end4, label %cleanup, !dbg !8726

if.end4:                                          ; preds = %if.end
  %call5 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %call) #6, !dbg !8727
  %cmp6 = icmp eq %union.gimple_statement_d* %call5, %stmt, !dbg !8728
  %conv7 = zext i1 %cmp6 to i8, !dbg !8729
  br label %cleanup, !dbg !8730

cleanup:                                          ; preds = %if.end, %cond.end, %if.end4
  %retval.0 = phi i8 [ %conv7, %if.end4 ], [ 1, %cond.end ], [ 0, %if.end ], !dbg !8716
  ret i8 %retval.0, !dbg !8731
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @stmt_after_inc_pos(%struct.iv_cand* %cand, %union.gimple_statement_d* %stmt, i8 zeroext %true_if_equal) unnamed_addr #5 !dbg !8732 {
entry:
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !8736, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8737, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i8 %true_if_equal, metadata !8738, metadata !DIExpression()), !dbg !8741
  %incremented_at = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 3, !dbg !8742
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %incremented_at, align 8, !dbg !8742
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %0) #7, !dbg !8743
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !8739, metadata !DIExpression()), !dbg !8741
  %call1 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !8744
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call1, metadata !8740, metadata !DIExpression()), !dbg !8741
  %call2 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %call1, %struct.basic_block_def* %call) #6, !dbg !8745
  %tobool = icmp eq i8 %call2, 0, !dbg !8745
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8747

if.end:                                           ; preds = %entry
  %cmp = icmp eq %struct.basic_block_def* %call1, %call, !dbg !8748
  br i1 %cmp, label %if.end4, label %cleanup, !dbg !8750

if.end4:                                          ; preds = %if.end
  %tobool5 = icmp eq i8 %true_if_equal, 0, !dbg !8751
  br i1 %tobool5, label %if.end12, label %land.lhs.true, !dbg !8753

land.lhs.true:                                    ; preds = %if.end4
  %call6 = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %stmt) #7, !dbg !8754
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %incremented_at, align 8, !dbg !8755
  %call8 = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %1) #7, !dbg !8756
  %cmp9 = icmp eq i32 %call6, %call8, !dbg !8757
  br i1 %cmp9, label %cleanup, label %if.end12, !dbg !8758

if.end12:                                         ; preds = %if.end4, %land.lhs.true
  %call13 = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %stmt) #7, !dbg !8759
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %incremented_at, align 8, !dbg !8760
  %call15 = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %2) #7, !dbg !8761
  %cmp16 = icmp ugt i32 %call13, %call15, !dbg !8762
  %conv18 = zext i1 %cmp16 to i8, !dbg !8759
  br label %cleanup, !dbg !8763

cleanup:                                          ; preds = %if.end, %entry, %land.lhs.true, %if.end12
  %retval.0 = phi i8 [ %conv18, %if.end12 ], [ 0, %entry ], [ 1, %if.end ], [ 1, %land.lhs.true ], !dbg !8741
  ret i8 %retval.0, !dbg !8764
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_address_cost_data_base_length(%struct.VEC_address_cost_data_base* %vec_) unnamed_addr #0 !dbg !8765 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_address_cost_data_base* %vec_, metadata !8771, metadata !DIExpression()), !dbg !8772
  %tobool = icmp eq %struct.VEC_address_cost_data_base* %vec_, null, !dbg !8773
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8773

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_address_cost_data_base, %struct.VEC_address_cost_data_base* %vec_, i64 0, i32 0, !dbg !8773
  %0 = load i32, i32* %num, align 8, !dbg !8773
  br label %cond.end, !dbg !8773

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !8773
  ret i32 %cond, !dbg !8773
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_address_cost_data_heap_safe_grow_cleared(%struct.VEC_address_cost_data_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !8774 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list, metadata !8779, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i32 %size_, metadata !8780, metadata !DIExpression()), !dbg !8782
  %0 = load %struct.VEC_address_cost_data_heap*, %struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list, align 8, !dbg !8783
  %tobool = icmp eq %struct.VEC_address_cost_data_heap* %0, null, !dbg !8783
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8783

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_address_cost_data_heap, %struct.VEC_address_cost_data_heap* %0, i64 0, i32 0, !dbg !8783
  br label %cond.end, !dbg !8783

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_address_cost_data_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8783
  %call = tail call fastcc i32 @VEC_address_cost_data_base_length(%struct.VEC_address_cost_data_base* %cond) #7, !dbg !8783
  call void @llvm.dbg.value(metadata i32 %call, metadata !8781, metadata !DIExpression()), !dbg !8782
  tail call fastcc void @VEC_address_cost_data_heap_safe_grow(%struct.VEC_address_cost_data_heap** nonnull @get_address_cost.address_cost_data_list, i32 %size_) #7, !dbg !8783
  %1 = load %struct.VEC_address_cost_data_heap*, %struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list, align 8, !dbg !8783
  %tobool1 = icmp eq %struct.VEC_address_cost_data_heap* %1, null, !dbg !8783
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !8783

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_address_cost_data_heap, %struct.VEC_address_cost_data_heap* %1, i64 0, i32 0, !dbg !8783
  br label %cond.end5, !dbg !8783

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_address_cost_data_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !8783
  %call7 = tail call fastcc %struct.anon** @VEC_address_cost_data_base_address(%struct.VEC_address_cost_data_base* %cond6) #7, !dbg !8783
  %idxprom = sext i32 %call to i64, !dbg !8783
  %arrayidx = getelementptr inbounds %struct.anon*, %struct.anon** %call7, i64 %idxprom, !dbg !8783
  %2 = bitcast %struct.anon** %arrayidx to i8*, !dbg !8783
  %sub = sub nsw i32 %size_, %call, !dbg !8783
  %conv = sext i32 %sub to i64, !dbg !8783
  %mul = shl nsw i64 %conv, 3, !dbg !8783
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !8783
  ret void, !dbg !8783
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.anon* @VEC_address_cost_data_base_index(%struct.VEC_address_cost_data_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !8784 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_address_cost_data_base* %vec_, metadata !8788, metadata !DIExpression()), !dbg !8790
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8789, metadata !DIExpression()), !dbg !8790
  br label %land.end, !dbg !8791

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !8791
  %arrayidx = getelementptr inbounds %struct.VEC_address_cost_data_base, %struct.VEC_address_cost_data_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8791
  %0 = load %struct.anon*, %struct.anon** %arrayidx, align 8, !dbg !8791
  ret %struct.anon* %0, !dbg !8791
}

declare dso_local i8* @ggc_alloc_string(i8*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @memory_address_addr_space(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local i32 @address_cost(%struct.rtx_def*, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.anon* @VEC_address_cost_data_base_replace(%struct.VEC_address_cost_data_base* %vec_, i32 %ix_, %struct.anon* %obj_) unnamed_addr #0 !dbg !8792 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_address_cost_data_base* %vec_, metadata !8797, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8798, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata %struct.anon* %obj_, metadata !8799, metadata !DIExpression()), !dbg !8801
  %idxprom = zext i32 %ix_ to i64, !dbg !8802
  %arrayidx = getelementptr inbounds %struct.VEC_address_cost_data_base, %struct.VEC_address_cost_data_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8802
  %0 = load %struct.anon*, %struct.anon** %arrayidx, align 8, !dbg !8802
  call void @llvm.dbg.value(metadata %struct.anon* %0, metadata !8800, metadata !DIExpression()), !dbg !8801
  store %struct.anon* %obj_, %struct.anon** %arrayidx, align 8, !dbg !8802
  ret %struct.anon* %0, !dbg !8802
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_address_cost_data_heap_safe_grow(%struct.VEC_address_cost_data_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !8803 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list, metadata !8805, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata i32 %size_, metadata !8806, metadata !DIExpression()), !dbg !8807
  %cmp = icmp sgt i32 %size_, -1, !dbg !8808
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8808

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_address_cost_data_heap*, %struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list, align 8, !dbg !8808
  %tobool = icmp eq %struct.VEC_address_cost_data_heap* %0, null, !dbg !8808
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8808

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_address_cost_data_heap, %struct.VEC_address_cost_data_heap* %0, i64 0, i32 0, !dbg !8808
  br label %cond.end, !dbg !8808

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_address_cost_data_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !8808
  %call = tail call fastcc i32 @VEC_address_cost_data_base_length(%struct.VEC_address_cost_data_base* %cond) #7, !dbg !8808
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_address_cost_data_heap*, %struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list, align 8, !dbg !8808
  %tobool2 = icmp eq %struct.VEC_address_cost_data_heap* %1, null, !dbg !8808
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !8808

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_address_cost_data_heap, %struct.VEC_address_cost_data_heap* %1, i64 0, i32 0, i32 0, !dbg !8808
  %2 = load i32, i32* %num, align 8, !dbg !8808
  br label %cond.end11, !dbg !8808

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !8808
  %sub = sub nsw i32 %size_, %cond12, !dbg !8808
  %call13 = tail call fastcc i32 @VEC_address_cost_data_heap_reserve_exact(%struct.VEC_address_cost_data_heap** nonnull @get_address_cost.address_cost_data_list, i32 %sub) #7, !dbg !8808
  %3 = load %struct.VEC_address_cost_data_heap*, %struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list, align 8, !dbg !8808
  %num20 = getelementptr inbounds %struct.VEC_address_cost_data_heap, %struct.VEC_address_cost_data_heap* %3, i64 0, i32 0, i32 0, !dbg !8808
  store i32 %size_, i32* %num20, align 8, !dbg !8808
  ret void, !dbg !8808
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.anon** @VEC_address_cost_data_base_address(%struct.VEC_address_cost_data_base* %vec_) unnamed_addr #0 !dbg !8809 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_address_cost_data_base* %vec_, metadata !8814, metadata !DIExpression()), !dbg !8815
  %tobool = icmp eq %struct.VEC_address_cost_data_base* %vec_, null, !dbg !8816
  %arraydecay = getelementptr inbounds %struct.VEC_address_cost_data_base, %struct.VEC_address_cost_data_base* %vec_, i64 0, i32 2, i64 0, !dbg !8816
  %cond = select i1 %tobool, %struct.anon** null, %struct.anon** %arraydecay, !dbg !8816
  ret %struct.anon** %cond, !dbg !8816
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_address_cost_data_heap_reserve_exact(%struct.VEC_address_cost_data_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !8817 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list, metadata !8821, metadata !DIExpression()), !dbg !8824
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !8822, metadata !DIExpression()), !dbg !8824
  %0 = load %struct.VEC_address_cost_data_heap*, %struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list, align 8, !dbg !8825
  %tobool = icmp eq %struct.VEC_address_cost_data_heap* %0, null, !dbg !8825
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8825

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_address_cost_data_heap, %struct.VEC_address_cost_data_heap* %0, i64 0, i32 0, !dbg !8825
  br label %cond.end, !dbg !8825

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_address_cost_data_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8825
  %call = tail call fastcc i32 @VEC_address_cost_data_base_space(%struct.VEC_address_cost_data_base* %cond, i32 %alloc_) #7, !dbg !8825
  %tobool1 = icmp eq i32 %call, 0, !dbg !8825
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !8825
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !8823, metadata !DIExpression()), !dbg !8824
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8825

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list to i8**), align 8, !dbg !8826
  %call3 = tail call i8* @vec_heap_p_reserve_exact(i8* %1, i32 %alloc_) #6, !dbg !8826
  store i8* %call3, i8** bitcast (%struct.VEC_address_cost_data_heap** @get_address_cost.address_cost_data_list to i8**), align 8, !dbg !8826
  br label %if.end, !dbg !8826

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !8825
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_address_cost_data_base_space(%struct.VEC_address_cost_data_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !8828 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_address_cost_data_base* %vec_, metadata !8832, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !8833, metadata !DIExpression()), !dbg !8834
  %tobool = icmp eq %struct.VEC_address_cost_data_base* %vec_, null, !dbg !8835
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !8835

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_address_cost_data_base, %struct.VEC_address_cost_data_base* %vec_, i64 0, i32 1, !dbg !8835
  %0 = load i32, i32* %alloc, align 4, !dbg !8835
  %num = getelementptr inbounds %struct.VEC_address_cost_data_base, %struct.VEC_address_cost_data_base* %vec_, i64 0, i32 0, !dbg !8835
  %1 = load i32, i32* %num, align 8, !dbg !8835
  %sub = sub i32 %0, %1, !dbg !8835
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !8835
  br label %cond.end, !dbg !8835

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !8835
  br label %cond.end, !dbg !8835

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !8835
  ret i32 %cond, !dbg !8835
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @get_computation_aff(%struct.loop* %loop, %struct.iv_use* %use, %struct.iv_cand* %cand, %union.gimple_statement_d* %at, %struct.affine_tree_combination* %aff) unnamed_addr #5 !dbg !8836 {
entry:
  %ubase = alloca %union.tree_node*, align 8
  %cbase = alloca %union.tree_node*, align 8
  %cbase_aff = alloca %struct.affine_tree_combination, align 8
  %var_aff = alloca %struct.affine_tree_combination, align 8
  %rat = alloca %struct.double_int, align 8
  %cstep_aff = alloca %struct.affine_tree_combination, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !8841, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !8842, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !8843, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %at, metadata !8844, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff, metadata !8845, metadata !DIExpression()), !dbg !8862
  %0 = bitcast %union.tree_node** %ubase to i8*, !dbg !8863
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8863
  %iv = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 2, !dbg !8864
  %1 = bitcast %struct.iv** %iv to i64**, !dbg !8864
  %2 = load i64*, i64** %1, align 8, !dbg !8864
  %3 = load i64, i64* %2, align 8, !dbg !8865
  %4 = bitcast %union.tree_node** %ubase to i64*, !dbg !8866
  store i64 %3, i64* %4, align 8, !dbg !8866
  %step = getelementptr inbounds i64, i64* %2, i64 2, !dbg !8867
  %5 = bitcast i64* %step to %union.tree_node**, !dbg !8867
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !8867
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !8847, metadata !DIExpression()), !dbg !8862
  %7 = bitcast %union.tree_node** %cbase to i8*, !dbg !8868
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8, !dbg !8868
  %iv2 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 6, !dbg !8869
  %8 = bitcast %struct.iv** %iv2 to i64**, !dbg !8869
  %9 = load i64*, i64** %8, align 8, !dbg !8869
  %10 = load i64, i64* %9, align 8, !dbg !8870
  %11 = bitcast %union.tree_node** %cbase to i64*, !dbg !8871
  store i64 %10, i64* %11, align 8, !dbg !8871
  %step5 = getelementptr inbounds i64, i64* %9, i64 2, !dbg !8872
  %12 = bitcast i64* %step5 to %union.tree_node**, !dbg !8872
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !8872
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !8849, metadata !DIExpression()), !dbg !8862
  %14 = inttoptr i64 %3 to %struct.tree_common*, !dbg !8873
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i64 0, i32 2, !dbg !8873
  %15 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8873
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !8851, metadata !DIExpression()), !dbg !8862
  %16 = inttoptr i64 %10 to %struct.tree_common*, !dbg !8874
  %type7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 2, !dbg !8874
  %17 = bitcast %union.tree_node** %type7 to %struct.tree_type**, !dbg !8874
  %18 = load %struct.tree_type*, %struct.tree_type** %17, align 8, !dbg !8874
  %19 = bitcast %struct.affine_tree_combination* %cbase_aff to i8*, !dbg !8875
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %19) #8, !dbg !8875
  %20 = bitcast %struct.affine_tree_combination* %var_aff to i8*, !dbg !8875
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %20) #8, !dbg !8875
  %21 = bitcast %struct.double_int* %rat to i8*, !dbg !8876
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #8, !dbg !8876
  %type8 = bitcast %union.tree_node* %15 to %struct.tree_type*, !dbg !8877
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type8, i64 0, i32 6, !dbg !8877
  %bf.load = load i32, i32* %precision, align 4, !dbg !8877
  %bf.clear = and i32 %bf.load, 1023, !dbg !8877
  %precision10 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 6, !dbg !8879
  %bf.load11 = load i32, i32* %precision10, align 4, !dbg !8879
  %bf.clear12 = and i32 %bf.load11, 1023, !dbg !8879
  %cmp = icmp ugt i32 %bf.clear, %bf.clear12, !dbg !8880
  %22 = inttoptr i64 %10 to %union.tree_node*, !dbg !8881
  br i1 %cmp, label %cleanup, label %if.end, !dbg !8881

if.end:                                           ; preds = %entry
  %call = tail call fastcc %union.tree_node* @var_at_stmt(%struct.loop* %loop, %struct.iv_cand* %cand, %union.gimple_statement_d* %at) #7, !dbg !8882
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8854, metadata !DIExpression()), !dbg !8862
  %call13 = tail call %union.tree_node* @unsigned_type_for(%union.tree_node* %15) #6, !dbg !8883
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !8855, metadata !DIExpression()), !dbg !8862
  %bf.load16 = load i32, i32* %precision, align 4, !dbg !8884
  %bf.clear17 = and i32 %bf.load16, 1023, !dbg !8884
  %bf.load20 = load i32, i32* %precision10, align 4, !dbg !8886
  %bf.clear21 = and i32 %bf.load20, 1023, !dbg !8886
  %cmp22 = icmp ult i32 %bf.clear17, %bf.clear21, !dbg !8887
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !8888

if.then23:                                        ; preds = %if.end
  %call24 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call13, %union.tree_node* %13) #6, !dbg !8889
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !8849, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !8848, metadata !DIExpression()), !dbg !8862
  %call25 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call13, %union.tree_node* %22) #6, !dbg !8891
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !8848, metadata !DIExpression()), !dbg !8862
  store %union.tree_node* %call25, %union.tree_node** %cbase, align 8, !dbg !8892
  %call26 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call13, %union.tree_node* %call) #6, !dbg !8893
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !8854, metadata !DIExpression()), !dbg !8862
  br label %if.end27, !dbg !8894

if.end27:                                         ; preds = %if.then23, %if.end
  %cstep.0 = phi %union.tree_node* [ %call24, %if.then23 ], [ %13, %if.end ], !dbg !8862
  %var.0 = phi %union.tree_node* [ %call26, %if.then23 ], [ %call, %if.end ], !dbg !8862
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !8854, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata %union.tree_node* %cstep.0, metadata !8849, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata %struct.double_int* %rat, metadata !8858, metadata !DIExpression(DW_OP_deref)), !dbg !8862
  %call28 = call fastcc zeroext i8 @constant_multiple_of(%union.tree_node* %6, %union.tree_node* %cstep.0, %struct.double_int* nonnull %rat) #7, !dbg !8895
  %tobool = icmp eq i8 %call28, 0, !dbg !8895
  br i1 %tobool, label %cleanup, label %if.end30, !dbg !8897

if.end30:                                         ; preds = %if.end27
  call void @llvm.dbg.value(metadata %union.tree_node** %ubase, metadata !8846, metadata !DIExpression(DW_OP_deref)), !dbg !8862
  call void @llvm.dbg.value(metadata %union.tree_node** %cbase, metadata !8848, metadata !DIExpression(DW_OP_deref)), !dbg !8862
  %call31 = call fastcc %union.tree_node* @determine_common_wider_type(%union.tree_node** nonnull %ubase, %union.tree_node** nonnull %cbase) #7, !dbg !8898
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !8853, metadata !DIExpression()), !dbg !8862
  %23 = load %union.tree_node*, %union.tree_node** %ubase, align 8, !dbg !8899
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !8846, metadata !DIExpression()), !dbg !8862
  call void @tree_to_aff_combination(%union.tree_node* %23, %union.tree_node* %call31, %struct.affine_tree_combination* %aff) #6, !dbg !8900
  %24 = load %union.tree_node*, %union.tree_node** %cbase, align 8, !dbg !8901
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !8848, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %cbase_aff, metadata !8856, metadata !DIExpression(DW_OP_deref)), !dbg !8862
  call void @tree_to_aff_combination(%union.tree_node* %24, %union.tree_node* %call31, %struct.affine_tree_combination* nonnull %cbase_aff) #6, !dbg !8902
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %var_aff, metadata !8857, metadata !DIExpression(DW_OP_deref)), !dbg !8862
  call void @tree_to_aff_combination(%union.tree_node* %var.0, %union.tree_node* %call13, %struct.affine_tree_combination* nonnull %var_aff) #6, !dbg !8903
  %call32 = call fastcc zeroext i8 @stmt_after_increment(%struct.loop* %loop, %struct.iv_cand* %cand, %union.gimple_statement_d* %at) #7, !dbg !8904
  %tobool33 = icmp eq i8 %call32, 0, !dbg !8904
  br i1 %tobool33, label %if.end39, label %if.then34, !dbg !8905

if.then34:                                        ; preds = %if.end30
  %25 = bitcast %struct.affine_tree_combination* %cstep_aff to i8*, !dbg !8906
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %25) #8, !dbg !8906
  %cmp35 = icmp eq %union.tree_node* %call31, %call13, !dbg !8907
  br i1 %cmp35, label %if.end38, label %if.then36, !dbg !8909

if.then36:                                        ; preds = %if.then34
  %call37 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call31, %union.tree_node* %cstep.0) #6, !dbg !8910
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !8850, metadata !DIExpression()), !dbg !8862
  br label %if.end38, !dbg !8911

if.end38:                                         ; preds = %if.then34, %if.then36
  %cstep_common.0 = phi %union.tree_node* [ %call37, %if.then36 ], [ %cstep.0, %if.then34 ], !dbg !8912
  call void @llvm.dbg.value(metadata %union.tree_node* %cstep_common.0, metadata !8850, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %cstep_aff, metadata !8859, metadata !DIExpression(DW_OP_deref)), !dbg !8913
  call void @tree_to_aff_combination(%union.tree_node* %cstep_common.0, %union.tree_node* %call31, %struct.affine_tree_combination* nonnull %cstep_aff) #6, !dbg !8914
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %cbase_aff, metadata !8856, metadata !DIExpression(DW_OP_deref)), !dbg !8862
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %cstep_aff, metadata !8859, metadata !DIExpression(DW_OP_deref)), !dbg !8913
  call void @aff_combination_add(%struct.affine_tree_combination* nonnull %cbase_aff, %struct.affine_tree_combination* nonnull %cstep_aff) #6, !dbg !8915
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %25) #8, !dbg !8916
  br label %if.end39, !dbg !8917

if.end39:                                         ; preds = %if.end30, %if.end38
  %26 = getelementptr inbounds %struct.double_int, %struct.double_int* %rat, i64 0, i32 0, !dbg !8918
  %27 = load i64, i64* %26, align 8, !dbg !8918
  %28 = getelementptr inbounds %struct.double_int, %struct.double_int* %rat, i64 0, i32 1, !dbg !8918
  %29 = load i64, i64* %28, align 8, !dbg !8918
  %call40 = call { i64, i64 } @double_int_neg(i64 %27, i64 %29) #6, !dbg !8918
  %30 = extractvalue { i64, i64 } %call40, 0, !dbg !8918
  %31 = extractvalue { i64, i64 } %call40, 1, !dbg !8918
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %cbase_aff, metadata !8856, metadata !DIExpression(DW_OP_deref)), !dbg !8862
  call void @aff_combination_scale(%struct.affine_tree_combination* nonnull %cbase_aff, i64 %30, i64 %31) #6, !dbg !8919
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %cbase_aff, metadata !8856, metadata !DIExpression(DW_OP_deref)), !dbg !8862
  call void @aff_combination_add(%struct.affine_tree_combination* %aff, %struct.affine_tree_combination* nonnull %cbase_aff) #6, !dbg !8920
  %cmp41 = icmp eq %union.tree_node* %call31, %call13, !dbg !8921
  br i1 %cmp41, label %if.end43, label %if.then42, !dbg !8923

if.then42:                                        ; preds = %if.end39
  call void @aff_combination_convert(%struct.affine_tree_combination* %aff, %union.tree_node* %call13) #6, !dbg !8924
  br label %if.end43, !dbg !8924

if.end43:                                         ; preds = %if.end39, %if.then42
  %32 = load i64, i64* %26, align 8, !dbg !8925
  %33 = load i64, i64* %28, align 8, !dbg !8925
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %var_aff, metadata !8857, metadata !DIExpression(DW_OP_deref)), !dbg !8862
  call void @aff_combination_scale(%struct.affine_tree_combination* nonnull %var_aff, i64 %32, i64 %33) #6, !dbg !8925
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %var_aff, metadata !8857, metadata !DIExpression(DW_OP_deref)), !dbg !8862
  call void @aff_combination_add(%struct.affine_tree_combination* %aff, %struct.affine_tree_combination* nonnull %var_aff) #6, !dbg !8926
  br label %cleanup, !dbg !8927

cleanup:                                          ; preds = %if.end27, %entry, %if.end43
  %retval.0 = phi i8 [ 1, %if.end43 ], [ 0, %entry ], [ 0, %if.end27 ], !dbg !8862
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #8, !dbg !8928
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %20) #8, !dbg !8928
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %19) #8, !dbg !8928
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8, !dbg !8928
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8928
  ret i8 %retval.0, !dbg !8928
}

declare dso_local void @unshare_aff_combination(%struct.affine_tree_combination*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @var_at_stmt(%struct.loop* %loop, %struct.iv_cand* %cand, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !8929 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !8933, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !8934, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8935, metadata !DIExpression()), !dbg !8936
  %call = tail call fastcc zeroext i8 @stmt_after_increment(%struct.loop* %loop, %struct.iv_cand* %cand, %union.gimple_statement_d* %stmt) #7, !dbg !8937
  %tobool = icmp eq i8 %call, 0, !dbg !8937
  br i1 %tobool, label %if.else, label %if.then, !dbg !8939

if.then:                                          ; preds = %entry
  %var_after = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 5, !dbg !8940
  br label %return, !dbg !8941

if.else:                                          ; preds = %entry
  %var_before = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 4, !dbg !8942
  br label %return, !dbg !8943

return:                                           ; preds = %if.else, %if.then
  %retval.0.in = phi %union.tree_node** [ %var_after, %if.then ], [ %var_before, %if.else ]
  %retval.0 = load %union.tree_node*, %union.tree_node** %retval.0.in, align 8, !dbg !8944
  ret %union.tree_node* %retval.0, !dbg !8945
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @determine_common_wider_type(%union.tree_node** %a, %union.tree_node** %b) unnamed_addr #5 !dbg !8946 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %a, metadata !8950, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata %union.tree_node** %b, metadata !8951, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8952, metadata !DIExpression()), !dbg !8956
  %0 = bitcast %union.tree_node** %a to %struct.tree_common**, !dbg !8957
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !8957
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !8957
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8957
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !8955, metadata !DIExpression()), !dbg !8956
  %.cast = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 0, i32 0, !dbg !8958
  %bf.load = load i64, i64* %.cast, align 8, !dbg !8958
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8958
  %cmp = icmp eq i64 %bf.cast1, 116, !dbg !8958
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8958

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 113, !dbg !8958
  br i1 %cmp5, label %if.then, label %cleanup, !dbg !8960

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 1, i32 2, !dbg !8961
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !8961
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !8953, metadata !DIExpression()), !dbg !8956
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8963
  %5 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !8963
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !8952, metadata !DIExpression()), !dbg !8956
  %type8 = bitcast %union.tree_node* %5 to %struct.tree_type*, !dbg !8964
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type8, i64 0, i32 6, !dbg !8964
  %bf.load9 = load i32, i32* %precision, align 4, !dbg !8964
  %bf.clear10 = and i32 %bf.load9, 1023, !dbg !8964
  %type11 = bitcast %union.tree_node* %2 to %struct.tree_type*, !dbg !8966
  %precision12 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type11, i64 0, i32 6, !dbg !8966
  %bf.load13 = load i32, i32* %precision12, align 4, !dbg !8966
  %bf.clear14 = and i32 %bf.load13, 1023, !dbg !8966
  %cmp15 = icmp ult i32 %bf.clear10, %bf.clear14, !dbg !8967
  br i1 %cmp15, label %cleanup, label %if.end17, !dbg !8968

if.end17:                                         ; preds = %if.then
  %6 = bitcast %union.tree_node** %b to i64**, !dbg !8969
  %7 = load i64*, i64** %6, align 8, !dbg !8969
  %bf.load19 = load i64, i64* %7, align 8, !dbg !8969
  %bf.cast213 = and i64 %bf.load19, 65535, !dbg !8969
  %cmp22 = icmp eq i64 %bf.cast213, 116, !dbg !8969
  br i1 %cmp22, label %if.then29, label %lor.lhs.false23, !dbg !8969

lor.lhs.false23:                                  ; preds = %if.end17
  %cmp28 = icmp eq i64 %bf.cast213, 113, !dbg !8969
  br i1 %cmp28, label %if.then29, label %cleanup, !dbg !8971

if.then29:                                        ; preds = %lor.lhs.false23, %if.end17
  %arrayidx32 = getelementptr inbounds i64, i64* %7, i64 5, !dbg !8972
  %8 = bitcast i64* %arrayidx32 to %union.tree_node**, !dbg !8972
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !8972
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !8954, metadata !DIExpression()), !dbg !8956
  %type38 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8974
  %10 = bitcast %union.tree_node** %type38 to %struct.tree_type**, !dbg !8974
  %11 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !8974
  %precision40 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 6, !dbg !8974
  %bf.load41 = load i32, i32* %precision40, align 4, !dbg !8974
  %12 = xor i32 %bf.load9, %bf.load41, !dbg !8976
  %13 = and i32 %12, 1023, !dbg !8976
  %cmp43 = icmp eq i32 %13, 0, !dbg !8976
  br i1 %cmp43, label %if.end47, label %cleanup, !dbg !8977

if.end47:                                         ; preds = %if.then29
  store %union.tree_node* %4, %union.tree_node** %a, align 8, !dbg !8978
  store %union.tree_node* %9, %union.tree_node** %b, align 8, !dbg !8979
  br label %cleanup, !dbg !8980

cleanup:                                          ; preds = %if.then29, %lor.lhs.false23, %lor.lhs.false, %if.then, %if.end47
  %retval.0 = phi %union.tree_node* [ %5, %if.end47 ], [ %2, %if.then ], [ %2, %lor.lhs.false ], [ %2, %if.then29 ], [ %2, %lor.lhs.false23 ], !dbg !8956
  ret %union.tree_node* %retval.0, !dbg !8981
}

declare dso_local void @aff_combination_convert(%struct.affine_tree_combination*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @prepare_decl_rtl(%union.tree_node** %expr_p, i32* %ws, i8* %data) #5 !dbg !8982 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !8984, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata i32* %ws, metadata !8985, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata i8* %data, metadata !8986, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8987, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8988, metadata !DIExpression()), !dbg !8990
  %0 = bitcast i8* %data to i32*, !dbg !8991
  call void @llvm.dbg.value(metadata i32* %0, metadata !8989, metadata !DIExpression()), !dbg !8990
  %1 = bitcast %union.tree_node** %expr_p to i64**, !dbg !8992
  %2 = load i64*, i64** %1, align 8, !dbg !8992
  %bf.load = load i64, i64* %2, align 8, !dbg !8992
  %3 = trunc i64 %bf.load to i16, !dbg !8992
  switch i16 %3, label %sw.epilog [
    i16 121, label %sw.bb
    i16 141, label %sw.bb21
    i16 32, label %sw.bb42
    i16 34, label %sw.bb42
    i16 36, label %sw.bb42
  ], !dbg !8993

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr inbounds i64, i64* %2, i64 5, !dbg !8994
  %4 = bitcast i64* %arrayidx to %union.tree_node**, !dbg !8994
  call void @llvm.dbg.value(metadata %union.tree_node** %4, metadata !8984, metadata !DIExpression()), !dbg !8990
  br label %for.cond, !dbg !8997

for.cond:                                         ; preds = %for.inc, %sw.bb
  %expr_p.addr.0 = phi %union.tree_node** [ %4, %sw.bb ], [ %operands2, %for.inc ], !dbg !8998
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p.addr.0, metadata !8984, metadata !DIExpression()), !dbg !8990
  %5 = load %union.tree_node*, %union.tree_node** %expr_p.addr.0, align 8, !dbg !8999
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %5) #7, !dbg !9001
  %tobool = icmp eq i8 %call, 0, !dbg !9002
  %6 = load %union.tree_node*, %union.tree_node** %expr_p.addr.0, align 8, !dbg !9003
  br i1 %tobool, label %for.end, label %for.inc, !dbg !9002

for.inc:                                          ; preds = %for.cond
  %operands2 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9004
  call void @llvm.dbg.value(metadata %union.tree_node** %operands2, metadata !8984, metadata !DIExpression()), !dbg !8990
  br label %for.cond, !dbg !9005, !llvm.loop !9006

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %union.tree_node* [ %6, %for.cond ], !dbg !9003
  call void @llvm.dbg.value(metadata %union.tree_node* %.lcssa, metadata !8987, metadata !DIExpression()), !dbg !8990
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9008
  %bf.load5 = load i64, i64* %7, align 8, !dbg !9008
  %bf.cast7 = and i64 %bf.load5, 65535, !dbg !9008
  %arrayidx8 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast7, !dbg !9008
  %8 = load i32, i32* %arrayidx8, align 4, !dbg !9008
  %cmp = icmp eq i32 %8, 3, !dbg !9008
  br i1 %cmp, label %land.lhs.true, label %sw.epilog, !dbg !9010

land.lhs.true:                                    ; preds = %for.end
  %arrayidx15 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast7, i64 11, !dbg !9011
  %9 = load i8, i8* %arrayidx15, align 1, !dbg !9011
  %tobool16 = icmp eq i8 %9, 0, !dbg !9011
  br i1 %tobool16, label %if.then, label %land.lhs.true17, !dbg !9011

land.lhs.true17:                                  ; preds = %land.lhs.true
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9011
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !9011
  %cmp18 = icmp eq %struct.rtx_def* %10, null, !dbg !9011
  br i1 %cmp18, label %if.then, label %sw.epilog, !dbg !9012

if.then:                                          ; preds = %land.lhs.true17, %land.lhs.true
  %call20 = tail call fastcc %struct.rtx_def* @produce_memory_decl_rtl(%union.tree_node* %.lcssa, i32* %0) #7, !dbg !9013
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call20, metadata !8988, metadata !DIExpression()), !dbg !8990
  br label %sw.epilog, !dbg !9014

sw.bb21:                                          ; preds = %entry
  store i32 0, i32* %ws, align 4, !dbg !9015
  %11 = bitcast %union.tree_node** %expr_p to %struct.tree_ssa_name**, !dbg !9016
  %12 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %11, align 8, !dbg !9016
  %var = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %12, i64 0, i32 1, !dbg !9016
  %13 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !9016
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !8987, metadata !DIExpression()), !dbg !8990
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9017
  %bf.load23 = load i64, i64* %14, align 8, !dbg !9017
  %bf.cast25 = and i64 %bf.load23, 65535, !dbg !9017
  %arrayidx28 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast25, i64 11, !dbg !9017
  %15 = load i8, i8* %arrayidx28, align 1, !dbg !9017
  %tobool30 = icmp eq i8 %15, 0, !dbg !9017
  br i1 %tobool30, label %if.then36, label %land.lhs.true31, !dbg !9017

land.lhs.true31:                                  ; preds = %sw.bb21
  %rtl33 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9017
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtl33, align 8, !dbg !9017
  %cmp34 = icmp eq %struct.rtx_def* %16, null, !dbg !9017
  br i1 %cmp34, label %if.then36, label %sw.epilog, !dbg !9019

if.then36:                                        ; preds = %land.lhs.true31, %sw.bb21
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9020
  %17 = bitcast i40* %mode to i64*, !dbg !9020
  %bf.load37 = load i64, i64* %17, align 8, !dbg !9020
  %18 = trunc i64 %bf.load37 to i32, !dbg !9020
  %bf.cast39 = and i32 %18, 255, !dbg !9020
  %19 = load i32, i32* %0, align 4, !dbg !9021
  %inc = add nsw i32 %19, 1, !dbg !9021
  store i32 %inc, i32* %0, align 4, !dbg !9021
  %call40 = tail call %struct.rtx_def* @gen_raw_REG(i32 %bf.cast39, i32 %19) #6, !dbg !9022
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40, metadata !8988, metadata !DIExpression()), !dbg !8990
  br label %sw.epilog, !dbg !9023

sw.bb42:                                          ; preds = %entry, %entry, %entry
  store i32 0, i32* %ws, align 4, !dbg !9024
  %20 = load %union.tree_node*, %union.tree_node** %expr_p, align 8, !dbg !9025
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !8987, metadata !DIExpression()), !dbg !8990
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9026
  %bf.load44 = load i64, i64* %21, align 8, !dbg !9026
  %bf.cast46 = and i64 %bf.load44, 65535, !dbg !9026
  %arrayidx49 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast46, i64 11, !dbg !9026
  %22 = load i8, i8* %arrayidx49, align 1, !dbg !9026
  %tobool51 = icmp eq i8 %22, 0, !dbg !9026
  br i1 %tobool51, label %if.end58, label %land.lhs.true52, !dbg !9026

land.lhs.true52:                                  ; preds = %sw.bb42
  %rtl54 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9026
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtl54, align 8, !dbg !9026
  %cmp55 = icmp eq %struct.rtx_def* %23, null, !dbg !9026
  br i1 %cmp55, label %if.end58, label %sw.epilog, !dbg !9028

if.end58:                                         ; preds = %land.lhs.true52, %sw.bb42
  %mode60 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9029
  %24 = bitcast i40* %mode60 to i64*, !dbg !9029
  %bf.load61 = load i64, i64* %24, align 8, !dbg !9029
  %bf.cast631 = and i64 %bf.load61, 255, !dbg !9031
  %cmp64 = icmp eq i64 %bf.cast631, 1, !dbg !9031
  br i1 %cmp64, label %if.then66, label %if.else, !dbg !9032

if.then66:                                        ; preds = %if.end58
  %call67 = tail call fastcc %struct.rtx_def* @produce_memory_decl_rtl(%union.tree_node* %20, i32* %0) #7, !dbg !9033
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call67, metadata !8988, metadata !DIExpression()), !dbg !8990
  br label %sw.epilog, !dbg !9034

if.else:                                          ; preds = %if.end58
  %25 = trunc i64 %bf.load61 to i32, !dbg !9035
  %bf.cast72 = and i32 %25, 255, !dbg !9035
  %26 = load i32, i32* %0, align 4, !dbg !9036
  %inc73 = add nsw i32 %26, 1, !dbg !9036
  store i32 %inc73, i32* %0, align 4, !dbg !9036
  %call74 = tail call %struct.rtx_def* @gen_raw_REG(i32 %bf.cast72, i32 %26) #6, !dbg !9037
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call74, metadata !8988, metadata !DIExpression()), !dbg !8990
  br label %sw.epilog

sw.epilog:                                        ; preds = %land.lhs.true17, %land.lhs.true31, %land.lhs.true52, %entry, %if.then66, %if.else, %if.then36, %for.end, %if.then
  %obj.0 = phi %union.tree_node* [ %.lcssa, %if.then ], [ %.lcssa, %land.lhs.true17 ], [ %.lcssa, %for.end ], [ %13, %if.then36 ], [ %13, %land.lhs.true31 ], [ %20, %land.lhs.true52 ], [ %20, %if.else ], [ %20, %if.then66 ], [ null, %entry ], !dbg !8990
  %x.3 = phi %struct.rtx_def* [ %call20, %if.then ], [ null, %land.lhs.true17 ], [ null, %for.end ], [ %call40, %if.then36 ], [ null, %land.lhs.true31 ], [ null, %land.lhs.true52 ], [ %call74, %if.else ], [ %call67, %if.then66 ], [ null, %entry ], !dbg !8990
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.3, metadata !8988, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata %union.tree_node* %obj.0, metadata !8987, metadata !DIExpression()), !dbg !8990
  %tobool76 = icmp eq %struct.rtx_def* %x.3, null, !dbg !9038
  br i1 %tobool76, label %if.end79, label %if.then77, !dbg !9040

if.then77:                                        ; preds = %sw.epilog
  %call78 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull @decl_rtl_to_reset, %union.tree_node* %obj.0) #7, !dbg !9041
  tail call void @set_decl_rtl(%union.tree_node* %obj.0, %struct.rtx_def* nonnull %x.3) #6, !dbg !9043
  br label %if.end79, !dbg !9044

if.end79:                                         ; preds = %sw.epilog, %if.then77
  ret %union.tree_node* null, !dbg !9045
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier) unnamed_addr #0 !dbg !9046 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !9050, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !9051, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9052, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.value(metadata i32 0, metadata !9053, metadata !DIExpression()), !dbg !9054
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* null, i32 %mode, i32 0, %struct.rtx_def** null) #6, !dbg !9055
  ret %struct.rtx_def* %call, !dbg !9056
}

declare dso_local void @default_rtl_profile() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !9057 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** @decl_rtl_to_reset, metadata !9062, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !9063, metadata !DIExpression()), !dbg !9064
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** nonnull @decl_rtl_to_reset, i32 1) #7, !dbg !9065
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @decl_rtl_to_reset, align 8, !dbg !9065
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !9065
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9065

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !9065
  br label %cond.end, !dbg !9065

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9065
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !9065
  ret %union.tree_node** %call1, !dbg !9065
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9066 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** @decl_rtl_to_reset, metadata !9070, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.value(metadata i32 1, metadata !9071, metadata !DIExpression()), !dbg !9073
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @decl_rtl_to_reset, align 8, !dbg !9074
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !9074
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9074

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !9074
  br label %cond.end, !dbg !9074

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9074
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #7, !dbg !9074
  %tobool1 = icmp eq i32 %call, 0, !dbg !9074
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9074
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9072, metadata !DIExpression()), !dbg !9073
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9074

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_tree_heap** @decl_rtl_to_reset to i8**), align 8, !dbg !9075
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 1) #6, !dbg !9075
  store i8* %call3, i8** bitcast (%struct.VEC_tree_heap** @decl_rtl_to_reset to i8**), align 8, !dbg !9075
  br label %if.end, !dbg !9075

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9074
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !9077 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !9082, metadata !DIExpression()), !dbg !9085
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !9083, metadata !DIExpression()), !dbg !9085
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !9086
  %0 = load i32, i32* %num1, align 8, !dbg !9086
  %inc = add i32 %0, 1, !dbg !9086
  store i32 %inc, i32* %num1, align 8, !dbg !9086
  %idxprom = zext i32 %0 to i64, !dbg !9086
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9086
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !9084, metadata !DIExpression()), !dbg !9085
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !9086
  ret %union.tree_node** %arrayidx, !dbg !9086
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9087 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !9091, metadata !DIExpression()), !dbg !9093
  call void @llvm.dbg.value(metadata i32 1, metadata !9092, metadata !DIExpression()), !dbg !9093
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !9094
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9094

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !9094
  %0 = load i32, i32* %alloc, align 4, !dbg !9094
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !9094
  %1 = load i32, i32* %num, align 8, !dbg !9094
  %cmp1 = icmp ne i32 %0, %1, !dbg !9094
  %phitmp = zext i1 %cmp1 to i32, !dbg !9094
  br label %cond.end, !dbg !9094

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9094

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !9094
}

declare dso_local %struct.rtx_def* @expand_expr_real(%union.tree_node*, %struct.rtx_def*, i32, i32, %struct.rtx_def**) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @determine_iv_cost(%struct.ivopts_data* %data, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !9095 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9099, metadata !DIExpression()), !dbg !9105
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !9100, metadata !DIExpression()), !dbg !9105
  %iv = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 6, !dbg !9106
  %0 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !9106
  %tobool = icmp eq %struct.iv* %0, null, !dbg !9108
  br i1 %tobool, label %if.then, label %if.end, !dbg !9109

if.then:                                          ; preds = %entry
  %cost1 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 7, !dbg !9110
  store i32 0, i32* %cost1, align 8, !dbg !9112
  br label %cleanup, !dbg !9113

if.end:                                           ; preds = %entry
  %base3 = getelementptr inbounds %struct.iv, %struct.iv* %0, i64 0, i32 0, !dbg !9114
  %1 = load %union.tree_node*, %union.tree_node** %base3, align 8, !dbg !9114
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9104, metadata !DIExpression()), !dbg !9105
  %call = tail call fastcc i64 @force_var_cost(%struct.ivopts_data* %data, %union.tree_node* %1, %struct.bitmap_head_def** null) #7, !dbg !9115
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9116
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !9116
  %3 = load i64*, i64** %2, align 8, !dbg !9116
  %bf.load = load i64, i64* %3, align 8, !dbg !9116
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9116
  %cmp = icmp eq i64 %bf.cast2, 14, !dbg !9116
  %4 = trunc i64 %call to i32, !dbg !9116
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9116

cond.true:                                        ; preds = %if.end
  %.cast = bitcast i64* %3 to %union.tree_node*, !dbg !9116
  %call7 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !9116
  br label %cond.end, !dbg !9116

cond.false:                                       ; preds = %if.end
  %type10 = bitcast i64* %3 to %struct.tree_type*, !dbg !9116
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type10, i64 0, i32 6, !dbg !9116
  %bf.load11 = load i32, i32* %mode, align 4, !dbg !9116
  %bf.lshr = lshr i32 %bf.load11, 16, !dbg !9116
  %bf.clear12 = and i32 %bf.lshr, 255, !dbg !9116
  br label %cond.end, !dbg !9116

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call7, %cond.true ], [ %bf.clear12, %cond.false ], !dbg !9116
  %speed = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 11, !dbg !9117
  %5 = load i8, i8* %speed, align 1, !dbg !9117
  %call13 = tail call fastcc i32 @add_cost(i32 %cond, i8 zeroext %5) #7, !dbg !9118
  call void @llvm.dbg.value(metadata i32 %call13, metadata !9103, metadata !DIExpression()), !dbg !9105
  %div = sdiv i32 %4, 5, !dbg !9119
  %add = add i32 %call13, %div, !dbg !9120
  call void @llvm.dbg.value(metadata i32 %add, metadata !9102, metadata !DIExpression()), !dbg !9105
  %pos = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 2, !dbg !9121
  %6 = load i32, i32* %pos, align 8, !dbg !9121
  %cmp15 = icmp eq i32 %6, 4, !dbg !9123
  br i1 %cmp15, label %lor.lhs.false, label %if.then21, !dbg !9124

lor.lhs.false:                                    ; preds = %cond.end
  %var_before = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 4, !dbg !9125
  %7 = bitcast %union.tree_node** %var_before to %struct.tree_ssa_name**, !dbg !9125
  %8 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %7, align 8, !dbg !9125
  %var = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %8, i64 0, i32 1, !dbg !9125
  %9 = bitcast %union.tree_node** %var to %struct.tree_decl_common**, !dbg !9125
  %10 = load %struct.tree_decl_common*, %struct.tree_decl_common** %9, align 8, !dbg !9125
  %artificial_flag = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %10, i64 0, i32 2, !dbg !9125
  %11 = bitcast i40* %artificial_flag to i64*, !dbg !9125
  %bf.load16 = load i64, i64* %11, align 8, !dbg !9125
  %bf.cast193 = and i64 %bf.load16, 4096, !dbg !9125
  %tobool20 = icmp eq i64 %bf.cast193, 0, !dbg !9125
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !9126

if.then21:                                        ; preds = %lor.lhs.false, %cond.end
  %inc = add i32 %add, 1, !dbg !9127
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9102, metadata !DIExpression()), !dbg !9105
  br label %if.end22, !dbg !9128

if.end22:                                         ; preds = %lor.lhs.false, %if.then21
  %cost.0 = phi i32 [ %inc, %if.then21 ], [ %add, %lor.lhs.false ], !dbg !9105
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !9102, metadata !DIExpression()), !dbg !9105
  %cmp24 = icmp eq i32 %6, 1, !dbg !9129
  br i1 %cmp24, label %land.lhs.true, label %if.end30, !dbg !9131

land.lhs.true:                                    ; preds = %if.end22
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !9132
  %12 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !9132
  %call25 = tail call %struct.basic_block_def* @ip_end_pos(%struct.loop* %12) #6, !dbg !9133
  %call26 = tail call zeroext i8 @empty_block_p(%struct.basic_block_def* %call25) #6, !dbg !9134
  %tobool27 = icmp ne i8 %call26, 0, !dbg !9134
  %inc29 = zext i1 %tobool27 to i32, !dbg !9135
  %spec.select = add i32 %cost.0, %inc29, !dbg !9135
  br label %if.end30, !dbg !9135

if.end30:                                         ; preds = %land.lhs.true, %if.end22
  %cost.1 = phi i32 [ %cost.0, %if.end22 ], [ %spec.select, %land.lhs.true ], !dbg !9105
  call void @llvm.dbg.value(metadata i32 %cost.1, metadata !9102, metadata !DIExpression()), !dbg !9105
  %cost31 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 7, !dbg !9136
  store i32 %cost.1, i32* %cost31, align 8, !dbg !9137
  %cost_step32 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 8, !dbg !9138
  store i32 %call13, i32* %cost_step32, align 4, !dbg !9139
  br label %cleanup, !dbg !9140

cleanup:                                          ; preds = %if.end30, %if.then
  ret void, !dbg !9140
}

; Function Attrs: nounwind uwtable
define internal fastcc void @alloc_use_cost_map(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !9141 {
entry:
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9143, metadata !DIExpression()), !dbg !9153
  %0 = bitcast i32* %j to i8*, !dbg !9154
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9154
  call void @llvm.dbg.value(metadata i32 0, metadata !9144, metadata !DIExpression()), !dbg !9153
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !9155
  %consider_all_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 10, !dbg !9156
  br label %for.cond, !dbg !9158

for.cond:                                         ; preds = %if.end, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc14, %if.end ], !dbg !9159
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9144, metadata !DIExpression()), !dbg !9153
  %call = call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !9160
  %cmp = icmp ult i32 %i.0, %call, !dbg !9161
  br i1 %cmp, label %for.body, label %for.end15, !dbg !9162

for.body:                                         ; preds = %for.cond
  %call1 = call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !9163
  call void @llvm.dbg.value(metadata %struct.iv_use* %call1, metadata !9148, metadata !DIExpression()), !dbg !9155
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !9164
  %2 = load i8, i8* %consider_all_candidates, align 4, !dbg !9165
  %tobool = icmp eq i8 %2, 0, !dbg !9166
  br i1 %tobool, label %if.else, label %if.then, !dbg !9167

if.then:                                          ; preds = %for.body
  %call2 = call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !9168
  call void @llvm.dbg.value(metadata i32 %call2, metadata !9145, metadata !DIExpression()), !dbg !9153
  br label %if.end, !dbg !9169

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 0, metadata !9146, metadata !DIExpression()), !dbg !9153
  %related_cands = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call1, i64 0, i32 5, !dbg !9170
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %related_cands, align 8, !dbg !9170
  call void @llvm.dbg.value(metadata i32* %j, metadata !9147, metadata !DIExpression(DW_OP_deref)), !dbg !9153
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9152, metadata !DIExpression(DW_OP_deref)), !dbg !9155
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %3, i32 0, i32* nonnull %j) #7, !dbg !9170
  br label %for.cond3, !dbg !9170

for.cond3:                                        ; preds = %for.body6, %if.else
  %s.0 = phi i32 [ 0, %if.else ], [ %inc, %for.body6 ], !dbg !9173
  call void @llvm.dbg.value(metadata i32 %s.0, metadata !9146, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i32* %j, metadata !9147, metadata !DIExpression(DW_OP_deref)), !dbg !9153
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9152, metadata !DIExpression(DW_OP_deref)), !dbg !9155
  %call4 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !9174
  %tobool5 = icmp eq i8 %call4, 0, !dbg !9170
  br i1 %tobool5, label %for.cond7.preheader, label %for.body6, !dbg !9170

for.cond7.preheader:                              ; preds = %for.cond3
  %s.0.lcssa = phi i32 [ %s.0, %for.cond3 ], !dbg !9173
  call void @llvm.dbg.value(metadata i32 %s.0.lcssa, metadata !9146, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i32 %s.0.lcssa, metadata !9146, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i32 %s.0.lcssa, metadata !9146, metadata !DIExpression()), !dbg !9153
  br label %for.cond7, !dbg !9176

for.body6:                                        ; preds = %for.cond3
  %inc = add i32 %s.0, 1, !dbg !9178
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9146, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i32* %j, metadata !9147, metadata !DIExpression(DW_OP_deref)), !dbg !9153
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9152, metadata !DIExpression(DW_OP_deref)), !dbg !9155
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !9174
  br label %for.cond3, !dbg !9174, !llvm.loop !9180

for.cond7:                                        ; preds = %for.cond7.preheader, %for.inc10
  %size.0 = phi i32 [ %shl, %for.inc10 ], [ 1, %for.cond7.preheader ], !dbg !9182
  call void @llvm.dbg.value(metadata i32 %size.0, metadata !9145, metadata !DIExpression()), !dbg !9153
  %cmp8 = icmp ult i32 %size.0, %s.0.lcssa, !dbg !9183
  br i1 %cmp8, label %for.inc10, label %if.end.loopexit, !dbg !9176

for.inc10:                                        ; preds = %for.cond7
  %shl = shl i32 %size.0, 1, !dbg !9185
  call void @llvm.dbg.value(metadata i32 %shl, metadata !9145, metadata !DIExpression()), !dbg !9153
  br label %for.cond7, !dbg !9186, !llvm.loop !9187

if.end.loopexit:                                  ; preds = %for.cond7
  %size.0.lcssa = phi i32 [ %size.0, %for.cond7 ], !dbg !9182
  call void @llvm.dbg.value(metadata i32 %size.0.lcssa, metadata !9145, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i32 %size.0.lcssa, metadata !9145, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i32 %size.0.lcssa, metadata !9145, metadata !DIExpression()), !dbg !9153
  br label %if.end, !dbg !9189

if.end:                                           ; preds = %if.end.loopexit, %if.then
  %size.1 = phi i32 [ %call2, %if.then ], [ %size.0.lcssa, %if.end.loopexit ], !dbg !9156
  call void @llvm.dbg.value(metadata i32 %size.1, metadata !9145, metadata !DIExpression()), !dbg !9153
  %n_map_members = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call1, i64 0, i32 6, !dbg !9189
  store i32 %size.1, i32* %n_map_members, align 8, !dbg !9190
  %conv = zext i32 %size.1 to i64, !dbg !9191
  %call12 = call i8* @xcalloc(i64 %conv, i64 32) #6, !dbg !9191
  %cost_map = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call1, i64 0, i32 7, !dbg !9192
  %4 = bitcast %struct.cost_pair** %cost_map to i8**, !dbg !9193
  store i8* %call12, i8** %4, align 8, !dbg !9193
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !9194
  %inc14 = add i32 %i.0, 1, !dbg !9195
  call void @llvm.dbg.value(metadata i32 %inc14, metadata !9144, metadata !DIExpression()), !dbg !9153
  br label %for.cond, !dbg !9196, !llvm.loop !9197

for.end15:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9199
  ret void, !dbg !9199
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @determine_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !9200 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9202, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !9203, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !9204, metadata !DIExpression()), !dbg !9205
  %type = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 1, !dbg !9206
  %0 = load i32, i32* %type, align 4, !dbg !9206
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
  ], !dbg !9207

sw.bb:                                            ; preds = %entry
  %call = tail call fastcc zeroext i8 @determine_use_iv_cost_generic(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) #7, !dbg !9208
  br label %return, !dbg !9210

sw.bb1:                                           ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @determine_use_iv_cost_address(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) #7, !dbg !9211
  br label %return, !dbg !9212

sw.bb3:                                           ; preds = %entry
  %call4 = tail call fastcc zeroext i8 @determine_use_iv_cost_condition(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) #7, !dbg !9213
  br label %return, !dbg !9214

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 4182, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !9215
  br label %return, !dbg !9216

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb1, %sw.bb
  %retval.0 = phi i8 [ 0, %sw.default ], [ %call4, %sw.bb3 ], [ %call2, %sw.bb1 ], [ %call, %sw.bb ], !dbg !9205
  ret i8 %retval.0, !dbg !9217
}

declare dso_local zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @determine_use_iv_cost_generic(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !9218 {
entry:
  %depends_on = alloca %struct.bitmap_head_def*, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9220, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !9221, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !9222, metadata !DIExpression()), !dbg !9225
  %0 = bitcast %struct.bitmap_head_def** %depends_on to i8*, !dbg !9226
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9226
  %pos = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 2, !dbg !9227
  %1 = load i32, i32* %pos, align 8, !dbg !9227
  %cmp = icmp eq i32 %1, 4, !dbg !9229
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9230

land.lhs.true:                                    ; preds = %entry
  %incremented_at = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 3, !dbg !9231
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %incremented_at, align 8, !dbg !9231
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !9232
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !9232
  %cmp1 = icmp eq %union.gimple_statement_d* %2, %3, !dbg !9233
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9234

if.then:                                          ; preds = %land.lhs.true
  tail call fastcc void @set_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i64 0, %struct.bitmap_head_def* null, %union.tree_node* null) #7, !dbg !9235
  br label %cleanup, !dbg !9237

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %depends_on, metadata !9223, metadata !DIExpression(DW_OP_deref)), !dbg !9225
  %call = call fastcc i64 @get_computation_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i8 zeroext 0, %struct.bitmap_head_def** nonnull %depends_on, i8* null) #7, !dbg !9238
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on, align 8, !dbg !9239
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %4, metadata !9223, metadata !DIExpression()), !dbg !9225
  call fastcc void @set_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i64 %call, %struct.bitmap_head_def* %4, %union.tree_node* null) #7, !dbg !9240
  %call2 = call fastcc zeroext i8 @infinite_cost_p(i64 %call) #7, !dbg !9241
  %tobool = icmp eq i8 %call2, 0, !dbg !9242
  %conv = zext i1 %tobool to i8, !dbg !9242
  br label %cleanup, !dbg !9243

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ %conv, %if.end ], !dbg !9225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9244
  ret i8 %retval.0, !dbg !9244
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @determine_use_iv_cost_address(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !9245 {
entry:
  %depends_on = alloca %struct.bitmap_head_def*, align 8
  %can_autoinc = alloca i8, align 1
  %cost = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9247, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !9248, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !9249, metadata !DIExpression()), !dbg !9253
  %0 = bitcast %struct.bitmap_head_def** %depends_on to i8*, !dbg !9254
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9254
  call void @llvm.dbg.value(metadata i8* %can_autoinc, metadata !9251, metadata !DIExpression(DW_OP_deref)), !dbg !9253
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %can_autoinc) #8, !dbg !9255
  %1 = bitcast i64* %cost to i8*, !dbg !9256
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9256
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %depends_on, metadata !9250, metadata !DIExpression(DW_OP_deref)), !dbg !9253
  call void @llvm.dbg.value(metadata i8* %can_autoinc, metadata !9251, metadata !DIExpression(DW_OP_deref)), !dbg !9253
  %call = call fastcc i64 @get_computation_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i8 zeroext 1, %struct.bitmap_head_def** nonnull %depends_on, i8* nonnull %can_autoinc) #7, !dbg !9257
  store i64 %call, i64* %cost, align 8, !dbg !9257
  %ainc_use = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 9, !dbg !9258
  %2 = load %struct.iv_use*, %struct.iv_use** %ainc_use, align 8, !dbg !9258
  %cmp = icmp eq %struct.iv_use* %2, %use, !dbg !9260
  %3 = trunc i64 %call to i32, !dbg !9261
  br i1 %cmp, label %if.then, label %if.end8, !dbg !9261

if.then:                                          ; preds = %entry
  %4 = load i8, i8* %can_autoinc, align 1, !dbg !9262
  call void @llvm.dbg.value(metadata i8 %4, metadata !9251, metadata !DIExpression()), !dbg !9253
  %tobool = icmp eq i8 %4, 0, !dbg !9262
  br i1 %tobool, label %if.else, label %if.then1, !dbg !9265

if.then1:                                         ; preds = %if.then
  %cost_step = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 8, !dbg !9266
  %5 = load i32, i32* %cost_step, align 4, !dbg !9266
  %cost2 = bitcast i64* %cost to i32*, !dbg !9267
  %sub = sub i32 %3, %5, !dbg !9268
  store i32 %sub, i32* %cost2, align 8, !dbg !9268
  %.pre = load i64, i64* %cost, align 8, !dbg !9269
  br label %if.end8, !dbg !9270

if.else:                                          ; preds = %if.then
  %pos = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 2, !dbg !9271
  %6 = load i32, i32* %pos, align 8, !dbg !9271
  %cmp3 = icmp eq i32 %6, 3, !dbg !9273
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !9274

lor.lhs.false:                                    ; preds = %if.else
  %cmp5 = icmp eq i32 %6, 2, !dbg !9275
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !9276

if.then6:                                         ; preds = %lor.lhs.false, %if.else
  store i64 42949672970000000, i64* %cost, align 8, !dbg !9277
  br label %if.end8, !dbg !9278

if.end8:                                          ; preds = %if.then1, %if.then6, %lor.lhs.false, %entry
  %7 = phi i64 [ %.pre, %if.then1 ], [ 42949672970000000, %if.then6 ], [ %call, %lor.lhs.false ], [ %call, %entry ], !dbg !9269
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on, align 8, !dbg !9279
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %8, metadata !9250, metadata !DIExpression()), !dbg !9253
  call fastcc void @set_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i64 %7, %struct.bitmap_head_def* %8, %union.tree_node* null) #7, !dbg !9269
  %call9 = call fastcc zeroext i8 @infinite_cost_p(i64 %7) #7, !dbg !9280
  %tobool10 = icmp eq i8 %call9, 0, !dbg !9281
  %conv = zext i1 %tobool10 to i8, !dbg !9281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9282
  call void @llvm.dbg.value(metadata i8* %can_autoinc, metadata !9251, metadata !DIExpression(DW_OP_deref)), !dbg !9253
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %can_autoinc) #8, !dbg !9282
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9282
  ret i8 %conv, !dbg !9283
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @determine_use_iv_cost_condition(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !9284 {
entry:
  %bound = alloca %union.tree_node*, align 8
  %cmp_iv = alloca %struct.iv*, align 8
  %depends_on_elim = alloca %struct.bitmap_head_def*, align 8
  %depends_on_express = alloca %struct.bitmap_head_def*, align 8
  %elim_cost = alloca i64, align 8
  %control_var = alloca %union.tree_node**, align 8
  %bound_cst = alloca %union.tree_node**, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9286, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !9287, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !9288, metadata !DIExpression()), !dbg !9300
  %0 = bitcast %union.tree_node** %bound to i8*, !dbg !9301
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9301
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9289, metadata !DIExpression()), !dbg !9300
  store %union.tree_node* null, %union.tree_node** %bound, align 8, !dbg !9302
  %1 = bitcast %struct.iv** %cmp_iv to i8*, !dbg !9303
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9303
  %2 = bitcast %struct.bitmap_head_def** %depends_on_elim to i8*, !dbg !9304
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !9304
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !9291, metadata !DIExpression()), !dbg !9300
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %depends_on_elim, align 8, !dbg !9305
  %3 = bitcast %struct.bitmap_head_def** %depends_on_express to i8*, !dbg !9304
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !9304
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !9292, metadata !DIExpression()), !dbg !9300
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %depends_on_express, align 8, !dbg !9306
  %4 = bitcast i64* %elim_cost to i8*, !dbg !9307
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !9307
  %5 = bitcast %union.tree_node*** %control_var to i8*, !dbg !9308
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !9308
  %6 = bitcast %union.tree_node*** %bound_cst to i8*, !dbg !9308
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8, !dbg !9308
  %iv = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 6, !dbg !9309
  %7 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !9309
  %tobool = icmp eq %struct.iv* %7, null, !dbg !9311
  br i1 %tobool, label %if.then, label %if.end, !dbg !9312

if.then:                                          ; preds = %entry
  tail call fastcc void @set_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i64 42949672970000000, %struct.bitmap_head_def* null, %union.tree_node* null) #7, !dbg !9313
  br label %cleanup, !dbg !9315

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node** %bound, metadata !9289, metadata !DIExpression(DW_OP_deref)), !dbg !9300
  %call = call fastcc zeroext i8 @may_eliminate_iv(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, %union.tree_node** nonnull %bound) #7, !dbg !9316
  %tobool1 = icmp eq i8 %call, 0, !dbg !9316
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !9318

if.then2:                                         ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** %bound, align 8, !dbg !9319
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !9289, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %depends_on_elim, metadata !9291, metadata !DIExpression(DW_OP_deref)), !dbg !9300
  %call3 = call fastcc i64 @force_var_cost(%struct.ivopts_data* %data, %union.tree_node* %8, %struct.bitmap_head_def** nonnull %depends_on_elim) #7, !dbg !9321
  store i64 %call3, i64* %elim_cost, align 8, !dbg !9321
  %cost4 = bitcast i64* %elim_cost to i32*, !dbg !9322
  %9 = trunc i64 %call3 to i32, !dbg !9323
  %div = sdiv i32 %9, 5, !dbg !9323
  store i32 %div, i32* %cost4, align 8, !dbg !9323
  br label %if.end5, !dbg !9324

if.else:                                          ; preds = %if.end
  store i64 42949672970000000, i64* %elim_cost, align 8, !dbg !9325
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !9326
  %10 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !9326
  call void @llvm.dbg.value(metadata %struct.iv** %cmp_iv, metadata !9290, metadata !DIExpression(DW_OP_deref)), !dbg !9300
  call void @llvm.dbg.value(metadata %union.tree_node*** %control_var, metadata !9298, metadata !DIExpression(DW_OP_deref)), !dbg !9300
  call void @llvm.dbg.value(metadata %union.tree_node*** %bound_cst, metadata !9299, metadata !DIExpression(DW_OP_deref)), !dbg !9300
  %call6 = call fastcc zeroext i8 @extract_cond_operands(%struct.ivopts_data* %data, %union.gimple_statement_d* %10, %union.tree_node*** nonnull %control_var, %union.tree_node*** nonnull %bound_cst, %struct.iv** null, %struct.iv** nonnull %cmp_iv) #7, !dbg !9327
  call void @llvm.dbg.value(metadata i8 %call6, metadata !9297, metadata !DIExpression()), !dbg !9300
  %tobool7 = icmp eq i8 %call6, 0, !dbg !9328
  br i1 %tobool7, label %cond.true, label %cond.end, !dbg !9328

cond.true:                                        ; preds = %if.end5
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 4119, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !9328
  br label %cond.end, !dbg !9328

cond.end:                                         ; preds = %if.end5, %cond.true
  %11 = load i64, i64* %elim_cost, align 8, !dbg !9329
  %call8 = call fastcc zeroext i8 @infinite_cost_p(i64 %11) #7, !dbg !9329
  %tobool9 = icmp eq i8 %call8, 0, !dbg !9329
  %12 = trunc i64 %11 to i32, !dbg !9331
  br i1 %tobool9, label %land.lhs.true, label %if.end19, !dbg !9331

land.lhs.true:                                    ; preds = %cond.end
  %13 = load %union.tree_node**, %union.tree_node*** %bound_cst, align 8, !dbg !9332
  call void @llvm.dbg.value(metadata %union.tree_node** %13, metadata !9299, metadata !DIExpression()), !dbg !9300
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !9333
  %call10 = call i32 @integer_zerop(%union.tree_node* %14) #6, !dbg !9334
  %tobool11 = icmp eq i32 %call10, 0, !dbg !9334
  br i1 %tobool11, label %if.end19, label %land.lhs.true12, !dbg !9335

land.lhs.true12:                                  ; preds = %land.lhs.true
  %15 = load %union.tree_node**, %union.tree_node*** %control_var, align 8, !dbg !9336
  call void @llvm.dbg.value(metadata %union.tree_node** %15, metadata !9298, metadata !DIExpression()), !dbg !9300
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !9337
  %var_after = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 5, !dbg !9338
  %17 = load %union.tree_node*, %union.tree_node** %var_after, align 8, !dbg !9338
  %call13 = call i32 @operand_equal_p(%union.tree_node* %16, %union.tree_node* %17, i32 0) #6, !dbg !9339
  %tobool14 = icmp eq i32 %call13, 0, !dbg !9339
  br i1 %tobool14, label %lor.lhs.false, label %if.then17, !dbg !9340

lor.lhs.false:                                    ; preds = %land.lhs.true12
  %18 = load %union.tree_node**, %union.tree_node*** %control_var, align 8, !dbg !9341
  call void @llvm.dbg.value(metadata %union.tree_node** %18, metadata !9298, metadata !DIExpression()), !dbg !9300
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !9342
  %var_before = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 4, !dbg !9343
  %20 = load %union.tree_node*, %union.tree_node** %var_before, align 8, !dbg !9343
  %call15 = call i32 @operand_equal_p(%union.tree_node* %19, %union.tree_node* %20, i32 0) #6, !dbg !9344
  %tobool16 = icmp eq i32 %call15, 0, !dbg !9344
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !9345

if.then17:                                        ; preds = %lor.lhs.false, %land.lhs.true12
  %cost18 = bitcast i64* %elim_cost to i32*, !dbg !9346
  %sub = add nsw i32 %12, -1, !dbg !9347
  store i32 %sub, i32* %cost18, align 8, !dbg !9347
  %.pre = load i64, i64* %elim_cost, align 8, !dbg !9348
  br label %if.end19, !dbg !9350

if.end19:                                         ; preds = %lor.lhs.false, %land.lhs.true, %cond.end, %if.then17
  %21 = phi i64 [ %11, %lor.lhs.false ], [ %11, %land.lhs.true ], [ %11, %cond.end ], [ %.pre, %if.then17 ], !dbg !9348
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %depends_on_express, metadata !9292, metadata !DIExpression(DW_OP_deref)), !dbg !9300
  %call21 = call fastcc i64 @get_computation_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i8 zeroext 0, %struct.bitmap_head_def** nonnull %depends_on_express, i8* null) #7, !dbg !9351
  store %struct.ivopts_data* %data, %struct.ivopts_data** @fd_ivopts_data, align 8, !dbg !9352
  %22 = load %struct.iv*, %struct.iv** %cmp_iv, align 8, !dbg !9353
  call void @llvm.dbg.value(metadata %struct.iv* %22, metadata !9290, metadata !DIExpression()), !dbg !9300
  %base = getelementptr inbounds %struct.iv, %struct.iv* %22, i64 0, i32 0, !dbg !9353
  %call22 = call %union.tree_node* @walk_tree_1(%union.tree_node** %base, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_depends, i8* nonnull %3, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !9353
  %call23 = call fastcc i32 @compare_costs(i64 %21, i64 %call21) #7, !dbg !9348
  %cmp = icmp slt i32 %call23, 1, !dbg !9354
  br i1 %cmp, label %if.then24, label %if.else25, !dbg !9355

if.then24:                                        ; preds = %if.end19
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on_elim, align 8, !dbg !9356
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %23, metadata !9291, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %23, metadata !9293, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !9291, metadata !DIExpression()), !dbg !9300
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %depends_on_elim, align 8, !dbg !9358
  %.pre5 = load %union.tree_node*, %union.tree_node** %bound, align 8, !dbg !9359
  br label %if.end26, !dbg !9360

if.else25:                                        ; preds = %if.end19
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on_express, align 8, !dbg !9361
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %24, metadata !9292, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %24, metadata !9293, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !9292, metadata !DIExpression()), !dbg !9300
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %depends_on_express, align 8, !dbg !9363
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9289, metadata !DIExpression()), !dbg !9300
  store %union.tree_node* null, %union.tree_node** %bound, align 8, !dbg !9364
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.then24
  %25 = phi i64 [ %21, %if.then24 ], [ %call21, %if.else25 ], !dbg !9365
  %26 = phi %union.tree_node* [ %.pre5, %if.then24 ], [ null, %if.else25 ], !dbg !9359
  %depends_on.0 = phi %struct.bitmap_head_def* [ %23, %if.then24 ], [ %24, %if.else25 ], !dbg !9366
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %depends_on.0, metadata !9293, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !9289, metadata !DIExpression()), !dbg !9300
  call fastcc void @set_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i64 %25, %struct.bitmap_head_def* %depends_on.0, %union.tree_node* %26) #7, !dbg !9365
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on_elim, align 8, !dbg !9367
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %27, metadata !9291, metadata !DIExpression()), !dbg !9300
  %tobool27 = icmp eq %struct.bitmap_head_def* %27, null, !dbg !9367
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !9369

if.then28:                                        ; preds = %if.end26
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %27, metadata !9291, metadata !DIExpression()), !dbg !9300
  call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %27) #6, !dbg !9370
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !9291, metadata !DIExpression()), !dbg !9300
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %depends_on_elim, align 8, !dbg !9370
  br label %if.end29, !dbg !9370

if.end29:                                         ; preds = %if.end26, %if.then28
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on_express, align 8, !dbg !9371
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %28, metadata !9292, metadata !DIExpression()), !dbg !9300
  %tobool30 = icmp eq %struct.bitmap_head_def* %28, null, !dbg !9371
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !9373

if.then31:                                        ; preds = %if.end29
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %28, metadata !9292, metadata !DIExpression()), !dbg !9300
  call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %28) #6, !dbg !9374
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !9292, metadata !DIExpression()), !dbg !9300
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %depends_on_express, align 8, !dbg !9374
  br label %if.end32, !dbg !9374

if.end32:                                         ; preds = %if.end29, %if.then31
  %call33 = call fastcc zeroext i8 @infinite_cost_p(i64 %25) #7, !dbg !9375
  %tobool34 = icmp eq i8 %call33, 0, !dbg !9376
  %conv = zext i1 %tobool34 to i8, !dbg !9376
  br label %cleanup, !dbg !9377

cleanup:                                          ; preds = %if.end32, %if.then
  %retval.0 = phi i8 [ %conv, %if.end32 ], [ 0, %if.then ], !dbg !9300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8, !dbg !9378
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !9378
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !9378
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !9378
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !9378
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9378
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9378
  ret i8 %retval.0, !dbg !9378
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, i64 %cost.coerce, %struct.bitmap_head_def* %depends_on, %union.tree_node* %value) unnamed_addr #5 !dbg !9379 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9383, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !9384, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !9385, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %depends_on, metadata !9387, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !9388, metadata !DIExpression()), !dbg !9392
  %call = tail call fastcc zeroext i8 @infinite_cost_p(i64 %cost.coerce) #7, !dbg !9393
  %tobool = icmp eq i8 %call, 0, !dbg !9393
  br i1 %tobool, label %if.end, label %if.then, !dbg !9395

if.then:                                          ; preds = %entry
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %depends_on) #6, !dbg !9396
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !9387, metadata !DIExpression()), !dbg !9392
  br label %cleanup.cont, !dbg !9398

if.end:                                           ; preds = %entry
  %consider_all_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 10, !dbg !9399
  %0 = load i8, i8* %consider_all_candidates, align 4, !dbg !9399
  %tobool1 = icmp eq i8 %0, 0, !dbg !9401
  br i1 %tobool1, label %if.end19, label %if.then2, !dbg !9402

if.then2:                                         ; preds = %if.end
  %cost_map = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 7, !dbg !9403
  %1 = load %struct.cost_pair*, %struct.cost_pair** %cost_map, align 8, !dbg !9403
  %id = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 0, !dbg !9405
  %2 = load i32, i32* %id, align 8, !dbg !9405
  %idxprom = zext i32 %2 to i64, !dbg !9406
  %cand3 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %1, i64 %idxprom, i32 0, !dbg !9407
  store %struct.iv_cand* %cand, %struct.iv_cand** %cand3, align 8, !dbg !9408
  %3 = load %struct.cost_pair*, %struct.cost_pair** %cost_map, align 8, !dbg !9409
  %4 = load i32, i32* %id, align 8, !dbg !9410
  %idxprom6 = zext i32 %4 to i64, !dbg !9411
  %cost8 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %3, i64 %idxprom6, i32 1, !dbg !9412
  %5 = bitcast %struct.comp_cost* %cost8 to i64*, !dbg !9413
  store i64 %cost.coerce, i64* %5, align 8, !dbg !9413
  %6 = load %struct.cost_pair*, %struct.cost_pair** %cost_map, align 8, !dbg !9414
  %7 = load i32, i32* %id, align 8, !dbg !9415
  %idxprom11 = zext i32 %7 to i64, !dbg !9416
  %depends_on13 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %6, i64 %idxprom11, i32 2, !dbg !9417
  store %struct.bitmap_head_def* %depends_on, %struct.bitmap_head_def** %depends_on13, align 8, !dbg !9418
  %8 = load %struct.cost_pair*, %struct.cost_pair** %cost_map, align 8, !dbg !9419
  %9 = load i32, i32* %id, align 8, !dbg !9420
  %idxprom16 = zext i32 %9 to i64, !dbg !9421
  %value18 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %8, i64 %idxprom16, i32 3, !dbg !9422
  store %union.tree_node* %value, %union.tree_node** %value18, align 8, !dbg !9423
  br label %cleanup.cont, !dbg !9424

if.end19:                                         ; preds = %if.end
  %id20 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 0, !dbg !9425
  %10 = load i32, i32* %id20, align 8, !dbg !9425
  %n_map_members = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 6, !dbg !9426
  %11 = load i32, i32* %n_map_members, align 8, !dbg !9426
  %sub = add i32 %11, -1, !dbg !9427
  %and = and i32 %10, %sub, !dbg !9428
  call void @llvm.dbg.value(metadata i32 %and, metadata !9390, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata i32 %and, metadata !9389, metadata !DIExpression()), !dbg !9392
  %cost_map22 = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 7, !dbg !9429
  br label %for.cond, !dbg !9433

for.cond:                                         ; preds = %for.inc, %if.end19
  %i.0 = phi i32 [ %and, %if.end19 ], [ %inc, %for.inc ], !dbg !9434
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9389, metadata !DIExpression()), !dbg !9392
  %cmp = icmp ult i32 %i.0, %11, !dbg !9435
  br i1 %cmp, label %for.body, label %for.cond29.preheader, !dbg !9436

for.cond29.preheader:                             ; preds = %for.cond
  br label %for.cond29, !dbg !9437

for.body:                                         ; preds = %for.cond
  %12 = load %struct.cost_pair*, %struct.cost_pair** %cost_map22, align 8, !dbg !9439
  %idxprom23 = zext i32 %i.0 to i64, !dbg !9440
  %cand25 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %12, i64 %idxprom23, i32 0, !dbg !9441
  %13 = load %struct.iv_cand*, %struct.iv_cand** %cand25, align 8, !dbg !9441
  %tobool26 = icmp eq %struct.iv_cand* %13, null, !dbg !9440
  br i1 %tobool26, label %found.loopexit1, label %for.inc, !dbg !9442

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !9443
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9389, metadata !DIExpression()), !dbg !9392
  br label %for.cond, !dbg !9444, !llvm.loop !9445

for.cond29:                                       ; preds = %for.cond29.preheader, %for.inc39
  %i.1 = phi i32 [ %inc40, %for.inc39 ], [ 0, %for.cond29.preheader ], !dbg !9447
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !9389, metadata !DIExpression()), !dbg !9392
  %exitcond = icmp eq i32 %i.1, %and, !dbg !9448
  br i1 %exitcond, label %for.end41, label %for.body31, !dbg !9437

for.body31:                                       ; preds = %for.cond29
  %14 = load %struct.cost_pair*, %struct.cost_pair** %cost_map22, align 8, !dbg !9450
  %idxprom33 = zext i32 %i.1 to i64, !dbg !9452
  %cand35 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %14, i64 %idxprom33, i32 0, !dbg !9453
  %15 = load %struct.iv_cand*, %struct.iv_cand** %cand35, align 8, !dbg !9453
  %tobool36 = icmp eq %struct.iv_cand* %15, null, !dbg !9452
  br i1 %tobool36, label %found.loopexit, label %for.inc39, !dbg !9454

for.inc39:                                        ; preds = %for.body31
  %inc40 = add i32 %i.1, 1, !dbg !9455
  call void @llvm.dbg.value(metadata i32 %inc40, metadata !9389, metadata !DIExpression()), !dbg !9392
  br label %for.cond29, !dbg !9456, !llvm.loop !9457

for.end41:                                        ; preds = %for.cond29
  %i.1.lcssa = phi i32 [ %i.1, %for.cond29 ], !dbg !9447
  call void @llvm.dbg.value(metadata i32 %i.1.lcssa, metadata !9389, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata i32 %i.1.lcssa, metadata !9389, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata i32 %i.1.lcssa, metadata !9389, metadata !DIExpression()), !dbg !9392
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 2585, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !9459
  %.pre = load %struct.cost_pair*, %struct.cost_pair** %cost_map22, align 8, !dbg !9460
  %.pre4 = zext i32 %i.1.lcssa to i64, !dbg !9461
  br label %found, !dbg !9459

found.loopexit:                                   ; preds = %for.body31
  %.lcssa = phi %struct.cost_pair* [ %14, %for.body31 ], !dbg !9450
  %idxprom33.lcssa = phi i64 [ %idxprom33, %for.body31 ], !dbg !9452
  br label %found, !dbg !9460

found.loopexit1:                                  ; preds = %for.body
  %.lcssa8 = phi %struct.cost_pair* [ %12, %for.body ], !dbg !9439
  %idxprom23.lcssa = phi i64 [ %idxprom23, %for.body ], !dbg !9440
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9389, metadata !DIExpression()), !dbg !9392
  br label %found, !dbg !9460

found:                                            ; preds = %found.loopexit1, %found.loopexit, %for.end41
  %idxprom43.pre-phi = phi i64 [ %idxprom23.lcssa, %found.loopexit1 ], [ %idxprom33.lcssa, %found.loopexit ], [ %.pre4, %for.end41 ], !dbg !9461
  %16 = phi %struct.cost_pair* [ %.lcssa8, %found.loopexit1 ], [ %.lcssa, %found.loopexit ], [ %.pre, %for.end41 ], !dbg !9460
  call void @llvm.dbg.label(metadata !9391), !dbg !9462
  %cand45 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %16, i64 %idxprom43.pre-phi, i32 0, !dbg !9463
  store %struct.iv_cand* %cand, %struct.iv_cand** %cand45, align 8, !dbg !9464
  %17 = load %struct.cost_pair*, %struct.cost_pair** %cost_map22, align 8, !dbg !9465
  %cost49 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %17, i64 %idxprom43.pre-phi, i32 1, !dbg !9466
  %18 = bitcast %struct.comp_cost* %cost49 to i64*, !dbg !9467
  store i64 %cost.coerce, i64* %18, align 8, !dbg !9467
  %19 = load %struct.cost_pair*, %struct.cost_pair** %cost_map22, align 8, !dbg !9468
  %depends_on53 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %19, i64 %idxprom43.pre-phi, i32 2, !dbg !9469
  store %struct.bitmap_head_def* %depends_on, %struct.bitmap_head_def** %depends_on53, align 8, !dbg !9470
  %20 = load %struct.cost_pair*, %struct.cost_pair** %cost_map22, align 8, !dbg !9471
  %value57 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %20, i64 %idxprom43.pre-phi, i32 3, !dbg !9472
  store %union.tree_node* %value, %union.tree_node** %value57, align 8, !dbg !9473
  br label %cleanup.cont, !dbg !9474

cleanup.cont:                                     ; preds = %if.then, %if.then2, %found
  ret void, !dbg !9474
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @may_eliminate_iv(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand, %union.tree_node** %bound) unnamed_addr #5 !dbg !9475 {
entry:
  %bnd = alloca %struct.affine_tree_combination, align 8
  %period_value = alloca %struct.double_int, align 8
  %max_niter = alloca %struct.double_int, align 8
  %tmp = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9479, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !9480, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !9481, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.value(metadata %union.tree_node** %bound, metadata !9482, metadata !DIExpression()), !dbg !9494
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !9495
  %0 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !9495
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !9487, metadata !DIExpression()), !dbg !9494
  %1 = bitcast %struct.affine_tree_combination* %bnd to i8*, !dbg !9496
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %1) #8, !dbg !9496
  %iv = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 6, !dbg !9497
  %2 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !9497
  %step = getelementptr inbounds %struct.iv, %struct.iv* %2, i64 0, i32 2, !dbg !9497
  %3 = bitcast %union.tree_node** %step to i64**, !dbg !9497
  %4 = load i64*, i64** %3, align 8, !dbg !9497
  %bf.load = load i64, i64* %4, align 8, !dbg !9497
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !9499
  %cmp = icmp eq i64 %bf.cast3, 23, !dbg !9499
  br i1 %cmp, label %if.end, label %cleanup71, !dbg !9500

if.end:                                           ; preds = %entry
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !9501
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !9501
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %5) #7, !dbg !9502
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !9483, metadata !DIExpression()), !dbg !9494
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !9503
  %call2 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %call) #6, !dbg !9505
  %cmp3 = icmp eq %union.gimple_statement_d* %6, %call2, !dbg !9506
  br i1 %cmp3, label %lor.lhs.false, label %cleanup71, !dbg !9507

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !9508
  %call5 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %7) #7, !dbg !9509
  %cmp6 = icmp eq i32 %call5, 1, !dbg !9510
  br i1 %cmp6, label %lor.lhs.false7, label %cleanup71, !dbg !9511

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %0, i64 0, i32 3, !dbg !9512
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !9512
  %call8 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %8, %struct.basic_block_def* %call) #6, !dbg !9513
  %tobool = icmp eq i8 %call8, 0, !dbg !9513
  br i1 %tobool, label %cleanup71, label %if.end10, !dbg !9514

if.end10:                                         ; preds = %lor.lhs.false7
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 1, !dbg !9515
  %9 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !9515
  %tobool11 = icmp eq %struct.VEC_edge_gc* %9, null, !dbg !9515
  br i1 %tobool11, label %cond.end, label %cond.true, !dbg !9515

cond.true:                                        ; preds = %if.end10
  %base13 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %9, i64 0, i32 0, !dbg !9515
  br label %cond.end, !dbg !9515

cond.end:                                         ; preds = %if.end10, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base13, %cond.true ], [ null, %if.end10 ], !dbg !9515
  %call14 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #7, !dbg !9515
  call void @llvm.dbg.value(metadata %struct.edge_def* %call14, metadata !9484, metadata !DIExpression()), !dbg !9494
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call14, i64 0, i32 1, !dbg !9516
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !9516
  %call15 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %0, %struct.basic_block_def* %10) #6, !dbg !9518
  %tobool16 = icmp eq i8 %call15, 0, !dbg !9518
  br i1 %tobool16, label %if.end27, label %if.then17, !dbg !9519

if.then17:                                        ; preds = %cond.end
  %11 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !9520
  %tobool19 = icmp eq %struct.VEC_edge_gc* %11, null, !dbg !9520
  br i1 %tobool19, label %cond.end24, label %cond.true20, !dbg !9520

cond.true20:                                      ; preds = %if.then17
  %base22 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %11, i64 0, i32 0, !dbg !9520
  br label %cond.end24, !dbg !9520

cond.end24:                                       ; preds = %if.then17, %cond.true20
  %cond25 = phi %struct.VEC_edge_base* [ %base22, %cond.true20 ], [ null, %if.then17 ], !dbg !9520
  %call26 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond25, i32 1) #7, !dbg !9520
  call void @llvm.dbg.value(metadata %struct.edge_def* %call26, metadata !9484, metadata !DIExpression()), !dbg !9494
  br label %if.end27, !dbg !9521

if.end27:                                         ; preds = %cond.end, %cond.end24
  %exit.0 = phi %struct.edge_def* [ %call26, %cond.end24 ], [ %call14, %cond.end ], !dbg !9494
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit.0, metadata !9484, metadata !DIExpression()), !dbg !9494
  %dest28 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit.0, i64 0, i32 1, !dbg !9522
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest28, align 8, !dbg !9522
  %call29 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %0, %struct.basic_block_def* %12) #6, !dbg !9524
  %tobool30 = icmp eq i8 %call29, 0, !dbg !9524
  br i1 %tobool30, label %if.end32, label %cleanup71, !dbg !9525

if.end32:                                         ; preds = %if.end27
  %call33 = tail call fastcc %union.tree_node* @niter_for_exit(%struct.ivopts_data* %data, %struct.edge_def* %exit.0) #7, !dbg !9526
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !9485, metadata !DIExpression()), !dbg !9494
  %tobool34 = icmp eq %union.tree_node* %call33, null, !dbg !9527
  br i1 %tobool34, label %cleanup71, label %if.end36, !dbg !9529

if.end36:                                         ; preds = %if.end32
  %13 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !9530
  %call38 = tail call fastcc %union.tree_node* @iv_period(%struct.iv* %13) #7, !dbg !9531
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !9486, metadata !DIExpression()), !dbg !9494
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9532
  %bf.load40 = load i64, i64* %14, align 8, !dbg !9532
  %bf.cast424 = and i64 %bf.load40, 65535, !dbg !9533
  %cmp43 = icmp eq i64 %bf.cast424, 23, !dbg !9533
  br i1 %cmp43, label %if.then44, label %if.else, !dbg !9534

if.then44:                                        ; preds = %if.end36
  %call45 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %call33, %union.tree_node* %call38) #6, !dbg !9535
  %tobool46 = icmp eq i32 %call45, 0, !dbg !9535
  br i1 %tobool46, label %cleanup71, label %if.end64, !dbg !9538

if.else:                                          ; preds = %if.end36
  %call49 = tail call zeroext i8 @loop_only_exit_p(%struct.loop* %0, %struct.edge_def* %exit.0) #6, !dbg !9539
  %tobool50 = icmp eq i8 %call49, 0, !dbg !9539
  br i1 %tobool50, label %cleanup71, label %if.then51, !dbg !9540

if.then51:                                        ; preds = %if.else
  %15 = bitcast %struct.double_int* %period_value to i8*, !dbg !9541
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8, !dbg !9541
  %16 = bitcast %struct.double_int* %max_niter to i8*, !dbg !9541
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8, !dbg !9541
  call void @llvm.dbg.value(metadata %struct.double_int* %max_niter, metadata !9493, metadata !DIExpression(DW_OP_deref)), !dbg !9542
  %call52 = call zeroext i8 @estimated_loop_iterations(%struct.loop* %0, i8 zeroext 1, %struct.double_int* nonnull %max_niter) #6, !dbg !9543
  %tobool53 = icmp eq i8 %call52, 0, !dbg !9543
  br i1 %tobool53, label %cleanup, label %if.end55, !dbg !9545

if.end55:                                         ; preds = %if.then51
  %17 = bitcast %struct.double_int* %tmp to i8*, !dbg !9546
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #8, !dbg !9546
  %call56 = call { i64, i64 } @tree_to_double_int(%union.tree_node* %call38) #6, !dbg !9546
  %18 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 0, !dbg !9546
  %19 = extractvalue { i64, i64 } %call56, 0, !dbg !9546
  store i64 %19, i64* %18, align 8, !dbg !9546
  %20 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 1, !dbg !9546
  %21 = extractvalue { i64, i64 } %call56, 1, !dbg !9546
  store i64 %21, i64* %20, align 8, !dbg !9546
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %17, i64 16, i1 false), !dbg !9546
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #8, !dbg !9546
  %22 = getelementptr inbounds %struct.double_int, %struct.double_int* %max_niter, i64 0, i32 0, !dbg !9547
  %23 = load i64, i64* %22, align 8, !dbg !9547
  %24 = getelementptr inbounds %struct.double_int, %struct.double_int* %max_niter, i64 0, i32 1, !dbg !9547
  %25 = load i64, i64* %24, align 8, !dbg !9547
  %26 = getelementptr inbounds %struct.double_int, %struct.double_int* %period_value, i64 0, i32 0, !dbg !9547
  %27 = load i64, i64* %26, align 8, !dbg !9547
  %28 = getelementptr inbounds %struct.double_int, %struct.double_int* %period_value, i64 0, i32 1, !dbg !9547
  %29 = load i64, i64* %28, align 8, !dbg !9547
  %call57 = call i32 @double_int_ucmp(i64 %23, i64 %25, i64 %27, i64 %29) #6, !dbg !9547
  %cmp58 = icmp slt i32 %call57, 0, !dbg !9549
  br label %cleanup, !dbg !9550

cleanup:                                          ; preds = %if.then51, %if.end55
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then51 ], [ %cmp58, %if.end55 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8, !dbg !9551
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8, !dbg !9551
  br i1 %cleanup.dest.slot.0, label %if.end64, label %cleanup71

if.end64:                                         ; preds = %if.then44, %cleanup
  %30 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !9552
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %bnd, metadata !9488, metadata !DIExpression(DW_OP_deref)), !dbg !9494
  call fastcc void @cand_value_at(%struct.loop* %0, %struct.iv_cand* %cand, %union.gimple_statement_d* %30, %union.tree_node* nonnull %call33, %struct.affine_tree_combination* nonnull %bnd) #7, !dbg !9553
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %bnd, metadata !9488, metadata !DIExpression(DW_OP_deref)), !dbg !9494
  %call66 = call %union.tree_node* @aff_combination_to_tree(%struct.affine_tree_combination* nonnull %bnd) #6, !dbg !9554
  store %union.tree_node* %call66, %union.tree_node** %bound, align 8, !dbg !9555
  %call67 = call zeroext i8 @expression_expensive_p(%union.tree_node* %call66) #6, !dbg !9556
  %tobool68 = icmp eq i8 %call67, 0, !dbg !9556
  %.2 = zext i1 %tobool68 to i8, !dbg !9494
  br label %cleanup71, !dbg !9494

cleanup71:                                        ; preds = %if.then44, %if.else, %if.end32, %if.end27, %lor.lhs.false7, %lor.lhs.false, %if.end, %entry, %if.end64, %cleanup
  %retval.1 = phi i8 [ 0, %cleanup ], [ 0, %entry ], [ 0, %lor.lhs.false7 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %if.end27 ], [ 0, %if.end32 ], [ 0, %if.then44 ], [ 0, %if.else ], [ %.2, %if.end64 ], !dbg !9494
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %1) #8, !dbg !9558
  ret i8 %retval.1, !dbg !9558
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @compare_costs(i64 %cost1.coerce, i64 %cost2.coerce) unnamed_addr #5 !dbg !9559 {
entry:
  %0 = trunc i64 %cost1.coerce to i32, !dbg !9565
  %1 = trunc i64 %cost2.coerce to i32, !dbg !9567
  %cmp = icmp eq i32 %0, %1, !dbg !9568
  br i1 %cmp, label %if.then, label %if.end, !dbg !9569

if.then:                                          ; preds = %entry
  %2 = lshr i64 %cost2.coerce, 32, !dbg !9569
  %3 = trunc i64 %2 to i32, !dbg !9569
  %4 = lshr i64 %cost1.coerce, 32, !dbg !9569
  %5 = trunc i64 %4 to i32, !dbg !9569
  %sub = sub i32 %5, %3, !dbg !9570
  br label %return, !dbg !9571

if.end:                                           ; preds = %entry
  %sub7 = sub nsw i32 %0, %1, !dbg !9572
  br label %return, !dbg !9573

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %sub7, %if.end ], !dbg !9574
  ret i32 %retval.0, !dbg !9575
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @iv_period(%struct.iv* %iv) unnamed_addr #5 !dbg !9576 {
entry:
  call void @llvm.dbg.value(metadata %struct.iv* %iv, metadata !9580, metadata !DIExpression()), !dbg !9585
  %step1 = getelementptr inbounds %struct.iv, %struct.iv* %iv, i64 0, i32 2, !dbg !9586
  %0 = load %union.tree_node*, %union.tree_node** %step1, align 8, !dbg !9586
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9581, metadata !DIExpression()), !dbg !9585
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !9587
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !9587

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9587
  %bf.load = load i64, i64* %1, align 8, !dbg !9587
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9587
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !9587
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !9587

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 3979, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !9587
  br label %cond.end, !dbg !9587

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call = tail call %union.tree_node* @num_ending_zeros(%union.tree_node* %0) #6, !dbg !9588
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9584, metadata !DIExpression()), !dbg !9585
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9589
  %2 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !9589
  %call3 = tail call %union.tree_node* @unsigned_type_for(%union.tree_node* %2) #6, !dbg !9590
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !9583, metadata !DIExpression()), !dbg !9585
  %type4 = bitcast %union.tree_node* %call3 to %struct.tree_type*, !dbg !9591
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type4, i64 0, i32 6, !dbg !9591
  %bf.load5 = load i32, i32* %precision, align 4, !dbg !9591
  %bf.clear6 = and i32 %bf.load5, 1023, !dbg !9591
  %call7 = tail call i64 @tree_low_cst(%union.tree_node* %call, i32 1) #6, !dbg !9592
  %3 = trunc i64 %call7 to i32, !dbg !9593
  %conv8 = sub i32 %bf.clear6, %3, !dbg !9593
  %call9 = tail call %union.tree_node* @build_low_bits_mask(%union.tree_node* %call3, i32 %conv8) #6, !dbg !9594
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !9582, metadata !DIExpression()), !dbg !9585
  ret %union.tree_node* %call9, !dbg !9595
}

declare dso_local i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @loop_only_exit_p(%struct.loop*, %struct.edge_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @estimated_loop_iterations(%struct.loop*, i8 zeroext, %struct.double_int*) local_unnamed_addr #2

declare dso_local i32 @double_int_ucmp(i64, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @cand_value_at(%struct.loop* %loop, %struct.iv_cand* %cand, %union.gimple_statement_d* %at, %union.tree_node* %niter, %struct.affine_tree_combination* %val) unnamed_addr #5 !dbg !9596 {
entry:
  %step = alloca %struct.affine_tree_combination, align 8
  %delta = alloca %struct.affine_tree_combination, align 8
  %nit = alloca %struct.affine_tree_combination, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !9601, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !9602, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %at, metadata !9603, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata %union.tree_node* %niter, metadata !9604, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %val, metadata !9605, metadata !DIExpression()), !dbg !9612
  %0 = bitcast %struct.affine_tree_combination* %step to i8*, !dbg !9613
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %0) #8, !dbg !9613
  %1 = bitcast %struct.affine_tree_combination* %delta to i8*, !dbg !9613
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %1) #8, !dbg !9613
  %2 = bitcast %struct.affine_tree_combination* %nit to i8*, !dbg !9613
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %2) #8, !dbg !9613
  %iv1 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 6, !dbg !9614
  %3 = load %struct.iv*, %struct.iv** %iv1, align 8, !dbg !9614
  call void @llvm.dbg.value(metadata %struct.iv* %3, metadata !9609, metadata !DIExpression()), !dbg !9612
  %4 = bitcast %struct.iv* %3 to %struct.tree_common**, !dbg !9615
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !9615
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !9615
  %6 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !9615
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !9610, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !9611, metadata !DIExpression()), !dbg !9612
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9616
  %bf.load = load i64, i64* %7, align 8, !dbg !9616
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9616
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !9616
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9616

lor.lhs.false:                                    ; preds = %entry
  %cmp8 = icmp eq i64 %bf.cast1, 12, !dbg !9616
  br i1 %cmp8, label %if.then, label %if.end, !dbg !9618

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !9619
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !9611, metadata !DIExpression()), !dbg !9612
  br label %if.end, !dbg !9620

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %steptype.0 = phi %union.tree_node* [ %8, %if.then ], [ %6, %lor.lhs.false ], !dbg !9612
  call void @llvm.dbg.value(metadata %union.tree_node* %steptype.0, metadata !9611, metadata !DIExpression()), !dbg !9612
  %step9 = getelementptr inbounds %struct.iv, %struct.iv* %3, i64 0, i32 2, !dbg !9621
  %9 = load %union.tree_node*, %union.tree_node** %step9, align 8, !dbg !9621
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %step, metadata !9606, metadata !DIExpression(DW_OP_deref)), !dbg !9612
  call void @tree_to_aff_combination(%union.tree_node* %9, %union.tree_node* %steptype.0, %struct.affine_tree_combination* nonnull %step) #6, !dbg !9622
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %niter, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9623
  %10 = load %union.tree_node*, %union.tree_node** %type11, align 8, !dbg !9623
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %nit, metadata !9608, metadata !DIExpression(DW_OP_deref)), !dbg !9612
  call void @tree_to_aff_combination(%union.tree_node* %niter, %union.tree_node* %10, %struct.affine_tree_combination* nonnull %nit) #6, !dbg !9624
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %nit, metadata !9608, metadata !DIExpression(DW_OP_deref)), !dbg !9612
  call void @aff_combination_convert(%struct.affine_tree_combination* nonnull %nit, %union.tree_node* %steptype.0) #6, !dbg !9625
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %step, metadata !9606, metadata !DIExpression(DW_OP_deref)), !dbg !9612
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %delta, metadata !9607, metadata !DIExpression(DW_OP_deref)), !dbg !9612
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %nit, metadata !9608, metadata !DIExpression(DW_OP_deref)), !dbg !9612
  call void @aff_combination_mult(%struct.affine_tree_combination* nonnull %nit, %struct.affine_tree_combination* nonnull %step, %struct.affine_tree_combination* nonnull %delta) #6, !dbg !9626
  %call = call fastcc zeroext i8 @stmt_after_increment(%struct.loop* %loop, %struct.iv_cand* %cand, %union.gimple_statement_d* %at) #7, !dbg !9627
  %tobool = icmp eq i8 %call, 0, !dbg !9627
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !9629

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %step, metadata !9606, metadata !DIExpression(DW_OP_deref)), !dbg !9612
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %delta, metadata !9607, metadata !DIExpression(DW_OP_deref)), !dbg !9612
  call void @aff_combination_add(%struct.affine_tree_combination* nonnull %delta, %struct.affine_tree_combination* nonnull %step) #6, !dbg !9630
  br label %if.end13, !dbg !9630

if.end13:                                         ; preds = %if.end, %if.then12
  %base14 = getelementptr inbounds %struct.iv, %struct.iv* %3, i64 0, i32 0, !dbg !9631
  %11 = load %union.tree_node*, %union.tree_node** %base14, align 8, !dbg !9631
  call void @tree_to_aff_combination(%union.tree_node* %11, %union.tree_node* %6, %struct.affine_tree_combination* %val) #6, !dbg !9632
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %delta, metadata !9607, metadata !DIExpression(DW_OP_deref)), !dbg !9612
  call void @aff_combination_add(%struct.affine_tree_combination* %val, %struct.affine_tree_combination* nonnull %delta) #6, !dbg !9633
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %2) #8, !dbg !9634
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %1) #8, !dbg !9634
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %0) #8, !dbg !9634
  ret void, !dbg !9634
}

declare dso_local zeroext i8 @expression_expensive_p(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @num_ending_zeros(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_low_bits_mask(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @aff_combination_mult(%struct.affine_tree_combination*, %struct.affine_tree_combination*, %struct.affine_tree_combination*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @ivopts_global_cost_for_size(%struct.ivopts_data* %data, i32 %size) unnamed_addr #5 !dbg !9635 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9639, metadata !DIExpression()), !dbg !9641
  call void @llvm.dbg.value(metadata i32 %size, metadata !9640, metadata !DIExpression()), !dbg !9641
  %regs_used = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 2, !dbg !9642
  %0 = load i32, i32* %regs_used, align 8, !dbg !9642
  %speed = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 11, !dbg !9643
  %1 = load i8, i8* %speed, align 1, !dbg !9643
  %call = tail call i32 @estimate_reg_pressure_cost(i32 %size, i32 %0, i8 zeroext %1) #6, !dbg !9644
  %add = add i32 %call, %size, !dbg !9645
  ret i32 %add, !dbg !9646
}

declare dso_local i32 @estimate_reg_pressure_cost(i32, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.iv_ca* @get_initial_solution(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !9647 {
entry:
  %ivs = alloca %struct.iv_ca*, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9649, metadata !DIExpression()), !dbg !9652
  %0 = bitcast %struct.iv_ca** %ivs to i8*, !dbg !9653
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9653
  %call = tail call fastcc %struct.iv_ca* @iv_ca_new(%struct.ivopts_data* %data) #7, !dbg !9654
  call void @llvm.dbg.value(metadata %struct.iv_ca* %call, metadata !9650, metadata !DIExpression()), !dbg !9652
  store %struct.iv_ca* %call, %struct.iv_ca** %ivs, align 8, !dbg !9655
  call void @llvm.dbg.value(metadata i32 0, metadata !9651, metadata !DIExpression()), !dbg !9652
  br label %for.cond, !dbg !9656

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !9658
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9651, metadata !DIExpression()), !dbg !9652
  %call1 = tail call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !9659
  %cmp = icmp ult i32 %i.0, %call1, !dbg !9661
  call void @llvm.dbg.value(metadata %struct.iv_ca* %call, metadata !9650, metadata !DIExpression()), !dbg !9652
  br i1 %cmp, label %for.body, label %cleanup.loopexit, !dbg !9662

for.body:                                         ; preds = %for.cond
  %call2 = tail call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !9663
  %call3 = tail call fastcc zeroext i8 @try_add_cand_for(%struct.ivopts_data* %data, %struct.iv_ca* %call, %struct.iv_use* %call2) #7, !dbg !9665
  %tobool = icmp eq i8 %call3, 0, !dbg !9665
  br i1 %tobool, label %if.then, label %for.inc, !dbg !9666

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.iv_ca** %ivs, metadata !9650, metadata !DIExpression(DW_OP_deref)), !dbg !9652
  call fastcc void @iv_ca_free(%struct.iv_ca** nonnull %ivs) #7, !dbg !9667
  br label %cleanup, !dbg !9669

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !9670
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9651, metadata !DIExpression()), !dbg !9652
  br label %for.cond, !dbg !9671, !llvm.loop !9672

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !9674

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi %struct.iv_ca* [ null, %if.then ], [ %call, %cleanup.loopexit ], !dbg !9652
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9674
  ret %struct.iv_ca* %retval.0, !dbg !9674
}

; Function Attrs: nounwind uwtable
define internal fastcc void @iv_ca_dump(%struct.ivopts_data* %data, %struct._IO_FILE* %file, %struct.iv_ca* %ivs) unnamed_addr #5 !dbg !9675 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9679, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !9680, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !9681, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i64 0, i64 0), metadata !9682, metadata !DIExpression()), !dbg !9685
  %call = tail call fastcc i64 @iv_ca_cost(%struct.iv_ca* %ivs) #7, !dbg !9686
  %0 = trunc i64 %call to i32, !dbg !9687
  %1 = lshr i64 %call, 32, !dbg !9688
  %2 = trunc i64 %1 to i32, !dbg !9688
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.83, i64 0, i64 0), i32 %0, i32 %2) #6, !dbg !9689
  %cands = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 4, !dbg !9690
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cands, align 8, !dbg !9690
  tail call void @bitmap_print(%struct._IO_FILE* %file, %struct.bitmap_head_def* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9691
  call void @llvm.dbg.value(metadata i32 1, metadata !9683, metadata !DIExpression()), !dbg !9685
  %max_inv_id = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 9, !dbg !9692
  %n_invariant_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 9, !dbg !9695
  br label %for.cond, !dbg !9697

for.cond:                                         ; preds = %for.inc, %entry
  %pref.0 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i64 0, i64 0), %entry ], [ %pref.1, %for.inc ], !dbg !9685
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !9698
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9683, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.value(metadata i8* %pref.0, metadata !9682, metadata !DIExpression()), !dbg !9685
  %4 = load i32, i32* %max_inv_id, align 8, !dbg !9699
  %cmp = icmp ugt i32 %i.0, %4, !dbg !9700
  br i1 %cmp, label %for.end, label %for.body, !dbg !9701

for.body:                                         ; preds = %for.cond
  %5 = load i32*, i32** %n_invariant_uses, align 8, !dbg !9702
  %idxprom = zext i32 %i.0 to i64, !dbg !9703
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !9703
  %6 = load i32, i32* %arrayidx, align 4, !dbg !9703
  %tobool = icmp eq i32 %6, 0, !dbg !9703
  br i1 %tobool, label %for.inc, label %if.then, !dbg !9704

if.then:                                          ; preds = %for.body
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i64 0, i64 0), i8* %pref.0, i32 %i.0) #6, !dbg !9705
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i64 0, i64 0), metadata !9682, metadata !DIExpression()), !dbg !9685
  br label %for.inc, !dbg !9707

for.inc:                                          ; preds = %for.body, %if.then
  %pref.1 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i64 0, i64 0), %if.then ], [ %pref.0, %for.body ], !dbg !9685
  call void @llvm.dbg.value(metadata i8* %pref.1, metadata !9682, metadata !DIExpression()), !dbg !9685
  %inc = add i32 %i.0, 1, !dbg !9708
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9683, metadata !DIExpression()), !dbg !9685
  br label %for.cond, !dbg !9709, !llvm.loop !9710

for.end:                                          ; preds = %for.cond
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9712
  ret void, !dbg !9713
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_improve_iv_set(%struct.ivopts_data* %data, %struct.iv_ca* %ivs) unnamed_addr #5 !dbg !9714 {
entry:
  %n_ivs = alloca i32, align 4
  %best_delta = alloca %struct.iv_ca_delta*, align 8
  %act_delta = alloca %struct.iv_ca_delta*, align 8
  %tmp_delta = alloca %struct.iv_ca_delta*, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9718, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !9719, metadata !DIExpression()), !dbg !9728
  %0 = bitcast i32* %n_ivs to i8*, !dbg !9729
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9729
  %call = tail call fastcc i64 @iv_ca_cost(%struct.iv_ca* %ivs) #7, !dbg !9730
  %1 = bitcast %struct.iv_ca_delta** %best_delta to i8*, !dbg !9731
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9731
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* null, metadata !9724, metadata !DIExpression()), !dbg !9728
  store %struct.iv_ca_delta* null, %struct.iv_ca_delta** %best_delta, align 8, !dbg !9732
  %2 = bitcast %struct.iv_ca_delta** %act_delta to i8*, !dbg !9731
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !9731
  %3 = bitcast %struct.iv_ca_delta** %tmp_delta to i8*, !dbg !9731
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !9731
  call void @llvm.dbg.value(metadata i32 0, metadata !9720, metadata !DIExpression()), !dbg !9728
  %4 = bitcast %struct.iv_ca_delta** %act_delta to i64*, !dbg !9733
  %5 = bitcast %struct.iv_ca_delta** %best_delta to i64*, !dbg !9733
  br label %for.cond, !dbg !9739

for.cond:                                         ; preds = %for.inc, %entry
  %call1159 = phi i64 [ %call, %entry ], [ %call1158, %for.inc ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !9740
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9720, metadata !DIExpression()), !dbg !9728
  %call1 = call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !9741
  %cmp = icmp ult i32 %i.0, %call1, !dbg !9742
  br i1 %cmp, label %for.body, label %for.end, !dbg !9743

for.body:                                         ; preds = %for.cond
  %call2 = call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !9744
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call2, metadata !9727, metadata !DIExpression()), !dbg !9728
  %call3 = call fastcc zeroext i8 @iv_ca_cand_used_p(%struct.iv_ca* %ivs, %struct.iv_cand* %call2) #7, !dbg !9745
  %tobool = icmp eq i8 %call3, 0, !dbg !9745
  br i1 %tobool, label %if.end, label %for.inc, !dbg !9747

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata i32* %n_ivs, metadata !9721, metadata !DIExpression(DW_OP_deref)), !dbg !9728
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %act_delta, metadata !9725, metadata !DIExpression(DW_OP_deref)), !dbg !9728
  %call4 = call fastcc i64 @iv_ca_extend(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_cand* %call2, %struct.iv_ca_delta** nonnull %act_delta, i32* nonnull %n_ivs) #7, !dbg !9748
  %6 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %act_delta, align 8, !dbg !9749
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %6, metadata !9725, metadata !DIExpression()), !dbg !9728
  %tobool5 = icmp eq %struct.iv_ca_delta* %6, null, !dbg !9749
  br i1 %tobool5, label %for.inc, label %if.end7, !dbg !9751

if.end7:                                          ; preds = %if.end
  %7 = load i32, i32* %n_ivs, align 4, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %7, metadata !9721, metadata !DIExpression()), !dbg !9728
  %8 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !9754
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %8, i64 62, i32 1, !dbg !9754
  %9 = load i32, i32* %value, align 8, !dbg !9754
  %cmp8 = icmp ugt i32 %7, %9, !dbg !9755
  br i1 %cmp8, label %if.end13, label %if.then9, !dbg !9756

if.then9:                                         ; preds = %if.end7
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %6, metadata !9725, metadata !DIExpression()), !dbg !9728
  call fastcc void @iv_ca_delta_commit(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_ca_delta* nonnull %6, i8 zeroext 1) #7, !dbg !9757
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %tmp_delta, metadata !9726, metadata !DIExpression(DW_OP_deref)), !dbg !9728
  %call11 = call fastcc i64 @iv_ca_prune(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_cand* %call2, %struct.iv_ca_delta** nonnull %tmp_delta) #7, !dbg !9759
  %10 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %act_delta, align 8, !dbg !9760
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %10, metadata !9725, metadata !DIExpression()), !dbg !9728
  call fastcc void @iv_ca_delta_commit(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_ca_delta* %10, i8 zeroext 0) #7, !dbg !9761
  %11 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %act_delta, align 8, !dbg !9762
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %11, metadata !9725, metadata !DIExpression()), !dbg !9728
  %12 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %tmp_delta, align 8, !dbg !9763
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %12, metadata !9726, metadata !DIExpression()), !dbg !9728
  %call12 = call fastcc %struct.iv_ca_delta* @iv_ca_delta_join(%struct.iv_ca_delta* %11, %struct.iv_ca_delta* %12) #7, !dbg !9764
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %call12, metadata !9725, metadata !DIExpression()), !dbg !9728
  store %struct.iv_ca_delta* %call12, %struct.iv_ca_delta** %act_delta, align 8, !dbg !9765
  br label %if.end13, !dbg !9766

if.end13:                                         ; preds = %if.end7, %if.then9
  %call115 = phi i64 [ %call4, %if.end7 ], [ %call11, %if.then9 ]
  %call14 = call fastcc i32 @compare_costs(i64 %call115, i64 %call1159) #7, !dbg !9767
  %cmp15 = icmp slt i32 %call14, 0, !dbg !9768
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !9769

if.then16:                                        ; preds = %if.end13
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %best_delta, metadata !9724, metadata !DIExpression(DW_OP_deref)), !dbg !9728
  call fastcc void @iv_ca_delta_free(%struct.iv_ca_delta** nonnull %best_delta) #7, !dbg !9770
  %13 = load i64, i64* %4, align 8, !dbg !9771
  store i64 %13, i64* %5, align 8, !dbg !9772
  br label %for.inc, !dbg !9773

if.else:                                          ; preds = %if.end13
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %act_delta, metadata !9725, metadata !DIExpression(DW_OP_deref)), !dbg !9728
  call fastcc void @iv_ca_delta_free(%struct.iv_ca_delta** nonnull %act_delta) #7, !dbg !9774
  br label %for.inc

for.inc:                                          ; preds = %if.end, %for.body, %if.then16, %if.else
  %call1158 = phi i64 [ %call1159, %if.end ], [ %call1159, %for.body ], [ %call115, %if.then16 ], [ %call1159, %if.else ]
  %inc = add i32 %i.0, 1, !dbg !9775
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9720, metadata !DIExpression()), !dbg !9728
  br label %for.cond, !dbg !9776, !llvm.loop !9777

for.end:                                          ; preds = %for.cond
  %call1159.lcssa = phi i64 [ %call1159, %for.cond ]
  %14 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %best_delta, align 8, !dbg !9779
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %14, metadata !9724, metadata !DIExpression()), !dbg !9728
  %tobool18 = icmp eq %struct.iv_ca_delta* %14, null, !dbg !9779
  br i1 %tobool18, label %if.then19, label %if.end25, !dbg !9781

if.then19:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %best_delta, metadata !9724, metadata !DIExpression(DW_OP_deref)), !dbg !9728
  %call21 = call fastcc i64 @iv_ca_prune(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_cand* null, %struct.iv_ca_delta** nonnull %best_delta) #7, !dbg !9782
  %15 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %best_delta, align 8, !dbg !9784
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %15, metadata !9724, metadata !DIExpression()), !dbg !9728
  %tobool22 = icmp eq %struct.iv_ca_delta* %15, null, !dbg !9784
  br i1 %tobool22, label %cleanup, label %if.end25, !dbg !9786

if.end25:                                         ; preds = %if.then19, %for.end
  %16 = phi i64 [ %call21, %if.then19 ], [ %call1159.lcssa, %for.end ], !dbg !9787
  %17 = phi %struct.iv_ca_delta* [ %15, %if.then19 ], [ %14, %for.end ], !dbg !9788
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %17, metadata !9724, metadata !DIExpression()), !dbg !9728
  call fastcc void @iv_ca_delta_commit(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_ca_delta* %17, i8 zeroext 1) #7, !dbg !9789
  %call26 = call fastcc i64 @iv_ca_cost(%struct.iv_ca* %ivs) #7, !dbg !9787
  %call27 = call fastcc i32 @compare_costs(i64 %16, i64 %call26) #7, !dbg !9787
  %cmp28 = icmp eq i32 %call27, 0, !dbg !9787
  br i1 %cmp28, label %cond.end, label %cond.true, !dbg !9787

cond.true:                                        ; preds = %if.end25
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 5245, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !9787
  br label %cond.end, !dbg !9787

cond.end:                                         ; preds = %if.end25, %cond.true
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %best_delta, metadata !9724, metadata !DIExpression(DW_OP_deref)), !dbg !9728
  call fastcc void @iv_ca_delta_free(%struct.iv_ca_delta** nonnull %best_delta) #7, !dbg !9790
  br label %cleanup, !dbg !9791

cleanup:                                          ; preds = %if.then19, %cond.end
  %retval.0 = phi i8 [ 1, %cond.end ], [ 0, %if.then19 ], !dbg !9728
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !9792
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !9792
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9792
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9792
  ret i8 %retval.0, !dbg !9792
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @iv_ca_cost(%struct.iv_ca* %ivs) unnamed_addr #5 !dbg !9793 {
entry:
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !9797, metadata !DIExpression()), !dbg !9798
  %bad_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 1, !dbg !9799
  %0 = load i32, i32* %bad_uses, align 4, !dbg !9799
  %tobool = icmp eq i32 %0, 0, !dbg !9801
  br i1 %tobool, label %if.else, label %if.then, !dbg !9802

if.then:                                          ; preds = %entry
  br label %return, !dbg !9803

if.else:                                          ; preds = %entry
  %cost = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 10, !dbg !9804
  %1 = bitcast %struct.comp_cost* %cost to i64*, !dbg !9804
  %2 = load i64, i64* %1, align 8, !dbg !9804
  br label %return, !dbg !9805

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i64 [ 42949672970000000, %if.then ], [ %2, %if.else ], !dbg !9806
  ret i64 %storemerge, !dbg !9807
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.cost_pair* @iv_ca_cand_for_use(%struct.iv_ca* %ivs, %struct.iv_use* %use) unnamed_addr #5 !dbg !9808 {
entry:
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !9812, metadata !DIExpression()), !dbg !9814
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !9813, metadata !DIExpression()), !dbg !9814
  %cand_for_use = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 2, !dbg !9815
  %0 = load %struct.cost_pair**, %struct.cost_pair*** %cand_for_use, align 8, !dbg !9815
  %id = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 0, !dbg !9816
  %1 = load i32, i32* %id, align 8, !dbg !9816
  %idxprom = zext i32 %1 to i64, !dbg !9817
  %arrayidx = getelementptr inbounds %struct.cost_pair*, %struct.cost_pair** %0, i64 %idxprom, !dbg !9817
  %2 = load %struct.cost_pair*, %struct.cost_pair** %arrayidx, align 8, !dbg !9817
  ret %struct.cost_pair* %2, !dbg !9818
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.iv_ca* @iv_ca_new(%struct.ivopts_data* %data) unnamed_addr #5 !dbg !9819 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9821, metadata !DIExpression()), !dbg !9823
  %call = tail call i8* @xmalloc(i64 72) #6, !dbg !9824
  %0 = bitcast i8* %call to %struct.iv_ca*, !dbg !9824
  call void @llvm.dbg.value(metadata %struct.iv_ca* %0, metadata !9822, metadata !DIExpression()), !dbg !9823
  %upto = bitcast i8* %call to i32*, !dbg !9825
  store i32 0, i32* %upto, align 8, !dbg !9826
  %bad_uses = getelementptr inbounds i8, i8* %call, i64 4, !dbg !9827
  %1 = bitcast i8* %bad_uses to i32*, !dbg !9827
  store i32 0, i32* %1, align 4, !dbg !9828
  %call1 = tail call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !9829
  %conv = zext i32 %call1 to i64, !dbg !9829
  %call2 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !9829
  %cand_for_use = getelementptr inbounds i8, i8* %call, i64 8, !dbg !9830
  %2 = bitcast i8* %cand_for_use to i8**, !dbg !9831
  store i8* %call2, i8** %2, align 8, !dbg !9831
  %call3 = tail call fastcc i32 @n_iv_cands(%struct.ivopts_data* %data) #7, !dbg !9832
  %conv4 = zext i32 %call3 to i64, !dbg !9832
  %call5 = tail call i8* @xcalloc(i64 %conv4, i64 4) #6, !dbg !9832
  %n_cand_uses = getelementptr inbounds i8, i8* %call, i64 16, !dbg !9833
  %3 = bitcast i8* %n_cand_uses to i8**, !dbg !9834
  store i8* %call5, i8** %3, align 8, !dbg !9834
  %call6 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !9835
  %cands = getelementptr inbounds i8, i8* %call, i64 24, !dbg !9836
  %4 = bitcast i8* %cands to %struct.bitmap_head_def**, !dbg !9836
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** %4, align 8, !dbg !9837
  %n_cands = getelementptr inbounds i8, i8* %call, i64 32, !dbg !9838
  %5 = bitcast i8* %n_cands to i32*, !dbg !9838
  store i32 0, i32* %5, align 8, !dbg !9839
  %n_regs = getelementptr inbounds i8, i8* %call, i64 36, !dbg !9840
  %6 = bitcast i8* %n_regs to i32*, !dbg !9840
  store i32 0, i32* %6, align 4, !dbg !9841
  %cand_use_cost = getelementptr inbounds i8, i8* %call, i64 40, !dbg !9842
  %7 = bitcast i8* %cand_use_cost to i64*, !dbg !9843
  store i64 0, i64* %7, align 8, !dbg !9843
  %cand_cost = getelementptr inbounds i8, i8* %call, i64 48, !dbg !9844
  %8 = bitcast i8* %cand_cost to i32*, !dbg !9844
  store i32 0, i32* %8, align 8, !dbg !9845
  %max_inv_id = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 9, !dbg !9846
  %9 = load i32, i32* %max_inv_id, align 8, !dbg !9846
  %add = add i32 %9, 1, !dbg !9846
  %conv7 = zext i32 %add to i64, !dbg !9846
  %call8 = tail call i8* @xcalloc(i64 %conv7, i64 4) #6, !dbg !9846
  %n_invariant_uses = getelementptr inbounds i8, i8* %call, i64 56, !dbg !9847
  %10 = bitcast i8* %n_invariant_uses to i8**, !dbg !9848
  store i8* %call8, i8** %10, align 8, !dbg !9848
  %cost = getelementptr inbounds i8, i8* %call, i64 64, !dbg !9849
  %11 = bitcast i8* %cost to i64*, !dbg !9850
  store i64 0, i64* %11, align 8, !dbg !9850
  ret %struct.iv_ca* %0, !dbg !9851
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_add_cand_for(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %use) unnamed_addr #5 !dbg !9852 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %best_delta = alloca %struct.iv_ca_delta*, align 8
  %act_delta = alloca %struct.iv_ca_delta*, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9856, metadata !DIExpression()), !dbg !9867
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !9857, metadata !DIExpression()), !dbg !9867
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !9858, metadata !DIExpression()), !dbg !9867
  %0 = bitcast i32* %i to i8*, !dbg !9868
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9868
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !9869
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !9869
  %2 = bitcast %struct.iv_ca_delta** %best_delta to i8*, !dbg !9870
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !9870
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* null, metadata !9864, metadata !DIExpression()), !dbg !9867
  store %struct.iv_ca_delta* null, %struct.iv_ca_delta** %best_delta, align 8, !dbg !9871
  %3 = bitcast %struct.iv_ca_delta** %act_delta to i8*, !dbg !9870
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !9870
  tail call fastcc void @iv_ca_add_use(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %use) #7, !dbg !9872
  %call = tail call fastcc i64 @iv_ca_cost(%struct.iv_ca* %ivs) #7, !dbg !9873
  %call1 = tail call fastcc %struct.cost_pair* @iv_ca_cand_for_use(%struct.iv_ca* %ivs, %struct.iv_use* %use) #7, !dbg !9874
  call void @llvm.dbg.value(metadata %struct.cost_pair* %call1, metadata !9866, metadata !DIExpression()), !dbg !9867
  %tobool = icmp eq %struct.cost_pair* %call1, null, !dbg !9875
  br i1 %tobool, label %if.end, label %if.then, !dbg !9877

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %struct.iv_ca_delta* @iv_ca_delta_add(%struct.iv_use* %use, %struct.cost_pair* null, %struct.cost_pair* nonnull %call1, %struct.iv_ca_delta* null) #7, !dbg !9878
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %call2, metadata !9864, metadata !DIExpression()), !dbg !9867
  store %struct.iv_ca_delta* %call2, %struct.iv_ca_delta** %best_delta, align 8, !dbg !9880
  tail call fastcc void @iv_ca_set_no_cp(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %use) #7, !dbg !9881
  br label %if.end, !dbg !9882

if.end:                                           ; preds = %entry, %if.then
  %important_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 8, !dbg !9883
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %important_candidates, align 8, !dbg !9883
  call void @llvm.dbg.value(metadata i32* %i, metadata !9861, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9862, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %4, i32 0, i32* nonnull %i) #7, !dbg !9883
  %5 = bitcast %struct.iv_ca_delta** %act_delta to i64*, !dbg !9885
  %6 = bitcast %struct.iv_ca_delta** %best_delta to i64*, !dbg !9885
  br label %for.cond, !dbg !9883

for.cond:                                         ; preds = %for.inc, %if.end
  %best_cost.promoted = phi i64 [ %call178, %for.inc ], [ %call, %if.end ]
  call void @llvm.dbg.value(metadata i32* %i, metadata !9861, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9862, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  %call3 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !9890
  %tobool4 = icmp eq i8 %call3, 0, !dbg !9883
  br i1 %tobool4, label %for.end, label %for.body, !dbg !9883

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !9891
  call void @llvm.dbg.value(metadata i32 %7, metadata !9861, metadata !DIExpression()), !dbg !9867
  %call5 = call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %7) #7, !dbg !9892
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call5, metadata !9863, metadata !DIExpression()), !dbg !9867
  %iv = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %call5, i64 0, i32 6, !dbg !9893
  %8 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !9893
  %base_object = getelementptr inbounds %struct.iv, %struct.iv* %8, i64 0, i32 1, !dbg !9895
  %9 = load %union.tree_node*, %union.tree_node** %base_object, align 8, !dbg !9895
  %cmp = icmp eq %union.tree_node* %9, null, !dbg !9896
  br i1 %cmp, label %if.end7, label %for.inc, !dbg !9897

if.end7:                                          ; preds = %for.body
  %call8 = call fastcc zeroext i8 @iv_ca_cand_used_p(%struct.iv_ca* %ivs, %struct.iv_cand* %call5) #7, !dbg !9898
  %tobool9 = icmp eq i8 %call8, 0, !dbg !9898
  br i1 %tobool9, label %if.end11, label %for.inc, !dbg !9900

if.end11:                                         ; preds = %if.end7
  %call12 = call fastcc %struct.cost_pair* @get_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %call5) #7, !dbg !9901
  call void @llvm.dbg.value(metadata %struct.cost_pair* %call12, metadata !9866, metadata !DIExpression()), !dbg !9867
  %tobool13 = icmp eq %struct.cost_pair* %call12, null, !dbg !9902
  br i1 %tobool13, label %for.inc, label %if.end15, !dbg !9904

if.end15:                                         ; preds = %if.end11
  call fastcc void @iv_ca_set_cp(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %use, %struct.cost_pair* nonnull %call12) #7, !dbg !9905
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %act_delta, metadata !9865, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  %call17 = call fastcc i64 @iv_ca_extend(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_cand* %call5, %struct.iv_ca_delta** nonnull %act_delta, i32* null) #7, !dbg !9906
  call fastcc void @iv_ca_set_no_cp(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %use) #7, !dbg !9907
  %10 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %act_delta, align 8, !dbg !9908
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %10, metadata !9865, metadata !DIExpression()), !dbg !9867
  %call18 = call fastcc %struct.iv_ca_delta* @iv_ca_delta_add(%struct.iv_use* %use, %struct.cost_pair* null, %struct.cost_pair* nonnull %call12, %struct.iv_ca_delta* %10) #7, !dbg !9909
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %call18, metadata !9865, metadata !DIExpression()), !dbg !9867
  store %struct.iv_ca_delta* %call18, %struct.iv_ca_delta** %act_delta, align 8, !dbg !9910
  %call19 = call fastcc i32 @compare_costs(i64 %call17, i64 %best_cost.promoted) #7, !dbg !9911
  %cmp20 = icmp slt i32 %call19, 0, !dbg !9912
  br i1 %cmp20, label %if.then21, label %if.else, !dbg !9913

if.then21:                                        ; preds = %if.end15
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %best_delta, metadata !9864, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  call fastcc void @iv_ca_delta_free(%struct.iv_ca_delta** nonnull %best_delta) #7, !dbg !9914
  %11 = load i64, i64* %5, align 8, !dbg !9915
  store i64 %11, i64* %6, align 8, !dbg !9916
  br label %for.inc, !dbg !9917

if.else:                                          ; preds = %if.end15
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %act_delta, metadata !9865, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  call fastcc void @iv_ca_delta_free(%struct.iv_ca_delta** nonnull %act_delta) #7, !dbg !9918
  br label %for.inc

for.inc:                                          ; preds = %if.end11, %if.end7, %for.body, %if.then21, %if.else
  %call178 = phi i64 [ %best_cost.promoted, %if.end11 ], [ %best_cost.promoted, %if.end7 ], [ %best_cost.promoted, %for.body ], [ %call17, %if.then21 ], [ %best_cost.promoted, %if.else ]
  call void @llvm.dbg.value(metadata i32* %i, metadata !9861, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9862, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !9890
  br label %for.cond, !dbg !9890, !llvm.loop !9919

for.end:                                          ; preds = %for.cond
  %best_cost.promoted.lcssa = phi i64 [ %best_cost.promoted, %for.cond ]
  %call23 = call fastcc zeroext i8 @infinite_cost_p(i64 %best_cost.promoted.lcssa) #7, !dbg !9921
  %tobool24 = icmp eq i8 %call23, 0, !dbg !9921
  br i1 %tobool24, label %if.end59, label %if.then25, !dbg !9923

if.then25:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata i32 0, metadata !9861, metadata !DIExpression()), !dbg !9867
  %n_map_members = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 6, !dbg !9924
  %cost_map = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 7, !dbg !9928
  br label %for.cond26, !dbg !9930

for.cond26:                                       ; preds = %for.inc57, %if.then25
  %call454 = phi i64 [ %best_cost.promoted.lcssa, %if.then25 ], [ %call453, %for.inc57 ]
  %12 = phi i32 [ 0, %if.then25 ], [ %inc, %for.inc57 ], !dbg !9931
  store i32 %12, i32* %i, align 4, !dbg !9931
  call void @llvm.dbg.value(metadata i32 %12, metadata !9861, metadata !DIExpression()), !dbg !9867
  %13 = load i32, i32* %n_map_members, align 8, !dbg !9932
  %cmp27 = icmp ult i32 %12, %13, !dbg !9933
  br i1 %cmp27, label %for.body28, label %if.end59.loopexit, !dbg !9934

for.body28:                                       ; preds = %for.cond26
  %14 = load %struct.cost_pair*, %struct.cost_pair** %cost_map, align 8, !dbg !9935
  call void @llvm.dbg.value(metadata i32 %12, metadata !9861, metadata !DIExpression()), !dbg !9867
  %idx.ext = zext i32 %12 to i64, !dbg !9936
  %add.ptr = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %14, i64 %idx.ext, !dbg !9936
  call void @llvm.dbg.value(metadata %struct.cost_pair* %add.ptr, metadata !9866, metadata !DIExpression()), !dbg !9867
  %cand29 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %add.ptr, i64 0, i32 0, !dbg !9937
  %15 = load %struct.iv_cand*, %struct.iv_cand** %cand29, align 8, !dbg !9937
  call void @llvm.dbg.value(metadata %struct.iv_cand* %15, metadata !9863, metadata !DIExpression()), !dbg !9867
  %tobool30 = icmp eq %struct.iv_cand* %15, null, !dbg !9938
  br i1 %tobool30, label %for.inc57, label %if.end32, !dbg !9940

if.end32:                                         ; preds = %for.body28
  %important = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %15, i64 0, i32 1, !dbg !9941
  %16 = load i8, i8* %important, align 4, !dbg !9941
  %tobool33 = icmp eq i8 %16, 0, !dbg !9943
  br i1 %tobool33, label %if.end39, label %land.lhs.true, !dbg !9944

land.lhs.true:                                    ; preds = %if.end32
  %iv34 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %15, i64 0, i32 6, !dbg !9945
  %17 = load %struct.iv*, %struct.iv** %iv34, align 8, !dbg !9945
  %base_object35 = getelementptr inbounds %struct.iv, %struct.iv* %17, i64 0, i32 1, !dbg !9946
  %18 = load %union.tree_node*, %union.tree_node** %base_object35, align 8, !dbg !9946
  %cmp36 = icmp eq %union.tree_node* %18, null, !dbg !9947
  br i1 %cmp36, label %for.inc57, label %if.end39, !dbg !9948

if.end39:                                         ; preds = %if.end32, %land.lhs.true
  %call40 = call fastcc zeroext i8 @iv_ca_cand_used_p(%struct.iv_ca* %ivs, %struct.iv_cand* nonnull %15) #7, !dbg !9949
  %tobool41 = icmp eq i8 %call40, 0, !dbg !9949
  br i1 %tobool41, label %if.end43, label %for.inc57, !dbg !9951

if.end43:                                         ; preds = %if.end39
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* null, metadata !9865, metadata !DIExpression()), !dbg !9867
  store %struct.iv_ca_delta* null, %struct.iv_ca_delta** %act_delta, align 8, !dbg !9952
  call fastcc void @iv_ca_set_cp(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %use, %struct.cost_pair* %add.ptr) #7, !dbg !9953
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %act_delta, metadata !9865, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  %call45 = call fastcc i64 @iv_ca_extend(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_cand* nonnull %15, %struct.iv_ca_delta** nonnull %act_delta, i32* null) #7, !dbg !9954
  call fastcc void @iv_ca_set_no_cp(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %use) #7, !dbg !9955
  %call46 = call fastcc %struct.cost_pair* @iv_ca_cand_for_use(%struct.iv_ca* %ivs, %struct.iv_use* %use) #7, !dbg !9956
  %19 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %act_delta, align 8, !dbg !9957
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %19, metadata !9865, metadata !DIExpression()), !dbg !9867
  %call47 = call fastcc %struct.iv_ca_delta* @iv_ca_delta_add(%struct.iv_use* %use, %struct.cost_pair* %call46, %struct.cost_pair* %add.ptr, %struct.iv_ca_delta* %19) #7, !dbg !9958
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %call47, metadata !9865, metadata !DIExpression()), !dbg !9867
  store %struct.iv_ca_delta* %call47, %struct.iv_ca_delta** %act_delta, align 8, !dbg !9959
  %call48 = call fastcc i32 @compare_costs(i64 %call45, i64 %call454) #7, !dbg !9960
  %cmp49 = icmp slt i32 %call48, 0, !dbg !9962
  br i1 %cmp49, label %if.then51, label %if.else55, !dbg !9963

if.then51:                                        ; preds = %if.end43
  %20 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %best_delta, align 8, !dbg !9964
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %20, metadata !9864, metadata !DIExpression()), !dbg !9867
  %tobool52 = icmp eq %struct.iv_ca_delta* %20, null, !dbg !9964
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !9967

if.then53:                                        ; preds = %if.then51
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %best_delta, metadata !9864, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  call fastcc void @iv_ca_delta_free(%struct.iv_ca_delta** nonnull %best_delta) #7, !dbg !9968
  br label %if.end54, !dbg !9968

if.end54:                                         ; preds = %if.then51, %if.then53
  %21 = load i64, i64* %5, align 8, !dbg !9969
  store i64 %21, i64* %6, align 8, !dbg !9970
  br label %for.inc57, !dbg !9971

if.else55:                                        ; preds = %if.end43
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %act_delta, metadata !9865, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  call fastcc void @iv_ca_delta_free(%struct.iv_ca_delta** nonnull %act_delta) #7, !dbg !9972
  br label %for.inc57

for.inc57:                                        ; preds = %if.end39, %for.body28, %if.end54, %if.else55, %land.lhs.true
  %call453 = phi i64 [ %call454, %if.end39 ], [ %call454, %for.body28 ], [ %call45, %if.end54 ], [ %call454, %if.else55 ], [ %call454, %land.lhs.true ]
  %22 = load i32, i32* %i, align 4, !dbg !9973
  call void @llvm.dbg.value(metadata i32 %22, metadata !9861, metadata !DIExpression()), !dbg !9867
  %inc = add i32 %22, 1, !dbg !9973
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9861, metadata !DIExpression()), !dbg !9867
  br label %for.cond26, !dbg !9974, !llvm.loop !9975

if.end59.loopexit:                                ; preds = %for.cond26
  %call454.lcssa = phi i64 [ %call454, %for.cond26 ]
  br label %if.end59, !dbg !9977

if.end59:                                         ; preds = %if.end59.loopexit, %for.end
  %23 = phi i64 [ %call454.lcssa, %if.end59.loopexit ], [ %best_cost.promoted.lcssa, %for.end ], !dbg !9978
  %24 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %best_delta, align 8, !dbg !9977
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %24, metadata !9864, metadata !DIExpression()), !dbg !9867
  call fastcc void @iv_ca_delta_commit(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_ca_delta* %24, i8 zeroext 1) #7, !dbg !9979
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %best_delta, metadata !9864, metadata !DIExpression(DW_OP_deref)), !dbg !9867
  call fastcc void @iv_ca_delta_free(%struct.iv_ca_delta** nonnull %best_delta) #7, !dbg !9980
  %call60 = call fastcc zeroext i8 @infinite_cost_p(i64 %23) #7, !dbg !9978
  %tobool61 = icmp eq i8 %call60, 0, !dbg !9981
  %conv62 = zext i1 %tobool61 to i8, !dbg !9981
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !9982
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !9982
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !9982
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9982
  ret i8 %conv62, !dbg !9983
}

; Function Attrs: nounwind uwtable
define internal fastcc void @iv_ca_add_use(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %use) unnamed_addr #5 !dbg !9984 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !9988, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !9989, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !9990, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata %struct.cost_pair* null, metadata !9991, metadata !DIExpression()), !dbg !9995
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !9996
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !9996
  %1 = bitcast i32* %i to i8*, !dbg !9997
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !9997
  %upto = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 0, !dbg !9998
  %2 = load i32, i32* %upto, align 8, !dbg !9998
  %id = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 0, !dbg !9998
  %3 = load i32, i32* %id, align 8, !dbg !9998
  %cmp = icmp ult i32 %2, %3, !dbg !9998
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !9998

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 4657, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !9998
  %.pre = load i32, i32* %upto, align 8, !dbg !9999
  %.pre1 = load i32, i32* %id, align 8, !dbg !10001
  br label %cond.end, !dbg !9998

cond.end:                                         ; preds = %entry, %cond.true
  %4 = phi i32 [ %3, %entry ], [ %.pre1, %cond.true ], !dbg !10001
  %5 = phi i32 [ %2, %entry ], [ %.pre, %cond.true ], !dbg !9999
  %cmp3 = icmp eq i32 %5, %4, !dbg !10002
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10003

if.then:                                          ; preds = %cond.end
  %inc = add i32 %4, 1, !dbg !10004
  store i32 %inc, i32* %upto, align 8, !dbg !10004
  %bad_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 1, !dbg !10006
  %6 = load i32, i32* %bad_uses, align 4, !dbg !10007
  %inc5 = add i32 %6, 1, !dbg !10007
  store i32 %inc5, i32* %bad_uses, align 4, !dbg !10007
  br label %if.end, !dbg !10008

if.end:                                           ; preds = %if.then, %cond.end
  %cands = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 4, !dbg !10009
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cands, align 8, !dbg !10009
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9993, metadata !DIExpression(DW_OP_deref)), !dbg !9995
  call void @llvm.dbg.value(metadata i32* %i, metadata !9994, metadata !DIExpression(DW_OP_deref)), !dbg !9995
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %7, i32 0, i32* nonnull %i) #7, !dbg !10009
  br label %for.cond, !dbg !10009

for.cond:                                         ; preds = %for.body, %if.end
  %best_cp.0 = phi %struct.cost_pair* [ null, %if.end ], [ %spec.select, %for.body ], !dbg !9995
  call void @llvm.dbg.value(metadata %struct.cost_pair* %best_cp.0, metadata !9991, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9993, metadata !DIExpression(DW_OP_deref)), !dbg !9995
  call void @llvm.dbg.value(metadata i32* %i, metadata !9994, metadata !DIExpression(DW_OP_deref)), !dbg !9995
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !10011
  %tobool = icmp eq i8 %call, 0, !dbg !10009
  br i1 %tobool, label %for.end, label %for.body, !dbg !10009

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !10013
  call void @llvm.dbg.value(metadata i32 %8, metadata !9994, metadata !DIExpression()), !dbg !9995
  %call6 = call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %8) #7, !dbg !10015
  %call7 = call fastcc %struct.cost_pair* @get_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %call6) #7, !dbg !10016
  call void @llvm.dbg.value(metadata %struct.cost_pair* %call7, metadata !9992, metadata !DIExpression()), !dbg !9995
  %call8 = call fastcc zeroext i8 @cheaper_cost_pair(%struct.cost_pair* %call7, %struct.cost_pair* %best_cp.0) #7, !dbg !10017
  %tobool9 = icmp eq i8 %call8, 0, !dbg !10017
  %spec.select = select i1 %tobool9, %struct.cost_pair* %best_cp.0, %struct.cost_pair* %call7, !dbg !10019
  call void @llvm.dbg.value(metadata %struct.cost_pair* %spec.select, metadata !9991, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9993, metadata !DIExpression(DW_OP_deref)), !dbg !9995
  call void @llvm.dbg.value(metadata i32* %i, metadata !9994, metadata !DIExpression(DW_OP_deref)), !dbg !9995
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !10011
  br label %for.cond, !dbg !10011, !llvm.loop !10020

for.end:                                          ; preds = %for.cond
  %best_cp.0.lcssa = phi %struct.cost_pair* [ %best_cp.0, %for.cond ], !dbg !9995
  call void @llvm.dbg.value(metadata %struct.cost_pair* %best_cp.0.lcssa, metadata !9991, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata %struct.cost_pair* %best_cp.0.lcssa, metadata !9991, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata %struct.cost_pair* %best_cp.0.lcssa, metadata !9991, metadata !DIExpression()), !dbg !9995
  call fastcc void @iv_ca_set_cp(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %use, %struct.cost_pair* %best_cp.0.lcssa) #7, !dbg !10022
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !10023
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !10023
  ret void, !dbg !10023
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.iv_ca_delta* @iv_ca_delta_add(%struct.iv_use* %use, %struct.cost_pair* %old_cp, %struct.cost_pair* %new_cp, %struct.iv_ca_delta* %next_change) unnamed_addr #5 !dbg !10024 {
entry:
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !10028, metadata !DIExpression()), !dbg !10033
  call void @llvm.dbg.value(metadata %struct.cost_pair* %old_cp, metadata !10029, metadata !DIExpression()), !dbg !10033
  call void @llvm.dbg.value(metadata %struct.cost_pair* %new_cp, metadata !10030, metadata !DIExpression()), !dbg !10033
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %next_change, metadata !10031, metadata !DIExpression()), !dbg !10033
  %call = tail call i8* @xmalloc(i64 32) #6, !dbg !10034
  %0 = bitcast i8* %call to %struct.iv_ca_delta*, !dbg !10034
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %0, metadata !10032, metadata !DIExpression()), !dbg !10033
  %use1 = bitcast i8* %call to %struct.iv_use**, !dbg !10035
  store %struct.iv_use* %use, %struct.iv_use** %use1, align 8, !dbg !10036
  %old_cp2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !10037
  %1 = bitcast i8* %old_cp2 to %struct.cost_pair**, !dbg !10037
  store %struct.cost_pair* %old_cp, %struct.cost_pair** %1, align 8, !dbg !10038
  %new_cp3 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !10039
  %2 = bitcast i8* %new_cp3 to %struct.cost_pair**, !dbg !10039
  store %struct.cost_pair* %new_cp, %struct.cost_pair** %2, align 8, !dbg !10040
  %next_change4 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !10041
  %3 = bitcast i8* %next_change4 to %struct.iv_ca_delta**, !dbg !10041
  store %struct.iv_ca_delta* %next_change, %struct.iv_ca_delta** %3, align 8, !dbg !10042
  ret %struct.iv_ca_delta* %0, !dbg !10043
}

; Function Attrs: nounwind uwtable
define internal fastcc void @iv_ca_set_no_cp(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %use) unnamed_addr #5 !dbg !10044 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !10046, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !10047, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !10048, metadata !DIExpression()), !dbg !10052
  %id = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 0, !dbg !10053
  %0 = load i32, i32* %id, align 8, !dbg !10053
  call void @llvm.dbg.value(metadata i32 %0, metadata !10049, metadata !DIExpression()), !dbg !10052
  %cand_for_use = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 2, !dbg !10054
  %1 = load %struct.cost_pair**, %struct.cost_pair*** %cand_for_use, align 8, !dbg !10054
  %idxprom = zext i32 %0 to i64, !dbg !10055
  %arrayidx = getelementptr inbounds %struct.cost_pair*, %struct.cost_pair** %1, i64 %idxprom, !dbg !10055
  %2 = load %struct.cost_pair*, %struct.cost_pair** %arrayidx, align 8, !dbg !10055
  call void @llvm.dbg.value(metadata %struct.cost_pair* %2, metadata !10051, metadata !DIExpression()), !dbg !10052
  %tobool = icmp eq %struct.cost_pair* %2, null, !dbg !10056
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !10058

if.end:                                           ; preds = %entry
  %cand = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %2, i64 0, i32 0, !dbg !10059
  %3 = load %struct.iv_cand*, %struct.iv_cand** %cand, align 8, !dbg !10059
  %id1 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %3, i64 0, i32 0, !dbg !10060
  %4 = load i32, i32* %id1, align 8, !dbg !10060
  call void @llvm.dbg.value(metadata i32 %4, metadata !10050, metadata !DIExpression()), !dbg !10052
  %bad_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 1, !dbg !10061
  %5 = load i32, i32* %bad_uses, align 4, !dbg !10062
  %inc = add i32 %5, 1, !dbg !10062
  store i32 %inc, i32* %bad_uses, align 4, !dbg !10062
  store %struct.cost_pair* null, %struct.cost_pair** %arrayidx, align 8, !dbg !10063
  %n_cand_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 3, !dbg !10064
  %6 = load i32*, i32** %n_cand_uses, align 8, !dbg !10064
  %idxprom5 = zext i32 %4 to i64, !dbg !10065
  %arrayidx6 = getelementptr inbounds i32, i32* %6, i64 %idxprom5, !dbg !10065
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !10066
  %dec = add i32 %7, -1, !dbg !10066
  store i32 %dec, i32* %arrayidx6, align 4, !dbg !10066
  %8 = load i32*, i32** %n_cand_uses, align 8, !dbg !10067
  %arrayidx9 = getelementptr inbounds i32, i32* %8, i64 %idxprom5, !dbg !10069
  %9 = load i32, i32* %arrayidx9, align 4, !dbg !10069
  %cmp = icmp eq i32 %9, 0, !dbg !10070
  br i1 %cmp, label %if.then10, label %if.end19, !dbg !10071

if.then10:                                        ; preds = %if.end
  %cands = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 4, !dbg !10072
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cands, align 8, !dbg !10072
  %call = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %10, i32 %4) #6, !dbg !10074
  %11 = load %struct.iv_cand*, %struct.iv_cand** %cand, align 8, !dbg !10075
  %iv = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %11, i64 0, i32 6, !dbg !10077
  %12 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !10077
  %tobool12 = icmp eq %struct.iv* %12, null, !dbg !10078
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !10079

if.then13:                                        ; preds = %if.then10
  %n_regs = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 6, !dbg !10080
  %13 = load i32, i32* %n_regs, align 4, !dbg !10081
  %dec14 = add i32 %13, -1, !dbg !10081
  store i32 %dec14, i32* %n_regs, align 4, !dbg !10081
  br label %if.end15, !dbg !10082

if.end15:                                         ; preds = %if.then10, %if.then13
  %n_cands = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 5, !dbg !10083
  %14 = load i32, i32* %n_cands, align 8, !dbg !10084
  %dec16 = add i32 %14, -1, !dbg !10084
  store i32 %dec16, i32* %n_cands, align 8, !dbg !10084
  %15 = load %struct.iv_cand*, %struct.iv_cand** %cand, align 8, !dbg !10085
  %cost = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %15, i64 0, i32 7, !dbg !10086
  %16 = load i32, i32* %cost, align 8, !dbg !10086
  %cand_cost = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 8, !dbg !10087
  %17 = load i32, i32* %cand_cost, align 8, !dbg !10088
  %sub = sub i32 %17, %16, !dbg !10088
  store i32 %sub, i32* %cand_cost, align 8, !dbg !10088
  %18 = load %struct.iv_cand*, %struct.iv_cand** %cand, align 8, !dbg !10089
  %depends_on = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %18, i64 0, i32 10, !dbg !10090
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on, align 8, !dbg !10090
  tail call fastcc void @iv_ca_set_remove_invariants(%struct.iv_ca* %ivs, %struct.bitmap_head_def* %19) #7, !dbg !10091
  br label %if.end19, !dbg !10092

if.end19:                                         ; preds = %if.end15, %if.end
  %cand_use_cost = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 7, !dbg !10093
  %cost21 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %2, i64 0, i32 1, !dbg !10094
  %20 = bitcast %struct.comp_cost* %cand_use_cost to i64*, !dbg !10095
  %21 = load i64, i64* %20, align 8, !dbg !10095
  %22 = bitcast %struct.comp_cost* %cost21 to i64*, !dbg !10095
  %23 = load i64, i64* %22, align 8, !dbg !10095
  %call22 = tail call fastcc i64 @sub_costs(i64 %21, i64 %23) #7, !dbg !10095
  store i64 %call22, i64* %20, align 8, !dbg !10095
  %depends_on23 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %2, i64 0, i32 2, !dbg !10096
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on23, align 8, !dbg !10096
  tail call fastcc void @iv_ca_set_remove_invariants(%struct.iv_ca* %ivs, %struct.bitmap_head_def* %24) #7, !dbg !10097
  tail call fastcc void @iv_ca_recount_cost(%struct.ivopts_data* %data, %struct.iv_ca* %ivs) #7, !dbg !10098
  br label %cleanup.cont, !dbg !10099

cleanup.cont:                                     ; preds = %entry, %if.end19
  ret void, !dbg !10099
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @iv_ca_cand_used_p(%struct.iv_ca* %ivs, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !10100 {
entry:
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !10104, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !10105, metadata !DIExpression()), !dbg !10106
  %n_cand_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 3, !dbg !10107
  %0 = load i32*, i32** %n_cand_uses, align 8, !dbg !10107
  %id = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 0, !dbg !10108
  %1 = load i32, i32* %id, align 8, !dbg !10108
  %idxprom = zext i32 %1 to i64, !dbg !10109
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !10109
  %2 = load i32, i32* %arrayidx, align 4, !dbg !10109
  %cmp = icmp ne i32 %2, 0, !dbg !10110
  %conv1 = zext i1 %cmp to i8, !dbg !10109
  ret i8 %conv1, !dbg !10111
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.cost_pair* @get_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !10112 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !10116, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !10117, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !10118, metadata !DIExpression()), !dbg !10122
  %tobool = icmp eq %struct.iv_cand* %cand, null, !dbg !10123
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10125

if.end:                                           ; preds = %entry
  %consider_all_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 10, !dbg !10126
  %0 = load i8, i8* %consider_all_candidates, align 4, !dbg !10126
  %tobool1 = icmp eq i8 %0, 0, !dbg !10128
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !10129

if.then2:                                         ; preds = %if.end
  %cost_map = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 7, !dbg !10130
  %1 = load %struct.cost_pair*, %struct.cost_pair** %cost_map, align 8, !dbg !10130
  %id = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 0, !dbg !10132
  %2 = load i32, i32* %id, align 8, !dbg !10132
  %idx.ext = zext i32 %2 to i64, !dbg !10133
  %add.ptr = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %1, i64 %idx.ext, !dbg !10133
  call void @llvm.dbg.value(metadata %struct.cost_pair* %add.ptr, metadata !10121, metadata !DIExpression()), !dbg !10122
  %cand3 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %add.ptr, i64 0, i32 0, !dbg !10134
  %3 = load %struct.iv_cand*, %struct.iv_cand** %cand3, align 8, !dbg !10134
  %tobool4 = icmp eq %struct.iv_cand* %3, null, !dbg !10136
  %add.ptr. = select i1 %tobool4, %struct.cost_pair* null, %struct.cost_pair* %add.ptr, !dbg !10137
  br label %cleanup, !dbg !10137

if.end7:                                          ; preds = %if.end
  %id8 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 0, !dbg !10138
  %4 = load i32, i32* %id8, align 8, !dbg !10138
  %n_map_members = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 6, !dbg !10139
  %5 = load i32, i32* %n_map_members, align 8, !dbg !10139
  %sub = add i32 %5, -1, !dbg !10140
  %and = and i32 %4, %sub, !dbg !10141
  call void @llvm.dbg.value(metadata i32 %and, metadata !10120, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata i32 %and, metadata !10119, metadata !DIExpression()), !dbg !10122
  %cost_map10 = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 7, !dbg !10142
  br label %for.cond, !dbg !10146

for.cond:                                         ; preds = %for.inc, %if.end7
  %i.0 = phi i32 [ %and, %if.end7 ], [ %inc, %for.inc ], !dbg !10147
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10119, metadata !DIExpression()), !dbg !10122
  %cmp = icmp ult i32 %i.0, %5, !dbg !10148
  br i1 %cmp, label %for.body, label %for.cond18.preheader, !dbg !10149

for.cond18.preheader:                             ; preds = %for.cond
  br label %for.cond18, !dbg !10150

for.body:                                         ; preds = %for.cond
  %6 = load %struct.cost_pair*, %struct.cost_pair** %cost_map10, align 8, !dbg !10152
  %idxprom = zext i32 %i.0 to i64, !dbg !10153
  %cand11 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %6, i64 %idxprom, i32 0, !dbg !10154
  %7 = load %struct.iv_cand*, %struct.iv_cand** %cand11, align 8, !dbg !10154
  %cmp12 = icmp eq %struct.iv_cand* %7, %cand, !dbg !10155
  br i1 %cmp12, label %if.then13, label %for.inc, !dbg !10156

if.then13:                                        ; preds = %for.body
  %.lcssa4 = phi %struct.cost_pair* [ %6, %for.body ], !dbg !10152
  %idxprom.lcssa = phi i64 [ %idxprom, %for.body ], !dbg !10153
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10119, metadata !DIExpression()), !dbg !10122
  %add.ptr16 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %.lcssa4, i64 %idxprom.lcssa, !dbg !10157
  br label %cleanup, !dbg !10158

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !10159
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10119, metadata !DIExpression()), !dbg !10122
  br label %for.cond, !dbg !10160, !llvm.loop !10161

for.cond18:                                       ; preds = %for.cond18.preheader, %for.inc31
  %i.1 = phi i32 [ %inc32, %for.inc31 ], [ 0, %for.cond18.preheader ], !dbg !10163
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !10119, metadata !DIExpression()), !dbg !10122
  %exitcond = icmp eq i32 %i.1, %and, !dbg !10164
  br i1 %exitcond, label %cleanup.loopexit, label %for.body20, !dbg !10150

for.body20:                                       ; preds = %for.cond18
  %8 = load %struct.cost_pair*, %struct.cost_pair** %cost_map10, align 8, !dbg !10166
  %idxprom22 = zext i32 %i.1 to i64, !dbg !10168
  %cand24 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %8, i64 %idxprom22, i32 0, !dbg !10169
  %9 = load %struct.iv_cand*, %struct.iv_cand** %cand24, align 8, !dbg !10169
  %cmp25 = icmp eq %struct.iv_cand* %9, %cand, !dbg !10170
  br i1 %cmp25, label %if.then26, label %for.inc31, !dbg !10171

if.then26:                                        ; preds = %for.body20
  %.lcssa = phi %struct.cost_pair* [ %8, %for.body20 ], !dbg !10166
  %idxprom22.lcssa = phi i64 [ %idxprom22, %for.body20 ], !dbg !10168
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !10119, metadata !DIExpression()), !dbg !10122
  %add.ptr29 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %.lcssa, i64 %idxprom22.lcssa, !dbg !10172
  br label %cleanup, !dbg !10173

for.inc31:                                        ; preds = %for.body20
  %inc32 = add i32 %i.1, 1, !dbg !10174
  call void @llvm.dbg.value(metadata i32 %inc32, metadata !10119, metadata !DIExpression()), !dbg !10122
  br label %for.cond18, !dbg !10175, !llvm.loop !10176

cleanup.loopexit:                                 ; preds = %for.cond18
  br label %cleanup, !dbg !10178

cleanup:                                          ; preds = %cleanup.loopexit, %entry, %if.then2, %if.then26, %if.then13
  %retval.0 = phi %struct.cost_pair* [ %add.ptr16, %if.then13 ], [ %add.ptr29, %if.then26 ], [ null, %entry ], [ %add.ptr., %if.then2 ], [ null, %cleanup.loopexit ], !dbg !10122
  ret %struct.cost_pair* %retval.0, !dbg !10178
}

; Function Attrs: nounwind uwtable
define internal fastcc void @iv_ca_set_cp(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %use, %struct.cost_pair* %cp) unnamed_addr #5 !dbg !10179 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !10183, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !10184, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !10185, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata %struct.cost_pair* %cp, metadata !10186, metadata !DIExpression()), !dbg !10189
  %id = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 0, !dbg !10190
  %0 = load i32, i32* %id, align 8, !dbg !10190
  call void @llvm.dbg.value(metadata i32 %0, metadata !10187, metadata !DIExpression()), !dbg !10189
  %cand_for_use = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 2, !dbg !10191
  %1 = load %struct.cost_pair**, %struct.cost_pair*** %cand_for_use, align 8, !dbg !10191
  %idxprom = zext i32 %0 to i64, !dbg !10193
  %arrayidx = getelementptr inbounds %struct.cost_pair*, %struct.cost_pair** %1, i64 %idxprom, !dbg !10193
  %2 = load %struct.cost_pair*, %struct.cost_pair** %arrayidx, align 8, !dbg !10193
  %cmp = icmp eq %struct.cost_pair* %2, %cp, !dbg !10194
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !10195

if.end:                                           ; preds = %entry
  %tobool = icmp eq %struct.cost_pair* %2, null, !dbg !10196
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !10198

if.then4:                                         ; preds = %if.end
  tail call fastcc void @iv_ca_set_no_cp(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %use) #7, !dbg !10199
  br label %if.end5, !dbg !10199

if.end5:                                          ; preds = %if.end, %if.then4
  %tobool6 = icmp eq %struct.cost_pair* %cp, null, !dbg !10200
  br i1 %tobool6, label %cleanup.cont, label %if.then7, !dbg !10202

if.then7:                                         ; preds = %if.end5
  %cand = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %cp, i64 0, i32 0, !dbg !10203
  %3 = load %struct.iv_cand*, %struct.iv_cand** %cand, align 8, !dbg !10203
  %id8 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %3, i64 0, i32 0, !dbg !10205
  %4 = load i32, i32* %id8, align 8, !dbg !10205
  call void @llvm.dbg.value(metadata i32 %4, metadata !10188, metadata !DIExpression()), !dbg !10189
  %bad_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 1, !dbg !10206
  %5 = load i32, i32* %bad_uses, align 4, !dbg !10207
  %dec = add i32 %5, -1, !dbg !10207
  store i32 %dec, i32* %bad_uses, align 4, !dbg !10207
  %6 = load %struct.cost_pair**, %struct.cost_pair*** %cand_for_use, align 8, !dbg !10208
  %arrayidx11 = getelementptr inbounds %struct.cost_pair*, %struct.cost_pair** %6, i64 %idxprom, !dbg !10209
  store %struct.cost_pair* %cp, %struct.cost_pair** %arrayidx11, align 8, !dbg !10210
  %n_cand_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 3, !dbg !10211
  %7 = load i32*, i32** %n_cand_uses, align 8, !dbg !10211
  %idxprom12 = zext i32 %4 to i64, !dbg !10212
  %arrayidx13 = getelementptr inbounds i32, i32* %7, i64 %idxprom12, !dbg !10212
  %8 = load i32, i32* %arrayidx13, align 4, !dbg !10213
  %inc = add i32 %8, 1, !dbg !10213
  store i32 %inc, i32* %arrayidx13, align 4, !dbg !10213
  %9 = load i32*, i32** %n_cand_uses, align 8, !dbg !10214
  %arrayidx16 = getelementptr inbounds i32, i32* %9, i64 %idxprom12, !dbg !10216
  %10 = load i32, i32* %arrayidx16, align 4, !dbg !10216
  %cmp17 = icmp eq i32 %10, 1, !dbg !10217
  br i1 %cmp17, label %if.then18, label %if.end27, !dbg !10218

if.then18:                                        ; preds = %if.then7
  %cands = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 4, !dbg !10219
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cands, align 8, !dbg !10219
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %11, i32 %4) #6, !dbg !10221
  %12 = load %struct.iv_cand*, %struct.iv_cand** %cand, align 8, !dbg !10222
  %iv = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %12, i64 0, i32 6, !dbg !10224
  %13 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !10224
  %tobool20 = icmp eq %struct.iv* %13, null, !dbg !10225
  br i1 %tobool20, label %if.end23, label %if.then21, !dbg !10226

if.then21:                                        ; preds = %if.then18
  %n_regs = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 6, !dbg !10227
  %14 = load i32, i32* %n_regs, align 4, !dbg !10228
  %inc22 = add i32 %14, 1, !dbg !10228
  store i32 %inc22, i32* %n_regs, align 4, !dbg !10228
  br label %if.end23, !dbg !10229

if.end23:                                         ; preds = %if.then18, %if.then21
  %n_cands = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 5, !dbg !10230
  %15 = load i32, i32* %n_cands, align 8, !dbg !10231
  %inc24 = add i32 %15, 1, !dbg !10231
  store i32 %inc24, i32* %n_cands, align 8, !dbg !10231
  %16 = load %struct.iv_cand*, %struct.iv_cand** %cand, align 8, !dbg !10232
  %cost = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %16, i64 0, i32 7, !dbg !10233
  %17 = load i32, i32* %cost, align 8, !dbg !10233
  %cand_cost = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 8, !dbg !10234
  %18 = load i32, i32* %cand_cost, align 8, !dbg !10235
  %add = add i32 %18, %17, !dbg !10235
  store i32 %add, i32* %cand_cost, align 8, !dbg !10235
  %19 = load %struct.iv_cand*, %struct.iv_cand** %cand, align 8, !dbg !10236
  %depends_on = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %19, i64 0, i32 10, !dbg !10237
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on, align 8, !dbg !10237
  tail call fastcc void @iv_ca_set_add_invariants(%struct.iv_ca* %ivs, %struct.bitmap_head_def* %20) #7, !dbg !10238
  br label %if.end27, !dbg !10239

if.end27:                                         ; preds = %if.end23, %if.then7
  %cand_use_cost = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 7, !dbg !10240
  %cost29 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %cp, i64 0, i32 1, !dbg !10241
  %21 = bitcast %struct.comp_cost* %cand_use_cost to i64*, !dbg !10242
  %22 = load i64, i64* %21, align 8, !dbg !10242
  %23 = bitcast %struct.comp_cost* %cost29 to i64*, !dbg !10242
  %24 = load i64, i64* %23, align 8, !dbg !10242
  %call30 = tail call fastcc i64 @add_costs(i64 %22, i64 %24) #7, !dbg !10242
  store i64 %call30, i64* %21, align 8, !dbg !10242
  %depends_on31 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %cp, i64 0, i32 2, !dbg !10243
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on31, align 8, !dbg !10243
  tail call fastcc void @iv_ca_set_add_invariants(%struct.iv_ca* %ivs, %struct.bitmap_head_def* %25) #7, !dbg !10244
  tail call fastcc void @iv_ca_recount_cost(%struct.ivopts_data* %data, %struct.iv_ca* %ivs) #7, !dbg !10245
  br label %cleanup.cont, !dbg !10246

cleanup.cont:                                     ; preds = %if.end5, %entry, %if.end27
  ret void, !dbg !10247
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @iv_ca_extend(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_cand* %cand, %struct.iv_ca_delta** %delta, i32* %n_ivs) unnamed_addr #5 !dbg !10248 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !10253, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !10254, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !10255, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %delta, metadata !10256, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32* %n_ivs, metadata !10257, metadata !DIExpression()), !dbg !10263
  store %struct.iv_ca_delta* null, %struct.iv_ca_delta** %delta, align 8, !dbg !10264
  call void @llvm.dbg.value(metadata i32 0, metadata !10258, metadata !DIExpression()), !dbg !10263
  %upto = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 0, !dbg !10265
  br label %for.cond, !dbg !10268

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !10269
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10258, metadata !DIExpression()), !dbg !10263
  %0 = load i32, i32* %upto, align 8, !dbg !10270
  %cmp = icmp ult i32 %i.0, %0, !dbg !10271
  br i1 %cmp, label %for.body, label %for.end, !dbg !10272

for.body:                                         ; preds = %for.cond
  %call = tail call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !10273
  call void @llvm.dbg.value(metadata %struct.iv_use* %call, metadata !10260, metadata !DIExpression()), !dbg !10263
  %call1 = tail call fastcc %struct.cost_pair* @iv_ca_cand_for_use(%struct.iv_ca* %ivs, %struct.iv_use* %call) #7, !dbg !10275
  call void @llvm.dbg.value(metadata %struct.cost_pair* %call1, metadata !10261, metadata !DIExpression()), !dbg !10263
  %tobool = icmp eq %struct.cost_pair* %call1, null, !dbg !10276
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !10278

land.lhs.true:                                    ; preds = %for.body
  %cand2 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %call1, i64 0, i32 0, !dbg !10279
  %1 = load %struct.iv_cand*, %struct.iv_cand** %cand2, align 8, !dbg !10279
  %cmp3 = icmp eq %struct.iv_cand* %1, %cand, !dbg !10280
  br i1 %cmp3, label %for.inc, label %if.end, !dbg !10281

if.end:                                           ; preds = %for.body, %land.lhs.true
  %call4 = tail call fastcc %struct.cost_pair* @get_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %call, %struct.iv_cand* %cand) #7, !dbg !10282
  call void @llvm.dbg.value(metadata %struct.cost_pair* %call4, metadata !10262, metadata !DIExpression()), !dbg !10263
  %tobool5 = icmp eq %struct.cost_pair* %call4, null, !dbg !10283
  br i1 %tobool5, label %for.inc, label %if.end7, !dbg !10285

if.end7:                                          ; preds = %if.end
  %call8 = tail call fastcc zeroext i8 @iv_ca_has_deps(%struct.iv_ca* %ivs, %struct.cost_pair* nonnull %call4) #7, !dbg !10286
  %tobool9 = icmp eq i8 %call8, 0, !dbg !10286
  br i1 %tobool9, label %for.inc, label %if.end11, !dbg !10288

if.end11:                                         ; preds = %if.end7
  %call12 = tail call fastcc zeroext i8 @cheaper_cost_pair(%struct.cost_pair* nonnull %call4, %struct.cost_pair* %call1) #7, !dbg !10289
  %tobool13 = icmp eq i8 %call12, 0, !dbg !10289
  br i1 %tobool13, label %for.inc, label %if.end15, !dbg !10291

if.end15:                                         ; preds = %if.end11
  %2 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %delta, align 8, !dbg !10292
  %call16 = tail call fastcc %struct.iv_ca_delta* @iv_ca_delta_add(%struct.iv_use* %call, %struct.cost_pair* %call1, %struct.cost_pair* nonnull %call4, %struct.iv_ca_delta* %2) #7, !dbg !10293
  store %struct.iv_ca_delta* %call16, %struct.iv_ca_delta** %delta, align 8, !dbg !10294
  br label %for.inc, !dbg !10295

for.inc:                                          ; preds = %if.end11, %if.end7, %if.end, %land.lhs.true, %if.end15
  %inc = add i32 %i.0, 1, !dbg !10296
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10258, metadata !DIExpression()), !dbg !10263
  br label %for.cond, !dbg !10297, !llvm.loop !10298

for.end:                                          ; preds = %for.cond
  %3 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %delta, align 8, !dbg !10300
  tail call fastcc void @iv_ca_delta_commit(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_ca_delta* %3, i8 zeroext 1) #7, !dbg !10301
  %call17 = tail call fastcc i64 @iv_ca_cost(%struct.iv_ca* %ivs) #7, !dbg !10302
  %tobool18 = icmp eq i32* %n_ivs, null, !dbg !10303
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !10305

if.then19:                                        ; preds = %for.end
  %call20 = tail call fastcc i32 @iv_ca_n_cands(%struct.iv_ca* %ivs) #7, !dbg !10306
  store i32 %call20, i32* %n_ivs, align 4, !dbg !10307
  br label %if.end21, !dbg !10308

if.end21:                                         ; preds = %for.end, %if.then19
  %4 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %delta, align 8, !dbg !10309
  tail call fastcc void @iv_ca_delta_commit(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_ca_delta* %4, i8 zeroext 0) #7, !dbg !10310
  ret i64 %call17, !dbg !10311
}

; Function Attrs: nounwind uwtable
define internal fastcc void @iv_ca_delta_free(%struct.iv_ca_delta** %delta) unnamed_addr #5 !dbg !10312 {
entry:
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %delta, metadata !10316, metadata !DIExpression()), !dbg !10319
  %0 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %delta, align 8, !dbg !10320
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %0, metadata !10317, metadata !DIExpression()), !dbg !10319
  br label %for.cond, !dbg !10322

for.cond:                                         ; preds = %for.body, %entry
  %.in = phi %struct.iv_ca_delta* [ %0, %entry ], [ %2, %for.body ]
  %act.0 = phi %struct.iv_ca_delta* [ %0, %entry ], [ %2, %for.body ], !dbg !10323
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %act.0, metadata !10317, metadata !DIExpression()), !dbg !10319
  %tobool = icmp eq %struct.iv_ca_delta* %act.0, null, !dbg !10324
  br i1 %tobool, label %for.end, label %for.body, !dbg !10324

for.body:                                         ; preds = %for.cond
  %1 = bitcast %struct.iv_ca_delta* %.in to i8*, !dbg !10323
  %next_change = getelementptr inbounds %struct.iv_ca_delta, %struct.iv_ca_delta* %act.0, i64 0, i32 3, !dbg !10325
  %2 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %next_change, align 8, !dbg !10325
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %2, metadata !10318, metadata !DIExpression()), !dbg !10319
  tail call void @free(i8* %1) #6, !dbg !10328
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %2, metadata !10317, metadata !DIExpression()), !dbg !10319
  br label %for.cond, !dbg !10329, !llvm.loop !10330

for.end:                                          ; preds = %for.cond
  store %struct.iv_ca_delta* null, %struct.iv_ca_delta** %delta, align 8, !dbg !10332
  ret void, !dbg !10333
}

; Function Attrs: nounwind uwtable
define internal fastcc void @iv_ca_delta_commit(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_ca_delta* %delta, i8 zeroext %forward) unnamed_addr #5 !dbg !10334 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !10338, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !10339, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %delta, metadata !10340, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata i8 %forward, metadata !10341, metadata !DIExpression()), !dbg !10345
  %tobool = icmp eq i8 %forward, 0, !dbg !10346
  br i1 %tobool, label %if.then, label %if.end, !dbg !10348

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.iv_ca_delta* @iv_ca_delta_reverse(%struct.iv_ca_delta* %delta) #7, !dbg !10349
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %call, metadata !10340, metadata !DIExpression()), !dbg !10345
  br label %if.end, !dbg !10350

if.end:                                           ; preds = %entry, %if.then
  %delta.addr.0 = phi %struct.iv_ca_delta* [ %delta, %entry ], [ %call, %if.then ]
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %delta.addr.0, metadata !10340, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %delta.addr.0, metadata !10344, metadata !DIExpression()), !dbg !10345
  br label %for.cond, !dbg !10351

for.cond:                                         ; preds = %cond.end, %if.end
  %act.0 = phi %struct.iv_ca_delta* [ %delta.addr.0, %if.end ], [ %4, %cond.end ], !dbg !10353
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %act.0, metadata !10344, metadata !DIExpression()), !dbg !10345
  %tobool1 = icmp eq %struct.iv_ca_delta* %act.0, null, !dbg !10354
  br i1 %tobool1, label %for.end, label %for.body, !dbg !10354

for.body:                                         ; preds = %for.cond
  %old_cp = getelementptr inbounds %struct.iv_ca_delta, %struct.iv_ca_delta* %act.0, i64 0, i32 1, !dbg !10355
  %0 = load %struct.cost_pair*, %struct.cost_pair** %old_cp, align 8, !dbg !10355
  call void @llvm.dbg.value(metadata %struct.cost_pair* %0, metadata !10342, metadata !DIExpression()), !dbg !10345
  %new_cp = getelementptr inbounds %struct.iv_ca_delta, %struct.iv_ca_delta* %act.0, i64 0, i32 2, !dbg !10358
  %1 = load %struct.cost_pair*, %struct.cost_pair** %new_cp, align 8, !dbg !10358
  call void @llvm.dbg.value(metadata %struct.cost_pair* %1, metadata !10343, metadata !DIExpression()), !dbg !10345
  %use = getelementptr inbounds %struct.iv_ca_delta, %struct.iv_ca_delta* %act.0, i64 0, i32 0, !dbg !10359
  %2 = load %struct.iv_use*, %struct.iv_use** %use, align 8, !dbg !10359
  %call2 = tail call fastcc %struct.cost_pair* @iv_ca_cand_for_use(%struct.iv_ca* %ivs, %struct.iv_use* %2) #7, !dbg !10359
  %cmp = icmp eq %struct.cost_pair* %call2, %0, !dbg !10359
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10359

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 4794, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !10359
  br label %cond.end, !dbg !10359

cond.end:                                         ; preds = %for.body, %cond.true
  %3 = load %struct.iv_use*, %struct.iv_use** %use, align 8, !dbg !10360
  tail call fastcc void @iv_ca_set_cp(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_use* %3, %struct.cost_pair* %1) #7, !dbg !10361
  %next_change = getelementptr inbounds %struct.iv_ca_delta, %struct.iv_ca_delta* %act.0, i64 0, i32 3, !dbg !10362
  %4 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %next_change, align 8, !dbg !10362
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %4, metadata !10344, metadata !DIExpression()), !dbg !10345
  br label %for.cond, !dbg !10363, !llvm.loop !10364

for.end:                                          ; preds = %for.cond
  br i1 %tobool, label %if.then5, label %if.end7, !dbg !10366

if.then5:                                         ; preds = %for.end
  %call6 = tail call fastcc %struct.iv_ca_delta* @iv_ca_delta_reverse(%struct.iv_ca_delta* %delta.addr.0) #7, !dbg !10367
  br label %if.end7, !dbg !10367

if.end7:                                          ; preds = %for.end, %if.then5
  ret void, !dbg !10369
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @cheaper_cost_pair(%struct.cost_pair* %a, %struct.cost_pair* %b) unnamed_addr #5 !dbg !10370 {
entry:
  call void @llvm.dbg.value(metadata %struct.cost_pair* %a, metadata !10374, metadata !DIExpression()), !dbg !10377
  call void @llvm.dbg.value(metadata %struct.cost_pair* %b, metadata !10375, metadata !DIExpression()), !dbg !10377
  %tobool = icmp eq %struct.cost_pair* %a, null, !dbg !10378
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10380

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq %struct.cost_pair* %b, null, !dbg !10381
  br i1 %tobool1, label %cleanup, label %if.end3, !dbg !10383

if.end3:                                          ; preds = %if.end
  %cost = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %a, i64 0, i32 1, !dbg !10384
  %cost4 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %b, i64 0, i32 1, !dbg !10385
  %0 = bitcast %struct.comp_cost* %cost to i64*, !dbg !10386
  %1 = load i64, i64* %0, align 8, !dbg !10386
  %2 = bitcast %struct.comp_cost* %cost4 to i64*, !dbg !10386
  %3 = load i64, i64* %2, align 8, !dbg !10386
  %call = tail call fastcc i32 @compare_costs(i64 %1, i64 %3) #7, !dbg !10386
  call void @llvm.dbg.value(metadata i32 %call, metadata !10376, metadata !DIExpression()), !dbg !10377
  %cmp5 = icmp slt i32 %call, 0, !dbg !10387
  br i1 %cmp5, label %cleanup, label %if.end7, !dbg !10389

if.end7:                                          ; preds = %if.end3
  %cmp8 = icmp eq i32 %call, 0, !dbg !10390
  br i1 %cmp8, label %if.end10, label %cleanup, !dbg !10392

if.end10:                                         ; preds = %if.end7
  %cand = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %a, i64 0, i32 0, !dbg !10393
  %4 = load %struct.iv_cand*, %struct.iv_cand** %cand, align 8, !dbg !10393
  %cost11 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %4, i64 0, i32 7, !dbg !10395
  %5 = load i32, i32* %cost11, align 8, !dbg !10395
  %cand12 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %b, i64 0, i32 0, !dbg !10396
  %6 = load %struct.iv_cand*, %struct.iv_cand** %cand12, align 8, !dbg !10396
  %cost13 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %6, i64 0, i32 7, !dbg !10397
  %7 = load i32, i32* %cost13, align 8, !dbg !10397
  %cmp14 = icmp ult i32 %5, %7, !dbg !10398
  %. = zext i1 %cmp14 to i8, !dbg !10377
  br label %cleanup, !dbg !10377

cleanup:                                          ; preds = %if.end7, %if.end, %entry, %if.end10, %if.end3
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %if.end ], [ 1, %if.end3 ], [ 0, %if.end7 ], [ %., %if.end10 ], !dbg !10377
  ret i8 %retval.0, !dbg !10399
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @iv_ca_set_remove_invariants(%struct.iv_ca* %ivs, %struct.bitmap_head_def* %invs) unnamed_addr #5 !dbg !10400 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %iid = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !10404, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %invs, metadata !10405, metadata !DIExpression()), !dbg !10408
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !10409
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !10409
  %1 = bitcast i32* %iid to i8*, !dbg !10410
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !10410
  %tobool = icmp eq %struct.bitmap_head_def* %invs, null, !dbg !10411
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10413

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10406, metadata !DIExpression(DW_OP_deref)), !dbg !10408
  call void @llvm.dbg.value(metadata i32* %iid, metadata !10407, metadata !DIExpression(DW_OP_deref)), !dbg !10408
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %invs, i32 0, i32* nonnull %iid) #7, !dbg !10414
  %n_invariant_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 9, !dbg !10416
  %n_regs = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 6, !dbg !10419
  br label %for.cond, !dbg !10414

for.cond:                                         ; preds = %for.inc, %if.end
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10406, metadata !DIExpression(DW_OP_deref)), !dbg !10408
  call void @llvm.dbg.value(metadata i32* %iid, metadata !10407, metadata !DIExpression(DW_OP_deref)), !dbg !10408
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %iid) #7, !dbg !10421
  %tobool1 = icmp eq i8 %call, 0, !dbg !10414
  br i1 %tobool1, label %cleanup.loopexit, label %for.body, !dbg !10414

for.body:                                         ; preds = %for.cond
  %2 = load i32*, i32** %n_invariant_uses, align 8, !dbg !10422
  %3 = load i32, i32* %iid, align 4, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %3, metadata !10407, metadata !DIExpression()), !dbg !10408
  %idxprom = zext i32 %3 to i64, !dbg !10424
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !10424
  %4 = load i32, i32* %arrayidx, align 4, !dbg !10425
  %dec = add i32 %4, -1, !dbg !10425
  store i32 %dec, i32* %arrayidx, align 4, !dbg !10425
  %5 = load i32*, i32** %n_invariant_uses, align 8, !dbg !10426
  %6 = load i32, i32* %iid, align 4, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %6, metadata !10407, metadata !DIExpression()), !dbg !10408
  %idxprom3 = zext i32 %6 to i64, !dbg !10428
  %arrayidx4 = getelementptr inbounds i32, i32* %5, i64 %idxprom3, !dbg !10428
  %7 = load i32, i32* %arrayidx4, align 4, !dbg !10428
  %cmp = icmp eq i32 %7, 0, !dbg !10429
  br i1 %cmp, label %if.then5, label %for.inc, !dbg !10430

if.then5:                                         ; preds = %for.body
  %8 = load i32, i32* %n_regs, align 4, !dbg !10431
  %dec6 = add i32 %8, -1, !dbg !10431
  store i32 %dec6, i32* %n_regs, align 4, !dbg !10431
  br label %for.inc, !dbg !10432

for.inc:                                          ; preds = %for.body, %if.then5
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10406, metadata !DIExpression(DW_OP_deref)), !dbg !10408
  call void @llvm.dbg.value(metadata i32* %iid, metadata !10407, metadata !DIExpression(DW_OP_deref)), !dbg !10408
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %iid) #7, !dbg !10421
  br label %for.cond, !dbg !10421, !llvm.loop !10433

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !10435

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !10435
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !10435
  ret void, !dbg !10435
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @sub_costs(i64 %cost1.coerce, i64 %cost2.coerce) unnamed_addr #5 !dbg !10436 {
entry:
  %cost1 = alloca i64, align 8
  %tmpcast = bitcast i64* %cost1 to %struct.comp_cost*
  %0 = trunc i64 %cost2.coerce to i32, !dbg !10440
  %cost3 = bitcast i64* %cost1 to i32*, !dbg !10441
  %1 = trunc i64 %cost1.coerce to i32, !dbg !10442
  %sub = sub nsw i32 %1, %0, !dbg !10442
  store i32 %sub, i32* %cost3, align 8, !dbg !10442
  %2 = lshr i64 %cost2.coerce, 32, !dbg !10443
  %3 = trunc i64 %2 to i32, !dbg !10443
  %complexity4 = getelementptr inbounds %struct.comp_cost, %struct.comp_cost* %tmpcast, i64 0, i32 1, !dbg !10444
  %4 = lshr i64 %cost1.coerce, 32, !dbg !10445
  %5 = trunc i64 %4 to i32, !dbg !10445
  %sub5 = sub i32 %5, %3, !dbg !10445
  store i32 %sub5, i32* %complexity4, align 4, !dbg !10445
  %6 = load i64, i64* %cost1, align 8, !dbg !10446
  ret i64 %6, !dbg !10447
}

; Function Attrs: nounwind uwtable
define internal fastcc void @iv_ca_recount_cost(%struct.ivopts_data* %data, %struct.iv_ca* %ivs) unnamed_addr #5 !dbg !10448 {
entry:
  %cost = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !10450, metadata !DIExpression()), !dbg !10453
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !10451, metadata !DIExpression()), !dbg !10453
  %0 = bitcast i64* %cost to i8*, !dbg !10454
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10454
  %cand_use_cost = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 7, !dbg !10455
  %1 = bitcast %struct.comp_cost* %cand_use_cost to i64*, !dbg !10455
  %2 = load i64, i64* %1, align 8, !dbg !10455
  store i64 %2, i64* %cost, align 8, !dbg !10455
  %cand_cost = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 8, !dbg !10456
  %3 = load i32, i32* %cand_cost, align 8, !dbg !10456
  %cost1 = bitcast i64* %cost to i32*, !dbg !10457
  %4 = trunc i64 %2 to i32, !dbg !10458
  %add = add i32 %3, %4, !dbg !10458
  %n_regs = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 6, !dbg !10459
  %5 = load i32, i32* %n_regs, align 4, !dbg !10459
  %call = tail call fastcc i32 @ivopts_global_cost_for_size(%struct.ivopts_data* %data, i32 %5) #7, !dbg !10460
  %add3 = add i32 %add, %call, !dbg !10461
  store i32 %add3, i32* %cost1, align 8, !dbg !10461
  %cost4 = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 10, !dbg !10462
  %6 = bitcast %struct.comp_cost* %cost4 to i64*, !dbg !10463
  %7 = load i64, i64* %cost, align 8, !dbg !10463
  store i64 %7, i64* %6, align 8, !dbg !10463
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10464
  ret void, !dbg !10464
}

; Function Attrs: nounwind uwtable
define internal fastcc void @iv_ca_set_add_invariants(%struct.iv_ca* %ivs, %struct.bitmap_head_def* %invs) unnamed_addr #5 !dbg !10465 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %iid = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !10467, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %invs, metadata !10468, metadata !DIExpression()), !dbg !10471
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !10472
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !10472
  %1 = bitcast i32* %iid to i8*, !dbg !10473
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !10473
  %tobool = icmp eq %struct.bitmap_head_def* %invs, null, !dbg !10474
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10476

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10469, metadata !DIExpression(DW_OP_deref)), !dbg !10471
  call void @llvm.dbg.value(metadata i32* %iid, metadata !10470, metadata !DIExpression(DW_OP_deref)), !dbg !10471
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %invs, i32 0, i32* nonnull %iid) #7, !dbg !10477
  %n_invariant_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 9, !dbg !10479
  %n_regs = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 6, !dbg !10482
  br label %for.cond, !dbg !10477

for.cond:                                         ; preds = %for.inc, %if.end
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10469, metadata !DIExpression(DW_OP_deref)), !dbg !10471
  call void @llvm.dbg.value(metadata i32* %iid, metadata !10470, metadata !DIExpression(DW_OP_deref)), !dbg !10471
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %iid) #7, !dbg !10484
  %tobool1 = icmp eq i8 %call, 0, !dbg !10477
  br i1 %tobool1, label %cleanup.loopexit, label %for.body, !dbg !10477

for.body:                                         ; preds = %for.cond
  %2 = load i32*, i32** %n_invariant_uses, align 8, !dbg !10485
  %3 = load i32, i32* %iid, align 4, !dbg !10486
  call void @llvm.dbg.value(metadata i32 %3, metadata !10470, metadata !DIExpression()), !dbg !10471
  %idxprom = zext i32 %3 to i64, !dbg !10487
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !10487
  %4 = load i32, i32* %arrayidx, align 4, !dbg !10488
  %inc = add i32 %4, 1, !dbg !10488
  store i32 %inc, i32* %arrayidx, align 4, !dbg !10488
  %5 = load i32*, i32** %n_invariant_uses, align 8, !dbg !10489
  %6 = load i32, i32* %iid, align 4, !dbg !10490
  call void @llvm.dbg.value(metadata i32 %6, metadata !10470, metadata !DIExpression()), !dbg !10471
  %idxprom3 = zext i32 %6 to i64, !dbg !10491
  %arrayidx4 = getelementptr inbounds i32, i32* %5, i64 %idxprom3, !dbg !10491
  %7 = load i32, i32* %arrayidx4, align 4, !dbg !10491
  %cmp = icmp eq i32 %7, 1, !dbg !10492
  br i1 %cmp, label %if.then5, label %for.inc, !dbg !10493

if.then5:                                         ; preds = %for.body
  %8 = load i32, i32* %n_regs, align 4, !dbg !10494
  %inc6 = add i32 %8, 1, !dbg !10494
  store i32 %inc6, i32* %n_regs, align 4, !dbg !10494
  br label %for.inc, !dbg !10495

for.inc:                                          ; preds = %for.body, %if.then5
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10469, metadata !DIExpression(DW_OP_deref)), !dbg !10471
  call void @llvm.dbg.value(metadata i32* %iid, metadata !10470, metadata !DIExpression(DW_OP_deref)), !dbg !10471
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %iid) #7, !dbg !10484
  br label %for.cond, !dbg !10484, !llvm.loop !10496

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !10498

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !10498
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !10498
  ret void, !dbg !10498
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @iv_ca_has_deps(%struct.iv_ca* %ivs, %struct.cost_pair* %cp) unnamed_addr #5 !dbg !10499 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !10503, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.value(metadata %struct.cost_pair* %cp, metadata !10504, metadata !DIExpression()), !dbg !10507
  %0 = bitcast i32* %i to i8*, !dbg !10508
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !10508
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !10509
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !10509
  %depends_on = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %cp, i64 0, i32 2, !dbg !10510
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %depends_on, align 8, !dbg !10510
  %tobool = icmp eq %struct.bitmap_head_def* %2, null, !dbg !10512
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10513

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !10505, metadata !DIExpression(DW_OP_deref)), !dbg !10507
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10506, metadata !DIExpression(DW_OP_deref)), !dbg !10507
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %2, i32 0, i32* nonnull %i) #7, !dbg !10514
  %n_invariant_uses = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 9, !dbg !10516
  br label %for.cond, !dbg !10514

for.cond:                                         ; preds = %for.inc, %if.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !10505, metadata !DIExpression(DW_OP_deref)), !dbg !10507
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10506, metadata !DIExpression(DW_OP_deref)), !dbg !10507
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !10520
  %tobool2 = icmp eq i8 %call, 0, !dbg !10514
  br i1 %tobool2, label %cleanup.loopexit, label %for.body, !dbg !10514

for.body:                                         ; preds = %for.cond
  %3 = load i32*, i32** %n_invariant_uses, align 8, !dbg !10516
  %4 = load i32, i32* %i, align 4, !dbg !10521
  call void @llvm.dbg.value(metadata i32 %4, metadata !10505, metadata !DIExpression()), !dbg !10507
  %idxprom = zext i32 %4 to i64, !dbg !10522
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !10522
  %5 = load i32, i32* %arrayidx, align 4, !dbg !10522
  %cmp = icmp eq i32 %5, 0, !dbg !10523
  br i1 %cmp, label %cleanup.loopexit, label %for.inc, !dbg !10524

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32* %i, metadata !10505, metadata !DIExpression(DW_OP_deref)), !dbg !10507
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10506, metadata !DIExpression(DW_OP_deref)), !dbg !10507
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !10520
  br label %for.cond, !dbg !10520, !llvm.loop !10525

cleanup.loopexit:                                 ; preds = %for.body, %for.cond
  %retval.0.ph = phi i8 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup, !dbg !10527

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !10507
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !10527
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !10527
  ret i8 %retval.0, !dbg !10527
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @iv_ca_n_cands(%struct.iv_ca* %ivs) unnamed_addr #5 !dbg !10528 {
entry:
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !10532, metadata !DIExpression()), !dbg !10533
  %n_cands = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 5, !dbg !10534
  %0 = load i32, i32* %n_cands, align 8, !dbg !10534
  ret i32 %0, !dbg !10535
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.iv_ca_delta* @iv_ca_delta_reverse(%struct.iv_ca_delta* %delta) unnamed_addr #5 !dbg !10536 {
entry:
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %delta, metadata !10540, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* null, metadata !10543, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %delta, metadata !10541, metadata !DIExpression()), !dbg !10545
  br label %for.cond, !dbg !10546

for.cond:                                         ; preds = %for.body, %entry
  %act.0 = phi %struct.iv_ca_delta* [ %delta, %entry ], [ %0, %for.body ], !dbg !10548
  %prev.0 = phi %struct.iv_ca_delta* [ null, %entry ], [ %act.0, %for.body ], !dbg !10545
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %prev.0, metadata !10543, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %act.0, metadata !10541, metadata !DIExpression()), !dbg !10545
  %tobool = icmp eq %struct.iv_ca_delta* %act.0, null, !dbg !10549
  br i1 %tobool, label %for.end, label %for.body, !dbg !10549

for.body:                                         ; preds = %for.cond
  %next_change = getelementptr inbounds %struct.iv_ca_delta, %struct.iv_ca_delta* %act.0, i64 0, i32 3, !dbg !10550
  %0 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %next_change, align 8, !dbg !10550
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %0, metadata !10542, metadata !DIExpression()), !dbg !10545
  store %struct.iv_ca_delta* %prev.0, %struct.iv_ca_delta** %next_change, align 8, !dbg !10553
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %act.0, metadata !10543, metadata !DIExpression()), !dbg !10545
  %old_cp = getelementptr inbounds %struct.iv_ca_delta, %struct.iv_ca_delta* %act.0, i64 0, i32 1, !dbg !10554
  %1 = bitcast %struct.cost_pair** %old_cp to i64*, !dbg !10554
  %2 = load i64, i64* %1, align 8, !dbg !10554
  %new_cp = getelementptr inbounds %struct.iv_ca_delta, %struct.iv_ca_delta* %act.0, i64 0, i32 2, !dbg !10555
  %3 = bitcast %struct.cost_pair** %new_cp to i64*, !dbg !10555
  %4 = load i64, i64* %3, align 8, !dbg !10555
  store i64 %4, i64* %1, align 8, !dbg !10556
  store i64 %2, i64* %3, align 8, !dbg !10557
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %0, metadata !10541, metadata !DIExpression()), !dbg !10545
  br label %for.cond, !dbg !10558, !llvm.loop !10559

for.end:                                          ; preds = %for.cond
  %prev.0.lcssa = phi %struct.iv_ca_delta* [ %prev.0, %for.cond ], !dbg !10545
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %prev.0.lcssa, metadata !10543, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %prev.0.lcssa, metadata !10543, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %prev.0.lcssa, metadata !10543, metadata !DIExpression()), !dbg !10545
  ret %struct.iv_ca_delta* %prev.0.lcssa, !dbg !10561
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @iv_ca_prune(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_cand* %except_cand, %struct.iv_ca_delta** %delta) unnamed_addr #5 !dbg !10562 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %act_delta = alloca %struct.iv_ca_delta*, align 8
  %best_delta = alloca %struct.iv_ca_delta*, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !10566, metadata !DIExpression()), !dbg !10577
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !10567, metadata !DIExpression()), !dbg !10577
  call void @llvm.dbg.value(metadata %struct.iv_cand* %except_cand, metadata !10568, metadata !DIExpression()), !dbg !10577
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %delta, metadata !10569, metadata !DIExpression()), !dbg !10577
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !10578
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !10578
  %1 = bitcast %struct.iv_ca_delta** %act_delta to i8*, !dbg !10579
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10579
  %2 = bitcast %struct.iv_ca_delta** %best_delta to i8*, !dbg !10579
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !10579
  %3 = bitcast i32* %i to i8*, !dbg !10580
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !10580
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* null, metadata !10572, metadata !DIExpression()), !dbg !10577
  store %struct.iv_ca_delta* null, %struct.iv_ca_delta** %best_delta, align 8, !dbg !10581
  %call = tail call fastcc i64 @iv_ca_cost(%struct.iv_ca* %ivs) #7, !dbg !10582
  %cands = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 4, !dbg !10583
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cands, align 8, !dbg !10583
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10570, metadata !DIExpression(DW_OP_deref)), !dbg !10577
  call void @llvm.dbg.value(metadata i32* %i, metadata !10573, metadata !DIExpression(DW_OP_deref)), !dbg !10577
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %4, i32 0, i32* nonnull %i) #7, !dbg !10583
  %5 = bitcast %struct.iv_ca_delta** %act_delta to i64*, !dbg !10585
  %6 = bitcast %struct.iv_ca_delta** %best_delta to i64*, !dbg !10585
  br label %for.cond, !dbg !10583

for.cond:                                         ; preds = %for.inc, %entry
  %call44 = phi i64 [ %call43, %for.inc ], [ %call, %entry ]
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10570, metadata !DIExpression(DW_OP_deref)), !dbg !10577
  call void @llvm.dbg.value(metadata i32* %i, metadata !10573, metadata !DIExpression(DW_OP_deref)), !dbg !10577
  %call1 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !10590
  %tobool = icmp eq i8 %call1, 0, !dbg !10583
  br i1 %tobool, label %for.end, label %for.body, !dbg !10583

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !10591
  call void @llvm.dbg.value(metadata i32 %7, metadata !10573, metadata !DIExpression()), !dbg !10577
  %call2 = call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %7) #7, !dbg !10592
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call2, metadata !10576, metadata !DIExpression()), !dbg !10577
  %cmp = icmp eq %struct.iv_cand* %call2, %except_cand, !dbg !10593
  br i1 %cmp, label %for.inc, label %if.end, !dbg !10595

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %act_delta, metadata !10571, metadata !DIExpression(DW_OP_deref)), !dbg !10577
  %call4 = call fastcc i64 @iv_ca_narrow(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_cand* %call2, %struct.iv_ca_delta** nonnull %act_delta) #7, !dbg !10596
  %call5 = call fastcc i32 @compare_costs(i64 %call4, i64 %call44) #7, !dbg !10597
  %cmp6 = icmp slt i32 %call5, 0, !dbg !10598
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !10599

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %best_delta, metadata !10572, metadata !DIExpression(DW_OP_deref)), !dbg !10577
  call fastcc void @iv_ca_delta_free(%struct.iv_ca_delta** nonnull %best_delta) #7, !dbg !10600
  %8 = load i64, i64* %5, align 8, !dbg !10601
  store i64 %8, i64* %6, align 8, !dbg !10602
  br label %for.inc, !dbg !10603

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %act_delta, metadata !10571, metadata !DIExpression(DW_OP_deref)), !dbg !10577
  call fastcc void @iv_ca_delta_free(%struct.iv_ca_delta** nonnull %act_delta) #7, !dbg !10604
  br label %for.inc

for.inc:                                          ; preds = %if.then7, %if.else, %for.body
  %call43 = phi i64 [ %call4, %if.then7 ], [ %call44, %if.else ], [ %call44, %for.body ]
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10570, metadata !DIExpression(DW_OP_deref)), !dbg !10577
  call void @llvm.dbg.value(metadata i32* %i, metadata !10573, metadata !DIExpression(DW_OP_deref)), !dbg !10577
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !10590
  br label %for.cond, !dbg !10590, !llvm.loop !10605

for.end:                                          ; preds = %for.cond
  %call44.lcssa = phi i64 [ %call44, %for.cond ]
  %9 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %best_delta, align 8, !dbg !10607
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %9, metadata !10572, metadata !DIExpression()), !dbg !10577
  %tobool9 = icmp eq %struct.iv_ca_delta* %9, null, !dbg !10607
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !10609

if.then10:                                        ; preds = %for.end
  br label %cleanup, !dbg !10610

if.end11:                                         ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %9, metadata !10572, metadata !DIExpression()), !dbg !10577
  call fastcc void @iv_ca_delta_commit(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_ca_delta* nonnull %9, i8 zeroext 1) #7, !dbg !10612
  %call13 = call fastcc i64 @iv_ca_prune(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_cand* %except_cand, %struct.iv_ca_delta** %delta) #7, !dbg !10613
  %10 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %best_delta, align 8, !dbg !10614
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %10, metadata !10572, metadata !DIExpression()), !dbg !10577
  call fastcc void @iv_ca_delta_commit(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_ca_delta* %10, i8 zeroext 0) #7, !dbg !10615
  %11 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %best_delta, align 8, !dbg !10616
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %11, metadata !10572, metadata !DIExpression()), !dbg !10577
  %12 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %delta, align 8, !dbg !10617
  %call14 = call fastcc %struct.iv_ca_delta* @iv_ca_delta_join(%struct.iv_ca_delta* %11, %struct.iv_ca_delta* %12) #7, !dbg !10618
  br label %cleanup, !dbg !10619

cleanup:                                          ; preds = %if.end11, %if.then10
  %13 = phi i64 [ %call44.lcssa, %if.then10 ], [ %call13, %if.end11 ], !dbg !10620
  %storemerge = phi %struct.iv_ca_delta* [ null, %if.then10 ], [ %call14, %if.end11 ], !dbg !10577
  store %struct.iv_ca_delta* %storemerge, %struct.iv_ca_delta** %delta, align 8, !dbg !10577
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !10620
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !10620
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10620
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !10620
  ret i64 %13, !dbg !10620
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.iv_ca_delta* @iv_ca_delta_join(%struct.iv_ca_delta* %l1, %struct.iv_ca_delta* %l2) unnamed_addr #5 !dbg !10621 {
entry:
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %l1, metadata !10625, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %l2, metadata !10626, metadata !DIExpression()), !dbg !10628
  %tobool = icmp eq %struct.iv_ca_delta* %l2, null, !dbg !10629
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10631

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq %struct.iv_ca_delta* %l1, null, !dbg !10632
  br i1 %tobool1, label %cleanup, label %for.cond.preheader, !dbg !10634

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !10635

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %last.0 = phi %struct.iv_ca_delta* [ %0, %for.inc ], [ %l1, %for.cond.preheader ], !dbg !10637
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %last.0, metadata !10627, metadata !DIExpression()), !dbg !10628
  %next_change = getelementptr inbounds %struct.iv_ca_delta, %struct.iv_ca_delta* %last.0, i64 0, i32 3, !dbg !10638
  %0 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %next_change, align 8, !dbg !10638
  %tobool4 = icmp eq %struct.iv_ca_delta* %0, null, !dbg !10635
  br i1 %tobool4, label %for.end, label %for.inc, !dbg !10635

for.inc:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta* %0, metadata !10627, metadata !DIExpression()), !dbg !10628
  br label %for.cond, !dbg !10640, !llvm.loop !10641

for.end:                                          ; preds = %for.cond
  %next_change.lcssa = phi %struct.iv_ca_delta** [ %next_change, %for.cond ], !dbg !10638
  store %struct.iv_ca_delta* %l2, %struct.iv_ca_delta** %next_change.lcssa, align 8, !dbg !10643
  br label %cleanup, !dbg !10644

cleanup:                                          ; preds = %if.end, %entry, %for.end
  %retval.0 = phi %struct.iv_ca_delta* [ %l1, %for.end ], [ %l1, %entry ], [ %l2, %if.end ], !dbg !10628
  ret %struct.iv_ca_delta* %retval.0, !dbg !10645
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @iv_ca_narrow(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_cand* %cand, %struct.iv_ca_delta** %delta) unnamed_addr #5 !dbg !10646 {
entry:
  %ci = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !10648, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.iv_ca* %ivs, metadata !10649, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !10650, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.iv_ca_delta** %delta, metadata !10651, metadata !DIExpression()), !dbg !10661
  %0 = bitcast i32* %ci to i8*, !dbg !10662
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !10662
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !10663
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !10663
  store %struct.iv_ca_delta* null, %struct.iv_ca_delta** %delta, align 8, !dbg !10664
  call void @llvm.dbg.value(metadata i32 0, metadata !10652, metadata !DIExpression()), !dbg !10661
  %consider_all_candidates = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 10, !dbg !10665
  %cands = getelementptr inbounds %struct.iv_ca, %struct.iv_ca* %ivs, i64 0, i32 4, !dbg !10670
  %id = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 0, !dbg !10673
  br label %for.cond, !dbg !10677

for.cond:                                         ; preds = %for.inc55, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc55 ], !dbg !10678
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10652, metadata !DIExpression()), !dbg !10661
  %call = call fastcc i32 @n_iv_uses(%struct.ivopts_data* %data) #7, !dbg !10679
  %cmp = icmp ult i32 %i.0, %call, !dbg !10680
  br i1 %cmp, label %for.body, label %for.end56, !dbg !10681

for.body:                                         ; preds = %for.cond
  %call1 = call fastcc %struct.iv_use* @iv_use(%struct.ivopts_data* %data, i32 %i.0) #7, !dbg !10682
  call void @llvm.dbg.value(metadata %struct.iv_use* %call1, metadata !10654, metadata !DIExpression()), !dbg !10661
  %call2 = call fastcc %struct.cost_pair* @iv_ca_cand_for_use(%struct.iv_ca* %ivs, %struct.iv_use* %call1) #7, !dbg !10683
  call void @llvm.dbg.value(metadata %struct.cost_pair* %call2, metadata !10655, metadata !DIExpression()), !dbg !10661
  %cand3 = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %call2, i64 0, i32 0, !dbg !10684
  %2 = load %struct.iv_cand*, %struct.iv_cand** %cand3, align 8, !dbg !10684
  %cmp4 = icmp eq %struct.iv_cand* %2, %cand, !dbg !10686
  br i1 %cmp4, label %if.end, label %for.inc55, !dbg !10687

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.cost_pair* null, metadata !10656, metadata !DIExpression()), !dbg !10661
  %3 = load i8, i8* %consider_all_candidates, align 4, !dbg !10688
  %tobool = icmp eq i8 %3, 0, !dbg !10689
  br i1 %tobool, label %if.else, label %if.then5, !dbg !10690

if.then5:                                         ; preds = %if.end
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cands, align 8, !dbg !10691
  call void @llvm.dbg.value(metadata i32* %ci, metadata !10653, metadata !DIExpression(DW_OP_deref)), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10658, metadata !DIExpression(DW_OP_deref)), !dbg !10661
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %4, i32 0, i32* nonnull %ci) #7, !dbg !10691
  br label %for.cond6, !dbg !10691

for.cond6:                                        ; preds = %for.inc, %if.then5
  %new_cp.0 = phi %struct.cost_pair* [ null, %if.then5 ], [ %new_cp.1, %for.inc ], !dbg !10692
  call void @llvm.dbg.value(metadata %struct.cost_pair* %new_cp.0, metadata !10656, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata i32* %ci, metadata !10653, metadata !DIExpression(DW_OP_deref)), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10658, metadata !DIExpression(DW_OP_deref)), !dbg !10661
  %call7 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %ci) #7, !dbg !10693
  %tobool8 = icmp eq i8 %call7, 0, !dbg !10691
  br i1 %tobool8, label %if.end50.loopexit2, label %for.body9, !dbg !10691

for.body9:                                        ; preds = %for.cond6
  %5 = load i32, i32* %ci, align 4, !dbg !10694
  call void @llvm.dbg.value(metadata i32 %5, metadata !10653, metadata !DIExpression()), !dbg !10661
  %6 = load i32, i32* %id, align 8, !dbg !10695
  %cmp10 = icmp eq i32 %5, %6, !dbg !10696
  br i1 %cmp10, label %for.inc, label %if.end12, !dbg !10697

if.end12:                                         ; preds = %for.body9
  call void @llvm.dbg.value(metadata i32 %5, metadata !10653, metadata !DIExpression()), !dbg !10661
  %call13 = call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %5) #7, !dbg !10698
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call13, metadata !10659, metadata !DIExpression()), !dbg !10661
  %call14 = call fastcc %struct.cost_pair* @get_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %call1, %struct.iv_cand* %call13) #7, !dbg !10699
  call void @llvm.dbg.value(metadata %struct.cost_pair* %call14, metadata !10657, metadata !DIExpression()), !dbg !10661
  %tobool15 = icmp eq %struct.cost_pair* %call14, null, !dbg !10700
  br i1 %tobool15, label %for.inc, label %if.end17, !dbg !10702

if.end17:                                         ; preds = %if.end12
  %call18 = call fastcc zeroext i8 @iv_ca_has_deps(%struct.iv_ca* %ivs, %struct.cost_pair* nonnull %call14) #7, !dbg !10703
  %tobool19 = icmp eq i8 %call18, 0, !dbg !10703
  br i1 %tobool19, label %for.inc, label %if.end21, !dbg !10705

if.end21:                                         ; preds = %if.end17
  %call22 = call fastcc zeroext i8 @cheaper_cost_pair(%struct.cost_pair* nonnull %call14, %struct.cost_pair* %new_cp.0) #7, !dbg !10706
  %tobool23 = icmp eq i8 %call22, 0, !dbg !10706
  %call14.new_cp.0 = select i1 %tobool23, %struct.cost_pair* %new_cp.0, %struct.cost_pair* %call14, !dbg !10708
  br label %for.inc, !dbg !10708

for.inc:                                          ; preds = %if.end17, %if.end12, %if.end21, %for.body9
  %new_cp.1 = phi %struct.cost_pair* [ %new_cp.0, %for.body9 ], [ %new_cp.0, %if.end12 ], [ %new_cp.0, %if.end17 ], [ %call14.new_cp.0, %if.end21 ], !dbg !10709
  call void @llvm.dbg.value(metadata %struct.cost_pair* %new_cp.1, metadata !10656, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata i32* %ci, metadata !10653, metadata !DIExpression(DW_OP_deref)), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10658, metadata !DIExpression(DW_OP_deref)), !dbg !10661
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %ci) #7, !dbg !10693
  br label %for.cond6, !dbg !10693, !llvm.loop !10710

if.else:                                          ; preds = %if.end
  %related_cands = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call1, i64 0, i32 5, !dbg !10712
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %related_cands, align 8, !dbg !10712
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cands, align 8, !dbg !10712
  call void @llvm.dbg.value(metadata i32* %ci, metadata !10653, metadata !DIExpression(DW_OP_deref)), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10658, metadata !DIExpression(DW_OP_deref)), !dbg !10661
  call fastcc void @bmp_iter_and_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %7, %struct.bitmap_head_def* %8, i32 0, i32* nonnull %ci) #7, !dbg !10712
  br label %for.cond27, !dbg !10712

for.cond27:                                       ; preds = %for.inc48, %if.else
  %new_cp.2 = phi %struct.cost_pair* [ null, %if.else ], [ %new_cp.3, %for.inc48 ], !dbg !10692
  call void @llvm.dbg.value(metadata %struct.cost_pair* %new_cp.2, metadata !10656, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata i32* %ci, metadata !10653, metadata !DIExpression(DW_OP_deref)), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10658, metadata !DIExpression(DW_OP_deref)), !dbg !10661
  %call28 = call fastcc zeroext i8 @bmp_iter_and(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %ci) #7, !dbg !10715
  %tobool29 = icmp eq i8 %call28, 0, !dbg !10712
  br i1 %tobool29, label %if.end50.loopexit, label %for.body30, !dbg !10712

for.body30:                                       ; preds = %for.cond27
  %9 = load i32, i32* %ci, align 4, !dbg !10717
  call void @llvm.dbg.value(metadata i32 %9, metadata !10653, metadata !DIExpression()), !dbg !10661
  %10 = load i32, i32* %id, align 8, !dbg !10720
  %cmp32 = icmp eq i32 %9, %10, !dbg !10721
  br i1 %cmp32, label %for.inc48, label %if.end34, !dbg !10722

if.end34:                                         ; preds = %for.body30
  call void @llvm.dbg.value(metadata i32 %9, metadata !10653, metadata !DIExpression()), !dbg !10661
  %call35 = call fastcc %struct.iv_cand* @iv_cand(%struct.ivopts_data* %data, i32 %9) #7, !dbg !10723
  call void @llvm.dbg.value(metadata %struct.iv_cand* %call35, metadata !10659, metadata !DIExpression()), !dbg !10661
  %call36 = call fastcc %struct.cost_pair* @get_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %call1, %struct.iv_cand* %call35) #7, !dbg !10724
  call void @llvm.dbg.value(metadata %struct.cost_pair* %call36, metadata !10657, metadata !DIExpression()), !dbg !10661
  %tobool37 = icmp eq %struct.cost_pair* %call36, null, !dbg !10725
  br i1 %tobool37, label %for.inc48, label %if.end39, !dbg !10727

if.end39:                                         ; preds = %if.end34
  %call40 = call fastcc zeroext i8 @iv_ca_has_deps(%struct.iv_ca* %ivs, %struct.cost_pair* nonnull %call36) #7, !dbg !10728
  %tobool41 = icmp eq i8 %call40, 0, !dbg !10728
  br i1 %tobool41, label %for.inc48, label %if.end43, !dbg !10730

if.end43:                                         ; preds = %if.end39
  %call44 = call fastcc zeroext i8 @cheaper_cost_pair(%struct.cost_pair* nonnull %call36, %struct.cost_pair* %new_cp.2) #7, !dbg !10731
  %tobool45 = icmp eq i8 %call44, 0, !dbg !10731
  %call36.new_cp.2 = select i1 %tobool45, %struct.cost_pair* %new_cp.2, %struct.cost_pair* %call36, !dbg !10733
  br label %for.inc48, !dbg !10733

for.inc48:                                        ; preds = %if.end39, %if.end34, %if.end43, %for.body30
  %new_cp.3 = phi %struct.cost_pair* [ %new_cp.2, %for.body30 ], [ %new_cp.2, %if.end34 ], [ %new_cp.2, %if.end39 ], [ %call36.new_cp.2, %if.end43 ], !dbg !10709
  call void @llvm.dbg.value(metadata %struct.cost_pair* %new_cp.3, metadata !10656, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata i32* %ci, metadata !10653, metadata !DIExpression(DW_OP_deref)), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10658, metadata !DIExpression(DW_OP_deref)), !dbg !10661
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %ci) #7, !dbg !10715
  br label %for.cond27, !dbg !10715, !llvm.loop !10734

if.end50.loopexit:                                ; preds = %for.cond27
  %new_cp.2.lcssa = phi %struct.cost_pair* [ %new_cp.2, %for.cond27 ], !dbg !10692
  call void @llvm.dbg.value(metadata %struct.cost_pair* %new_cp.2.lcssa, metadata !10656, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.cost_pair* %new_cp.2.lcssa, metadata !10656, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.cost_pair* %new_cp.2.lcssa, metadata !10656, metadata !DIExpression()), !dbg !10661
  br label %if.end50, !dbg !10736

if.end50.loopexit2:                               ; preds = %for.cond6
  %new_cp.0.lcssa = phi %struct.cost_pair* [ %new_cp.0, %for.cond6 ], !dbg !10692
  call void @llvm.dbg.value(metadata %struct.cost_pair* %new_cp.0.lcssa, metadata !10656, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.cost_pair* %new_cp.0.lcssa, metadata !10656, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.cost_pair* %new_cp.0.lcssa, metadata !10656, metadata !DIExpression()), !dbg !10661
  br label %if.end50, !dbg !10736

if.end50:                                         ; preds = %if.end50.loopexit2, %if.end50.loopexit
  %new_cp.4 = phi %struct.cost_pair* [ %new_cp.2.lcssa, %if.end50.loopexit ], [ %new_cp.0.lcssa, %if.end50.loopexit2 ], !dbg !10692
  call void @llvm.dbg.value(metadata %struct.cost_pair* %new_cp.4, metadata !10656, metadata !DIExpression()), !dbg !10661
  %tobool51 = icmp eq %struct.cost_pair* %new_cp.4, null, !dbg !10736
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !10738

if.then52:                                        ; preds = %if.end50
  call fastcc void @iv_ca_delta_free(%struct.iv_ca_delta** %delta) #7, !dbg !10739
  br label %cleanup, !dbg !10741

if.end53:                                         ; preds = %if.end50
  %11 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %delta, align 8, !dbg !10742
  %call54 = call fastcc %struct.iv_ca_delta* @iv_ca_delta_add(%struct.iv_use* %call1, %struct.cost_pair* %call2, %struct.cost_pair* nonnull %new_cp.4, %struct.iv_ca_delta* %11) #7, !dbg !10743
  store %struct.iv_ca_delta* %call54, %struct.iv_ca_delta** %delta, align 8, !dbg !10744
  br label %for.inc55, !dbg !10745

for.inc55:                                        ; preds = %for.body, %if.end53
  %inc = add i32 %i.0, 1, !dbg !10746
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10652, metadata !DIExpression()), !dbg !10661
  br label %for.cond, !dbg !10747, !llvm.loop !10748

for.end56:                                        ; preds = %for.cond
  %12 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %delta, align 8, !dbg !10750
  call fastcc void @iv_ca_delta_commit(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_ca_delta* %12, i8 zeroext 1) #7, !dbg !10751
  %call57 = call fastcc i64 @iv_ca_cost(%struct.iv_ca* %ivs) #7, !dbg !10752
  %13 = load %struct.iv_ca_delta*, %struct.iv_ca_delta** %delta, align 8, !dbg !10753
  call fastcc void @iv_ca_delta_commit(%struct.ivopts_data* %data, %struct.iv_ca* %ivs, %struct.iv_ca_delta* %13, i8 zeroext 0) #7, !dbg !10754
  br label %cleanup, !dbg !10755

cleanup:                                          ; preds = %for.end56, %if.then52
  %storemerge = phi i64 [ 42949672970000000, %if.then52 ], [ %call57, %for.end56 ], !dbg !10661
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !10756
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !10756
  ret i64 %storemerge, !dbg !10756
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_and_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map1, %struct.bitmap_head_def* %map2, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !10757 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10761, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map1, metadata !10762, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map2, metadata !10763, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.value(metadata i32 0, metadata !10764, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !10765, metadata !DIExpression()), !dbg !10766
  %0 = bitcast %struct.bitmap_head_def* %map1 to i64*, !dbg !10767
  %1 = load i64, i64* %0, align 8, !dbg !10767
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !10768
  store i64 %1, i64* %2, align 8, !dbg !10768
  %3 = bitcast %struct.bitmap_head_def* %map2 to i64*, !dbg !10769
  %4 = load i64, i64* %3, align 8, !dbg !10769
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !10770
  %5 = bitcast %struct.bitmap_element_def** %elt2 to i64*, !dbg !10771
  store i64 %4, i64* %5, align 8, !dbg !10771
  %elt12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !10772
  %6 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !10775
  %7 = inttoptr i64 %4 to %struct.bitmap_element_def*, !dbg !10775
  %8 = inttoptr i64 %4 to i64*, !dbg !10775
  br label %while.body, !dbg !10775

while.body:                                       ; preds = %entry, %if.end6
  %tobool = icmp eq i64 %1, 0, !dbg !10776
  br i1 %tobool, label %if.then, label %if.end, !dbg !10777

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !10778
  br label %while.end, !dbg !10780

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end6, label %while.end.loopexit, !dbg !10781

if.end6:                                          ; preds = %if.end
  br label %while.body, !dbg !10775, !llvm.loop !10782

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !10784

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %9 = phi %struct.bitmap_element_def* [ %7, %while.end.loopexit ], [ null, %if.then ]
  %10 = phi %struct.bitmap_element_def* [ %7, %while.end.loopexit ], [ null, %if.then ]
  %11 = phi i64* [ %8, %while.end.loopexit ], [ null, %if.then ]
  %12 = phi %struct.bitmap_element_def* [ %7, %while.end.loopexit ], [ null, %if.then ]
  %13 = phi %struct.bitmap_element_def* [ %7, %while.end.loopexit ], [ null, %if.then ]
  br label %while.body9, !dbg !10784

while.body9:                                      ; preds = %while.end, %if.end22
  %14 = phi %struct.bitmap_element_def* [ %9, %while.end ], [ %22, %if.end22 ]
  %15 = phi %struct.bitmap_element_def* [ %10, %while.end ], [ %22, %if.end22 ]
  %16 = phi i64* [ %11, %while.end ], [ %23, %if.end22 ]
  %17 = phi %struct.bitmap_element_def* [ %12, %while.end ], [ %22, %if.end22 ]
  %18 = phi %struct.bitmap_element_def* [ %13, %while.end ], [ %22, %if.end22 ], !dbg !10785
  %tobool11 = icmp eq %struct.bitmap_element_def* %18, null, !dbg !10788
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !10789

if.then12:                                        ; preds = %while.body9
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt2, align 8, !dbg !10790
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt12, align 8, !dbg !10792
  %.pre = load i32, i32* getelementptr inbounds (%struct.bitmap_element_def, %struct.bitmap_element_def* @bitmap_zero_bits, i64 0, i32 2), align 8, !dbg !10793
  br label %while.end26, !dbg !10795

if.end15:                                         ; preds = %while.body9
  %indx17 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %17, i64 0, i32 2, !dbg !10796
  %19 = load i32, i32* %indx17, align 8, !dbg !10796
  %indx19 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !10798
  %20 = load i32, i32* %indx19, align 8, !dbg !10798
  %cmp20 = icmp ult i32 %19, %20, !dbg !10799
  br i1 %cmp20, label %if.end22, label %while.end26.loopexit, !dbg !10800

if.end22:                                         ; preds = %if.end15
  %21 = load i64, i64* %16, align 8, !dbg !10801
  store i64 %21, i64* %5, align 8, !dbg !10802
  %22 = inttoptr i64 %21 to %struct.bitmap_element_def*, !dbg !10784
  %23 = inttoptr i64 %21 to i64*, !dbg !10784
  br label %while.body9, !dbg !10784, !llvm.loop !10803

while.end26.loopexit:                             ; preds = %if.end15
  %.lcssa11 = phi i32 [ %20, %if.end15 ], !dbg !10798
  %.lcssa10 = phi %struct.bitmap_element_def* [ %14, %if.end15 ]
  %.lcssa8 = phi %struct.bitmap_element_def* [ %15, %if.end15 ]
  %indx30.phi.trans.insert = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %.lcssa8, i64 0, i32 2, !dbg !10805
  %.pre2 = load i32, i32* %indx30.phi.trans.insert, align 8, !dbg !10806
  br label %while.end26, !dbg !10807

while.end26:                                      ; preds = %while.end26.loopexit, %if.then12
  %24 = phi i32 [ %.pre2, %while.end26.loopexit ], [ %.pre, %if.then12 ], !dbg !10806
  %25 = phi i32 [ %.lcssa11, %while.end26.loopexit ], [ %.pre, %if.then12 ], !dbg !10793
  %26 = phi %struct.bitmap_element_def* [ %.lcssa10, %while.end26.loopexit ], [ @bitmap_zero_bits, %if.then12 ]
  %27 = phi %struct.bitmap_element_def* [ %6, %while.end26.loopexit ], [ @bitmap_zero_bits, %if.then12 ]
  %cmp31 = icmp eq i32 %25, %24, !dbg !10808
  br i1 %cmp31, label %if.then32, label %if.else, !dbg !10809

if.then32:                                        ; preds = %while.end26
  %cmp36 = icmp eq i32 %24, 0, !dbg !10810
  br i1 %cmp36, label %if.end40, label %if.then37, !dbg !10813

if.then37:                                        ; preds = %if.then32
  %mul = shl i32 %24, 7, !dbg !10814
  call void @llvm.dbg.value(metadata i32 %mul, metadata !10764, metadata !DIExpression()), !dbg !10766
  br label %if.end40, !dbg !10815

if.end40:                                         ; preds = %if.then32, %if.then37
  %start_bit.addr.0 = phi i32 [ %mul, %if.then37 ], [ 0, %if.then32 ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !10764, metadata !DIExpression()), !dbg !10766
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !10816
  store i32 0, i32* %word_no, align 8, !dbg !10817
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %27, i64 0, i32 3, i64 0, !dbg !10818
  %28 = load i64, i64* %arrayidx, align 8, !dbg !10818
  %arrayidx48 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %26, i64 0, i32 3, i64 0, !dbg !10819
  %29 = load i64, i64* %arrayidx48, align 8, !dbg !10819
  %and = and i64 %28, %29, !dbg !10820
  %bits51 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !10821
  store i64 %and, i64* %bits51, align 8, !dbg !10822
  %phitmp = icmp eq i64 %and, 0, !dbg !10823
  %phitmp7 = zext i1 %phitmp to i32, !dbg !10823
  br label %if.end54, !dbg !10823

if.else:                                          ; preds = %while.end26
  %word_no52 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !10824
  store i32 1, i32* %word_no52, align 8, !dbg !10826
  %bits53 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !10827
  store i64 0, i64* %bits53, align 8, !dbg !10828
  br label %if.end54

if.end54:                                         ; preds = %if.else, %if.end40
  %30 = phi i32 [ %phitmp7, %if.end40 ], [ 1, %if.else ]
  %start_bit.addr.1 = phi i32 [ %start_bit.addr.0, %if.end40 ], [ 0, %if.else ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.1, metadata !10764, metadata !DIExpression()), !dbg !10766
  %add = add i32 %start_bit.addr.1, %30, !dbg !10829
  call void @llvm.dbg.value(metadata i32 %add, metadata !10764, metadata !DIExpression()), !dbg !10766
  store i32 %add, i32* %bit_no, align 4, !dbg !10830
  ret void, !dbg !10831
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_and(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !10832 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10834, metadata !DIExpression()), !dbg !10839
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !10835, metadata !DIExpression()), !dbg !10839
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !10840
  %0 = load i64, i64* %bits, align 8, !dbg !10840
  %tobool = icmp eq i64 %0, 0, !dbg !10841
  br i1 %tobool, label %if.end, label %next_bit, !dbg !10842

next_bit.loopexit:                                ; preds = %while.body9
  %and16.lcssa = phi i64 [ %and16, %while.body9 ], !dbg !10843
  br label %next_bit, !dbg !10846

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %and16.lcssa, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !10836), !dbg !10847
  br label %while.cond, !dbg !10846

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !10848
  %and = and i64 %2, 1, !dbg !10849
  %tobool2 = icmp eq i64 %and, 0, !dbg !10850
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !10846

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !10851
  store i64 %shr, i64* %bits, align 8, !dbg !10851
  %3 = load i32, i32* %bit_no, align 4, !dbg !10853
  %add = add i32 %3, 1, !dbg !10853
  store i32 %add, i32* %bit_no, align 4, !dbg !10853
  %.pre = load i64, i64* %bits, align 8, !dbg !10848
  br label %while.cond, !dbg !10846, !llvm.loop !10854

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !10856
  %sub = add i32 %4, 63, !dbg !10857
  %div = and i32 %sub, -64, !dbg !10858
  store i32 %div, i32* %bit_no, align 4, !dbg !10859
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !10860
  %5 = load i32, i32* %word_no, align 8, !dbg !10861
  %inc = add i32 %5, 1, !dbg !10861
  store i32 %inc, i32* %word_no, align 8, !dbg !10861
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !10862
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !10862
  %6 = bitcast %struct.bitmap_iterator* %bi to i64**, !dbg !10863
  %7 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !10863
  %8 = bitcast %struct.bitmap_element_def** %elt2 to i64*, !dbg !10866
  br label %while.body6, !dbg !10868

while.body6:                                      ; preds = %if.end, %do.end58
  %9 = phi i32 [ %inc, %if.end ], [ 0, %do.end58 ]
  br label %while.cond7, !dbg !10869

while.cond7:                                      ; preds = %if.end21, %while.body6
  %10 = phi i32 [ %inc24, %if.end21 ], [ %9, %while.body6 ], !dbg !10870
  %cmp = icmp eq i32 %10, 2, !dbg !10871
  br i1 %cmp, label %do.body.preheader, label %while.body9, !dbg !10869

do.body.preheader:                                ; preds = %while.cond7
  %.pre3.pre = load i64*, i64** %6, align 8, !dbg !10872
  br label %do.body, !dbg !10873

while.body9:                                      ; preds = %while.cond7
  %11 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !10874
  %idxprom = zext i32 %10 to i64, !dbg !10875
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %11, i64 0, i32 3, i64 %idxprom, !dbg !10875
  %12 = load i64, i64* %arrayidx, align 8, !dbg !10875
  %13 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt2, align 8, !dbg !10876
  %arrayidx15 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %13, i64 0, i32 3, i64 %idxprom, !dbg !10877
  %14 = load i64, i64* %arrayidx15, align 8, !dbg !10877
  %and16 = and i64 %12, %14, !dbg !10843
  store i64 %and16, i64* %bits, align 8, !dbg !10878
  %tobool19 = icmp eq i64 %and16, 0, !dbg !10879
  br i1 %tobool19, label %if.end21, label %next_bit.loopexit, !dbg !10881

if.end21:                                         ; preds = %while.body9
  %15 = load i32, i32* %bit_no, align 4, !dbg !10882
  %add22 = add i32 %15, 64, !dbg !10882
  store i32 %add22, i32* %bit_no, align 4, !dbg !10882
  %16 = load i32, i32* %word_no, align 8, !dbg !10883
  %inc24 = add i32 %16, 1, !dbg !10883
  store i32 %inc24, i32* %word_no, align 8, !dbg !10883
  br label %while.cond7, !dbg !10869, !llvm.loop !10884

do.body:                                          ; preds = %do.body.preheader, %do.cond52
  %.pre3 = phi i64* [ %.pre3.pre, %do.body.preheader ], [ %.lcssa16, %do.cond52 ], !dbg !10872
  br label %do.body26, !dbg !10886

do.body26:                                        ; preds = %do.cond, %do.body
  %17 = phi i64* [ %24, %do.cond ], [ %.pre3, %do.body ], !dbg !10872
  %18 = load i64, i64* %17, align 8, !dbg !10887
  store i64 %18, i64* %7, align 8, !dbg !10888
  %tobool30 = icmp eq i64 %18, 0, !dbg !10889
  br i1 %tobool30, label %return.loopexit2, label %do.cond, !dbg !10891

do.cond:                                          ; preds = %do.body26
  %19 = inttoptr i64 %18 to %struct.bitmap_element_def*, !dbg !10891
  %20 = inttoptr i64 %18 to i64*, !dbg !10891
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %19, i64 0, i32 2, !dbg !10892
  %21 = load i32, i32* %indx, align 8, !dbg !10892
  %22 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt2, align 8, !dbg !10893
  %indx35 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %22, i64 0, i32 2, !dbg !10894
  %23 = load i32, i32* %indx35, align 8, !dbg !10894
  %cmp36 = icmp ult i32 %21, %23, !dbg !10895
  %24 = inttoptr i64 %18 to i64*, !dbg !10896
  br i1 %cmp36, label %do.body26, label %while.cond37.preheader, !dbg !10896, !llvm.loop !10897

while.cond37.preheader:                           ; preds = %do.cond
  %.lcssa16 = phi i64* [ %20, %do.cond ], !dbg !10891
  %indx.lcssa = phi i32* [ %indx, %do.cond ], !dbg !10892
  %.lcssa15 = phi i32 [ %21, %do.cond ], !dbg !10892
  %.lcssa14 = phi %struct.bitmap_element_def* [ %22, %do.cond ], !dbg !10893
  %.lcssa = phi i32 [ %23, %do.cond ], !dbg !10894
  %25 = bitcast %struct.bitmap_element_def* %.lcssa14 to i64*, !dbg !10896
  br label %while.cond37, !dbg !10899

while.cond37:                                     ; preds = %while.body43.while.cond37_crit_edge, %while.cond37.preheader
  %26 = phi i64* [ %25, %while.cond37.preheader ], [ %30, %while.body43.while.cond37_crit_edge ]
  %27 = phi i32 [ %.lcssa15, %while.cond37.preheader ], [ %.pre5, %while.body43.while.cond37_crit_edge ], !dbg !10900
  %28 = phi i32 [ %.lcssa, %while.cond37.preheader ], [ %.pre4, %while.body43.while.cond37_crit_edge ], !dbg !10901
  %cmp42 = icmp ult i32 %28, %27, !dbg !10902
  br i1 %cmp42, label %while.body43, label %do.cond52, !dbg !10899

while.body43:                                     ; preds = %while.cond37
  %29 = load i64, i64* %26, align 8, !dbg !10903
  store i64 %29, i64* %8, align 8, !dbg !10904
  %tobool48 = icmp eq i64 %29, 0, !dbg !10905
  br i1 %tobool48, label %return.loopexit1, label %while.body43.while.cond37_crit_edge, !dbg !10907, !llvm.loop !10908

while.body43.while.cond37_crit_edge:              ; preds = %while.body43
  %30 = inttoptr i64 %29 to i64*, !dbg !10907
  %31 = inttoptr i64 %29 to %struct.bitmap_element_def*, !dbg !10907
  %indx39.phi.trans.insert = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %31, i64 0, i32 2, !dbg !10910
  %.pre4 = load i32, i32* %indx39.phi.trans.insert, align 8, !dbg !10901
  %.pre5 = load i32, i32* %indx.lcssa, align 8, !dbg !10900
  br label %while.cond37, !dbg !10907

do.cond52:                                        ; preds = %while.cond37
  %.lcssa19 = phi i32 [ %27, %while.cond37 ], !dbg !10900
  %.lcssa17 = phi i32 [ %28, %while.cond37 ], !dbg !10901
  %cmp57 = icmp eq i32 %.lcssa19, %.lcssa17, !dbg !10911
  br i1 %cmp57, label %do.end58, label %do.body, !dbg !10912, !llvm.loop !10913

do.end58:                                         ; preds = %do.cond52
  %.lcssa19.lcssa = phi i32 [ %.lcssa19, %do.cond52 ], !dbg !10900
  %mul61 = shl i32 %.lcssa19.lcssa, 7, !dbg !10915
  store i32 %mul61, i32* %bit_no, align 4, !dbg !10916
  store i32 0, i32* %word_no, align 8, !dbg !10917
  br label %while.body6, !dbg !10868, !llvm.loop !10918

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !10920

return.loopexit1:                                 ; preds = %while.body43
  br label %return, !dbg !10920

return.loopexit2:                                 ; preds = %do.body26
  br label %return, !dbg !10920

return:                                           ; preds = %return.loopexit2, %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], [ 0, %return.loopexit2 ], !dbg !10839
  ret i8 %retval.0, !dbg !10920
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_iv(%struct.ivopts_data* %data, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !10921 {
entry:
  %incr_pos = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp2 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp7 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !10923, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !10924, metadata !DIExpression()), !dbg !10928
  %0 = bitcast %struct.gimple_stmt_iterator* %incr_pos to i8*, !dbg !10929
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !10929
  call void @llvm.dbg.value(metadata i8 0, metadata !10927, metadata !DIExpression()), !dbg !10928
  %iv = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 6, !dbg !10930
  %1 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !10930
  %tobool = icmp eq %struct.iv* %1, null, !dbg !10932
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10933

if.end:                                           ; preds = %entry
  %pos = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 2, !dbg !10934
  %2 = load i32, i32* %pos, align 8, !dbg !10934
  switch i32 %2, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 3, label %sw.bb5
    i32 2, label %sw.bb6
    i32 4, label %sw.bb8
  ], !dbg !10935

sw.bb:                                            ; preds = %if.end
  %3 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !10936
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !10936
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !10938
  %4 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !10938
  %call = tail call %struct.basic_block_def* @ip_normal_pos(%struct.loop* %4) #6, !dbg !10939
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %call) #7, !dbg !10936
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !10936
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !10936
  br label %sw.epilog, !dbg !10940

sw.bb1:                                           ; preds = %if.end
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp2 to i8*, !dbg !10941
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !10941
  %current_loop3 = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !10942
  %6 = load %struct.loop*, %struct.loop** %current_loop3, align 8, !dbg !10942
  %call4 = tail call %struct.basic_block_def* @ip_end_pos(%struct.loop* %6) #6, !dbg !10943
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp2, %struct.basic_block_def* %call4) #7, !dbg !10941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !10941
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !10941
  call void @llvm.dbg.value(metadata i8 1, metadata !10927, metadata !DIExpression()), !dbg !10928
  br label %sw.epilog, !dbg !10944

sw.bb5:                                           ; preds = %if.end
  call void @llvm.dbg.value(metadata i8 1, metadata !10927, metadata !DIExpression()), !dbg !10928
  br label %sw.bb6, !dbg !10945

sw.bb6:                                           ; preds = %if.end, %sw.bb5
  %after.0 = phi i8 [ 0, %if.end ], [ 1, %sw.bb5 ], !dbg !10928
  call void @llvm.dbg.value(metadata i8 %after.0, metadata !10927, metadata !DIExpression()), !dbg !10928
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp7 to i8*, !dbg !10946
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !10946
  %incremented_at = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 3, !dbg !10947
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %incremented_at, align 8, !dbg !10947
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp7, %union.gimple_statement_d* %8) #6, !dbg !10946
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !10946
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !10946
  br label %sw.epilog, !dbg !10948

sw.bb8:                                           ; preds = %if.end
  %var_before = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 4, !dbg !10949
  %9 = load %union.tree_node*, %union.tree_node** %var_before, align 8, !dbg !10949
  %call9 = tail call fastcc %struct.version_info* @name_info(%struct.ivopts_data* %data, %union.tree_node* %9) #7, !dbg !10950
  %preserve_biv = getelementptr inbounds %struct.version_info, %struct.version_info* %call9, i64 0, i32 4, !dbg !10951
  store i8 1, i8* %preserve_biv, align 8, !dbg !10952
  %var_after = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 5, !dbg !10953
  %10 = load %union.tree_node*, %union.tree_node** %var_after, align 8, !dbg !10953
  %call10 = tail call fastcc %struct.version_info* @name_info(%struct.ivopts_data* %data, %union.tree_node* %10) #7, !dbg !10954
  %preserve_biv11 = getelementptr inbounds %struct.version_info, %struct.version_info* %call10, i64 0, i32 4, !dbg !10955
  store i8 1, i8* %preserve_biv11, align 8, !dbg !10956
  %11 = load %union.tree_node*, %union.tree_node** %var_after, align 8, !dbg !10957
  %call13 = tail call fastcc %struct.iv_use* @find_interesting_uses_op(%struct.ivopts_data* %data, %union.tree_node* %11) #7, !dbg !10958
  %selected = getelementptr inbounds %struct.iv_use, %struct.iv_use* %call13, i64 0, i32 8, !dbg !10959
  store %struct.iv_cand* %cand, %struct.iv_cand** %selected, align 8, !dbg !10960
  br label %cleanup, !dbg !10961

sw.epilog:                                        ; preds = %if.end, %sw.bb6, %sw.bb1, %sw.bb
  %after.1 = phi i8 [ 0, %if.end ], [ %after.0, %sw.bb6 ], [ 1, %sw.bb1 ], [ 0, %sw.bb ], !dbg !10928
  call void @llvm.dbg.value(metadata i8 %after.1, metadata !10927, metadata !DIExpression()), !dbg !10928
  %var_before14 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 4, !dbg !10962
  %12 = load %union.tree_node*, %union.tree_node** %var_before14, align 8, !dbg !10962
  call void @gimple_add_tmp_var(%union.tree_node* %12) #6, !dbg !10963
  %13 = load %union.tree_node*, %union.tree_node** %var_before14, align 8, !dbg !10964
  %call16 = call zeroext i8 @add_referenced_var(%union.tree_node* %13) #6, !dbg !10965
  %14 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !10966
  %base18 = getelementptr inbounds %struct.iv, %struct.iv* %14, i64 0, i32 0, !dbg !10967
  %15 = load %union.tree_node*, %union.tree_node** %base18, align 8, !dbg !10967
  %call19 = call %union.tree_node* @unshare_expr(%union.tree_node* %15) #6, !dbg !10968
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !10926, metadata !DIExpression()), !dbg !10928
  %16 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !10969
  %step = getelementptr inbounds %struct.iv, %struct.iv* %16, i64 0, i32 2, !dbg !10970
  %17 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !10970
  %call21 = call %union.tree_node* @unshare_expr(%union.tree_node* %17) #6, !dbg !10971
  %18 = load %union.tree_node*, %union.tree_node** %var_before14, align 8, !dbg !10972
  %current_loop23 = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !10973
  %19 = load %struct.loop*, %struct.loop** %current_loop23, align 8, !dbg !10973
  %var_after25 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 5, !dbg !10974
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %incr_pos, metadata !10925, metadata !DIExpression(DW_OP_deref)), !dbg !10928
  call void @create_iv(%union.tree_node* %call19, %union.tree_node* %call21, %union.tree_node* %18, %struct.loop* %19, %struct.gimple_stmt_iterator* nonnull %incr_pos, i8 zeroext %after.1, %union.tree_node** nonnull %var_before14, %union.tree_node** nonnull %var_after25) #6, !dbg !10975
  br label %cleanup, !dbg !10976

cleanup:                                          ; preds = %entry, %sw.epilog, %sw.bb8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !10976
  ret void, !dbg !10976
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !10977 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10979, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !10980, metadata !DIExpression()), !dbg !10983
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !10984
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !10981, metadata !DIExpression()), !dbg !10982
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %call) #7, !dbg !10985
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !10986
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !10987
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !10988
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !10989
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !10990
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !10991
  ret void, !dbg !10992
}

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gimple_add_tmp_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @create_iv(%union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.loop*, %struct.gimple_stmt_iterator*, i8 zeroext, %union.tree_node**, %union.tree_node**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !10993 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !10995, metadata !DIExpression()), !dbg !10996
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !10997
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10997

cond.true:                                        ; preds = %entry
  %last = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 1, !dbg !10998
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %last, align 8, !dbg !10998
  br label %cond.end, !dbg !10997

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !10997
  ret %struct.gimple_seq_node_d* %cond, !dbg !10999
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_use(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !11000 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !11004, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !11005, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !11006, metadata !DIExpression()), !dbg !11007
  %type = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 1, !dbg !11008
  %0 = load i32, i32* %type, align 4, !dbg !11008
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ], !dbg !11009

sw.bb:                                            ; preds = %entry
  tail call fastcc void @rewrite_use_nonlinear_expr(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) #7, !dbg !11010
  br label %sw.epilog, !dbg !11012

sw.bb1:                                           ; preds = %entry
  tail call fastcc void @rewrite_use_address(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) #7, !dbg !11013
  br label %sw.epilog, !dbg !11014

sw.bb2:                                           ; preds = %entry
  tail call fastcc void @rewrite_use_compare(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) #7, !dbg !11015
  br label %sw.epilog, !dbg !11016

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 5635, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !11017
  br label %sw.epilog, !dbg !11018

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !11019
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11019
  tail call fastcc void @update_stmt(%union.gimple_statement_d* %1) #7, !dbg !11020
  ret void, !dbg !11021
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_use_nonlinear_expr(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !11022 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp86 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp94 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !11024, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !11025, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !11026, metadata !DIExpression()), !dbg !11039
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !11040
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !11040
  %pos = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 2, !dbg !11041
  %1 = load i32, i32* %pos, align 8, !dbg !11041
  %cmp = icmp eq i32 %1, 4, !dbg !11042
  br i1 %cmp, label %land.lhs.true, label %if.else64, !dbg !11043

land.lhs.true:                                    ; preds = %entry
  %incremented_at = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 3, !dbg !11044
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %incremented_at, align 8, !dbg !11044
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !11045
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11045
  %cmp1 = icmp eq %union.gimple_statement_d* %2, %3, !dbg !11046
  br i1 %cmp1, label %if.then, label %if.else64, !dbg !11047

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 63, metadata !11037, metadata !DIExpression()), !dbg !11048
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %2) #7, !dbg !11049
  %tobool = icmp eq i8 %call, 0, !dbg !11049
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !11049

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 5390, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !11049
  br label %cond.end, !dbg !11049

cond.end:                                         ; preds = %if.then, %cond.true
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11050
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %4) #7, !dbg !11050
  %var_after = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 5, !dbg !11050
  %5 = load %union.tree_node*, %union.tree_node** %var_after, align 8, !dbg !11050
  %cmp5 = icmp eq %union.tree_node* %call4, %5, !dbg !11050
  br i1 %cmp5, label %cond.end.cond.end8_crit_edge, label %cond.true6, !dbg !11050

cond.end.cond.end8_crit_edge:                     ; preds = %cond.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11050
  br label %cond.end8, !dbg !11050

cond.true6:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 5391, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !11050
  %.phi.trans.insert = bitcast %union.tree_node** %var_after to %struct.tree_common**, !dbg !11048
  %.pre = load %struct.tree_common*, %struct.tree_common** %.phi.trans.insert, align 8, !dbg !11051
  br label %cond.end8, !dbg !11050

cond.end8:                                        ; preds = %cond.end.cond.end8_crit_edge, %cond.true6
  %7 = phi %struct.tree_common* [ %6, %cond.end.cond.end8_crit_edge ], [ %.pre, %cond.true6 ], !dbg !11051
  %iv = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 6, !dbg !11052
  %8 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !11052
  %step10 = getelementptr inbounds %struct.iv, %struct.iv* %8, i64 0, i32 2, !dbg !11053
  %9 = load %union.tree_node*, %union.tree_node** %step10, align 8, !dbg !11053
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !11032, metadata !DIExpression()), !dbg !11048
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11054
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11054
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !11035, metadata !DIExpression()), !dbg !11048
  %type13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !11051
  %11 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !11051
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !11036, metadata !DIExpression()), !dbg !11048
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11055
  %bf.load = load i64, i64* %12, align 8, !dbg !11055
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !11057
  %cmp14 = icmp eq i64 %bf.cast2, 79, !dbg !11057
  br i1 %cmp14, label %if.then15, label %if.end, !dbg !11058

if.then15:                                        ; preds = %cond.end8
  call void @llvm.dbg.value(metadata i32 64, metadata !11037, metadata !DIExpression()), !dbg !11048
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11059
  %13 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !11059
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !11032, metadata !DIExpression()), !dbg !11048
  br label %if.end, !dbg !11061

if.end:                                           ; preds = %if.then15, %cond.end8
  %step.0 = phi %union.tree_node* [ %13, %if.then15 ], [ %9, %cond.end8 ], !dbg !11048
  %incr_code.0 = phi i32 [ 64, %if.then15 ], [ 63, %cond.end8 ], !dbg !11048
  call void @llvm.dbg.value(metadata i32 %incr_code.0, metadata !11037, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.value(metadata %union.tree_node* %step.0, metadata !11032, metadata !DIExpression()), !dbg !11048
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11062
  %call17 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %14) #7, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %call17, metadata !11038, metadata !DIExpression()), !dbg !11048
  switch i32 %call17, label %if.end42 [
    i32 63, label %if.then22
    i32 64, label %if.then22
    i32 66, label %if.then22
  ], !dbg !11064

if.then22:                                        ; preds = %if.end, %if.end, %if.end
  %15 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11066
  %call24 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %15) #7, !dbg !11069
  %var_before = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 4, !dbg !11070
  %16 = load %union.tree_node*, %union.tree_node** %var_before, align 8, !dbg !11070
  %cmp25 = icmp eq %union.tree_node* %call24, %16, !dbg !11071
  br i1 %cmp25, label %if.then26, label %if.else, !dbg !11072

if.then26:                                        ; preds = %if.then22
  %17 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11073
  %call28 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %17) #7, !dbg !11074
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !11028, metadata !DIExpression()), !dbg !11039
  br label %if.end42, !dbg !11075

if.else:                                          ; preds = %if.then22
  %cmp29 = icmp eq i32 %call17, 64, !dbg !11076
  br i1 %cmp29, label %if.end42, label %land.lhs.true30, !dbg !11078

land.lhs.true30:                                  ; preds = %if.else
  %18 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11079
  %call32 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %18) #7, !dbg !11080
  %19 = load %union.tree_node*, %union.tree_node** %var_before, align 8, !dbg !11081
  %cmp34 = icmp eq %union.tree_node* %call32, %19, !dbg !11082
  br i1 %cmp34, label %if.then35, label %if.end42, !dbg !11083

if.then35:                                        ; preds = %land.lhs.true30
  %20 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11084
  %call37 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %20) #7, !dbg !11085
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !11028, metadata !DIExpression()), !dbg !11039
  br label %if.end42, !dbg !11086

if.end42:                                         ; preds = %if.else, %if.end, %if.then26, %land.lhs.true30, %if.then35
  %op.2 = phi %union.tree_node* [ %call28, %if.then26 ], [ %call37, %if.then35 ], [ null, %land.lhs.true30 ], [ null, %if.else ], [ null, %if.end ], !dbg !11087
  call void @llvm.dbg.value(metadata %union.tree_node* %op.2, metadata !11028, metadata !DIExpression()), !dbg !11039
  %tobool43 = icmp eq %union.tree_node* %op.2, null, !dbg !11088
  br i1 %tobool43, label %if.end54, label %land.lhs.true44, !dbg !11090

land.lhs.true44:                                  ; preds = %if.end42
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11091
  %bf.load46 = load i64, i64* %21, align 8, !dbg !11091
  %bf.cast483 = and i64 %bf.load46, 65535, !dbg !11092
  %cmp49 = icmp eq i64 %bf.cast483, 23, !dbg !11092
  br i1 %cmp49, label %cleanup, label %lor.lhs.false50, !dbg !11093

lor.lhs.false50:                                  ; preds = %land.lhs.true44
  %call51 = tail call i32 @operand_equal_p(%union.tree_node* nonnull %op.2, %union.tree_node* %step.0, i32 0) #6, !dbg !11094
  %tobool52 = icmp eq i32 %call51, 0, !dbg !11094
  br i1 %tobool52, label %if.end54, label %cleanup, !dbg !11095

if.end54:                                         ; preds = %lor.lhs.false50, %if.end42
  %var_before55 = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 4, !dbg !11096
  %22 = load %union.tree_node*, %union.tree_node** %var_before55, align 8, !dbg !11096
  %call56 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %10, %union.tree_node* %22) #6, !dbg !11096
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !11028, metadata !DIExpression()), !dbg !11039
  %call57 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %step.0) #6, !dbg !11097
  %call58 = tail call %union.tree_node* @build2_stat(i32 %incr_code.0, %union.tree_node* %10, %union.tree_node* %call56, %union.tree_node* %call57) #6, !dbg !11097
  %call59 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %11, %union.tree_node* %call58) #6, !dbg !11097
  call void @llvm.dbg.value(metadata %union.tree_node* %call59, metadata !11027, metadata !DIExpression()), !dbg !11039
  br label %cleanup, !dbg !11098

cleanup:                                          ; preds = %lor.lhs.false50, %land.lhs.true44, %if.end54
  %comp.0 = phi %union.tree_node* [ %call59, %if.end54 ], [ undef, %lor.lhs.false50 ], [ undef, %land.lhs.true44 ]
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end54 ], [ false, %lor.lhs.false50 ], [ false, %land.lhs.true44 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %comp.0, metadata !11027, metadata !DIExpression()), !dbg !11039
  br i1 %cleanup.dest.slot.0, label %if.end71, label %cleanup100

if.else64:                                        ; preds = %land.lhs.true, %entry
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !11099
  %23 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !11099
  %call65 = tail call fastcc %union.tree_node* @get_computation(%struct.loop* %23, %struct.iv_use* %use, %struct.iv_cand* %cand) #7, !dbg !11101
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !11027, metadata !DIExpression()), !dbg !11039
  %cmp66 = icmp eq %union.tree_node* %call65, null, !dbg !11102
  br i1 %cmp66, label %cond.true67, label %if.end71, !dbg !11102

cond.true67:                                      ; preds = %if.else64
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 5438, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !11102
  br label %if.end71, !dbg !11102

if.end71:                                         ; preds = %if.else64, %cond.true67, %cleanup
  %comp.1 = phi %union.tree_node* [ %comp.0, %cleanup ], [ %call65, %if.else64 ], [ null, %cond.true67 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %comp.1, metadata !11027, metadata !DIExpression()), !dbg !11039
  %stmt72 = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !11103
  %24 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt72, align 8, !dbg !11103
  %call73 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %24) #7, !dbg !11104
  switch i32 %call73, label %sw.default [
    i32 16, label %sw.bb
    i32 6, label %sw.bb83
  ], !dbg !11105

sw.bb:                                            ; preds = %if.end71
  %25 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt72, align 8, !dbg !11106
  %call75 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %25) #7, !dbg !11106
  %call76 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call75) #7, !dbg !11106
  call void @llvm.dbg.value(metadata %union.tree_node* %call76, metadata !11029, metadata !DIExpression()), !dbg !11039
  %call77 = tail call fastcc %struct.version_info* @name_info(%struct.ivopts_data* %data, %union.tree_node* %call76) #7, !dbg !11108
  %preserve_biv = getelementptr inbounds %struct.version_info, %struct.version_info* %call77, i64 0, i32 4, !dbg !11110
  %26 = load i8, i8* %preserve_biv, align 8, !dbg !11110
  %tobool78 = icmp eq i8 %26, 0, !dbg !11108
  br i1 %tobool78, label %if.end80, label %cleanup100, !dbg !11111

if.end80:                                         ; preds = %sw.bb
  %27 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !11112
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8, !dbg !11112
  %28 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt72, align 8, !dbg !11113
  %call82 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %28) #7, !dbg !11114
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %call82) #7, !dbg !11112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %27, i64 24, i1 false), !dbg !11112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8, !dbg !11112
  br label %sw.epilog, !dbg !11115

sw.bb83:                                          ; preds = %if.end71
  %29 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt72, align 8, !dbg !11116
  %call85 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %29) #7, !dbg !11117
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !11029, metadata !DIExpression()), !dbg !11039
  %30 = bitcast %struct.gimple_stmt_iterator* %tmp86 to i8*, !dbg !11118
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #8, !dbg !11118
  %31 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt72, align 8, !dbg !11119
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp86, %union.gimple_statement_d* %31) #6, !dbg !11118
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %30, i64 24, i1 false), !dbg !11118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8, !dbg !11118
  br label %sw.epilog, !dbg !11120

sw.default:                                       ; preds = %if.end71
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 5459, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !11121
  br label %sw.epilog, !dbg !11122

sw.epilog:                                        ; preds = %sw.default, %sw.bb83, %if.end80
  %tgt.0 = phi %union.tree_node* [ undef, %sw.default ], [ %call85, %sw.bb83 ], [ %call76, %if.end80 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %tgt.0, metadata !11029, metadata !DIExpression()), !dbg !11039
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %tgt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11123
  %32 = bitcast i32* %var to %union.tree_node**, !dbg !11123
  %33 = load %union.tree_node*, %union.tree_node** %32, align 8, !dbg !11123
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !11031, metadata !DIExpression(DW_OP_deref)), !dbg !11039
  %call88 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %bsi, %union.tree_node* %comp.1, i8 zeroext 0, %union.tree_node* %33, i8 zeroext 1, i32 1) #6, !dbg !11124
  call void @llvm.dbg.value(metadata %union.tree_node* %call88, metadata !11028, metadata !DIExpression()), !dbg !11039
  %34 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt72, align 8, !dbg !11125
  %call90 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %34) #7, !dbg !11127
  %cmp91 = icmp eq i32 %call90, 16, !dbg !11128
  br i1 %cmp91, label %if.then92, label %if.else96, !dbg !11129

if.then92:                                        ; preds = %sw.epilog
  %call93 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %tgt.0, %union.tree_node* %call88) #6, !dbg !11130
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call93, metadata !11030, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !11031, metadata !DIExpression(DW_OP_deref)), !dbg !11039
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* %call93, i32 1) #6, !dbg !11132
  %35 = bitcast %struct.gimple_stmt_iterator* %tmp94 to i8*, !dbg !11133
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #8, !dbg !11133
  %36 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt72, align 8, !dbg !11134
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp94, %union.gimple_statement_d* %36) #6, !dbg !11133
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %35, i64 24, i1 false), !dbg !11133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #8, !dbg !11133
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !11031, metadata !DIExpression(DW_OP_deref)), !dbg !11039
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %bsi, i8 zeroext 0) #6, !dbg !11135
  br label %cleanup100, !dbg !11136

if.else96:                                        ; preds = %sw.epilog
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !11031, metadata !DIExpression(DW_OP_deref)), !dbg !11039
  call void @gimple_assign_set_rhs_from_tree(%struct.gimple_stmt_iterator* nonnull %bsi, %union.tree_node* %call88) #6, !dbg !11137
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !11031, metadata !DIExpression(DW_OP_deref)), !dbg !11039
  %call97 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !11139
  store %union.gimple_statement_d* %call97, %union.gimple_statement_d** %stmt72, align 8, !dbg !11140
  br label %cleanup100

cleanup100:                                       ; preds = %sw.bb, %if.then92, %if.else96, %cleanup
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !11141
  ret void, !dbg !11141
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_use_address(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !11142 {
entry:
  %aff = alloca %struct.affine_tree_combination, align 8
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !11144, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !11145, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !11146, metadata !DIExpression()), !dbg !11152
  %0 = bitcast %struct.affine_tree_combination* %aff to i8*, !dbg !11153
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %0) #8, !dbg !11153
  %1 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !11154
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !11154
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !11155
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11155
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !11148, metadata !DIExpression(DW_OP_deref)), !dbg !11152
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %bsi, %union.gimple_statement_d* %2) #6, !dbg !11156
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !11149, metadata !DIExpression()), !dbg !11152
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !11157
  %3 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !11157
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11158
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff, metadata !11147, metadata !DIExpression(DW_OP_deref)), !dbg !11152
  %call = call fastcc zeroext i8 @get_computation_aff(%struct.loop* %3, %struct.iv_use* %use, %struct.iv_cand* %cand, %union.gimple_statement_d* %4, %struct.affine_tree_combination* nonnull %aff) #7, !dbg !11159
  call void @llvm.dbg.value(metadata i8 %call, metadata !11151, metadata !DIExpression()), !dbg !11152
  %tobool = icmp eq i8 %call, 0, !dbg !11160
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !11160

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 5546, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !11160
  br label %cond.end, !dbg !11160

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff, metadata !11147, metadata !DIExpression(DW_OP_deref)), !dbg !11152
  call void @unshare_aff_combination(%struct.affine_tree_combination* nonnull %aff) #6, !dbg !11161
  %iv = getelementptr inbounds %struct.iv_cand, %struct.iv_cand* %cand, i64 0, i32 6, !dbg !11162
  %5 = load %struct.iv*, %struct.iv** %iv, align 8, !dbg !11162
  %base_object = getelementptr inbounds %struct.iv, %struct.iv* %5, i64 0, i32 1, !dbg !11164
  %6 = load %union.tree_node*, %union.tree_node** %base_object, align 8, !dbg !11164
  %tobool2 = icmp eq %union.tree_node* %6, null, !dbg !11165
  br i1 %tobool2, label %if.end, label %if.then, !dbg !11166

if.then:                                          ; preds = %cond.end
  %7 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !11167
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11168
  %call5 = call fastcc %union.tree_node* @var_at_stmt(%struct.loop* %7, %struct.iv_cand* %cand, %union.gimple_statement_d* %8) #7, !dbg !11169
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !11149, metadata !DIExpression()), !dbg !11152
  br label %if.end, !dbg !11170

if.end:                                           ; preds = %cond.end, %if.then
  %base_hint.0 = phi %union.tree_node* [ %call5, %if.then ], [ null, %cond.end ], !dbg !11152
  call void @llvm.dbg.value(metadata %union.tree_node* %base_hint.0, metadata !11149, metadata !DIExpression()), !dbg !11152
  %op_p = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 4, !dbg !11171
  %9 = bitcast %union.tree_node*** %op_p to %struct.tree_common***, !dbg !11171
  %10 = load %struct.tree_common**, %struct.tree_common*** %9, align 8, !dbg !11171
  %11 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !11171
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %11, i64 0, i32 2, !dbg !11171
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11171
  %speed = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 11, !dbg !11172
  %13 = load i8, i8* %speed, align 1, !dbg !11172
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %aff, metadata !11147, metadata !DIExpression(DW_OP_deref)), !dbg !11152
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !11148, metadata !DIExpression(DW_OP_deref)), !dbg !11152
  %call6 = call %union.tree_node* @create_mem_ref(%struct.gimple_stmt_iterator* nonnull %bsi, %union.tree_node* %12, %struct.affine_tree_combination* nonnull %aff, %union.tree_node* %base_hint.0, i8 zeroext %13) #6, !dbg !11173
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !11150, metadata !DIExpression()), !dbg !11152
  %14 = load %union.tree_node**, %union.tree_node*** %op_p, align 8, !dbg !11174
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !11175
  call fastcc void @copy_ref_info(%union.tree_node* %call6, %union.tree_node* %15) #7, !dbg !11176
  %16 = load %union.tree_node**, %union.tree_node*** %op_p, align 8, !dbg !11177
  store %union.tree_node* %call6, %union.tree_node** %16, align 8, !dbg !11178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !11179
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %0) #8, !dbg !11179
  ret void, !dbg !11179
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_use_compare(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !11180 {
entry:
  %var_p = alloca %union.tree_node**, align 8
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !11182, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !11183, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !11184, metadata !DIExpression()), !dbg !11198
  %0 = bitcast %union.tree_node*** %var_p to i8*, !dbg !11199
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !11199
  %1 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !11200
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !11200
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !11201
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11201
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !11189, metadata !DIExpression(DW_OP_deref)), !dbg !11198
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %bsi, %union.gimple_statement_d* %2) #6, !dbg !11202
  %call = call fastcc %struct.cost_pair* @get_use_iv_cost(%struct.ivopts_data* %data, %struct.iv_use* %use, %struct.iv_cand* %cand) #7, !dbg !11203
  call void @llvm.dbg.value(metadata %struct.cost_pair* %call, metadata !11191, metadata !DIExpression()), !dbg !11198
  %value = getelementptr inbounds %struct.cost_pair, %struct.cost_pair* %call, i64 0, i32 3, !dbg !11204
  %3 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !11204
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !11188, metadata !DIExpression()), !dbg !11198
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !11205
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !11198
  %4 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !11198
  br i1 %tobool, label %if.end15, label %if.then, !dbg !11206

if.then:                                          ; preds = %entry
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11207
  %call2 = call fastcc %union.tree_node* @var_at_stmt(%struct.loop* %4, %struct.iv_cand* %cand, %union.gimple_statement_d* %5) #7, !dbg !11208
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !11193, metadata !DIExpression()), !dbg !11209
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11210
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11210
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !11196, metadata !DIExpression()), !dbg !11209
  %7 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !11211
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8, !dbg !11211
  %call3 = call fastcc i32 @iv_elimination_compare(%struct.ivopts_data* %data, %struct.iv_use* %use) #7, !dbg !11212
  call void @llvm.dbg.value(metadata i32 %call3, metadata !11190, metadata !DIExpression()), !dbg !11198
  %call4 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %6, %union.tree_node* nonnull %3) #6, !dbg !11213
  %call5 = call %union.tree_node* @unshare_expr(%union.tree_node* %call4) #6, !dbg !11214
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !11188, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !11197, metadata !DIExpression(DW_OP_deref)), !dbg !11209
  %call6 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call5, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* null) #6, !dbg !11215
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !11187, metadata !DIExpression()), !dbg !11198
  %8 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !11216
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %8, metadata !11197, metadata !DIExpression()), !dbg !11209
  %tobool7 = icmp eq %struct.gimple_seq_d* %8, null, !dbg !11216
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !11218

if.then8:                                         ; preds = %if.then
  %9 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !11219
  %call10 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %9) #6, !dbg !11220
  %10 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !11221
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %10, metadata !11197, metadata !DIExpression()), !dbg !11209
  %call11 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call10, %struct.gimple_seq_d* %10) #6, !dbg !11222
  br label %if.end, !dbg !11222

if.end:                                           ; preds = %if.then, %if.then8
  %11 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11223
  call fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %11, %union.tree_node* %call2) #7, !dbg !11224
  %12 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11225
  call fastcc void @gimple_cond_set_code(%union.gimple_statement_d* %12, i32 %call3) #7, !dbg !11226
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11227
  call fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %13, %union.tree_node* %call6) #7, !dbg !11228
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8, !dbg !11229
  br label %cleanup

if.end15:                                         ; preds = %entry
  %call17 = call fastcc %union.tree_node* @get_computation(%struct.loop* %4, %struct.iv_use* %use, %struct.iv_cand* %cand) #7, !dbg !11230
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !11185, metadata !DIExpression()), !dbg !11198
  %cmp = icmp eq %union.tree_node* %call17, null, !dbg !11231
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !11231

cond.true:                                        ; preds = %if.end15
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 5606, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !11231
  br label %cond.end, !dbg !11231

cond.end:                                         ; preds = %if.end15, %cond.true
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11232
  call void @llvm.dbg.value(metadata %union.tree_node*** %var_p, metadata !11186, metadata !DIExpression(DW_OP_deref)), !dbg !11198
  %call19 = call fastcc zeroext i8 @extract_cond_operands(%struct.ivopts_data* %data, %union.gimple_statement_d* %14, %union.tree_node*** nonnull %var_p, %union.tree_node*** null, %struct.iv** null, %struct.iv** null) #7, !dbg !11233
  call void @llvm.dbg.value(metadata i8 %call19, metadata !11192, metadata !DIExpression()), !dbg !11198
  %tobool20 = icmp eq i8 %call19, 0, !dbg !11234
  br i1 %tobool20, label %cond.true21, label %cond.end23, !dbg !11234

cond.true21:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 5609, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !11234
  br label %cond.end23, !dbg !11234

cond.end23:                                       ; preds = %cond.end, %cond.true21
  %15 = bitcast %union.tree_node*** %var_p to %struct.tree_ssa_name***, !dbg !11235
  %16 = load %struct.tree_ssa_name**, %struct.tree_ssa_name*** %15, align 8, !dbg !11235
  %17 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %16, align 8, !dbg !11235
  %var25 = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %17, i64 0, i32 1, !dbg !11235
  %18 = load %union.tree_node*, %union.tree_node** %var25, align 8, !dbg !11235
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !11189, metadata !DIExpression(DW_OP_deref)), !dbg !11198
  %call26 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %bsi, %union.tree_node* %call17, i8 zeroext 1, %union.tree_node* %18, i8 zeroext 1, i32 1) #6, !dbg !11236
  %19 = load %union.tree_node**, %union.tree_node*** %var_p, align 8, !dbg !11237
  call void @llvm.dbg.value(metadata %union.tree_node** %19, metadata !11186, metadata !DIExpression()), !dbg !11198
  store %union.tree_node* %call26, %union.tree_node** %19, align 8, !dbg !11238
  br label %cleanup, !dbg !11239

cleanup:                                          ; preds = %cond.end23, %if.end
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !11239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !11239
  ret void, !dbg !11239
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !11240 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !11244, metadata !DIExpression()), !dbg !11245
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !11246
  %tobool = icmp eq i8 %call, 0, !dbg !11246
  br i1 %tobool, label %if.end, label %if.then, !dbg !11248

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !11249
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !11251
  br label %if.end, !dbg !11252

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !11253
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11254 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11256, metadata !DIExpression()), !dbg !11257
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !11258
  %cmp = icmp ugt i32 %call, 2, !dbg !11260
  br i1 %cmp, label %if.then, label %return, !dbg !11261

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !11262
  br label %return, !dbg !11263

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !11264
  ret %union.tree_node* %retval.0, !dbg !11265
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_computation(%struct.loop* %loop, %struct.iv_use* %use, %struct.iv_cand* %cand) unnamed_addr #5 !dbg !11266 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !11270, metadata !DIExpression()), !dbg !11273
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !11271, metadata !DIExpression()), !dbg !11273
  call void @llvm.dbg.value(metadata %struct.iv_cand* %cand, metadata !11272, metadata !DIExpression()), !dbg !11273
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !11274
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11274
  %call = tail call fastcc %union.tree_node* @get_computation_at(%struct.loop* %loop, %struct.iv_use* %use, %struct.iv_cand* %cand, %union.gimple_statement_d* %0) #7, !dbg !11275
  ret %union.tree_node* %call, !dbg !11276
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !11277 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !11279, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !11280, metadata !DIExpression()), !dbg !11282
  tail call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* sret %agg.result, %struct.basic_block_def* %bb) #7, !dbg !11283
  br label %while.cond, !dbg !11284

while.cond:                                       ; preds = %while.body, %entry
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !11285
  %tobool = icmp eq i8 %call, 0, !dbg !11285
  br i1 %tobool, label %land.rhs, label %while.end, !dbg !11286

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !11287
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !11288
  %cmp = icmp eq i32 %call2, 4, !dbg !11289
  br i1 %cmp, label %while.body, label %while.end, !dbg !11284

while.body:                                       ; preds = %land.rhs
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %agg.result) #7, !dbg !11290
  br label %while.cond, !dbg !11284, !llvm.loop !11291

while.end:                                        ; preds = %while.cond, %land.rhs
  ret void, !dbg !11293
}

declare dso_local %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator*, %union.tree_node*, i8 zeroext, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local void @remove_phi_node(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @gimple_assign_set_rhs_from_tree(%struct.gimple_stmt_iterator*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_mem_ref(%struct.gimple_stmt_iterator*, %union.tree_node*, %struct.affine_tree_combination*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @copy_ref_info(%union.tree_node* %new_ref, %union.tree_node* %old_ref) unnamed_addr #5 !dbg !11294 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %new_ref, metadata !11298, metadata !DIExpression()), !dbg !11300
  call void @llvm.dbg.value(metadata %union.tree_node* %old_ref, metadata !11299, metadata !DIExpression()), !dbg !11300
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %old_ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11301
  %bf.load = load i64, i64* %0, align 8, !dbg !11301
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11303
  %cmp = icmp eq i64 %bf.cast1, 152, !dbg !11303
  br i1 %cmp, label %if.then, label %if.else, !dbg !11304

if.then:                                          ; preds = %entry
  tail call void @copy_mem_ref_info(%union.tree_node* %new_ref, %union.tree_node* %old_ref) #6, !dbg !11305
  br label %if.end, !dbg !11305

if.else:                                          ; preds = %entry
  %call = tail call fastcc %union.tree_node* @unshare_and_remove_ssa_names(%union.tree_node* %old_ref) #7, !dbg !11306
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %new_ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11308
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 5, !dbg !11308
  store %union.tree_node* %call, %union.tree_node** %arrayidx, align 8, !dbg !11309
  %bf.load2 = load i64, i64* %0, align 8, !dbg !11310
  %bf.cast4 = and i64 %bf.load2, 65536, !dbg !11310
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11311
  %bf.load6 = load i64, i64* %1, align 8, !dbg !11312
  %bf.clear7 = and i64 %bf.load6, -65537, !dbg !11312
  %bf.set = or i64 %bf.clear7, %bf.cast4, !dbg !11312
  store i64 %bf.set, i64* %1, align 8, !dbg !11312
  %bf.load9 = load i64, i64* %0, align 8, !dbg !11313
  %bf.cast12 = and i64 %bf.load9, 524288, !dbg !11313
  %bf.clear17 = and i64 %bf.set, -524289, !dbg !11314
  %bf.set18 = or i64 %bf.clear17, %bf.cast12, !dbg !11314
  store i64 %bf.set18, i64* %1, align 8, !dbg !11314
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11315
}

declare dso_local void @copy_mem_ref_info(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @unshare_and_remove_ssa_names(%union.tree_node* %ref) unnamed_addr #5 !dbg !11316 {
entry:
  %ref.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !11318, metadata !DIExpression()), !dbg !11319
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !11318, metadata !DIExpression()), !dbg !11319
  %call = tail call %union.tree_node* @unshare_expr(%union.tree_node* %ref) #6, !dbg !11320
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11318, metadata !DIExpression()), !dbg !11319
  store %union.tree_node* %call, %union.tree_node** %ref.addr, align 8, !dbg !11321
  call void @llvm.dbg.value(metadata %union.tree_node** %ref.addr, metadata !11318, metadata !DIExpression(DW_OP_deref)), !dbg !11319
  %call1 = call zeroext i8 @for_each_index(%union.tree_node** nonnull %ref.addr, i8 (%union.tree_node*, %union.tree_node**, i8*)* nonnull @idx_remove_ssa_names, i8* null) #6, !dbg !11322
  %0 = load %union.tree_node*, %union.tree_node** %ref.addr, align 8, !dbg !11323
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11318, metadata !DIExpression()), !dbg !11319
  ret %union.tree_node* %0, !dbg !11324
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @idx_remove_ssa_names(%union.tree_node* %base, %union.tree_node** %idx, i8* %data) #5 !dbg !11325 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !11327, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata %union.tree_node** %idx, metadata !11328, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata i8* %data, metadata !11329, metadata !DIExpression()), !dbg !11331
  %0 = bitcast %union.tree_node** %idx to i64**, !dbg !11332
  %1 = load i64*, i64** %0, align 8, !dbg !11332
  %bf.load = load i64, i64* %1, align 8, !dbg !11332
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11334
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !11334
  br i1 %cmp, label %if.then, label %if.end, !dbg !11335

if.then:                                          ; preds = %entry
  %var = getelementptr inbounds i64, i64* %1, i64 3, !dbg !11336
  %2 = load i64, i64* %var, align 8, !dbg !11336
  %3 = bitcast %union.tree_node** %idx to i64*, !dbg !11337
  store i64 %2, i64* %3, align 8, !dbg !11337
  br label %if.end, !dbg !11338

if.end:                                           ; preds = %if.then, %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11339
  %bf.load3 = load i64, i64* %4, align 8, !dbg !11339
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !11341
  %cmp6 = icmp eq i64 %bf.cast52, 45, !dbg !11341
  br i1 %cmp6, label %if.then12, label %lor.lhs.false, !dbg !11342

lor.lhs.false:                                    ; preds = %if.end
  %cmp11 = icmp eq i64 %bf.cast52, 46, !dbg !11343
  br i1 %cmp11, label %if.then12, label %if.end36, !dbg !11344

if.then12:                                        ; preds = %lor.lhs.false, %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11345
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !11345
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !11330, metadata !DIExpression()), !dbg !11331
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !11347
  %tobool = icmp eq %union.tree_node* %5, null, !dbg !11347
  br i1 %tobool, label %if.end21, label %land.lhs.true, !dbg !11349

land.lhs.true:                                    ; preds = %if.then12
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11349
  %bf.load14 = load i64, i64* %6, align 8, !dbg !11350
  %bf.cast165 = and i64 %bf.load14, 65535, !dbg !11351
  %cmp17 = icmp eq i64 %bf.cast165, 141, !dbg !11351
  br i1 %cmp17, label %if.then18, label %if.end21, !dbg !11352

if.then18:                                        ; preds = %land.lhs.true
  %var20 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11353
  %7 = bitcast i32* %var20 to i64*, !dbg !11353
  %8 = load i64, i64* %7, align 8, !dbg !11353
  %9 = bitcast %union.tree_node** %arrayidx to i64*, !dbg !11354
  store i64 %8, i64* %9, align 8, !dbg !11354
  br label %if.end21, !dbg !11355

if.end21:                                         ; preds = %if.then12, %if.then18, %land.lhs.true
  %arrayidx24 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !11356
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx24, metadata !11330, metadata !DIExpression()), !dbg !11331
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx24, align 8, !dbg !11357
  %tobool25 = icmp eq %union.tree_node* %10, null, !dbg !11357
  br i1 %tobool25, label %if.end36, label %land.lhs.true26, !dbg !11359

land.lhs.true26:                                  ; preds = %if.end21
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11359
  %bf.load28 = load i64, i64* %11, align 8, !dbg !11360
  %bf.cast304 = and i64 %bf.load28, 65535, !dbg !11361
  %cmp31 = icmp eq i64 %bf.cast304, 141, !dbg !11361
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !11362

if.then32:                                        ; preds = %land.lhs.true26
  %var34 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11363
  %12 = bitcast i32* %var34 to i64*, !dbg !11363
  %13 = load i64, i64* %12, align 8, !dbg !11363
  %14 = bitcast %union.tree_node** %arrayidx24 to i64*, !dbg !11364
  store i64 %13, i64* %14, align 8, !dbg !11364
  br label %if.end36, !dbg !11365

if.end36:                                         ; preds = %if.end21, %land.lhs.true26, %if.then32, %lor.lhs.false
  ret i8 1, !dbg !11366
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @iv_elimination_compare(%struct.ivopts_data* %data, %struct.iv_use* %use) unnamed_addr #5 !dbg !11367 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivopts_data* %data, metadata !11371, metadata !DIExpression()), !dbg !11376
  call void @llvm.dbg.value(metadata %struct.iv_use* %use, metadata !11372, metadata !DIExpression()), !dbg !11376
  %current_loop = getelementptr inbounds %struct.ivopts_data, %struct.ivopts_data* %data, i64 0, i32 0, !dbg !11377
  %0 = load %struct.loop*, %struct.loop** %current_loop, align 8, !dbg !11377
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !11373, metadata !DIExpression()), !dbg !11376
  %stmt = getelementptr inbounds %struct.iv_use, %struct.iv_use* %use, i64 0, i32 3, !dbg !11378
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !11378
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %1) #7, !dbg !11379
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !11374, metadata !DIExpression()), !dbg !11376
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 1, !dbg !11380
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !11380
  %tobool = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !11380
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11380

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !11380
  br label %cond.end, !dbg !11380

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !11380
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #7, !dbg !11380
  call void @llvm.dbg.value(metadata %struct.edge_def* %call2, metadata !11375, metadata !DIExpression()), !dbg !11376
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call2, i64 0, i32 1, !dbg !11381
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !11381
  %call3 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %0, %struct.basic_block_def* %3) #6, !dbg !11383
  %tobool4 = icmp eq i8 %call3, 0, !dbg !11383
  br i1 %tobool4, label %if.end, label %if.then, !dbg !11384

if.then:                                          ; preds = %cond.end
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !11385
  %tobool6 = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !11385
  br i1 %tobool6, label %cond.end11, label %cond.true7, !dbg !11385

cond.true7:                                       ; preds = %if.then
  %base9 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !11385
  br label %cond.end11, !dbg !11385

cond.end11:                                       ; preds = %if.then, %cond.true7
  %cond12 = phi %struct.VEC_edge_base* [ %base9, %cond.true7 ], [ null, %if.then ], !dbg !11385
  %call13 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond12, i32 1) #7, !dbg !11385
  call void @llvm.dbg.value(metadata %struct.edge_def* %call13, metadata !11375, metadata !DIExpression()), !dbg !11376
  br label %if.end, !dbg !11386

if.end:                                           ; preds = %cond.end, %cond.end11
  %exit.0 = phi %struct.edge_def* [ %call13, %cond.end11 ], [ %call2, %cond.end ], !dbg !11376
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit.0, metadata !11375, metadata !DIExpression()), !dbg !11376
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit.0, i64 0, i32 7, !dbg !11387
  %5 = load i32, i32* %flags, align 8, !dbg !11387
  %and = and i32 %5, 1024, !dbg !11388
  %tobool14 = icmp eq i32 %and, 0, !dbg !11389
  %cond15 = select i1 %tobool14, i32 102, i32 101, !dbg !11389
  ret i32 %cond15, !dbg !11390
}

declare dso_local %union.tree_node* @force_gimple_operand(%union.tree_node*, %struct.gimple_seq_d**, i8 zeroext, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def*, %struct.gimple_seq_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !11391 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11395, metadata !DIExpression()), !dbg !11397
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !11396, metadata !DIExpression()), !dbg !11397
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !11398
  ret void, !dbg !11399
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_code(%union.gimple_statement_d* %gs, i32 %code) unnamed_addr #0 !dbg !11400 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11404, metadata !DIExpression()), !dbg !11406
  call void @llvm.dbg.value(metadata i32 %code, metadata !11405, metadata !DIExpression()), !dbg !11406
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !11407
  %bf.load = load i32, i32* %0, align 8, !dbg !11408
  %bf.shl = shl i32 %code, 16, !dbg !11408
  %bf.clear = and i32 %bf.load, 65535, !dbg !11408
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !11408
  store i32 %bf.set, i32* %0, align 8, !dbg !11408
  ret void, !dbg !11409
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !11410 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11412, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !11413, metadata !DIExpression()), !dbg !11414
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %rhs) #7, !dbg !11415
  ret void, !dbg !11416
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !11417 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11421, metadata !DIExpression()), !dbg !11424
  call void @llvm.dbg.value(metadata i32 %i, metadata !11422, metadata !DIExpression()), !dbg !11424
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !11423, metadata !DIExpression()), !dbg !11424
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !11425
  %tobool = icmp eq i8 %call, 0, !dbg !11425
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !11425

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !11425
  %cmp = icmp ugt i32 %call1, %i, !dbg !11425
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11425

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !11425
  br label %cond.end, !dbg !11425

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !11426
  %idxprom = zext i32 %i to i64, !dbg !11426
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !11426
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !11427
  ret void, !dbg !11428
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @release_defs_bitset(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @pointer_map_destroy(%struct.pointer_map_t*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_iv_use_p_base_truncate(%struct.VEC_iv_use_p_base* %vec_, i32 %size_) unnamed_addr #0 !dbg !11429 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_use_p_base* %vec_, metadata !11433, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.value(metadata i32 0, metadata !11434, metadata !DIExpression()), !dbg !11435
  %tobool = icmp eq %struct.VEC_iv_use_p_base* %vec_, null, !dbg !11436
  br label %cond.true, !dbg !11436

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !11436

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !11436

cond.end:                                         ; preds = %cond.false, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !11436

if.then:                                          ; preds = %cond.end
  %num3 = getelementptr inbounds %struct.VEC_iv_use_p_base, %struct.VEC_iv_use_p_base* %vec_, i64 0, i32 0, !dbg !11437
  store i32 0, i32* %num3, align 8, !dbg !11437
  br label %if.end, !dbg !11437

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !11436
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_iv_cand_p_base_truncate(%struct.VEC_iv_cand_p_base* %vec_, i32 %size_) unnamed_addr #0 !dbg !11439 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_cand_p_base* %vec_, metadata !11443, metadata !DIExpression()), !dbg !11445
  call void @llvm.dbg.value(metadata i32 0, metadata !11444, metadata !DIExpression()), !dbg !11445
  %tobool = icmp eq %struct.VEC_iv_cand_p_base* %vec_, null, !dbg !11446
  br label %cond.true, !dbg !11446

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !11446

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !11446

cond.end:                                         ; preds = %cond.false, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !11446

if.then:                                          ; preds = %cond.end
  %num3 = getelementptr inbounds %struct.VEC_iv_cand_p_base, %struct.VEC_iv_cand_p_base* %vec_, i64 0, i32 0, !dbg !11447
  store i32 0, i32* %num3, align 8, !dbg !11447
  br label %if.end, !dbg !11447

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !11446
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !11449 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !11453, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !11454, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !11455, metadata !DIExpression()), !dbg !11456
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !11457
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !11457

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !11457
  %0 = load i32, i32* %num, align 8, !dbg !11457
  %cmp = icmp ugt i32 %0, %ix_, !dbg !11457
  br i1 %cmp, label %if.then, label %if.else, !dbg !11459

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !11460
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11460
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !11460
  br label %return, !dbg !11460

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !11462

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !11464
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !11464
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !11464
  ret i32 %retval.0, !dbg !11459
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_base_truncate(%struct.VEC_tree_base* %vec_, i32 %size_) unnamed_addr #0 !dbg !11465 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !11469, metadata !DIExpression()), !dbg !11471
  call void @llvm.dbg.value(metadata i32 0, metadata !11470, metadata !DIExpression()), !dbg !11471
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !11472
  br label %cond.true, !dbg !11472

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !11472

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !11472

cond.end:                                         ; preds = %cond.false, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !11472

if.then:                                          ; preds = %cond.end
  %num3 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !11473
  store i32 0, i32* %num3, align 8, !dbg !11473
  br label %if.end, !dbg !11473

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !11472
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !11475 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !11481, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !11482, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !11483, metadata !DIExpression()), !dbg !11484
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !11485
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !11485

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !11485
  %0 = load i32, i32* %num, align 4, !dbg !11485
  %cmp = icmp ugt i32 %0, %ix_, !dbg !11485
  br i1 %cmp, label %if.then, label %if.else, !dbg !11487

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !11488
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11488
  %1 = load i32, i32* %arrayidx, align 4, !dbg !11488
  br label %return, !dbg !11488

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !11490

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !11492
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !11492
  store i32 %storemerge, i32* %ptr, align 4, !dbg !11492
  ret i32 %retval.0, !dbg !11487
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_loop(i32 %num) unnamed_addr #0 !dbg !11493 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !11497, metadata !DIExpression()), !dbg !11498
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !11499
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !11499
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !11499
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !11499
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !11499
  %tobool = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !11499
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11499

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !11499
  br label %cond.end, !dbg !11499

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !11499
  %call = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond, i32 %num) #7, !dbg !11499
  ret %struct.loop* %call, !dbg !11500
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !11501 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !11506, metadata !DIExpression()), !dbg !11507
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !11508
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !11508
  br i1 %tobool, label %if.end, label %if.then, !dbg !11510

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !11510
  tail call void @free(i8* nonnull %1) #6, !dbg !11508
  br label %if.end, !dbg !11508

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !11510
  ret void, !dbg !11510
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !11511 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** @decl_rtl_to_reset, metadata !11515, metadata !DIExpression()), !dbg !11516
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @decl_rtl_to_reset, align 8, !dbg !11517
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !11517
  br i1 %tobool, label %if.end, label %if.then, !dbg !11519

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !11519
  tail call void @free(i8* nonnull %1) #6, !dbg !11517
  br label %if.end, !dbg !11517

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** @decl_rtl_to_reset, align 8, !dbg !11519
  ret void, !dbg !11519
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_iv_use_p_heap_free(%struct.VEC_iv_use_p_heap** %vec_) unnamed_addr #0 !dbg !11520 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_use_p_heap** %vec_, metadata !11524, metadata !DIExpression()), !dbg !11525
  %0 = load %struct.VEC_iv_use_p_heap*, %struct.VEC_iv_use_p_heap** %vec_, align 8, !dbg !11526
  %tobool = icmp eq %struct.VEC_iv_use_p_heap* %0, null, !dbg !11526
  br i1 %tobool, label %if.end, label %if.then, !dbg !11528

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_iv_use_p_heap* %0 to i8*, !dbg !11528
  tail call void @free(i8* nonnull %1) #6, !dbg !11526
  br label %if.end, !dbg !11526

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_iv_use_p_heap* null, %struct.VEC_iv_use_p_heap** %vec_, align 8, !dbg !11528
  ret void, !dbg !11528
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_iv_cand_p_heap_free(%struct.VEC_iv_cand_p_heap** %vec_) unnamed_addr #0 !dbg !11529 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_iv_cand_p_heap** %vec_, metadata !11533, metadata !DIExpression()), !dbg !11534
  %0 = load %struct.VEC_iv_cand_p_heap*, %struct.VEC_iv_cand_p_heap** %vec_, align 8, !dbg !11535
  %tobool = icmp eq %struct.VEC_iv_cand_p_heap* %0, null, !dbg !11535
  br i1 %tobool, label %if.end, label %if.then, !dbg !11537

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_iv_cand_p_heap* %0 to i8*, !dbg !11537
  tail call void @free(i8* nonnull %1) #6, !dbg !11535
  br label %if.end, !dbg !11535

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_iv_cand_p_heap* null, %struct.VEC_iv_cand_p_heap** %vec_, align 8, !dbg !11537
  ret void, !dbg !11537
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!137}
!llvm.module.flags = !{!2415, !2416, !2417}
!llvm.ident = !{!2418}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "costs", scope: !2, file: !3, line: 2999, type: !1421, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "multiply_by_cost", scope: !3, file: !3, line: 2997, type: !4, scopeLine: 2998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2406)
!3 = !DIFile(filename: "tree-ssa-loop-ivopts.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !7, !8, !136}
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!8 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !9, line: 7, baseType: !6, size: 32, elements: !10)
!9 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!10 = !{!11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!11 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!12 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!13 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!14 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!15 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!16 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!17 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!18 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!19 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!20 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!21 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!22 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!23 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!24 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!25 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!26 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!27 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!28 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!29 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!30 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!31 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!32 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!33 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!34 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!35 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!36 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!37 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!38 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!39 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!40 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!41 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!42 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!43 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!44 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!45 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!46 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!47 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!48 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!49 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!50 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!51 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!52 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!53 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!54 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!55 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!56 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!57 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!58 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!59 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!60 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!61 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!62 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!63 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!64 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!65 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!66 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!67 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!68 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!69 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!70 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!71 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!72 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!73 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!74 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!75 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!76 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!77 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!78 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!79 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!80 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!81 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!82 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!83 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!84 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!85 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!86 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!87 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!88 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!89 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!90 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!91 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!92 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!93 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!94 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!95 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!96 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!97 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!134 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!135 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!136 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!137 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !138, retainedTypes: !657, globals: !2253, nameTableKind: None)
!138 = !{!139, !8, !148, !154, !159, !354, !359, !377, !384, !391, !395, !400, !407, !420, !459, !485, !628, !635, !641, !647}
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !140, line: 31, baseType: !6, size: 32, elements: !141)
!140 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!141 = !{!142, !143, !144, !145, !146, !147}
!142 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!145 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!146 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!147 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !149, line: 363, baseType: !6, size: 32, elements: !150)
!149 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!150 = !{!151, !152, !153}
!151 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!152 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!153 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !149, line: 355, baseType: !6, size: 32, elements: !155)
!155 = !{!156, !157, !158}
!156 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!158 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !160, line: 39, baseType: !6, size: 32, elements: !161)
!160 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!161 = !{!162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353}
!162 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!165 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!166 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!167 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!168 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!169 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!170 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!171 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!172 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!173 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!174 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!175 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!176 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!177 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!178 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!179 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!180 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!181 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!182 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!183 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!184 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!185 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!186 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!187 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!188 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!189 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!190 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!191 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!192 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!193 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!194 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!195 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!196 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!197 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!198 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!199 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!200 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!201 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!202 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!203 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!204 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!205 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!206 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!207 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!208 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!209 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!210 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!211 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!212 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!213 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!214 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!215 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!216 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!217 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!218 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!219 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!220 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!221 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!222 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!223 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!224 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!225 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!226 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!227 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!228 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!230 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!231 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!232 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!234 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!235 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!236 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!237 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!238 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!239 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!240 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!241 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!242 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!243 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!244 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!245 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!246 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!247 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!248 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!249 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!250 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!251 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!252 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!253 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!254 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!255 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!256 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!257 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!258 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!259 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!260 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!261 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!262 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!263 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!264 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!265 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!266 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!267 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!268 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!269 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!270 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!271 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!272 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!273 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!274 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!275 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!276 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!277 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!278 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!279 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!280 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!281 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!282 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!283 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!284 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!285 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!286 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!287 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!288 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!289 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!290 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!291 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!292 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!293 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!294 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!295 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!296 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!297 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!298 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!299 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!300 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!301 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!302 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!303 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!304 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!305 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!306 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!307 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!308 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!309 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!310 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!311 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!312 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!313 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!314 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!315 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!316 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!317 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!318 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!319 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!320 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!321 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!322 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!323 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!324 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!325 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!326 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!327 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!328 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!329 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!330 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!331 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!332 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!333 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!334 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!335 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!336 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!337 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!338 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!339 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!340 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!341 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!342 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!343 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!344 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!345 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!346 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!347 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!348 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!349 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!350 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!351 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!352 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!353 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!354 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !355, line: 474, baseType: !6, size: 32, elements: !356)
!355 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!356 = !{!357, !358}
!357 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!358 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!359 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !160, line: 280, baseType: !6, size: 32, elements: !360)
!360 = !{!361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!361 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !160, line: 1817, baseType: !6, size: 32, elements: !378)
!378 = !{!379, !380, !381, !382, !383}
!379 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!383 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !160, line: 1805, baseType: !6, size: 32, elements: !385)
!385 = !{!386, !387, !388, !389, !390}
!386 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!387 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!388 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!389 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!390 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!391 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !140, line: 91, baseType: !6, size: 32, elements: !392)
!392 = !{!393, !394}
!393 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!395 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "use_type", file: !3, line: 128, baseType: !6, size: 32, elements: !396)
!396 = !{!397, !398, !399}
!397 = !DIEnumerator(name: "USE_NONLINEAR_EXPR", value: 0, isUnsigned: true)
!398 = !DIEnumerator(name: "USE_ADDRESS", value: 1, isUnsigned: true)
!399 = !DIEnumerator(name: "USE_COMPARE", value: 2, isUnsigned: true)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "iv_position", file: !3, line: 180, baseType: !6, size: 32, elements: !401)
!401 = !{!402, !403, !404, !405, !406}
!402 = !DIEnumerator(name: "IP_NORMAL", value: 0, isUnsigned: true)
!403 = !DIEnumerator(name: "IP_END", value: 1, isUnsigned: true)
!404 = !DIEnumerator(name: "IP_BEFORE_USE", value: 2, isUnsigned: true)
!405 = !DIEnumerator(name: "IP_AFTER_USE", value: 3, isUnsigned: true)
!406 = !DIEnumerator(name: "IP_ORIGINAL", value: 4, isUnsigned: true)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code_class", file: !160, line: 58, baseType: !6, size: 32, elements: !408)
!408 = !{!409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419}
!409 = !DIEnumerator(name: "tcc_exceptional", value: 0, isUnsigned: true)
!410 = !DIEnumerator(name: "tcc_constant", value: 1, isUnsigned: true)
!411 = !DIEnumerator(name: "tcc_type", value: 2, isUnsigned: true)
!412 = !DIEnumerator(name: "tcc_declaration", value: 3, isUnsigned: true)
!413 = !DIEnumerator(name: "tcc_reference", value: 4, isUnsigned: true)
!414 = !DIEnumerator(name: "tcc_comparison", value: 5, isUnsigned: true)
!415 = !DIEnumerator(name: "tcc_unary", value: 6, isUnsigned: true)
!416 = !DIEnumerator(name: "tcc_binary", value: 7, isUnsigned: true)
!417 = !DIEnumerator(name: "tcc_statement", value: 8, isUnsigned: true)
!418 = !DIEnumerator(name: "tcc_vl_exp", value: 9, isUnsigned: true)
!419 = !DIEnumerator(name: "tcc_expression", value: 10, isUnsigned: true)
!420 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !421, line: 51, baseType: !6, size: 32, elements: !422)
!421 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!422 = !{!423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458}
!423 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!424 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!425 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!426 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!427 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!428 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!429 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!430 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!431 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!432 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!433 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!434 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!435 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!436 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!437 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!438 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!439 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!440 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!441 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!442 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!443 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!444 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!445 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!446 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!447 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!448 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!449 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!450 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!451 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!452 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!453 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!454 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!455 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!456 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!457 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!458 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!459 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !421, line: 727, baseType: !6, size: 32, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484}
!461 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!462 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!463 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!464 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!465 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!466 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!467 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!468 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!469 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!470 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!471 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!472 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!473 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!474 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!475 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!476 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!477 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!478 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!479 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!480 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!481 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!482 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!483 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!484 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!485 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !486, line: 45, baseType: !6, size: 32, elements: !487)
!486 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!487 = !{!488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627}
!488 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!489 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!490 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!491 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!492 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!493 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!494 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!495 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!496 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!497 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!498 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!499 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!500 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!501 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!502 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!503 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!504 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!505 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!506 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!507 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!508 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!509 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!510 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!511 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!512 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!513 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!514 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!515 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!516 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!517 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!518 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!519 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!520 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!521 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!522 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!523 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!524 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!525 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!526 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!527 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!528 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!529 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!530 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!531 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!532 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!533 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!534 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!535 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!536 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!537 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!538 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!539 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!540 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!541 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!542 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!543 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!544 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!545 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!546 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!547 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!548 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!549 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!550 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!551 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!552 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!553 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!554 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!555 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!556 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!557 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!558 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!559 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!560 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!561 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!562 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!563 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!564 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!565 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!566 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!567 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!568 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!569 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!570 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!571 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!572 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!573 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!574 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!575 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!576 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!577 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!578 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!579 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!580 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!581 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!582 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!583 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!584 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!585 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!586 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!587 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!588 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!589 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!590 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!591 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!592 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!593 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!594 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!595 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!596 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!597 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!598 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!599 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!600 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!601 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!602 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!603 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!604 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!605 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!606 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!607 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!608 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!609 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!610 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!611 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!612 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!613 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!614 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!615 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!616 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!617 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!618 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!619 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!620 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!621 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!622 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!623 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!624 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!625 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!626 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!627 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!628 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !629, line: 119, baseType: !6, size: 32, elements: !630)
!629 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!630 = !{!631, !632, !633, !634}
!631 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!632 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!633 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!634 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!635 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !421, line: 80, baseType: !6, size: 32, elements: !636)
!636 = !{!637, !638, !639, !640}
!637 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!638 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!639 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!640 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!641 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "function_frequency", file: !642, line: 179, baseType: !6, size: 32, elements: !643)
!642 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!643 = !{!644, !645, !646}
!644 = !DIEnumerator(name: "FUNCTION_FREQUENCY_UNLIKELY_EXECUTED", value: 0, isUnsigned: true)
!645 = !DIEnumerator(name: "FUNCTION_FREQUENCY_NORMAL", value: 1, isUnsigned: true)
!646 = !DIEnumerator(name: "FUNCTION_FREQUENCY_HOT", value: 2, isUnsigned: true)
!647 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expand_modifier", file: !648, line: 52, baseType: !6, size: 32, elements: !649)
!648 = !DIFile(filename: "./expr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!649 = !{!650, !651, !652, !653, !654, !655, !656}
!650 = !DIEnumerator(name: "EXPAND_NORMAL", value: 0, isUnsigned: true)
!651 = !DIEnumerator(name: "EXPAND_STACK_PARM", value: 1, isUnsigned: true)
!652 = !DIEnumerator(name: "EXPAND_SUM", value: 2, isUnsigned: true)
!653 = !DIEnumerator(name: "EXPAND_CONST_ADDRESS", value: 3, isUnsigned: true)
!654 = !DIEnumerator(name: "EXPAND_INITIALIZER", value: 4, isUnsigned: true)
!655 = !DIEnumerator(name: "EXPAND_WRITE", value: 5, isUnsigned: true)
!656 = !DIEnumerator(name: "EXPAND_MEMORY", value: 6, isUnsigned: true)
!657 = !{!658, !136, !659, !660, !663, !664, !159, !666, !667, !673, !6, !1091, !2054, !788, !1124, !661, !2056, !1431, !485, !2058, !743, !2080, !2098, !2149, !2162, !2167, !1332, !910, !2085, !2111, !635, !2180, !2184, !2201, !2126, !2204, !789, !2205, !1507, !2207, !2216, !2217, !2229, !2122, !2230, !2236, !2238, !2246}
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!659 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !662)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mbc_entry", file: !3, line: 2965, size: 128, elements: !669)
!669 = !{!670, !671, !672}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "cst", scope: !668, file: !3, line: 2967, baseType: !7, size: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !668, file: !3, line: 2968, baseType: !8, size: 32, offset: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !668, file: !3, line: 2969, baseType: !6, size: 32, offset: 96)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !674, line: 50, baseType: !675)
!674 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !486, line: 240, size: 384, elements: !677)
!677 = !{!678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !676, file: !486, line: 242, baseType: !6, size: 16, flags: DIFlagBitField, extraData: i64 0)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !676, file: !486, line: 245, baseType: !6, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !676, file: !486, line: 252, baseType: !6, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !676, file: !486, line: 257, baseType: !6, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !676, file: !486, line: 265, baseType: !6, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !676, file: !486, line: 277, baseType: !6, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !676, file: !486, line: 291, baseType: !6, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !676, file: !486, line: 298, baseType: !6, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !676, file: !486, line: 305, baseType: !6, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !676, file: !486, line: 310, baseType: !6, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !676, file: !486, line: 321, baseType: !689, size: 320, offset: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !486, line: 315, size: 320, elements: !690)
!690 = !{!691, !1989, !1991, !2052, !2053}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !689, file: !486, line: 316, baseType: !692, size: 64)
!692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !693, size: 64, elements: !708)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !486, line: 183, baseType: !694)
!694 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !486, line: 166, size: 64, elements: !695)
!695 = !{!696, !697, !698, !699, !700, !710, !711, !723, !726, !787, !1967, !1968, !1979, !1986}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !694, file: !486, line: 168, baseType: !659, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !694, file: !486, line: 169, baseType: !6, size: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !694, file: !486, line: 170, baseType: !664, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !694, file: !486, line: 171, baseType: !673, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !694, file: !486, line: 172, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !674, line: 53, baseType: !702)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !486, line: 359, size: 128, elements: !704)
!704 = !{!705, !706}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !703, file: !486, line: 360, baseType: !659, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !703, file: !486, line: 361, baseType: !707, size: 64, offset: 64)
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !673, size: 64, elements: !708)
!708 = !{!709}
!709 = !DISubrange(count: 1)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !694, file: !486, line: 173, baseType: !8, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !694, file: !486, line: 174, baseType: !712, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !486, line: 133, baseType: !713)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !486, line: 115, size: 32, elements: !714)
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !713, file: !486, line: 118, baseType: !6, size: 8, flags: DIFlagBitField, extraData: i64 0)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !713, file: !486, line: 120, baseType: !6, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !713, file: !486, line: 121, baseType: !6, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !713, file: !486, line: 123, baseType: !6, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !713, file: !486, line: 125, baseType: !6, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !713, file: !486, line: 127, baseType: !6, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !713, file: !486, line: 130, baseType: !6, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !713, file: !486, line: 132, baseType: !6, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !694, file: !486, line: 175, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !486, line: 175, flags: DIFlagFwdDecl)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !694, file: !486, line: 176, baseType: !727, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !729, line: 75, size: 256, elements: !730)
!729 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!730 = !{!731, !746, !747, !748}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !728, file: !729, line: 76, baseType: !732, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !729, line: 68, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !729, line: 63, size: 320, elements: !735)
!735 = !{!736, !738, !739, !740}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !734, file: !729, line: 64, baseType: !737, size: 64)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !734, file: !729, line: 65, baseType: !737, size: 64, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !734, file: !729, line: 66, baseType: !6, size: 32, offset: 128)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !734, file: !729, line: 67, baseType: !741, size: 128, offset: 192)
!741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !742, size: 128, elements: !744)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !729, line: 29, baseType: !743)
!743 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!744 = !{!745}
!745 = !DISubrange(count: 2)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !728, file: !729, line: 77, baseType: !732, size: 64, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !728, file: !729, line: 78, baseType: !6, size: 32, offset: 128)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !728, file: !729, line: 79, baseType: !749, size: 64, offset: 192)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !729, line: 49, baseType: !751)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !729, line: 45, size: 832, elements: !752)
!752 = !{!753, !754, !755}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !751, file: !729, line: 46, baseType: !737, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !751, file: !729, line: 47, baseType: !727, size: 64, offset: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !751, file: !729, line: 48, baseType: !756, size: 704, offset: 128)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !757, line: 164, size: 704, elements: !758)
!757 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!758 = !{!759, !760, !770, !771, !772, !773, !774, !775, !779, !783, !784, !785, !786}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !756, file: !757, line: 166, baseType: !7, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !756, file: !757, line: 167, baseType: !761, size: 64, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !757, line: 157, size: 192, elements: !763)
!763 = !{!764, !765, !766}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !762, file: !757, line: 159, baseType: !661, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !762, file: !757, line: 160, baseType: !761, size: 64, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !762, file: !757, line: 161, baseType: !767, size: 32, offset: 128)
!767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, size: 32, elements: !768)
!768 = !{!769}
!769 = !DISubrange(count: 4)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !756, file: !757, line: 168, baseType: !661, size: 64, offset: 128)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !756, file: !757, line: 169, baseType: !661, size: 64, offset: 192)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !756, file: !757, line: 170, baseType: !661, size: 64, offset: 256)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !756, file: !757, line: 171, baseType: !7, size: 64, offset: 320)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !756, file: !757, line: 172, baseType: !659, size: 32, offset: 384)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !756, file: !757, line: 176, baseType: !776, size: 64, offset: 448)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!761, !663, !7}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !756, file: !757, line: 177, baseType: !780, size: 64, offset: 512)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{null, !663, !761}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !756, file: !757, line: 178, baseType: !663, size: 64, offset: 576)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !756, file: !757, line: 179, baseType: !6, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !756, file: !757, line: 180, baseType: !6, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !756, file: !757, line: 184, baseType: !6, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !694, file: !486, line: 177, baseType: !788, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !674, line: 56, baseType: !789)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !160, line: 3371, size: 1792, elements: !791)
!791 = !{!792, !825, !831, !842, !861, !872, !877, !884, !890, !903, !915, !953, !958, !986, !1003, !1004, !1009, !1018, !1024, !1029, !1033, !1037, !1616, !1665, !1671, !1677, !1684, !1697, !1711, !1728, !1740, !1762, !1777, !1949}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !790, file: !160, line: 3372, baseType: !793, size: 64)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !160, line: 360, size: 64, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !793, file: !160, line: 361, baseType: !6, size: 16, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !793, file: !160, line: 363, baseType: !6, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !793, file: !160, line: 364, baseType: !6, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !793, file: !160, line: 365, baseType: !6, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !793, file: !160, line: 366, baseType: !6, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !793, file: !160, line: 367, baseType: !6, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !793, file: !160, line: 368, baseType: !6, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !793, file: !160, line: 369, baseType: !6, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !793, file: !160, line: 370, baseType: !6, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !793, file: !160, line: 372, baseType: !6, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !793, file: !160, line: 373, baseType: !6, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !793, file: !160, line: 374, baseType: !6, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !793, file: !160, line: 375, baseType: !6, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !793, file: !160, line: 376, baseType: !6, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !793, file: !160, line: 377, baseType: !6, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !793, file: !160, line: 378, baseType: !6, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !793, file: !160, line: 379, baseType: !6, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !793, file: !160, line: 381, baseType: !6, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !793, file: !160, line: 382, baseType: !6, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !793, file: !160, line: 383, baseType: !6, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !793, file: !160, line: 384, baseType: !6, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !793, file: !160, line: 385, baseType: !6, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !793, file: !160, line: 386, baseType: !6, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !793, file: !160, line: 387, baseType: !6, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !793, file: !160, line: 388, baseType: !6, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !793, file: !160, line: 390, baseType: !6, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !793, file: !160, line: 391, baseType: !6, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !793, file: !160, line: 392, baseType: !6, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !793, file: !160, line: 394, baseType: !6, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !793, file: !160, line: 399, baseType: !6, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !790, file: !160, line: 3373, baseType: !826, size: 192)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !160, line: 402, size: 192, elements: !827)
!827 = !{!828, !829, !830}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !826, file: !160, line: 403, baseType: !793, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !826, file: !160, line: 404, baseType: !788, size: 64, offset: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !826, file: !160, line: 405, baseType: !788, size: 64, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !790, file: !160, line: 3374, baseType: !832, size: 320)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !160, line: 1384, size: 320, elements: !833)
!833 = !{!834, !835}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !832, file: !160, line: 1385, baseType: !826, size: 192)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !832, file: !160, line: 1386, baseType: !836, size: 128, offset: 192)
!836 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !837, line: 58, baseType: !838)
!837 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !837, line: 54, size: 128, elements: !839)
!839 = !{!840, !841}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !838, file: !837, line: 56, baseType: !743, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !838, file: !837, line: 57, baseType: !7, size: 64, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !790, file: !160, line: 3375, baseType: !843, size: 256)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !160, line: 1397, size: 256, elements: !844)
!844 = !{!845, !846}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !843, file: !160, line: 1398, baseType: !826, size: 192)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !843, file: !160, line: 1399, baseType: !847, size: 64, offset: 192)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !849, line: 52, size: 256, elements: !850)
!849 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!850 = !{!851, !852, !853, !854, !855, !856, !857}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !848, file: !849, line: 56, baseType: !6, size: 2, flags: DIFlagBitField, extraData: i64 0)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !848, file: !849, line: 57, baseType: !6, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !848, file: !849, line: 58, baseType: !6, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !848, file: !849, line: 59, baseType: !6, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !848, file: !849, line: 60, baseType: !6, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !848, file: !849, line: 61, baseType: !6, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !848, file: !849, line: 62, baseType: !858, size: 192, offset: 64)
!858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !743, size: 192, elements: !859)
!859 = !{!860}
!860 = !DISubrange(count: 3)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !790, file: !160, line: 3376, baseType: !862, size: 256)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !160, line: 1408, size: 256, elements: !863)
!863 = !{!864, !865}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !862, file: !160, line: 1409, baseType: !826, size: 192)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !862, file: !160, line: 1410, baseType: !866, size: 64, offset: 192)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !868, line: 27, size: 192, elements: !869)
!868 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!869 = !{!870, !871}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !867, file: !868, line: 29, baseType: !836, size: 128)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !867, file: !868, line: 30, baseType: !8, size: 32, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !790, file: !160, line: 3377, baseType: !873, size: 256)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !160, line: 1437, size: 256, elements: !874)
!874 = !{!875, !876}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !873, file: !160, line: 1438, baseType: !826, size: 192)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !873, file: !160, line: 1439, baseType: !788, size: 64, offset: 192)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !790, file: !160, line: 3378, baseType: !878, size: 256)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !160, line: 1418, size: 256, elements: !879)
!879 = !{!880, !881, !882}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !878, file: !160, line: 1419, baseType: !826, size: 192)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !878, file: !160, line: 1420, baseType: !659, size: 32, offset: 192)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !878, file: !160, line: 1421, baseType: !883, size: 8, offset: 224)
!883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, size: 8, elements: !708)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !790, file: !160, line: 3379, baseType: !885, size: 320)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !160, line: 1428, size: 320, elements: !886)
!886 = !{!887, !888, !889}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !885, file: !160, line: 1429, baseType: !826, size: 192)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !885, file: !160, line: 1430, baseType: !788, size: 64, offset: 192)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !885, file: !160, line: 1431, baseType: !788, size: 64, offset: 256)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !790, file: !160, line: 3380, baseType: !891, size: 320)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !160, line: 1460, size: 320, elements: !892)
!892 = !{!893, !894}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !891, file: !160, line: 1461, baseType: !826, size: 192)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !891, file: !160, line: 1462, baseType: !895, size: 128, offset: 192)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !896, line: 31, size: 128, elements: !897)
!896 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!897 = !{!898, !901, !902}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !895, file: !896, line: 32, baseType: !899, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !895, file: !896, line: 33, baseType: !6, size: 32, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !895, file: !896, line: 34, baseType: !6, size: 32, offset: 96)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !790, file: !160, line: 3381, baseType: !904, size: 384)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !160, line: 2507, size: 384, elements: !905)
!905 = !{!906, !907, !912, !913, !914}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !904, file: !160, line: 2508, baseType: !826, size: 192)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !904, file: !160, line: 2509, baseType: !908, size: 32, offset: 192)
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !909, line: 58, baseType: !910)
!909 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !911, line: 44, baseType: !6)
!911 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!912 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !904, file: !160, line: 2510, baseType: !6, size: 32, offset: 224)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !904, file: !160, line: 2511, baseType: !788, size: 64, offset: 256)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !904, file: !160, line: 2512, baseType: !788, size: 64, offset: 320)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !790, file: !160, line: 3382, baseType: !916, size: 896)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !160, line: 2652, size: 896, elements: !917)
!917 = !{!918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !916, file: !160, line: 2653, baseType: !904, size: 384)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !916, file: !160, line: 2654, baseType: !788, size: 64, offset: 384)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !916, file: !160, line: 2656, baseType: !6, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !916, file: !160, line: 2658, baseType: !6, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !916, file: !160, line: 2659, baseType: !6, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !916, file: !160, line: 2660, baseType: !6, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !916, file: !160, line: 2661, baseType: !6, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !916, file: !160, line: 2662, baseType: !6, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !916, file: !160, line: 2663, baseType: !6, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !916, file: !160, line: 2664, baseType: !6, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !916, file: !160, line: 2666, baseType: !6, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !916, file: !160, line: 2667, baseType: !6, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !916, file: !160, line: 2668, baseType: !6, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !916, file: !160, line: 2669, baseType: !6, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !916, file: !160, line: 2670, baseType: !6, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !916, file: !160, line: 2671, baseType: !6, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !916, file: !160, line: 2672, baseType: !6, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !916, file: !160, line: 2673, baseType: !6, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !916, file: !160, line: 2674, baseType: !6, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !916, file: !160, line: 2678, baseType: !6, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !916, file: !160, line: 2682, baseType: !6, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !916, file: !160, line: 2685, baseType: !6, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !916, file: !160, line: 2688, baseType: !6, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !916, file: !160, line: 2690, baseType: !6, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !916, file: !160, line: 2692, baseType: !6, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !916, file: !160, line: 2695, baseType: !6, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !916, file: !160, line: 2698, baseType: !6, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !916, file: !160, line: 2703, baseType: !6, size: 32, offset: 512)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !916, file: !160, line: 2705, baseType: !788, size: 64, offset: 576)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !916, file: !160, line: 2706, baseType: !788, size: 64, offset: 640)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !916, file: !160, line: 2707, baseType: !788, size: 64, offset: 704)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !916, file: !160, line: 2708, baseType: !788, size: 64, offset: 768)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !916, file: !160, line: 2711, baseType: !951, size: 64, offset: 832)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !160, line: 2711, flags: DIFlagFwdDecl)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !790, file: !160, line: 3383, baseType: !954, size: 960)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !160, line: 2756, size: 960, elements: !955)
!955 = !{!956, !957}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !954, file: !160, line: 2757, baseType: !916, size: 896)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !954, file: !160, line: 2758, baseType: !673, size: 64, offset: 896)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !790, file: !160, line: 3384, baseType: !959, size: 1472)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !160, line: 3114, size: 1472, elements: !960)
!960 = !{!961, !982, !983, !984, !985}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !959, file: !160, line: 3115, baseType: !962, size: 1216)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !160, line: 2984, size: 1216, elements: !963)
!963 = !{!964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !962, file: !160, line: 2985, baseType: !954, size: 960)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !962, file: !160, line: 2986, baseType: !788, size: 64, offset: 960)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !962, file: !160, line: 2987, baseType: !788, size: 64, offset: 1024)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !962, file: !160, line: 2988, baseType: !788, size: 64, offset: 1088)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !962, file: !160, line: 2991, baseType: !6, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !962, file: !160, line: 2992, baseType: !6, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !962, file: !160, line: 2993, baseType: !6, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !962, file: !160, line: 2994, baseType: !6, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !962, file: !160, line: 2995, baseType: !6, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !962, file: !160, line: 2996, baseType: !6, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !962, file: !160, line: 2998, baseType: !6, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !962, file: !160, line: 3000, baseType: !6, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !962, file: !160, line: 3002, baseType: !6, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !962, file: !160, line: 3003, baseType: !6, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !962, file: !160, line: 3004, baseType: !6, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !962, file: !160, line: 3005, baseType: !6, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !962, file: !160, line: 3007, baseType: !6, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !962, file: !160, line: 3010, baseType: !6, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !959, file: !160, line: 3117, baseType: !788, size: 64, offset: 1216)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !959, file: !160, line: 3119, baseType: !788, size: 64, offset: 1280)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !959, file: !160, line: 3121, baseType: !788, size: 64, offset: 1344)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !959, file: !160, line: 3123, baseType: !788, size: 64, offset: 1408)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !790, file: !160, line: 3385, baseType: !987, size: 1088)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !160, line: 2874, size: 1088, elements: !988)
!988 = !{!989, !990, !991}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !987, file: !160, line: 2875, baseType: !954, size: 960)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !987, file: !160, line: 2876, baseType: !673, size: 64, offset: 960)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !987, file: !160, line: 2877, baseType: !992, size: 64, offset: 1024)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !994, line: 172, size: 128, elements: !995)
!994 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!995 = !{!996, !997, !998, !999, !1000, !1001, !1002}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !993, file: !994, line: 174, baseType: !6, size: 1, flags: DIFlagBitField, extraData: i64 0)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !993, file: !994, line: 178, baseType: !6, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !993, file: !994, line: 183, baseType: !6, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !993, file: !994, line: 187, baseType: !6, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !993, file: !994, line: 192, baseType: !6, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !993, file: !994, line: 195, baseType: !6, size: 32, offset: 32)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !993, file: !994, line: 199, baseType: !788, size: 64, offset: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !790, file: !160, line: 3386, baseType: !962, size: 1216)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !790, file: !160, line: 3387, baseType: !1005, size: 1280)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !160, line: 3093, size: 1280, elements: !1006)
!1006 = !{!1007, !1008}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1005, file: !160, line: 3094, baseType: !962, size: 1216)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1005, file: !160, line: 3095, baseType: !992, size: 64, offset: 1216)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !790, file: !160, line: 3388, baseType: !1010, size: 1216)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !160, line: 2824, size: 1216, elements: !1011)
!1011 = !{!1012, !1013, !1014, !1015, !1016, !1017}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1010, file: !160, line: 2825, baseType: !916, size: 896)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1010, file: !160, line: 2827, baseType: !788, size: 64, offset: 896)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1010, file: !160, line: 2828, baseType: !788, size: 64, offset: 960)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1010, file: !160, line: 2829, baseType: !788, size: 64, offset: 1024)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1010, file: !160, line: 2830, baseType: !788, size: 64, offset: 1088)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1010, file: !160, line: 2831, baseType: !788, size: 64, offset: 1152)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !790, file: !160, line: 3389, baseType: !1019, size: 1024)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !160, line: 2850, size: 1024, elements: !1020)
!1020 = !{!1021, !1022, !1023}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1019, file: !160, line: 2851, baseType: !954, size: 960)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1019, file: !160, line: 2852, baseType: !659, size: 32, offset: 960)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1019, file: !160, line: 2853, baseType: !659, size: 32, offset: 992)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !790, file: !160, line: 3390, baseType: !1025, size: 1024)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !160, line: 2857, size: 1024, elements: !1026)
!1026 = !{!1027, !1028}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1025, file: !160, line: 2858, baseType: !954, size: 960)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1025, file: !160, line: 2859, baseType: !992, size: 64, offset: 960)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !790, file: !160, line: 3391, baseType: !1030, size: 960)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !160, line: 2862, size: 960, elements: !1031)
!1031 = !{!1032}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1030, file: !160, line: 2863, baseType: !954, size: 960)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !790, file: !160, line: 3392, baseType: !1034, size: 1472)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !160, line: 3304, size: 1472, elements: !1035)
!1035 = !{!1036}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1034, file: !160, line: 3305, baseType: !959, size: 1472)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !790, file: !160, line: 3393, baseType: !1038, size: 1792)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !160, line: 3248, size: 1792, elements: !1039)
!1039 = !{!1040, !1041, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1038, file: !160, line: 3249, baseType: !959, size: 1472)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1038, file: !160, line: 3251, baseType: !1042, size: 64, offset: 1472)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !642, line: 463, size: 1152, elements: !1044)
!1044 = !{!1045, !1048, !1415, !1416, !1531, !1539, !1540, !1541, !1542, !1543, !1544, !1568, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1043, file: !642, line: 464, baseType: !1046, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !642, line: 464, flags: DIFlagFwdDecl)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1043, file: !642, line: 467, baseType: !1049, size: 64, offset: 64)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !149, line: 374, size: 640, elements: !1051)
!1051 = !{!1052, !1390, !1391, !1404, !1405, !1406, !1407, !1408, !1409, !1411, !1413, !1414}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1050, file: !149, line: 377, baseType: !1053, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !674, line: 111, baseType: !1054)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !149, line: 217, size: 832, elements: !1056)
!1056 = !{!1057, !1302, !1303, !1304, !1360, !1364, !1365, !1366, !1384, !1385, !1386, !1387, !1388, !1389}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1055, file: !149, line: 219, baseType: !1058, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !149, line: 151, baseType: !1060)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !149, line: 151, size: 128, elements: !1061)
!1061 = !{!1062}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1060, file: !149, line: 151, baseType: !1063, size: 128)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !149, line: 150, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !149, line: 150, size: 128, elements: !1065)
!1065 = !{!1066, !1067, !1068}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1064, file: !149, line: 150, baseType: !6, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1064, file: !149, line: 150, baseType: !6, size: 32, offset: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1064, file: !149, line: 150, baseType: !1069, size: 64, offset: 64)
!1069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 64, elements: !708)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !674, line: 108, baseType: !1071)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !149, line: 122, size: 512, elements: !1073)
!1073 = !{!1074, !1075, !1076, !1294, !1295, !1296, !1297, !1298, !1299, !1300}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1072, file: !149, line: 124, baseType: !1054, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1072, file: !149, line: 125, baseType: !1054, size: 64, offset: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1072, file: !149, line: 131, baseType: !1077, size: 64, offset: 128)
!1077 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !149, line: 128, size: 64, elements: !1078)
!1078 = !{!1079, !1293}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1077, file: !149, line: 129, baseType: !1080, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !674, line: 66, baseType: !1081)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !421, line: 143, size: 192, elements: !1083)
!1083 = !{!1084, !1291, !1292}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1082, file: !421, line: 145, baseType: !1085, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !674, line: 69, baseType: !1086)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !421, line: 136, size: 192, elements: !1088)
!1088 = !{!1089, !1289, !1290}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1087, file: !421, line: 137, baseType: !1090, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !674, line: 58, baseType: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !421, line: 737, size: 768, elements: !1093)
!1093 = !{!1094, !1111, !1144, !1150, !1155, !1160, !1167, !1173, !1179, !1184, !1198, !1203, !1209, !1214, !1224, !1229, !1247, !1254, !1261, !1267, !1272, !1278, !1284}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1092, file: !421, line: 738, baseType: !1095, size: 256)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !421, line: 271, size: 256, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1095, file: !421, line: 274, baseType: !6, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1095, file: !421, line: 277, baseType: !6, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1095, file: !421, line: 281, baseType: !6, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1095, file: !421, line: 284, baseType: !6, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1095, file: !421, line: 291, baseType: !6, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1095, file: !421, line: 295, baseType: !6, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1095, file: !421, line: 298, baseType: !6, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1095, file: !421, line: 301, baseType: !6, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1095, file: !421, line: 307, baseType: !6, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1095, file: !421, line: 312, baseType: !6, size: 32, offset: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1095, file: !421, line: 316, baseType: !908, size: 32, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1095, file: !421, line: 319, baseType: !6, size: 32, offset: 96)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1095, file: !421, line: 323, baseType: !1054, size: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1095, file: !421, line: 327, baseType: !788, size: 64, offset: 192)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1092, file: !421, line: 739, baseType: !1112, size: 448)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !421, line: 350, size: 448, elements: !1113)
!1113 = !{!1114, !1142}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1112, file: !421, line: 353, baseType: !1115, size: 384)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !421, line: 333, size: 384, elements: !1116)
!1116 = !{!1117, !1118, !1125}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1115, file: !421, line: 336, baseType: !1095, size: 256)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1115, file: !421, line: 343, baseType: !1119, size: 64, offset: 256)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !629, line: 37, size: 128, elements: !1121)
!1121 = !{!1122, !1123}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1120, file: !629, line: 39, baseType: !1119, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1120, file: !629, line: 40, baseType: !1124, size: 64, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1115, file: !421, line: 344, baseType: !1126, size: 64, offset: 320)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !629, line: 45, size: 320, elements: !1128)
!1128 = !{!1129, !1130}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1127, file: !629, line: 47, baseType: !1126, size: 64)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1127, file: !629, line: 48, baseType: !1131, size: 256, offset: 64)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !160, line: 1883, size: 256, elements: !1132)
!1132 = !{!1133, !1135, !1136, !1141}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1131, file: !160, line: 1884, baseType: !1134, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1131, file: !160, line: 1885, baseType: !1134, size: 64, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1131, file: !160, line: 1891, baseType: !1137, size: 64, offset: 128)
!1137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1131, file: !160, line: 1891, size: 64, elements: !1138)
!1138 = !{!1139, !1140}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1137, file: !160, line: 1891, baseType: !1090, size: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1137, file: !160, line: 1891, baseType: !788, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1131, file: !160, line: 1892, baseType: !1124, size: 64, offset: 192)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1112, file: !421, line: 359, baseType: !1143, size: 64, offset: 384)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !788, size: 64, elements: !708)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1092, file: !421, line: 740, baseType: !1145, size: 512)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !421, line: 365, size: 512, elements: !1146)
!1146 = !{!1147, !1148, !1149}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1145, file: !421, line: 368, baseType: !1115, size: 384)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1145, file: !421, line: 373, baseType: !788, size: 64, offset: 384)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1145, file: !421, line: 374, baseType: !788, size: 64, offset: 448)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1092, file: !421, line: 741, baseType: !1151, size: 576)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !421, line: 380, size: 576, elements: !1152)
!1152 = !{!1153, !1154}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1151, file: !421, line: 383, baseType: !1145, size: 512)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1151, file: !421, line: 389, baseType: !1143, size: 64, offset: 512)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1092, file: !421, line: 742, baseType: !1156, size: 320)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !421, line: 395, size: 320, elements: !1157)
!1157 = !{!1158, !1159}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1156, file: !421, line: 397, baseType: !1095, size: 256)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1156, file: !421, line: 400, baseType: !1080, size: 64, offset: 256)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1092, file: !421, line: 743, baseType: !1161, size: 448)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !421, line: 406, size: 448, elements: !1162)
!1162 = !{!1163, !1164, !1165, !1166}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1161, file: !421, line: 408, baseType: !1095, size: 256)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1161, file: !421, line: 412, baseType: !788, size: 64, offset: 256)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1161, file: !421, line: 420, baseType: !788, size: 64, offset: 320)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1161, file: !421, line: 423, baseType: !1080, size: 64, offset: 384)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1092, file: !421, line: 744, baseType: !1168, size: 384)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !421, line: 429, size: 384, elements: !1169)
!1169 = !{!1170, !1171, !1172}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1168, file: !421, line: 431, baseType: !1095, size: 256)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1168, file: !421, line: 434, baseType: !788, size: 64, offset: 256)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1168, file: !421, line: 437, baseType: !1080, size: 64, offset: 320)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1092, file: !421, line: 745, baseType: !1174, size: 384)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !421, line: 443, size: 384, elements: !1175)
!1175 = !{!1176, !1177, !1178}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1174, file: !421, line: 445, baseType: !1095, size: 256)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1174, file: !421, line: 449, baseType: !788, size: 64, offset: 256)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1174, file: !421, line: 453, baseType: !1080, size: 64, offset: 320)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1092, file: !421, line: 746, baseType: !1180, size: 320)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !421, line: 459, size: 320, elements: !1181)
!1181 = !{!1182, !1183}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1180, file: !421, line: 461, baseType: !1095, size: 256)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1180, file: !421, line: 464, baseType: !788, size: 64, offset: 256)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1092, file: !421, line: 747, baseType: !1185, size: 768)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !421, line: 469, size: 768, elements: !1186)
!1186 = !{!1187, !1188, !1189, !1190, !1191}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1185, file: !421, line: 471, baseType: !1095, size: 256)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1185, file: !421, line: 474, baseType: !6, size: 32, offset: 256)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1185, file: !421, line: 475, baseType: !6, size: 32, offset: 288)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1185, file: !421, line: 478, baseType: !788, size: 64, offset: 320)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1185, file: !421, line: 481, baseType: !1192, size: 384, offset: 384)
!1192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1193, size: 384, elements: !708)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !160, line: 1917, size: 384, elements: !1194)
!1194 = !{!1195, !1196, !1197}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1193, file: !160, line: 1920, baseType: !1131, size: 256)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1193, file: !160, line: 1921, baseType: !788, size: 64, offset: 256)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1193, file: !160, line: 1922, baseType: !908, size: 32, offset: 320)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1092, file: !421, line: 748, baseType: !1199, size: 320)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !421, line: 487, size: 320, elements: !1200)
!1200 = !{!1201, !1202}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1199, file: !421, line: 490, baseType: !1095, size: 256)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1199, file: !421, line: 494, baseType: !659, size: 32, offset: 256)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1092, file: !421, line: 749, baseType: !1204, size: 384)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !421, line: 500, size: 384, elements: !1205)
!1205 = !{!1206, !1207, !1208}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1204, file: !421, line: 502, baseType: !1095, size: 256)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1204, file: !421, line: 506, baseType: !1080, size: 64, offset: 256)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1204, file: !421, line: 510, baseType: !1080, size: 64, offset: 320)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1092, file: !421, line: 750, baseType: !1210, size: 320)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !421, line: 529, size: 320, elements: !1211)
!1211 = !{!1212, !1213}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1210, file: !421, line: 531, baseType: !1095, size: 256)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1210, file: !421, line: 540, baseType: !1080, size: 64, offset: 256)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1092, file: !421, line: 751, baseType: !1215, size: 704)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !421, line: 546, size: 704, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1221, !1222, !1223}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1215, file: !421, line: 549, baseType: !1145, size: 512)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1215, file: !421, line: 553, baseType: !664, size: 64, offset: 512)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1215, file: !421, line: 557, baseType: !136, size: 8, offset: 576)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1215, file: !421, line: 558, baseType: !136, size: 8, offset: 584)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1215, file: !421, line: 559, baseType: !136, size: 8, offset: 592)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1215, file: !421, line: 560, baseType: !136, size: 8, offset: 600)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1215, file: !421, line: 566, baseType: !1143, size: 64, offset: 640)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1092, file: !421, line: 752, baseType: !1225, size: 384)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !421, line: 571, size: 384, elements: !1226)
!1226 = !{!1227, !1228}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1225, file: !421, line: 573, baseType: !1156, size: 320)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1225, file: !421, line: 577, baseType: !788, size: 64, offset: 320)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1092, file: !421, line: 753, baseType: !1230, size: 576)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !421, line: 600, size: 576, elements: !1231)
!1231 = !{!1232, !1233, !1234, !1237, !1246}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1230, file: !421, line: 602, baseType: !1156, size: 320)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1230, file: !421, line: 605, baseType: !788, size: 64, offset: 320)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1230, file: !421, line: 609, baseType: !1235, size: 64, offset: 384)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1236, line: 46, baseType: !743)
!1236 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1230, file: !421, line: 612, baseType: !1238, size: 64, offset: 448)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !421, line: 581, size: 320, elements: !1240)
!1240 = !{!1241, !1242, !1243, !1244, !1245}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1239, file: !421, line: 583, baseType: !159, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1239, file: !421, line: 586, baseType: !788, size: 64, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1239, file: !421, line: 589, baseType: !788, size: 64, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1239, file: !421, line: 592, baseType: !788, size: 64, offset: 192)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1239, file: !421, line: 595, baseType: !788, size: 64, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1230, file: !421, line: 616, baseType: !1080, size: 64, offset: 512)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1092, file: !421, line: 754, baseType: !1248, size: 512)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !421, line: 622, size: 512, elements: !1249)
!1249 = !{!1250, !1251, !1252, !1253}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1248, file: !421, line: 624, baseType: !1156, size: 320)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1248, file: !421, line: 628, baseType: !788, size: 64, offset: 320)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1248, file: !421, line: 632, baseType: !788, size: 64, offset: 384)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1248, file: !421, line: 636, baseType: !788, size: 64, offset: 448)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1092, file: !421, line: 755, baseType: !1255, size: 704)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !421, line: 642, size: 704, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1255, file: !421, line: 644, baseType: !1248, size: 512)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1255, file: !421, line: 648, baseType: !788, size: 64, offset: 512)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1255, file: !421, line: 652, baseType: !788, size: 64, offset: 576)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1255, file: !421, line: 653, baseType: !788, size: 64, offset: 640)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1092, file: !421, line: 756, baseType: !1262, size: 448)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !421, line: 663, size: 448, elements: !1263)
!1263 = !{!1264, !1265, !1266}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1262, file: !421, line: 665, baseType: !1156, size: 320)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1262, file: !421, line: 668, baseType: !788, size: 64, offset: 320)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1262, file: !421, line: 673, baseType: !788, size: 64, offset: 384)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1092, file: !421, line: 757, baseType: !1268, size: 384)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !421, line: 694, size: 384, elements: !1269)
!1269 = !{!1270, !1271}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1268, file: !421, line: 696, baseType: !1156, size: 320)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1268, file: !421, line: 699, baseType: !788, size: 64, offset: 320)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1092, file: !421, line: 758, baseType: !1273, size: 384)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !421, line: 681, size: 384, elements: !1274)
!1274 = !{!1275, !1276, !1277}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1273, file: !421, line: 683, baseType: !1095, size: 256)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1273, file: !421, line: 686, baseType: !788, size: 64, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1273, file: !421, line: 689, baseType: !788, size: 64, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1092, file: !421, line: 759, baseType: !1279, size: 384)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !421, line: 707, size: 384, elements: !1280)
!1280 = !{!1281, !1282, !1283}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1279, file: !421, line: 709, baseType: !1095, size: 256)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1279, file: !421, line: 712, baseType: !788, size: 64, offset: 256)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1279, file: !421, line: 712, baseType: !788, size: 64, offset: 320)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1092, file: !421, line: 760, baseType: !1285, size: 320)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !421, line: 718, size: 320, elements: !1286)
!1286 = !{!1287, !1288}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1285, file: !421, line: 720, baseType: !1095, size: 256)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1285, file: !421, line: 723, baseType: !788, size: 64, offset: 256)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1087, file: !421, line: 138, baseType: !1086, size: 64, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1087, file: !421, line: 139, baseType: !1086, size: 64, offset: 128)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1082, file: !421, line: 146, baseType: !1085, size: 64, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1082, file: !421, line: 152, baseType: !1080, size: 64, offset: 128)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1077, file: !149, line: 130, baseType: !673, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1072, file: !149, line: 134, baseType: !663, size: 64, offset: 192)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1072, file: !149, line: 137, baseType: !788, size: 64, offset: 256)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1072, file: !149, line: 138, baseType: !908, size: 32, offset: 320)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1072, file: !149, line: 142, baseType: !6, size: 32, offset: 352)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1072, file: !149, line: 144, baseType: !659, size: 32, offset: 384)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1072, file: !149, line: 145, baseType: !659, size: 32, offset: 416)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1072, file: !149, line: 146, baseType: !1301, size: 64, offset: 448)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !149, line: 119, baseType: !7)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1055, file: !149, line: 220, baseType: !1058, size: 64, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1055, file: !149, line: 223, baseType: !663, size: 64, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1055, file: !149, line: 226, baseType: !1305, size: 64, offset: 192)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !140, line: 100, size: 1216, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1312, !1317, !1318, !1319, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1350, !1358, !1359}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1306, file: !140, line: 102, baseType: !659, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1306, file: !140, line: 105, baseType: !6, size: 32, offset: 32)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1306, file: !140, line: 108, baseType: !1054, size: 64, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1306, file: !140, line: 111, baseType: !1054, size: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1306, file: !140, line: 114, baseType: !1313, size: 64, offset: 192)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !140, line: 41, size: 64, elements: !1314)
!1314 = !{!1315, !1316}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1313, file: !140, line: 42, baseType: !139, size: 32)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1313, file: !140, line: 43, baseType: !6, size: 32, offset: 32)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1306, file: !140, line: 117, baseType: !6, size: 32, offset: 256)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1306, file: !140, line: 120, baseType: !6, size: 32, offset: 288)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1306, file: !140, line: 123, baseType: !1320, size: 64, offset: 320)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !140, line: 87, baseType: !1322)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !140, line: 87, size: 128, elements: !1323)
!1323 = !{!1324}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1322, file: !140, line: 87, baseType: !1325, size: 128)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !140, line: 85, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !140, line: 85, size: 128, elements: !1327)
!1327 = !{!1328, !1329, !1330}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1326, file: !140, line: 85, baseType: !6, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1326, file: !140, line: 85, baseType: !6, size: 32, offset: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1326, file: !140, line: 85, baseType: !1331, size: 64, offset: 64)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1332, size: 64, elements: !708)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !140, line: 84, baseType: !1305)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1306, file: !140, line: 126, baseType: !1305, size: 64, offset: 384)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1306, file: !140, line: 129, baseType: !1305, size: 64, offset: 448)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1306, file: !140, line: 132, baseType: !663, size: 64, offset: 512)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1306, file: !140, line: 139, baseType: !788, size: 64, offset: 576)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1306, file: !140, line: 143, baseType: !836, size: 128, offset: 640)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1306, file: !140, line: 146, baseType: !836, size: 128, offset: 768)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1306, file: !140, line: 148, baseType: !136, size: 8, offset: 896)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1306, file: !140, line: 149, baseType: !136, size: 8, offset: 904)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1306, file: !140, line: 153, baseType: !391, size: 32, offset: 928)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1306, file: !140, line: 156, baseType: !1343, size: 64, offset: 960)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !140, line: 48, size: 320, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1344, file: !140, line: 50, baseType: !1090, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1344, file: !140, line: 59, baseType: !836, size: 128, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1344, file: !140, line: 64, baseType: !136, size: 8, offset: 192)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1344, file: !140, line: 67, baseType: !1343, size: 64, offset: 256)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1306, file: !140, line: 159, baseType: !1351, size: 64, offset: 1024)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !140, line: 72, size: 256, elements: !1353)
!1353 = !{!1354, !1355, !1356, !1357}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1352, file: !140, line: 74, baseType: !1071, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1352, file: !140, line: 77, baseType: !1351, size: 64, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1352, file: !140, line: 78, baseType: !1351, size: 64, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1352, file: !140, line: 81, baseType: !1351, size: 64, offset: 192)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1306, file: !140, line: 162, baseType: !136, size: 8, offset: 1088)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1306, file: !140, line: 166, baseType: !788, size: 64, offset: 1152)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1055, file: !149, line: 229, baseType: !1361, size: 128, offset: 256)
!1361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1362, size: 128, elements: !744)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !149, line: 229, flags: DIFlagFwdDecl)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1055, file: !149, line: 232, baseType: !1054, size: 64, offset: 384)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1055, file: !149, line: 233, baseType: !1054, size: 64, offset: 448)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1055, file: !149, line: 238, baseType: !1367, size: 64, offset: 512)
!1367 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !149, line: 235, size: 64, elements: !1368)
!1368 = !{!1369, !1375}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1367, file: !149, line: 236, baseType: !1370, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !149, line: 273, size: 128, elements: !1372)
!1372 = !{!1373, !1374}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1371, file: !149, line: 275, baseType: !1080, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1371, file: !149, line: 278, baseType: !1080, size: 64, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1367, file: !149, line: 237, baseType: !1376, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !149, line: 259, size: 320, elements: !1378)
!1378 = !{!1379, !1380, !1381, !1382, !1383}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1377, file: !149, line: 261, baseType: !673, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1377, file: !149, line: 262, baseType: !673, size: 64, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1377, file: !149, line: 266, baseType: !673, size: 64, offset: 128)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1377, file: !149, line: 267, baseType: !673, size: 64, offset: 192)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1377, file: !149, line: 270, baseType: !659, size: 32, offset: 256)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1055, file: !149, line: 241, baseType: !1301, size: 64, offset: 576)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1055, file: !149, line: 244, baseType: !659, size: 32, offset: 640)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1055, file: !149, line: 247, baseType: !659, size: 32, offset: 672)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1055, file: !149, line: 250, baseType: !659, size: 32, offset: 704)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1055, file: !149, line: 253, baseType: !659, size: 32, offset: 736)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1055, file: !149, line: 256, baseType: !659, size: 32, offset: 768)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1050, file: !149, line: 378, baseType: !1053, size: 64, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1050, file: !149, line: 381, baseType: !1392, size: 64, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !149, line: 282, baseType: !1394)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !149, line: 282, size: 128, elements: !1395)
!1395 = !{!1396}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1394, file: !149, line: 282, baseType: !1397, size: 128)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !149, line: 281, baseType: !1398)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !149, line: 281, size: 128, elements: !1399)
!1399 = !{!1400, !1401, !1402}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1398, file: !149, line: 281, baseType: !6, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1398, file: !149, line: 281, baseType: !6, size: 32, offset: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1398, file: !149, line: 281, baseType: !1403, size: 64, offset: 64)
!1403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 64, elements: !708)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1050, file: !149, line: 384, baseType: !659, size: 32, offset: 192)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1050, file: !149, line: 387, baseType: !659, size: 32, offset: 224)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1050, file: !149, line: 390, baseType: !659, size: 32, offset: 256)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1050, file: !149, line: 394, baseType: !1392, size: 64, offset: 320)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1050, file: !149, line: 396, baseType: !148, size: 32, offset: 384)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1050, file: !149, line: 399, baseType: !1410, size: 64, offset: 416)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 64, elements: !744)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1050, file: !149, line: 402, baseType: !1412, size: 64, offset: 480)
!1412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 64, elements: !744)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1050, file: !149, line: 406, baseType: !659, size: 32, offset: 544)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1050, file: !149, line: 409, baseType: !659, size: 32, offset: 576)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1043, file: !642, line: 470, baseType: !1081, size: 64, offset: 128)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1043, file: !642, line: 473, baseType: !1417, size: 64, offset: 192)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !994, line: 39, size: 1152, elements: !1419)
!1419 = !{!1420, !1470, !1483, !1495, !1496, !1508, !1509, !1513, !1514, !1515, !1516, !1517}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1418, file: !994, line: 41, baseType: !1421, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1422, line: 144, baseType: !1423)
!1422 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1422, line: 100, size: 896, elements: !1425)
!1425 = !{!1426, !1434, !1439, !1444, !1446, !1447, !1448, !1449, !1450, !1451, !1456, !1458, !1459, !1464, !1469}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1424, file: !1422, line: 102, baseType: !1427, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1422, line: 52, baseType: !1428)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!1431, !1432}
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1422, line: 47, baseType: !6)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1424, file: !1422, line: 105, baseType: !1435, size: 64, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1422, line: 59, baseType: !1436)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = !DISubroutineType(types: !1438)
!1438 = !{!659, !1432, !1432}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1424, file: !1422, line: 108, baseType: !1440, size: 64, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1422, line: 63, baseType: !1441)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{null, !663}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1424, file: !1422, line: 111, baseType: !1445, size: 64, offset: 192)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1424, file: !1422, line: 114, baseType: !1235, size: 64, offset: 256)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1424, file: !1422, line: 117, baseType: !1235, size: 64, offset: 320)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1424, file: !1422, line: 120, baseType: !1235, size: 64, offset: 384)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1424, file: !1422, line: 124, baseType: !6, size: 32, offset: 448)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1424, file: !1422, line: 128, baseType: !6, size: 32, offset: 480)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1424, file: !1422, line: 131, baseType: !1452, size: 64, offset: 512)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1422, line: 75, baseType: !1453)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!663, !1235, !1235}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1424, file: !1422, line: 132, baseType: !1457, size: 64, offset: 576)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1422, line: 78, baseType: !1441)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1424, file: !1422, line: 135, baseType: !663, size: 64, offset: 640)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1424, file: !1422, line: 136, baseType: !1460, size: 64, offset: 704)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1422, line: 82, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!663, !663, !1235, !1235}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1424, file: !1422, line: 137, baseType: !1465, size: 64, offset: 768)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1422, line: 83, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{null, !663, !663}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1424, file: !1422, line: 141, baseType: !6, size: 32, offset: 832)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1418, file: !994, line: 48, baseType: !1471, size: 64, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !421, line: 35, baseType: !1473)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !421, line: 35, size: 128, elements: !1474)
!1474 = !{!1475}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1473, file: !421, line: 35, baseType: !1476, size: 128)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !421, line: 33, baseType: !1477)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !421, line: 33, size: 128, elements: !1478)
!1478 = !{!1479, !1480, !1481}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1477, file: !421, line: 33, baseType: !6, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1477, file: !421, line: 33, baseType: !6, size: 32, offset: 32)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1477, file: !421, line: 33, baseType: !1482, size: 64, offset: 64)
!1482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1090, size: 64, elements: !708)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1418, file: !994, line: 51, baseType: !1484, size: 64, offset: 128)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !160, line: 183, baseType: !1486)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !160, line: 183, size: 128, elements: !1487)
!1487 = !{!1488}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1486, file: !160, line: 183, baseType: !1489, size: 128)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !160, line: 182, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !160, line: 182, size: 128, elements: !1491)
!1491 = !{!1492, !1493, !1494}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1490, file: !160, line: 182, baseType: !6, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1490, file: !160, line: 182, baseType: !6, size: 32, offset: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1490, file: !160, line: 182, baseType: !1143, size: 64, offset: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1418, file: !994, line: 54, baseType: !788, size: 64, offset: 192)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1418, file: !994, line: 57, baseType: !1497, size: 128, offset: 256)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1498, line: 31, size: 128, elements: !1499)
!1498 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1499 = !{!1500, !1501, !1502, !1503, !1504, !1505, !1506}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1497, file: !1498, line: 35, baseType: !6, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1497, file: !1498, line: 39, baseType: !6, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1497, file: !1498, line: 42, baseType: !6, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1497, file: !1498, line: 46, baseType: !6, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1497, file: !1498, line: 50, baseType: !6, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1497, file: !1498, line: 53, baseType: !6, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1497, file: !1498, line: 56, baseType: !1507, size: 64, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !674, line: 47, baseType: !727)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1418, file: !994, line: 60, baseType: !1497, size: 128, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1418, file: !994, line: 64, baseType: !1510, size: 64, offset: 512)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1512, line: 33, flags: DIFlagFwdDecl)
!1512 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1418, file: !994, line: 67, baseType: !788, size: 64, offset: 576)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1418, file: !994, line: 73, baseType: !1421, size: 64, offset: 640)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1418, file: !994, line: 77, baseType: !1507, size: 64, offset: 704)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1418, file: !994, line: 80, baseType: !6, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1418, file: !994, line: 82, baseType: !1518, size: 320, offset: 832)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !629, line: 62, size: 320, elements: !1519)
!1519 = !{!1520, !1526, !1527, !1528, !1529, !1530}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1518, file: !629, line: 63, baseType: !1521, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !629, line: 56, size: 128, elements: !1523)
!1523 = !{!1524, !1525}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1522, file: !629, line: 57, baseType: !1521, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1522, file: !629, line: 58, baseType: !883, size: 8, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1518, file: !629, line: 64, baseType: !6, size: 32, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1518, file: !629, line: 66, baseType: !6, size: 32, offset: 96)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1518, file: !629, line: 68, baseType: !136, size: 8, offset: 128)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1518, file: !629, line: 70, baseType: !1119, size: 64, offset: 192)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1518, file: !629, line: 71, baseType: !1126, size: 64, offset: 256)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1043, file: !642, line: 476, baseType: !1532, size: 64, offset: 256)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !140, line: 187, size: 256, elements: !1534)
!1534 = !{!1535, !1536, !1537, !1538}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1533, file: !140, line: 189, baseType: !659, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1533, file: !140, line: 192, baseType: !1320, size: 64, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1533, file: !140, line: 197, baseType: !1421, size: 64, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1533, file: !140, line: 200, baseType: !1305, size: 64, offset: 192)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1043, file: !642, line: 479, baseType: !1421, size: 64, offset: 320)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1043, file: !642, line: 484, baseType: !788, size: 64, offset: 384)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1043, file: !642, line: 488, baseType: !788, size: 64, offset: 448)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1043, file: !642, line: 493, baseType: !788, size: 64, offset: 512)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1043, file: !642, line: 496, baseType: !788, size: 64, offset: 576)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1043, file: !642, line: 501, baseType: !1545, size: 64, offset: 640)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !355, line: 2355, size: 576, elements: !1547)
!1547 = !{!1548, !1551, !1552, !1553, !1554, !1556, !1557, !1562, !1563, !1564, !1565, !1566, !1567}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1546, file: !355, line: 2356, baseType: !1549, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !355, line: 2356, flags: DIFlagFwdDecl)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1546, file: !355, line: 2357, baseType: !664, size: 64, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1546, file: !355, line: 2358, baseType: !659, size: 32, offset: 128)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1546, file: !355, line: 2359, baseType: !659, size: 32, offset: 160)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1546, file: !355, line: 2360, baseType: !1555, size: 128, offset: 192)
!1555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !659, size: 128, elements: !768)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1546, file: !355, line: 2364, baseType: !659, size: 32, offset: 320)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1546, file: !355, line: 2367, baseType: !1558, size: 128, offset: 384)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !355, line: 2349, size: 128, elements: !1559)
!1559 = !{!1560, !1561}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1558, file: !355, line: 2351, baseType: !673, size: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1558, file: !355, line: 2352, baseType: !7, size: 64, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1546, file: !355, line: 2371, baseType: !354, size: 32, offset: 512)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1546, file: !355, line: 2374, baseType: !6, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1546, file: !355, line: 2377, baseType: !6, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1546, file: !355, line: 2381, baseType: !6, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1546, file: !355, line: 2392, baseType: !6, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1546, file: !355, line: 2396, baseType: !6, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1043, file: !642, line: 504, baseType: !1569, size: 64, offset: 704)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !642, line: 504, flags: DIFlagFwdDecl)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1043, file: !642, line: 507, baseType: !1421, size: 64, offset: 768)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1043, file: !642, line: 510, baseType: !659, size: 32, offset: 832)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1043, file: !642, line: 513, baseType: !659, size: 32, offset: 864)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1043, file: !642, line: 516, baseType: !908, size: 32, offset: 896)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1043, file: !642, line: 519, baseType: !908, size: 32, offset: 928)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1043, file: !642, line: 522, baseType: !6, size: 32, offset: 960)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1043, file: !642, line: 523, baseType: !6, size: 32, offset: 992)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1043, file: !642, line: 528, baseType: !664, size: 64, offset: 1024)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1043, file: !642, line: 535, baseType: !6, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1043, file: !642, line: 539, baseType: !6, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1043, file: !642, line: 543, baseType: !6, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1043, file: !642, line: 546, baseType: !6, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1043, file: !642, line: 550, baseType: !6, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1043, file: !642, line: 554, baseType: !6, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1043, file: !642, line: 559, baseType: !6, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1043, file: !642, line: 562, baseType: !6, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1043, file: !642, line: 571, baseType: !6, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1043, file: !642, line: 573, baseType: !6, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1043, file: !642, line: 574, baseType: !6, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1043, file: !642, line: 581, baseType: !6, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1043, file: !642, line: 585, baseType: !6, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1043, file: !642, line: 588, baseType: !6, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1043, file: !642, line: 592, baseType: !6, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1043, file: !642, line: 598, baseType: !6, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1038, file: !160, line: 3254, baseType: !788, size: 64, offset: 1536)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1038, file: !160, line: 3257, baseType: !788, size: 64, offset: 1600)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1038, file: !160, line: 3258, baseType: !788, size: 64, offset: 1664)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1038, file: !160, line: 3264, baseType: !6, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1038, file: !160, line: 3265, baseType: !6, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1038, file: !160, line: 3267, baseType: !6, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1038, file: !160, line: 3268, baseType: !6, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1038, file: !160, line: 3269, baseType: !6, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1038, file: !160, line: 3271, baseType: !6, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1038, file: !160, line: 3272, baseType: !6, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1038, file: !160, line: 3273, baseType: !6, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1038, file: !160, line: 3274, baseType: !6, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1038, file: !160, line: 3275, baseType: !6, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1038, file: !160, line: 3276, baseType: !6, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1038, file: !160, line: 3277, baseType: !6, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1038, file: !160, line: 3279, baseType: !6, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1038, file: !160, line: 3280, baseType: !6, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1038, file: !160, line: 3281, baseType: !6, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1038, file: !160, line: 3282, baseType: !6, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1038, file: !160, line: 3283, baseType: !6, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1038, file: !160, line: 3284, baseType: !6, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !790, file: !160, line: 3394, baseType: !1617, size: 1344)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !160, line: 2279, size: 1344, elements: !1618)
!1618 = !{!1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1644, !1645, !1646, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1617, file: !160, line: 2280, baseType: !826, size: 192)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1617, file: !160, line: 2281, baseType: !788, size: 64, offset: 192)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1617, file: !160, line: 2282, baseType: !788, size: 64, offset: 256)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1617, file: !160, line: 2283, baseType: !788, size: 64, offset: 320)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1617, file: !160, line: 2284, baseType: !788, size: 64, offset: 384)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1617, file: !160, line: 2285, baseType: !6, size: 32, offset: 448)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1617, file: !160, line: 2287, baseType: !6, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1617, file: !160, line: 2288, baseType: !6, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1617, file: !160, line: 2289, baseType: !6, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1617, file: !160, line: 2290, baseType: !6, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1617, file: !160, line: 2291, baseType: !6, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1617, file: !160, line: 2292, baseType: !6, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1617, file: !160, line: 2294, baseType: !6, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1617, file: !160, line: 2296, baseType: !6, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1617, file: !160, line: 2297, baseType: !6, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1617, file: !160, line: 2298, baseType: !6, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1617, file: !160, line: 2299, baseType: !6, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1617, file: !160, line: 2300, baseType: !6, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1617, file: !160, line: 2301, baseType: !6, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1617, file: !160, line: 2302, baseType: !6, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1617, file: !160, line: 2303, baseType: !6, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1617, file: !160, line: 2305, baseType: !6, size: 32, offset: 512)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1617, file: !160, line: 2306, baseType: !1642, size: 32, offset: 544)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1643, line: 31, baseType: !659)
!1643 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1617, file: !160, line: 2307, baseType: !788, size: 64, offset: 576)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1617, file: !160, line: 2308, baseType: !788, size: 64, offset: 640)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1617, file: !160, line: 2314, baseType: !1647, size: 64, offset: 704)
!1647 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !160, line: 2309, size: 64, elements: !1648)
!1648 = !{!1649, !1650, !1651}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1647, file: !160, line: 2310, baseType: !659, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1647, file: !160, line: 2311, baseType: !664, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1647, file: !160, line: 2312, baseType: !1652, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !160, line: 2277, flags: DIFlagFwdDecl)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1617, file: !160, line: 2315, baseType: !788, size: 64, offset: 768)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1617, file: !160, line: 2316, baseType: !788, size: 64, offset: 832)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1617, file: !160, line: 2317, baseType: !788, size: 64, offset: 896)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1617, file: !160, line: 2318, baseType: !788, size: 64, offset: 960)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1617, file: !160, line: 2319, baseType: !788, size: 64, offset: 1024)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1617, file: !160, line: 2320, baseType: !788, size: 64, offset: 1088)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1617, file: !160, line: 2321, baseType: !788, size: 64, offset: 1152)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1617, file: !160, line: 2322, baseType: !788, size: 64, offset: 1216)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1617, file: !160, line: 2324, baseType: !1663, size: 64, offset: 1280)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!1664 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !160, line: 2324, flags: DIFlagFwdDecl)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !790, file: !160, line: 3395, baseType: !1666, size: 320)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !160, line: 1469, size: 320, elements: !1667)
!1667 = !{!1668, !1669, !1670}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1666, file: !160, line: 1470, baseType: !826, size: 192)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1666, file: !160, line: 1471, baseType: !788, size: 64, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1666, file: !160, line: 1472, baseType: !788, size: 64, offset: 256)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !790, file: !160, line: 3396, baseType: !1672, size: 320)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !160, line: 1482, size: 320, elements: !1673)
!1673 = !{!1674, !1675, !1676}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1672, file: !160, line: 1483, baseType: !826, size: 192)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1672, file: !160, line: 1484, baseType: !659, size: 32, offset: 192)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1672, file: !160, line: 1485, baseType: !1143, size: 64, offset: 256)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !790, file: !160, line: 3397, baseType: !1678, size: 384)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !160, line: 1829, size: 384, elements: !1679)
!1679 = !{!1680, !1681, !1682, !1683}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1678, file: !160, line: 1830, baseType: !826, size: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1678, file: !160, line: 1831, baseType: !908, size: 32, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1678, file: !160, line: 1832, baseType: !788, size: 64, offset: 256)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1678, file: !160, line: 1835, baseType: !1143, size: 64, offset: 320)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !790, file: !160, line: 3398, baseType: !1685, size: 704)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !160, line: 1898, size: 704, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691, !1696}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1685, file: !160, line: 1899, baseType: !826, size: 192)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1685, file: !160, line: 1902, baseType: !788, size: 64, offset: 192)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1685, file: !160, line: 1905, baseType: !1090, size: 64, offset: 256)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1685, file: !160, line: 1908, baseType: !6, size: 32, offset: 320)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1685, file: !160, line: 1911, baseType: !1692, size: 64, offset: 384)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !994, line: 117, size: 128, elements: !1694)
!1694 = !{!1695}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1693, file: !994, line: 120, baseType: !1497, size: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1685, file: !160, line: 1914, baseType: !1131, size: 256, offset: 448)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !790, file: !160, line: 3399, baseType: !1698, size: 704)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !160, line: 2008, size: 704, elements: !1699)
!1699 = !{!1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1698, file: !160, line: 2009, baseType: !826, size: 192)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1698, file: !160, line: 2011, baseType: !6, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1698, file: !160, line: 2012, baseType: !6, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1698, file: !160, line: 2014, baseType: !908, size: 32, offset: 224)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1698, file: !160, line: 2016, baseType: !788, size: 64, offset: 256)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1698, file: !160, line: 2017, baseType: !1484, size: 64, offset: 320)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1698, file: !160, line: 2019, baseType: !788, size: 64, offset: 384)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1698, file: !160, line: 2020, baseType: !788, size: 64, offset: 448)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1698, file: !160, line: 2021, baseType: !788, size: 64, offset: 512)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1698, file: !160, line: 2022, baseType: !788, size: 64, offset: 576)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1698, file: !160, line: 2023, baseType: !788, size: 64, offset: 640)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !790, file: !160, line: 3400, baseType: !1712, size: 832)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !160, line: 2430, size: 832, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1712, file: !160, line: 2431, baseType: !826, size: 192)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1712, file: !160, line: 2433, baseType: !788, size: 64, offset: 192)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1712, file: !160, line: 2434, baseType: !788, size: 64, offset: 256)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1712, file: !160, line: 2435, baseType: !788, size: 64, offset: 320)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1712, file: !160, line: 2436, baseType: !788, size: 64, offset: 384)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1712, file: !160, line: 2437, baseType: !1484, size: 64, offset: 448)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1712, file: !160, line: 2438, baseType: !788, size: 64, offset: 512)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1712, file: !160, line: 2440, baseType: !788, size: 64, offset: 576)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1712, file: !160, line: 2441, baseType: !788, size: 64, offset: 640)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1712, file: !160, line: 2443, baseType: !1724, size: 128, offset: 704)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !160, line: 182, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !160, line: 182, size: 128, elements: !1726)
!1726 = !{!1727}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1725, file: !160, line: 182, baseType: !1489, size: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !790, file: !160, line: 3401, baseType: !1729, size: 320)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !160, line: 3327, size: 320, elements: !1730)
!1730 = !{!1731, !1732, !1739}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1729, file: !160, line: 3329, baseType: !826, size: 192)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1729, file: !160, line: 3330, baseType: !1733, size: 64, offset: 192)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !160, line: 3320, size: 192, elements: !1735)
!1735 = !{!1736, !1737, !1738}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1734, file: !160, line: 3322, baseType: !1733, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1734, file: !160, line: 3323, baseType: !1733, size: 64, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1734, file: !160, line: 3324, baseType: !788, size: 64, offset: 128)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1729, file: !160, line: 3331, baseType: !1733, size: 64, offset: 256)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !790, file: !160, line: 3402, baseType: !1741, size: 256)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !160, line: 1540, size: 256, elements: !1742)
!1742 = !{!1743, !1744}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1741, file: !160, line: 1541, baseType: !826, size: 192)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1741, file: !160, line: 1542, baseType: !1745, size: 64, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !160, line: 1538, baseType: !1747)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !160, line: 1538, size: 192, elements: !1748)
!1748 = !{!1749}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1747, file: !160, line: 1538, baseType: !1750, size: 192)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !160, line: 1537, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !160, line: 1537, size: 192, elements: !1752)
!1752 = !{!1753, !1754, !1755}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1751, file: !160, line: 1537, baseType: !6, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1751, file: !160, line: 1537, baseType: !6, size: 32, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1751, file: !160, line: 1537, baseType: !1756, size: 128, offset: 64)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1757, size: 128, elements: !708)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !160, line: 1535, baseType: !1758)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !160, line: 1532, size: 128, elements: !1759)
!1759 = !{!1760, !1761}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1758, file: !160, line: 1533, baseType: !788, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1758, file: !160, line: 1534, baseType: !788, size: 64, offset: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !790, file: !160, line: 3403, baseType: !1763, size: 512)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !160, line: 1938, size: 512, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1774, !1775, !1776}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1763, file: !160, line: 1939, baseType: !826, size: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1763, file: !160, line: 1940, baseType: !908, size: 32, offset: 192)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1763, file: !160, line: 1941, baseType: !359, size: 32, offset: 224)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1763, file: !160, line: 1946, baseType: !1769, size: 32, offset: 256)
!1769 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !160, line: 1942, size: 32, elements: !1770)
!1770 = !{!1771, !1772, !1773}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1769, file: !160, line: 1943, baseType: !377, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1769, file: !160, line: 1944, baseType: !384, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1769, file: !160, line: 1945, baseType: !159, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1763, file: !160, line: 1950, baseType: !1080, size: 64, offset: 320)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1763, file: !160, line: 1951, baseType: !1080, size: 64, offset: 384)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1763, file: !160, line: 1953, baseType: !1143, size: 64, offset: 448)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !790, file: !160, line: 3404, baseType: !1778, size: 1664)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !160, line: 3337, size: 1664, elements: !1779)
!1779 = !{!1780, !1781}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1778, file: !160, line: 3338, baseType: !826, size: 192)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1778, file: !160, line: 3341, baseType: !1782, size: 1472, offset: 192)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1783, line: 410, size: 1472, elements: !1784)
!1783 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1784 = !{!1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1782, file: !1783, line: 412, baseType: !659, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1782, file: !1783, line: 413, baseType: !659, size: 32, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1782, file: !1783, line: 414, baseType: !659, size: 32, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1782, file: !1783, line: 415, baseType: !659, size: 32, offset: 96)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1782, file: !1783, line: 416, baseType: !659, size: 32, offset: 128)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1782, file: !1783, line: 417, baseType: !659, size: 32, offset: 160)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1782, file: !1783, line: 418, baseType: !136, size: 8, offset: 192)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1782, file: !1783, line: 419, baseType: !136, size: 8, offset: 200)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1782, file: !1783, line: 420, baseType: !1794, size: 8, offset: 208)
!1794 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1782, file: !1783, line: 421, baseType: !1794, size: 8, offset: 216)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1782, file: !1783, line: 422, baseType: !1794, size: 8, offset: 224)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1782, file: !1783, line: 423, baseType: !1794, size: 8, offset: 232)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1782, file: !1783, line: 424, baseType: !1794, size: 8, offset: 240)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1782, file: !1783, line: 425, baseType: !1794, size: 8, offset: 248)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1782, file: !1783, line: 426, baseType: !1794, size: 8, offset: 256)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1782, file: !1783, line: 427, baseType: !1794, size: 8, offset: 264)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1782, file: !1783, line: 428, baseType: !1794, size: 8, offset: 272)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1782, file: !1783, line: 429, baseType: !1794, size: 8, offset: 280)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1782, file: !1783, line: 430, baseType: !1794, size: 8, offset: 288)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1782, file: !1783, line: 431, baseType: !1794, size: 8, offset: 296)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1782, file: !1783, line: 432, baseType: !1794, size: 8, offset: 304)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1782, file: !1783, line: 433, baseType: !1794, size: 8, offset: 312)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1782, file: !1783, line: 434, baseType: !1794, size: 8, offset: 320)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1782, file: !1783, line: 435, baseType: !1794, size: 8, offset: 328)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1782, file: !1783, line: 436, baseType: !1794, size: 8, offset: 336)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1782, file: !1783, line: 437, baseType: !1794, size: 8, offset: 344)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1782, file: !1783, line: 438, baseType: !1794, size: 8, offset: 352)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1782, file: !1783, line: 439, baseType: !1794, size: 8, offset: 360)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1782, file: !1783, line: 440, baseType: !1794, size: 8, offset: 368)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1782, file: !1783, line: 441, baseType: !1794, size: 8, offset: 376)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1782, file: !1783, line: 442, baseType: !1794, size: 8, offset: 384)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1782, file: !1783, line: 443, baseType: !1794, size: 8, offset: 392)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1782, file: !1783, line: 444, baseType: !1794, size: 8, offset: 400)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1782, file: !1783, line: 445, baseType: !1794, size: 8, offset: 408)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1782, file: !1783, line: 446, baseType: !1794, size: 8, offset: 416)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1782, file: !1783, line: 447, baseType: !1794, size: 8, offset: 424)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1782, file: !1783, line: 448, baseType: !1794, size: 8, offset: 432)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1782, file: !1783, line: 449, baseType: !1794, size: 8, offset: 440)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1782, file: !1783, line: 450, baseType: !1794, size: 8, offset: 448)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1782, file: !1783, line: 451, baseType: !1794, size: 8, offset: 456)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1782, file: !1783, line: 452, baseType: !1794, size: 8, offset: 464)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1782, file: !1783, line: 453, baseType: !1794, size: 8, offset: 472)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1782, file: !1783, line: 454, baseType: !1794, size: 8, offset: 480)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1782, file: !1783, line: 455, baseType: !1794, size: 8, offset: 488)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1782, file: !1783, line: 456, baseType: !1794, size: 8, offset: 496)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1782, file: !1783, line: 457, baseType: !1794, size: 8, offset: 504)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1782, file: !1783, line: 458, baseType: !1794, size: 8, offset: 512)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1782, file: !1783, line: 459, baseType: !1794, size: 8, offset: 520)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1782, file: !1783, line: 460, baseType: !1794, size: 8, offset: 528)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1782, file: !1783, line: 461, baseType: !1794, size: 8, offset: 536)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1782, file: !1783, line: 462, baseType: !1794, size: 8, offset: 544)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1782, file: !1783, line: 463, baseType: !1794, size: 8, offset: 552)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1782, file: !1783, line: 464, baseType: !1794, size: 8, offset: 560)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1782, file: !1783, line: 465, baseType: !1794, size: 8, offset: 568)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1782, file: !1783, line: 466, baseType: !1794, size: 8, offset: 576)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1782, file: !1783, line: 467, baseType: !1794, size: 8, offset: 584)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1782, file: !1783, line: 468, baseType: !1794, size: 8, offset: 592)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1782, file: !1783, line: 469, baseType: !1794, size: 8, offset: 600)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1782, file: !1783, line: 470, baseType: !1794, size: 8, offset: 608)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1782, file: !1783, line: 471, baseType: !1794, size: 8, offset: 616)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1782, file: !1783, line: 472, baseType: !1794, size: 8, offset: 624)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1782, file: !1783, line: 473, baseType: !1794, size: 8, offset: 632)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1782, file: !1783, line: 474, baseType: !1794, size: 8, offset: 640)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1782, file: !1783, line: 475, baseType: !1794, size: 8, offset: 648)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1782, file: !1783, line: 476, baseType: !1794, size: 8, offset: 656)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1782, file: !1783, line: 477, baseType: !1794, size: 8, offset: 664)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1782, file: !1783, line: 478, baseType: !1794, size: 8, offset: 672)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1782, file: !1783, line: 479, baseType: !1794, size: 8, offset: 680)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1782, file: !1783, line: 480, baseType: !1794, size: 8, offset: 688)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1782, file: !1783, line: 481, baseType: !1794, size: 8, offset: 696)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1782, file: !1783, line: 482, baseType: !1794, size: 8, offset: 704)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1782, file: !1783, line: 483, baseType: !1794, size: 8, offset: 712)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1782, file: !1783, line: 484, baseType: !1794, size: 8, offset: 720)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1782, file: !1783, line: 485, baseType: !1794, size: 8, offset: 728)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1782, file: !1783, line: 486, baseType: !1794, size: 8, offset: 736)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1782, file: !1783, line: 487, baseType: !1794, size: 8, offset: 744)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1782, file: !1783, line: 488, baseType: !1794, size: 8, offset: 752)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1782, file: !1783, line: 489, baseType: !1794, size: 8, offset: 760)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1782, file: !1783, line: 490, baseType: !1794, size: 8, offset: 768)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1782, file: !1783, line: 491, baseType: !1794, size: 8, offset: 776)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1782, file: !1783, line: 492, baseType: !1794, size: 8, offset: 784)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1782, file: !1783, line: 493, baseType: !1794, size: 8, offset: 792)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1782, file: !1783, line: 494, baseType: !1794, size: 8, offset: 800)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1782, file: !1783, line: 495, baseType: !1794, size: 8, offset: 808)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1782, file: !1783, line: 496, baseType: !1794, size: 8, offset: 816)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1782, file: !1783, line: 497, baseType: !1794, size: 8, offset: 824)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1782, file: !1783, line: 498, baseType: !1794, size: 8, offset: 832)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1782, file: !1783, line: 499, baseType: !1794, size: 8, offset: 840)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1782, file: !1783, line: 500, baseType: !1794, size: 8, offset: 848)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1782, file: !1783, line: 501, baseType: !1794, size: 8, offset: 856)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1782, file: !1783, line: 502, baseType: !1794, size: 8, offset: 864)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1782, file: !1783, line: 503, baseType: !1794, size: 8, offset: 872)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1782, file: !1783, line: 504, baseType: !1794, size: 8, offset: 880)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1782, file: !1783, line: 505, baseType: !1794, size: 8, offset: 888)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1782, file: !1783, line: 506, baseType: !1794, size: 8, offset: 896)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1782, file: !1783, line: 507, baseType: !1794, size: 8, offset: 904)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1782, file: !1783, line: 508, baseType: !1794, size: 8, offset: 912)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1782, file: !1783, line: 509, baseType: !1794, size: 8, offset: 920)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1782, file: !1783, line: 510, baseType: !1794, size: 8, offset: 928)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1782, file: !1783, line: 511, baseType: !1794, size: 8, offset: 936)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1782, file: !1783, line: 512, baseType: !1794, size: 8, offset: 944)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1782, file: !1783, line: 513, baseType: !1794, size: 8, offset: 952)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1782, file: !1783, line: 514, baseType: !1794, size: 8, offset: 960)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1782, file: !1783, line: 515, baseType: !1794, size: 8, offset: 968)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1782, file: !1783, line: 516, baseType: !1794, size: 8, offset: 976)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1782, file: !1783, line: 517, baseType: !1794, size: 8, offset: 984)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1782, file: !1783, line: 518, baseType: !1794, size: 8, offset: 992)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1782, file: !1783, line: 519, baseType: !1794, size: 8, offset: 1000)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1782, file: !1783, line: 520, baseType: !1794, size: 8, offset: 1008)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1782, file: !1783, line: 521, baseType: !1794, size: 8, offset: 1016)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1782, file: !1783, line: 522, baseType: !1794, size: 8, offset: 1024)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1782, file: !1783, line: 523, baseType: !1794, size: 8, offset: 1032)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1782, file: !1783, line: 524, baseType: !1794, size: 8, offset: 1040)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1782, file: !1783, line: 525, baseType: !1794, size: 8, offset: 1048)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1782, file: !1783, line: 526, baseType: !1794, size: 8, offset: 1056)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1782, file: !1783, line: 527, baseType: !1794, size: 8, offset: 1064)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1782, file: !1783, line: 528, baseType: !1794, size: 8, offset: 1072)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1782, file: !1783, line: 529, baseType: !1794, size: 8, offset: 1080)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1782, file: !1783, line: 530, baseType: !1794, size: 8, offset: 1088)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1782, file: !1783, line: 531, baseType: !1794, size: 8, offset: 1096)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1782, file: !1783, line: 532, baseType: !1794, size: 8, offset: 1104)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1782, file: !1783, line: 533, baseType: !1794, size: 8, offset: 1112)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1782, file: !1783, line: 534, baseType: !1794, size: 8, offset: 1120)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1782, file: !1783, line: 535, baseType: !1794, size: 8, offset: 1128)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1782, file: !1783, line: 536, baseType: !1794, size: 8, offset: 1136)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1782, file: !1783, line: 537, baseType: !1794, size: 8, offset: 1144)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1782, file: !1783, line: 538, baseType: !1794, size: 8, offset: 1152)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1782, file: !1783, line: 539, baseType: !1794, size: 8, offset: 1160)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1782, file: !1783, line: 540, baseType: !1794, size: 8, offset: 1168)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1782, file: !1783, line: 541, baseType: !1794, size: 8, offset: 1176)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1782, file: !1783, line: 542, baseType: !1794, size: 8, offset: 1184)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1782, file: !1783, line: 543, baseType: !1794, size: 8, offset: 1192)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1782, file: !1783, line: 544, baseType: !1794, size: 8, offset: 1200)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1782, file: !1783, line: 545, baseType: !1794, size: 8, offset: 1208)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1782, file: !1783, line: 546, baseType: !1794, size: 8, offset: 1216)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1782, file: !1783, line: 547, baseType: !1794, size: 8, offset: 1224)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1782, file: !1783, line: 548, baseType: !1794, size: 8, offset: 1232)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1782, file: !1783, line: 549, baseType: !1794, size: 8, offset: 1240)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1782, file: !1783, line: 550, baseType: !1794, size: 8, offset: 1248)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1782, file: !1783, line: 551, baseType: !1794, size: 8, offset: 1256)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1782, file: !1783, line: 552, baseType: !1794, size: 8, offset: 1264)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1782, file: !1783, line: 553, baseType: !1794, size: 8, offset: 1272)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1782, file: !1783, line: 554, baseType: !1794, size: 8, offset: 1280)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1782, file: !1783, line: 555, baseType: !1794, size: 8, offset: 1288)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1782, file: !1783, line: 556, baseType: !1794, size: 8, offset: 1296)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1782, file: !1783, line: 557, baseType: !1794, size: 8, offset: 1304)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1782, file: !1783, line: 558, baseType: !1794, size: 8, offset: 1312)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1782, file: !1783, line: 559, baseType: !1794, size: 8, offset: 1320)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1782, file: !1783, line: 560, baseType: !1794, size: 8, offset: 1328)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1782, file: !1783, line: 561, baseType: !1794, size: 8, offset: 1336)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1782, file: !1783, line: 562, baseType: !1794, size: 8, offset: 1344)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1782, file: !1783, line: 563, baseType: !1794, size: 8, offset: 1352)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1782, file: !1783, line: 564, baseType: !1794, size: 8, offset: 1360)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1782, file: !1783, line: 565, baseType: !1794, size: 8, offset: 1368)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1782, file: !1783, line: 566, baseType: !1794, size: 8, offset: 1376)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1782, file: !1783, line: 567, baseType: !1794, size: 8, offset: 1384)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1782, file: !1783, line: 568, baseType: !1794, size: 8, offset: 1392)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1782, file: !1783, line: 569, baseType: !1794, size: 8, offset: 1400)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1782, file: !1783, line: 570, baseType: !1794, size: 8, offset: 1408)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1782, file: !1783, line: 571, baseType: !1794, size: 8, offset: 1416)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1782, file: !1783, line: 572, baseType: !1794, size: 8, offset: 1424)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1782, file: !1783, line: 573, baseType: !1794, size: 8, offset: 1432)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1782, file: !1783, line: 574, baseType: !1794, size: 8, offset: 1440)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !790, file: !160, line: 3405, baseType: !1950, size: 384)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !160, line: 3352, size: 384, elements: !1951)
!1951 = !{!1952, !1953}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1950, file: !160, line: 3353, baseType: !826, size: 192)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1950, file: !160, line: 3356, baseType: !1954, size: 192, offset: 192)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1783, line: 578, size: 192, elements: !1955)
!1955 = !{!1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1954, file: !1783, line: 580, baseType: !659, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1954, file: !1783, line: 581, baseType: !659, size: 32, offset: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1954, file: !1783, line: 582, baseType: !659, size: 32, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1954, file: !1783, line: 583, baseType: !659, size: 32, offset: 96)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1954, file: !1783, line: 584, baseType: !136, size: 8, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1954, file: !1783, line: 585, baseType: !136, size: 8, offset: 136)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1954, file: !1783, line: 586, baseType: !136, size: 8, offset: 144)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1954, file: !1783, line: 587, baseType: !136, size: 8, offset: 152)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1954, file: !1783, line: 588, baseType: !136, size: 8, offset: 160)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1954, file: !1783, line: 589, baseType: !136, size: 8, offset: 168)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1954, file: !1783, line: 590, baseType: !136, size: 8, offset: 176)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !694, file: !486, line: 178, baseType: !1054, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !694, file: !486, line: 179, baseType: !1969, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !486, line: 150, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !486, line: 142, size: 320, elements: !1972)
!1972 = !{!1973, !1974, !1975, !1976, !1977, !1978}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1971, file: !486, line: 144, baseType: !788, size: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1971, file: !486, line: 145, baseType: !673, size: 64, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1971, file: !486, line: 146, baseType: !673, size: 64, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1971, file: !486, line: 147, baseType: !1642, size: 32, offset: 192)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1971, file: !486, line: 148, baseType: !6, size: 32, offset: 224)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1971, file: !486, line: 149, baseType: !136, size: 8, offset: 256)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !694, file: !486, line: 180, baseType: !1980, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !486, line: 162, baseType: !1982)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !486, line: 159, size: 128, elements: !1983)
!1983 = !{!1984, !1985}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1982, file: !486, line: 160, baseType: !788, size: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1982, file: !486, line: 161, baseType: !7, size: 64, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !694, file: !486, line: 181, baseType: !1987, size: 64)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !486, line: 181, flags: DIFlagFwdDecl)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !689, file: !486, line: 317, baseType: !1990, size: 64)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !708)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !689, file: !486, line: 318, baseType: !1992, size: 320)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !486, line: 188, size: 320, elements: !1993)
!1993 = !{!1994, !1996, !2051}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1992, file: !486, line: 190, baseType: !1995, size: 192)
!1995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !693, size: 192, elements: !859)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1992, file: !486, line: 193, baseType: !1997, size: 64, offset: 192)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !486, line: 206, size: 320, elements: !1999)
!1999 = !{!2000, !2036, !2037, !2038, !2050}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1998, file: !486, line: 208, baseType: !2001, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !674, line: 62, baseType: !2003)
!2003 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !2004, line: 538, size: 256, elements: !2005)
!2004 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2005 = !{!2006, !2010, !2016, !2027}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2003, file: !2004, line: 539, baseType: !2007, size: 32)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !2004, line: 482, size: 32, elements: !2008)
!2008 = !{!2009}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2007, file: !2004, line: 484, baseType: !6, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !2003, file: !2004, line: 540, baseType: !2011, size: 192)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !2004, line: 488, size: 192, elements: !2012)
!2012 = !{!2013, !2014, !2015}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2011, file: !2004, line: 489, baseType: !2007, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2011, file: !2004, line: 492, baseType: !664, size: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2011, file: !2004, line: 496, baseType: !788, size: 64, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !2003, file: !2004, line: 541, baseType: !2017, size: 256)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !2004, line: 504, size: 256, elements: !2018)
!2018 = !{!2019, !2020, !2025, !2026}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2017, file: !2004, line: 505, baseType: !2007, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2017, file: !2004, line: 509, baseType: !2021, size: 64, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !2004, line: 501, baseType: !2022)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{null, !1432}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2017, file: !2004, line: 510, baseType: !1432, size: 64, offset: 128)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2017, file: !2004, line: 513, baseType: !2001, size: 64, offset: 192)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !2003, file: !2004, line: 542, baseType: !2028, size: 128)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !2004, line: 530, size: 128, elements: !2029)
!2029 = !{!2030, !2031}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2028, file: !2004, line: 531, baseType: !2007, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2028, file: !2004, line: 534, baseType: !2032, size: 64, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !2004, line: 525, baseType: !2033)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!136, !788, !664, !743, !743}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1998, file: !486, line: 211, baseType: !6, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1998, file: !486, line: 214, baseType: !7, size: 64, offset: 128)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1998, file: !486, line: 224, baseType: !2039, size: 64, offset: 192)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !486, line: 202, baseType: !2041)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !486, line: 202, size: 128, elements: !2042)
!2042 = !{!2043}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2041, file: !486, line: 202, baseType: !2044, size: 128)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !486, line: 200, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !486, line: 200, size: 128, elements: !2046)
!2046 = !{!2047, !2048, !2049}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2045, file: !486, line: 200, baseType: !6, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2045, file: !486, line: 200, baseType: !6, size: 32, offset: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2045, file: !486, line: 200, baseType: !707, size: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1998, file: !486, line: 234, baseType: !2039, size: 64, offset: 256)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1992, file: !486, line: 197, baseType: !7, size: 64, offset: 256)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !689, file: !486, line: 319, baseType: !848, size: 256)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !689, file: !486, line: 320, baseType: !867, size: 192)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1092)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !668)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sbitmap_heap", file: !3, line: 3039, baseType: !2060)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sbitmap_heap", file: !3, line: 3039, size: 128, elements: !2061)
!2061 = !{!2062}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2060, file: !3, line: 3039, baseType: !2063, size: 128)
!2063 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sbitmap_base", file: !3, line: 3038, baseType: !2064)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sbitmap_base", file: !3, line: 3038, size: 128, elements: !2065)
!2065 = !{!2066, !2067, !2068}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2064, file: !3, line: 3038, baseType: !6, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2064, file: !3, line: 3038, baseType: !6, size: 32, offset: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2064, file: !3, line: 3038, baseType: !2069, size: 64, offset: 64)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2070, size: 64, elements: !708)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2071, line: 45, baseType: !2072)
!2071 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2071, line: 39, size: 192, elements: !2074)
!2074 = !{!2075, !2076, !2077, !2078}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2073, file: !2071, line: 41, baseType: !658, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2073, file: !2071, line: 42, baseType: !6, size: 32, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2073, file: !2071, line: 43, baseType: !6, size: 32, offset: 96)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2073, file: !2071, line: 44, baseType: !2079, size: 64, offset: 128)
!2079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !743, size: 64, elements: !708)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "version_info", file: !3, line: 117, size: 256, elements: !2082)
!2082 = !{!2083, !2084, !2095, !2096, !2097}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2081, file: !3, line: 119, baseType: !788, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "iv", scope: !2081, file: !3, line: 120, baseType: !2085, size: 64, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iv", file: !3, line: 105, size: 320, elements: !2087)
!2087 = !{!2088, !2089, !2090, !2091, !2092, !2093, !2094}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2086, file: !3, line: 107, baseType: !788, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "base_object", scope: !2086, file: !3, line: 108, baseType: !788, size: 64, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2086, file: !3, line: 109, baseType: !788, size: 64, offset: 128)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !2086, file: !3, line: 110, baseType: !788, size: 64, offset: 192)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "biv_p", scope: !2086, file: !3, line: 111, baseType: !136, size: 8, offset: 256)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "have_use_for", scope: !2086, file: !3, line: 112, baseType: !136, size: 8, offset: 264)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "use_id", scope: !2086, file: !3, line: 113, baseType: !6, size: 32, offset: 288)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlin_use", scope: !2081, file: !3, line: 121, baseType: !136, size: 8, offset: 128)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "inv_id", scope: !2081, file: !3, line: 123, baseType: !6, size: 32, offset: 160)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_biv", scope: !2081, file: !3, line: 124, baseType: !136, size: 8, offset: 192)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_iv_use_p_heap", file: !3, line: 216, baseType: !2100)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_iv_use_p_heap", file: !3, line: 216, size: 128, elements: !2101)
!2101 = !{!2102}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2100, file: !3, line: 216, baseType: !2103, size: 128)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_iv_use_p_base", file: !3, line: 215, baseType: !2104)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_iv_use_p_base", file: !3, line: 215, size: 128, elements: !2105)
!2105 = !{!2106, !2107, !2108}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2104, file: !3, line: 215, baseType: !6, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2104, file: !3, line: 215, baseType: !6, size: 32, offset: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2104, file: !3, line: 215, baseType: !2109, size: 64, offset: 64)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 64, elements: !708)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "iv_use_p", file: !3, line: 214, baseType: !2111)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iv_use", file: !3, line: 161, size: 512, elements: !2113)
!2113 = !{!2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2148}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2112, file: !3, line: 163, baseType: !6, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2112, file: !3, line: 164, baseType: !395, size: 32, offset: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "iv", scope: !2112, file: !3, line: 165, baseType: !2085, size: 64, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2112, file: !3, line: 166, baseType: !1090, size: 64, offset: 128)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "op_p", scope: !2112, file: !3, line: 167, baseType: !1124, size: 64, offset: 192)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "related_cands", scope: !2112, file: !3, line: 168, baseType: !1507, size: 64, offset: 256)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "n_map_members", scope: !2112, file: !3, line: 171, baseType: !6, size: 32, offset: 320)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "cost_map", scope: !2112, file: !3, line: 172, baseType: !2122, size: 64, offset: 384)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cost_pair", file: !3, line: 149, size: 256, elements: !2124)
!2124 = !{!2125, !2140, !2146, !2147}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "cand", scope: !2123, file: !3, line: 151, baseType: !2126, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iv_cand", file: !3, line: 190, size: 576, elements: !2128)
!2128 = !{!2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2127, file: !3, line: 192, baseType: !6, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "important", scope: !2127, file: !3, line: 193, baseType: !136, size: 8, offset: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2127, file: !3, line: 195, baseType: !400, size: 32, offset: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "incremented_at", scope: !2127, file: !3, line: 196, baseType: !1090, size: 64, offset: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "var_before", scope: !2127, file: !3, line: 198, baseType: !788, size: 64, offset: 192)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "var_after", scope: !2127, file: !3, line: 199, baseType: !788, size: 64, offset: 256)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "iv", scope: !2127, file: !3, line: 200, baseType: !2085, size: 64, offset: 320)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2127, file: !3, line: 204, baseType: !6, size: 32, offset: 384)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "cost_step", scope: !2127, file: !3, line: 205, baseType: !6, size: 32, offset: 416)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "ainc_use", scope: !2127, file: !3, line: 206, baseType: !2111, size: 64, offset: 448)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "depends_on", scope: !2127, file: !3, line: 208, baseType: !1507, size: 64, offset: 512)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2123, file: !3, line: 152, baseType: !2141, size: 64, offset: 64)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "comp_cost", file: !3, line: 143, baseType: !2142)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 136, size: 64, elements: !2143)
!2143 = !{!2144, !2145}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2142, file: !3, line: 138, baseType: !659, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "complexity", scope: !2142, file: !3, line: 139, baseType: !6, size: 32, offset: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "depends_on", scope: !2123, file: !3, line: 153, baseType: !1507, size: 64, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2123, file: !3, line: 155, baseType: !788, size: 64, offset: 192)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !2112, file: !3, line: 175, baseType: !2126, size: 64, offset: 448)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_iv_cand_p_heap", file: !3, line: 220, baseType: !2151)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_iv_cand_p_heap", file: !3, line: 220, size: 128, elements: !2152)
!2152 = !{!2153}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2151, file: !3, line: 220, baseType: !2154, size: 128)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_iv_cand_p_base", file: !3, line: 219, baseType: !2155)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_iv_cand_p_base", file: !3, line: 219, size: 128, elements: !2156)
!2156 = !{!2157, !2158, !2159}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2155, file: !3, line: 219, baseType: !6, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2155, file: !3, line: 219, baseType: !6, size: 32, offset: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2155, file: !3, line: 219, baseType: !2160, size: 64, offset: 64)
!2160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2161, size: 64, elements: !708)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "iv_cand_p", file: !3, line: 218, baseType: !2126)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !160, line: 184, baseType: !2164)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !160, line: 184, size: 128, elements: !2165)
!2165 = !{!2166}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2164, file: !160, line: 184, baseType: !1489, size: 128)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !2169, line: 32, baseType: !2170)
!2169 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !2169, line: 32, size: 96, elements: !2171)
!2171 = !{!2172}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2170, file: !2169, line: 32, baseType: !2173, size: 96)
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !2169, line: 31, baseType: !2174)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !2169, line: 31, size: 96, elements: !2175)
!2175 = !{!2176, !2177, !2178}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2174, file: !2169, line: 31, baseType: !6, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2174, file: !2169, line: 31, baseType: !6, size: 32, offset: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2174, file: !2169, line: 31, baseType: !2179, size: 32, offset: 64)
!2179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !659, size: 32, elements: !708)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifs_ivopts_data", file: !3, line: 1343, size: 192, elements: !2182)
!2182 = !{!2183, !2199, !2200}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "ivopts_data", scope: !2181, file: !3, line: 1345, baseType: !2184, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ivopts_data", file: !3, line: 222, size: 576, elements: !2186)
!2186 = !{!2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "current_loop", scope: !2185, file: !3, line: 225, baseType: !1305, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "niters", scope: !2185, file: !3, line: 228, baseType: !1510, size: 64, offset: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "regs_used", scope: !2185, file: !3, line: 231, baseType: !6, size: 32, offset: 128)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "version_info_size", scope: !2185, file: !3, line: 234, baseType: !6, size: 32, offset: 160)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "version_info", scope: !2185, file: !3, line: 237, baseType: !2080, size: 64, offset: 192)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "relevant", scope: !2185, file: !3, line: 240, baseType: !1507, size: 64, offset: 256)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "iv_uses", scope: !2185, file: !3, line: 243, baseType: !2098, size: 64, offset: 320)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "iv_candidates", scope: !2185, file: !3, line: 246, baseType: !2149, size: 64, offset: 384)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "important_candidates", scope: !2185, file: !3, line: 249, baseType: !1507, size: 64, offset: 448)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "max_inv_id", scope: !2185, file: !3, line: 252, baseType: !6, size: 32, offset: 512)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "consider_all_candidates", scope: !2185, file: !3, line: 256, baseType: !136, size: 8, offset: 544)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !2185, file: !3, line: 259, baseType: !136, size: 8, offset: 552)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2181, file: !3, line: 1346, baseType: !1090, size: 64, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2181, file: !3, line: 1347, baseType: !788, size: 64, offset: 128)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !629, line: 30, baseType: !2202)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !160, line: 1893, baseType: !1131)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !790)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "address_cost_data", file: !3, line: 3108, baseType: !2208)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 3104, size: 640, elements: !2210)
!2210 = !{!2211, !2212, !2213}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "min_offset", scope: !2209, file: !3, line: 3106, baseType: !7, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "max_offset", scope: !2209, file: !3, line: 3106, baseType: !7, size: 64, offset: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "costs", scope: !2209, file: !3, line: 3107, baseType: !2214, size: 512, offset: 128)
!2214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 512, elements: !2215)
!2215 = !{!745, !745, !745, !745}
!2216 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_address_cost_data_heap", file: !3, line: 3111, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_address_cost_data_heap", file: !3, line: 3111, size: 128, elements: !2220)
!2220 = !{!2221}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2219, file: !3, line: 3111, baseType: !2222, size: 128)
!2222 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_address_cost_data_base", file: !3, line: 3110, baseType: !2223)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_address_cost_data_base", file: !3, line: 3110, size: 128, elements: !2224)
!2224 = !{!2225, !2226, !2227}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2223, file: !3, line: 3110, baseType: !6, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2223, file: !3, line: 3110, baseType: !6, size: 32, offset: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2223, file: !3, line: 3110, baseType: !2228, size: 64, offset: 64)
!2228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2207, size: 64, elements: !708)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iv_ca", file: !3, line: 264, size: 576, elements: !2232)
!2232 = !{!2233, !2234, !2235, !2237, !2239, !2240, !2241, !2242, !2243, !2244, !2245}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "upto", scope: !2231, file: !3, line: 267, baseType: !6, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "bad_uses", scope: !2231, file: !3, line: 270, baseType: !6, size: 32, offset: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "cand_for_use", scope: !2231, file: !3, line: 273, baseType: !2236, size: 64, offset: 64)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "n_cand_uses", scope: !2231, file: !3, line: 276, baseType: !2238, size: 64, offset: 128)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "cands", scope: !2231, file: !3, line: 279, baseType: !1507, size: 64, offset: 192)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "n_cands", scope: !2231, file: !3, line: 282, baseType: !6, size: 32, offset: 256)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "n_regs", scope: !2231, file: !3, line: 285, baseType: !6, size: 32, offset: 288)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "cand_use_cost", scope: !2231, file: !3, line: 288, baseType: !2141, size: 64, offset: 320)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "cand_cost", scope: !2231, file: !3, line: 291, baseType: !6, size: 32, offset: 384)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "n_invariant_uses", scope: !2231, file: !3, line: 294, baseType: !2238, size: 64, offset: 448)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2231, file: !3, line: 297, baseType: !2141, size: 64, offset: 512)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iv_ca_delta", file: !3, line: 302, size: 256, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !2247, file: !3, line: 305, baseType: !2111, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "old_cp", scope: !2247, file: !3, line: 308, baseType: !2122, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "new_cp", scope: !2247, file: !3, line: 311, baseType: !2122, size: 64, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "next_change", scope: !2247, file: !3, line: 314, baseType: !2246, size: 64, offset: 192)
!2253 = !{!0, !2254, !2272, !2274, !2296, !2298, !2300, !2303, !2305, !2331, !2333, !2335, !2337, !2350, !2397, !2400, !2402, !2404}
!2254 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression())
!2255 = distinct !DIGlobalVariable(name: "valid_mult_list", scope: !2256, file: !3, line: 3047, type: !2058, isLocal: true, isDefinition: true)
!2256 = distinct !DISubprogram(name: "multiplier_allowed_in_address_p", scope: !3, file: !3, line: 3042, type: !2257, scopeLine: 3044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2260)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{!136, !7, !8, !2259}
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !674, line: 73, baseType: !136)
!2260 = !{!2261, !2262, !2263, !2264, !2265, !2266, !2269, !2270, !2271}
!2261 = !DILocalVariable(name: "ratio", arg: 1, scope: !2256, file: !3, line: 3042, type: !7)
!2262 = !DILocalVariable(name: "mode", arg: 2, scope: !2256, file: !3, line: 3042, type: !8)
!2263 = !DILocalVariable(name: "as", arg: 3, scope: !2256, file: !3, line: 3043, type: !2259)
!2264 = !DILocalVariable(name: "data_index", scope: !2256, file: !3, line: 3046, type: !6)
!2265 = !DILocalVariable(name: "valid_mult", scope: !2256, file: !3, line: 3048, type: !2070)
!2266 = !DILocalVariable(name: "address_mode", scope: !2267, file: !3, line: 3056, type: !8)
!2267 = distinct !DILexicalBlock(scope: !2268, file: !3, line: 3055, column: 5)
!2268 = distinct !DILexicalBlock(scope: !2256, file: !3, line: 3054, column: 7)
!2269 = !DILocalVariable(name: "reg1", scope: !2267, file: !3, line: 3057, type: !673)
!2270 = !DILocalVariable(name: "addr", scope: !2267, file: !3, line: 3058, type: !673)
!2271 = !DILocalVariable(name: "i", scope: !2267, file: !3, line: 3059, type: !7)
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(name: "decl_rtl_to_reset", scope: !137, file: !3, line: 337, type: !2162, isLocal: true, isDefinition: true)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "const_iv", scope: !2276, file: !3, line: 1208, type: !2086, isLocal: true, isDefinition: true)
!2276 = distinct !DISubprogram(name: "extract_cond_operands", scope: !3, file: !3, line: 1203, type: !2277, scopeLine: 1206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2281)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{!136, !2184, !1090, !2279, !2279, !2280, !2280}
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2281 = !{!2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295}
!2282 = !DILocalVariable(name: "data", arg: 1, scope: !2276, file: !3, line: 1203, type: !2184)
!2283 = !DILocalVariable(name: "stmt", arg: 2, scope: !2276, file: !3, line: 1203, type: !1090)
!2284 = !DILocalVariable(name: "control_var", arg: 3, scope: !2276, file: !3, line: 1204, type: !2279)
!2285 = !DILocalVariable(name: "bound", arg: 4, scope: !2276, file: !3, line: 1204, type: !2279)
!2286 = !DILocalVariable(name: "iv_var", arg: 5, scope: !2276, file: !3, line: 1205, type: !2280)
!2287 = !DILocalVariable(name: "iv_bound", arg: 6, scope: !2276, file: !3, line: 1205, type: !2280)
!2288 = !DILocalVariable(name: "op0", scope: !2276, file: !3, line: 1210, type: !1124)
!2289 = !DILocalVariable(name: "op1", scope: !2276, file: !3, line: 1210, type: !1124)
!2290 = !DILocalVariable(name: "tmp_op", scope: !2276, file: !3, line: 1210, type: !1124)
!2291 = !DILocalVariable(name: "iv0", scope: !2276, file: !3, line: 1211, type: !2085)
!2292 = !DILocalVariable(name: "iv1", scope: !2276, file: !3, line: 1211, type: !2085)
!2293 = !DILocalVariable(name: "tmp_iv", scope: !2276, file: !3, line: 1211, type: !2085)
!2294 = !DILocalVariable(name: "ret", scope: !2276, file: !3, line: 1212, type: !136)
!2295 = !DILabel(scope: !2276, name: "end", file: !3, line: 1246)
!2296 = !DIGlobalVariableExpression(var: !2297, expr: !DIExpression())
!2297 = distinct !DIGlobalVariable(name: "zero", scope: !2276, file: !3, line: 1209, type: !788, isLocal: true, isDefinition: true)
!2298 = !DIGlobalVariableExpression(var: !2299, expr: !DIExpression())
!2299 = distinct !DIGlobalVariable(name: "fd_ivopts_data", scope: !137, file: !3, line: 2073, type: !2184, isLocal: true, isDefinition: true)
!2300 = !DIGlobalVariableExpression(var: !2301, expr: !DIExpression())
!2301 = distinct !DIGlobalVariable(name: "infinite_cost", scope: !137, file: !3, line: 146, type: !2302, isLocal: true, isDefinition: true)
!2302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2141)
!2303 = !DIGlobalVariableExpression(var: !2304, expr: !DIExpression())
!2304 = distinct !DIGlobalVariable(name: "zero_cost", scope: !137, file: !3, line: 145, type: !2302, isLocal: true, isDefinition: true)
!2305 = !DIGlobalVariableExpression(var: !2306, expr: !DIExpression())
!2306 = distinct !DIGlobalVariable(name: "costs_initialized", scope: !2307, file: !3, line: 3383, type: !136, isLocal: true, isDefinition: true)
!2307 = distinct !DISubprogram(name: "force_expr_to_var_cost", scope: !3, file: !3, line: 3381, type: !2308, scopeLine: 3382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2310)
!2308 = !DISubroutineType(types: !2309)
!2309 = !{!2141, !788, !136}
!2310 = !{!2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2322, !2323, !2324, !2325, !2326}
!2311 = !DILocalVariable(name: "expr", arg: 1, scope: !2307, file: !3, line: 3381, type: !788)
!2312 = !DILocalVariable(name: "speed", arg: 2, scope: !2307, file: !3, line: 3381, type: !136)
!2313 = !DILocalVariable(name: "op0", scope: !2307, file: !3, line: 3387, type: !788)
!2314 = !DILocalVariable(name: "op1", scope: !2307, file: !3, line: 3387, type: !788)
!2315 = !DILocalVariable(name: "cost0", scope: !2307, file: !3, line: 3388, type: !2141)
!2316 = !DILocalVariable(name: "cost1", scope: !2307, file: !3, line: 3388, type: !2141)
!2317 = !DILocalVariable(name: "cost", scope: !2307, file: !3, line: 3388, type: !2141)
!2318 = !DILocalVariable(name: "mode", scope: !2307, file: !3, line: 3389, type: !8)
!2319 = !DILocalVariable(name: "type", scope: !2320, file: !3, line: 3393, type: !788)
!2320 = distinct !DILexicalBlock(scope: !2321, file: !3, line: 3392, column: 5)
!2321 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 3391, column: 7)
!2322 = !DILocalVariable(name: "var", scope: !2320, file: !3, line: 3394, type: !788)
!2323 = !DILocalVariable(name: "addr", scope: !2320, file: !3, line: 3394, type: !788)
!2324 = !DILocalVariable(name: "x", scope: !2320, file: !3, line: 3395, type: !673)
!2325 = !DILocalVariable(name: "i", scope: !2320, file: !3, line: 3396, type: !659)
!2326 = !DILocalVariable(name: "obj", scope: !2327, file: !3, line: 3443, type: !788)
!2327 = distinct !DILexicalBlock(scope: !2328, file: !3, line: 3442, column: 2)
!2328 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 3441, column: 11)
!2329 = distinct !DILexicalBlock(scope: !2330, file: !3, line: 3437, column: 5)
!2330 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 3436, column: 7)
!2331 = !DIGlobalVariableExpression(var: !2332, expr: !DIExpression())
!2332 = distinct !DIGlobalVariable(name: "integer_cost", scope: !2307, file: !3, line: 3384, type: !1412, isLocal: true, isDefinition: true)
!2333 = !DIGlobalVariableExpression(var: !2334, expr: !DIExpression())
!2334 = distinct !DIGlobalVariable(name: "symbol_cost", scope: !2307, file: !3, line: 3385, type: !1412, isLocal: true, isDefinition: true)
!2335 = !DIGlobalVariableExpression(var: !2336, expr: !DIExpression())
!2336 = distinct !DIGlobalVariable(name: "address_cost", scope: !2307, file: !3, line: 3386, type: !1412, isLocal: true, isDefinition: true)
!2337 = !DIGlobalVariableExpression(var: !2338, expr: !DIExpression())
!2338 = distinct !DIGlobalVariable(name: "costs", scope: !2339, file: !3, line: 2937, type: !2347, isLocal: true, isDefinition: true)
!2339 = distinct !DISubprogram(name: "add_cost", scope: !3, file: !3, line: 2935, type: !2340, scopeLine: 2936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2342)
!2340 = !DISubroutineType(types: !2341)
!2341 = !{!6, !8, !136}
!2342 = !{!2343, !2344, !2345, !2346}
!2343 = !DILocalVariable(name: "mode", arg: 1, scope: !2339, file: !3, line: 2935, type: !8)
!2344 = !DILocalVariable(name: "speed", arg: 2, scope: !2339, file: !3, line: 2935, type: !136)
!2345 = !DILocalVariable(name: "seq", scope: !2339, file: !3, line: 2938, type: !673)
!2346 = !DILocalVariable(name: "cost", scope: !2339, file: !3, line: 2939, type: !6)
!2347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 2784, elements: !2348)
!2348 = !{!2349}
!2349 = !DISubrange(count: 87)
!2350 = !DIGlobalVariableExpression(var: !2351, expr: !DIExpression())
!2351 = distinct !DIGlobalVariable(name: "address_cost_data_list", scope: !2352, file: !3, line: 3121, type: !2217, isLocal: true, isDefinition: true)
!2352 = distinct !DISubprogram(name: "get_address_cost", scope: !3, file: !3, line: 3114, type: !2353, scopeLine: 3119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2355)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{!2141, !136, !136, !743, !7, !7, !8, !2259, !136, !136, !658}
!2355 = !{!2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396}
!2356 = !DILocalVariable(name: "symbol_present", arg: 1, scope: !2352, file: !3, line: 3114, type: !136)
!2357 = !DILocalVariable(name: "var_present", arg: 2, scope: !2352, file: !3, line: 3114, type: !136)
!2358 = !DILocalVariable(name: "offset", arg: 3, scope: !2352, file: !3, line: 3115, type: !743)
!2359 = !DILocalVariable(name: "ratio", arg: 4, scope: !2352, file: !3, line: 3115, type: !7)
!2360 = !DILocalVariable(name: "cstep", arg: 5, scope: !2352, file: !3, line: 3116, type: !7)
!2361 = !DILocalVariable(name: "mem_mode", arg: 6, scope: !2352, file: !3, line: 3116, type: !8)
!2362 = !DILocalVariable(name: "as", arg: 7, scope: !2352, file: !3, line: 3117, type: !2259)
!2363 = !DILocalVariable(name: "speed", arg: 8, scope: !2352, file: !3, line: 3117, type: !136)
!2364 = !DILocalVariable(name: "stmt_after_inc", arg: 9, scope: !2352, file: !3, line: 3118, type: !136)
!2365 = !DILocalVariable(name: "may_autoinc", arg: 10, scope: !2352, file: !3, line: 3118, type: !658)
!2366 = !DILocalVariable(name: "address_mode", scope: !2352, file: !3, line: 3120, type: !8)
!2367 = !DILocalVariable(name: "data_index", scope: !2352, file: !3, line: 3122, type: !6)
!2368 = !DILocalVariable(name: "data", scope: !2352, file: !3, line: 3123, type: !2207)
!2369 = !DILocalVariable(name: "cost", scope: !2352, file: !3, line: 3126, type: !6)
!2370 = !DILocalVariable(name: "acost", scope: !2352, file: !3, line: 3126, type: !6)
!2371 = !DILocalVariable(name: "complexity", scope: !2352, file: !3, line: 3126, type: !6)
!2372 = !DILocalVariable(name: "offset_p", scope: !2352, file: !3, line: 3127, type: !136)
!2373 = !DILocalVariable(name: "ratio_p", scope: !2352, file: !3, line: 3127, type: !136)
!2374 = !DILocalVariable(name: "autoinc", scope: !2352, file: !3, line: 3127, type: !136)
!2375 = !DILocalVariable(name: "s_offset", scope: !2352, file: !3, line: 3128, type: !7)
!2376 = !DILocalVariable(name: "autoinc_offset", scope: !2352, file: !3, line: 3128, type: !7)
!2377 = !DILocalVariable(name: "msize", scope: !2352, file: !3, line: 3128, type: !7)
!2378 = !DILocalVariable(name: "mask", scope: !2352, file: !3, line: 3129, type: !743)
!2379 = !DILocalVariable(name: "bits", scope: !2352, file: !3, line: 3130, type: !6)
!2380 = !DILocalVariable(name: "i", scope: !2381, file: !3, line: 3139, type: !7)
!2381 = distinct !DILexicalBlock(scope: !2382, file: !3, line: 3138, column: 5)
!2382 = distinct !DILexicalBlock(scope: !2352, file: !3, line: 3137, column: 7)
!2383 = !DILocalVariable(name: "start", scope: !2381, file: !3, line: 3140, type: !7)
!2384 = !DILocalVariable(name: "rat", scope: !2381, file: !3, line: 3141, type: !7)
!2385 = !DILocalVariable(name: "off", scope: !2381, file: !3, line: 3141, type: !7)
!2386 = !DILocalVariable(name: "old_cse_not_expected", scope: !2381, file: !3, line: 3142, type: !659)
!2387 = !DILocalVariable(name: "sym_p", scope: !2381, file: !3, line: 3143, type: !6)
!2388 = !DILocalVariable(name: "var_p", scope: !2381, file: !3, line: 3143, type: !6)
!2389 = !DILocalVariable(name: "off_p", scope: !2381, file: !3, line: 3143, type: !6)
!2390 = !DILocalVariable(name: "rat_p", scope: !2381, file: !3, line: 3143, type: !6)
!2391 = !DILocalVariable(name: "add_c", scope: !2381, file: !3, line: 3143, type: !6)
!2392 = !DILocalVariable(name: "seq", scope: !2381, file: !3, line: 3144, type: !673)
!2393 = !DILocalVariable(name: "addr", scope: !2381, file: !3, line: 3144, type: !673)
!2394 = !DILocalVariable(name: "base", scope: !2381, file: !3, line: 3144, type: !673)
!2395 = !DILocalVariable(name: "reg0", scope: !2381, file: !3, line: 3145, type: !673)
!2396 = !DILocalVariable(name: "reg1", scope: !2381, file: !3, line: 3145, type: !673)
!2397 = !DIGlobalVariableExpression(var: !2398, expr: !DIExpression())
!2398 = distinct !DIGlobalVariable(name: "has_preinc", scope: !2352, file: !3, line: 3124, type: !2399, isLocal: true, isDefinition: true)
!2399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 696, elements: !2348)
!2400 = !DIGlobalVariableExpression(var: !2401, expr: !DIExpression())
!2401 = distinct !DIGlobalVariable(name: "has_postinc", scope: !2352, file: !3, line: 3124, type: !2399, isLocal: true, isDefinition: true)
!2402 = !DIGlobalVariableExpression(var: !2403, expr: !DIExpression())
!2403 = distinct !DIGlobalVariable(name: "has_predec", scope: !2352, file: !3, line: 3125, type: !2399, isLocal: true, isDefinition: true)
!2404 = !DIGlobalVariableExpression(var: !2405, expr: !DIExpression())
!2405 = distinct !DIGlobalVariable(name: "has_postdec", scope: !2352, file: !3, line: 3125, type: !2399, isLocal: true, isDefinition: true)
!2406 = !{!2407, !2408, !2409, !2410, !2411, !2412, !2413}
!2407 = !DILocalVariable(name: "cst", arg: 1, scope: !2, file: !3, line: 2997, type: !7)
!2408 = !DILocalVariable(name: "mode", arg: 2, scope: !2, file: !3, line: 2997, type: !8)
!2409 = !DILocalVariable(name: "speed", arg: 3, scope: !2, file: !3, line: 2997, type: !136)
!2410 = !DILocalVariable(name: "cached", scope: !2, file: !3, line: 3000, type: !666)
!2411 = !DILocalVariable(name: "act", scope: !2, file: !3, line: 3000, type: !668)
!2412 = !DILocalVariable(name: "seq", scope: !2, file: !3, line: 3001, type: !673)
!2413 = !DILocalVariable(name: "cost", scope: !2, file: !3, line: 3002, type: !6)
!2414 = !DIGlobalVariableExpression(var: !2306, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2415 = !{i32 2, !"Dwarf Version", i32 4}
!2416 = !{i32 2, !"Debug Info Version", i32 3}
!2417 = !{i32 1, !"wchar_size", i32 4}
!2418 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2419 = distinct !DISubprogram(name: "vprintf", scope: !2420, file: !2420, line: 39, type: !2421, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2431)
!2420 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2421 = !DISubroutineType(types: !2422)
!2422 = !{!659, !2423, !2424}
!2423 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !664)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2426)
!2426 = !{!2427, !2428, !2429, !2430}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2425, file: !3, baseType: !6, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2425, file: !3, baseType: !6, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2425, file: !3, baseType: !663, size: 64, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2425, file: !3, baseType: !663, size: 64, offset: 128)
!2431 = !{!2432, !2433}
!2432 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2419, file: !2420, line: 39, type: !2423)
!2433 = !DILocalVariable(name: "__arg", arg: 2, scope: !2419, file: !2420, line: 39, type: !2424)
!2434 = !DILocation(line: 0, scope: !2419)
!2435 = !DILocation(line: 41, column: 20, scope: !2419)
!2436 = !DILocation(line: 41, column: 10, scope: !2419)
!2437 = !DILocation(line: 41, column: 3, scope: !2419)
!2438 = distinct !DISubprogram(name: "getchar", scope: !2420, file: !2420, line: 47, type: !2439, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2441)
!2439 = !DISubroutineType(types: !2440)
!2440 = !{!659}
!2441 = !{}
!2442 = !DILocation(line: 49, column: 16, scope: !2438)
!2443 = !DILocation(line: 49, column: 10, scope: !2438)
!2444 = !DILocation(line: 49, column: 3, scope: !2438)
!2445 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2420, file: !2420, line: 56, type: !2446, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2498)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{!659, !2448}
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2450, line: 7, baseType: !2451)
!2450 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2452, line: 49, size: 1728, elements: !2453)
!2452 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2453 = !{!2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2469, !2471, !2472, !2473, !2476, !2477, !2478, !2479, !2482, !2484, !2487, !2490, !2491, !2492, !2493, !2494}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2451, file: !2452, line: 51, baseType: !659, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2451, file: !2452, line: 54, baseType: !661, size: 64, offset: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2451, file: !2452, line: 55, baseType: !661, size: 64, offset: 128)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2451, file: !2452, line: 56, baseType: !661, size: 64, offset: 192)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2451, file: !2452, line: 57, baseType: !661, size: 64, offset: 256)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2451, file: !2452, line: 58, baseType: !661, size: 64, offset: 320)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2451, file: !2452, line: 59, baseType: !661, size: 64, offset: 384)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2451, file: !2452, line: 60, baseType: !661, size: 64, offset: 448)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2451, file: !2452, line: 61, baseType: !661, size: 64, offset: 512)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2451, file: !2452, line: 64, baseType: !661, size: 64, offset: 576)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2451, file: !2452, line: 65, baseType: !661, size: 64, offset: 640)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2451, file: !2452, line: 66, baseType: !661, size: 64, offset: 704)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2451, file: !2452, line: 68, baseType: !2467, size: 64, offset: 768)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2468 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2452, line: 36, flags: DIFlagFwdDecl)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2451, file: !2452, line: 70, baseType: !2470, size: 64, offset: 832)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2451, file: !2452, line: 72, baseType: !659, size: 32, offset: 896)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2451, file: !2452, line: 73, baseType: !659, size: 32, offset: 928)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2451, file: !2452, line: 74, baseType: !2474, size: 64, offset: 960)
!2474 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2475, line: 152, baseType: !7)
!2475 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2451, file: !2452, line: 77, baseType: !2216, size: 16, offset: 1024)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2451, file: !2452, line: 78, baseType: !1794, size: 8, offset: 1040)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2451, file: !2452, line: 79, baseType: !883, size: 8, offset: 1048)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2451, file: !2452, line: 81, baseType: !2480, size: 64, offset: 1088)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2452, line: 43, baseType: null)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2451, file: !2452, line: 89, baseType: !2483, size: 64, offset: 1152)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2475, line: 153, baseType: !7)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2451, file: !2452, line: 91, baseType: !2485, size: 64, offset: 1216)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64)
!2486 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2452, line: 37, flags: DIFlagFwdDecl)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2451, file: !2452, line: 92, baseType: !2488, size: 64, offset: 1280)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2452, line: 38, flags: DIFlagFwdDecl)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2451, file: !2452, line: 93, baseType: !2470, size: 64, offset: 1344)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2451, file: !2452, line: 94, baseType: !663, size: 64, offset: 1408)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2451, file: !2452, line: 95, baseType: !1235, size: 64, offset: 1472)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2451, file: !2452, line: 96, baseType: !659, size: 32, offset: 1536)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2451, file: !2452, line: 98, baseType: !2495, size: 160, offset: 1568)
!2495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, size: 160, elements: !2496)
!2496 = !{!2497}
!2497 = !DISubrange(count: 20)
!2498 = !{!2499}
!2499 = !DILocalVariable(name: "__fp", arg: 1, scope: !2445, file: !2420, line: 56, type: !2448)
!2500 = !DILocation(line: 0, scope: !2445)
!2501 = !DILocation(line: 58, column: 10, scope: !2445)
!2502 = !DILocation(line: 58, column: 3, scope: !2445)
!2503 = distinct !DISubprogram(name: "getc_unlocked", scope: !2420, file: !2420, line: 66, type: !2446, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2504)
!2504 = !{!2505}
!2505 = !DILocalVariable(name: "__fp", arg: 1, scope: !2503, file: !2420, line: 66, type: !2448)
!2506 = !DILocation(line: 0, scope: !2503)
!2507 = !DILocation(line: 68, column: 10, scope: !2503)
!2508 = !DILocation(line: 68, column: 3, scope: !2503)
!2509 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2420, file: !2420, line: 73, type: !2439, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2441)
!2510 = !DILocation(line: 75, column: 10, scope: !2509)
!2511 = !DILocation(line: 75, column: 3, scope: !2509)
!2512 = distinct !DISubprogram(name: "putchar", scope: !2420, file: !2420, line: 82, type: !2513, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2515)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{!659, !659}
!2515 = !{!2516}
!2516 = !DILocalVariable(name: "__c", arg: 1, scope: !2512, file: !2420, line: 82, type: !659)
!2517 = !DILocation(line: 0, scope: !2512)
!2518 = !DILocation(line: 84, column: 21, scope: !2512)
!2519 = !DILocation(line: 84, column: 10, scope: !2512)
!2520 = !DILocation(line: 84, column: 3, scope: !2512)
!2521 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2420, file: !2420, line: 91, type: !2522, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2524)
!2522 = !DISubroutineType(types: !2523)
!2523 = !{!659, !659, !2448}
!2524 = !{!2525, !2526}
!2525 = !DILocalVariable(name: "__c", arg: 1, scope: !2521, file: !2420, line: 91, type: !659)
!2526 = !DILocalVariable(name: "__stream", arg: 2, scope: !2521, file: !2420, line: 91, type: !2448)
!2527 = !DILocation(line: 0, scope: !2521)
!2528 = !DILocation(line: 93, column: 10, scope: !2521)
!2529 = !DILocation(line: 93, column: 3, scope: !2521)
!2530 = distinct !DISubprogram(name: "putc_unlocked", scope: !2420, file: !2420, line: 101, type: !2522, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2531)
!2531 = !{!2532, !2533}
!2532 = !DILocalVariable(name: "__c", arg: 1, scope: !2530, file: !2420, line: 101, type: !659)
!2533 = !DILocalVariable(name: "__stream", arg: 2, scope: !2530, file: !2420, line: 101, type: !2448)
!2534 = !DILocation(line: 0, scope: !2530)
!2535 = !DILocation(line: 103, column: 10, scope: !2530)
!2536 = !DILocation(line: 103, column: 3, scope: !2530)
!2537 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2420, file: !2420, line: 108, type: !2513, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2538)
!2538 = !{!2539}
!2539 = !DILocalVariable(name: "__c", arg: 1, scope: !2537, file: !2420, line: 108, type: !659)
!2540 = !DILocation(line: 0, scope: !2537)
!2541 = !DILocation(line: 110, column: 10, scope: !2537)
!2542 = !DILocation(line: 110, column: 3, scope: !2537)
!2543 = distinct !DISubprogram(name: "getline", scope: !2420, file: !2420, line: 118, type: !2544, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2548)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!2546, !660, !2547, !2448}
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2475, line: 193, baseType: !7)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!2548 = !{!2549, !2550, !2551}
!2549 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2543, file: !2420, line: 118, type: !660)
!2550 = !DILocalVariable(name: "__n", arg: 2, scope: !2543, file: !2420, line: 118, type: !2547)
!2551 = !DILocalVariable(name: "__stream", arg: 3, scope: !2543, file: !2420, line: 118, type: !2448)
!2552 = !DILocation(line: 0, scope: !2543)
!2553 = !DILocation(line: 120, column: 10, scope: !2543)
!2554 = !DILocation(line: 120, column: 3, scope: !2543)
!2555 = distinct !DISubprogram(name: "feof_unlocked", scope: !2420, file: !2420, line: 128, type: !2446, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2556)
!2556 = !{!2557}
!2557 = !DILocalVariable(name: "__stream", arg: 1, scope: !2555, file: !2420, line: 128, type: !2448)
!2558 = !DILocation(line: 0, scope: !2555)
!2559 = !DILocation(line: 130, column: 10, scope: !2555)
!2560 = !DILocation(line: 130, column: 3, scope: !2555)
!2561 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2420, file: !2420, line: 135, type: !2446, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2562)
!2562 = !{!2563}
!2563 = !DILocalVariable(name: "__stream", arg: 1, scope: !2561, file: !2420, line: 135, type: !2448)
!2564 = !DILocation(line: 0, scope: !2561)
!2565 = !DILocation(line: 137, column: 10, scope: !2561)
!2566 = !DILocation(line: 137, column: 3, scope: !2561)
!2567 = distinct !DISubprogram(name: "tolower", scope: !2568, file: !2568, line: 207, type: !2513, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2569)
!2568 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2569 = !{!2570}
!2570 = !DILocalVariable(name: "__c", arg: 1, scope: !2567, file: !2568, line: 207, type: !659)
!2571 = !DILocation(line: 0, scope: !2567)
!2572 = !DILocation(line: 209, column: 22, scope: !2567)
!2573 = !DILocation(line: 209, column: 39, scope: !2567)
!2574 = !DILocation(line: 209, column: 38, scope: !2567)
!2575 = !DILocation(line: 209, column: 37, scope: !2567)
!2576 = !DILocation(line: 209, column: 10, scope: !2567)
!2577 = !DILocation(line: 209, column: 3, scope: !2567)
!2578 = distinct !DISubprogram(name: "toupper", scope: !2568, file: !2568, line: 213, type: !2513, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2579)
!2579 = !{!2580}
!2580 = !DILocalVariable(name: "__c", arg: 1, scope: !2578, file: !2568, line: 213, type: !659)
!2581 = !DILocation(line: 0, scope: !2578)
!2582 = !DILocation(line: 215, column: 22, scope: !2578)
!2583 = !DILocation(line: 215, column: 39, scope: !2578)
!2584 = !DILocation(line: 215, column: 38, scope: !2578)
!2585 = !DILocation(line: 215, column: 37, scope: !2578)
!2586 = !DILocation(line: 215, column: 10, scope: !2578)
!2587 = !DILocation(line: 215, column: 3, scope: !2578)
!2588 = distinct !DISubprogram(name: "atoi", scope: !2589, file: !2589, line: 361, type: !2590, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2592)
!2589 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!659, !664}
!2592 = !{!2593}
!2593 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2588, file: !2589, line: 361, type: !664)
!2594 = !DILocation(line: 0, scope: !2588)
!2595 = !DILocation(line: 363, column: 16, scope: !2588)
!2596 = !DILocation(line: 363, column: 10, scope: !2588)
!2597 = !DILocation(line: 363, column: 3, scope: !2588)
!2598 = distinct !DISubprogram(name: "atol", scope: !2589, file: !2589, line: 366, type: !2599, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2601)
!2599 = !DISubroutineType(types: !2600)
!2600 = !{!7, !664}
!2601 = !{!2602}
!2602 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2598, file: !2589, line: 366, type: !664)
!2603 = !DILocation(line: 0, scope: !2598)
!2604 = !DILocation(line: 368, column: 10, scope: !2598)
!2605 = !DILocation(line: 368, column: 3, scope: !2598)
!2606 = distinct !DISubprogram(name: "atoll", scope: !2589, file: !2589, line: 373, type: !2607, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2610)
!2607 = !DISubroutineType(types: !2608)
!2608 = !{!2609, !664}
!2609 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2610 = !{!2611}
!2611 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2606, file: !2589, line: 373, type: !664)
!2612 = !DILocation(line: 0, scope: !2606)
!2613 = !DILocation(line: 375, column: 10, scope: !2606)
!2614 = !DILocation(line: 375, column: 3, scope: !2606)
!2615 = distinct !DISubprogram(name: "bsearch", scope: !2616, file: !2616, line: 20, type: !2617, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2620)
!2616 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2617 = !DISubroutineType(types: !2618)
!2618 = !{!663, !1432, !1432, !1235, !1235, !2619}
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2589, line: 808, baseType: !1436)
!2620 = !{!2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630}
!2621 = !DILocalVariable(name: "__key", arg: 1, scope: !2615, file: !2616, line: 20, type: !1432)
!2622 = !DILocalVariable(name: "__base", arg: 2, scope: !2615, file: !2616, line: 20, type: !1432)
!2623 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2615, file: !2616, line: 20, type: !1235)
!2624 = !DILocalVariable(name: "__size", arg: 4, scope: !2615, file: !2616, line: 20, type: !1235)
!2625 = !DILocalVariable(name: "__compar", arg: 5, scope: !2615, file: !2616, line: 21, type: !2619)
!2626 = !DILocalVariable(name: "__l", scope: !2615, file: !2616, line: 23, type: !1235)
!2627 = !DILocalVariable(name: "__u", scope: !2615, file: !2616, line: 23, type: !1235)
!2628 = !DILocalVariable(name: "__idx", scope: !2615, file: !2616, line: 23, type: !1235)
!2629 = !DILocalVariable(name: "__p", scope: !2615, file: !2616, line: 24, type: !1432)
!2630 = !DILocalVariable(name: "__comparison", scope: !2615, file: !2616, line: 25, type: !659)
!2631 = !DILocation(line: 0, scope: !2615)
!2632 = !DILocation(line: 29, column: 3, scope: !2615)
!2633 = !DILocation(line: 27, column: 7, scope: !2615)
!2634 = !DILocation(line: 29, column: 14, scope: !2615)
!2635 = !DILocation(line: 31, column: 20, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2615, file: !2616, line: 30, column: 5)
!2637 = !DILocation(line: 31, column: 27, scope: !2636)
!2638 = !DILocation(line: 32, column: 56, scope: !2636)
!2639 = !DILocation(line: 32, column: 47, scope: !2636)
!2640 = !DILocation(line: 33, column: 22, scope: !2636)
!2641 = !DILocation(line: 34, column: 24, scope: !2642)
!2642 = distinct !DILexicalBlock(scope: !2636, file: !2616, line: 34, column: 11)
!2643 = !DILocation(line: 34, column: 11, scope: !2636)
!2644 = !DILocation(line: 36, column: 29, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2642, file: !2616, line: 36, column: 16)
!2646 = !DILocation(line: 36, column: 16, scope: !2642)
!2647 = !DILocation(line: 37, column: 14, scope: !2645)
!2648 = distinct !{!2648, !2632, !2649}
!2649 = !DILocation(line: 40, column: 5, scope: !2615)
!2650 = !DILocation(line: 43, column: 1, scope: !2615)
!2651 = distinct !DISubprogram(name: "atof", scope: !2652, file: !2652, line: 25, type: !2653, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2656)
!2652 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!2655, !664}
!2655 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2656 = !{!2657}
!2657 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2651, file: !2652, line: 25, type: !664)
!2658 = !DILocation(line: 0, scope: !2651)
!2659 = !DILocation(line: 27, column: 10, scope: !2651)
!2660 = !DILocation(line: 27, column: 3, scope: !2651)
!2661 = distinct !DISubprogram(name: "strtoimax", scope: !2662, file: !2662, line: 324, type: !2663, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2669)
!2662 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!2665, !2423, !2668, !659}
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2666, line: 101, baseType: !2667)
!2666 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2475, line: 72, baseType: !7)
!2668 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !660)
!2669 = !{!2670, !2671, !2672}
!2670 = !DILocalVariable(name: "nptr", arg: 1, scope: !2661, file: !2662, line: 324, type: !2423)
!2671 = !DILocalVariable(name: "endptr", arg: 2, scope: !2661, file: !2662, line: 324, type: !2668)
!2672 = !DILocalVariable(name: "base", arg: 3, scope: !2661, file: !2662, line: 324, type: !659)
!2673 = !DILocation(line: 0, scope: !2661)
!2674 = !DILocation(line: 327, column: 10, scope: !2661)
!2675 = !DILocation(line: 327, column: 3, scope: !2661)
!2676 = distinct !DISubprogram(name: "strtoumax", scope: !2662, file: !2662, line: 336, type: !2677, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2681)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{!2679, !2423, !2668, !659}
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2666, line: 102, baseType: !2680)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2475, line: 73, baseType: !743)
!2681 = !{!2682, !2683, !2684}
!2682 = !DILocalVariable(name: "nptr", arg: 1, scope: !2676, file: !2662, line: 336, type: !2423)
!2683 = !DILocalVariable(name: "endptr", arg: 2, scope: !2676, file: !2662, line: 336, type: !2668)
!2684 = !DILocalVariable(name: "base", arg: 3, scope: !2676, file: !2662, line: 336, type: !659)
!2685 = !DILocation(line: 0, scope: !2676)
!2686 = !DILocation(line: 339, column: 10, scope: !2676)
!2687 = !DILocation(line: 339, column: 3, scope: !2676)
!2688 = distinct !DISubprogram(name: "wcstoimax", scope: !2662, file: !2662, line: 348, type: !2689, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2698)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{!2665, !2691, !2695, !659}
!2691 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2692)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2694)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2662, line: 34, baseType: !659)
!2695 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2696)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 64)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 64)
!2698 = !{!2699, !2700, !2701}
!2699 = !DILocalVariable(name: "nptr", arg: 1, scope: !2688, file: !2662, line: 348, type: !2691)
!2700 = !DILocalVariable(name: "endptr", arg: 2, scope: !2688, file: !2662, line: 348, type: !2695)
!2701 = !DILocalVariable(name: "base", arg: 3, scope: !2688, file: !2662, line: 348, type: !659)
!2702 = !DILocation(line: 0, scope: !2688)
!2703 = !DILocation(line: 351, column: 10, scope: !2688)
!2704 = !DILocation(line: 351, column: 3, scope: !2688)
!2705 = distinct !DISubprogram(name: "wcstoumax", scope: !2662, file: !2662, line: 362, type: !2706, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2708)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{!2679, !2691, !2695, !659}
!2708 = !{!2709, !2710, !2711}
!2709 = !DILocalVariable(name: "nptr", arg: 1, scope: !2705, file: !2662, line: 362, type: !2691)
!2710 = !DILocalVariable(name: "endptr", arg: 2, scope: !2705, file: !2662, line: 362, type: !2695)
!2711 = !DILocalVariable(name: "base", arg: 3, scope: !2705, file: !2662, line: 362, type: !659)
!2712 = !DILocation(line: 0, scope: !2705)
!2713 = !DILocation(line: 365, column: 10, scope: !2705)
!2714 = !DILocation(line: 365, column: 3, scope: !2705)
!2715 = distinct !DISubprogram(name: "stat", scope: !2716, file: !2716, line: 453, type: !2717, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2754)
!2716 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2717 = !DISubroutineType(types: !2718)
!2718 = !{!659, !664, !2719}
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2721, line: 46, size: 1152, elements: !2722)
!2721 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2722 = !{!2723, !2725, !2727, !2729, !2731, !2733, !2735, !2736, !2737, !2738, !2740, !2742, !2750, !2751, !2752}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2720, file: !2721, line: 48, baseType: !2724, size: 64)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2475, line: 145, baseType: !743)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2720, file: !2721, line: 53, baseType: !2726, size: 64, offset: 64)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2475, line: 148, baseType: !743)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2720, file: !2721, line: 61, baseType: !2728, size: 64, offset: 128)
!2728 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2475, line: 151, baseType: !743)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2720, file: !2721, line: 62, baseType: !2730, size: 32, offset: 192)
!2730 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2475, line: 150, baseType: !6)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2720, file: !2721, line: 64, baseType: !2732, size: 32, offset: 224)
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2475, line: 146, baseType: !6)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2720, file: !2721, line: 65, baseType: !2734, size: 32, offset: 256)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2475, line: 147, baseType: !6)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2720, file: !2721, line: 67, baseType: !659, size: 32, offset: 288)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2720, file: !2721, line: 69, baseType: !2724, size: 64, offset: 320)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2720, file: !2721, line: 74, baseType: !2474, size: 64, offset: 384)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2720, file: !2721, line: 78, baseType: !2739, size: 64, offset: 448)
!2739 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2475, line: 174, baseType: !7)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2720, file: !2721, line: 80, baseType: !2741, size: 64, offset: 512)
!2741 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2475, line: 179, baseType: !7)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2720, file: !2721, line: 91, baseType: !2743, size: 128, offset: 576)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2744, line: 10, size: 128, elements: !2745)
!2744 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2745 = !{!2746, !2748}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2743, file: !2744, line: 12, baseType: !2747, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2475, line: 160, baseType: !7)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2743, file: !2744, line: 16, baseType: !2749, size: 64, offset: 64)
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2475, line: 196, baseType: !7)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2720, file: !2721, line: 92, baseType: !2743, size: 128, offset: 704)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2720, file: !2721, line: 93, baseType: !2743, size: 128, offset: 832)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2720, file: !2721, line: 106, baseType: !2753, size: 192, offset: 960)
!2753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2749, size: 192, elements: !859)
!2754 = !{!2755, !2756}
!2755 = !DILocalVariable(name: "__path", arg: 1, scope: !2715, file: !2716, line: 453, type: !664)
!2756 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2715, file: !2716, line: 453, type: !2719)
!2757 = !DILocation(line: 0, scope: !2715)
!2758 = !DILocation(line: 455, column: 10, scope: !2715)
!2759 = !DILocation(line: 455, column: 3, scope: !2715)
!2760 = distinct !DISubprogram(name: "lstat", scope: !2716, file: !2716, line: 460, type: !2717, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2761)
!2761 = !{!2762, !2763}
!2762 = !DILocalVariable(name: "__path", arg: 1, scope: !2760, file: !2716, line: 460, type: !664)
!2763 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2760, file: !2716, line: 460, type: !2719)
!2764 = !DILocation(line: 0, scope: !2760)
!2765 = !DILocation(line: 462, column: 10, scope: !2760)
!2766 = !DILocation(line: 462, column: 3, scope: !2760)
!2767 = distinct !DISubprogram(name: "fstat", scope: !2716, file: !2716, line: 467, type: !2768, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2770)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!659, !659, !2719}
!2770 = !{!2771, !2772}
!2771 = !DILocalVariable(name: "__fd", arg: 1, scope: !2767, file: !2716, line: 467, type: !659)
!2772 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2767, file: !2716, line: 467, type: !2719)
!2773 = !DILocation(line: 0, scope: !2767)
!2774 = !DILocation(line: 469, column: 10, scope: !2767)
!2775 = !DILocation(line: 469, column: 3, scope: !2767)
!2776 = distinct !DISubprogram(name: "fstatat", scope: !2716, file: !2716, line: 474, type: !2777, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2779)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!659, !659, !664, !2719, !659}
!2779 = !{!2780, !2781, !2782, !2783}
!2780 = !DILocalVariable(name: "__fd", arg: 1, scope: !2776, file: !2716, line: 474, type: !659)
!2781 = !DILocalVariable(name: "__filename", arg: 2, scope: !2776, file: !2716, line: 474, type: !664)
!2782 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2776, file: !2716, line: 474, type: !2719)
!2783 = !DILocalVariable(name: "__flag", arg: 4, scope: !2776, file: !2716, line: 474, type: !659)
!2784 = !DILocation(line: 0, scope: !2776)
!2785 = !DILocation(line: 477, column: 10, scope: !2776)
!2786 = !DILocation(line: 477, column: 3, scope: !2776)
!2787 = distinct !DISubprogram(name: "mknod", scope: !2716, file: !2716, line: 483, type: !2788, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2790)
!2788 = !DISubroutineType(types: !2789)
!2789 = !{!659, !664, !2730, !2724}
!2790 = !{!2791, !2792, !2793}
!2791 = !DILocalVariable(name: "__path", arg: 1, scope: !2787, file: !2716, line: 483, type: !664)
!2792 = !DILocalVariable(name: "__mode", arg: 2, scope: !2787, file: !2716, line: 483, type: !2730)
!2793 = !DILocalVariable(name: "__dev", arg: 3, scope: !2787, file: !2716, line: 483, type: !2724)
!2794 = !DILocation(line: 0, scope: !2787)
!2795 = !DILocation(line: 485, column: 10, scope: !2787)
!2796 = !DILocation(line: 485, column: 3, scope: !2787)
!2797 = distinct !DISubprogram(name: "mknodat", scope: !2716, file: !2716, line: 491, type: !2798, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2800)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{!659, !659, !664, !2730, !2724}
!2800 = !{!2801, !2802, !2803, !2804}
!2801 = !DILocalVariable(name: "__fd", arg: 1, scope: !2797, file: !2716, line: 491, type: !659)
!2802 = !DILocalVariable(name: "__path", arg: 2, scope: !2797, file: !2716, line: 491, type: !664)
!2803 = !DILocalVariable(name: "__mode", arg: 3, scope: !2797, file: !2716, line: 491, type: !2730)
!2804 = !DILocalVariable(name: "__dev", arg: 4, scope: !2797, file: !2716, line: 491, type: !2724)
!2805 = !DILocation(line: 0, scope: !2797)
!2806 = !DILocation(line: 494, column: 10, scope: !2797)
!2807 = !DILocation(line: 494, column: 3, scope: !2797)
!2808 = distinct !DISubprogram(name: "stat64", scope: !2716, file: !2716, line: 502, type: !2809, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2831)
!2809 = !DISubroutineType(types: !2810)
!2810 = !{!659, !664, !2811}
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2721, line: 119, size: 1152, elements: !2813)
!2813 = !{!2814, !2815, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2827, !2828, !2829, !2830}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2812, file: !2721, line: 121, baseType: !2724, size: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2812, file: !2721, line: 123, baseType: !2816, size: 64, offset: 64)
!2816 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2475, line: 149, baseType: !743)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2812, file: !2721, line: 124, baseType: !2728, size: 64, offset: 128)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2812, file: !2721, line: 125, baseType: !2730, size: 32, offset: 192)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2812, file: !2721, line: 132, baseType: !2732, size: 32, offset: 224)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2812, file: !2721, line: 133, baseType: !2734, size: 32, offset: 256)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2812, file: !2721, line: 135, baseType: !659, size: 32, offset: 288)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2812, file: !2721, line: 136, baseType: !2724, size: 64, offset: 320)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2812, file: !2721, line: 137, baseType: !2474, size: 64, offset: 384)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2812, file: !2721, line: 143, baseType: !2739, size: 64, offset: 448)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2812, file: !2721, line: 144, baseType: !2826, size: 64, offset: 512)
!2826 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2475, line: 180, baseType: !7)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2812, file: !2721, line: 152, baseType: !2743, size: 128, offset: 576)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2812, file: !2721, line: 153, baseType: !2743, size: 128, offset: 704)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2812, file: !2721, line: 154, baseType: !2743, size: 128, offset: 832)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2812, file: !2721, line: 164, baseType: !2753, size: 192, offset: 960)
!2831 = !{!2832, !2833}
!2832 = !DILocalVariable(name: "__path", arg: 1, scope: !2808, file: !2716, line: 502, type: !664)
!2833 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2808, file: !2716, line: 502, type: !2811)
!2834 = !DILocation(line: 0, scope: !2808)
!2835 = !DILocation(line: 504, column: 10, scope: !2808)
!2836 = !DILocation(line: 504, column: 3, scope: !2808)
!2837 = distinct !DISubprogram(name: "lstat64", scope: !2716, file: !2716, line: 509, type: !2809, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2838)
!2838 = !{!2839, !2840}
!2839 = !DILocalVariable(name: "__path", arg: 1, scope: !2837, file: !2716, line: 509, type: !664)
!2840 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2837, file: !2716, line: 509, type: !2811)
!2841 = !DILocation(line: 0, scope: !2837)
!2842 = !DILocation(line: 511, column: 10, scope: !2837)
!2843 = !DILocation(line: 511, column: 3, scope: !2837)
!2844 = distinct !DISubprogram(name: "fstat64", scope: !2716, file: !2716, line: 516, type: !2845, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2847)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!659, !659, !2811}
!2847 = !{!2848, !2849}
!2848 = !DILocalVariable(name: "__fd", arg: 1, scope: !2844, file: !2716, line: 516, type: !659)
!2849 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2844, file: !2716, line: 516, type: !2811)
!2850 = !DILocation(line: 0, scope: !2844)
!2851 = !DILocation(line: 518, column: 10, scope: !2844)
!2852 = !DILocation(line: 518, column: 3, scope: !2844)
!2853 = distinct !DISubprogram(name: "fstatat64", scope: !2716, file: !2716, line: 523, type: !2854, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2856)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!659, !659, !664, !2811, !659}
!2856 = !{!2857, !2858, !2859, !2860}
!2857 = !DILocalVariable(name: "__fd", arg: 1, scope: !2853, file: !2716, line: 523, type: !659)
!2858 = !DILocalVariable(name: "__filename", arg: 2, scope: !2853, file: !2716, line: 523, type: !664)
!2859 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2853, file: !2716, line: 523, type: !2811)
!2860 = !DILocalVariable(name: "__flag", arg: 4, scope: !2853, file: !2716, line: 523, type: !659)
!2861 = !DILocation(line: 0, scope: !2853)
!2862 = !DILocation(line: 526, column: 10, scope: !2853)
!2863 = !DILocation(line: 526, column: 3, scope: !2853)
!2864 = distinct !DISubprogram(name: "single_dom_exit", scope: !3, file: !3, line: 374, type: !2865, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2867)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!1070, !1305}
!2867 = !{!2868, !2869}
!2868 = !DILocalVariable(name: "loop", arg: 1, scope: !2864, file: !3, line: 374, type: !1305)
!2869 = !DILocalVariable(name: "exit", scope: !2864, file: !3, line: 376, type: !1070)
!2870 = !DILocation(line: 0, scope: !2864)
!2871 = !DILocation(line: 376, column: 15, scope: !2864)
!2872 = !DILocation(line: 378, column: 8, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2864, file: !3, line: 378, column: 7)
!2874 = !DILocation(line: 378, column: 7, scope: !2864)
!2875 = !DILocation(line: 381, column: 48, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2864, file: !3, line: 381, column: 7)
!2877 = !DILocation(line: 381, column: 8, scope: !2876)
!2878 = !DILocation(line: 385, column: 1, scope: !2864)
!2879 = distinct !DISubprogram(name: "dump_iv", scope: !3, file: !3, line: 391, type: !2880, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2882)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{null, !2448, !2085}
!2882 = !{!2883, !2884}
!2883 = !DILocalVariable(name: "file", arg: 1, scope: !2879, file: !3, line: 391, type: !2448)
!2884 = !DILocalVariable(name: "iv", arg: 2, scope: !2879, file: !3, line: 391, type: !2085)
!2885 = !DILocation(line: 0, scope: !2879)
!2886 = !DILocation(line: 393, column: 11, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 393, column: 7)
!2888 = !DILocation(line: 393, column: 7, scope: !2887)
!2889 = !DILocation(line: 393, column: 7, scope: !2879)
!2890 = !DILocation(line: 395, column: 7, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 394, column: 5)
!2892 = !DILocation(line: 396, column: 37, scope: !2891)
!2893 = !DILocation(line: 396, column: 7, scope: !2891)
!2894 = !DILocation(line: 397, column: 7, scope: !2891)
!2895 = !DILocation(line: 398, column: 5, scope: !2891)
!2896 = !DILocation(line: 400, column: 3, scope: !2879)
!2897 = !DILocation(line: 401, column: 29, scope: !2879)
!2898 = !DILocation(line: 401, column: 3, scope: !2879)
!2899 = !DILocation(line: 402, column: 3, scope: !2879)
!2900 = !DILocation(line: 404, column: 11, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 404, column: 7)
!2902 = !DILocation(line: 404, column: 7, scope: !2901)
!2903 = !DILocation(line: 404, column: 7, scope: !2879)
!2904 = !DILocation(line: 406, column: 7, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 405, column: 5)
!2906 = !DILocation(line: 407, column: 37, scope: !2905)
!2907 = !DILocation(line: 407, column: 7, scope: !2905)
!2908 = !DILocation(line: 408, column: 7, scope: !2905)
!2909 = !DILocation(line: 410, column: 7, scope: !2905)
!2910 = !DILocation(line: 411, column: 37, scope: !2905)
!2911 = !DILocation(line: 411, column: 7, scope: !2905)
!2912 = !DILocation(line: 412, column: 7, scope: !2905)
!2913 = !DILocation(line: 413, column: 5, scope: !2905)
!2914 = !DILocation(line: 416, column: 7, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 415, column: 5)
!2916 = !DILocation(line: 417, column: 37, scope: !2915)
!2917 = !DILocation(line: 417, column: 7, scope: !2915)
!2918 = !DILocation(line: 418, column: 7, scope: !2915)
!2919 = !DILocation(line: 421, column: 11, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 421, column: 7)
!2921 = !DILocation(line: 421, column: 7, scope: !2920)
!2922 = !DILocation(line: 421, column: 7, scope: !2879)
!2923 = !DILocation(line: 423, column: 7, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2920, file: !3, line: 422, column: 5)
!2925 = !DILocation(line: 424, column: 37, scope: !2924)
!2926 = !DILocation(line: 424, column: 7, scope: !2924)
!2927 = !DILocation(line: 425, column: 7, scope: !2924)
!2928 = !DILocation(line: 426, column: 5, scope: !2924)
!2929 = !DILocation(line: 428, column: 11, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 428, column: 7)
!2931 = !DILocation(line: 428, column: 7, scope: !2930)
!2932 = !DILocation(line: 428, column: 7, scope: !2879)
!2933 = !DILocation(line: 429, column: 5, scope: !2930)
!2934 = !DILocation(line: 430, column: 1, scope: !2879)
!2935 = distinct !DISubprogram(name: "dump_use", scope: !3, file: !3, line: 436, type: !2936, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2938)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{null, !2448, !2111}
!2938 = !{!2939, !2940}
!2939 = !DILocalVariable(name: "file", arg: 1, scope: !2935, file: !3, line: 436, type: !2448)
!2940 = !DILocalVariable(name: "use", arg: 2, scope: !2935, file: !3, line: 436, type: !2111)
!2941 = !DILocation(line: 0, scope: !2935)
!2942 = !DILocation(line: 438, column: 35, scope: !2935)
!2943 = !DILocation(line: 438, column: 3, scope: !2935)
!2944 = !DILocation(line: 440, column: 16, scope: !2935)
!2945 = !DILocation(line: 440, column: 3, scope: !2935)
!2946 = !DILocation(line: 443, column: 7, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 441, column: 5)
!2948 = !DILocation(line: 444, column: 7, scope: !2947)
!2949 = !DILocation(line: 447, column: 7, scope: !2947)
!2950 = !DILocation(line: 448, column: 7, scope: !2947)
!2951 = !DILocation(line: 451, column: 7, scope: !2947)
!2952 = !DILocation(line: 452, column: 7, scope: !2947)
!2953 = !DILocation(line: 455, column: 7, scope: !2947)
!2954 = !DILocation(line: 456, column: 5, scope: !2947)
!2955 = !DILocation(line: 458, column: 3, scope: !2935)
!2956 = !DILocation(line: 459, column: 33, scope: !2935)
!2957 = !DILocation(line: 459, column: 3, scope: !2935)
!2958 = !DILocation(line: 460, column: 3, scope: !2935)
!2959 = !DILocation(line: 462, column: 3, scope: !2935)
!2960 = !DILocation(line: 463, column: 12, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 463, column: 7)
!2962 = !DILocation(line: 463, column: 7, scope: !2961)
!2963 = !DILocation(line: 463, column: 7, scope: !2935)
!2964 = !DILocation(line: 464, column: 31, scope: !2961)
!2965 = !DILocation(line: 464, column: 5, scope: !2961)
!2966 = !DILocation(line: 465, column: 3, scope: !2935)
!2967 = !DILocation(line: 467, column: 23, scope: !2935)
!2968 = !DILocation(line: 467, column: 3, scope: !2935)
!2969 = !DILocation(line: 469, column: 12, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 469, column: 7)
!2971 = !DILocation(line: 469, column: 7, scope: !2970)
!2972 = !DILocation(line: 469, column: 7, scope: !2935)
!2973 = !DILocation(line: 471, column: 7, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2970, file: !3, line: 470, column: 5)
!2975 = !DILocation(line: 472, column: 7, scope: !2974)
!2976 = !DILocation(line: 473, column: 5, scope: !2974)
!2977 = !DILocation(line: 474, column: 1, scope: !2935)
!2978 = distinct !DISubprogram(name: "dump_uses", scope: !3, file: !3, line: 480, type: !2979, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2981)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{null, !2448, !2184}
!2981 = !{!2982, !2983, !2984, !2985}
!2982 = !DILocalVariable(name: "file", arg: 1, scope: !2978, file: !3, line: 480, type: !2448)
!2983 = !DILocalVariable(name: "data", arg: 2, scope: !2978, file: !3, line: 480, type: !2184)
!2984 = !DILocalVariable(name: "i", scope: !2978, file: !3, line: 482, type: !6)
!2985 = !DILocalVariable(name: "use", scope: !2978, file: !3, line: 483, type: !2111)
!2986 = !DILocation(line: 0, scope: !2978)
!2987 = !DILocation(line: 485, column: 8, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 485, column: 3)
!2989 = !DILocation(line: 0, scope: !2988)
!2990 = !DILocation(line: 485, column: 19, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2988, file: !3, line: 485, column: 3)
!2992 = !DILocation(line: 485, column: 17, scope: !2991)
!2993 = !DILocation(line: 485, column: 3, scope: !2988)
!2994 = !DILocation(line: 487, column: 13, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 486, column: 5)
!2996 = !DILocation(line: 489, column: 7, scope: !2995)
!2997 = !DILocation(line: 490, column: 7, scope: !2995)
!2998 = !DILocation(line: 485, column: 38, scope: !2991)
!2999 = !DILocation(line: 485, column: 3, scope: !2991)
!3000 = distinct !{!3000, !2993, !3001}
!3001 = !DILocation(line: 491, column: 5, scope: !2988)
!3002 = !DILocation(line: 492, column: 1, scope: !2978)
!3003 = distinct !DISubprogram(name: "n_iv_uses", scope: !3, file: !3, line: 342, type: !3004, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3006)
!3004 = !DISubroutineType(types: !3005)
!3005 = !{!6, !2184}
!3006 = !{!3007}
!3007 = !DILocalVariable(name: "data", arg: 1, scope: !3003, file: !3, line: 342, type: !2184)
!3008 = !DILocation(line: 0, scope: !3003)
!3009 = !DILocation(line: 344, column: 10, scope: !3003)
!3010 = !DILocation(line: 344, column: 3, scope: !3003)
!3011 = distinct !DISubprogram(name: "iv_use", scope: !3, file: !3, line: 350, type: !3012, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3014)
!3012 = !DISubroutineType(types: !3013)
!3013 = !{!2111, !2184, !6}
!3014 = !{!3015, !3016}
!3015 = !DILocalVariable(name: "data", arg: 1, scope: !3011, file: !3, line: 350, type: !2184)
!3016 = !DILocalVariable(name: "i", arg: 2, scope: !3011, file: !3, line: 350, type: !6)
!3017 = !DILocation(line: 0, scope: !3011)
!3018 = !DILocation(line: 352, column: 10, scope: !3011)
!3019 = !DILocation(line: 352, column: 3, scope: !3011)
!3020 = distinct !DISubprogram(name: "dump_cand", scope: !3, file: !3, line: 498, type: !3021, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3023)
!3021 = !DISubroutineType(types: !3022)
!3022 = !{null, !2448, !2126}
!3023 = !{!3024, !3025, !3026}
!3024 = !DILocalVariable(name: "file", arg: 1, scope: !3020, file: !3, line: 498, type: !2448)
!3025 = !DILocalVariable(name: "cand", arg: 2, scope: !3020, file: !3, line: 498, type: !2126)
!3026 = !DILocalVariable(name: "iv", scope: !3020, file: !3, line: 500, type: !2085)
!3027 = !DILocation(line: 0, scope: !3020)
!3028 = !DILocation(line: 500, column: 25, scope: !3020)
!3029 = !DILocation(line: 503, column: 11, scope: !3020)
!3030 = !DILocation(line: 503, column: 21, scope: !3020)
!3031 = !DILocation(line: 503, column: 15, scope: !3020)
!3032 = !DILocation(line: 502, column: 3, scope: !3020)
!3033 = !DILocation(line: 505, column: 13, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 505, column: 7)
!3035 = !DILocation(line: 505, column: 7, scope: !3034)
!3036 = !DILocation(line: 505, column: 7, scope: !3020)
!3037 = !DILocation(line: 507, column: 7, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 506, column: 5)
!3039 = !DILocation(line: 508, column: 7, scope: !3038)
!3040 = !DILocation(line: 509, column: 5, scope: !3038)
!3041 = !DILocation(line: 511, column: 8, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 511, column: 7)
!3043 = !DILocation(line: 511, column: 7, scope: !3020)
!3044 = !DILocation(line: 513, column: 7, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 512, column: 5)
!3046 = !DILocation(line: 514, column: 7, scope: !3045)
!3047 = !DILocation(line: 517, column: 17, scope: !3020)
!3048 = !DILocation(line: 517, column: 3, scope: !3020)
!3049 = !DILocation(line: 520, column: 7, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 518, column: 5)
!3051 = !DILocation(line: 521, column: 7, scope: !3050)
!3052 = !DILocation(line: 524, column: 61, scope: !3050)
!3053 = !DILocation(line: 524, column: 71, scope: !3050)
!3054 = !DILocation(line: 524, column: 7, scope: !3050)
!3055 = !DILocation(line: 525, column: 7, scope: !3050)
!3056 = !DILocation(line: 528, column: 60, scope: !3050)
!3057 = !DILocation(line: 528, column: 70, scope: !3050)
!3058 = !DILocation(line: 528, column: 7, scope: !3050)
!3059 = !DILocation(line: 529, column: 7, scope: !3050)
!3060 = !DILocation(line: 532, column: 7, scope: !3050)
!3061 = !DILocation(line: 533, column: 7, scope: !3050)
!3062 = !DILocation(line: 536, column: 7, scope: !3050)
!3063 = !DILocation(line: 537, column: 7, scope: !3050)
!3064 = !DILocation(line: 540, column: 3, scope: !3020)
!3065 = !DILocation(line: 541, column: 1, scope: !3020)
!3066 = distinct !DISubprogram(name: "contains_abnormal_ssa_name_p", scope: !3, file: !3, line: 665, type: !3067, scopeLine: 666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3069)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!136, !788}
!3069 = !{!3070, !3071, !3072}
!3070 = !DILocalVariable(name: "expr", arg: 1, scope: !3066, file: !3, line: 665, type: !788)
!3071 = !DILocalVariable(name: "code", scope: !3066, file: !3, line: 667, type: !159)
!3072 = !DILocalVariable(name: "codeclass", scope: !3066, file: !3, line: 668, type: !407)
!3073 = !DILocation(line: 0, scope: !3066)
!3074 = !DILocation(line: 670, column: 8, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 670, column: 7)
!3076 = !DILocation(line: 670, column: 7, scope: !3066)
!3077 = !DILocation(line: 673, column: 10, scope: !3066)
!3078 = !DILocation(line: 674, column: 15, scope: !3066)
!3079 = !DILocation(line: 676, column: 7, scope: !3066)
!3080 = !DILocation(line: 677, column: 12, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 676, column: 7)
!3082 = !DILocation(line: 677, column: 5, scope: !3081)
!3083 = !DILocation(line: 680, column: 10, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 679, column: 7)
!3085 = !DILocation(line: 679, column: 7, scope: !3066)
!3086 = !DILocation(line: 683, column: 12, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 683, column: 7)
!3088 = !DILocation(line: 683, column: 7, scope: !3066)
!3089 = !DILocation(line: 684, column: 30, scope: !3087)
!3090 = !DILocation(line: 684, column: 13, scope: !3087)
!3091 = !DILocation(line: 684, column: 12, scope: !3087)
!3092 = !DILocation(line: 684, column: 5, scope: !3087)
!3093 = !DILocation(line: 688, column: 3, scope: !3066)
!3094 = !DILocation(line: 692, column: 41, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 692, column: 11)
!3096 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 689, column: 5)
!3097 = !DILocation(line: 692, column: 11, scope: !3095)
!3098 = !DILocation(line: 692, column: 11, scope: !3096)
!3099 = !DILocation(line: 697, column: 41, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 697, column: 11)
!3101 = !DILocation(line: 697, column: 11, scope: !3100)
!3102 = !DILocation(line: 697, column: 11, scope: !3096)
!3103 = !DILocation(line: 703, column: 7, scope: !3096)
!3104 = !DILocation(line: 704, column: 5, scope: !3096)
!3105 = !DILocation(line: 706, column: 3, scope: !3066)
!3106 = !DILocation(line: 707, column: 1, scope: !3066)
!3107 = distinct !DISubprogram(name: "idx_contains_abnormal_ssa_name_p", scope: !3, file: !3, line: 647, type: !3108, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3110)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!136, !788, !1124, !663}
!3110 = !{!3111, !3112, !3113}
!3111 = !DILocalVariable(name: "base", arg: 1, scope: !3107, file: !3, line: 647, type: !788)
!3112 = !DILocalVariable(name: "index", arg: 2, scope: !3107, file: !3, line: 647, type: !1124)
!3113 = !DILocalVariable(name: "data", arg: 3, scope: !3107, file: !3, line: 648, type: !663)
!3114 = !DILocation(line: 0, scope: !3107)
!3115 = !DILocation(line: 650, column: 7, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3107, file: !3, line: 650, column: 7)
!3117 = !DILocation(line: 650, column: 24, scope: !3116)
!3118 = !DILocation(line: 650, column: 37, scope: !3116)
!3119 = !DILocation(line: 650, column: 57, scope: !3116)
!3120 = !DILocation(line: 650, column: 7, scope: !3107)
!3121 = !DILocation(line: 652, column: 32, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 652, column: 11)
!3123 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 651, column: 5)
!3124 = !DILocation(line: 652, column: 11, scope: !3122)
!3125 = !DILocation(line: 652, column: 11, scope: !3123)
!3126 = !DILocation(line: 654, column: 32, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 654, column: 11)
!3128 = !DILocation(line: 654, column: 11, scope: !3127)
!3129 = !DILocation(line: 654, column: 11, scope: !3123)
!3130 = !DILocation(line: 658, column: 32, scope: !3107)
!3131 = !DILocation(line: 658, column: 11, scope: !3107)
!3132 = !DILocation(line: 658, column: 10, scope: !3107)
!3133 = !DILocation(line: 658, column: 3, scope: !3107)
!3134 = !DILocation(line: 659, column: 1, scope: !3107)
!3135 = distinct !DISubprogram(name: "expr_invariant_in_loop_p", scope: !3, file: !3, line: 1285, type: !3136, scopeLine: 1286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3138)
!3136 = !DISubroutineType(types: !3137)
!3137 = !{!136, !1305, !788}
!3138 = !{!3139, !3140, !3141, !3142, !3143}
!3139 = !DILocalVariable(name: "loop", arg: 1, scope: !3135, file: !3, line: 1285, type: !1305)
!3140 = !DILocalVariable(name: "expr", arg: 2, scope: !3135, file: !3, line: 1285, type: !788)
!3141 = !DILocalVariable(name: "def_bb", scope: !3135, file: !3, line: 1287, type: !1053)
!3142 = !DILocalVariable(name: "i", scope: !3135, file: !3, line: 1288, type: !6)
!3143 = !DILocalVariable(name: "len", scope: !3135, file: !3, line: 1288, type: !6)
!3144 = !DILocation(line: 0, scope: !3135)
!3145 = !DILocation(line: 1290, column: 3, scope: !3135)
!3146 = !DILocation(line: 1292, column: 7, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 1292, column: 7)
!3148 = !DILocation(line: 1292, column: 7, scope: !3135)
!3149 = !DILocation(line: 1295, column: 7, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 1295, column: 7)
!3151 = !DILocation(line: 1295, column: 24, scope: !3150)
!3152 = !DILocation(line: 1295, column: 7, scope: !3135)
!3153 = !DILocation(line: 1297, column: 27, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 1296, column: 5)
!3155 = !DILocation(line: 1297, column: 16, scope: !3154)
!3156 = !DILocation(line: 1298, column: 11, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 1298, column: 11)
!3158 = !DILocation(line: 1299, column: 4, scope: !3157)
!3159 = !DILocation(line: 1299, column: 7, scope: !3157)
!3160 = !DILocation(line: 1298, column: 11, scope: !3154)
!3161 = !DILocation(line: 1302, column: 7, scope: !3154)
!3162 = !DILocation(line: 1305, column: 8, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 1305, column: 7)
!3164 = !DILocation(line: 1305, column: 7, scope: !3135)
!3165 = !DILocation(line: 1308, column: 9, scope: !3135)
!3166 = !DILocation(line: 1310, column: 42, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 1310, column: 9)
!3168 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 1309, column: 3)
!3169 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 1309, column: 3)
!3170 = !DILocation(line: 1309, column: 17, scope: !3168)
!3171 = !DILocation(line: 1309, column: 8, scope: !3169)
!3172 = !DILocation(line: 0, scope: !3169)
!3173 = !DILocation(line: 1309, column: 3, scope: !3169)
!3174 = !DILocation(line: 1310, column: 10, scope: !3167)
!3175 = !DILocation(line: 1310, column: 9, scope: !3168)
!3176 = !DILocation(line: 1309, column: 25, scope: !3168)
!3177 = !DILocation(line: 1309, column: 3, scope: !3168)
!3178 = distinct !{!3178, !3173, !3179}
!3179 = !DILocation(line: 1311, column: 14, scope: !3169)
!3180 = !DILocation(line: 1314, column: 1, scope: !3135)
!3181 = distinct !DISubprogram(name: "loop_depth", scope: !140, file: !140, line: 425, type: !3182, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3186)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{!6, !3184}
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1306)
!3186 = !{!3187}
!3187 = !DILocalVariable(name: "loop", arg: 1, scope: !3181, file: !140, line: 425, type: !3184)
!3188 = !DILocation(line: 0, scope: !3181)
!3189 = !DILocation(line: 427, column: 10, scope: !3181)
!3190 = !DILocation(line: 427, column: 3, scope: !3181)
!3191 = distinct !DISubprogram(name: "gimple_bb", scope: !421, file: !421, line: 1112, type: !3192, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3195)
!3192 = !DISubroutineType(types: !3193)
!3193 = !{!1054, !3194}
!3194 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !674, line: 60, baseType: !2054)
!3195 = !{!3196}
!3196 = !DILocalVariable(name: "g", arg: 1, scope: !3191, file: !421, line: 1112, type: !3194)
!3197 = !DILocation(line: 0, scope: !3191)
!3198 = !DILocation(line: 1114, column: 20, scope: !3191)
!3199 = !DILocation(line: 1114, column: 3, scope: !3191)
!3200 = distinct !DISubprogram(name: "tree_operand_length", scope: !160, file: !160, line: 5347, type: !3201, scopeLine: 5348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3204)
!3201 = !DISubroutineType(types: !3202)
!3202 = !{!659, !3203}
!3203 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !674, line: 59, baseType: !2205)
!3204 = !{!3205}
!3205 = !DILocalVariable(name: "node", arg: 1, scope: !3200, file: !160, line: 5347, type: !3203)
!3206 = !DILocation(line: 0, scope: !3200)
!3207 = !DILocation(line: 5349, column: 7, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3200, file: !160, line: 5349, column: 7)
!3209 = !DILocation(line: 5349, column: 7, scope: !3200)
!3210 = !DILocation(line: 5350, column: 12, scope: !3208)
!3211 = !DILocation(line: 5350, column: 5, scope: !3208)
!3212 = !DILocation(line: 5352, column: 12, scope: !3208)
!3213 = !DILocation(line: 5352, column: 5, scope: !3208)
!3214 = !DILocation(line: 0, scope: !3208)
!3215 = !DILocation(line: 5353, column: 1, scope: !3200)
!3216 = distinct !DISubprogram(name: "stmt_invariant_in_loop_p", scope: !3, file: !3, line: 1321, type: !3217, scopeLine: 1322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3219)
!3217 = !DISubroutineType(types: !3218)
!3218 = !{!136, !1305, !1090}
!3219 = !{!3220, !3221, !3222, !3223, !3224}
!3220 = !DILocalVariable(name: "loop", arg: 1, scope: !3216, file: !3, line: 1321, type: !1305)
!3221 = !DILocalVariable(name: "stmt", arg: 2, scope: !3216, file: !3, line: 1321, type: !1090)
!3222 = !DILocalVariable(name: "i", scope: !3216, file: !3, line: 1323, type: !6)
!3223 = !DILocalVariable(name: "lhs", scope: !3216, file: !3, line: 1324, type: !788)
!3224 = !DILocalVariable(name: "op", scope: !3225, file: !3, line: 1331, type: !788)
!3225 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 1330, column: 5)
!3226 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 1329, column: 3)
!3227 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 1329, column: 3)
!3228 = !DILocation(line: 0, scope: !3216)
!3229 = !DILocation(line: 1326, column: 3, scope: !3216)
!3230 = !DILocation(line: 1328, column: 9, scope: !3216)
!3231 = !DILocation(line: 1329, column: 8, scope: !3227)
!3232 = !DILocation(line: 0, scope: !3227)
!3233 = !DILocation(line: 1329, column: 19, scope: !3226)
!3234 = !DILocation(line: 1329, column: 17, scope: !3226)
!3235 = !DILocation(line: 1329, column: 3, scope: !3227)
!3236 = !DILocation(line: 1331, column: 17, scope: !3225)
!3237 = !DILocation(line: 0, scope: !3225)
!3238 = !DILocation(line: 1332, column: 14, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 1332, column: 11)
!3240 = !DILocation(line: 1332, column: 21, scope: !3239)
!3241 = !DILocation(line: 1332, column: 25, scope: !3239)
!3242 = !DILocation(line: 1332, column: 11, scope: !3225)
!3243 = !DILocation(line: 1334, column: 5, scope: !3226)
!3244 = !DILocation(line: 1329, column: 43, scope: !3226)
!3245 = !DILocation(line: 1329, column: 3, scope: !3226)
!3246 = distinct !{!3246, !3235, !3247}
!3247 = !DILocation(line: 1334, column: 5, scope: !3227)
!3248 = !DILocation(line: 1337, column: 1, scope: !3216)
!3249 = distinct !DISubprogram(name: "gimple_num_ops", scope: !421, file: !421, line: 1596, type: !3250, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3252)
!3250 = !DISubroutineType(types: !3251)
!3251 = !{!6, !3194}
!3252 = !{!3253}
!3253 = !DILocalVariable(name: "gs", arg: 1, scope: !3249, file: !421, line: 1596, type: !3194)
!3254 = !DILocation(line: 0, scope: !3249)
!3255 = !DILocation(line: 1598, column: 21, scope: !3249)
!3256 = !DILocation(line: 1598, column: 3, scope: !3249)
!3257 = distinct !DISubprogram(name: "gimple_op", scope: !421, file: !421, line: 1631, type: !3258, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3260)
!3258 = !DISubroutineType(types: !3259)
!3259 = !{!788, !3194, !6}
!3260 = !{!3261, !3262}
!3261 = !DILocalVariable(name: "gs", arg: 1, scope: !3257, file: !421, line: 1631, type: !3194)
!3262 = !DILocalVariable(name: "i", arg: 2, scope: !3257, file: !421, line: 1631, type: !6)
!3263 = !DILocation(line: 0, scope: !3257)
!3264 = !DILocation(line: 1633, column: 7, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3257, file: !421, line: 1633, column: 7)
!3266 = !DILocation(line: 1633, column: 7, scope: !3257)
!3267 = !DILocation(line: 1638, column: 14, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3265, file: !421, line: 1634, column: 5)
!3269 = !DILocation(line: 1638, column: 7, scope: !3268)
!3270 = !DILocation(line: 0, scope: !3265)
!3271 = !DILocation(line: 1642, column: 1, scope: !3257)
!3272 = distinct !DISubprogram(name: "tree_int_cst_sign_bit", scope: !3, file: !3, line: 2779, type: !3201, scopeLine: 2780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3273)
!3273 = !{!3274, !3275, !3276}
!3274 = !DILocalVariable(name: "t", arg: 1, scope: !3272, file: !3, line: 2779, type: !3203)
!3275 = !DILocalVariable(name: "bitno", scope: !3272, file: !3, line: 2781, type: !6)
!3276 = !DILocalVariable(name: "w", scope: !3272, file: !3, line: 2782, type: !743)
!3277 = !DILocation(line: 0, scope: !3272)
!3278 = !DILocation(line: 2781, column: 20, scope: !3272)
!3279 = !DILocation(line: 2781, column: 51, scope: !3272)
!3280 = !DILocation(line: 2784, column: 13, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 2784, column: 7)
!3282 = !DILocation(line: 0, scope: !3281)
!3283 = !DILocation(line: 2784, column: 7, scope: !3272)
!3284 = !DILocation(line: 2785, column: 5, scope: !3281)
!3285 = !DILocation(line: 2788, column: 11, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 2787, column: 5)
!3287 = !DILocation(line: 2789, column: 13, scope: !3286)
!3288 = !DILocation(line: 2792, column: 13, scope: !3272)
!3289 = !DILocation(line: 2792, column: 10, scope: !3272)
!3290 = !DILocation(line: 2792, column: 3, scope: !3272)
!3291 = !DILocation(line: 0, scope: !2)
!3292 = !DILocation(line: 3000, column: 3, scope: !2)
!3293 = !DILocation(line: 3004, column: 8, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3004, column: 7)
!3295 = !DILocation(line: 3004, column: 7, scope: !2)
!3296 = !DILocation(line: 3005, column: 13, scope: !3294)
!3297 = !DILocation(line: 3005, column: 11, scope: !3294)
!3298 = !DILocation(line: 3005, column: 5, scope: !3294)
!3299 = !DILocation(line: 3009, column: 50, scope: !2)
!3300 = !DILocation(line: 3007, column: 7, scope: !2)
!3301 = !DILocation(line: 3007, column: 12, scope: !2)
!3302 = !DILocation(line: 3008, column: 7, scope: !2)
!3303 = !DILocation(line: 3008, column: 11, scope: !2)
!3304 = !DILocation(line: 3009, column: 34, scope: !2)
!3305 = !DILocation(line: 3009, column: 12, scope: !2)
!3306 = !DILocation(line: 3010, column: 7, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3010, column: 7)
!3308 = !DILocation(line: 3010, column: 7, scope: !2)
!3309 = !DILocation(line: 3011, column: 23, scope: !3307)
!3310 = !DILocation(line: 3011, column: 5, scope: !3307)
!3311 = !DILocation(line: 3013, column: 13, scope: !2)
!3312 = !DILocation(line: 3013, column: 11, scope: !2)
!3313 = !DILocation(line: 3014, column: 14, scope: !2)
!3314 = !DILocation(line: 3014, column: 19, scope: !2)
!3315 = !DILocation(line: 3015, column: 4, scope: !2)
!3316 = !DILocation(line: 3015, column: 14, scope: !2)
!3317 = !DILocation(line: 3015, column: 18, scope: !2)
!3318 = !DILocation(line: 3017, column: 3, scope: !2)
!3319 = !DILocation(line: 3018, column: 22, scope: !2)
!3320 = !DILocation(line: 3019, column: 9, scope: !2)
!3321 = !DILocation(line: 3018, column: 3, scope: !2)
!3322 = !DILocation(line: 3020, column: 9, scope: !2)
!3323 = !DILocation(line: 3021, column: 3, scope: !2)
!3324 = !DILocation(line: 3023, column: 10, scope: !2)
!3325 = !DILocation(line: 3025, column: 7, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3025, column: 7)
!3327 = !DILocation(line: 3025, column: 17, scope: !3326)
!3328 = !DILocation(line: 3025, column: 21, scope: !3326)
!3329 = !DILocation(line: 3025, column: 32, scope: !3326)
!3330 = !DILocation(line: 3025, column: 7, scope: !2)
!3331 = !DILocation(line: 3027, column: 7, scope: !3326)
!3332 = !DILocation(line: 3027, column: 18, scope: !3326)
!3333 = !DILocation(line: 3026, column: 5, scope: !3326)
!3334 = !DILocation(line: 3029, column: 4, scope: !2)
!3335 = !DILocation(line: 3029, column: 14, scope: !2)
!3336 = !DILocation(line: 3029, column: 19, scope: !2)
!3337 = !DILocation(line: 3031, column: 3, scope: !2)
!3338 = !DILocation(line: 3032, column: 1, scope: !2)
!3339 = distinct !DISubprogram(name: "mbc_entry_hash", scope: !3, file: !3, line: 2975, type: !1429, scopeLine: 2976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3340)
!3340 = !{!3341, !3342}
!3341 = !DILocalVariable(name: "entry", arg: 1, scope: !3339, file: !3, line: 2975, type: !1432)
!3342 = !DILocalVariable(name: "e", scope: !3339, file: !3, line: 2977, type: !2056)
!3343 = !DILocation(line: 0, scope: !3339)
!3344 = !DILocation(line: 2979, column: 30, scope: !3339)
!3345 = !DILocation(line: 2979, column: 13, scope: !3339)
!3346 = !DILocation(line: 2979, column: 53, scope: !3339)
!3347 = !DILocation(line: 2979, column: 57, scope: !3339)
!3348 = !DILocation(line: 2979, column: 37, scope: !3339)
!3349 = !DILocation(line: 2979, column: 35, scope: !3339)
!3350 = !DILocation(line: 2979, column: 3, scope: !3339)
!3351 = distinct !DISubprogram(name: "mbc_entry_eq", scope: !3, file: !3, line: 2985, type: !1437, scopeLine: 2986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3352)
!3352 = !{!3353, !3354, !3355, !3356}
!3353 = !DILocalVariable(name: "entry1", arg: 1, scope: !3351, file: !3, line: 2985, type: !1432)
!3354 = !DILocalVariable(name: "entry2", arg: 2, scope: !3351, file: !3, line: 2985, type: !1432)
!3355 = !DILocalVariable(name: "e1", scope: !3351, file: !3, line: 2987, type: !2056)
!3356 = !DILocalVariable(name: "e2", scope: !3351, file: !3, line: 2988, type: !2056)
!3357 = !DILocation(line: 0, scope: !3351)
!3358 = !DILocation(line: 2990, column: 15, scope: !3351)
!3359 = !DILocation(line: 2990, column: 27, scope: !3351)
!3360 = !DILocation(line: 2990, column: 20, scope: !3351)
!3361 = !DILocation(line: 2991, column: 4, scope: !3351)
!3362 = !DILocation(line: 2991, column: 11, scope: !3351)
!3363 = !DILocation(line: 2991, column: 22, scope: !3351)
!3364 = !DILocation(line: 2991, column: 15, scope: !3351)
!3365 = !DILocation(line: 2990, column: 3, scope: !3351)
!3366 = distinct !DISubprogram(name: "seq_cost", scope: !3, file: !3, line: 2631, type: !3367, scopeLine: 2632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3369)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{!6, !673, !136}
!3369 = !{!3370, !3371, !3372, !3373}
!3370 = !DILocalVariable(name: "seq", arg: 1, scope: !3366, file: !3, line: 2631, type: !673)
!3371 = !DILocalVariable(name: "speed", arg: 2, scope: !3366, file: !3, line: 2631, type: !136)
!3372 = !DILocalVariable(name: "cost", scope: !3366, file: !3, line: 2633, type: !6)
!3373 = !DILocalVariable(name: "set", scope: !3366, file: !3, line: 2634, type: !673)
!3374 = !DILocation(line: 0, scope: !3366)
!3375 = !DILocation(line: 2636, column: 3, scope: !3366)
!3376 = !DILocation(line: 2636, column: 3, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 2636, column: 3)
!3378 = !DILocation(line: 2638, column: 13, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 2637, column: 5)
!3380 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 2636, column: 3)
!3381 = !DILocation(line: 2639, column: 11, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3379, file: !3, line: 2639, column: 11)
!3383 = !DILocation(line: 2639, column: 11, scope: !3379)
!3384 = !DILocation(line: 2640, column: 10, scope: !3382)
!3385 = !DILocation(line: 2640, column: 2, scope: !3382)
!3386 = !DILocation(line: 0, scope: !3382)
!3387 = !DILocation(line: 2636, column: 21, scope: !3380)
!3388 = !DILocation(line: 2636, column: 3, scope: !3380)
!3389 = distinct !{!3389, !3376, !3390}
!3390 = !DILocation(line: 2643, column: 5, scope: !3377)
!3391 = !DILocation(line: 2645, column: 3, scope: !3366)
!3392 = !DILocation(line: 0, scope: !2256)
!3393 = !DILocation(line: 3046, column: 29, scope: !2256)
!3394 = !DILocation(line: 3046, column: 38, scope: !2256)
!3395 = !DILocation(line: 3046, column: 57, scope: !2256)
!3396 = !DILocation(line: 3050, column: 21, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !2256, file: !3, line: 3050, column: 7)
!3398 = !DILocation(line: 3050, column: 18, scope: !3397)
!3399 = !DILocation(line: 3050, column: 7, scope: !2256)
!3400 = !DILocation(line: 3051, column: 5, scope: !3397)
!3401 = !DILocation(line: 3053, column: 16, scope: !2256)
!3402 = !DILocation(line: 3054, column: 8, scope: !2268)
!3403 = !DILocation(line: 3054, column: 7, scope: !2256)
!3404 = !DILocation(line: 3056, column: 59, scope: !2267)
!3405 = !DILocation(line: 3056, column: 40, scope: !2267)
!3406 = !DILocation(line: 0, scope: !2267)
!3407 = !DILocation(line: 3057, column: 18, scope: !2267)
!3408 = !DILocation(line: 3061, column: 20, scope: !2267)
!3409 = !DILocation(line: 3062, column: 7, scope: !2267)
!3410 = !DILocation(line: 3063, column: 14, scope: !2267)
!3411 = !DILocation(line: 0, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !3, line: 3065, column: 2)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 3064, column: 7)
!3414 = distinct !DILexicalBlock(scope: !2267, file: !3, line: 3064, column: 7)
!3415 = !DILocation(line: 3064, column: 12, scope: !3414)
!3416 = !DILocation(line: 0, scope: !3414)
!3417 = !DILocation(line: 3064, column: 30, scope: !3413)
!3418 = !DILocation(line: 3064, column: 7, scope: !3414)
!3419 = !DILocation(line: 3066, column: 21, scope: !3412)
!3420 = !DILocation(line: 3066, column: 19, scope: !3412)
!3421 = !DILocation(line: 3067, column: 8, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3412, file: !3, line: 3067, column: 8)
!3423 = !DILocation(line: 3067, column: 8, scope: !3412)
!3424 = !DILocation(line: 3068, column: 27, scope: !3422)
!3425 = !DILocation(line: 3068, column: 6, scope: !3422)
!3426 = !DILocation(line: 3064, column: 45, scope: !3413)
!3427 = !DILocation(line: 3064, column: 7, scope: !3413)
!3428 = distinct !{!3428, !3418, !3429}
!3429 = !DILocation(line: 3069, column: 2, scope: !3414)
!3430 = !DILocation(line: 3071, column: 11, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !2267, file: !3, line: 3071, column: 11)
!3432 = !DILocation(line: 3071, column: 21, scope: !3431)
!3433 = !DILocation(line: 3071, column: 25, scope: !3431)
!3434 = !DILocation(line: 3071, column: 36, scope: !3431)
!3435 = !DILocation(line: 3071, column: 11, scope: !2267)
!3436 = !DILocation(line: 3073, column: 4, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 3072, column: 2)
!3438 = !DILocation(line: 3074, column: 9, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 3074, column: 4)
!3440 = !DILocation(line: 0, scope: !3439)
!3441 = !DILocation(line: 3074, column: 27, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 3074, column: 4)
!3443 = !DILocation(line: 3074, column: 4, scope: !3439)
!3444 = !DILocation(line: 3075, column: 10, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3442, file: !3, line: 3075, column: 10)
!3446 = !DILocation(line: 3075, column: 10, scope: !3442)
!3447 = !DILocation(line: 3076, column: 17, scope: !3445)
!3448 = !DILocation(line: 3076, column: 35, scope: !3445)
!3449 = !DILocation(line: 3076, column: 8, scope: !3445)
!3450 = !DILocation(line: 3074, column: 42, scope: !3442)
!3451 = !DILocation(line: 3074, column: 4, scope: !3442)
!3452 = distinct !{!3452, !3443, !3453}
!3453 = !DILocation(line: 3076, column: 42, scope: !3439)
!3454 = !DILocation(line: 3077, column: 13, scope: !3437)
!3455 = !DILocation(line: 3077, column: 4, scope: !3437)
!3456 = !DILocation(line: 3078, column: 13, scope: !3437)
!3457 = !DILocation(line: 3078, column: 4, scope: !3437)
!3458 = !DILocation(line: 3079, column: 2, scope: !3437)
!3459 = !DILocation(line: 3081, column: 7, scope: !2267)
!3460 = !DILocation(line: 3082, column: 5, scope: !2267)
!3461 = !DILocation(line: 3084, column: 25, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !2256, file: !3, line: 3084, column: 7)
!3463 = !DILocation(line: 3087, column: 10, scope: !2256)
!3464 = !DILocation(line: 3087, column: 3, scope: !2256)
!3465 = !DILocation(line: 3088, column: 1, scope: !2256)
!3466 = distinct !DISubprogram(name: "VEC_sbitmap_base_length", scope: !3, file: !3, line: 3038, type: !3467, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3471)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{!6, !3469}
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2063)
!3471 = !{!3472}
!3472 = !DILocalVariable(name: "vec_", arg: 1, scope: !3466, file: !3, line: 3038, type: !3469)
!3473 = !DILocation(line: 0, scope: !3466)
!3474 = !DILocation(line: 3038, column: 1, scope: !3466)
!3475 = distinct !DISubprogram(name: "VEC_sbitmap_heap_safe_grow_cleared", scope: !3, file: !3, line: 3039, type: !3476, scopeLine: 3039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3479)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{null, !3478, !659}
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!3479 = !{!3480, !3481, !3482}
!3480 = !DILocalVariable(name: "vec_", arg: 1, scope: !3475, file: !3, line: 3039, type: !3478)
!3481 = !DILocalVariable(name: "size_", arg: 2, scope: !3475, file: !3, line: 3039, type: !659)
!3482 = !DILocalVariable(name: "oldsize", scope: !3475, file: !3, line: 3039, type: !659)
!3483 = !DILocation(line: 0, scope: !3475)
!3484 = !DILocation(line: 3039, column: 1, scope: !3475)
!3485 = distinct !DISubprogram(name: "VEC_sbitmap_base_index", scope: !3, file: !3, line: 3038, type: !3486, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3488)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!2070, !3469, !6}
!3488 = !{!3489, !3490}
!3489 = !DILocalVariable(name: "vec_", arg: 1, scope: !3485, file: !3, line: 3038, type: !3469)
!3490 = !DILocalVariable(name: "ix_", arg: 2, scope: !3485, file: !3, line: 3038, type: !6)
!3491 = !DILocation(line: 0, scope: !3485)
!3492 = !DILocation(line: 3038, column: 1, scope: !3485)
!3493 = distinct !DISubprogram(name: "SET_BIT", scope: !2071, file: !2071, line: 63, type: !3494, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3496)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{null, !2070, !6}
!3496 = !{!3497, !3498, !3499}
!3497 = !DILocalVariable(name: "map", arg: 1, scope: !3493, file: !2071, line: 63, type: !2070)
!3498 = !DILocalVariable(name: "bitno", arg: 2, scope: !3493, file: !2071, line: 63, type: !6)
!3499 = !DILocalVariable(name: "oldbit", scope: !3500, file: !2071, line: 67, type: !136)
!3500 = distinct !DILexicalBlock(scope: !3501, file: !2071, line: 66, column: 5)
!3501 = distinct !DILexicalBlock(scope: !3493, file: !2071, line: 65, column: 7)
!3502 = !DILocation(line: 0, scope: !3493)
!3503 = !DILocation(line: 65, column: 12, scope: !3501)
!3504 = !DILocation(line: 65, column: 7, scope: !3501)
!3505 = !DILocation(line: 65, column: 7, scope: !3493)
!3506 = !DILocation(line: 73, column: 40, scope: !3493)
!3507 = !DILocation(line: 73, column: 29, scope: !3493)
!3508 = !DILocation(line: 72, column: 19, scope: !3493)
!3509 = !DILocation(line: 72, column: 3, scope: !3493)
!3510 = !DILocation(line: 68, column: 16, scope: !3500)
!3511 = !DILocation(line: 69, column: 12, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3500, file: !2071, line: 69, column: 11)
!3513 = !DILocation(line: 69, column: 11, scope: !3500)
!3514 = !DILocation(line: 70, column: 2, scope: !3512)
!3515 = !DILocation(line: 70, column: 41, scope: !3512)
!3516 = !DILocation(line: 73, column: 5, scope: !3493)
!3517 = !DILocation(line: 74, column: 1, scope: !3493)
!3518 = distinct !DISubprogram(name: "VEC_sbitmap_base_replace", scope: !3, file: !3, line: 3038, type: !3519, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3522)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!2070, !3521, !6, !2070}
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!3522 = !{!3523, !3524, !3525, !3526}
!3523 = !DILocalVariable(name: "vec_", arg: 1, scope: !3518, file: !3, line: 3038, type: !3521)
!3524 = !DILocalVariable(name: "ix_", arg: 2, scope: !3518, file: !3, line: 3038, type: !6)
!3525 = !DILocalVariable(name: "obj_", arg: 3, scope: !3518, file: !3, line: 3038, type: !2070)
!3526 = !DILocalVariable(name: "old_obj_", scope: !3518, file: !3, line: 3038, type: !2070)
!3527 = !DILocation(line: 0, scope: !3518)
!3528 = !DILocation(line: 3038, column: 1, scope: !3518)
!3529 = distinct !DISubprogram(name: "tree_ssa_iv_optimize", scope: !3, file: !3, line: 5859, type: !3530, scopeLine: 5860, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3532)
!3530 = !DISubroutineType(types: !3531)
!3531 = !{null}
!3532 = !{!3533, !3534, !3535}
!3533 = !DILocalVariable(name: "loop", scope: !3529, file: !3, line: 5861, type: !1305)
!3534 = !DILocalVariable(name: "data", scope: !3529, file: !3, line: 5862, type: !2185)
!3535 = !DILocalVariable(name: "li", scope: !3529, file: !3, line: 5863, type: !3536)
!3536 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_iterator", file: !140, line: 515, baseType: !3537)
!3537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !140, line: 508, size: 128, elements: !3538)
!3538 = !{!3539, !3540}
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "to_visit", scope: !3537, file: !140, line: 511, baseType: !2167, size: 64)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !3537, file: !140, line: 514, baseType: !6, size: 32, offset: 64)
!3541 = !DILocation(line: 5861, column: 3, scope: !3529)
!3542 = !DILocation(line: 5862, column: 3, scope: !3529)
!3543 = !DILocation(line: 5863, column: 3, scope: !3529)
!3544 = !DILocation(line: 0, scope: !3529)
!3545 = !DILocation(line: 5865, column: 3, scope: !3529)
!3546 = !DILocation(line: 5868, column: 3, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 5868, column: 3)
!3548 = !DILocation(line: 5868, column: 3, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 5868, column: 3)
!3550 = !DILocation(line: 5870, column: 11, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 5870, column: 11)
!3552 = distinct !DILexicalBlock(scope: !3549, file: !3, line: 5869, column: 5)
!3553 = !DILocation(line: 5870, column: 21, scope: !3551)
!3554 = !DILocation(line: 5870, column: 25, scope: !3551)
!3555 = !DILocation(line: 5870, column: 36, scope: !3551)
!3556 = !DILocation(line: 5870, column: 11, scope: !3552)
!3557 = !DILocation(line: 5871, column: 2, scope: !3551)
!3558 = !DILocation(line: 5873, column: 41, scope: !3552)
!3559 = !DILocation(line: 5873, column: 7, scope: !3552)
!3560 = distinct !{!3560, !3546, !3561}
!3561 = !DILocation(line: 5874, column: 5, scope: !3547)
!3562 = !DILocation(line: 5876, column: 3, scope: !3529)
!3563 = !DILocation(line: 5877, column: 1, scope: !3529)
!3564 = distinct !DISubprogram(name: "tree_ssa_iv_optimize_init", scope: !3, file: !3, line: 769, type: !3565, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3567)
!3565 = !DISubroutineType(types: !3566)
!3566 = !{null, !2184}
!3567 = !{!3568}
!3568 = !DILocalVariable(name: "data", arg: 1, scope: !3564, file: !3, line: 769, type: !2184)
!3569 = !DILocation(line: 0, scope: !3564)
!3570 = !DILocation(line: 771, column: 33, scope: !3564)
!3571 = !DILocation(line: 771, column: 31, scope: !3564)
!3572 = !DILocation(line: 771, column: 9, scope: !3564)
!3573 = !DILocation(line: 771, column: 27, scope: !3564)
!3574 = !DILocation(line: 772, column: 24, scope: !3564)
!3575 = !DILocation(line: 772, column: 9, scope: !3564)
!3576 = !DILocation(line: 772, column: 22, scope: !3564)
!3577 = !DILocation(line: 773, column: 20, scope: !3564)
!3578 = !DILocation(line: 773, column: 9, scope: !3564)
!3579 = !DILocation(line: 773, column: 18, scope: !3564)
!3580 = !DILocation(line: 774, column: 32, scope: !3564)
!3581 = !DILocation(line: 774, column: 9, scope: !3564)
!3582 = !DILocation(line: 774, column: 30, scope: !3564)
!3583 = !DILocation(line: 775, column: 9, scope: !3564)
!3584 = !DILocation(line: 775, column: 20, scope: !3564)
!3585 = !DILocation(line: 776, column: 9, scope: !3564)
!3586 = !DILocation(line: 776, column: 16, scope: !3564)
!3587 = !DILocation(line: 777, column: 19, scope: !3564)
!3588 = !DILocation(line: 777, column: 9, scope: !3564)
!3589 = !DILocation(line: 777, column: 17, scope: !3564)
!3590 = !DILocation(line: 778, column: 25, scope: !3564)
!3591 = !DILocation(line: 778, column: 9, scope: !3564)
!3592 = !DILocation(line: 778, column: 23, scope: !3564)
!3593 = !DILocation(line: 779, column: 23, scope: !3564)
!3594 = !DILocation(line: 779, column: 21, scope: !3564)
!3595 = !DILocation(line: 780, column: 1, scope: !3564)
!3596 = distinct !DISubprogram(name: "fel_init", scope: !140, file: !140, line: 535, type: !3597, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3601)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{null, !3599, !3600, !6}
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!3601 = !{!3602, !3603, !3604, !3605, !3606, !3607}
!3602 = !DILocalVariable(name: "li", arg: 1, scope: !3596, file: !140, line: 535, type: !3599)
!3603 = !DILocalVariable(name: "loop", arg: 2, scope: !3596, file: !140, line: 535, type: !3600)
!3604 = !DILocalVariable(name: "flags", arg: 3, scope: !3596, file: !140, line: 535, type: !6)
!3605 = !DILocalVariable(name: "aloop", scope: !3596, file: !140, line: 537, type: !1305)
!3606 = !DILocalVariable(name: "i", scope: !3596, file: !140, line: 538, type: !6)
!3607 = !DILocalVariable(name: "mn", scope: !3596, file: !140, line: 539, type: !659)
!3608 = !DILocation(line: 0, scope: !3596)
!3609 = !DILocation(line: 541, column: 7, scope: !3596)
!3610 = !DILocation(line: 541, column: 11, scope: !3596)
!3611 = !DILocation(line: 542, column: 8, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3596, file: !140, line: 542, column: 7)
!3613 = !DILocation(line: 542, column: 7, scope: !3596)
!3614 = !DILocation(line: 544, column: 11, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3612, file: !140, line: 543, column: 5)
!3616 = !DILocation(line: 544, column: 20, scope: !3615)
!3617 = !DILocation(line: 545, column: 13, scope: !3615)
!3618 = !DILocation(line: 546, column: 7, scope: !3615)
!3619 = !DILocation(line: 549, column: 18, scope: !3596)
!3620 = !DILocation(line: 549, column: 7, scope: !3596)
!3621 = !DILocation(line: 549, column: 16, scope: !3596)
!3622 = !DILocation(line: 0, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3624, file: !140, line: 560, column: 12)
!3624 = distinct !DILexicalBlock(scope: !3596, file: !140, line: 552, column: 7)
!3625 = !DILocation(line: 563, column: 7, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !140, line: 563, column: 7)
!3627 = distinct !DILexicalBlock(scope: !3623, file: !140, line: 561, column: 5)
!3628 = !DILocation(line: 564, column: 5, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3626, file: !140, line: 563, column: 7)
!3630 = !DILocation(line: 564, column: 12, scope: !3629)
!3631 = !DILocation(line: 564, column: 18, scope: !3629)
!3632 = !DILocation(line: 568, column: 7, scope: !3627)
!3633 = !DILocation(line: 565, column: 20, scope: !3629)
!3634 = !DILocation(line: 563, column: 7, scope: !3629)
!3635 = distinct !{!3635, !3625, !3636}
!3636 = !DILocation(line: 566, column: 2, scope: !3626)
!3637 = !DILocation(line: 570, column: 8, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !140, line: 570, column: 8)
!3639 = distinct !DILexicalBlock(scope: !3627, file: !140, line: 569, column: 2)
!3640 = !DILocation(line: 570, column: 15, scope: !3638)
!3641 = !DILocation(line: 570, column: 19, scope: !3638)
!3642 = !DILocation(line: 570, column: 8, scope: !3639)
!3643 = !DILocation(line: 571, column: 6, scope: !3638)
!3644 = !DILocation(line: 573, column: 15, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3639, file: !140, line: 573, column: 8)
!3646 = !DILocation(line: 573, column: 8, scope: !3645)
!3647 = !DILocation(line: 573, column: 8, scope: !3639)
!3648 = !DILocation(line: 575, column: 13, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !140, line: 575, column: 8)
!3650 = distinct !DILexicalBlock(scope: !3645, file: !140, line: 574, column: 6)
!3651 = !DILocation(line: 576, column: 6, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3649, file: !140, line: 575, column: 8)
!3653 = !DILocation(line: 576, column: 13, scope: !3652)
!3654 = !DILocation(line: 576, column: 19, scope: !3652)
!3655 = !DILocation(line: 575, column: 8, scope: !3649)
!3656 = !DILocation(line: 577, column: 21, scope: !3652)
!3657 = !DILocation(line: 575, column: 8, scope: !3652)
!3658 = distinct !{!3658, !3655, !3659}
!3659 = !DILocation(line: 578, column: 3, scope: !3649)
!3660 = !DILocation(line: 580, column: 14, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3645, file: !140, line: 580, column: 13)
!3662 = !DILocation(line: 580, column: 13, scope: !3645)
!3663 = !DILocation(line: 583, column: 14, scope: !3661)
!3664 = distinct !{!3664, !3632, !3665}
!3665 = !DILocation(line: 584, column: 2, scope: !3627)
!3666 = !DILocation(line: 608, column: 3, scope: !3596)
!3667 = !DILocation(line: 609, column: 1, scope: !3596)
!3668 = distinct !DISubprogram(name: "tree_ssa_iv_optimize_loop", scope: !3, file: !3, line: 5780, type: !3669, scopeLine: 5781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3671)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!136, !2184, !1305}
!3671 = !{!3672, !3673, !3674, !3675, !3676, !3677, !3679}
!3672 = !DILocalVariable(name: "data", arg: 1, scope: !3668, file: !3, line: 5780, type: !2184)
!3673 = !DILocalVariable(name: "loop", arg: 2, scope: !3668, file: !3, line: 5780, type: !1305)
!3674 = !DILocalVariable(name: "changed", scope: !3668, file: !3, line: 5782, type: !136)
!3675 = !DILocalVariable(name: "iv_ca", scope: !3668, file: !3, line: 5783, type: !2230)
!3676 = !DILocalVariable(name: "exit", scope: !3668, file: !3, line: 5784, type: !1070)
!3677 = !DILocalVariable(name: "body", scope: !3668, file: !3, line: 5785, type: !3678)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!3679 = !DILabel(scope: !3668, name: "finish", file: !3, line: 5850)
!3680 = !DILocation(line: 0, scope: !3668)
!3681 = !DILocation(line: 5783, column: 3, scope: !3668)
!3682 = !DILocation(line: 5787, column: 3, scope: !3668)
!3683 = !DILocation(line: 5788, column: 9, scope: !3668)
!3684 = !DILocation(line: 5788, column: 22, scope: !3668)
!3685 = !DILocation(line: 5789, column: 17, scope: !3668)
!3686 = !DILocation(line: 5789, column: 9, scope: !3668)
!3687 = !DILocation(line: 5789, column: 15, scope: !3668)
!3688 = !DILocation(line: 5791, column: 7, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 5791, column: 7)
!3690 = !DILocation(line: 5791, column: 17, scope: !3689)
!3691 = !DILocation(line: 5791, column: 21, scope: !3689)
!3692 = !DILocation(line: 5791, column: 32, scope: !3689)
!3693 = !DILocation(line: 5791, column: 7, scope: !3668)
!3694 = !DILocation(line: 5793, column: 57, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3689, file: !3, line: 5792, column: 5)
!3696 = !DILocation(line: 5793, column: 7, scope: !3695)
!3697 = !DILocation(line: 5795, column: 14, scope: !3695)
!3698 = !DILocation(line: 5796, column: 11, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 5796, column: 11)
!3700 = !DILocation(line: 5796, column: 11, scope: !3695)
!3701 = !DILocation(line: 5798, column: 13, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 5797, column: 2)
!3703 = !DILocation(line: 5799, column: 12, scope: !3702)
!3704 = !DILocation(line: 5799, column: 17, scope: !3702)
!3705 = !DILocation(line: 5799, column: 30, scope: !3702)
!3706 = !DILocation(line: 5799, column: 36, scope: !3702)
!3707 = !DILocation(line: 5798, column: 4, scope: !3702)
!3708 = !DILocation(line: 5800, column: 23, scope: !3702)
!3709 = !DILocation(line: 5800, column: 51, scope: !3702)
!3710 = !DILocation(line: 5800, column: 34, scope: !3702)
!3711 = !DILocation(line: 5800, column: 4, scope: !3702)
!3712 = !DILocation(line: 5801, column: 13, scope: !3702)
!3713 = !DILocation(line: 5801, column: 4, scope: !3702)
!3714 = !DILocation(line: 5802, column: 2, scope: !3702)
!3715 = !DILocation(line: 5804, column: 16, scope: !3695)
!3716 = !DILocation(line: 5804, column: 7, scope: !3695)
!3717 = !DILocation(line: 5805, column: 5, scope: !3695)
!3718 = !DILocation(line: 5807, column: 10, scope: !3668)
!3719 = !DILocation(line: 5808, column: 52, scope: !3668)
!3720 = !DILocation(line: 5808, column: 3, scope: !3668)
!3721 = !DILocation(line: 5809, column: 9, scope: !3668)
!3722 = !DILocation(line: 5809, column: 3, scope: !3668)
!3723 = !DILocation(line: 5813, column: 8, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 5813, column: 7)
!3725 = !DILocation(line: 5813, column: 7, scope: !3668)
!3726 = !DILocation(line: 5817, column: 3, scope: !3668)
!3727 = !DILocation(line: 5818, column: 7, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 5818, column: 7)
!3729 = !DILocation(line: 5818, column: 26, scope: !3728)
!3730 = !DILocation(line: 5818, column: 24, scope: !3728)
!3731 = !DILocation(line: 5818, column: 7, scope: !3668)
!3732 = !DILocation(line: 5822, column: 3, scope: !3668)
!3733 = !DILocation(line: 5825, column: 3, scope: !3668)
!3734 = !DILocation(line: 5826, column: 3, scope: !3668)
!3735 = !DILocation(line: 5827, column: 3, scope: !3668)
!3736 = !DILocation(line: 5830, column: 11, scope: !3668)
!3737 = !DILocation(line: 5830, column: 9, scope: !3668)
!3738 = !DILocation(line: 5831, column: 8, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 5831, column: 7)
!3740 = !DILocation(line: 5831, column: 7, scope: !3668)
!3741 = !DILocation(line: 5836, column: 3, scope: !3668)
!3742 = !DILocation(line: 5837, column: 3, scope: !3668)
!3743 = !DILocation(line: 5840, column: 3, scope: !3668)
!3744 = !DILocation(line: 5843, column: 3, scope: !3668)
!3745 = !DILocation(line: 5848, column: 3, scope: !3668)
!3746 = !DILocation(line: 5850, column: 1, scope: !3668)
!3747 = !DILocation(line: 5851, column: 3, scope: !3668)
!3748 = !DILocation(line: 5854, column: 1, scope: !3668)
!3749 = !DILocation(line: 5853, column: 3, scope: !3668)
!3750 = distinct !DISubprogram(name: "fel_next", scope: !140, file: !140, line: 518, type: !3751, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3753)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{null, !3599, !3600}
!3753 = !{!3754, !3755, !3756}
!3754 = !DILocalVariable(name: "li", arg: 1, scope: !3750, file: !140, line: 518, type: !3599)
!3755 = !DILocalVariable(name: "loop", arg: 2, scope: !3750, file: !140, line: 518, type: !3600)
!3756 = !DILocalVariable(name: "anum", scope: !3750, file: !140, line: 520, type: !659)
!3757 = !DILocation(line: 0, scope: !3750)
!3758 = !DILocation(line: 520, column: 3, scope: !3750)
!3759 = !DILocation(line: 522, column: 3, scope: !3750)
!3760 = !DILocation(line: 522, column: 10, scope: !3750)
!3761 = !DILocation(line: 524, column: 14, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3750, file: !140, line: 523, column: 5)
!3763 = !DILocation(line: 525, column: 25, scope: !3762)
!3764 = !DILocation(line: 525, column: 15, scope: !3762)
!3765 = !DILocation(line: 525, column: 13, scope: !3762)
!3766 = !DILocation(line: 526, column: 11, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3762, file: !140, line: 526, column: 11)
!3768 = !DILocation(line: 526, column: 11, scope: !3762)
!3769 = distinct !{!3769, !3759, !3770}
!3770 = !DILocation(line: 528, column: 5, scope: !3750)
!3771 = !DILocation(line: 530, column: 3, scope: !3750)
!3772 = !DILocation(line: 531, column: 9, scope: !3750)
!3773 = !DILocation(line: 532, column: 1, scope: !3750)
!3774 = distinct !DISubprogram(name: "tree_ssa_iv_optimize_finalize", scope: !3, file: !3, line: 5765, type: !3565, scopeLine: 5766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3775)
!3775 = !{!3776}
!3776 = !DILocalVariable(name: "data", arg: 1, scope: !3774, file: !3, line: 5765, type: !2184)
!3777 = !DILocation(line: 0, scope: !3774)
!3778 = !DILocation(line: 5767, column: 3, scope: !3774)
!3779 = !DILocation(line: 5768, column: 15, scope: !3774)
!3780 = !DILocation(line: 5768, column: 3, scope: !3774)
!3781 = !DILocation(line: 5769, column: 3, scope: !3774)
!3782 = !DILocation(line: 5770, column: 3, scope: !3774)
!3783 = !DILocation(line: 5772, column: 3, scope: !3774)
!3784 = !DILocation(line: 5773, column: 3, scope: !3774)
!3785 = !DILocation(line: 5774, column: 3, scope: !3774)
!3786 = !DILocation(line: 5775, column: 1, scope: !3774)
!3787 = distinct !DISubprogram(name: "VEC_iv_use_p_base_length", scope: !3, file: !3, line: 215, type: !3788, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3792)
!3788 = !DISubroutineType(types: !3789)
!3789 = !{!6, !3790}
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2103)
!3792 = !{!3793}
!3793 = !DILocalVariable(name: "vec_", arg: 1, scope: !3787, file: !3, line: 215, type: !3790)
!3794 = !DILocation(line: 0, scope: !3787)
!3795 = !DILocation(line: 215, column: 1, scope: !3787)
!3796 = distinct !DISubprogram(name: "VEC_iv_use_p_base_index", scope: !3, file: !3, line: 215, type: !3797, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3799)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!2110, !3790, !6}
!3799 = !{!3800, !3801}
!3800 = !DILocalVariable(name: "vec_", arg: 1, scope: !3796, file: !3, line: 215, type: !3790)
!3801 = !DILocalVariable(name: "ix_", arg: 2, scope: !3796, file: !3, line: 215, type: !6)
!3802 = !DILocation(line: 0, scope: !3796)
!3803 = !DILocation(line: 215, column: 1, scope: !3796)
!3804 = distinct !DISubprogram(name: "abnormal_ssa_name_p", scope: !3, file: !3, line: 632, type: !3067, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3805)
!3805 = !{!3806}
!3806 = !DILocalVariable(name: "exp", arg: 1, scope: !3804, file: !3, line: 632, type: !788)
!3807 = !DILocation(line: 0, scope: !3804)
!3808 = !DILocation(line: 634, column: 8, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 634, column: 7)
!3810 = !DILocation(line: 634, column: 7, scope: !3804)
!3811 = !DILocation(line: 637, column: 7, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 637, column: 7)
!3813 = !DILocation(line: 637, column: 23, scope: !3812)
!3814 = !DILocation(line: 637, column: 7, scope: !3804)
!3815 = !DILocation(line: 640, column: 10, scope: !3804)
!3816 = !DILocation(line: 640, column: 3, scope: !3804)
!3817 = !DILocation(line: 641, column: 1, scope: !3804)
!3818 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !140, file: !140, line: 85, type: !3819, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3823)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!6, !3821}
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3822, size: 64)
!3822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1325)
!3823 = !{!3824}
!3824 = !DILocalVariable(name: "vec_", arg: 1, scope: !3818, file: !140, line: 85, type: !3821)
!3825 = !DILocation(line: 0, scope: !3818)
!3826 = !DILocation(line: 85, column: 1, scope: !3818)
!3827 = distinct !DISubprogram(name: "gimple_has_ops", scope: !421, file: !421, line: 1274, type: !3828, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3830)
!3828 = !DISubroutineType(types: !3829)
!3829 = !{!136, !3194}
!3830 = !{!3831}
!3831 = !DILocalVariable(name: "g", arg: 1, scope: !3827, file: !421, line: 1274, type: !3194)
!3832 = !DILocation(line: 0, scope: !3827)
!3833 = !DILocation(line: 1276, column: 10, scope: !3827)
!3834 = !DILocation(line: 1276, column: 26, scope: !3827)
!3835 = !DILocation(line: 1276, column: 41, scope: !3827)
!3836 = !DILocation(line: 1276, column: 44, scope: !3827)
!3837 = !DILocation(line: 1276, column: 60, scope: !3827)
!3838 = !DILocation(line: 1276, column: 3, scope: !3827)
!3839 = distinct !DISubprogram(name: "gimple_ops", scope: !421, file: !421, line: 1614, type: !3840, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3842)
!3840 = !DISubroutineType(types: !3841)
!3841 = !{!1124, !1090}
!3842 = !{!3843, !3844}
!3843 = !DILocalVariable(name: "gs", arg: 1, scope: !3839, file: !421, line: 1614, type: !1090)
!3844 = !DILocalVariable(name: "off", scope: !3839, file: !421, line: 1616, type: !1235)
!3845 = !DILocation(line: 0, scope: !3839)
!3846 = !DILocation(line: 1621, column: 28, scope: !3839)
!3847 = !DILocation(line: 1621, column: 9, scope: !3839)
!3848 = !DILocation(line: 1622, column: 3, scope: !3839)
!3849 = !DILocation(line: 1624, column: 20, scope: !3839)
!3850 = !DILocation(line: 1624, column: 32, scope: !3839)
!3851 = !DILocation(line: 1624, column: 10, scope: !3839)
!3852 = !DILocation(line: 1624, column: 3, scope: !3839)
!3853 = distinct !DISubprogram(name: "gimple_code", scope: !421, file: !421, line: 1052, type: !3854, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3856)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{!420, !3194}
!3856 = !{!3857}
!3857 = !DILocalVariable(name: "g", arg: 1, scope: !3853, file: !421, line: 1052, type: !3194)
!3858 = !DILocation(line: 0, scope: !3853)
!3859 = !DILocation(line: 1054, column: 20, scope: !3853)
!3860 = !DILocation(line: 1054, column: 3, scope: !3853)
!3861 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !421, file: !421, line: 1073, type: !3862, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3864)
!3862 = !DISubroutineType(types: !3863)
!3863 = !{!459, !1090}
!3864 = !{!3865}
!3865 = !DILocalVariable(name: "gs", arg: 1, scope: !3861, file: !421, line: 1073, type: !1090)
!3866 = !DILocation(line: 0, scope: !3861)
!3867 = !DILocation(line: 1075, column: 24, scope: !3861)
!3868 = !DILocation(line: 1075, column: 10, scope: !3861)
!3869 = !DILocation(line: 1075, column: 3, scope: !3861)
!3870 = distinct !DISubprogram(name: "gss_for_code", scope: !421, file: !421, line: 1061, type: !3871, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3873)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!459, !420}
!3873 = !{!3874}
!3874 = !DILocalVariable(name: "code", arg: 1, scope: !3870, file: !421, line: 1061, type: !420)
!3875 = !DILocation(line: 0, scope: !3870)
!3876 = !DILocation(line: 1066, column: 10, scope: !3870)
!3877 = !DILocation(line: 1066, column: 3, scope: !3870)
!3878 = distinct !DISubprogram(name: "VEC_sbitmap_heap_safe_grow", scope: !3, file: !3, line: 3039, type: !3476, scopeLine: 3039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3879)
!3879 = !{!3880, !3881}
!3880 = !DILocalVariable(name: "vec_", arg: 1, scope: !3878, file: !3, line: 3039, type: !3478)
!3881 = !DILocalVariable(name: "size_", arg: 2, scope: !3878, file: !3, line: 3039, type: !659)
!3882 = !DILocation(line: 0, scope: !3878)
!3883 = !DILocation(line: 3039, column: 1, scope: !3878)
!3884 = distinct !DISubprogram(name: "VEC_sbitmap_base_address", scope: !3, file: !3, line: 3038, type: !3885, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3888)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{!3887, !3521}
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!3888 = !{!3889}
!3889 = !DILocalVariable(name: "vec_", arg: 1, scope: !3884, file: !3, line: 3038, type: !3521)
!3890 = !DILocation(line: 0, scope: !3884)
!3891 = !DILocation(line: 3038, column: 1, scope: !3884)
!3892 = distinct !DISubprogram(name: "VEC_sbitmap_heap_reserve_exact", scope: !3, file: !3, line: 3039, type: !3893, scopeLine: 3039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3895)
!3893 = !DISubroutineType(types: !3894)
!3894 = !{!659, !3478, !659}
!3895 = !{!3896, !3897, !3898}
!3896 = !DILocalVariable(name: "vec_", arg: 1, scope: !3892, file: !3, line: 3039, type: !3478)
!3897 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3892, file: !3, line: 3039, type: !659)
!3898 = !DILocalVariable(name: "extend", scope: !3892, file: !3, line: 3039, type: !659)
!3899 = !DILocation(line: 0, scope: !3892)
!3900 = !DILocation(line: 3039, column: 1, scope: !3892)
!3901 = !DILocation(line: 3039, column: 1, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3892, file: !3, line: 3039, column: 1)
!3903 = distinct !DISubprogram(name: "VEC_sbitmap_base_space", scope: !3, file: !3, line: 3038, type: !3904, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3906)
!3904 = !DISubroutineType(types: !3905)
!3905 = !{!659, !3521, !659}
!3906 = !{!3907, !3908}
!3907 = !DILocalVariable(name: "vec_", arg: 1, scope: !3903, file: !3, line: 3038, type: !3521)
!3908 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3903, file: !3, line: 3038, type: !659)
!3909 = !DILocation(line: 0, scope: !3903)
!3910 = !DILocation(line: 3038, column: 1, scope: !3903)
!3911 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !160, file: !160, line: 182, type: !3912, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3916)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{!6, !3914}
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!3916 = !{!3917}
!3917 = !DILocalVariable(name: "vec_", arg: 1, scope: !3911, file: !160, line: 182, type: !3914)
!3918 = !DILocation(line: 0, scope: !3911)
!3919 = !DILocation(line: 182, column: 1, scope: !3911)
!3920 = distinct !DISubprogram(name: "VEC_iv_use_p_heap_alloc", scope: !3, file: !3, line: 216, type: !3921, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3923)
!3921 = !DISubroutineType(types: !3922)
!3922 = !{!2098, !659}
!3923 = !{!3924}
!3924 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3920, file: !3, line: 216, type: !659)
!3925 = !DILocation(line: 0, scope: !3920)
!3926 = !DILocation(line: 216, column: 1, scope: !3920)
!3927 = distinct !DISubprogram(name: "VEC_iv_cand_p_heap_alloc", scope: !3, file: !3, line: 220, type: !3928, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3930)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{!2149, !659}
!3930 = !{!3931}
!3931 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3927, file: !3, line: 220, type: !659)
!3932 = !DILocation(line: 0, scope: !3927)
!3933 = !DILocation(line: 220, column: 1, scope: !3927)
!3934 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !160, file: !160, line: 184, type: !3935, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3937)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!2162, !659}
!3937 = !{!3938}
!3938 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3934, file: !160, line: 184, type: !659)
!3939 = !DILocation(line: 0, scope: !3934)
!3940 = !DILocation(line: 184, column: 1, scope: !3934)
!3941 = distinct !DISubprogram(name: "VEC_int_heap_alloc", scope: !2169, file: !2169, line: 32, type: !3942, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3944)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!2167, !659}
!3944 = !{!3945}
!3945 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3941, file: !2169, line: 32, type: !659)
!3946 = !DILocation(line: 0, scope: !3941)
!3947 = !DILocation(line: 32, column: 1, scope: !3941)
!3948 = distinct !DISubprogram(name: "number_of_loops", scope: !140, file: !140, line: 459, type: !3949, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !2441)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{!6}
!3951 = !DILocation(line: 461, column: 8, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3948, file: !140, line: 461, column: 7)
!3953 = !DILocation(line: 461, column: 7, scope: !3948)
!3954 = !DILocation(line: 464, column: 10, scope: !3948)
!3955 = !DILocation(line: 464, column: 3, scope: !3948)
!3956 = !DILocation(line: 0, scope: !3948)
!3957 = !DILocation(line: 465, column: 1, scope: !3948)
!3958 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !140, file: !140, line: 85, type: !3959, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3961)
!3959 = !DISubroutineType(types: !3960)
!3960 = !{!659, !3821, !6, !3600}
!3961 = !{!3962, !3963, !3964}
!3962 = !DILocalVariable(name: "vec_", arg: 1, scope: !3958, file: !140, line: 85, type: !3821)
!3963 = !DILocalVariable(name: "ix_", arg: 2, scope: !3958, file: !140, line: 85, type: !6)
!3964 = !DILocalVariable(name: "ptr", arg: 3, scope: !3958, file: !140, line: 85, type: !3600)
!3965 = !DILocation(line: 0, scope: !3958)
!3966 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !2169, file: !2169, line: 31, type: !3967, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3970)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!2229, !3969, !659}
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!3970 = !{!3971, !3972, !3973}
!3971 = !DILocalVariable(name: "vec_", arg: 1, scope: !3966, file: !2169, line: 31, type: !3969)
!3972 = !DILocalVariable(name: "obj_", arg: 2, scope: !3966, file: !2169, line: 31, type: !659)
!3973 = !DILocalVariable(name: "slot_", scope: !3966, file: !2169, line: 31, type: !2229)
!3974 = !DILocation(line: 0, scope: !3966)
!3975 = !DILocation(line: 31, column: 1, scope: !3966)
!3976 = distinct !DISubprogram(name: "loop_outer", scope: !140, file: !140, line: 434, type: !3977, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3979)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!1305, !3184}
!3979 = !{!3980, !3981}
!3980 = !DILocalVariable(name: "loop", arg: 1, scope: !3976, file: !140, line: 434, type: !3184)
!3981 = !DILocalVariable(name: "n", scope: !3976, file: !140, line: 436, type: !6)
!3982 = !DILocation(line: 0, scope: !3976)
!3983 = !DILocation(line: 436, column: 16, scope: !3976)
!3984 = !DILocation(line: 438, column: 9, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3976, file: !140, line: 438, column: 7)
!3986 = !DILocation(line: 438, column: 7, scope: !3976)
!3987 = !DILocation(line: 441, column: 10, scope: !3976)
!3988 = !DILocation(line: 441, column: 3, scope: !3976)
!3989 = !DILocation(line: 442, column: 1, scope: !3976)
!3990 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !140, file: !140, line: 85, type: !3991, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !3993)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!1332, !3821, !6}
!3993 = !{!3994, !3995}
!3994 = !DILocalVariable(name: "vec_", arg: 1, scope: !3990, file: !140, line: 85, type: !3821)
!3995 = !DILocalVariable(name: "ix_", arg: 2, scope: !3990, file: !140, line: 85, type: !6)
!3996 = !DILocation(line: 0, scope: !3990)
!3997 = !DILocation(line: 85, column: 1, scope: !3990)
!3998 = distinct !DISubprogram(name: "find_induction_variables", scope: !3, file: !3, line: 1061, type: !3999, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4001)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{!136, !2184}
!4001 = !{!4002, !4003, !4004, !4012}
!4002 = !DILocalVariable(name: "data", arg: 1, scope: !3998, file: !3, line: 1061, type: !2184)
!4003 = !DILocalVariable(name: "i", scope: !3998, file: !3, line: 1063, type: !6)
!4004 = !DILocalVariable(name: "bi", scope: !3998, file: !3, line: 1064, type: !4005)
!4005 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !729, line: 218, baseType: !4006)
!4006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !729, line: 203, size: 256, elements: !4007)
!4007 = !{!4008, !4009, !4010, !4011}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !4006, file: !729, line: 206, baseType: !732, size: 64)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !4006, file: !729, line: 209, baseType: !732, size: 64, offset: 64)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !4006, file: !729, line: 212, baseType: !6, size: 32, offset: 128)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !4006, file: !729, line: 217, baseType: !742, size: 64, offset: 192)
!4012 = !DILocalVariable(name: "niter", scope: !4013, file: !3, line: 1074, type: !788)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1073, column: 5)
!4014 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 1072, column: 7)
!4015 = !DILocation(line: 0, scope: !3998)
!4016 = !DILocation(line: 1063, column: 3, scope: !3998)
!4017 = !DILocation(line: 1064, column: 3, scope: !3998)
!4018 = !DILocation(line: 1066, column: 8, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 1066, column: 7)
!4020 = !DILocation(line: 1066, column: 7, scope: !3998)
!4021 = !DILocation(line: 1069, column: 3, scope: !3998)
!4022 = !DILocation(line: 1070, column: 3, scope: !3998)
!4023 = !DILocation(line: 1072, column: 7, scope: !4014)
!4024 = !DILocation(line: 1072, column: 17, scope: !4014)
!4025 = !DILocation(line: 1072, column: 21, scope: !4014)
!4026 = !DILocation(line: 1072, column: 32, scope: !4014)
!4027 = !DILocation(line: 1072, column: 7, scope: !3998)
!4028 = !DILocation(line: 1074, column: 20, scope: !4013)
!4029 = !DILocation(line: 0, scope: !4013)
!4030 = !DILocation(line: 1076, column: 11, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 1076, column: 11)
!4032 = !DILocation(line: 1076, column: 11, scope: !4013)
!4033 = !DILocation(line: 1078, column: 13, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 1077, column: 2)
!4035 = !DILocation(line: 1078, column: 4, scope: !4034)
!4036 = !DILocation(line: 1079, column: 24, scope: !4034)
!4037 = !DILocation(line: 1079, column: 4, scope: !4034)
!4038 = !DILocation(line: 1080, column: 13, scope: !4034)
!4039 = !DILocation(line: 1080, column: 4, scope: !4034)
!4040 = !DILocation(line: 1081, column: 6, scope: !4034)
!4041 = !DILocation(line: 1083, column: 16, scope: !4013)
!4042 = !DILocation(line: 1083, column: 7, scope: !4013)
!4043 = !DILocation(line: 1085, column: 7, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 1085, column: 7)
!4045 = !DILocation(line: 1085, column: 7, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1085, column: 7)
!4047 = !DILocation(line: 1087, column: 24, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1087, column: 8)
!4049 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 1086, column: 2)
!4050 = !DILocation(line: 1087, column: 8, scope: !4048)
!4051 = !DILocation(line: 1087, column: 28, scope: !4048)
!4052 = !DILocation(line: 1087, column: 8, scope: !4049)
!4053 = !DILocation(line: 1088, column: 15, scope: !4048)
!4054 = !DILocation(line: 1088, column: 42, scope: !4048)
!4055 = !DILocation(line: 1088, column: 26, scope: !4048)
!4056 = !DILocation(line: 1088, column: 46, scope: !4048)
!4057 = !DILocation(line: 1088, column: 6, scope: !4048)
!4058 = distinct !{!4058, !4043, !4059}
!4059 = !DILocation(line: 1089, column: 2, scope: !4044)
!4060 = !DILocation(line: 1093, column: 1, scope: !3998)
!4061 = distinct !DISubprogram(name: "find_interesting_uses", scope: !3, file: !3, line: 1834, type: !3565, scopeLine: 1835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4062)
!4062 = !{!4063, !4064, !4065, !4072, !4073, !4074, !4075, !4076, !4086}
!4063 = !DILocalVariable(name: "data", arg: 1, scope: !4061, file: !3, line: 1834, type: !2184)
!4064 = !DILocalVariable(name: "bb", scope: !4061, file: !3, line: 1836, type: !1053)
!4065 = !DILocalVariable(name: "bsi", scope: !4061, file: !3, line: 1837, type: !4066)
!4066 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !421, line: 265, baseType: !4067)
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !421, line: 254, size: 192, elements: !4068)
!4068 = !{!4069, !4070, !4071}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4067, file: !421, line: 257, baseType: !1085, size: 64)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !4067, file: !421, line: 263, baseType: !1080, size: 64, offset: 64)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !4067, file: !421, line: 264, baseType: !1053, size: 64, offset: 128)
!4072 = !DILocalVariable(name: "body", scope: !4061, file: !3, line: 1838, type: !3678)
!4073 = !DILocalVariable(name: "i", scope: !4061, file: !3, line: 1839, type: !6)
!4074 = !DILocalVariable(name: "info", scope: !4061, file: !3, line: 1840, type: !2080)
!4075 = !DILocalVariable(name: "e", scope: !4061, file: !3, line: 1841, type: !1070)
!4076 = !DILocalVariable(name: "ei", scope: !4077, file: !3, line: 1848, type: !4080)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !3, line: 1847, column: 5)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 1846, column: 3)
!4079 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 1846, column: 3)
!4080 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !149, line: 682, baseType: !4081)
!4081 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !149, line: 679, size: 128, elements: !4082)
!4082 = !{!4083, !4084}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4081, file: !149, line: 680, baseType: !6, size: 32)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !4081, file: !149, line: 681, baseType: !4085, size: 64, offset: 64)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!4086 = !DILocalVariable(name: "bi", scope: !4087, file: !3, line: 1865, type: !4005)
!4087 = distinct !DILexicalBlock(scope: !4088, file: !3, line: 1864, column: 5)
!4088 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 1863, column: 7)
!4089 = !DILocation(line: 0, scope: !4061)
!4090 = !DILocation(line: 1837, column: 3, scope: !4061)
!4091 = !DILocation(line: 1838, column: 44, scope: !4061)
!4092 = !DILocation(line: 1838, column: 23, scope: !4061)
!4093 = !DILocation(line: 1839, column: 3, scope: !4061)
!4094 = !DILocation(line: 1841, column: 3, scope: !4061)
!4095 = !DILocation(line: 1843, column: 7, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 1843, column: 7)
!4097 = !DILocation(line: 1843, column: 17, scope: !4096)
!4098 = !DILocation(line: 1843, column: 21, scope: !4096)
!4099 = !DILocation(line: 1843, column: 32, scope: !4096)
!4100 = !DILocation(line: 1843, column: 7, scope: !4061)
!4101 = !DILocation(line: 1844, column: 5, scope: !4096)
!4102 = !DILocation(line: 0, scope: !4077)
!4103 = !DILocation(line: 0, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1851, column: 7)
!4105 = !DILocation(line: 0, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4104, file: !3, line: 1851, column: 7)
!4107 = !DILocation(line: 0, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1856, column: 7)
!4109 = !DILocation(line: 0, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1858, column: 7)
!4111 = !DILocation(line: 1846, column: 8, scope: !4079)
!4112 = !DILocation(line: 0, scope: !4079)
!4113 = !DILocation(line: 1846, column: 25, scope: !4078)
!4114 = !DILocation(line: 1846, column: 39, scope: !4078)
!4115 = !DILocation(line: 1846, column: 17, scope: !4078)
!4116 = !DILocation(line: 1846, column: 3, scope: !4079)
!4117 = !DILocation(line: 1848, column: 7, scope: !4077)
!4118 = !DILocation(line: 1849, column: 12, scope: !4077)
!4119 = !DILocation(line: 1851, column: 7, scope: !4104)
!4120 = !DILocation(line: 1851, column: 7, scope: !4106)
!4121 = !DILocation(line: 1852, column: 6, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4106, file: !3, line: 1852, column: 6)
!4123 = !DILocation(line: 1852, column: 9, scope: !4122)
!4124 = !DILocation(line: 1852, column: 17, scope: !4122)
!4125 = !DILocation(line: 1852, column: 14, scope: !4122)
!4126 = !DILocation(line: 1853, column: 6, scope: !4122)
!4127 = !DILocation(line: 1853, column: 39, scope: !4122)
!4128 = !DILocation(line: 1853, column: 10, scope: !4122)
!4129 = !DILocation(line: 1852, column: 6, scope: !4106)
!4130 = !DILocation(line: 1854, column: 41, scope: !4122)
!4131 = !DILocation(line: 1854, column: 4, scope: !4122)
!4132 = distinct !{!4132, !4119, !4133}
!4133 = !DILocation(line: 1854, column: 42, scope: !4104)
!4134 = !DILocation(line: 1856, column: 18, scope: !4108)
!4135 = !DILocation(line: 1856, column: 12, scope: !4108)
!4136 = !DILocation(line: 1856, column: 40, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4108, file: !3, line: 1856, column: 7)
!4138 = !DILocation(line: 1856, column: 39, scope: !4137)
!4139 = !DILocation(line: 1856, column: 7, scope: !4108)
!4140 = !DILocation(line: 1857, column: 36, scope: !4137)
!4141 = !DILocation(line: 1857, column: 2, scope: !4137)
!4142 = !DILocation(line: 1856, column: 57, scope: !4137)
!4143 = !DILocation(line: 1856, column: 7, scope: !4137)
!4144 = distinct !{!4144, !4139, !4145}
!4145 = !DILocation(line: 1857, column: 50, scope: !4108)
!4146 = !DILocation(line: 1858, column: 18, scope: !4110)
!4147 = !DILocation(line: 1858, column: 12, scope: !4110)
!4148 = !DILocation(line: 1858, column: 38, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 1858, column: 7)
!4150 = !DILocation(line: 1858, column: 37, scope: !4149)
!4151 = !DILocation(line: 1858, column: 7, scope: !4110)
!4152 = !DILocation(line: 1859, column: 24, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 1859, column: 6)
!4154 = !DILocation(line: 1859, column: 7, scope: !4153)
!4155 = !DILocation(line: 1859, column: 6, scope: !4149)
!4156 = !DILocation(line: 1860, column: 38, scope: !4153)
!4157 = !DILocation(line: 1860, column: 4, scope: !4153)
!4158 = !DILocation(line: 1858, column: 55, scope: !4149)
!4159 = !DILocation(line: 1858, column: 7, scope: !4149)
!4160 = distinct !{!4160, !4151, !4161}
!4161 = !DILocation(line: 1860, column: 52, scope: !4110)
!4162 = !DILocation(line: 1861, column: 5, scope: !4078)
!4163 = !DILocation(line: 1846, column: 51, scope: !4078)
!4164 = !DILocation(line: 1846, column: 3, scope: !4078)
!4165 = distinct !{!4165, !4116, !4166}
!4166 = !DILocation(line: 1861, column: 5, scope: !4079)
!4167 = !DILocation(line: 1863, column: 7, scope: !4088)
!4168 = !DILocation(line: 1863, column: 17, scope: !4088)
!4169 = !DILocation(line: 1863, column: 21, scope: !4088)
!4170 = !DILocation(line: 1863, column: 32, scope: !4088)
!4171 = !DILocation(line: 1863, column: 7, scope: !4061)
!4172 = !DILocation(line: 1865, column: 7, scope: !4087)
!4173 = !DILocation(line: 1867, column: 7, scope: !4087)
!4174 = !DILocation(line: 1869, column: 7, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4087, file: !3, line: 1869, column: 7)
!4176 = !DILocation(line: 0, scope: !4087)
!4177 = !DILocation(line: 1869, column: 7, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4175, file: !3, line: 1869, column: 7)
!4179 = !DILocation(line: 1871, column: 27, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4178, file: !3, line: 1870, column: 2)
!4181 = !DILocation(line: 1871, column: 11, scope: !4180)
!4182 = !DILocation(line: 1872, column: 14, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 1872, column: 8)
!4184 = !DILocation(line: 1872, column: 8, scope: !4183)
!4185 = !DILocation(line: 1872, column: 8, scope: !4180)
!4186 = !DILocation(line: 1874, column: 17, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 1873, column: 6)
!4188 = !DILocation(line: 1874, column: 8, scope: !4187)
!4189 = !DILocation(line: 1875, column: 28, scope: !4187)
!4190 = !DILocation(line: 1875, column: 45, scope: !4187)
!4191 = !DILocation(line: 1875, column: 8, scope: !4187)
!4192 = !DILocation(line: 1876, column: 17, scope: !4187)
!4193 = !DILocation(line: 1877, column: 16, scope: !4187)
!4194 = !DILocation(line: 1877, column: 30, scope: !4187)
!4195 = !DILocation(line: 1877, column: 24, scope: !4187)
!4196 = !DILocation(line: 1876, column: 8, scope: !4187)
!4197 = !DILocation(line: 1878, column: 6, scope: !4187)
!4198 = distinct !{!4198, !4174, !4199}
!4199 = !DILocation(line: 1879, column: 2, scope: !4175)
!4200 = !DILocation(line: 1881, column: 16, scope: !4087)
!4201 = !DILocation(line: 1881, column: 7, scope: !4087)
!4202 = !DILocation(line: 1882, column: 5, scope: !4088)
!4203 = !DILocation(line: 1882, column: 5, scope: !4087)
!4204 = !DILocation(line: 1884, column: 9, scope: !4061)
!4205 = !DILocation(line: 1884, column: 3, scope: !4061)
!4206 = !DILocation(line: 1885, column: 1, scope: !4061)
!4207 = distinct !DISubprogram(name: "find_iv_candidates", scope: !3, file: !3, line: 4244, type: !3565, scopeLine: 4245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4208)
!4208 = !{!4209}
!4209 = !DILocalVariable(name: "data", arg: 1, scope: !4207, file: !3, line: 4244, type: !2184)
!4210 = !DILocation(line: 0, scope: !4207)
!4211 = !DILocation(line: 4247, column: 3, scope: !4207)
!4212 = !DILocation(line: 4250, column: 3, scope: !4207)
!4213 = !DILocation(line: 4253, column: 3, scope: !4207)
!4214 = !DILocation(line: 4255, column: 3, scope: !4207)
!4215 = !DILocation(line: 4258, column: 3, scope: !4207)
!4216 = !DILocation(line: 4259, column: 1, scope: !4207)
!4217 = distinct !DISubprogram(name: "determine_iv_costs", scope: !3, file: !3, line: 4382, type: !3565, scopeLine: 4383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4218)
!4218 = !{!4219, !4220, !4221}
!4219 = !DILocalVariable(name: "data", arg: 1, scope: !4217, file: !3, line: 4382, type: !2184)
!4220 = !DILocalVariable(name: "i", scope: !4217, file: !3, line: 4384, type: !6)
!4221 = !DILocalVariable(name: "cand", scope: !4222, file: !3, line: 4394, type: !2126)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !3, line: 4393, column: 5)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 4392, column: 3)
!4224 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 4392, column: 3)
!4225 = !DILocation(line: 0, scope: !4217)
!4226 = !DILocation(line: 4386, column: 7, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 4386, column: 7)
!4228 = !DILocation(line: 4386, column: 17, scope: !4227)
!4229 = !DILocation(line: 4386, column: 21, scope: !4227)
!4230 = !DILocation(line: 4386, column: 32, scope: !4227)
!4231 = !DILocation(line: 4386, column: 7, scope: !4217)
!4232 = !DILocation(line: 4388, column: 7, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 4387, column: 5)
!4234 = !DILocation(line: 4389, column: 16, scope: !4233)
!4235 = !DILocation(line: 4389, column: 7, scope: !4233)
!4236 = !DILocation(line: 4390, column: 5, scope: !4233)
!4237 = !DILocation(line: 4392, column: 8, scope: !4224)
!4238 = !DILocation(line: 0, scope: !4224)
!4239 = !DILocation(line: 4392, column: 19, scope: !4223)
!4240 = !DILocation(line: 4392, column: 17, scope: !4223)
!4241 = !DILocation(line: 4392, column: 3, scope: !4224)
!4242 = !DILocation(line: 4394, column: 30, scope: !4222)
!4243 = !DILocation(line: 0, scope: !4222)
!4244 = !DILocation(line: 4396, column: 7, scope: !4222)
!4245 = !DILocation(line: 4398, column: 11, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 4398, column: 11)
!4247 = !DILocation(line: 4398, column: 21, scope: !4246)
!4248 = !DILocation(line: 4398, column: 25, scope: !4246)
!4249 = !DILocation(line: 4398, column: 36, scope: !4246)
!4250 = !DILocation(line: 4398, column: 11, scope: !4222)
!4251 = !DILocation(line: 4399, column: 45, scope: !4246)
!4252 = !DILocation(line: 4399, column: 2, scope: !4246)
!4253 = !DILocation(line: 4392, column: 39, scope: !4223)
!4254 = !DILocation(line: 4392, column: 3, scope: !4223)
!4255 = distinct !{!4255, !4241, !4256}
!4256 = !DILocation(line: 4400, column: 5, scope: !4224)
!4257 = !DILocation(line: 4402, column: 7, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 4402, column: 7)
!4259 = !DILocation(line: 4402, column: 17, scope: !4258)
!4260 = !DILocation(line: 4402, column: 21, scope: !4258)
!4261 = !DILocation(line: 4402, column: 32, scope: !4258)
!4262 = !DILocation(line: 4402, column: 7, scope: !4217)
!4263 = !DILocation(line: 4403, column: 5, scope: !4258)
!4264 = !DILocation(line: 4404, column: 1, scope: !4217)
!4265 = distinct !DISubprogram(name: "determine_use_iv_costs", scope: !3, file: !3, line: 4264, type: !3565, scopeLine: 4265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4266)
!4266 = !{!4267, !4268, !4269, !4270, !4271, !4272, !4273}
!4267 = !DILocalVariable(name: "data", arg: 1, scope: !4265, file: !3, line: 4264, type: !2184)
!4268 = !DILocalVariable(name: "i", scope: !4265, file: !3, line: 4266, type: !6)
!4269 = !DILocalVariable(name: "j", scope: !4265, file: !3, line: 4266, type: !6)
!4270 = !DILocalVariable(name: "use", scope: !4265, file: !3, line: 4267, type: !2111)
!4271 = !DILocalVariable(name: "cand", scope: !4265, file: !3, line: 4268, type: !2126)
!4272 = !DILocalVariable(name: "to_clear", scope: !4265, file: !3, line: 4269, type: !1507)
!4273 = !DILocalVariable(name: "bi", scope: !4274, file: !3, line: 4287, type: !4005)
!4274 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 4286, column: 2)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !3, line: 4277, column: 11)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 4274, column: 5)
!4277 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 4273, column: 3)
!4278 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 4273, column: 3)
!4279 = !DILocation(line: 0, scope: !4265)
!4280 = !DILocation(line: 4266, column: 3, scope: !4265)
!4281 = !DILocation(line: 4269, column: 21, scope: !4265)
!4282 = !DILocation(line: 4271, column: 3, scope: !4265)
!4283 = !DILocation(line: 0, scope: !4275)
!4284 = !DILocation(line: 0, scope: !4274)
!4285 = !DILocation(line: 4273, column: 8, scope: !4278)
!4286 = !DILocation(line: 0, scope: !4278)
!4287 = !DILocation(line: 4273, column: 19, scope: !4277)
!4288 = !DILocation(line: 4273, column: 17, scope: !4277)
!4289 = !DILocation(line: 4273, column: 3, scope: !4278)
!4290 = !DILocation(line: 4275, column: 13, scope: !4276)
!4291 = !DILocation(line: 4277, column: 17, scope: !4275)
!4292 = !DILocation(line: 4277, column: 11, scope: !4275)
!4293 = !DILocation(line: 4277, column: 11, scope: !4276)
!4294 = !DILocation(line: 4279, column: 9, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 4279, column: 4)
!4296 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 4278, column: 2)
!4297 = !DILocation(line: 0, scope: !4295)
!4298 = !DILocation(line: 4279, column: 20, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 4279, column: 4)
!4300 = !DILocation(line: 4279, column: 18, scope: !4299)
!4301 = !DILocation(line: 4279, column: 4, scope: !4295)
!4302 = !DILocation(line: 4281, column: 30, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 4280, column: 6)
!4304 = !DILocation(line: 4281, column: 15, scope: !4303)
!4305 = !DILocation(line: 4282, column: 8, scope: !4303)
!4306 = !DILocation(line: 4279, column: 40, scope: !4299)
!4307 = !DILocation(line: 4279, column: 4, scope: !4299)
!4308 = distinct !{!4308, !4301, !4309}
!4309 = !DILocation(line: 4283, column: 6, scope: !4295)
!4310 = !DILocation(line: 4287, column: 4, scope: !4274)
!4311 = !DILocation(line: 4289, column: 4, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4274, file: !3, line: 4289, column: 4)
!4313 = !DILocation(line: 4289, column: 4, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 4289, column: 4)
!4315 = !DILocation(line: 4291, column: 30, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 4290, column: 6)
!4317 = !DILocation(line: 4291, column: 15, scope: !4316)
!4318 = !DILocation(line: 4292, column: 13, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 4292, column: 12)
!4320 = !DILocation(line: 4292, column: 12, scope: !4316)
!4321 = !DILocation(line: 4293, column: 29, scope: !4319)
!4322 = !DILocation(line: 4293, column: 3, scope: !4319)
!4323 = distinct !{!4323, !4311, !4324}
!4324 = !DILocation(line: 4294, column: 6, scope: !4312)
!4325 = !DILocation(line: 4298, column: 32, scope: !4274)
!4326 = !DILocation(line: 4298, column: 4, scope: !4274)
!4327 = !DILocation(line: 4299, column: 4, scope: !4274)
!4328 = !DILocation(line: 4300, column: 2, scope: !4275)
!4329 = !DILocation(line: 4273, column: 38, scope: !4277)
!4330 = !DILocation(line: 4273, column: 3, scope: !4277)
!4331 = distinct !{!4331, !4289, !4332}
!4332 = !DILocation(line: 4301, column: 5, scope: !4278)
!4333 = !DILocation(line: 4303, column: 3, scope: !4265)
!4334 = !DILocation(line: 4305, column: 7, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 4305, column: 7)
!4336 = !DILocation(line: 4305, column: 17, scope: !4335)
!4337 = !DILocation(line: 4305, column: 21, scope: !4335)
!4338 = !DILocation(line: 4305, column: 32, scope: !4335)
!4339 = !DILocation(line: 4305, column: 7, scope: !4265)
!4340 = !DILocation(line: 4307, column: 7, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4335, file: !3, line: 4306, column: 5)
!4342 = !DILocation(line: 4309, column: 12, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 4309, column: 7)
!4344 = !DILocation(line: 0, scope: !4343)
!4345 = !DILocation(line: 4309, column: 23, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 4309, column: 7)
!4347 = !DILocation(line: 4309, column: 21, scope: !4346)
!4348 = !DILocation(line: 4309, column: 7, scope: !4343)
!4349 = !DILocation(line: 4311, column: 10, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 4310, column: 2)
!4351 = !DILocation(line: 4313, column: 13, scope: !4350)
!4352 = !DILocation(line: 4313, column: 4, scope: !4350)
!4353 = !DILocation(line: 4314, column: 13, scope: !4350)
!4354 = !DILocation(line: 4314, column: 4, scope: !4350)
!4355 = !DILocation(line: 0, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 4315, column: 4)
!4357 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 4315, column: 4)
!4358 = !DILocation(line: 0, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 4317, column: 12)
!4360 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 4316, column: 6)
!4361 = !DILocation(line: 4315, column: 9, scope: !4357)
!4362 = !DILocation(line: 0, scope: !4357)
!4363 = !DILocation(line: 4315, column: 25, scope: !4356)
!4364 = !DILocation(line: 4315, column: 18, scope: !4356)
!4365 = !DILocation(line: 4315, column: 4, scope: !4357)
!4366 = !DILocation(line: 4317, column: 18, scope: !4359)
!4367 = !DILocation(line: 4317, column: 13, scope: !4359)
!4368 = !DILocation(line: 4317, column: 30, scope: !4359)
!4369 = !DILocation(line: 4318, column: 5, scope: !4359)
!4370 = !DILocation(line: 4318, column: 42, scope: !4359)
!4371 = !DILocation(line: 4318, column: 8, scope: !4359)
!4372 = !DILocation(line: 4317, column: 12, scope: !4360)
!4373 = !DILocation(line: 4321, column: 17, scope: !4360)
!4374 = !DILocation(line: 4322, column: 15, scope: !4360)
!4375 = !DILocation(line: 4322, column: 24, scope: !4360)
!4376 = !DILocation(line: 4322, column: 10, scope: !4360)
!4377 = !DILocation(line: 4322, column: 27, scope: !4360)
!4378 = !DILocation(line: 4322, column: 33, scope: !4360)
!4379 = !DILocation(line: 4323, column: 32, scope: !4360)
!4380 = !DILocation(line: 4324, column: 32, scope: !4360)
!4381 = !DILocation(line: 4321, column: 8, scope: !4360)
!4382 = !DILocation(line: 4325, column: 17, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 4325, column: 12)
!4384 = !DILocation(line: 4325, column: 26, scope: !4383)
!4385 = !DILocation(line: 4325, column: 12, scope: !4383)
!4386 = !DILocation(line: 4325, column: 29, scope: !4383)
!4387 = !DILocation(line: 4325, column: 12, scope: !4360)
!4388 = !DILocation(line: 4326, column: 17, scope: !4383)
!4389 = !DILocation(line: 4326, column: 3, scope: !4383)
!4390 = !DILocation(line: 4328, column: 17, scope: !4360)
!4391 = !DILocation(line: 4328, column: 8, scope: !4360)
!4392 = !DILocation(line: 4329, column: 6, scope: !4360)
!4393 = !DILocation(line: 4315, column: 41, scope: !4356)
!4394 = !DILocation(line: 4315, column: 4, scope: !4356)
!4395 = distinct !{!4395, !4365, !4396}
!4396 = !DILocation(line: 4329, column: 6, scope: !4357)
!4397 = !DILocation(line: 4331, column: 13, scope: !4350)
!4398 = !DILocation(line: 4331, column: 4, scope: !4350)
!4399 = !DILocation(line: 4309, column: 42, scope: !4346)
!4400 = !DILocation(line: 4309, column: 7, scope: !4346)
!4401 = distinct !{!4401, !4348, !4402}
!4402 = !DILocation(line: 4332, column: 2, scope: !4343)
!4403 = !DILocation(line: 4333, column: 16, scope: !4341)
!4404 = !DILocation(line: 4333, column: 7, scope: !4341)
!4405 = !DILocation(line: 4334, column: 5, scope: !4341)
!4406 = !DILocation(line: 4335, column: 1, scope: !4265)
!4407 = distinct !DISubprogram(name: "determine_set_costs", scope: !3, file: !3, line: 4419, type: !3565, scopeLine: 4420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4408)
!4408 = !{!4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417}
!4409 = !DILocalVariable(name: "data", arg: 1, scope: !4407, file: !3, line: 4419, type: !2184)
!4410 = !DILocalVariable(name: "j", scope: !4407, file: !3, line: 4421, type: !6)
!4411 = !DILocalVariable(name: "n", scope: !4407, file: !3, line: 4421, type: !6)
!4412 = !DILocalVariable(name: "phi", scope: !4407, file: !3, line: 4422, type: !1090)
!4413 = !DILocalVariable(name: "psi", scope: !4407, file: !3, line: 4423, type: !4066)
!4414 = !DILocalVariable(name: "op", scope: !4407, file: !3, line: 4424, type: !788)
!4415 = !DILocalVariable(name: "loop", scope: !4407, file: !3, line: 4425, type: !1305)
!4416 = !DILocalVariable(name: "bi", scope: !4407, file: !3, line: 4426, type: !4005)
!4417 = !DILocalVariable(name: "info", scope: !4418, file: !3, line: 4473, type: !2080)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 4472, column: 5)
!4419 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 4471, column: 3)
!4420 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 4471, column: 3)
!4421 = !DILocation(line: 0, scope: !4407)
!4422 = !DILocation(line: 4421, column: 3, scope: !4407)
!4423 = !DILocation(line: 4423, column: 3, scope: !4407)
!4424 = !DILocation(line: 4425, column: 29, scope: !4407)
!4425 = !DILocation(line: 4426, column: 3, scope: !4407)
!4426 = !DILocation(line: 4448, column: 7, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 4448, column: 7)
!4428 = !DILocation(line: 4448, column: 17, scope: !4427)
!4429 = !DILocation(line: 4448, column: 21, scope: !4427)
!4430 = !DILocation(line: 4448, column: 32, scope: !4427)
!4431 = !DILocation(line: 4448, column: 7, scope: !4407)
!4432 = !DILocation(line: 4450, column: 7, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 4449, column: 5)
!4434 = !DILocation(line: 4451, column: 16, scope: !4433)
!4435 = !DILocation(line: 4451, column: 55, scope: !4433)
!4436 = !DILocation(line: 4451, column: 7, scope: !4433)
!4437 = !DILocation(line: 4452, column: 16, scope: !4433)
!4438 = !DILocation(line: 4452, column: 75, scope: !4433)
!4439 = !DILocation(line: 4452, column: 53, scope: !4433)
!4440 = !DILocation(line: 4452, column: 7, scope: !4433)
!4441 = !DILocation(line: 4453, column: 16, scope: !4433)
!4442 = !DILocation(line: 4453, column: 79, scope: !4433)
!4443 = !DILocation(line: 4453, column: 55, scope: !4433)
!4444 = !DILocation(line: 4453, column: 7, scope: !4433)
!4445 = !DILocation(line: 4454, column: 5, scope: !4433)
!4446 = !DILocation(line: 4457, column: 14, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 4457, column: 3)
!4448 = !DILocation(line: 4457, column: 36, scope: !4447)
!4449 = !DILocation(line: 4457, column: 8, scope: !4447)
!4450 = !DILocation(line: 4456, column: 5, scope: !4407)
!4451 = !DILocation(line: 4457, column: 46, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4447, file: !3, line: 4457, column: 3)
!4453 = !DILocation(line: 4457, column: 45, scope: !4452)
!4454 = !DILocation(line: 4457, column: 3, scope: !4447)
!4455 = !DILocation(line: 4459, column: 13, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 4458, column: 5)
!4457 = !DILocation(line: 4460, column: 12, scope: !4456)
!4458 = !DILocation(line: 4462, column: 12, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 4462, column: 11)
!4460 = !DILocation(line: 4462, column: 11, scope: !4456)
!4461 = !DILocation(line: 4465, column: 11, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 4465, column: 11)
!4463 = !DILocation(line: 4465, column: 11, scope: !4456)
!4464 = !DILocation(line: 4457, column: 63, scope: !4452)
!4465 = !DILocation(line: 4457, column: 3, scope: !4452)
!4466 = distinct !{!4466, !4454, !4467}
!4467 = !DILocation(line: 4469, column: 5, scope: !4447)
!4468 = !DILocation(line: 4471, column: 3, scope: !4420)
!4469 = !DILocation(line: 4471, column: 3, scope: !4419)
!4470 = !DILocation(line: 4473, column: 51, scope: !4418)
!4471 = !DILocation(line: 4473, column: 35, scope: !4418)
!4472 = !DILocation(line: 0, scope: !4418)
!4473 = !DILocation(line: 4475, column: 17, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 4475, column: 11)
!4475 = !DILocation(line: 4475, column: 11, scope: !4474)
!4476 = !DILocation(line: 4475, column: 24, scope: !4474)
!4477 = !DILocation(line: 4475, column: 33, scope: !4474)
!4478 = !DILocation(line: 4475, column: 27, scope: !4474)
!4479 = !DILocation(line: 4475, column: 11, scope: !4418)
!4480 = distinct !{!4480, !4468, !4481}
!4481 = !DILocation(line: 4477, column: 5, scope: !4420)
!4482 = !DILocation(line: 4479, column: 9, scope: !4407)
!4483 = !DILocation(line: 4479, column: 19, scope: !4407)
!4484 = !DILocation(line: 4480, column: 7, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 4480, column: 7)
!4486 = !DILocation(line: 4480, column: 17, scope: !4485)
!4487 = !DILocation(line: 4480, column: 21, scope: !4485)
!4488 = !DILocation(line: 4480, column: 32, scope: !4485)
!4489 = !DILocation(line: 4480, column: 7, scope: !4407)
!4490 = !DILocation(line: 4481, column: 5, scope: !4485)
!4491 = !DILocation(line: 4483, column: 7, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 4483, column: 7)
!4493 = !DILocation(line: 4483, column: 17, scope: !4492)
!4494 = !DILocation(line: 4483, column: 21, scope: !4492)
!4495 = !DILocation(line: 4483, column: 32, scope: !4492)
!4496 = !DILocation(line: 4483, column: 7, scope: !4407)
!4497 = !DILocation(line: 4485, column: 7, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 4484, column: 5)
!4499 = !DILocation(line: 4486, column: 16, scope: !4498)
!4500 = !DILocation(line: 4486, column: 7, scope: !4498)
!4501 = !DILocation(line: 4487, column: 12, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 4487, column: 7)
!4503 = !DILocation(line: 0, scope: !4502)
!4504 = !DILocation(line: 4487, column: 28, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 4487, column: 7)
!4506 = !DILocation(line: 4487, column: 26, scope: !4505)
!4507 = !DILocation(line: 4487, column: 21, scope: !4505)
!4508 = !DILocation(line: 0, scope: !4498)
!4509 = !DILocation(line: 4487, column: 7, scope: !4502)
!4510 = !DILocation(line: 4489, column: 4, scope: !4505)
!4511 = !DILocation(line: 4488, column: 2, scope: !4505)
!4512 = !DILocation(line: 4487, column: 48, scope: !4505)
!4513 = !DILocation(line: 4487, column: 7, scope: !4505)
!4514 = distinct !{!4514, !4509, !4515}
!4515 = !DILocation(line: 4489, column: 41, scope: !4502)
!4516 = !DILocation(line: 4490, column: 7, scope: !4498)
!4517 = !DILocation(line: 4491, column: 5, scope: !4498)
!4518 = !DILocation(line: 4492, column: 1, scope: !4407)
!4519 = distinct !DISubprogram(name: "find_optimal_iv_set", scope: !3, file: !3, line: 5255, type: !4520, scopeLine: 5256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4522)
!4520 = !DISubroutineType(types: !4521)
!4521 = !{!2230, !2184}
!4522 = !{!4523, !4524, !4525, !4526, !4527}
!4523 = !DILocalVariable(name: "data", arg: 1, scope: !4519, file: !3, line: 5255, type: !2184)
!4524 = !DILocalVariable(name: "i", scope: !4519, file: !3, line: 5257, type: !6)
!4525 = !DILocalVariable(name: "set", scope: !4519, file: !3, line: 5258, type: !2230)
!4526 = !DILocalVariable(name: "use", scope: !4519, file: !3, line: 5259, type: !2111)
!4527 = !DILocalVariable(name: "cost", scope: !4528, file: !3, line: 5287, type: !2141)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 5286, column: 5)
!4529 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 5285, column: 7)
!4530 = !DILocation(line: 0, scope: !4519)
!4531 = !DILocation(line: 5262, column: 9, scope: !4519)
!4532 = !DILocation(line: 5263, column: 8, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 5263, column: 7)
!4534 = !DILocation(line: 5263, column: 7, scope: !4519)
!4535 = !DILocation(line: 5265, column: 21, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !3, line: 5265, column: 11)
!4537 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 5264, column: 5)
!4538 = !DILocation(line: 5265, column: 25, scope: !4536)
!4539 = !DILocation(line: 5265, column: 36, scope: !4536)
!4540 = !DILocation(line: 5265, column: 11, scope: !4537)
!4541 = !DILocation(line: 5266, column: 2, scope: !4536)
!4542 = !DILocation(line: 5270, column: 17, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 5270, column: 7)
!4544 = !DILocation(line: 5270, column: 21, scope: !4543)
!4545 = !DILocation(line: 5270, column: 32, scope: !4543)
!4546 = !DILocation(line: 5270, column: 7, scope: !4519)
!4547 = !DILocation(line: 5272, column: 7, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 5271, column: 5)
!4549 = !DILocation(line: 5273, column: 25, scope: !4548)
!4550 = !DILocation(line: 5273, column: 7, scope: !4548)
!4551 = !DILocation(line: 5274, column: 5, scope: !4548)
!4552 = !DILocation(line: 5276, column: 3, scope: !4519)
!4553 = !DILocation(line: 5276, column: 10, scope: !4519)
!4554 = !DILocation(line: 5278, column: 21, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 5278, column: 11)
!4556 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 5277, column: 5)
!4557 = !DILocation(line: 5278, column: 25, scope: !4555)
!4558 = !DILocation(line: 5278, column: 36, scope: !4555)
!4559 = !DILocation(line: 5278, column: 11, scope: !4556)
!4560 = !DILocation(line: 5280, column: 4, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 5279, column: 2)
!4562 = !DILocation(line: 5281, column: 22, scope: !4561)
!4563 = !DILocation(line: 5281, column: 4, scope: !4561)
!4564 = !DILocation(line: 5282, column: 2, scope: !4561)
!4565 = distinct !{!4565, !4552, !4566}
!4566 = !DILocation(line: 5283, column: 5, scope: !4519)
!4567 = !DILocation(line: 5285, column: 17, scope: !4529)
!4568 = !DILocation(line: 5285, column: 21, scope: !4529)
!4569 = !DILocation(line: 5285, column: 32, scope: !4529)
!4570 = !DILocation(line: 5285, column: 7, scope: !4519)
!4571 = !DILocation(line: 5287, column: 24, scope: !4528)
!4572 = !DILocation(line: 5288, column: 16, scope: !4528)
!4573 = !DILocation(line: 5288, column: 69, scope: !4528)
!4574 = !DILocation(line: 5288, column: 80, scope: !4528)
!4575 = !DILocation(line: 5288, column: 7, scope: !4528)
!4576 = !DILocation(line: 5289, column: 5, scope: !4528)
!4577 = !DILocation(line: 5291, column: 8, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 5291, column: 3)
!4579 = !DILocation(line: 0, scope: !4578)
!4580 = !DILocation(line: 5291, column: 19, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 5291, column: 3)
!4582 = !DILocation(line: 5291, column: 17, scope: !4581)
!4583 = !DILocation(line: 5291, column: 3, scope: !4578)
!4584 = !DILocation(line: 5293, column: 13, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 5292, column: 5)
!4586 = !DILocation(line: 5294, column: 23, scope: !4585)
!4587 = !DILocation(line: 5294, column: 54, scope: !4585)
!4588 = !DILocation(line: 5294, column: 12, scope: !4585)
!4589 = !DILocation(line: 5294, column: 21, scope: !4585)
!4590 = !DILocation(line: 5291, column: 38, scope: !4581)
!4591 = !DILocation(line: 5291, column: 3, scope: !4581)
!4592 = distinct !{!4592, !4583, !4593}
!4593 = !DILocation(line: 5295, column: 5, scope: !4578)
!4594 = !DILocation(line: 5298, column: 1, scope: !4519)
!4595 = distinct !DISubprogram(name: "create_new_ivs", scope: !3, file: !3, line: 5354, type: !4596, scopeLine: 5355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4598)
!4596 = !DISubroutineType(types: !4597)
!4597 = !{null, !2184, !2230}
!4598 = !{!4599, !4600, !4601, !4602, !4603}
!4599 = !DILocalVariable(name: "data", arg: 1, scope: !4595, file: !3, line: 5354, type: !2184)
!4600 = !DILocalVariable(name: "set", arg: 2, scope: !4595, file: !3, line: 5354, type: !2230)
!4601 = !DILocalVariable(name: "i", scope: !4595, file: !3, line: 5356, type: !6)
!4602 = !DILocalVariable(name: "cand", scope: !4595, file: !3, line: 5357, type: !2126)
!4603 = !DILocalVariable(name: "bi", scope: !4595, file: !3, line: 5358, type: !4005)
!4604 = !DILocation(line: 0, scope: !4595)
!4605 = !DILocation(line: 5356, column: 3, scope: !4595)
!4606 = !DILocation(line: 5358, column: 3, scope: !4595)
!4607 = !DILocation(line: 5360, column: 3, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 5360, column: 3)
!4609 = !DILocation(line: 5360, column: 3, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 5360, column: 3)
!4611 = !DILocation(line: 5362, column: 29, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 5361, column: 5)
!4613 = !DILocation(line: 5362, column: 14, scope: !4612)
!4614 = !DILocation(line: 5363, column: 7, scope: !4612)
!4615 = distinct !{!4615, !4607, !4616}
!4616 = !DILocation(line: 5364, column: 5, scope: !4608)
!4617 = !DILocation(line: 5365, column: 1, scope: !4595)
!4618 = distinct !DISubprogram(name: "iv_ca_free", scope: !3, file: !3, line: 4859, type: !4619, scopeLine: 4860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4622)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{null, !4621}
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64)
!4622 = !{!4623}
!4623 = !DILocalVariable(name: "ivs", arg: 1, scope: !4618, file: !3, line: 4859, type: !4621)
!4624 = !DILocation(line: 0, scope: !4618)
!4625 = !DILocation(line: 4861, column: 10, scope: !4618)
!4626 = !DILocation(line: 4861, column: 17, scope: !4618)
!4627 = !DILocation(line: 4861, column: 3, scope: !4618)
!4628 = !DILocation(line: 4862, column: 10, scope: !4618)
!4629 = !DILocation(line: 4862, column: 17, scope: !4618)
!4630 = !DILocation(line: 4862, column: 3, scope: !4618)
!4631 = !DILocation(line: 4863, column: 3, scope: !4618)
!4632 = !DILocation(line: 4864, column: 10, scope: !4618)
!4633 = !DILocation(line: 4864, column: 17, scope: !4618)
!4634 = !DILocation(line: 4864, column: 3, scope: !4618)
!4635 = !DILocation(line: 4865, column: 9, scope: !4618)
!4636 = !DILocation(line: 4865, column: 3, scope: !4618)
!4637 = !DILocation(line: 4866, column: 8, scope: !4618)
!4638 = !DILocation(line: 4867, column: 1, scope: !4618)
!4639 = distinct !DISubprogram(name: "rewrite_uses", scope: !3, file: !3, line: 5644, type: !3565, scopeLine: 5645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4640)
!4640 = !{!4641, !4642, !4643, !4644}
!4641 = !DILocalVariable(name: "data", arg: 1, scope: !4639, file: !3, line: 5644, type: !2184)
!4642 = !DILocalVariable(name: "i", scope: !4639, file: !3, line: 5646, type: !6)
!4643 = !DILocalVariable(name: "cand", scope: !4639, file: !3, line: 5647, type: !2126)
!4644 = !DILocalVariable(name: "use", scope: !4639, file: !3, line: 5648, type: !2111)
!4645 = !DILocation(line: 0, scope: !4639)
!4646 = !DILocation(line: 5650, column: 8, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 5650, column: 3)
!4648 = !DILocation(line: 0, scope: !4647)
!4649 = !DILocation(line: 5650, column: 19, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 5650, column: 3)
!4651 = !DILocation(line: 5650, column: 17, scope: !4650)
!4652 = !DILocation(line: 5650, column: 3, scope: !4647)
!4653 = !DILocation(line: 5652, column: 13, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 5651, column: 5)
!4655 = !DILocation(line: 5653, column: 19, scope: !4654)
!4656 = !DILocation(line: 5654, column: 7, scope: !4654)
!4657 = !DILocation(line: 5656, column: 7, scope: !4654)
!4658 = !DILocation(line: 5650, column: 38, scope: !4650)
!4659 = !DILocation(line: 5650, column: 3, scope: !4650)
!4660 = distinct !{!4660, !4652, !4661}
!4661 = !DILocation(line: 5657, column: 5, scope: !4647)
!4662 = !DILocation(line: 5658, column: 1, scope: !4639)
!4663 = distinct !DISubprogram(name: "remove_unused_ivs", scope: !3, file: !3, line: 5663, type: !3565, scopeLine: 5664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4664)
!4664 = !{!4665, !4666, !4667, !4668, !4669}
!4665 = !DILocalVariable(name: "data", arg: 1, scope: !4663, file: !3, line: 5663, type: !2184)
!4666 = !DILocalVariable(name: "j", scope: !4663, file: !3, line: 5665, type: !6)
!4667 = !DILocalVariable(name: "bi", scope: !4663, file: !3, line: 5666, type: !4005)
!4668 = !DILocalVariable(name: "toremove", scope: !4663, file: !3, line: 5667, type: !1507)
!4669 = !DILocalVariable(name: "info", scope: !4670, file: !3, line: 5674, type: !2080)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 5673, column: 5)
!4671 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 5672, column: 3)
!4672 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 5672, column: 3)
!4673 = !DILocation(line: 0, scope: !4663)
!4674 = !DILocation(line: 5665, column: 3, scope: !4663)
!4675 = !DILocation(line: 5666, column: 3, scope: !4663)
!4676 = !DILocation(line: 5667, column: 21, scope: !4663)
!4677 = !DILocation(line: 5672, column: 3, scope: !4672)
!4678 = !DILocation(line: 5672, column: 3, scope: !4671)
!4679 = !DILocation(line: 5676, column: 30, scope: !4670)
!4680 = !DILocation(line: 5676, column: 14, scope: !4670)
!4681 = !DILocation(line: 0, scope: !4670)
!4682 = !DILocation(line: 5677, column: 17, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 5677, column: 11)
!4684 = !DILocation(line: 5677, column: 11, scope: !4683)
!4685 = !DILocation(line: 5678, column: 4, scope: !4683)
!4686 = !DILocation(line: 5678, column: 33, scope: !4683)
!4687 = !DILocation(line: 5678, column: 8, scope: !4683)
!4688 = !DILocation(line: 5679, column: 4, scope: !4683)
!4689 = !DILocation(line: 5679, column: 14, scope: !4683)
!4690 = !DILocation(line: 5679, column: 8, scope: !4683)
!4691 = !DILocation(line: 5680, column: 4, scope: !4683)
!4692 = !DILocation(line: 5680, column: 14, scope: !4683)
!4693 = !DILocation(line: 5680, column: 18, scope: !4683)
!4694 = !DILocation(line: 5680, column: 8, scope: !4683)
!4695 = !DILocation(line: 5681, column: 4, scope: !4683)
!4696 = !DILocation(line: 5681, column: 14, scope: !4683)
!4697 = !DILocation(line: 5681, column: 8, scope: !4683)
!4698 = !DILocation(line: 5677, column: 11, scope: !4670)
!4699 = !DILocation(line: 5682, column: 28, scope: !4683)
!4700 = !DILocation(line: 5682, column: 2, scope: !4683)
!4701 = distinct !{!4701, !4677, !4702}
!4702 = !DILocation(line: 5683, column: 5, scope: !4672)
!4703 = !DILocation(line: 5685, column: 3, scope: !4663)
!4704 = !DILocation(line: 5687, column: 3, scope: !4663)
!4705 = !DILocation(line: 5688, column: 1, scope: !4663)
!4706 = distinct !DISubprogram(name: "free_loop_data", scope: !3, file: !3, line: 5693, type: !3565, scopeLine: 5694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4707)
!4707 = !{!4708, !4709, !4710, !4711, !4712, !4713, !4717, !4721}
!4708 = !DILocalVariable(name: "data", arg: 1, scope: !4706, file: !3, line: 5693, type: !2184)
!4709 = !DILocalVariable(name: "i", scope: !4706, file: !3, line: 5695, type: !6)
!4710 = !DILocalVariable(name: "j", scope: !4706, file: !3, line: 5695, type: !6)
!4711 = !DILocalVariable(name: "bi", scope: !4706, file: !3, line: 5696, type: !4005)
!4712 = !DILocalVariable(name: "obj", scope: !4706, file: !3, line: 5697, type: !788)
!4713 = !DILocalVariable(name: "info", scope: !4714, file: !3, line: 5707, type: !2080)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 5706, column: 5)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 5705, column: 3)
!4716 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 5705, column: 3)
!4717 = !DILocalVariable(name: "use", scope: !4718, file: !3, line: 5722, type: !2111)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 5721, column: 5)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 5720, column: 3)
!4720 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 5720, column: 3)
!4721 = !DILocalVariable(name: "cand", scope: !4722, file: !3, line: 5736, type: !2126)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 5735, column: 5)
!4723 = distinct !DILexicalBlock(scope: !4724, file: !3, line: 5734, column: 3)
!4724 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 5734, column: 3)
!4725 = !DILocation(line: 0, scope: !4706)
!4726 = !DILocation(line: 5695, column: 3, scope: !4706)
!4727 = !DILocation(line: 5696, column: 3, scope: !4706)
!4728 = !DILocation(line: 5697, column: 3, scope: !4706)
!4729 = !DILocation(line: 5699, column: 13, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 5699, column: 7)
!4731 = !DILocation(line: 5699, column: 7, scope: !4730)
!4732 = !DILocation(line: 5699, column: 7, scope: !4706)
!4733 = !DILocation(line: 5701, column: 7, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 5700, column: 5)
!4735 = !DILocation(line: 5702, column: 20, scope: !4734)
!4736 = !DILocation(line: 5703, column: 5, scope: !4734)
!4737 = !DILocation(line: 5705, column: 3, scope: !4716)
!4738 = !DILocation(line: 5705, column: 3, scope: !4715)
!4739 = !DILocation(line: 5709, column: 30, scope: !4714)
!4740 = !DILocation(line: 5709, column: 14, scope: !4714)
!4741 = !DILocation(line: 0, scope: !4714)
!4742 = !DILocation(line: 5710, column: 17, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 5710, column: 11)
!4744 = !DILocation(line: 5710, column: 11, scope: !4743)
!4745 = !DILocation(line: 5710, column: 11, scope: !4714)
!4746 = !DILocation(line: 5711, column: 2, scope: !4743)
!4747 = !DILocation(line: 5712, column: 16, scope: !4714)
!4748 = !DILocation(line: 5713, column: 13, scope: !4714)
!4749 = !DILocation(line: 5713, column: 28, scope: !4714)
!4750 = !DILocation(line: 5714, column: 13, scope: !4714)
!4751 = !DILocation(line: 5714, column: 26, scope: !4714)
!4752 = !DILocation(line: 5715, column: 13, scope: !4714)
!4753 = !DILocation(line: 5715, column: 20, scope: !4714)
!4754 = distinct !{!4754, !4737, !4755}
!4755 = !DILocation(line: 5716, column: 5, scope: !4716)
!4756 = !DILocation(line: 5717, column: 23, scope: !4706)
!4757 = !DILocation(line: 5717, column: 3, scope: !4706)
!4758 = !DILocation(line: 5718, column: 23, scope: !4706)
!4759 = !DILocation(line: 5718, column: 3, scope: !4706)
!4760 = !DILocation(line: 5720, column: 8, scope: !4720)
!4761 = !DILocation(line: 0, scope: !4720)
!4762 = !DILocation(line: 5720, column: 19, scope: !4719)
!4763 = !DILocation(line: 5720, column: 17, scope: !4719)
!4764 = !DILocation(line: 5720, column: 3, scope: !4720)
!4765 = !DILocation(line: 5722, column: 42, scope: !4718)
!4766 = !DILocation(line: 5722, column: 28, scope: !4718)
!4767 = !DILocation(line: 0, scope: !4718)
!4768 = !DILocation(line: 5724, column: 18, scope: !4718)
!4769 = !DILocation(line: 5724, column: 7, scope: !4718)
!4770 = !DILocation(line: 5725, column: 7, scope: !4718)
!4771 = !DILocation(line: 0, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !3, line: 5726, column: 7)
!4773 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 5726, column: 7)
!4774 = !DILocation(line: 5726, column: 12, scope: !4773)
!4775 = !DILocation(line: 0, scope: !4773)
!4776 = !DILocation(line: 5726, column: 28, scope: !4772)
!4777 = !DILocation(line: 5726, column: 21, scope: !4772)
!4778 = !DILocation(line: 5726, column: 7, scope: !4773)
!4779 = !DILocation(line: 5727, column: 23, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 5727, column: 6)
!4781 = !DILocation(line: 5727, column: 6, scope: !4780)
!4782 = !DILocation(line: 5727, column: 6, scope: !4772)
!4783 = !DILocation(line: 5728, column: 4, scope: !4780)
!4784 = !DILocation(line: 5726, column: 44, scope: !4772)
!4785 = !DILocation(line: 5726, column: 7, scope: !4772)
!4786 = distinct !{!4786, !4778, !4787}
!4787 = !DILocation(line: 5728, column: 4, scope: !4773)
!4788 = !DILocation(line: 5729, column: 13, scope: !4718)
!4789 = !DILocation(line: 5729, column: 7, scope: !4718)
!4790 = !DILocation(line: 5730, column: 13, scope: !4718)
!4791 = !DILocation(line: 5730, column: 7, scope: !4718)
!4792 = !DILocation(line: 5720, column: 38, scope: !4719)
!4793 = !DILocation(line: 5720, column: 3, scope: !4719)
!4794 = distinct !{!4794, !4764, !4795}
!4795 = !DILocation(line: 5731, column: 5, scope: !4720)
!4796 = !DILocation(line: 5732, column: 3, scope: !4706)
!4797 = !DILocation(line: 5734, column: 8, scope: !4724)
!4798 = !DILocation(line: 0, scope: !4724)
!4799 = !DILocation(line: 5734, column: 19, scope: !4723)
!4800 = !DILocation(line: 5734, column: 17, scope: !4723)
!4801 = !DILocation(line: 5734, column: 3, scope: !4724)
!4802 = !DILocation(line: 5736, column: 45, scope: !4722)
!4803 = !DILocation(line: 5736, column: 30, scope: !4722)
!4804 = !DILocation(line: 0, scope: !4722)
!4805 = !DILocation(line: 5738, column: 17, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 5738, column: 11)
!4807 = !DILocation(line: 5738, column: 11, scope: !4806)
!4808 = !DILocation(line: 5738, column: 11, scope: !4722)
!4809 = !DILocation(line: 5739, column: 2, scope: !4806)
!4810 = !DILocation(line: 5740, column: 17, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 5740, column: 11)
!4812 = !DILocation(line: 5740, column: 11, scope: !4811)
!4813 = !DILocation(line: 5740, column: 11, scope: !4722)
!4814 = !DILocation(line: 5741, column: 2, scope: !4811)
!4815 = !DILocation(line: 5742, column: 13, scope: !4722)
!4816 = !DILocation(line: 5742, column: 7, scope: !4722)
!4817 = !DILocation(line: 5734, column: 39, scope: !4723)
!4818 = !DILocation(line: 5734, column: 3, scope: !4723)
!4819 = distinct !{!4819, !4801, !4820}
!4820 = !DILocation(line: 5743, column: 5, scope: !4724)
!4821 = !DILocation(line: 5744, column: 3, scope: !4706)
!4822 = !DILocation(line: 5746, column: 13, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 5746, column: 7)
!4824 = !DILocation(line: 5746, column: 33, scope: !4823)
!4825 = !DILocation(line: 5746, column: 31, scope: !4823)
!4826 = !DILocation(line: 5746, column: 7, scope: !4706)
!4827 = !DILocation(line: 5748, column: 37, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 5747, column: 5)
!4829 = !DILocation(line: 5748, column: 35, scope: !4828)
!4830 = !DILocation(line: 5748, column: 31, scope: !4828)
!4831 = !DILocation(line: 5749, column: 19, scope: !4828)
!4832 = !DILocation(line: 5749, column: 7, scope: !4828)
!4833 = !DILocation(line: 5750, column: 28, scope: !4828)
!4834 = !DILocation(line: 5750, column: 26, scope: !4828)
!4835 = !DILocation(line: 5751, column: 5, scope: !4828)
!4836 = !DILocation(line: 5753, column: 9, scope: !4706)
!4837 = !DILocation(line: 5753, column: 20, scope: !4706)
!4838 = !DILocation(line: 5755, column: 8, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 5755, column: 3)
!4840 = !DILocation(line: 0, scope: !4839)
!4841 = !DILocation(line: 5755, column: 15, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4839, file: !3, line: 5755, column: 3)
!4843 = !DILocation(line: 5755, column: 3, scope: !4839)
!4844 = !DILocation(line: 5756, column: 5, scope: !4842)
!4845 = !DILocation(line: 5755, column: 63, scope: !4842)
!4846 = !DILocation(line: 5755, column: 3, scope: !4842)
!4847 = distinct !{!4847, !4843, !4848}
!4848 = !DILocation(line: 5756, column: 5, scope: !4839)
!4849 = !DILocation(line: 5758, column: 3, scope: !4706)
!4850 = !DILocation(line: 5759, column: 1, scope: !4706)
!4851 = distinct !DISubprogram(name: "find_bivs", scope: !3, file: !3, line: 911, type: !3999, scopeLine: 912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4852)
!4852 = !{!4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860}
!4853 = !DILocalVariable(name: "data", arg: 1, scope: !4851, file: !3, line: 911, type: !2184)
!4854 = !DILocalVariable(name: "phi", scope: !4851, file: !3, line: 913, type: !1090)
!4855 = !DILocalVariable(name: "step", scope: !4851, file: !3, line: 914, type: !788)
!4856 = !DILocalVariable(name: "type", scope: !4851, file: !3, line: 914, type: !788)
!4857 = !DILocalVariable(name: "base", scope: !4851, file: !3, line: 914, type: !788)
!4858 = !DILocalVariable(name: "found", scope: !4851, file: !3, line: 915, type: !136)
!4859 = !DILocalVariable(name: "loop", scope: !4851, file: !3, line: 916, type: !1305)
!4860 = !DILocalVariable(name: "psi", scope: !4851, file: !3, line: 917, type: !4066)
!4861 = !DILocation(line: 0, scope: !4851)
!4862 = !DILocation(line: 916, column: 29, scope: !4851)
!4863 = !DILocation(line: 917, column: 3, scope: !4851)
!4864 = !DILocation(line: 919, column: 14, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 919, column: 3)
!4866 = !DILocation(line: 919, column: 36, scope: !4865)
!4867 = !DILocation(line: 919, column: 8, scope: !4865)
!4868 = !DILocation(line: 915, column: 8, scope: !4851)
!4869 = !DILocation(line: 919, column: 46, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 919, column: 3)
!4871 = !DILocation(line: 919, column: 45, scope: !4870)
!4872 = !DILocation(line: 919, column: 3, scope: !4865)
!4873 = !DILocation(line: 921, column: 13, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 920, column: 5)
!4875 = !DILocation(line: 923, column: 11, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 923, column: 11)
!4877 = !DILocation(line: 923, column: 11, scope: !4874)
!4878 = !DILocation(line: 926, column: 14, scope: !4874)
!4879 = !DILocation(line: 927, column: 12, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 927, column: 11)
!4881 = !DILocation(line: 927, column: 11, scope: !4874)
!4882 = !DILocation(line: 930, column: 14, scope: !4874)
!4883 = !DILocation(line: 931, column: 14, scope: !4874)
!4884 = !DILocation(line: 932, column: 11, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 932, column: 11)
!4886 = !DILocation(line: 933, column: 4, scope: !4885)
!4887 = !DILocation(line: 933, column: 7, scope: !4885)
!4888 = !DILocation(line: 932, column: 11, scope: !4874)
!4889 = !DILocation(line: 936, column: 14, scope: !4874)
!4890 = !DILocation(line: 937, column: 14, scope: !4874)
!4891 = !DILocation(line: 940, column: 8, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 940, column: 8)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 939, column: 2)
!4894 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 938, column: 11)
!4895 = !DILocation(line: 940, column: 8, scope: !4893)
!4896 = !DILocation(line: 941, column: 13, scope: !4892)
!4897 = !DILocation(line: 941, column: 6, scope: !4892)
!4898 = !DILocation(line: 943, column: 13, scope: !4892)
!4899 = !DILocation(line: 0, scope: !4874)
!4900 = !DILocation(line: 946, column: 21, scope: !4874)
!4901 = !DILocation(line: 946, column: 7, scope: !4874)
!4902 = !DILocation(line: 948, column: 5, scope: !4874)
!4903 = !DILocation(line: 919, column: 63, scope: !4870)
!4904 = !DILocation(line: 919, column: 3, scope: !4870)
!4905 = distinct !{!4905, !4872, !4906}
!4906 = !DILocation(line: 948, column: 5, scope: !4865)
!4907 = !DILocation(line: 951, column: 1, scope: !4851)
!4908 = !DILocation(line: 950, column: 3, scope: !4851)
!4909 = distinct !DISubprogram(name: "find_givs", scope: !3, file: !3, line: 1046, type: !3565, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4910)
!4910 = !{!4911, !4912, !4913, !4914}
!4911 = !DILocalVariable(name: "data", arg: 1, scope: !4909, file: !3, line: 1046, type: !2184)
!4912 = !DILocalVariable(name: "loop", scope: !4909, file: !3, line: 1048, type: !1305)
!4913 = !DILocalVariable(name: "body", scope: !4909, file: !3, line: 1049, type: !3678)
!4914 = !DILocalVariable(name: "i", scope: !4909, file: !3, line: 1050, type: !6)
!4915 = !DILocation(line: 0, scope: !4909)
!4916 = !DILocation(line: 1048, column: 29, scope: !4909)
!4917 = !DILocation(line: 1049, column: 23, scope: !4909)
!4918 = !DILocation(line: 0, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 1052, column: 3)
!4920 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 1052, column: 3)
!4921 = !DILocation(line: 1052, column: 8, scope: !4920)
!4922 = !DILocation(line: 0, scope: !4920)
!4923 = !DILocation(line: 1052, column: 25, scope: !4919)
!4924 = !DILocation(line: 1052, column: 17, scope: !4919)
!4925 = !DILocation(line: 1052, column: 3, scope: !4920)
!4926 = !DILocation(line: 1053, column: 28, scope: !4919)
!4927 = !DILocation(line: 1053, column: 5, scope: !4919)
!4928 = !DILocation(line: 1052, column: 37, scope: !4919)
!4929 = !DILocation(line: 1052, column: 3, scope: !4919)
!4930 = distinct !{!4930, !4925, !4931}
!4931 = !DILocation(line: 1053, column: 35, scope: !4920)
!4932 = !DILocation(line: 1054, column: 9, scope: !4909)
!4933 = !DILocation(line: 1054, column: 3, scope: !4909)
!4934 = !DILocation(line: 1055, column: 1, scope: !4909)
!4935 = distinct !DISubprogram(name: "mark_bivs", scope: !3, file: !3, line: 956, type: !3565, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4936)
!4936 = !{!4937, !4938, !4939, !4940, !4941, !4942, !4943, !4944}
!4937 = !DILocalVariable(name: "data", arg: 1, scope: !4935, file: !3, line: 956, type: !2184)
!4938 = !DILocalVariable(name: "phi", scope: !4935, file: !3, line: 958, type: !1090)
!4939 = !DILocalVariable(name: "var", scope: !4935, file: !3, line: 959, type: !788)
!4940 = !DILocalVariable(name: "iv", scope: !4935, file: !3, line: 960, type: !2085)
!4941 = !DILocalVariable(name: "incr_iv", scope: !4935, file: !3, line: 960, type: !2085)
!4942 = !DILocalVariable(name: "loop", scope: !4935, file: !3, line: 961, type: !1305)
!4943 = !DILocalVariable(name: "incr_bb", scope: !4935, file: !3, line: 962, type: !1053)
!4944 = !DILocalVariable(name: "psi", scope: !4935, file: !3, line: 963, type: !4066)
!4945 = !DILocation(line: 0, scope: !4935)
!4946 = !DILocation(line: 961, column: 29, scope: !4935)
!4947 = !DILocation(line: 963, column: 3, scope: !4935)
!4948 = !DILocation(line: 965, column: 14, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 965, column: 3)
!4950 = !DILocation(line: 965, column: 36, scope: !4949)
!4951 = !DILocation(line: 965, column: 8, scope: !4949)
!4952 = !DILocation(line: 965, column: 46, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 965, column: 3)
!4954 = !DILocation(line: 965, column: 45, scope: !4953)
!4955 = !DILocation(line: 965, column: 3, scope: !4949)
!4956 = !DILocation(line: 967, column: 13, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 966, column: 5)
!4958 = !DILocation(line: 969, column: 26, scope: !4957)
!4959 = !DILocation(line: 969, column: 12, scope: !4957)
!4960 = !DILocation(line: 970, column: 12, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 970, column: 11)
!4962 = !DILocation(line: 970, column: 11, scope: !4957)
!4963 = !DILocation(line: 973, column: 13, scope: !4957)
!4964 = !DILocation(line: 974, column: 17, scope: !4957)
!4965 = !DILocation(line: 975, column: 12, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 975, column: 11)
!4967 = !DILocation(line: 975, column: 11, scope: !4957)
!4968 = !DILocation(line: 979, column: 28, scope: !4957)
!4969 = !DILocation(line: 979, column: 17, scope: !4957)
!4970 = !DILocation(line: 980, column: 20, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 980, column: 11)
!4972 = !DILocation(line: 980, column: 41, scope: !4971)
!4973 = !DILocation(line: 980, column: 32, scope: !4971)
!4974 = !DILocation(line: 981, column: 4, scope: !4971)
!4975 = !DILocation(line: 981, column: 17, scope: !4971)
!4976 = !DILocation(line: 981, column: 23, scope: !4971)
!4977 = !DILocation(line: 980, column: 11, scope: !4957)
!4978 = !DILocation(line: 984, column: 11, scope: !4957)
!4979 = !DILocation(line: 984, column: 17, scope: !4957)
!4980 = !DILocation(line: 985, column: 16, scope: !4957)
!4981 = !DILocation(line: 985, column: 22, scope: !4957)
!4982 = !DILocation(line: 986, column: 5, scope: !4957)
!4983 = !DILocation(line: 965, column: 63, scope: !4953)
!4984 = !DILocation(line: 965, column: 3, scope: !4953)
!4985 = distinct !{!4985, !4955, !4986}
!4986 = !DILocation(line: 986, column: 5, scope: !4949)
!4987 = !DILocation(line: 987, column: 1, scope: !4935)
!4988 = distinct !DISubprogram(name: "niter_for_single_dom_exit", scope: !3, file: !3, line: 755, type: !4989, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !4991)
!4989 = !DISubroutineType(types: !4990)
!4990 = !{!788, !2184}
!4991 = !{!4992, !4993}
!4992 = !DILocalVariable(name: "data", arg: 1, scope: !4988, file: !3, line: 755, type: !2184)
!4993 = !DILocalVariable(name: "exit", scope: !4988, file: !3, line: 757, type: !1070)
!4994 = !DILocation(line: 0, scope: !4988)
!4995 = !DILocation(line: 757, column: 38, scope: !4988)
!4996 = !DILocation(line: 757, column: 15, scope: !4988)
!4997 = !DILocation(line: 759, column: 8, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 759, column: 7)
!4999 = !DILocation(line: 759, column: 7, scope: !4988)
!5000 = !DILocation(line: 762, column: 10, scope: !4988)
!5001 = !DILocation(line: 762, column: 3, scope: !4988)
!5002 = !DILocation(line: 763, column: 1, scope: !4988)
!5003 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !729, file: !729, line: 224, type: !5004, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5010)
!5004 = !DISubroutineType(types: !5005)
!5005 = !{null, !5006, !5007, !6, !2238}
!5006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!5007 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !674, line: 48, baseType: !5008)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!5010 = !{!5011, !5012, !5013, !5014}
!5011 = !DILocalVariable(name: "bi", arg: 1, scope: !5003, file: !729, line: 224, type: !5006)
!5012 = !DILocalVariable(name: "map", arg: 2, scope: !5003, file: !729, line: 224, type: !5007)
!5013 = !DILocalVariable(name: "start_bit", arg: 3, scope: !5003, file: !729, line: 225, type: !6)
!5014 = !DILocalVariable(name: "bit_no", arg: 4, scope: !5003, file: !729, line: 225, type: !2238)
!5015 = !DILocation(line: 0, scope: !5003)
!5016 = !DILocation(line: 227, column: 19, scope: !5003)
!5017 = !DILocation(line: 227, column: 12, scope: !5003)
!5018 = !DILocation(line: 228, column: 7, scope: !5003)
!5019 = !DILocation(line: 228, column: 12, scope: !5003)
!5020 = !DILocation(line: 0, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5022, file: !729, line: 233, column: 11)
!5022 = distinct !DILexicalBlock(scope: !5003, file: !729, line: 232, column: 5)
!5023 = !DILocation(line: 231, column: 3, scope: !5003)
!5024 = !DILocation(line: 233, column: 12, scope: !5021)
!5025 = !DILocation(line: 233, column: 11, scope: !5022)
!5026 = !DILocation(line: 235, column: 13, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5021, file: !729, line: 234, column: 2)
!5028 = !DILocation(line: 236, column: 4, scope: !5027)
!5029 = !DILocation(line: 239, column: 11, scope: !5022)
!5030 = distinct !{!5030, !5023, !5031}
!5031 = !DILocation(line: 242, column: 5, scope: !5003)
!5032 = !DILocation(line: 245, column: 11, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5003, file: !729, line: 245, column: 7)
!5034 = !DILocation(line: 245, column: 17, scope: !5033)
!5035 = !DILocation(line: 245, column: 22, scope: !5033)
!5036 = !DILocation(line: 245, column: 7, scope: !5003)
!5037 = !DILocation(line: 246, column: 27, scope: !5033)
!5038 = !DILocation(line: 246, column: 32, scope: !5033)
!5039 = !DILocation(line: 246, column: 5, scope: !5033)
!5040 = !DILocation(line: 249, column: 7, scope: !5003)
!5041 = !DILocation(line: 249, column: 15, scope: !5003)
!5042 = !DILocation(line: 250, column: 14, scope: !5003)
!5043 = !DILocation(line: 251, column: 7, scope: !5003)
!5044 = !DILocation(line: 251, column: 12, scope: !5003)
!5045 = !DILocation(line: 257, column: 16, scope: !5003)
!5046 = !DILocation(line: 257, column: 13, scope: !5003)
!5047 = !DILocation(line: 259, column: 11, scope: !5003)
!5048 = !DILocation(line: 260, column: 1, scope: !5003)
!5049 = distinct !DISubprogram(name: "bmp_iter_set", scope: !729, file: !729, line: 393, type: !5050, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5052)
!5050 = !DISubroutineType(types: !5051)
!5051 = !{!136, !5006, !2238}
!5052 = !{!5053, !5054, !5055}
!5053 = !DILocalVariable(name: "bi", arg: 1, scope: !5049, file: !729, line: 393, type: !5006)
!5054 = !DILocalVariable(name: "bit_no", arg: 2, scope: !5049, file: !729, line: 393, type: !2238)
!5055 = !DILabel(scope: !5056, name: "next_bit", file: !729, line: 398)
!5056 = distinct !DILexicalBlock(scope: !5057, file: !729, line: 397, column: 5)
!5057 = distinct !DILexicalBlock(scope: !5049, file: !729, line: 396, column: 7)
!5058 = !DILocation(line: 0, scope: !5049)
!5059 = !DILocation(line: 396, column: 11, scope: !5057)
!5060 = !DILocation(line: 396, column: 7, scope: !5057)
!5061 = !DILocation(line: 396, column: 7, scope: !5049)
!5062 = !DILocation(line: 419, column: 15, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5064, file: !729, line: 418, column: 2)
!5064 = distinct !DILexicalBlock(scope: !5049, file: !729, line: 415, column: 5)
!5065 = !DILocation(line: 399, column: 7, scope: !5056)
!5066 = !DILocation(line: 398, column: 5, scope: !5056)
!5067 = !DILocation(line: 399, column: 20, scope: !5056)
!5068 = !DILocation(line: 399, column: 25, scope: !5056)
!5069 = !DILocation(line: 399, column: 14, scope: !5056)
!5070 = !DILocation(line: 401, column: 13, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5056, file: !729, line: 400, column: 2)
!5072 = !DILocation(line: 402, column: 12, scope: !5071)
!5073 = distinct !{!5073, !5065, !5074}
!5074 = !DILocation(line: 403, column: 2, scope: !5056)
!5075 = !DILocation(line: 410, column: 15, scope: !5049)
!5076 = !DILocation(line: 410, column: 42, scope: !5049)
!5077 = !DILocation(line: 411, column: 26, scope: !5049)
!5078 = !DILocation(line: 410, column: 11, scope: !5049)
!5079 = !DILocation(line: 412, column: 7, scope: !5049)
!5080 = !DILocation(line: 412, column: 14, scope: !5049)
!5081 = !DILocation(line: 0, scope: !5064)
!5082 = !DILocation(line: 414, column: 3, scope: !5049)
!5083 = !DILocation(line: 417, column: 7, scope: !5064)
!5084 = !DILocation(line: 417, column: 18, scope: !5064)
!5085 = !DILocation(line: 417, column: 26, scope: !5064)
!5086 = !DILocation(line: 419, column: 13, scope: !5063)
!5087 = !DILocation(line: 420, column: 8, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5063, file: !729, line: 420, column: 8)
!5089 = !DILocation(line: 420, column: 8, scope: !5063)
!5090 = !DILocation(line: 422, column: 12, scope: !5063)
!5091 = !DILocation(line: 423, column: 15, scope: !5063)
!5092 = distinct !{!5092, !5083, !5093}
!5093 = !DILocation(line: 424, column: 2, scope: !5064)
!5094 = !DILocation(line: 427, column: 28, scope: !5064)
!5095 = !DILocation(line: 427, column: 16, scope: !5064)
!5096 = !DILocation(line: 428, column: 12, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5064, file: !729, line: 428, column: 11)
!5098 = !DILocation(line: 428, column: 11, scope: !5064)
!5099 = !DILocation(line: 430, column: 27, scope: !5064)
!5100 = !DILocation(line: 430, column: 32, scope: !5064)
!5101 = !DILocation(line: 430, column: 15, scope: !5064)
!5102 = !DILocation(line: 431, column: 19, scope: !5064)
!5103 = distinct !{!5103, !5082, !5104}
!5104 = !DILocation(line: 432, column: 5, scope: !5049)
!5105 = !DILocation(line: 433, column: 1, scope: !5049)
!5106 = distinct !DISubprogram(name: "ver_info", scope: !3, file: !3, line: 546, type: !5107, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5109)
!5107 = !DISubroutineType(types: !5108)
!5108 = !{!2080, !2184, !6}
!5109 = !{!5110, !5111}
!5110 = !DILocalVariable(name: "data", arg: 1, scope: !5106, file: !3, line: 546, type: !2184)
!5111 = !DILocalVariable(name: "ver", arg: 2, scope: !5106, file: !3, line: 546, type: !6)
!5112 = !DILocation(line: 0, scope: !5106)
!5113 = !DILocation(line: 548, column: 16, scope: !5106)
!5114 = !DILocation(line: 548, column: 29, scope: !5106)
!5115 = !DILocation(line: 548, column: 3, scope: !5106)
!5116 = distinct !DISubprogram(name: "bmp_iter_next", scope: !729, file: !729, line: 382, type: !5117, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5119)
!5117 = !DISubroutineType(types: !5118)
!5118 = !{null, !5006, !2238}
!5119 = !{!5120, !5121}
!5120 = !DILocalVariable(name: "bi", arg: 1, scope: !5116, file: !729, line: 382, type: !5006)
!5121 = !DILocalVariable(name: "bit_no", arg: 2, scope: !5116, file: !729, line: 382, type: !2238)
!5122 = !DILocation(line: 0, scope: !5116)
!5123 = !DILocation(line: 384, column: 7, scope: !5116)
!5124 = !DILocation(line: 384, column: 12, scope: !5116)
!5125 = !DILocation(line: 385, column: 11, scope: !5116)
!5126 = !DILocation(line: 386, column: 1, scope: !5116)
!5127 = distinct !DISubprogram(name: "gsi_end_p", scope: !421, file: !421, line: 4467, type: !5128, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5130)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{!136, !4066}
!5130 = !{!5131}
!5131 = !DILocalVariable(name: "i", arg: 1, scope: !5127, file: !421, line: 4467, type: !4066)
!5132 = !DILocation(line: 4467, column: 33, scope: !5127)
!5133 = !DILocation(line: 4469, column: 12, scope: !5127)
!5134 = !DILocation(line: 4469, column: 16, scope: !5127)
!5135 = !DILocation(line: 4469, column: 10, scope: !5127)
!5136 = !DILocation(line: 4469, column: 3, scope: !5127)
!5137 = distinct !DISubprogram(name: "gsi_stmt", scope: !421, file: !421, line: 4501, type: !5138, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5140)
!5138 = !DISubroutineType(types: !5139)
!5139 = !{!1090, !4066}
!5140 = !{!5141}
!5141 = !DILocalVariable(name: "i", arg: 1, scope: !5137, file: !421, line: 4501, type: !4066)
!5142 = !DILocation(line: 4501, column: 32, scope: !5137)
!5143 = !DILocation(line: 4503, column: 12, scope: !5137)
!5144 = !DILocation(line: 4503, column: 17, scope: !5137)
!5145 = !DILocation(line: 4503, column: 3, scope: !5137)
!5146 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !5147, file: !5147, line: 434, type: !5148, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5151)
!5147 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5148 = !DISubroutineType(types: !5149)
!5149 = !{!788, !5150}
!5150 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !629, line: 27, baseType: !1124)
!5151 = !{!5152}
!5152 = !DILocalVariable(name: "def", arg: 1, scope: !5146, file: !5147, line: 434, type: !5150)
!5153 = !DILocation(line: 0, scope: !5146)
!5154 = !DILocation(line: 436, column: 10, scope: !5146)
!5155 = !DILocation(line: 436, column: 3, scope: !5146)
!5156 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !421, file: !421, line: 3080, type: !3840, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5157)
!5157 = !{!5158}
!5158 = !DILocalVariable(name: "gs", arg: 1, scope: !5156, file: !421, line: 3080, type: !1090)
!5159 = !DILocation(line: 0, scope: !5156)
!5160 = !DILocation(line: 3083, column: 26, scope: !5156)
!5161 = !DILocation(line: 3083, column: 3, scope: !5156)
!5162 = distinct !DISubprogram(name: "determine_biv_step", scope: !3, file: !3, line: 893, type: !5163, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5165)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{!788, !1090}
!5165 = !{!5166, !5167, !5168, !5169}
!5166 = !DILocalVariable(name: "phi", arg: 1, scope: !5162, file: !3, line: 893, type: !1090)
!5167 = !DILocalVariable(name: "loop", scope: !5162, file: !3, line: 895, type: !1305)
!5168 = !DILocalVariable(name: "name", scope: !5162, file: !3, line: 896, type: !788)
!5169 = !DILocalVariable(name: "iv", scope: !5162, file: !3, line: 897, type: !5170)
!5170 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_iv", file: !994, line: 651, baseType: !5171)
!5171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !994, line: 644, size: 192, elements: !5172)
!5172 = !{!5173, !5174, !5175}
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5171, file: !994, line: 647, baseType: !788, size: 64)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !5171, file: !994, line: 647, baseType: !788, size: 64, offset: 64)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "no_overflow", scope: !5171, file: !994, line: 650, baseType: !136, size: 8, offset: 128)
!5176 = !DILocation(line: 0, scope: !5162)
!5177 = !DILocation(line: 895, column: 23, scope: !5162)
!5178 = !DILocation(line: 895, column: 40, scope: !5162)
!5179 = !DILocation(line: 896, column: 15, scope: !5162)
!5180 = !DILocation(line: 897, column: 3, scope: !5162)
!5181 = !DILocation(line: 899, column: 8, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 899, column: 7)
!5183 = !DILocation(line: 899, column: 7, scope: !5162)
!5184 = !DILocation(line: 902, column: 8, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 902, column: 7)
!5186 = !DILocation(line: 902, column: 7, scope: !5162)
!5187 = !DILocation(line: 905, column: 28, scope: !5162)
!5188 = !DILocation(line: 905, column: 10, scope: !5162)
!5189 = !DILocation(line: 906, column: 1, scope: !5162)
!5190 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !5147, file: !5147, line: 427, type: !5191, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5193)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!788, !2201}
!5193 = !{!5194}
!5194 = !DILocalVariable(name: "use", arg: 1, scope: !5190, file: !5147, line: 427, type: !2201)
!5195 = !DILocation(line: 0, scope: !5190)
!5196 = !DILocation(line: 429, column: 17, scope: !5190)
!5197 = !DILocation(line: 429, column: 10, scope: !5190)
!5198 = !DILocation(line: 429, column: 3, scope: !5190)
!5199 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !5147, file: !5147, line: 442, type: !5200, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5202)
!5200 = !DISubroutineType(types: !5201)
!5201 = !{!2201, !1090, !659}
!5202 = !{!5203, !5204}
!5203 = !DILocalVariable(name: "gs", arg: 1, scope: !5199, file: !5147, line: 442, type: !1090)
!5204 = !DILocalVariable(name: "i", arg: 2, scope: !5199, file: !5147, line: 442, type: !659)
!5205 = !DILocation(line: 0, scope: !5199)
!5206 = !DILocation(line: 444, column: 11, scope: !5199)
!5207 = !DILocation(line: 444, column: 35, scope: !5199)
!5208 = !DILocation(line: 444, column: 3, scope: !5199)
!5209 = distinct !DISubprogram(name: "set_iv", scope: !3, file: !3, line: 854, type: !5210, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5212)
!5210 = !DISubroutineType(types: !5211)
!5211 = !{null, !2184, !788, !788, !788}
!5212 = !{!5213, !5214, !5215, !5216, !5217}
!5213 = !DILocalVariable(name: "data", arg: 1, scope: !5209, file: !3, line: 854, type: !2184)
!5214 = !DILocalVariable(name: "iv", arg: 2, scope: !5209, file: !3, line: 854, type: !788)
!5215 = !DILocalVariable(name: "base", arg: 3, scope: !5209, file: !3, line: 854, type: !788)
!5216 = !DILocalVariable(name: "step", arg: 4, scope: !5209, file: !3, line: 854, type: !788)
!5217 = !DILocalVariable(name: "info", scope: !5209, file: !3, line: 856, type: !2080)
!5218 = !DILocation(line: 0, scope: !5209)
!5219 = !DILocation(line: 856, column: 31, scope: !5209)
!5220 = !DILocation(line: 858, column: 3, scope: !5209)
!5221 = !DILocation(line: 860, column: 25, scope: !5209)
!5222 = !DILocation(line: 860, column: 35, scope: !5209)
!5223 = !DILocation(line: 860, column: 3, scope: !5209)
!5224 = !DILocation(line: 861, column: 14, scope: !5209)
!5225 = !DILocation(line: 861, column: 12, scope: !5209)
!5226 = !DILocation(line: 862, column: 13, scope: !5209)
!5227 = !DILocation(line: 862, column: 22, scope: !5209)
!5228 = !DILocation(line: 863, column: 1, scope: !5209)
!5229 = distinct !DISubprogram(name: "gsi_next", scope: !421, file: !421, line: 4485, type: !5230, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5233)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{null, !5232}
!5232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4066, size: 64)
!5233 = !{!5234}
!5234 = !DILocalVariable(name: "i", arg: 1, scope: !5229, file: !421, line: 4485, type: !5232)
!5235 = !DILocation(line: 0, scope: !5229)
!5236 = !DILocation(line: 4487, column: 15, scope: !5229)
!5237 = !DILocation(line: 4487, column: 20, scope: !5229)
!5238 = !DILocation(line: 4487, column: 10, scope: !5229)
!5239 = !DILocation(line: 4488, column: 1, scope: !5229)
!5240 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !421, file: !421, line: 3100, type: !5241, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5244)
!5241 = !DISubroutineType(types: !5242)
!5242 = !{!5243, !1090, !6}
!5243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!5244 = !{!5245, !5246}
!5245 = !DILocalVariable(name: "gs", arg: 1, scope: !5240, file: !421, line: 3100, type: !1090)
!5246 = !DILocalVariable(name: "index", arg: 2, scope: !5240, file: !421, line: 3100, type: !6)
!5247 = !DILocation(line: 0, scope: !5240)
!5248 = !DILocation(line: 3103, column: 3, scope: !5240)
!5249 = !DILocation(line: 3104, column: 12, scope: !5240)
!5250 = !DILocation(line: 3104, column: 3, scope: !5240)
!5251 = distinct !DISubprogram(name: "name_info", scope: !3, file: !3, line: 554, type: !5252, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5254)
!5252 = !DISubroutineType(types: !5253)
!5253 = !{!2080, !2184, !788}
!5254 = !{!5255, !5256}
!5255 = !DILocalVariable(name: "data", arg: 1, scope: !5251, file: !3, line: 554, type: !2184)
!5256 = !DILocalVariable(name: "name", arg: 2, scope: !5251, file: !3, line: 554, type: !788)
!5257 = !DILocation(line: 0, scope: !5251)
!5258 = !DILocation(line: 556, column: 26, scope: !5251)
!5259 = !DILocation(line: 556, column: 10, scope: !5251)
!5260 = !DILocation(line: 556, column: 3, scope: !5251)
!5261 = distinct !DISubprogram(name: "alloc_iv", scope: !3, file: !3, line: 835, type: !5262, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5264)
!5262 = !DISubroutineType(types: !5263)
!5263 = !{!2085, !788, !788}
!5264 = !{!5265, !5266, !5267}
!5265 = !DILocalVariable(name: "base", arg: 1, scope: !5261, file: !3, line: 835, type: !788)
!5266 = !DILocalVariable(name: "step", arg: 2, scope: !5261, file: !3, line: 835, type: !788)
!5267 = !DILocalVariable(name: "iv", scope: !5261, file: !3, line: 837, type: !2085)
!5268 = !DILocation(line: 0, scope: !5261)
!5269 = !DILocation(line: 837, column: 19, scope: !5261)
!5270 = !DILocation(line: 838, column: 3, scope: !5261)
!5271 = !DILocation(line: 840, column: 7, scope: !5261)
!5272 = !DILocation(line: 840, column: 12, scope: !5261)
!5273 = !DILocation(line: 841, column: 21, scope: !5261)
!5274 = !DILocation(line: 841, column: 7, scope: !5261)
!5275 = !DILocation(line: 841, column: 19, scope: !5261)
!5276 = !DILocation(line: 842, column: 7, scope: !5261)
!5277 = !DILocation(line: 842, column: 12, scope: !5261)
!5278 = !DILocation(line: 843, column: 7, scope: !5261)
!5279 = !DILocation(line: 843, column: 13, scope: !5261)
!5280 = !DILocation(line: 844, column: 7, scope: !5261)
!5281 = !DILocation(line: 844, column: 20, scope: !5261)
!5282 = !DILocation(line: 845, column: 7, scope: !5261)
!5283 = !DILocation(line: 845, column: 14, scope: !5261)
!5284 = !DILocation(line: 846, column: 7, scope: !5261)
!5285 = !DILocation(line: 846, column: 16, scope: !5261)
!5286 = !DILocation(line: 848, column: 3, scope: !5261)
!5287 = distinct !DISubprogram(name: "determine_base_object", scope: !3, file: !3, line: 786, type: !5288, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5290)
!5288 = !DISubroutineType(types: !5289)
!5289 = !{!788, !788}
!5290 = !{!5291, !5292, !5293, !5294}
!5291 = !DILocalVariable(name: "expr", arg: 1, scope: !5287, file: !3, line: 786, type: !788)
!5292 = !DILocalVariable(name: "code", scope: !5287, file: !3, line: 788, type: !159)
!5293 = !DILocalVariable(name: "base", scope: !5287, file: !3, line: 789, type: !788)
!5294 = !DILocalVariable(name: "obj", scope: !5287, file: !3, line: 789, type: !788)
!5295 = !DILocation(line: 795, column: 12, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 794, column: 7)
!5297 = !DILocation(line: 0, scope: !5287)
!5298 = !DILocation(line: 788, column: 25, scope: !5287)
!5299 = !DILocation(line: 794, column: 7, scope: !5296)
!5300 = !DILocation(line: 794, column: 7, scope: !5287)
!5301 = !DILocation(line: 797, column: 8, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 797, column: 7)
!5303 = !DILocation(line: 797, column: 7, scope: !5287)
!5304 = !DILocation(line: 800, column: 3, scope: !5287)
!5305 = !DILocation(line: 806, column: 13, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 801, column: 5)
!5307 = !DILocation(line: 807, column: 14, scope: !5306)
!5308 = !DILocation(line: 809, column: 12, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 809, column: 11)
!5310 = !DILocation(line: 809, column: 11, scope: !5306)
!5311 = !DILocation(line: 812, column: 11, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 812, column: 11)
!5313 = !DILocation(line: 812, column: 28, scope: !5312)
!5314 = !DILocation(line: 812, column: 11, scope: !5306)
!5315 = !DILocation(line: 813, column: 9, scope: !5312)
!5316 = !DILocation(line: 815, column: 14, scope: !5306)
!5317 = !DILocation(line: 815, column: 7, scope: !5306)
!5318 = !DILocation(line: 819, column: 14, scope: !5306)
!5319 = !DILocation(line: 824, column: 7, scope: !5306)
!5320 = !DILocation(line: 827, column: 14, scope: !5306)
!5321 = !DILocation(line: 827, column: 7, scope: !5306)
!5322 = !DILocation(line: 829, column: 1, scope: !5287)
!5323 = distinct !DISubprogram(name: "find_givs_in_bb", scope: !3, file: !3, line: 1035, type: !5324, scopeLine: 1036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5326)
!5324 = !DISubroutineType(types: !5325)
!5325 = !{null, !2184, !1053}
!5326 = !{!5327, !5328, !5329}
!5327 = !DILocalVariable(name: "data", arg: 1, scope: !5323, file: !3, line: 1035, type: !2184)
!5328 = !DILocalVariable(name: "bb", arg: 2, scope: !5323, file: !3, line: 1035, type: !1053)
!5329 = !DILocalVariable(name: "bsi", scope: !5323, file: !3, line: 1037, type: !4066)
!5330 = !DILocation(line: 0, scope: !5323)
!5331 = !DILocation(line: 1037, column: 3, scope: !5323)
!5332 = !DILocation(line: 1039, column: 14, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 1039, column: 3)
!5334 = !DILocation(line: 1039, column: 8, scope: !5333)
!5335 = !DILocation(line: 1039, column: 34, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 1039, column: 3)
!5337 = !DILocation(line: 1039, column: 33, scope: !5336)
!5338 = !DILocation(line: 1039, column: 3, scope: !5333)
!5339 = !DILocation(line: 1040, column: 30, scope: !5336)
!5340 = !DILocation(line: 1040, column: 5, scope: !5336)
!5341 = !DILocation(line: 1039, column: 51, scope: !5336)
!5342 = !DILocation(line: 1039, column: 3, scope: !5336)
!5343 = distinct !{!5343, !5338, !5344}
!5344 = !DILocation(line: 1040, column: 44, scope: !5333)
!5345 = !DILocation(line: 1041, column: 1, scope: !5323)
!5346 = distinct !DISubprogram(name: "gsi_start_bb", scope: !421, file: !421, line: 4418, type: !5347, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5349)
!5347 = !DISubroutineType(types: !5348)
!5348 = !{!4066, !1053}
!5349 = !{!5350, !5351, !5352}
!5350 = !DILocalVariable(name: "bb", arg: 1, scope: !5346, file: !421, line: 4418, type: !1053)
!5351 = !DILocalVariable(name: "i", scope: !5346, file: !421, line: 4420, type: !4066)
!5352 = !DILocalVariable(name: "seq", scope: !5346, file: !421, line: 4421, type: !1080)
!5353 = !DILocation(line: 0, scope: !5346)
!5354 = !DILocation(line: 4420, column: 24, scope: !5346)
!5355 = !DILocation(line: 4423, column: 9, scope: !5346)
!5356 = !DILocation(line: 4424, column: 11, scope: !5346)
!5357 = !DILocation(line: 4424, column: 5, scope: !5346)
!5358 = !DILocation(line: 4424, column: 9, scope: !5346)
!5359 = !DILocation(line: 4425, column: 5, scope: !5346)
!5360 = !DILocation(line: 4425, column: 9, scope: !5346)
!5361 = !DILocation(line: 4426, column: 5, scope: !5346)
!5362 = !DILocation(line: 4426, column: 8, scope: !5346)
!5363 = !DILocation(line: 4429, column: 1, scope: !5346)
!5364 = distinct !DISubprogram(name: "find_givs_in_stmt", scope: !3, file: !3, line: 1022, type: !5365, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5367)
!5365 = !DISubroutineType(types: !5366)
!5366 = !{null, !2184, !1090}
!5367 = !{!5368, !5369, !5370}
!5368 = !DILocalVariable(name: "data", arg: 1, scope: !5364, file: !3, line: 1022, type: !2184)
!5369 = !DILocalVariable(name: "stmt", arg: 2, scope: !5364, file: !3, line: 1022, type: !1090)
!5370 = !DILocalVariable(name: "iv", scope: !5364, file: !3, line: 1024, type: !5170)
!5371 = !DILocation(line: 0, scope: !5364)
!5372 = !DILocation(line: 1024, column: 3, scope: !5364)
!5373 = !DILocation(line: 1026, column: 8, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 1026, column: 7)
!5375 = !DILocation(line: 1026, column: 7, scope: !5364)
!5376 = !DILocation(line: 1029, column: 17, scope: !5364)
!5377 = !DILocation(line: 1029, column: 46, scope: !5364)
!5378 = !DILocation(line: 1029, column: 55, scope: !5364)
!5379 = !DILocation(line: 1029, column: 3, scope: !5364)
!5380 = !DILocation(line: 1030, column: 1, scope: !5364)
!5381 = distinct !DISubprogram(name: "bb_seq", scope: !421, file: !421, line: 237, type: !5382, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5387)
!5382 = !DISubroutineType(types: !5383)
!5383 = !{!1080, !5384}
!5384 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !674, line: 112, baseType: !5385)
!5385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5386, size: 64)
!5386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1055)
!5387 = !{!5388}
!5388 = !DILocalVariable(name: "bb", arg: 1, scope: !5381, file: !421, line: 237, type: !5384)
!5389 = !DILocation(line: 0, scope: !5381)
!5390 = !DILocation(line: 239, column: 17, scope: !5381)
!5391 = !DILocation(line: 239, column: 23, scope: !5381)
!5392 = !DILocation(line: 239, column: 33, scope: !5381)
!5393 = !DILocation(line: 239, column: 43, scope: !5381)
!5394 = !DILocation(line: 239, column: 36, scope: !5381)
!5395 = !DILocation(line: 239, column: 10, scope: !5381)
!5396 = !DILocation(line: 239, column: 68, scope: !5381)
!5397 = !DILocation(line: 239, column: 3, scope: !5381)
!5398 = distinct !DISubprogram(name: "gimple_seq_first", scope: !421, file: !421, line: 159, type: !5399, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5404)
!5399 = !DISubroutineType(types: !5400)
!5400 = !{!1085, !5401}
!5401 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !674, line: 67, baseType: !5402)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1082)
!5404 = !{!5405}
!5405 = !DILocalVariable(name: "s", arg: 1, scope: !5398, file: !421, line: 159, type: !5401)
!5406 = !DILocation(line: 0, scope: !5398)
!5407 = !DILocation(line: 161, column: 10, scope: !5398)
!5408 = !DILocation(line: 161, column: 17, scope: !5398)
!5409 = !DILocation(line: 161, column: 3, scope: !5398)
!5410 = distinct !DISubprogram(name: "find_givs_in_stmt_scev", scope: !3, file: !3, line: 993, type: !5411, scopeLine: 994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5414)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{!136, !2184, !1090, !5413}
!5413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5170, size: 64)
!5414 = !{!5415, !5416, !5417, !5418, !5419}
!5415 = !DILocalVariable(name: "data", arg: 1, scope: !5410, file: !3, line: 993, type: !2184)
!5416 = !DILocalVariable(name: "stmt", arg: 2, scope: !5410, file: !3, line: 993, type: !1090)
!5417 = !DILocalVariable(name: "iv", arg: 3, scope: !5410, file: !3, line: 993, type: !5413)
!5418 = !DILocalVariable(name: "lhs", scope: !5410, file: !3, line: 995, type: !788)
!5419 = !DILocalVariable(name: "loop", scope: !5410, file: !3, line: 996, type: !1305)
!5420 = !DILocation(line: 0, scope: !5410)
!5421 = !DILocation(line: 996, column: 29, scope: !5410)
!5422 = !DILocation(line: 998, column: 7, scope: !5410)
!5423 = !DILocation(line: 998, column: 12, scope: !5410)
!5424 = !DILocation(line: 999, column: 7, scope: !5410)
!5425 = !DILocation(line: 999, column: 12, scope: !5410)
!5426 = !DILocation(line: 1001, column: 7, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 1001, column: 7)
!5428 = !DILocation(line: 1001, column: 26, scope: !5427)
!5429 = !DILocation(line: 1001, column: 7, scope: !5410)
!5430 = !DILocation(line: 1004, column: 9, scope: !5410)
!5431 = !DILocation(line: 1005, column: 7, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 1005, column: 7)
!5433 = !DILocation(line: 1005, column: 23, scope: !5432)
!5434 = !DILocation(line: 1005, column: 7, scope: !5410)
!5435 = !DILocation(line: 1008, column: 25, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 1008, column: 7)
!5437 = !DILocation(line: 1008, column: 8, scope: !5436)
!5438 = !DILocation(line: 1008, column: 7, scope: !5410)
!5439 = !DILocation(line: 1010, column: 44, scope: !5410)
!5440 = !DILocation(line: 1010, column: 14, scope: !5410)
!5441 = !DILocation(line: 1010, column: 12, scope: !5410)
!5442 = !DILocation(line: 1012, column: 7, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 1012, column: 7)
!5444 = !DILocation(line: 1013, column: 7, scope: !5443)
!5445 = !DILocation(line: 1013, column: 44, scope: !5443)
!5446 = !DILocation(line: 1013, column: 10, scope: !5443)
!5447 = !DILocation(line: 1012, column: 7, scope: !5410)
!5448 = !DILocation(line: 1017, column: 1, scope: !5410)
!5449 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !421, file: !421, line: 1694, type: !5450, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5452)
!5450 = !DISubroutineType(types: !5451)
!5451 = !{!788, !3194}
!5452 = !{!5453}
!5453 = !DILocalVariable(name: "gs", arg: 1, scope: !5449, file: !421, line: 1694, type: !3194)
!5454 = !DILocation(line: 0, scope: !5449)
!5455 = !DILocation(line: 1697, column: 10, scope: !5449)
!5456 = !DILocation(line: 1697, column: 3, scope: !5449)
!5457 = distinct !DISubprogram(name: "loop_containing_stmt", scope: !5147, file: !5147, line: 617, type: !5458, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5460)
!5458 = !DISubroutineType(types: !5459)
!5459 = !{!1305, !1090}
!5460 = !{!5461, !5462}
!5461 = !DILocalVariable(name: "stmt", arg: 1, scope: !5457, file: !5147, line: 617, type: !1090)
!5462 = !DILocalVariable(name: "bb", scope: !5457, file: !5147, line: 619, type: !1053)
!5463 = !DILocation(line: 0, scope: !5457)
!5464 = !DILocation(line: 619, column: 20, scope: !5457)
!5465 = !DILocation(line: 620, column: 8, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5457, file: !5147, line: 620, column: 7)
!5467 = !DILocation(line: 620, column: 7, scope: !5457)
!5468 = !DILocation(line: 623, column: 14, scope: !5457)
!5469 = !DILocation(line: 623, column: 3, scope: !5457)
!5470 = !DILocation(line: 624, column: 1, scope: !5457)
!5471 = distinct !DISubprogram(name: "get_iv", scope: !3, file: !3, line: 868, type: !5472, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5474)
!5472 = !DISubroutineType(types: !5473)
!5473 = !{!2085, !2184, !788}
!5474 = !{!5475, !5476, !5477, !5478}
!5475 = !DILocalVariable(name: "data", arg: 1, scope: !5471, file: !3, line: 868, type: !2184)
!5476 = !DILocalVariable(name: "var", arg: 2, scope: !5471, file: !3, line: 868, type: !788)
!5477 = !DILocalVariable(name: "bb", scope: !5471, file: !3, line: 870, type: !1053)
!5478 = !DILocalVariable(name: "type", scope: !5471, file: !3, line: 871, type: !788)
!5479 = !DILocation(line: 0, scope: !5471)
!5480 = !DILocation(line: 871, column: 15, scope: !5471)
!5481 = !DILocation(line: 873, column: 8, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 873, column: 7)
!5483 = !DILocation(line: 874, column: 7, scope: !5482)
!5484 = !DILocation(line: 874, column: 11, scope: !5482)
!5485 = !DILocation(line: 873, column: 7, scope: !5471)
!5486 = !DILocation(line: 877, column: 8, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 877, column: 7)
!5488 = !DILocation(line: 877, column: 31, scope: !5487)
!5489 = !DILocation(line: 877, column: 7, scope: !5471)
!5490 = !DILocation(line: 879, column: 23, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5487, file: !3, line: 878, column: 5)
!5492 = !DILocation(line: 879, column: 12, scope: !5491)
!5493 = !DILocation(line: 881, column: 12, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 881, column: 11)
!5495 = !DILocation(line: 882, column: 4, scope: !5494)
!5496 = !DILocation(line: 882, column: 37, scope: !5494)
!5497 = !DILocation(line: 882, column: 8, scope: !5494)
!5498 = !DILocation(line: 881, column: 11, scope: !5491)
!5499 = !DILocation(line: 883, column: 26, scope: !5494)
!5500 = !DILocation(line: 883, column: 2, scope: !5494)
!5501 = !DILocation(line: 886, column: 10, scope: !5471)
!5502 = !DILocation(line: 886, column: 33, scope: !5471)
!5503 = !DILocation(line: 886, column: 3, scope: !5471)
!5504 = !DILocation(line: 887, column: 1, scope: !5471)
!5505 = distinct !DISubprogram(name: "niter_for_exit", scope: !3, file: !3, line: 713, type: !5506, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5508)
!5506 = !DISubroutineType(types: !5507)
!5507 = !{!788, !2184, !1070}
!5508 = !{!5509, !5510, !5511, !5521, !5522}
!5509 = !DILocalVariable(name: "data", arg: 1, scope: !5505, file: !3, line: 713, type: !2184)
!5510 = !DILocalVariable(name: "exit", arg: 2, scope: !5505, file: !3, line: 713, type: !1070)
!5511 = !DILocalVariable(name: "desc", scope: !5505, file: !3, line: 715, type: !5512)
!5512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_niter_desc", file: !994, line: 657, size: 640, elements: !5513)
!5513 = !{!5514, !5515, !5516, !5517, !5518, !5519, !5520}
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "assumptions", scope: !5512, file: !994, line: 659, baseType: !788, size: 64)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "may_be_zero", scope: !5512, file: !994, line: 663, baseType: !788, size: 64, offset: 64)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "niter", scope: !5512, file: !994, line: 667, baseType: !788, size: 64, offset: 128)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5512, file: !994, line: 671, baseType: !836, size: 128, offset: 192)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !5512, file: !994, line: 679, baseType: !5170, size: 192, offset: 320)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !5512, file: !994, line: 680, baseType: !788, size: 64, offset: 512)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "cmp", scope: !5512, file: !994, line: 681, baseType: !159, size: 32, offset: 576)
!5521 = !DILocalVariable(name: "niter", scope: !5505, file: !3, line: 716, type: !788)
!5522 = !DILocalVariable(name: "slot", scope: !5505, file: !3, line: 717, type: !1445)
!5523 = !DILocation(line: 0, scope: !5505)
!5524 = !DILocation(line: 715, column: 3, scope: !5505)
!5525 = !DILocation(line: 719, column: 14, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 719, column: 7)
!5527 = !DILocation(line: 719, column: 8, scope: !5526)
!5528 = !DILocation(line: 719, column: 7, scope: !5505)
!5529 = !DILocation(line: 721, column: 22, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 720, column: 5)
!5531 = !DILocation(line: 721, column: 20, scope: !5530)
!5532 = !DILocation(line: 723, column: 5, scope: !5530)
!5533 = !DILocation(line: 725, column: 48, scope: !5526)
!5534 = !DILocation(line: 725, column: 12, scope: !5526)
!5535 = !DILocation(line: 0, scope: !5526)
!5536 = !DILocation(line: 727, column: 8, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 727, column: 7)
!5538 = !DILocation(line: 727, column: 7, scope: !5505)
!5539 = !DILocation(line: 734, column: 44, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5541, file: !3, line: 734, column: 11)
!5541 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 728, column: 5)
!5542 = !DILocation(line: 734, column: 11, scope: !5540)
!5543 = !DILocation(line: 736, column: 4, scope: !5540)
!5544 = !DILocation(line: 736, column: 27, scope: !5540)
!5545 = !DILocation(line: 736, column: 7, scope: !5540)
!5546 = !DILocation(line: 737, column: 9, scope: !5540)
!5547 = !DILocation(line: 737, column: 48, scope: !5540)
!5548 = !DILocation(line: 737, column: 13, scope: !5540)
!5549 = !DILocation(line: 734, column: 11, scope: !5541)
!5550 = !DILocation(line: 738, column: 15, scope: !5540)
!5551 = !DILocation(line: 738, column: 2, scope: !5540)
!5552 = !DILocation(line: 0, scope: !5540)
!5553 = !DILocation(line: 742, column: 34, scope: !5541)
!5554 = !DILocation(line: 742, column: 42, scope: !5541)
!5555 = !DILocation(line: 742, column: 8, scope: !5541)
!5556 = !DILocation(line: 742, column: 48, scope: !5541)
!5557 = !DILocation(line: 743, column: 5, scope: !5541)
!5558 = !DILocation(line: 745, column: 20, scope: !5537)
!5559 = !DILocation(line: 0, scope: !5537)
!5560 = !DILocation(line: 748, column: 1, scope: !5505)
!5561 = !DILocation(line: 747, column: 3, scope: !5505)
!5562 = distinct !DISubprogram(name: "ei_start_1", scope: !149, file: !149, line: 696, type: !5563, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5565)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{!4080, !4085}
!5565 = !{!5566, !5567}
!5566 = !DILocalVariable(name: "ev", arg: 1, scope: !5562, file: !149, line: 696, type: !4085)
!5567 = !DILocalVariable(name: "i", scope: !5562, file: !149, line: 698, type: !4080)
!5568 = !DILocation(line: 0, scope: !5562)
!5569 = !DILocation(line: 700, column: 5, scope: !5562)
!5570 = !DILocation(line: 700, column: 11, scope: !5562)
!5571 = !DILocation(line: 701, column: 5, scope: !5562)
!5572 = !DILocation(line: 701, column: 15, scope: !5562)
!5573 = !DILocation(line: 703, column: 3, scope: !5562)
!5574 = distinct !DISubprogram(name: "ei_cond", scope: !149, file: !149, line: 771, type: !5575, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5578)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{!136, !4080, !5577}
!5577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!5578 = !{!5579, !5580}
!5579 = !DILocalVariable(name: "ei", arg: 1, scope: !5574, file: !149, line: 771, type: !4080)
!5580 = !DILocalVariable(name: "p", arg: 2, scope: !5574, file: !149, line: 771, type: !5577)
!5581 = !DILocation(line: 0, scope: !5574)
!5582 = !DILocation(line: 773, column: 8, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5574, file: !149, line: 773, column: 7)
!5584 = !DILocation(line: 773, column: 7, scope: !5574)
!5585 = !DILocation(line: 775, column: 12, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5583, file: !149, line: 774, column: 5)
!5587 = !DILocation(line: 776, column: 7, scope: !5586)
!5588 = !DILocation(line: 781, column: 7, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5583, file: !149, line: 779, column: 5)
!5590 = !DILocation(line: 0, scope: !5583)
!5591 = !DILocation(line: 783, column: 1, scope: !5574)
!5592 = distinct !DISubprogram(name: "find_interesting_uses_outside", scope: !3, file: !3, line: 1816, type: !5593, scopeLine: 1817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5595)
!5593 = !DISubroutineType(types: !5594)
!5594 = !{null, !2184, !1070}
!5595 = !{!5596, !5597, !5598, !5599, !5600}
!5596 = !DILocalVariable(name: "data", arg: 1, scope: !5592, file: !3, line: 1816, type: !2184)
!5597 = !DILocalVariable(name: "exit", arg: 2, scope: !5592, file: !3, line: 1816, type: !1070)
!5598 = !DILocalVariable(name: "phi", scope: !5592, file: !3, line: 1818, type: !1090)
!5599 = !DILocalVariable(name: "psi", scope: !5592, file: !3, line: 1819, type: !4066)
!5600 = !DILocalVariable(name: "def", scope: !5592, file: !3, line: 1820, type: !788)
!5601 = !DILocation(line: 0, scope: !5592)
!5602 = !DILocation(line: 1819, column: 3, scope: !5592)
!5603 = !DILocation(line: 1822, column: 14, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 1822, column: 3)
!5605 = !DILocation(line: 1822, column: 36, scope: !5604)
!5606 = !DILocation(line: 0, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1823, column: 5)
!5608 = distinct !DILexicalBlock(scope: !5604, file: !3, line: 1822, column: 3)
!5609 = !DILocation(line: 1822, column: 8, scope: !5604)
!5610 = !DILocation(line: 1822, column: 44, scope: !5608)
!5611 = !DILocation(line: 1822, column: 43, scope: !5608)
!5612 = !DILocation(line: 1822, column: 3, scope: !5604)
!5613 = !DILocation(line: 1824, column: 13, scope: !5607)
!5614 = !DILocation(line: 1825, column: 13, scope: !5607)
!5615 = !DILocation(line: 1826, column: 11, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 1826, column: 11)
!5617 = !DILocation(line: 1826, column: 11, scope: !5607)
!5618 = !DILocation(line: 1827, column: 2, scope: !5616)
!5619 = !DILocation(line: 1822, column: 61, scope: !5608)
!5620 = !DILocation(line: 1822, column: 3, scope: !5608)
!5621 = distinct !{!5621, !5612, !5622}
!5622 = !DILocation(line: 1828, column: 5, scope: !5604)
!5623 = !DILocation(line: 1829, column: 1, scope: !5592)
!5624 = distinct !DISubprogram(name: "ei_next", scope: !149, file: !149, line: 736, type: !5625, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5628)
!5625 = !DISubroutineType(types: !5626)
!5626 = !{null, !5627}
!5627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4080, size: 64)
!5628 = !{!5629}
!5629 = !DILocalVariable(name: "i", arg: 1, scope: !5624, file: !149, line: 736, type: !5627)
!5630 = !DILocation(line: 0, scope: !5624)
!5631 = !DILocation(line: 738, column: 3, scope: !5624)
!5632 = !DILocation(line: 739, column: 11, scope: !5624)
!5633 = !DILocation(line: 740, column: 1, scope: !5624)
!5634 = distinct !DISubprogram(name: "find_interesting_uses_stmt", scope: !3, file: !3, line: 1727, type: !5365, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5635)
!5635 = !{!5636, !5637, !5638, !5639, !5640, !5641, !5642, !5655, !5656}
!5636 = !DILocalVariable(name: "data", arg: 1, scope: !5634, file: !3, line: 1727, type: !2184)
!5637 = !DILocalVariable(name: "stmt", arg: 2, scope: !5634, file: !3, line: 1727, type: !1090)
!5638 = !DILocalVariable(name: "iv", scope: !5634, file: !3, line: 1729, type: !2085)
!5639 = !DILocalVariable(name: "op", scope: !5634, file: !3, line: 1730, type: !788)
!5640 = !DILocalVariable(name: "lhs", scope: !5634, file: !3, line: 1730, type: !1124)
!5641 = !DILocalVariable(name: "rhs", scope: !5634, file: !3, line: 1730, type: !1124)
!5642 = !DILocalVariable(name: "iter", scope: !5634, file: !3, line: 1731, type: !5643)
!5643 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !629, line: 140, baseType: !5644)
!5644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !629, line: 131, size: 320, elements: !5645)
!5645 = !{!5646, !5647, !5648, !5650, !5652, !5653, !5654}
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5644, file: !629, line: 133, baseType: !136, size: 8)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !5644, file: !629, line: 134, baseType: !628, size: 32, offset: 32)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !5644, file: !629, line: 135, baseType: !5649, size: 64, offset: 64)
!5649 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !629, line: 42, baseType: !1119)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !5644, file: !629, line: 136, baseType: !5651, size: 64, offset: 128)
!5651 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !629, line: 50, baseType: !1126)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !5644, file: !629, line: 137, baseType: !659, size: 32, offset: 192)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !5644, file: !629, line: 138, baseType: !659, size: 32, offset: 224)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !5644, file: !629, line: 139, baseType: !1090, size: 64, offset: 256)
!5655 = !DILocalVariable(name: "use_p", scope: !5634, file: !3, line: 1732, type: !2201)
!5656 = !DILocalVariable(name: "code", scope: !5634, file: !3, line: 1733, type: !159)
!5657 = !DILocation(line: 0, scope: !5634)
!5658 = !DILocation(line: 1731, column: 3, scope: !5634)
!5659 = !DILocation(line: 1735, column: 3, scope: !5634)
!5660 = !DILocation(line: 1737, column: 7, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1737, column: 7)
!5662 = !DILocation(line: 1737, column: 26, scope: !5661)
!5663 = !DILocation(line: 1737, column: 7, scope: !5634)
!5664 = !DILocation(line: 1739, column: 7, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 1738, column: 5)
!5666 = !DILocation(line: 1740, column: 7, scope: !5665)
!5667 = !DILocation(line: 1743, column: 7, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1743, column: 7)
!5669 = !DILocation(line: 1743, column: 7, scope: !5634)
!5670 = !DILocation(line: 1745, column: 13, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 1744, column: 5)
!5672 = !DILocation(line: 1746, column: 13, scope: !5671)
!5673 = !DILocation(line: 1748, column: 11, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 1748, column: 11)
!5675 = !DILocation(line: 1748, column: 28, scope: !5674)
!5676 = !DILocation(line: 1748, column: 11, scope: !5671)
!5677 = !DILocation(line: 1753, column: 9, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 1749, column: 2)
!5679 = !DILocation(line: 1755, column: 8, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 1755, column: 8)
!5681 = !DILocation(line: 1755, column: 11, scope: !5680)
!5682 = !DILocation(line: 1755, column: 34, scope: !5680)
!5683 = !DILocation(line: 1755, column: 15, scope: !5680)
!5684 = !DILocation(line: 1755, column: 8, scope: !5678)
!5685 = !DILocation(line: 1759, column: 14, scope: !5671)
!5686 = !DILocation(line: 1760, column: 11, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 1760, column: 11)
!5688 = !DILocation(line: 1760, column: 39, scope: !5687)
!5689 = !DILocation(line: 1761, column: 4, scope: !5687)
!5690 = !DILocation(line: 1761, column: 8, scope: !5687)
!5691 = !DILocation(line: 1762, column: 8, scope: !5687)
!5692 = !DILocation(line: 1762, column: 11, scope: !5687)
!5693 = !DILocation(line: 1760, column: 11, scope: !5671)
!5694 = !DILocation(line: 1764, column: 8, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 1764, column: 8)
!5696 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 1763, column: 2)
!5697 = !DILocation(line: 0, scope: !5695)
!5698 = !DILocation(line: 1764, column: 8, scope: !5696)
!5699 = !DILocation(line: 1765, column: 6, scope: !5695)
!5700 = !DILocation(line: 1767, column: 6, scope: !5695)
!5701 = !DILocation(line: 1769, column: 8, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 1769, column: 8)
!5703 = !DILocation(line: 1769, column: 8, scope: !5696)
!5704 = !DILocation(line: 1770, column: 6, scope: !5702)
!5705 = !DILocation(line: 1773, column: 16, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 1773, column: 16)
!5707 = !DILocation(line: 1773, column: 39, scope: !5706)
!5708 = !DILocation(line: 1773, column: 16, scope: !5687)
!5709 = !DILocation(line: 1775, column: 4, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1774, column: 2)
!5711 = !DILocation(line: 1776, column: 4, scope: !5710)
!5712 = !DILocation(line: 1788, column: 7, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1788, column: 7)
!5714 = !DILocation(line: 1788, column: 26, scope: !5713)
!5715 = !DILocation(line: 1789, column: 7, scope: !5713)
!5716 = !DILocation(line: 1789, column: 10, scope: !5713)
!5717 = !DILocation(line: 1789, column: 36, scope: !5713)
!5718 = !DILocation(line: 1789, column: 50, scope: !5713)
!5719 = !DILocation(line: 1789, column: 27, scope: !5713)
!5720 = !DILocation(line: 1788, column: 7, scope: !5634)
!5721 = !DILocation(line: 1791, column: 26, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 1790, column: 5)
!5723 = !DILocation(line: 1791, column: 12, scope: !5722)
!5724 = !DILocation(line: 1793, column: 11, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 1793, column: 11)
!5726 = !DILocation(line: 1793, column: 14, scope: !5725)
!5727 = !DILocation(line: 1793, column: 37, scope: !5725)
!5728 = !DILocation(line: 1793, column: 18, scope: !5725)
!5729 = !DILocation(line: 1793, column: 11, scope: !5722)
!5730 = !DILocation(line: 1797, column: 3, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1797, column: 3)
!5732 = !DILocation(line: 0, scope: !5731)
!5733 = !DILocation(line: 1797, column: 3, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1797, column: 3)
!5735 = !DILocation(line: 1799, column: 12, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5734, file: !3, line: 1798, column: 5)
!5737 = !DILocation(line: 1801, column: 11, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 1801, column: 11)
!5739 = !DILocation(line: 1801, column: 26, scope: !5738)
!5740 = !DILocation(line: 1801, column: 11, scope: !5736)
!5741 = !DILocation(line: 1804, column: 12, scope: !5736)
!5742 = !DILocation(line: 1805, column: 12, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 1805, column: 11)
!5744 = !DILocation(line: 1805, column: 11, scope: !5736)
!5745 = !DILocation(line: 1808, column: 7, scope: !5736)
!5746 = !DILocation(line: 1809, column: 5, scope: !5736)
!5747 = distinct !{!5747, !5730, !5748}
!5748 = !DILocation(line: 1809, column: 5, scope: !5731)
!5749 = !DILocation(line: 1810, column: 1, scope: !5634)
!5750 = distinct !DISubprogram(name: "is_gimple_debug", scope: !421, file: !421, line: 3249, type: !3828, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5751)
!5751 = !{!5752}
!5752 = !DILocalVariable(name: "gs", arg: 1, scope: !5750, file: !421, line: 3249, type: !3194)
!5753 = !DILocation(line: 0, scope: !5750)
!5754 = !DILocation(line: 3251, column: 10, scope: !5750)
!5755 = !DILocation(line: 3251, column: 27, scope: !5750)
!5756 = !DILocation(line: 3251, column: 3, scope: !5750)
!5757 = distinct !DISubprogram(name: "ei_end_p", scope: !149, file: !149, line: 721, type: !5758, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5760)
!5758 = !DISubroutineType(types: !5759)
!5759 = !{!136, !4080}
!5760 = !{!5761}
!5761 = !DILocalVariable(name: "i", arg: 1, scope: !5757, file: !149, line: 721, type: !4080)
!5762 = !DILocation(line: 723, column: 22, scope: !5757)
!5763 = !DILocation(line: 723, column: 19, scope: !5757)
!5764 = !DILocation(line: 723, column: 10, scope: !5757)
!5765 = !DILocation(line: 723, column: 3, scope: !5757)
!5766 = distinct !DISubprogram(name: "ei_edge", scope: !149, file: !149, line: 752, type: !5767, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5769)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{!1070, !4080}
!5769 = !{!5770}
!5770 = !DILocalVariable(name: "i", arg: 1, scope: !5766, file: !149, line: 752, type: !4080)
!5771 = !DILocation(line: 754, column: 10, scope: !5766)
!5772 = !DILocation(line: 754, column: 3, scope: !5766)
!5773 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !149, file: !149, line: 150, type: !5774, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5778)
!5774 = !DISubroutineType(types: !5775)
!5775 = !{!6, !5776}
!5776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5777, size: 64)
!5777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!5778 = !{!5779}
!5779 = !DILocalVariable(name: "vec_", arg: 1, scope: !5773, file: !149, line: 150, type: !5776)
!5780 = !DILocation(line: 0, scope: !5773)
!5781 = !DILocation(line: 150, column: 1, scope: !5773)
!5782 = distinct !DISubprogram(name: "ei_container", scope: !149, file: !149, line: 685, type: !5783, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5785)
!5783 = !DISubroutineType(types: !5784)
!5784 = !{!1058, !4080}
!5785 = !{!5786}
!5786 = !DILocalVariable(name: "i", arg: 1, scope: !5782, file: !149, line: 685, type: !4080)
!5787 = !DILocation(line: 687, column: 3, scope: !5782)
!5788 = !DILocation(line: 688, column: 10, scope: !5782)
!5789 = !DILocation(line: 688, column: 3, scope: !5782)
!5790 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !149, file: !149, line: 150, type: !5791, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5793)
!5791 = !DISubroutineType(types: !5792)
!5792 = !{!1070, !5776, !6}
!5793 = !{!5794, !5795}
!5794 = !DILocalVariable(name: "vec_", arg: 1, scope: !5790, file: !149, line: 150, type: !5776)
!5795 = !DILocalVariable(name: "ix_", arg: 2, scope: !5790, file: !149, line: 150, type: !6)
!5796 = !DILocation(line: 0, scope: !5790)
!5797 = !DILocation(line: 150, column: 1, scope: !5790)
!5798 = distinct !DISubprogram(name: "find_interesting_uses_op", scope: !3, file: !3, line: 1152, type: !5799, scopeLine: 1153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5801)
!5799 = !DISubroutineType(types: !5800)
!5800 = !{!2111, !2184, !788}
!5801 = !{!5802, !5803, !5804, !5805, !5806, !5807}
!5802 = !DILocalVariable(name: "data", arg: 1, scope: !5798, file: !3, line: 1152, type: !2184)
!5803 = !DILocalVariable(name: "op", arg: 2, scope: !5798, file: !3, line: 1152, type: !788)
!5804 = !DILocalVariable(name: "iv", scope: !5798, file: !3, line: 1154, type: !2085)
!5805 = !DILocalVariable(name: "civ", scope: !5798, file: !3, line: 1155, type: !2085)
!5806 = !DILocalVariable(name: "stmt", scope: !5798, file: !3, line: 1156, type: !1090)
!5807 = !DILocalVariable(name: "use", scope: !5798, file: !3, line: 1157, type: !2111)
!5808 = !DILocation(line: 0, scope: !5798)
!5809 = !DILocation(line: 1159, column: 7, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1159, column: 7)
!5811 = !DILocation(line: 1159, column: 22, scope: !5810)
!5812 = !DILocation(line: 1159, column: 7, scope: !5798)
!5813 = !DILocation(line: 1162, column: 8, scope: !5798)
!5814 = !DILocation(line: 1163, column: 8, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1163, column: 7)
!5816 = !DILocation(line: 1163, column: 7, scope: !5798)
!5817 = !DILocation(line: 1166, column: 11, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1166, column: 7)
!5819 = !DILocation(line: 1166, column: 7, scope: !5818)
!5820 = !DILocation(line: 1166, column: 7, scope: !5798)
!5821 = !DILocation(line: 1168, column: 31, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 1167, column: 5)
!5823 = !DILocation(line: 1168, column: 13, scope: !5822)
!5824 = !DILocation(line: 1170, column: 7, scope: !5822)
!5825 = !DILocation(line: 1174, column: 26, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1174, column: 7)
!5827 = !DILocation(line: 1174, column: 7, scope: !5826)
!5828 = !DILocation(line: 1174, column: 7, scope: !5798)
!5829 = !DILocation(line: 1176, column: 7, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 1175, column: 5)
!5831 = !DILocation(line: 1177, column: 7, scope: !5830)
!5832 = !DILocation(line: 1179, column: 20, scope: !5798)
!5833 = !DILocation(line: 1181, column: 9, scope: !5798)
!5834 = !DILocation(line: 1182, column: 10, scope: !5798)
!5835 = !DILocation(line: 1184, column: 10, scope: !5798)
!5836 = !DILocation(line: 1185, column: 3, scope: !5798)
!5837 = !DILocation(line: 1188, column: 9, scope: !5798)
!5838 = !DILocation(line: 1189, column: 21, scope: !5798)
!5839 = !DILocation(line: 1189, column: 7, scope: !5798)
!5840 = !DILocation(line: 1189, column: 14, scope: !5798)
!5841 = !DILocation(line: 1191, column: 3, scope: !5798)
!5842 = !DILocation(line: 1192, column: 1, scope: !5798)
!5843 = distinct !DISubprogram(name: "record_invariant", scope: !3, file: !3, line: 1127, type: !5844, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5846)
!5844 = !DISubroutineType(types: !5845)
!5845 = !{null, !2184, !788, !136}
!5846 = !{!5847, !5848, !5849, !5850, !5851}
!5847 = !DILocalVariable(name: "data", arg: 1, scope: !5843, file: !3, line: 1127, type: !2184)
!5848 = !DILocalVariable(name: "op", arg: 2, scope: !5843, file: !3, line: 1127, type: !788)
!5849 = !DILocalVariable(name: "nonlinear_use", arg: 3, scope: !5843, file: !3, line: 1127, type: !136)
!5850 = !DILocalVariable(name: "bb", scope: !5843, file: !3, line: 1129, type: !1053)
!5851 = !DILocalVariable(name: "info", scope: !5843, file: !3, line: 1130, type: !2080)
!5852 = !DILocation(line: 0, scope: !5843)
!5853 = !DILocation(line: 1132, column: 7, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 1132, column: 7)
!5855 = !DILocation(line: 1132, column: 22, scope: !5854)
!5856 = !DILocation(line: 1133, column: 7, scope: !5854)
!5857 = !DILocation(line: 1133, column: 11, scope: !5854)
!5858 = !DILocation(line: 1132, column: 7, scope: !5843)
!5859 = !DILocation(line: 1136, column: 19, scope: !5843)
!5860 = !DILocation(line: 1136, column: 8, scope: !5843)
!5861 = !DILocation(line: 1137, column: 7, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 1137, column: 7)
!5863 = !DILocation(line: 1138, column: 7, scope: !5862)
!5864 = !DILocation(line: 1138, column: 39, scope: !5862)
!5865 = !DILocation(line: 1138, column: 10, scope: !5862)
!5866 = !DILocation(line: 1137, column: 7, scope: !5843)
!5867 = !DILocation(line: 1141, column: 10, scope: !5843)
!5868 = !DILocation(line: 1142, column: 9, scope: !5843)
!5869 = !DILocation(line: 1142, column: 14, scope: !5843)
!5870 = !DILocation(line: 1143, column: 9, scope: !5843)
!5871 = !DILocation(line: 1143, column: 24, scope: !5843)
!5872 = !DILocation(line: 1144, column: 14, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 1144, column: 7)
!5874 = !DILocation(line: 1144, column: 8, scope: !5873)
!5875 = !DILocation(line: 1144, column: 7, scope: !5843)
!5876 = !DILocation(line: 1145, column: 28, scope: !5873)
!5877 = !DILocation(line: 1145, column: 20, scope: !5873)
!5878 = !DILocation(line: 1145, column: 18, scope: !5873)
!5879 = !DILocation(line: 1145, column: 5, scope: !5873)
!5880 = !DILocation(line: 1146, column: 25, scope: !5843)
!5881 = !DILocation(line: 1146, column: 35, scope: !5843)
!5882 = !DILocation(line: 1146, column: 3, scope: !5843)
!5883 = !DILocation(line: 1147, column: 1, scope: !5843)
!5884 = distinct !DISubprogram(name: "is_gimple_assign", scope: !421, file: !421, line: 1677, type: !3828, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5885)
!5885 = !{!5886}
!5886 = !DILocalVariable(name: "gs", arg: 1, scope: !5884, file: !421, line: 1677, type: !3194)
!5887 = !DILocation(line: 0, scope: !5884)
!5888 = !DILocation(line: 1679, column: 10, scope: !5884)
!5889 = !DILocation(line: 1679, column: 27, scope: !5884)
!5890 = !DILocation(line: 1679, column: 3, scope: !5884)
!5891 = distinct !DISubprogram(name: "record_use", scope: !3, file: !3, line: 1098, type: !5892, scopeLine: 1100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5894)
!5892 = !DISubroutineType(types: !5893)
!5893 = !{!2111, !2184, !1124, !2085, !1090, !395}
!5894 = !{!5895, !5896, !5897, !5898, !5899, !5900}
!5895 = !DILocalVariable(name: "data", arg: 1, scope: !5891, file: !3, line: 1098, type: !2184)
!5896 = !DILocalVariable(name: "use_p", arg: 2, scope: !5891, file: !3, line: 1098, type: !1124)
!5897 = !DILocalVariable(name: "iv", arg: 3, scope: !5891, file: !3, line: 1098, type: !2085)
!5898 = !DILocalVariable(name: "stmt", arg: 4, scope: !5891, file: !3, line: 1099, type: !1090)
!5899 = !DILocalVariable(name: "use_type", arg: 5, scope: !5891, file: !3, line: 1099, type: !395)
!5900 = !DILocalVariable(name: "use", scope: !5891, file: !3, line: 1101, type: !2111)
!5901 = !DILocation(line: 0, scope: !5891)
!5902 = !DILocation(line: 1101, column: 24, scope: !5891)
!5903 = !DILocation(line: 1103, column: 13, scope: !5891)
!5904 = !DILocation(line: 1103, column: 8, scope: !5891)
!5905 = !DILocation(line: 1103, column: 11, scope: !5891)
!5906 = !DILocation(line: 1104, column: 8, scope: !5891)
!5907 = !DILocation(line: 1104, column: 13, scope: !5891)
!5908 = !DILocation(line: 1105, column: 8, scope: !5891)
!5909 = !DILocation(line: 1105, column: 11, scope: !5891)
!5910 = !DILocation(line: 1106, column: 8, scope: !5891)
!5911 = !DILocation(line: 1106, column: 13, scope: !5891)
!5912 = !DILocation(line: 1107, column: 8, scope: !5891)
!5913 = !DILocation(line: 1107, column: 13, scope: !5891)
!5914 = !DILocation(line: 1108, column: 24, scope: !5891)
!5915 = !DILocation(line: 1108, column: 8, scope: !5891)
!5916 = !DILocation(line: 1108, column: 22, scope: !5891)
!5917 = !DILocation(line: 1112, column: 7, scope: !5891)
!5918 = !DILocation(line: 1112, column: 16, scope: !5891)
!5919 = !DILocation(line: 1114, column: 7, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1114, column: 7)
!5921 = !DILocation(line: 1114, column: 17, scope: !5920)
!5922 = !DILocation(line: 1114, column: 21, scope: !5920)
!5923 = !DILocation(line: 1114, column: 32, scope: !5920)
!5924 = !DILocation(line: 1114, column: 7, scope: !5891)
!5925 = !DILocation(line: 1115, column: 5, scope: !5920)
!5926 = !DILocation(line: 1117, column: 3, scope: !5891)
!5927 = !DILocation(line: 1119, column: 3, scope: !5891)
!5928 = distinct !DISubprogram(name: "VEC_iv_use_p_heap_safe_push", scope: !3, file: !3, line: 216, type: !5929, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5933)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{!5931, !5932, !2110}
!5931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!5932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!5933 = !{!5934, !5935}
!5934 = !DILocalVariable(name: "vec_", arg: 1, scope: !5928, file: !3, line: 216, type: !5932)
!5935 = !DILocalVariable(name: "obj_", arg: 2, scope: !5928, file: !3, line: 216, type: !2110)
!5936 = !DILocation(line: 0, scope: !5928)
!5937 = !DILocation(line: 216, column: 1, scope: !5928)
!5938 = distinct !DISubprogram(name: "VEC_iv_use_p_heap_reserve", scope: !3, file: !3, line: 216, type: !5939, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5941)
!5939 = !DISubroutineType(types: !5940)
!5940 = !{!659, !5932, !659}
!5941 = !{!5942, !5943, !5944}
!5942 = !DILocalVariable(name: "vec_", arg: 1, scope: !5938, file: !3, line: 216, type: !5932)
!5943 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5938, file: !3, line: 216, type: !659)
!5944 = !DILocalVariable(name: "extend", scope: !5938, file: !3, line: 216, type: !659)
!5945 = !DILocation(line: 0, scope: !5938)
!5946 = !DILocation(line: 216, column: 1, scope: !5938)
!5947 = !DILocation(line: 216, column: 1, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 216, column: 1)
!5949 = distinct !DISubprogram(name: "VEC_iv_use_p_base_quick_push", scope: !3, file: !3, line: 215, type: !5950, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5953)
!5950 = !DISubroutineType(types: !5951)
!5951 = !{!5931, !5952, !2110}
!5952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!5953 = !{!5954, !5955, !5956}
!5954 = !DILocalVariable(name: "vec_", arg: 1, scope: !5949, file: !3, line: 215, type: !5952)
!5955 = !DILocalVariable(name: "obj_", arg: 2, scope: !5949, file: !3, line: 215, type: !2110)
!5956 = !DILocalVariable(name: "slot_", scope: !5949, file: !3, line: 215, type: !5931)
!5957 = !DILocation(line: 0, scope: !5949)
!5958 = !DILocation(line: 215, column: 1, scope: !5949)
!5959 = distinct !DISubprogram(name: "VEC_iv_use_p_base_space", scope: !3, file: !3, line: 215, type: !5960, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5962)
!5960 = !DISubroutineType(types: !5961)
!5961 = !{!659, !5952, !659}
!5962 = !{!5963, !5964}
!5963 = !DILocalVariable(name: "vec_", arg: 1, scope: !5959, file: !3, line: 215, type: !5952)
!5964 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5959, file: !3, line: 215, type: !659)
!5965 = !DILocation(line: 0, scope: !5959)
!5966 = !DILocation(line: 215, column: 1, scope: !5959)
!5967 = distinct !DISubprogram(name: "find_invariants_stmt", scope: !3, file: !3, line: 1711, type: !5365, scopeLine: 1712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5968)
!5968 = !{!5969, !5970, !5971, !5972, !5973}
!5969 = !DILocalVariable(name: "data", arg: 1, scope: !5967, file: !3, line: 1711, type: !2184)
!5970 = !DILocalVariable(name: "stmt", arg: 2, scope: !5967, file: !3, line: 1711, type: !1090)
!5971 = !DILocalVariable(name: "iter", scope: !5967, file: !3, line: 1713, type: !5643)
!5972 = !DILocalVariable(name: "use_p", scope: !5967, file: !3, line: 1714, type: !2201)
!5973 = !DILocalVariable(name: "op", scope: !5967, file: !3, line: 1715, type: !788)
!5974 = !DILocation(line: 0, scope: !5967)
!5975 = !DILocation(line: 1713, column: 3, scope: !5967)
!5976 = !DILocation(line: 1717, column: 3, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1717, column: 3)
!5978 = !DILocation(line: 0, scope: !5977)
!5979 = !DILocation(line: 1717, column: 3, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 1717, column: 3)
!5981 = !DILocation(line: 1719, column: 12, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1718, column: 5)
!5983 = !DILocation(line: 1720, column: 7, scope: !5982)
!5984 = distinct !{!5984, !5976, !5985}
!5985 = !DILocation(line: 1721, column: 5, scope: !5977)
!5986 = !DILocation(line: 1722, column: 1, scope: !5967)
!5987 = distinct !DISubprogram(name: "find_interesting_uses_cond", scope: !3, file: !3, line: 1263, type: !5365, scopeLine: 1264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !5988)
!5988 = !{!5989, !5990, !5991, !5992, !5993, !5994}
!5989 = !DILocalVariable(name: "data", arg: 1, scope: !5987, file: !3, line: 1263, type: !2184)
!5990 = !DILocalVariable(name: "stmt", arg: 2, scope: !5987, file: !3, line: 1263, type: !1090)
!5991 = !DILocalVariable(name: "var_p", scope: !5987, file: !3, line: 1265, type: !1124)
!5992 = !DILocalVariable(name: "bound_p", scope: !5987, file: !3, line: 1265, type: !1124)
!5993 = !DILocalVariable(name: "var_iv", scope: !5987, file: !3, line: 1266, type: !2085)
!5994 = !DILocalVariable(name: "civ", scope: !5987, file: !3, line: 1266, type: !2085)
!5995 = !DILocation(line: 0, scope: !5987)
!5996 = !DILocation(line: 1265, column: 3, scope: !5987)
!5997 = !DILocation(line: 1266, column: 3, scope: !5987)
!5998 = !DILocation(line: 1268, column: 8, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 1268, column: 7)
!6000 = !DILocation(line: 1268, column: 7, scope: !5987)
!6001 = !DILocation(line: 1270, column: 40, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 1269, column: 5)
!6003 = !DILocation(line: 1270, column: 39, scope: !6002)
!6004 = !DILocation(line: 1270, column: 7, scope: !6002)
!6005 = !DILocation(line: 1271, column: 40, scope: !6002)
!6006 = !DILocation(line: 1271, column: 39, scope: !6002)
!6007 = !DILocation(line: 1271, column: 7, scope: !6002)
!6008 = !DILocation(line: 1272, column: 7, scope: !6002)
!6009 = !DILocation(line: 1275, column: 9, scope: !5987)
!6010 = !DILocation(line: 1276, column: 11, scope: !5987)
!6011 = !DILocation(line: 1276, column: 10, scope: !5987)
!6012 = !DILocation(line: 1277, column: 3, scope: !5987)
!6013 = !DILocation(line: 1278, column: 1, scope: !5987)
!6014 = distinct !DISubprogram(name: "gimple_assign_lhs_ptr", scope: !421, file: !421, line: 1704, type: !6015, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6017)
!6015 = !DISubroutineType(types: !6016)
!6016 = !{!1124, !3194}
!6017 = !{!6018}
!6018 = !DILocalVariable(name: "gs", arg: 1, scope: !6014, file: !421, line: 1704, type: !3194)
!6019 = !DILocation(line: 0, scope: !6014)
!6020 = !DILocation(line: 1707, column: 10, scope: !6014)
!6021 = !DILocation(line: 1707, column: 3, scope: !6014)
!6022 = distinct !DISubprogram(name: "gimple_assign_rhs1_ptr", scope: !421, file: !421, line: 1738, type: !6015, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6023)
!6023 = !{!6024}
!6024 = !DILocalVariable(name: "gs", arg: 1, scope: !6022, file: !421, line: 1738, type: !3194)
!6025 = !DILocation(line: 0, scope: !6022)
!6026 = !DILocation(line: 1741, column: 10, scope: !6022)
!6027 = !DILocation(line: 1741, column: 3, scope: !6022)
!6028 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !421, file: !421, line: 1815, type: !6029, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6031)
!6029 = !DISubroutineType(types: !6030)
!6030 = !{!159, !3194}
!6031 = !{!6032, !6033}
!6032 = !DILocalVariable(name: "gs", arg: 1, scope: !6028, file: !421, line: 1815, type: !3194)
!6033 = !DILocalVariable(name: "code", scope: !6028, file: !421, line: 1817, type: !159)
!6034 = !DILocation(line: 0, scope: !6028)
!6035 = !DILocation(line: 1820, column: 10, scope: !6028)
!6036 = !DILocation(line: 1821, column: 7, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6028, file: !421, line: 1821, column: 7)
!6038 = !DILocation(line: 1821, column: 35, scope: !6037)
!6039 = !DILocation(line: 1821, column: 7, scope: !6028)
!6040 = !DILocation(line: 1822, column: 12, scope: !6037)
!6041 = !DILocation(line: 1822, column: 5, scope: !6037)
!6042 = !DILocation(line: 1824, column: 3, scope: !6028)
!6043 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !421, file: !421, line: 1686, type: !6044, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6046)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{!635, !159}
!6046 = !{!6047}
!6047 = !DILocalVariable(name: "code", arg: 1, scope: !6043, file: !421, line: 1686, type: !159)
!6048 = !DILocation(line: 0, scope: !6043)
!6049 = !DILocation(line: 1688, column: 34, scope: !6043)
!6050 = !DILocation(line: 1688, column: 10, scope: !6043)
!6051 = !DILocation(line: 1688, column: 3, scope: !6043)
!6052 = distinct !DISubprogram(name: "find_interesting_uses_address", scope: !3, file: !3, line: 1603, type: !6053, scopeLine: 1604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6055)
!6053 = !DISubroutineType(types: !6054)
!6054 = !{null, !2184, !1090, !1124}
!6055 = !{!6056, !6057, !6058, !6059, !6060, !6061, !6062, !6063, !6066, !6067, !6071, !6074}
!6056 = !DILocalVariable(name: "data", arg: 1, scope: !6052, file: !3, line: 1603, type: !2184)
!6057 = !DILocalVariable(name: "stmt", arg: 2, scope: !6052, file: !3, line: 1603, type: !1090)
!6058 = !DILocalVariable(name: "op_p", arg: 3, scope: !6052, file: !3, line: 1603, type: !1124)
!6059 = !DILocalVariable(name: "base", scope: !6052, file: !3, line: 1605, type: !788)
!6060 = !DILocalVariable(name: "step", scope: !6052, file: !3, line: 1605, type: !788)
!6061 = !DILocalVariable(name: "civ", scope: !6052, file: !3, line: 1606, type: !2085)
!6062 = !DILocalVariable(name: "ifs_ivopts_data", scope: !6052, file: !3, line: 1607, type: !2181)
!6063 = !DILocalVariable(name: "type", scope: !6064, file: !3, line: 1623, type: !788)
!6064 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 1622, column: 5)
!6065 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 1621, column: 7)
!6066 = !DILocalVariable(name: "astep", scope: !6064, file: !3, line: 1624, type: !788)
!6067 = !DILocalVariable(name: "ref", scope: !6068, file: !3, line: 1688, type: !1124)
!6068 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 1687, column: 2)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1686, column: 11)
!6070 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 1660, column: 5)
!6071 = !DILocalVariable(name: "tem", scope: !6072, file: !3, line: 1693, type: !788)
!6072 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 1692, column: 6)
!6073 = distinct !DILexicalBlock(scope: !6068, file: !3, line: 1691, column: 8)
!6074 = !DILabel(scope: !6052, name: "fail", file: !3, line: 1704)
!6075 = !DILocation(line: 0, scope: !6052)
!6076 = !DILocation(line: 1605, column: 3, scope: !6052)
!6077 = !DILocation(line: 1605, column: 15, scope: !6052)
!6078 = !DILocation(line: 1605, column: 8, scope: !6052)
!6079 = !DILocation(line: 1605, column: 44, scope: !6052)
!6080 = !DILocation(line: 1605, column: 29, scope: !6052)
!6081 = !DILocation(line: 1607, column: 3, scope: !6052)
!6082 = !DILocation(line: 1611, column: 7, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 1611, column: 7)
!6084 = !DILocation(line: 1611, column: 7, scope: !6052)
!6085 = !DILocation(line: 1616, column: 7, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 1616, column: 7)
!6087 = !DILocation(line: 1616, column: 24, scope: !6086)
!6088 = !DILocation(line: 1616, column: 7, scope: !6052)
!6089 = !DILocation(line: 1619, column: 10, scope: !6052)
!6090 = !DILocation(line: 1619, column: 8, scope: !6052)
!6091 = !DILocation(line: 1621, column: 7, scope: !6065)
!6092 = !DILocation(line: 1621, column: 24, scope: !6065)
!6093 = !DILocation(line: 1621, column: 7, scope: !6052)
!6094 = !DILocation(line: 1623, column: 39, scope: !6064)
!6095 = !DILocation(line: 1623, column: 19, scope: !6064)
!6096 = !DILocation(line: 0, scope: !6064)
!6097 = !DILocation(line: 1626, column: 11, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1626, column: 11)
!6099 = !DILocation(line: 1627, column: 4, scope: !6098)
!6100 = !DILocation(line: 1627, column: 7, scope: !6098)
!6101 = !DILocation(line: 1627, column: 35, scope: !6098)
!6102 = !DILocation(line: 1626, column: 11, scope: !6064)
!6103 = !DILocation(line: 1629, column: 10, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 1628, column: 2)
!6105 = !DILocation(line: 1630, column: 9, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 1630, column: 8)
!6107 = !DILocation(line: 1630, column: 8, scope: !6104)
!6108 = !DILocation(line: 1633, column: 27, scope: !6104)
!6109 = !DILocation(line: 1633, column: 20, scope: !6104)
!6110 = !DILocation(line: 1634, column: 16, scope: !6104)
!6111 = !DILocation(line: 1635, column: 2, scope: !6104)
!6112 = !DILocation(line: 1636, column: 11, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1636, column: 11)
!6114 = !DILocation(line: 1637, column: 4, scope: !6113)
!6115 = !DILocation(line: 1637, column: 7, scope: !6113)
!6116 = !DILocation(line: 1637, column: 36, scope: !6113)
!6117 = !DILocation(line: 1636, column: 11, scope: !6064)
!6118 = !DILocation(line: 1639, column: 10, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 1638, column: 2)
!6120 = !DILocation(line: 1640, column: 9, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 1640, column: 8)
!6122 = !DILocation(line: 1640, column: 8, scope: !6119)
!6123 = !DILocation(line: 1643, column: 28, scope: !6119)
!6124 = !DILocation(line: 1643, column: 21, scope: !6119)
!6125 = !DILocation(line: 1644, column: 17, scope: !6119)
!6126 = !DILocation(line: 1646, column: 8, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 1646, column: 8)
!6128 = !DILocation(line: 1646, column: 8, scope: !6119)
!6129 = !DILocation(line: 1648, column: 12, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 1648, column: 12)
!6131 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 1647, column: 6)
!6132 = !DILocation(line: 1648, column: 12, scope: !6131)
!6133 = !DILocation(line: 1649, column: 11, scope: !6130)
!6134 = !DILocation(line: 1649, column: 3, scope: !6130)
!6135 = !DILocation(line: 0, scope: !6119)
!6136 = !DILocation(line: 1651, column: 15, scope: !6131)
!6137 = !DILocation(line: 1652, column: 6, scope: !6131)
!6138 = !DILocation(line: 1655, column: 11, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1655, column: 11)
!6140 = !DILocation(line: 1655, column: 11, scope: !6064)
!6141 = !DILocation(line: 1657, column: 14, scope: !6064)
!6142 = !DILocation(line: 1657, column: 12, scope: !6064)
!6143 = !DILocation(line: 1658, column: 5, scope: !6065)
!6144 = !DILocation(line: 1661, column: 23, scope: !6070)
!6145 = !DILocation(line: 1661, column: 35, scope: !6070)
!6146 = !DILocation(line: 1662, column: 23, scope: !6070)
!6147 = !DILocation(line: 1662, column: 28, scope: !6070)
!6148 = !DILocation(line: 1663, column: 45, scope: !6070)
!6149 = !DILocation(line: 1663, column: 30, scope: !6070)
!6150 = !DILocation(line: 1663, column: 23, scope: !6070)
!6151 = !DILocation(line: 1663, column: 28, scope: !6070)
!6152 = !DILocation(line: 1664, column: 12, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1664, column: 11)
!6154 = !DILocation(line: 1665, column: 4, scope: !6153)
!6155 = !DILocation(line: 1665, column: 38, scope: !6153)
!6156 = !DILocation(line: 1665, column: 7, scope: !6153)
!6157 = !DILocation(line: 1664, column: 11, scope: !6070)
!6158 = !DILocation(line: 1667, column: 30, scope: !6070)
!6159 = !DILocation(line: 1669, column: 7, scope: !6070)
!6160 = !DILocation(line: 1670, column: 7, scope: !6070)
!6161 = !DILocation(line: 1674, column: 36, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1674, column: 11)
!6163 = !DILocation(line: 1674, column: 11, scope: !6162)
!6164 = !DILocation(line: 1674, column: 11, scope: !6070)
!6165 = !DILocation(line: 1682, column: 14, scope: !6070)
!6166 = !DILocation(line: 1682, column: 12, scope: !6070)
!6167 = !DILocation(line: 1686, column: 11, scope: !6069)
!6168 = !DILocation(line: 1686, column: 28, scope: !6069)
!6169 = !DILocation(line: 1686, column: 11, scope: !6070)
!6170 = !DILocation(line: 0, scope: !6068)
!6171 = !DILocation(line: 1689, column: 4, scope: !6068)
!6172 = !DILocation(line: 1689, column: 32, scope: !6068)
!6173 = !DILocation(line: 1689, column: 11, scope: !6068)
!6174 = distinct !{!6174, !6171, !6175}
!6175 = !DILocation(line: 1690, column: 13, scope: !6068)
!6176 = !DILocation(line: 1691, column: 8, scope: !6073)
!6177 = !DILocation(line: 1691, column: 25, scope: !6073)
!6178 = !DILocation(line: 1691, column: 8, scope: !6068)
!6179 = !DILocation(line: 1693, column: 45, scope: !6072)
!6180 = !DILocation(line: 1693, column: 19, scope: !6072)
!6181 = !DILocation(line: 0, scope: !6072)
!6182 = !DILocation(line: 1694, column: 12, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 1694, column: 12)
!6184 = !DILocation(line: 1694, column: 12, scope: !6072)
!6185 = !DILocation(line: 1695, column: 8, scope: !6183)
!6186 = !DILocation(line: 1695, column: 3, scope: !6183)
!6187 = !DILocation(line: 0, scope: !6065)
!6188 = !DILocation(line: 1700, column: 19, scope: !6052)
!6189 = !DILocation(line: 1700, column: 9, scope: !6052)
!6190 = !DILocation(line: 1701, column: 3, scope: !6052)
!6191 = !DILocation(line: 1702, column: 3, scope: !6052)
!6192 = !DILocation(line: 1704, column: 1, scope: !6052)
!6193 = !DILocation(line: 1705, column: 41, scope: !6052)
!6194 = !DILocation(line: 1705, column: 3, scope: !6052)
!6195 = !DILocation(line: 1706, column: 1, scope: !6052)
!6196 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !5147, file: !5147, line: 910, type: !6197, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6200)
!6197 = !DISubroutineType(types: !6198)
!6198 = !{!2201, !6199, !1090, !659}
!6199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5643, size: 64)
!6200 = !{!6201, !6202, !6203, !6204, !6205}
!6201 = !DILocalVariable(name: "ptr", arg: 1, scope: !6196, file: !5147, line: 910, type: !6199)
!6202 = !DILocalVariable(name: "phi", arg: 2, scope: !6196, file: !5147, line: 910, type: !1090)
!6203 = !DILocalVariable(name: "flags", arg: 3, scope: !6196, file: !5147, line: 910, type: !659)
!6204 = !DILocalVariable(name: "phi_def", scope: !6196, file: !5147, line: 912, type: !788)
!6205 = !DILocalVariable(name: "comp", scope: !6196, file: !5147, line: 913, type: !659)
!6206 = !DILocation(line: 0, scope: !6196)
!6207 = !DILocation(line: 912, column: 18, scope: !6196)
!6208 = !DILocation(line: 915, column: 3, scope: !6196)
!6209 = !DILocation(line: 916, column: 8, scope: !6196)
!6210 = !DILocation(line: 916, column: 13, scope: !6196)
!6211 = !DILocation(line: 920, column: 11, scope: !6196)
!6212 = !DILocation(line: 923, column: 7, scope: !6196)
!6213 = !DILocation(line: 925, column: 17, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6215, file: !5147, line: 924, column: 5)
!6215 = distinct !DILexicalBlock(scope: !6196, file: !5147, line: 923, column: 7)
!6216 = !DILocation(line: 926, column: 7, scope: !6214)
!6217 = !DILocation(line: 929, column: 8, scope: !6196)
!6218 = !DILocation(line: 929, column: 17, scope: !6196)
!6219 = !DILocation(line: 930, column: 18, scope: !6196)
!6220 = !DILocation(line: 930, column: 8, scope: !6196)
!6221 = !DILocation(line: 930, column: 16, scope: !6196)
!6222 = !DILocation(line: 931, column: 8, scope: !6196)
!6223 = !DILocation(line: 931, column: 18, scope: !6196)
!6224 = !DILocation(line: 932, column: 10, scope: !6196)
!6225 = !DILocation(line: 932, column: 3, scope: !6196)
!6226 = !DILocation(line: 933, column: 1, scope: !6196)
!6227 = distinct !DISubprogram(name: "op_iter_init_use", scope: !5147, file: !5147, line: 768, type: !6197, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6228)
!6228 = !{!6229, !6230, !6231}
!6229 = !DILocalVariable(name: "ptr", arg: 1, scope: !6227, file: !5147, line: 768, type: !6199)
!6230 = !DILocalVariable(name: "stmt", arg: 2, scope: !6227, file: !5147, line: 768, type: !1090)
!6231 = !DILocalVariable(name: "flags", arg: 3, scope: !6227, file: !5147, line: 768, type: !659)
!6232 = !DILocation(line: 0, scope: !6227)
!6233 = !DILocation(line: 772, column: 3, scope: !6227)
!6234 = !DILocation(line: 773, column: 8, scope: !6227)
!6235 = !DILocation(line: 773, column: 18, scope: !6227)
!6236 = !DILocation(line: 774, column: 10, scope: !6227)
!6237 = !DILocation(line: 774, column: 3, scope: !6227)
!6238 = distinct !DISubprogram(name: "op_iter_done", scope: !5147, file: !5147, line: 652, type: !6239, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6243)
!6239 = !DISubroutineType(types: !6240)
!6240 = !{!136, !6241}
!6241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6242, size: 64)
!6242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5643)
!6243 = !{!6244}
!6244 = !DILocalVariable(name: "ptr", arg: 1, scope: !6238, file: !5147, line: 652, type: !6241)
!6245 = !DILocation(line: 0, scope: !6238)
!6246 = !DILocation(line: 654, column: 15, scope: !6238)
!6247 = !DILocation(line: 654, column: 3, scope: !6238)
!6248 = distinct !DISubprogram(name: "op_iter_next_use", scope: !5147, file: !5147, line: 659, type: !6249, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6251)
!6249 = !DISubroutineType(types: !6250)
!6250 = !{!2201, !6199}
!6251 = !{!6252, !6253}
!6252 = !DILocalVariable(name: "ptr", arg: 1, scope: !6248, file: !5147, line: 659, type: !6199)
!6253 = !DILocalVariable(name: "use_p", scope: !6248, file: !5147, line: 661, type: !2201)
!6254 = !DILocation(line: 0, scope: !6248)
!6255 = !DILocation(line: 665, column: 12, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6248, file: !5147, line: 665, column: 7)
!6257 = !DILocation(line: 665, column: 7, scope: !6256)
!6258 = !DILocation(line: 665, column: 7, scope: !6248)
!6259 = !DILocation(line: 667, column: 15, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6256, file: !5147, line: 666, column: 5)
!6261 = !DILocation(line: 668, column: 30, scope: !6260)
!6262 = !DILocation(line: 668, column: 17, scope: !6260)
!6263 = !DILocation(line: 669, column: 7, scope: !6260)
!6264 = !DILocation(line: 671, column: 12, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6248, file: !5147, line: 671, column: 7)
!6266 = !DILocation(line: 671, column: 25, scope: !6265)
!6267 = !DILocation(line: 671, column: 18, scope: !6265)
!6268 = !DILocation(line: 671, column: 7, scope: !6248)
!6269 = !DILocation(line: 673, column: 14, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6265, file: !5147, line: 672, column: 5)
!6271 = !DILocation(line: 673, column: 7, scope: !6270)
!6272 = !DILocation(line: 675, column: 8, scope: !6248)
!6273 = !DILocation(line: 675, column: 13, scope: !6248)
!6274 = !DILocation(line: 676, column: 3, scope: !6248)
!6275 = !DILocation(line: 677, column: 1, scope: !6248)
!6276 = !DILocation(line: 0, scope: !2276)
!6277 = !DILocation(line: 1214, column: 7, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 1214, column: 7)
!6279 = !DILocation(line: 1214, column: 26, scope: !6278)
!6280 = !DILocation(line: 1214, column: 7, scope: !2276)
!6281 = !DILocation(line: 1216, column: 13, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 1215, column: 5)
!6283 = !DILocation(line: 1217, column: 13, scope: !6282)
!6284 = !DILocation(line: 1218, column: 5, scope: !6282)
!6285 = !DILocation(line: 1221, column: 13, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 1220, column: 5)
!6287 = !DILocation(line: 1222, column: 13, scope: !6286)
!6288 = !DILocation(line: 0, scope: !6278)
!6289 = !DILocation(line: 1225, column: 10, scope: !2276)
!6290 = !DILocation(line: 1225, column: 8, scope: !2276)
!6291 = !DILocation(line: 1226, column: 17, scope: !2276)
!6292 = !DILocation(line: 1228, column: 7, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 1228, column: 7)
!6294 = !DILocation(line: 1228, column: 24, scope: !6293)
!6295 = !DILocation(line: 1228, column: 7, scope: !2276)
!6296 = !DILocation(line: 1229, column: 11, scope: !6293)
!6297 = !DILocation(line: 1229, column: 5, scope: !6293)
!6298 = !DILocation(line: 1230, column: 7, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 1230, column: 7)
!6300 = !DILocation(line: 1230, column: 24, scope: !6299)
!6301 = !DILocation(line: 1230, column: 7, scope: !2276)
!6302 = !DILocation(line: 1231, column: 11, scope: !6299)
!6303 = !DILocation(line: 1231, column: 5, scope: !6299)
!6304 = !DILocation(line: 1235, column: 8, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 1235, column: 7)
!6306 = !DILocation(line: 1235, column: 16, scope: !6305)
!6307 = !DILocation(line: 1235, column: 12, scope: !6305)
!6308 = !DILocation(line: 1238, column: 27, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 1238, column: 7)
!6310 = !DILocation(line: 1238, column: 7, scope: !6309)
!6311 = !DILocation(line: 1238, column: 7, scope: !2276)
!6312 = !DILocation(line: 1244, column: 30, scope: !2276)
!6313 = !DILocation(line: 1244, column: 10, scope: !2276)
!6314 = !DILocation(line: 1244, column: 36, scope: !2276)
!6315 = !DILocation(line: 1244, column: 59, scope: !2276)
!6316 = !DILocation(line: 1244, column: 39, scope: !2276)
!6317 = !DILocation(line: 1244, column: 3, scope: !2276)
!6318 = !DILocation(line: 1246, column: 1, scope: !2276)
!6319 = !DILocation(line: 1247, column: 7, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 1247, column: 7)
!6321 = !DILocation(line: 1247, column: 7, scope: !2276)
!6322 = !DILocation(line: 1248, column: 18, scope: !6320)
!6323 = !DILocation(line: 1248, column: 5, scope: !6320)
!6324 = !DILocation(line: 1249, column: 7, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 1249, column: 7)
!6326 = !DILocation(line: 1249, column: 7, scope: !2276)
!6327 = !DILocation(line: 1250, column: 13, scope: !6325)
!6328 = !DILocation(line: 1250, column: 5, scope: !6325)
!6329 = !DILocation(line: 1251, column: 7, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 1251, column: 7)
!6331 = !DILocation(line: 1251, column: 7, scope: !2276)
!6332 = !DILocation(line: 1252, column: 12, scope: !6330)
!6333 = !DILocation(line: 1252, column: 5, scope: !6330)
!6334 = !DILocation(line: 1253, column: 7, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 1253, column: 7)
!6336 = !DILocation(line: 1253, column: 7, scope: !2276)
!6337 = !DILocation(line: 1254, column: 15, scope: !6335)
!6338 = !DILocation(line: 1254, column: 5, scope: !6335)
!6339 = !DILocation(line: 1256, column: 3, scope: !2276)
!6340 = distinct !DISubprogram(name: "gimple_cond_lhs_ptr", scope: !421, file: !421, line: 2251, type: !6015, scopeLine: 2252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6341)
!6341 = !{!6342}
!6342 = !DILocalVariable(name: "gs", arg: 1, scope: !6340, file: !421, line: 2251, type: !3194)
!6343 = !DILocation(line: 0, scope: !6340)
!6344 = !DILocation(line: 2254, column: 10, scope: !6340)
!6345 = !DILocation(line: 2254, column: 3, scope: !6340)
!6346 = distinct !DISubprogram(name: "gimple_cond_rhs_ptr", scope: !421, file: !421, line: 2281, type: !6015, scopeLine: 2282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6347)
!6347 = !{!6348}
!6348 = !DILocalVariable(name: "gs", arg: 1, scope: !6346, file: !421, line: 2281, type: !3194)
!6349 = !DILocation(line: 0, scope: !6346)
!6350 = !DILocation(line: 2284, column: 10, scope: !6346)
!6351 = !DILocation(line: 2284, column: 3, scope: !6346)
!6352 = distinct !DISubprogram(name: "gimple_assign_rhs2_ptr", scope: !421, file: !421, line: 1774, type: !6015, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6353)
!6353 = !{!6354}
!6354 = !DILocalVariable(name: "gs", arg: 1, scope: !6352, file: !421, line: 1774, type: !3194)
!6355 = !DILocation(line: 0, scope: !6352)
!6356 = !DILocation(line: 1777, column: 10, scope: !6352)
!6357 = !DILocation(line: 1777, column: 3, scope: !6352)
!6358 = distinct !DISubprogram(name: "gimple_op_ptr", scope: !421, file: !421, line: 1647, type: !6359, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6361)
!6359 = !DISubroutineType(types: !6360)
!6360 = !{!1124, !3194, !6}
!6361 = !{!6362, !6363}
!6362 = !DILocalVariable(name: "gs", arg: 1, scope: !6358, file: !421, line: 1647, type: !3194)
!6363 = !DILocalVariable(name: "i", arg: 2, scope: !6358, file: !421, line: 1647, type: !6)
!6364 = !DILocation(line: 0, scope: !6358)
!6365 = !DILocation(line: 1649, column: 7, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6358, file: !421, line: 1649, column: 7)
!6367 = !DILocation(line: 1649, column: 7, scope: !6358)
!6368 = !DILocation(line: 1654, column: 14, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6366, file: !421, line: 1650, column: 5)
!6370 = !DILocation(line: 1654, column: 50, scope: !6369)
!6371 = !DILocation(line: 1654, column: 7, scope: !6369)
!6372 = !DILocation(line: 0, scope: !6366)
!6373 = !DILocation(line: 1658, column: 1, scope: !6358)
!6374 = distinct !DISubprogram(name: "gimple_expr_code", scope: !421, file: !421, line: 1438, type: !6029, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6375)
!6375 = !{!6376, !6377}
!6376 = !DILocalVariable(name: "stmt", arg: 1, scope: !6374, file: !421, line: 1438, type: !3194)
!6377 = !DILocalVariable(name: "code", scope: !6374, file: !421, line: 1440, type: !420)
!6378 = !DILocation(line: 0, scope: !6374)
!6379 = !DILocation(line: 1440, column: 27, scope: !6374)
!6380 = !DILocation(line: 1441, column: 29, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6374, file: !421, line: 1441, column: 7)
!6382 = !DILocation(line: 1442, column: 42, scope: !6381)
!6383 = !DILocation(line: 1442, column: 5, scope: !6381)
!6384 = !DILocation(line: 1446, column: 5, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6381, file: !421, line: 1443, column: 12)
!6386 = !DILocation(line: 1448, column: 5, scope: !6374)
!6387 = !DILocation(line: 1450, column: 1, scope: !6374)
!6388 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !421, file: !421, line: 1727, type: !5450, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6389)
!6389 = !{!6390}
!6390 = !DILocalVariable(name: "gs", arg: 1, scope: !6388, file: !421, line: 1727, type: !3194)
!6391 = !DILocation(line: 0, scope: !6388)
!6392 = !DILocation(line: 1730, column: 10, scope: !6388)
!6393 = !DILocation(line: 1730, column: 3, scope: !6388)
!6394 = distinct !DISubprogram(name: "gimple_has_volatile_ops", scope: !421, file: !421, line: 1477, type: !3828, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6395)
!6395 = !{!6396}
!6396 = !DILocalVariable(name: "stmt", arg: 1, scope: !6394, file: !421, line: 1477, type: !3194)
!6397 = !DILocation(line: 0, scope: !6394)
!6398 = !DILocation(line: 1479, column: 7, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6394, file: !421, line: 1479, column: 7)
!6400 = !DILocation(line: 1479, column: 7, scope: !6394)
!6401 = !DILocation(line: 1480, column: 25, scope: !6399)
!6402 = !DILocation(line: 1480, column: 12, scope: !6399)
!6403 = !DILocation(line: 1480, column: 5, scope: !6399)
!6404 = !DILocation(line: 0, scope: !6399)
!6405 = !DILocation(line: 1483, column: 1, scope: !6394)
!6406 = distinct !DISubprogram(name: "idx_find_step", scope: !3, file: !3, line: 1351, type: !3108, scopeLine: 1352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6407)
!6407 = !{!6408, !6409, !6410, !6411, !6412, !6413, !6414, !6415, !6416, !6417, !6418}
!6408 = !DILocalVariable(name: "base", arg: 1, scope: !6406, file: !3, line: 1351, type: !788)
!6409 = !DILocalVariable(name: "idx", arg: 2, scope: !6406, file: !3, line: 1351, type: !1124)
!6410 = !DILocalVariable(name: "data", arg: 3, scope: !6406, file: !3, line: 1351, type: !663)
!6411 = !DILocalVariable(name: "dta", scope: !6406, file: !3, line: 1353, type: !2180)
!6412 = !DILocalVariable(name: "iv", scope: !6406, file: !3, line: 1354, type: !2085)
!6413 = !DILocalVariable(name: "step", scope: !6406, file: !3, line: 1355, type: !788)
!6414 = !DILocalVariable(name: "iv_base", scope: !6406, file: !3, line: 1355, type: !788)
!6415 = !DILocalVariable(name: "iv_step", scope: !6406, file: !3, line: 1355, type: !788)
!6416 = !DILocalVariable(name: "lbound", scope: !6406, file: !3, line: 1355, type: !788)
!6417 = !DILocalVariable(name: "off", scope: !6406, file: !3, line: 1355, type: !788)
!6418 = !DILocalVariable(name: "loop", scope: !6406, file: !3, line: 1356, type: !1305)
!6419 = !DILocation(line: 0, scope: !6406)
!6420 = !DILocation(line: 1355, column: 3, scope: !6406)
!6421 = !DILocation(line: 1356, column: 28, scope: !6406)
!6422 = !DILocation(line: 1356, column: 41, scope: !6406)
!6423 = !DILocation(line: 1358, column: 7, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1358, column: 7)
!6425 = !DILocation(line: 1358, column: 24, scope: !6424)
!6426 = !DILocation(line: 1359, column: 7, scope: !6424)
!6427 = !DILocation(line: 1359, column: 27, scope: !6424)
!6428 = !DILocation(line: 1358, column: 7, scope: !6406)
!6429 = !DILocation(line: 1364, column: 24, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1364, column: 7)
!6431 = !DILocation(line: 1364, column: 7, scope: !6406)
!6432 = !DILocation(line: 1366, column: 13, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 1365, column: 5)
!6434 = !DILocation(line: 1367, column: 14, scope: !6433)
!6435 = !DILocation(line: 1367, column: 7, scope: !6433)
!6436 = !DILocation(line: 1374, column: 24, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1374, column: 7)
!6438 = !DILocation(line: 1374, column: 37, scope: !6437)
!6439 = !DILocation(line: 1374, column: 57, scope: !6437)
!6440 = !DILocation(line: 1374, column: 7, scope: !6406)
!6441 = !DILocation(line: 1377, column: 28, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 1377, column: 11)
!6443 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 1375, column: 5)
!6444 = !DILocation(line: 1378, column: 4, scope: !6442)
!6445 = !DILocation(line: 1378, column: 40, scope: !6442)
!6446 = !DILocation(line: 1378, column: 8, scope: !6442)
!6447 = !DILocation(line: 1377, column: 11, scope: !6443)
!6448 = !DILocation(line: 1381, column: 14, scope: !6443)
!6449 = !DILocation(line: 1382, column: 16, scope: !6443)
!6450 = !DILocation(line: 1384, column: 12, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 1384, column: 11)
!6452 = !DILocation(line: 1385, column: 4, scope: !6451)
!6453 = !DILocation(line: 1385, column: 8, scope: !6451)
!6454 = !DILocation(line: 1384, column: 11, scope: !6443)
!6455 = !DILocation(line: 1389, column: 7, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1389, column: 7)
!6457 = !DILocation(line: 1389, column: 24, scope: !6456)
!6458 = !DILocation(line: 1389, column: 7, scope: !6406)
!6459 = !DILocation(line: 1392, column: 21, scope: !6406)
!6460 = !DILocation(line: 1392, column: 8, scope: !6406)
!6461 = !DILocation(line: 1393, column: 8, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1393, column: 7)
!6463 = !DILocation(line: 1393, column: 7, scope: !6406)
!6464 = !DILocation(line: 1399, column: 14, scope: !6406)
!6465 = !DILocation(line: 1399, column: 8, scope: !6406)
!6466 = !DILocation(line: 1401, column: 26, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1401, column: 7)
!6468 = !DILocation(line: 1401, column: 7, scope: !6467)
!6469 = !DILocation(line: 1401, column: 7, scope: !6406)
!6470 = !DILocation(line: 1404, column: 7, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1404, column: 7)
!6472 = !DILocation(line: 1404, column: 24, scope: !6471)
!6473 = !DILocation(line: 1404, column: 37, scope: !6471)
!6474 = !DILocation(line: 1404, column: 57, scope: !6471)
!6475 = !DILocation(line: 1404, column: 7, scope: !6406)
!6476 = !DILocation(line: 1406, column: 14, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 1405, column: 5)
!6478 = !DILocation(line: 1409, column: 11, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 1409, column: 11)
!6480 = !DILocation(line: 1409, column: 28, scope: !6479)
!6481 = !DILocation(line: 1409, column: 11, scope: !6477)
!6482 = !DILocation(line: 1414, column: 27, scope: !6471)
!6483 = !DILocation(line: 1414, column: 12, scope: !6471)
!6484 = !DILocation(line: 0, scope: !6471)
!6485 = !DILocation(line: 1416, column: 17, scope: !6406)
!6486 = !DILocation(line: 1416, column: 11, scope: !6406)
!6487 = !DILocation(line: 1417, column: 17, scope: !6406)
!6488 = !DILocation(line: 1417, column: 11, scope: !6406)
!6489 = !DILocation(line: 1418, column: 34, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1418, column: 7)
!6491 = !DILocation(line: 1418, column: 47, scope: !6490)
!6492 = !DILocation(line: 1419, column: 8, scope: !6490)
!6493 = !DILocation(line: 1419, column: 43, scope: !6490)
!6494 = !DILocation(line: 1418, column: 8, scope: !6490)
!6495 = !DILocation(line: 1418, column: 7, scope: !6406)
!6496 = !DILocation(line: 1426, column: 10, scope: !6406)
!6497 = !DILocation(line: 1427, column: 15, scope: !6406)
!6498 = !DILocation(line: 1427, column: 13, scope: !6406)
!6499 = !DILocation(line: 1429, column: 3, scope: !6406)
!6500 = !DILocation(line: 1430, column: 1, scope: !6406)
!6501 = distinct !DISubprogram(name: "may_be_nonaddressable_p", scope: !3, file: !3, line: 1562, type: !3067, scopeLine: 1563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6502)
!6502 = !{!6503}
!6503 = !DILocalVariable(name: "expr", arg: 1, scope: !6501, file: !3, line: 1562, type: !788)
!6504 = !DILocation(line: 1588, column: 14, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 1565, column: 5)
!6506 = !DILocation(line: 0, scope: !6501)
!6507 = !DILocation(line: 1564, column: 11, scope: !6501)
!6508 = !DILocation(line: 1564, column: 3, scope: !6501)
!6509 = !DILocation(line: 1572, column: 14, scope: !6505)
!6510 = !DILocation(line: 1573, column: 7, scope: !6505)
!6511 = !DILocation(line: 1573, column: 35, scope: !6505)
!6512 = !DILocation(line: 1573, column: 10, scope: !6505)
!6513 = !DILocation(line: 1572, column: 7, scope: !6505)
!6514 = !DILocation(line: 1580, column: 26, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 1580, column: 11)
!6516 = !DILocation(line: 1580, column: 11, scope: !6515)
!6517 = !DILocation(line: 1581, column: 4, scope: !6515)
!6518 = !DILocation(line: 1581, column: 31, scope: !6515)
!6519 = !DILocation(line: 1581, column: 8, scope: !6515)
!6520 = !DILocation(line: 1580, column: 11, scope: !6505)
!6521 = !DILocation(line: 1588, column: 39, scope: !6505)
!6522 = !DILocation(line: 1591, column: 7, scope: !6505)
!6523 = !DILocation(line: 1598, column: 1, scope: !6501)
!6524 = distinct !DISubprogram(name: "handled_component_p", scope: !160, file: !160, line: 4551, type: !6525, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6527)
!6525 = !DISubroutineType(types: !6526)
!6526 = !{!136, !3203}
!6527 = !{!6528}
!6528 = !DILocalVariable(name: "t", arg: 1, scope: !6524, file: !160, line: 4551, type: !3203)
!6529 = !DILocation(line: 0, scope: !6524)
!6530 = !DILocation(line: 4553, column: 11, scope: !6524)
!6531 = !DILocation(line: 4553, column: 3, scope: !6524)
!6532 = !DILocation(line: 4565, column: 7, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6524, file: !160, line: 4554, column: 5)
!6534 = !DILocation(line: 0, scope: !6533)
!6535 = !DILocation(line: 4567, column: 1, scope: !6524)
!6536 = distinct !DISubprogram(name: "idx_record_use", scope: !3, file: !3, line: 1436, type: !3108, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6537)
!6537 = !{!6538, !6539, !6540, !6541}
!6538 = !DILocalVariable(name: "base", arg: 1, scope: !6536, file: !3, line: 1436, type: !788)
!6539 = !DILocalVariable(name: "idx", arg: 2, scope: !6536, file: !3, line: 1436, type: !1124)
!6540 = !DILocalVariable(name: "vdata", arg: 3, scope: !6536, file: !3, line: 1437, type: !663)
!6541 = !DILocalVariable(name: "data", scope: !6536, file: !3, line: 1439, type: !2184)
!6542 = !DILocation(line: 0, scope: !6536)
!6543 = !DILocation(line: 1439, column: 30, scope: !6536)
!6544 = !DILocation(line: 1440, column: 35, scope: !6536)
!6545 = !DILocation(line: 1440, column: 3, scope: !6536)
!6546 = !DILocation(line: 1441, column: 7, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 1441, column: 7)
!6548 = !DILocation(line: 1441, column: 24, scope: !6547)
!6549 = !DILocation(line: 1441, column: 37, scope: !6547)
!6550 = !DILocation(line: 1441, column: 57, scope: !6547)
!6551 = !DILocation(line: 1441, column: 7, scope: !6536)
!6552 = !DILocation(line: 1443, column: 39, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 1442, column: 5)
!6554 = !DILocation(line: 1443, column: 7, scope: !6553)
!6555 = !DILocation(line: 1444, column: 39, scope: !6553)
!6556 = !DILocation(line: 1444, column: 7, scope: !6553)
!6557 = !DILocation(line: 1445, column: 5, scope: !6553)
!6558 = !DILocation(line: 1446, column: 3, scope: !6536)
!6559 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !421, file: !421, line: 1283, type: !3828, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6560)
!6560 = !{!6561}
!6561 = !DILocalVariable(name: "g", arg: 1, scope: !6559, file: !421, line: 1283, type: !3194)
!6562 = !DILocation(line: 0, scope: !6559)
!6563 = !DILocation(line: 1285, column: 10, scope: !6559)
!6564 = !DILocation(line: 1285, column: 26, scope: !6559)
!6565 = !DILocation(line: 1285, column: 43, scope: !6559)
!6566 = !DILocation(line: 1285, column: 46, scope: !6559)
!6567 = !DILocation(line: 1285, column: 62, scope: !6559)
!6568 = !DILocation(line: 1285, column: 3, scope: !6559)
!6569 = distinct !DISubprogram(name: "gimple_phi_result", scope: !421, file: !421, line: 3071, type: !5450, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6570)
!6570 = !{!6571}
!6571 = !DILocalVariable(name: "gs", arg: 1, scope: !6569, file: !421, line: 3071, type: !3194)
!6572 = !DILocation(line: 0, scope: !6569)
!6573 = !DILocation(line: 3074, column: 25, scope: !6569)
!6574 = !DILocation(line: 3074, column: 3, scope: !6569)
!6575 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !5147, file: !5147, line: 729, type: !6576, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6578)
!6576 = !DISubroutineType(types: !6577)
!6577 = !{null, !6199}
!6578 = !{!6579}
!6579 = !DILocalVariable(name: "ptr", arg: 1, scope: !6575, file: !5147, line: 729, type: !6199)
!6580 = !DILocation(line: 0, scope: !6575)
!6581 = !DILocation(line: 731, column: 8, scope: !6575)
!6582 = !DILocation(line: 731, column: 13, scope: !6575)
!6583 = !DILocation(line: 732, column: 8, scope: !6575)
!6584 = !DILocation(line: 732, column: 13, scope: !6575)
!6585 = !DILocation(line: 733, column: 8, scope: !6575)
!6586 = !DILocation(line: 733, column: 18, scope: !6575)
!6587 = !DILocation(line: 734, column: 8, scope: !6575)
!6588 = !DILocation(line: 734, column: 14, scope: !6575)
!6589 = !DILocation(line: 735, column: 8, scope: !6575)
!6590 = !DILocation(line: 735, column: 16, scope: !6575)
!6591 = !DILocation(line: 736, column: 8, scope: !6575)
!6592 = !DILocation(line: 736, column: 17, scope: !6575)
!6593 = !DILocation(line: 737, column: 8, scope: !6575)
!6594 = !DILocation(line: 737, column: 13, scope: !6575)
!6595 = !DILocation(line: 738, column: 1, scope: !6575)
!6596 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !421, file: !421, line: 3061, type: !3250, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6597)
!6597 = !{!6598}
!6598 = !DILocalVariable(name: "gs", arg: 1, scope: !6596, file: !421, line: 3061, type: !3194)
!6599 = !DILocation(line: 0, scope: !6596)
!6600 = !DILocation(line: 3064, column: 25, scope: !6596)
!6601 = !DILocation(line: 3064, column: 3, scope: !6596)
!6602 = distinct !DISubprogram(name: "op_iter_init", scope: !5147, file: !5147, line: 742, type: !6603, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6605)
!6603 = !DISubroutineType(types: !6604)
!6604 = !{null, !6199, !1090, !659}
!6605 = !{!6606, !6607, !6608}
!6606 = !DILocalVariable(name: "ptr", arg: 1, scope: !6602, file: !5147, line: 742, type: !6199)
!6607 = !DILocalVariable(name: "stmt", arg: 2, scope: !6602, file: !5147, line: 742, type: !1090)
!6608 = !DILocalVariable(name: "flags", arg: 3, scope: !6602, file: !5147, line: 742, type: !659)
!6609 = !DILocation(line: 0, scope: !6602)
!6610 = !DILocation(line: 748, column: 8, scope: !6602)
!6611 = !DILocation(line: 748, column: 13, scope: !6602)
!6612 = !DILocation(line: 750, column: 7, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6602, file: !5147, line: 749, column: 7)
!6614 = !DILocation(line: 751, column: 7, scope: !6613)
!6615 = !DILocation(line: 749, column: 7, scope: !6602)
!6616 = !DILocation(line: 752, column: 5, scope: !6613)
!6617 = !DILocation(line: 753, column: 15, scope: !6602)
!6618 = !DILocation(line: 753, column: 52, scope: !6602)
!6619 = !DILocation(line: 753, column: 8, scope: !6602)
!6620 = !DILocation(line: 753, column: 13, scope: !6602)
!6621 = !DILocation(line: 755, column: 7, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6602, file: !5147, line: 754, column: 7)
!6623 = !DILocation(line: 755, column: 10, scope: !6622)
!6624 = !DILocation(line: 756, column: 7, scope: !6622)
!6625 = !DILocation(line: 756, column: 10, scope: !6622)
!6626 = !DILocation(line: 756, column: 29, scope: !6622)
!6627 = !DILocation(line: 754, column: 7, scope: !6602)
!6628 = !DILocation(line: 757, column: 22, scope: !6622)
!6629 = !DILocation(line: 757, column: 28, scope: !6622)
!6630 = !DILocation(line: 757, column: 15, scope: !6622)
!6631 = !DILocation(line: 757, column: 5, scope: !6622)
!6632 = !DILocation(line: 758, column: 8, scope: !6602)
!6633 = !DILocation(line: 758, column: 13, scope: !6602)
!6634 = !DILocation(line: 760, column: 8, scope: !6602)
!6635 = !DILocation(line: 760, column: 14, scope: !6602)
!6636 = !DILocation(line: 761, column: 8, scope: !6602)
!6637 = !DILocation(line: 761, column: 16, scope: !6602)
!6638 = !DILocation(line: 762, column: 8, scope: !6602)
!6639 = !DILocation(line: 762, column: 17, scope: !6602)
!6640 = !DILocation(line: 763, column: 1, scope: !6602)
!6641 = distinct !DISubprogram(name: "gimple_def_ops", scope: !421, file: !421, line: 1292, type: !6642, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6644)
!6642 = !DISubroutineType(types: !6643)
!6643 = !{!1119, !3194}
!6644 = !{!6645}
!6645 = !DILocalVariable(name: "g", arg: 1, scope: !6641, file: !421, line: 1292, type: !3194)
!6646 = !DILocation(line: 0, scope: !6641)
!6647 = distinct !DISubprogram(name: "gimple_vdef", scope: !421, file: !421, line: 1375, type: !5450, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6648)
!6648 = !{!6649}
!6649 = !DILocalVariable(name: "g", arg: 1, scope: !6647, file: !421, line: 1375, type: !3194)
!6650 = !DILocation(line: 0, scope: !6647)
!6651 = !DILocation(line: 1377, column: 8, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6647, file: !421, line: 1377, column: 7)
!6653 = !DILocation(line: 1377, column: 7, scope: !6647)
!6654 = !DILocation(line: 1379, column: 23, scope: !6647)
!6655 = !DILocation(line: 1379, column: 3, scope: !6647)
!6656 = !DILocation(line: 1380, column: 1, scope: !6647)
!6657 = distinct !DISubprogram(name: "gimple_use_ops", scope: !421, file: !421, line: 1313, type: !6658, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6660)
!6658 = !DISubroutineType(types: !6659)
!6659 = !{!1126, !3194}
!6660 = !{!6661}
!6661 = !DILocalVariable(name: "g", arg: 1, scope: !6657, file: !421, line: 1313, type: !3194)
!6662 = !DILocation(line: 0, scope: !6657)
!6663 = !DILocation(line: 1315, column: 8, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6657, file: !421, line: 1315, column: 7)
!6665 = !DILocation(line: 1315, column: 7, scope: !6657)
!6666 = !DILocation(line: 1317, column: 26, scope: !6657)
!6667 = !DILocation(line: 1317, column: 3, scope: !6657)
!6668 = !DILocation(line: 1318, column: 1, scope: !6657)
!6669 = distinct !DISubprogram(name: "gimple_vuse", scope: !421, file: !421, line: 1365, type: !5450, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6670)
!6670 = !{!6671}
!6671 = !DILocalVariable(name: "g", arg: 1, scope: !6669, file: !421, line: 1365, type: !3194)
!6672 = !DILocation(line: 0, scope: !6669)
!6673 = !DILocation(line: 1367, column: 8, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6669, file: !421, line: 1367, column: 7)
!6675 = !DILocation(line: 1367, column: 7, scope: !6669)
!6676 = !DILocation(line: 1369, column: 23, scope: !6669)
!6677 = !DILocation(line: 1369, column: 3, scope: !6669)
!6678 = !DILocation(line: 1370, column: 1, scope: !6669)
!6679 = distinct !DISubprogram(name: "add_standard_iv_candidates", scope: !3, file: !3, line: 2305, type: !3565, scopeLine: 2306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6680)
!6680 = !{!6681}
!6681 = !DILocalVariable(name: "data", arg: 1, scope: !6679, file: !3, line: 2305, type: !2184)
!6682 = !DILocation(line: 0, scope: !6679)
!6683 = !DILocation(line: 2307, column: 3, scope: !6679)
!6684 = !DILocation(line: 2312, column: 1, scope: !6679)
!6685 = distinct !DISubprogram(name: "add_old_ivs_candidates", scope: !3, file: !3, line: 2350, type: !3565, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6686)
!6686 = !{!6687, !6688, !6689, !6690}
!6687 = !DILocalVariable(name: "data", arg: 1, scope: !6685, file: !3, line: 2350, type: !2184)
!6688 = !DILocalVariable(name: "i", scope: !6685, file: !3, line: 2352, type: !6)
!6689 = !DILocalVariable(name: "iv", scope: !6685, file: !3, line: 2353, type: !2085)
!6690 = !DILocalVariable(name: "bi", scope: !6685, file: !3, line: 2354, type: !4005)
!6691 = !DILocation(line: 0, scope: !6685)
!6692 = !DILocation(line: 2352, column: 3, scope: !6685)
!6693 = !DILocation(line: 2354, column: 3, scope: !6685)
!6694 = !DILocation(line: 2356, column: 3, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 2356, column: 3)
!6696 = !DILocation(line: 2356, column: 3, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 2356, column: 3)
!6698 = !DILocation(line: 2358, column: 28, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 2357, column: 5)
!6700 = !DILocation(line: 2358, column: 12, scope: !6699)
!6701 = !DILocation(line: 2358, column: 32, scope: !6699)
!6702 = !DILocation(line: 2359, column: 11, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 2359, column: 11)
!6704 = !DILocation(line: 2359, column: 14, scope: !6703)
!6705 = !DILocation(line: 2359, column: 21, scope: !6703)
!6706 = !DILocation(line: 2359, column: 17, scope: !6703)
!6707 = !DILocation(line: 2359, column: 27, scope: !6703)
!6708 = !DILocation(line: 2359, column: 50, scope: !6703)
!6709 = !DILocation(line: 2359, column: 31, scope: !6703)
!6710 = !DILocation(line: 2359, column: 11, scope: !6699)
!6711 = !DILocation(line: 2360, column: 2, scope: !6703)
!6712 = distinct !{!6712, !6694, !6713}
!6713 = !DILocation(line: 2361, column: 5, scope: !6695)
!6714 = !DILocation(line: 2362, column: 1, scope: !6685)
!6715 = distinct !DISubprogram(name: "add_derived_ivs_candidates", scope: !3, file: !3, line: 2396, type: !3565, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6716)
!6716 = !{!6717, !6718, !6719}
!6717 = !DILocalVariable(name: "data", arg: 1, scope: !6715, file: !3, line: 2396, type: !2184)
!6718 = !DILocalVariable(name: "i", scope: !6715, file: !3, line: 2398, type: !6)
!6719 = !DILocalVariable(name: "use", scope: !6720, file: !3, line: 2402, type: !2111)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 2401, column: 5)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 2400, column: 3)
!6722 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 2400, column: 3)
!6723 = !DILocation(line: 0, scope: !6715)
!6724 = !DILocation(line: 2400, column: 8, scope: !6722)
!6725 = !DILocation(line: 0, scope: !6722)
!6726 = !DILocation(line: 2400, column: 19, scope: !6721)
!6727 = !DILocation(line: 2400, column: 17, scope: !6721)
!6728 = !DILocation(line: 2400, column: 3, scope: !6722)
!6729 = !DILocation(line: 2402, column: 28, scope: !6720)
!6730 = !DILocation(line: 0, scope: !6720)
!6731 = !DILocation(line: 2404, column: 12, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 2404, column: 11)
!6733 = !DILocation(line: 2404, column: 11, scope: !6720)
!6734 = !DILocation(line: 2407, column: 20, scope: !6720)
!6735 = !DILocation(line: 2407, column: 7, scope: !6720)
!6736 = !DILocation(line: 2413, column: 40, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 2408, column: 2)
!6738 = !DILocation(line: 2413, column: 4, scope: !6737)
!6739 = !DILocation(line: 2414, column: 4, scope: !6737)
!6740 = !DILocation(line: 2417, column: 4, scope: !6737)
!6741 = !DILocation(line: 2418, column: 2, scope: !6737)
!6742 = !DILocation(line: 2400, column: 38, scope: !6721)
!6743 = !DILocation(line: 2400, column: 3, scope: !6721)
!6744 = distinct !{!6744, !6728, !6745}
!6745 = !DILocation(line: 2419, column: 5, scope: !6722)
!6746 = !DILocation(line: 2420, column: 1, scope: !6715)
!6747 = distinct !DISubprogram(name: "set_autoinc_for_original_candidates", scope: !3, file: !3, line: 4215, type: !3565, scopeLine: 4216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6748)
!6748 = !{!6749, !6750, !6751, !6752, !6756, !6757, !6761}
!6749 = !DILocalVariable(name: "data", arg: 1, scope: !6747, file: !3, line: 4215, type: !2184)
!6750 = !DILocalVariable(name: "i", scope: !6747, file: !3, line: 4217, type: !6)
!6751 = !DILocalVariable(name: "j", scope: !6747, file: !3, line: 4217, type: !6)
!6752 = !DILocalVariable(name: "cand", scope: !6753, file: !3, line: 4221, type: !2126)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 4220, column: 5)
!6754 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 4219, column: 3)
!6755 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 4219, column: 3)
!6756 = !DILocalVariable(name: "closest", scope: !6753, file: !3, line: 4222, type: !2111)
!6757 = !DILocalVariable(name: "use", scope: !6758, file: !3, line: 4227, type: !2111)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 4226, column: 2)
!6759 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 4225, column: 7)
!6760 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 4225, column: 7)
!6761 = !DILocalVariable(name: "uid", scope: !6758, file: !3, line: 4228, type: !6)
!6762 = !DILocation(line: 0, scope: !6747)
!6763 = !DILocation(line: 4219, column: 8, scope: !6755)
!6764 = !DILocation(line: 0, scope: !6755)
!6765 = !DILocation(line: 4219, column: 19, scope: !6754)
!6766 = !DILocation(line: 4219, column: 17, scope: !6754)
!6767 = !DILocation(line: 4219, column: 3, scope: !6755)
!6768 = !DILocation(line: 4221, column: 30, scope: !6753)
!6769 = !DILocation(line: 0, scope: !6753)
!6770 = !DILocation(line: 4223, column: 17, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 4223, column: 11)
!6772 = !DILocation(line: 4223, column: 21, scope: !6771)
!6773 = !DILocation(line: 4223, column: 11, scope: !6753)
!6774 = !DILocation(line: 0, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 4229, column: 8)
!6776 = !DILocation(line: 4225, column: 7, scope: !6760)
!6777 = !DILocation(line: 4222, column: 22, scope: !6753)
!6778 = !DILocation(line: 0, scope: !6760)
!6779 = !DILocation(line: 4225, column: 23, scope: !6759)
!6780 = !DILocation(line: 4225, column: 21, scope: !6759)
!6781 = !DILocation(line: 4227, column: 25, scope: !6758)
!6782 = !DILocation(line: 0, scope: !6758)
!6783 = !DILocation(line: 4228, column: 36, scope: !6758)
!6784 = !DILocation(line: 4228, column: 19, scope: !6758)
!6785 = !DILocation(line: 4229, column: 24, scope: !6775)
!6786 = !DILocation(line: 4229, column: 8, scope: !6775)
!6787 = !DILocation(line: 4229, column: 50, scope: !6775)
!6788 = !DILocation(line: 4229, column: 33, scope: !6775)
!6789 = !DILocation(line: 4229, column: 30, scope: !6775)
!6790 = !DILocation(line: 4230, column: 8, scope: !6775)
!6791 = !DILocation(line: 4230, column: 35, scope: !6775)
!6792 = !DILocation(line: 4230, column: 17, scope: !6775)
!6793 = !DILocation(line: 4230, column: 15, scope: !6775)
!6794 = !DILocation(line: 4229, column: 8, scope: !6758)
!6795 = !DILocation(line: 4232, column: 16, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 4232, column: 8)
!6797 = !DILocation(line: 4232, column: 24, scope: !6796)
!6798 = !DILocation(line: 4232, column: 54, scope: !6796)
!6799 = !DILocation(line: 4232, column: 33, scope: !6796)
!6800 = !DILocation(line: 4232, column: 31, scope: !6796)
!6801 = !DILocation(line: 4232, column: 8, scope: !6758)
!6802 = !DILocation(line: 4233, column: 6, scope: !6796)
!6803 = !DILocation(line: 4225, column: 42, scope: !6759)
!6804 = !DILocation(line: 4225, column: 7, scope: !6759)
!6805 = distinct !{!6805, !6776, !6806}
!6806 = !DILocation(line: 4234, column: 2, scope: !6760)
!6807 = !DILocation(line: 4235, column: 19, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 4235, column: 11)
!6809 = !DILocation(line: 4235, column: 27, scope: !6808)
!6810 = !DILocation(line: 4235, column: 31, scope: !6808)
!6811 = !DILocation(line: 4235, column: 11, scope: !6753)
!6812 = !DILocation(line: 4237, column: 13, scope: !6753)
!6813 = !DILocation(line: 4237, column: 22, scope: !6753)
!6814 = !DILocation(line: 4238, column: 5, scope: !6754)
!6815 = !DILocation(line: 4219, column: 39, scope: !6754)
!6816 = !DILocation(line: 4219, column: 3, scope: !6754)
!6817 = distinct !{!6817, !6767, !6818}
!6818 = !DILocation(line: 4238, column: 5, scope: !6755)
!6819 = !DILocation(line: 4239, column: 1, scope: !6747)
!6820 = distinct !DISubprogram(name: "record_important_candidates", scope: !3, file: !3, line: 2426, type: !3565, scopeLine: 2427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6821)
!6821 = !{!6822, !6823, !6824, !6825}
!6822 = !DILocalVariable(name: "data", arg: 1, scope: !6820, file: !3, line: 2426, type: !2184)
!6823 = !DILocalVariable(name: "i", scope: !6820, file: !3, line: 2428, type: !6)
!6824 = !DILocalVariable(name: "use", scope: !6820, file: !3, line: 2429, type: !2111)
!6825 = !DILocalVariable(name: "cand", scope: !6826, file: !3, line: 2433, type: !2126)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 2432, column: 5)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !3, line: 2431, column: 3)
!6828 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 2431, column: 3)
!6829 = !DILocation(line: 0, scope: !6820)
!6830 = !DILocation(line: 0, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 2435, column: 11)
!6832 = !DILocation(line: 2431, column: 8, scope: !6828)
!6833 = !DILocation(line: 0, scope: !6828)
!6834 = !DILocation(line: 2431, column: 19, scope: !6827)
!6835 = !DILocation(line: 2431, column: 17, scope: !6827)
!6836 = !DILocation(line: 2431, column: 3, scope: !6828)
!6837 = !DILocation(line: 2433, column: 30, scope: !6826)
!6838 = !DILocation(line: 0, scope: !6826)
!6839 = !DILocation(line: 2435, column: 17, scope: !6831)
!6840 = !DILocation(line: 2435, column: 11, scope: !6831)
!6841 = !DILocation(line: 2435, column: 11, scope: !6826)
!6842 = !DILocation(line: 2436, column: 24, scope: !6831)
!6843 = !DILocation(line: 2436, column: 2, scope: !6831)
!6844 = !DILocation(line: 2431, column: 39, scope: !6827)
!6845 = !DILocation(line: 2431, column: 3, scope: !6827)
!6846 = distinct !{!6846, !6836, !6847}
!6847 = !DILocation(line: 2437, column: 5, scope: !6828)
!6848 = !DILocation(line: 2439, column: 36, scope: !6820)
!6849 = !DILocation(line: 2440, column: 11, scope: !6820)
!6850 = !DILocation(line: 2440, column: 8, scope: !6820)
!6851 = !DILocation(line: 2439, column: 35, scope: !6820)
!6852 = !DILocation(line: 2439, column: 9, scope: !6820)
!6853 = !DILocation(line: 2439, column: 33, scope: !6820)
!6854 = !DILocation(line: 2442, column: 7, scope: !6820)
!6855 = !DILocation(line: 2455, column: 7, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6857, file: !3, line: 2455, column: 7)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !3, line: 2453, column: 5)
!6858 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 2442, column: 7)
!6859 = !DILocation(line: 2446, column: 7, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 2446, column: 7)
!6861 = distinct !DILexicalBlock(scope: !6858, file: !3, line: 2443, column: 5)
!6862 = !DILocation(line: 0, scope: !6860)
!6863 = !DILocation(line: 2446, column: 23, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 2446, column: 7)
!6865 = !DILocation(line: 2446, column: 21, scope: !6864)
!6866 = !DILocation(line: 2448, column: 10, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 2447, column: 2)
!6868 = !DILocation(line: 2449, column: 4, scope: !6867)
!6869 = !DILocation(line: 2446, column: 42, scope: !6864)
!6870 = !DILocation(line: 2446, column: 7, scope: !6864)
!6871 = distinct !{!6871, !6859, !6872}
!6872 = !DILocation(line: 2450, column: 2, scope: !6860)
!6873 = !DILocation(line: 0, scope: !6856)
!6874 = !DILocation(line: 2455, column: 23, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 2455, column: 7)
!6876 = !DILocation(line: 2455, column: 21, scope: !6875)
!6877 = !DILocation(line: 2456, column: 19, scope: !6875)
!6878 = !DILocation(line: 2456, column: 37, scope: !6875)
!6879 = !DILocation(line: 2457, column: 11, scope: !6875)
!6880 = !DILocation(line: 2456, column: 2, scope: !6875)
!6881 = !DILocation(line: 2455, column: 42, scope: !6875)
!6882 = !DILocation(line: 2455, column: 7, scope: !6875)
!6883 = distinct !{!6883, !6855, !6884}
!6884 = !DILocation(line: 2457, column: 31, scope: !6856)
!6885 = !DILocation(line: 2459, column: 1, scope: !6820)
!6886 = distinct !DISubprogram(name: "add_standard_iv_candidates_for_size", scope: !3, file: !3, line: 2294, type: !6887, scopeLine: 2296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6889)
!6887 = !DISubroutineType(types: !6888)
!6888 = !{null, !2184, !6}
!6889 = !{!6890, !6891, !6892}
!6890 = !DILocalVariable(name: "data", arg: 1, scope: !6886, file: !3, line: 2294, type: !2184)
!6891 = !DILocalVariable(name: "size", arg: 2, scope: !6886, file: !3, line: 2295, type: !6)
!6892 = !DILocalVariable(name: "type", scope: !6886, file: !3, line: 2297, type: !788)
!6893 = !DILocation(line: 0, scope: !6886)
!6894 = !DILocation(line: 2297, column: 32, scope: !6886)
!6895 = !DILocation(line: 2297, column: 15, scope: !6886)
!6896 = !DILocation(line: 2298, column: 24, scope: !6886)
!6897 = !DILocation(line: 2298, column: 49, scope: !6886)
!6898 = !DILocation(line: 2298, column: 3, scope: !6886)
!6899 = !DILocation(line: 2300, column: 1, scope: !6886)
!6900 = distinct !DISubprogram(name: "add_candidate", scope: !3, file: !3, line: 2277, type: !6901, scopeLine: 2279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6903)
!6901 = !DISubroutineType(types: !6902)
!6902 = !{null, !2184, !788, !788, !136, !2111}
!6903 = !{!6904, !6905, !6906, !6907, !6908}
!6904 = !DILocalVariable(name: "data", arg: 1, scope: !6900, file: !3, line: 2277, type: !2184)
!6905 = !DILocalVariable(name: "base", arg: 2, scope: !6900, file: !3, line: 2278, type: !788)
!6906 = !DILocalVariable(name: "step", arg: 3, scope: !6900, file: !3, line: 2278, type: !788)
!6907 = !DILocalVariable(name: "important", arg: 4, scope: !6900, file: !3, line: 2278, type: !136)
!6908 = !DILocalVariable(name: "use", arg: 5, scope: !6900, file: !3, line: 2278, type: !2111)
!6909 = !DILocation(line: 0, scope: !6900)
!6910 = !DILocation(line: 2280, column: 28, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 2280, column: 7)
!6912 = !DILocation(line: 2280, column: 7, scope: !6911)
!6913 = !DILocation(line: 2280, column: 7, scope: !6900)
!6914 = !DILocation(line: 2281, column: 5, scope: !6911)
!6915 = !DILocation(line: 2282, column: 25, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 2282, column: 7)
!6917 = !DILocation(line: 2282, column: 7, scope: !6916)
!6918 = !DILocation(line: 2283, column: 7, scope: !6916)
!6919 = !DILocation(line: 2283, column: 36, scope: !6916)
!6920 = !DILocation(line: 2283, column: 10, scope: !6916)
!6921 = !DILocation(line: 2282, column: 7, scope: !6900)
!6922 = !DILocation(line: 2284, column: 5, scope: !6916)
!6923 = !DILocation(line: 2286, column: 11, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 2286, column: 7)
!6925 = !DILocation(line: 2286, column: 19, scope: !6924)
!6926 = !DILocation(line: 2286, column: 27, scope: !6924)
!6927 = !DILocation(line: 2286, column: 32, scope: !6924)
!6928 = !DILocation(line: 2286, column: 7, scope: !6900)
!6929 = !DILocation(line: 2287, column: 5, scope: !6924)
!6930 = !DILocation(line: 2288, column: 1, scope: !6900)
!6931 = distinct !DISubprogram(name: "add_candidate_1", scope: !3, file: !3, line: 2100, type: !6932, scopeLine: 2103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !6934)
!6932 = !DISubroutineType(types: !6933)
!6933 = !{!2126, !2184, !788, !788, !136, !400, !2111, !1090}
!6934 = !{!6935, !6936, !6937, !6938, !6939, !6940, !6941, !6942, !6943, !6944, !6945}
!6935 = !DILocalVariable(name: "data", arg: 1, scope: !6931, file: !3, line: 2100, type: !2184)
!6936 = !DILocalVariable(name: "base", arg: 2, scope: !6931, file: !3, line: 2101, type: !788)
!6937 = !DILocalVariable(name: "step", arg: 3, scope: !6931, file: !3, line: 2101, type: !788)
!6938 = !DILocalVariable(name: "important", arg: 4, scope: !6931, file: !3, line: 2101, type: !136)
!6939 = !DILocalVariable(name: "pos", arg: 5, scope: !6931, file: !3, line: 2101, type: !400)
!6940 = !DILocalVariable(name: "use", arg: 6, scope: !6931, file: !3, line: 2102, type: !2111)
!6941 = !DILocalVariable(name: "incremented_at", arg: 7, scope: !6931, file: !3, line: 2102, type: !1090)
!6942 = !DILocalVariable(name: "i", scope: !6931, file: !3, line: 2104, type: !6)
!6943 = !DILocalVariable(name: "cand", scope: !6931, file: !3, line: 2105, type: !2126)
!6944 = !DILocalVariable(name: "type", scope: !6931, file: !3, line: 2106, type: !788)
!6945 = !DILocalVariable(name: "orig_type", scope: !6931, file: !3, line: 2106, type: !788)
!6946 = !DILocation(line: 0, scope: !6931)
!6947 = !DILocation(line: 2108, column: 7, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 2108, column: 7)
!6949 = !DILocation(line: 2108, column: 7, scope: !6931)
!6950 = !DILocation(line: 2110, column: 19, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 2109, column: 5)
!6952 = !DILocation(line: 2111, column: 14, scope: !6951)
!6953 = !DILocation(line: 2112, column: 16, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 2112, column: 11)
!6955 = !DILocation(line: 2112, column: 11, scope: !6951)
!6956 = !DILocation(line: 2114, column: 11, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 2113, column: 2)
!6958 = !DILocation(line: 2115, column: 11, scope: !6957)
!6959 = !DILocation(line: 2115, column: 9, scope: !6957)
!6960 = !DILocation(line: 2116, column: 2, scope: !6957)
!6961 = !DILocation(line: 0, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 2126, column: 11)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 2120, column: 5)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 2119, column: 3)
!6965 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 2119, column: 3)
!6966 = !DILocation(line: 0, scope: !6963)
!6967 = !DILocation(line: 2119, column: 8, scope: !6965)
!6968 = !DILocation(line: 0, scope: !6965)
!6969 = !DILocation(line: 2119, column: 19, scope: !6964)
!6970 = !DILocation(line: 2119, column: 17, scope: !6964)
!6971 = !DILocation(line: 2119, column: 3, scope: !6965)
!6972 = !DILocation(line: 2121, column: 14, scope: !6963)
!6973 = !DILocation(line: 2123, column: 17, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 2123, column: 11)
!6975 = !DILocation(line: 2123, column: 21, scope: !6974)
!6976 = !DILocation(line: 2123, column: 11, scope: !6963)
!6977 = !DILocation(line: 2126, column: 17, scope: !6962)
!6978 = !DILocation(line: 2126, column: 32, scope: !6962)
!6979 = !DILocation(line: 2127, column: 4, scope: !6962)
!6980 = !DILocation(line: 2128, column: 17, scope: !6962)
!6981 = !DILocation(line: 2128, column: 26, scope: !6962)
!6982 = !DILocation(line: 2126, column: 11, scope: !6963)
!6983 = !DILocation(line: 2131, column: 18, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 2131, column: 11)
!6985 = !DILocation(line: 2131, column: 12, scope: !6984)
!6986 = !DILocation(line: 2131, column: 11, scope: !6963)
!6987 = !DILocation(line: 2139, column: 17, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 2139, column: 11)
!6989 = !DILocation(line: 2142, column: 44, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 2142, column: 11)
!6991 = !DILocation(line: 2142, column: 11, scope: !6990)
!6992 = !DILocation(line: 2143, column: 4, scope: !6990)
!6993 = !DILocation(line: 2143, column: 36, scope: !6990)
!6994 = !DILocation(line: 2143, column: 40, scope: !6990)
!6995 = !DILocation(line: 2143, column: 7, scope: !6990)
!6996 = !DILocation(line: 2142, column: 11, scope: !6963)
!6997 = !DILocation(line: 2133, column: 14, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 2133, column: 8)
!6999 = distinct !DILexicalBlock(scope: !6984, file: !3, line: 2132, column: 2)
!7000 = !DILocation(line: 2119, column: 39, scope: !6964)
!7001 = !DILocation(line: 2119, column: 3, scope: !6964)
!7002 = distinct !{!7002, !6971, !7003}
!7003 = !DILocation(line: 2145, column: 5, scope: !6965)
!7004 = !DILocation(line: 2147, column: 12, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 2147, column: 7)
!7006 = !DILocation(line: 2147, column: 9, scope: !7005)
!7007 = !DILocation(line: 2147, column: 7, scope: !6931)
!7008 = !DILocation(line: 2149, column: 14, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 2148, column: 5)
!7010 = !DILocation(line: 2150, column: 13, scope: !7009)
!7011 = !DILocation(line: 2150, column: 16, scope: !7009)
!7012 = !DILocation(line: 2152, column: 21, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 2152, column: 11)
!7014 = !DILocation(line: 2152, column: 17, scope: !7013)
!7015 = !DILocation(line: 2153, column: 8, scope: !7013)
!7016 = !DILocation(line: 2153, column: 11, scope: !7013)
!7017 = !DILocation(line: 2153, column: 2, scope: !7013)
!7018 = !DILocation(line: 2155, column: 13, scope: !7013)
!7019 = !DILocation(line: 2155, column: 8, scope: !7013)
!7020 = !DILocation(line: 2155, column: 11, scope: !7013)
!7021 = !DILocation(line: 2157, column: 13, scope: !7009)
!7022 = !DILocation(line: 2157, column: 17, scope: !7009)
!7023 = !DILocation(line: 2158, column: 15, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 2158, column: 11)
!7025 = !DILocation(line: 2158, column: 30, scope: !7024)
!7026 = !DILocation(line: 2158, column: 33, scope: !7024)
!7027 = !DILocation(line: 2158, column: 11, scope: !7009)
!7028 = !DILocation(line: 2160, column: 43, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 2159, column: 2)
!7030 = !DILocation(line: 2160, column: 23, scope: !7029)
!7031 = !DILocation(line: 2160, column: 10, scope: !7029)
!7032 = !DILocation(line: 2160, column: 21, scope: !7029)
!7033 = !DILocation(line: 2161, column: 28, scope: !7029)
!7034 = !DILocation(line: 2161, column: 10, scope: !7029)
!7035 = !DILocation(line: 2161, column: 20, scope: !7029)
!7036 = !DILocation(line: 2162, column: 2, scope: !7029)
!7037 = !DILocation(line: 2163, column: 13, scope: !7009)
!7038 = !DILocation(line: 2163, column: 23, scope: !7009)
!7039 = !DILocation(line: 2164, column: 13, scope: !7009)
!7040 = !DILocation(line: 2164, column: 28, scope: !7009)
!7041 = !DILocation(line: 2165, column: 7, scope: !7009)
!7042 = !DILocation(line: 2167, column: 11, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 2167, column: 11)
!7044 = !DILocation(line: 2168, column: 4, scope: !7043)
!7045 = !DILocation(line: 2168, column: 7, scope: !7043)
!7046 = !DILocation(line: 2168, column: 24, scope: !7043)
!7047 = !DILocation(line: 2167, column: 11, scope: !7009)
!7048 = !DILocation(line: 2170, column: 19, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 2169, column: 2)
!7050 = !DILocation(line: 2171, column: 4, scope: !7049)
!7051 = !DILocation(line: 2172, column: 2, scope: !7049)
!7052 = !DILocation(line: 0, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 2174, column: 11)
!7054 = !DILocation(line: 2174, column: 31, scope: !7053)
!7055 = !DILocation(line: 2175, column: 2, scope: !7053)
!7056 = !DILocation(line: 2179, column: 11, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 2179, column: 11)
!7058 = !DILocation(line: 2179, column: 21, scope: !7057)
!7059 = !DILocation(line: 2179, column: 25, scope: !7057)
!7060 = !DILocation(line: 2179, column: 36, scope: !7057)
!7061 = !DILocation(line: 2179, column: 11, scope: !7009)
!7062 = !DILocation(line: 2180, column: 2, scope: !7057)
!7063 = !DILocation(line: 2183, column: 7, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 2183, column: 7)
!7065 = !DILocation(line: 2183, column: 17, scope: !7064)
!7066 = !DILocation(line: 2183, column: 27, scope: !7064)
!7067 = !DILocation(line: 2183, column: 21, scope: !7064)
!7068 = !DILocation(line: 2183, column: 7, scope: !6931)
!7069 = !DILocation(line: 2185, column: 23, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7064, file: !3, line: 2184, column: 5)
!7071 = !DILocation(line: 2186, column: 11, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7070, file: !3, line: 2186, column: 11)
!7073 = !DILocation(line: 2186, column: 21, scope: !7072)
!7074 = !DILocation(line: 2186, column: 25, scope: !7072)
!7075 = !DILocation(line: 2186, column: 36, scope: !7072)
!7076 = !DILocation(line: 2186, column: 11, scope: !7070)
!7077 = !DILocation(line: 2187, column: 59, scope: !7072)
!7078 = !DILocation(line: 2187, column: 2, scope: !7072)
!7079 = !DILocation(line: 2190, column: 7, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 2190, column: 7)
!7081 = !DILocation(line: 2190, column: 7, scope: !6931)
!7082 = !DILocation(line: 2192, column: 28, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 2191, column: 5)
!7084 = !DILocation(line: 2192, column: 7, scope: !7083)
!7085 = !DILocation(line: 2193, column: 11, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2193, column: 11)
!7087 = !DILocation(line: 2193, column: 21, scope: !7086)
!7088 = !DILocation(line: 2193, column: 25, scope: !7086)
!7089 = !DILocation(line: 2193, column: 36, scope: !7086)
!7090 = !DILocation(line: 2193, column: 11, scope: !7083)
!7091 = !DILocation(line: 2195, column: 10, scope: !7086)
!7092 = !DILocation(line: 2195, column: 19, scope: !7086)
!7093 = !DILocation(line: 2194, column: 2, scope: !7086)
!7094 = !DILocation(line: 2198, column: 3, scope: !6931)
!7095 = distinct !DISubprogram(name: "allow_ip_end_pos_p", scope: !3, file: !3, line: 2211, type: !7096, scopeLine: 2212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7098)
!7096 = !DISubroutineType(types: !7097)
!7097 = !{!136, !1305}
!7098 = !{!7099}
!7099 = !DILocalVariable(name: "loop", arg: 1, scope: !7095, file: !3, line: 2211, type: !1305)
!7100 = !DILocation(line: 0, scope: !7095)
!7101 = !DILocation(line: 2213, column: 8, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 2213, column: 7)
!7103 = !DILocation(line: 2213, column: 7, scope: !7095)
!7104 = !DILocation(line: 2216, column: 23, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 2216, column: 7)
!7106 = !DILocation(line: 2216, column: 8, scope: !7105)
!7107 = !DILocation(line: 2220, column: 1, scope: !7095)
!7108 = distinct !DISubprogram(name: "add_autoinc_candidates", scope: !3, file: !3, line: 2226, type: !6901, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7109)
!7109 = !{!7110, !7111, !7112, !7113, !7114, !7115, !7116, !7117}
!7110 = !DILocalVariable(name: "data", arg: 1, scope: !7108, file: !3, line: 2226, type: !2184)
!7111 = !DILocalVariable(name: "base", arg: 2, scope: !7108, file: !3, line: 2226, type: !788)
!7112 = !DILocalVariable(name: "step", arg: 3, scope: !7108, file: !3, line: 2226, type: !788)
!7113 = !DILocalVariable(name: "important", arg: 4, scope: !7108, file: !3, line: 2227, type: !136)
!7114 = !DILocalVariable(name: "use", arg: 5, scope: !7108, file: !3, line: 2227, type: !2111)
!7115 = !DILocalVariable(name: "use_bb", scope: !7108, file: !3, line: 2229, type: !1053)
!7116 = !DILocalVariable(name: "mem_mode", scope: !7108, file: !3, line: 2230, type: !8)
!7117 = !DILocalVariable(name: "cstepi", scope: !7108, file: !3, line: 2231, type: !743)
!7118 = !DILocation(line: 0, scope: !7108)
!7119 = !DILocation(line: 2229, column: 40, scope: !7108)
!7120 = !DILocation(line: 2229, column: 24, scope: !7108)
!7121 = !DILocation(line: 2237, column: 15, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 2237, column: 7)
!7123 = !DILocation(line: 2237, column: 36, scope: !7122)
!7124 = !DILocation(line: 2237, column: 27, scope: !7122)
!7125 = !DILocation(line: 2238, column: 7, scope: !7122)
!7126 = !DILocation(line: 2238, column: 63, scope: !7122)
!7127 = !DILocation(line: 2238, column: 11, scope: !7122)
!7128 = !DILocation(line: 2239, column: 7, scope: !7122)
!7129 = !DILocation(line: 2239, column: 35, scope: !7122)
!7130 = !DILocation(line: 2239, column: 10, scope: !7122)
!7131 = !DILocation(line: 2240, column: 7, scope: !7122)
!7132 = !DILocation(line: 2240, column: 11, scope: !7122)
!7133 = !DILocation(line: 2237, column: 7, scope: !7108)
!7134 = !DILocation(line: 2243, column: 12, scope: !7108)
!7135 = !DILocation(line: 2245, column: 14, scope: !7108)
!7136 = !DILocation(line: 2270, column: 1, scope: !7108)
!7137 = distinct !DISubprogram(name: "generic_type_for", scope: !3, file: !3, line: 2059, type: !5288, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7138)
!7138 = !{!7139}
!7139 = !DILocalVariable(name: "type", arg: 1, scope: !7137, file: !3, line: 2059, type: !788)
!7140 = !DILocation(line: 0, scope: !7137)
!7141 = !DILocation(line: 2061, column: 7, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 2061, column: 7)
!7143 = !DILocation(line: 2061, column: 7, scope: !7137)
!7144 = !DILocation(line: 2062, column: 12, scope: !7142)
!7145 = !DILocation(line: 2062, column: 5, scope: !7142)
!7146 = !DILocation(line: 2064, column: 7, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 2064, column: 7)
!7148 = !DILocation(line: 2064, column: 7, scope: !7137)
!7149 = !DILocation(line: 2067, column: 10, scope: !7137)
!7150 = !DILocation(line: 2067, column: 3, scope: !7137)
!7151 = !DILocation(line: 2068, column: 1, scope: !7137)
!7152 = distinct !DISubprogram(name: "n_iv_cands", scope: !3, file: !3, line: 358, type: !3004, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7153)
!7153 = !{!7154}
!7154 = !DILocalVariable(name: "data", arg: 1, scope: !7152, file: !3, line: 358, type: !2184)
!7155 = !DILocation(line: 0, scope: !7152)
!7156 = !DILocation(line: 360, column: 10, scope: !7152)
!7157 = !DILocation(line: 360, column: 3, scope: !7152)
!7158 = distinct !DISubprogram(name: "iv_cand", scope: !3, file: !3, line: 366, type: !7159, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7161)
!7159 = !DISubroutineType(types: !7160)
!7160 = !{!2126, !2184, !6}
!7161 = !{!7162, !7163}
!7162 = !DILocalVariable(name: "data", arg: 1, scope: !7158, file: !3, line: 366, type: !2184)
!7163 = !DILocalVariable(name: "i", arg: 2, scope: !7158, file: !3, line: 366, type: !6)
!7164 = !DILocation(line: 0, scope: !7158)
!7165 = !DILocation(line: 368, column: 10, scope: !7158)
!7166 = !DILocation(line: 368, column: 3, scope: !7158)
!7167 = distinct !DISubprogram(name: "VEC_iv_cand_p_heap_safe_push", scope: !3, file: !3, line: 220, type: !7168, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7172)
!7168 = !DISubroutineType(types: !7169)
!7169 = !{!7170, !7171, !2161}
!7170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!7171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!7172 = !{!7173, !7174}
!7173 = !DILocalVariable(name: "vec_", arg: 1, scope: !7167, file: !3, line: 220, type: !7171)
!7174 = !DILocalVariable(name: "obj_", arg: 2, scope: !7167, file: !3, line: 220, type: !2161)
!7175 = !DILocation(line: 0, scope: !7167)
!7176 = !DILocation(line: 220, column: 1, scope: !7167)
!7177 = distinct !DISubprogram(name: "find_depends", scope: !3, file: !3, line: 2075, type: !7178, scopeLine: 2076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7180)
!7178 = !DISubroutineType(types: !7179)
!7179 = !{!788, !1124, !2229, !663}
!7180 = !{!7181, !7182, !7183, !7184, !7185}
!7181 = !DILocalVariable(name: "expr_p", arg: 1, scope: !7177, file: !3, line: 2075, type: !1124)
!7182 = !DILocalVariable(name: "ws", arg: 2, scope: !7177, file: !3, line: 2075, type: !2229)
!7183 = !DILocalVariable(name: "data", arg: 3, scope: !7177, file: !3, line: 2075, type: !663)
!7184 = !DILocalVariable(name: "depends_on", scope: !7177, file: !3, line: 2077, type: !2204)
!7185 = !DILocalVariable(name: "info", scope: !7177, file: !3, line: 2078, type: !2080)
!7186 = !DILocation(line: 0, scope: !7177)
!7187 = !DILocation(line: 2077, column: 24, scope: !7177)
!7188 = !DILocation(line: 2080, column: 7, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 2080, column: 7)
!7190 = !DILocation(line: 2080, column: 27, scope: !7189)
!7191 = !DILocation(line: 2080, column: 7, scope: !7177)
!7192 = !DILocation(line: 2082, column: 21, scope: !7177)
!7193 = !DILocation(line: 2082, column: 10, scope: !7177)
!7194 = !DILocation(line: 2084, column: 14, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 2084, column: 7)
!7196 = !DILocation(line: 2084, column: 8, scope: !7195)
!7197 = !DILocation(line: 2084, column: 21, scope: !7195)
!7198 = !DILocation(line: 2084, column: 30, scope: !7195)
!7199 = !DILocation(line: 2084, column: 24, scope: !7195)
!7200 = !DILocation(line: 2084, column: 7, scope: !7177)
!7201 = !DILocation(line: 2087, column: 8, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 2087, column: 7)
!7203 = !DILocation(line: 2087, column: 7, scope: !7177)
!7204 = !DILocation(line: 2088, column: 19, scope: !7202)
!7205 = !DILocation(line: 2088, column: 17, scope: !7202)
!7206 = !DILocation(line: 2089, column: 38, scope: !7177)
!7207 = !DILocation(line: 2088, column: 5, scope: !7202)
!7208 = !DILocation(line: 2089, column: 19, scope: !7177)
!7209 = !DILocation(line: 2089, column: 3, scope: !7177)
!7210 = !DILocation(line: 2091, column: 3, scope: !7177)
!7211 = !DILocation(line: 2092, column: 1, scope: !7177)
!7212 = distinct !DISubprogram(name: "VEC_iv_cand_p_base_length", scope: !3, file: !3, line: 219, type: !7213, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7217)
!7213 = !DISubroutineType(types: !7214)
!7214 = !{!6, !7215}
!7215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7216, size: 64)
!7216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2154)
!7217 = !{!7218}
!7218 = !DILocalVariable(name: "vec_", arg: 1, scope: !7212, file: !3, line: 219, type: !7215)
!7219 = !DILocation(line: 0, scope: !7212)
!7220 = !DILocation(line: 219, column: 1, scope: !7212)
!7221 = distinct !DISubprogram(name: "VEC_iv_cand_p_base_index", scope: !3, file: !3, line: 219, type: !7222, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7224)
!7222 = !DISubroutineType(types: !7223)
!7223 = !{!2161, !7215, !6}
!7224 = !{!7225, !7226}
!7225 = !DILocalVariable(name: "vec_", arg: 1, scope: !7221, file: !3, line: 219, type: !7215)
!7226 = !DILocalVariable(name: "ix_", arg: 2, scope: !7221, file: !3, line: 219, type: !6)
!7227 = !DILocation(line: 0, scope: !7221)
!7228 = !DILocation(line: 219, column: 1, scope: !7221)
!7229 = distinct !DISubprogram(name: "VEC_iv_cand_p_heap_reserve", scope: !3, file: !3, line: 220, type: !7230, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7232)
!7230 = !DISubroutineType(types: !7231)
!7231 = !{!659, !7171, !659}
!7232 = !{!7233, !7234, !7235}
!7233 = !DILocalVariable(name: "vec_", arg: 1, scope: !7229, file: !3, line: 220, type: !7171)
!7234 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7229, file: !3, line: 220, type: !659)
!7235 = !DILocalVariable(name: "extend", scope: !7229, file: !3, line: 220, type: !659)
!7236 = !DILocation(line: 0, scope: !7229)
!7237 = !DILocation(line: 220, column: 1, scope: !7229)
!7238 = !DILocation(line: 220, column: 1, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 220, column: 1)
!7240 = distinct !DISubprogram(name: "VEC_iv_cand_p_base_quick_push", scope: !3, file: !3, line: 219, type: !7241, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7244)
!7241 = !DISubroutineType(types: !7242)
!7242 = !{!7170, !7243, !2161}
!7243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!7244 = !{!7245, !7246, !7247}
!7245 = !DILocalVariable(name: "vec_", arg: 1, scope: !7240, file: !3, line: 219, type: !7243)
!7246 = !DILocalVariable(name: "obj_", arg: 2, scope: !7240, file: !3, line: 219, type: !2161)
!7247 = !DILocalVariable(name: "slot_", scope: !7240, file: !3, line: 219, type: !7170)
!7248 = !DILocation(line: 0, scope: !7240)
!7249 = !DILocation(line: 219, column: 1, scope: !7240)
!7250 = distinct !DISubprogram(name: "VEC_iv_cand_p_base_space", scope: !3, file: !3, line: 219, type: !7251, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7253)
!7251 = !DISubroutineType(types: !7252)
!7252 = !{!659, !7243, !659}
!7253 = !{!7254, !7255}
!7254 = !DILocalVariable(name: "vec_", arg: 1, scope: !7250, file: !3, line: 219, type: !7243)
!7255 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7250, file: !3, line: 219, type: !659)
!7256 = !DILocation(line: 0, scope: !7250)
!7257 = !DILocation(line: 219, column: 1, scope: !7250)
!7258 = distinct !DISubprogram(name: "add_old_iv_candidates", scope: !3, file: !3, line: 2318, type: !7259, scopeLine: 2319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7261)
!7259 = !DISubroutineType(types: !7260)
!7260 = !{null, !2184, !2085}
!7261 = !{!7262, !7263, !7264, !7265, !7266}
!7262 = !DILocalVariable(name: "data", arg: 1, scope: !7258, file: !3, line: 2318, type: !2184)
!7263 = !DILocalVariable(name: "iv", arg: 2, scope: !7258, file: !3, line: 2318, type: !2085)
!7264 = !DILocalVariable(name: "phi", scope: !7258, file: !3, line: 2320, type: !1090)
!7265 = !DILocalVariable(name: "def", scope: !7258, file: !3, line: 2321, type: !788)
!7266 = !DILocalVariable(name: "cand", scope: !7258, file: !3, line: 2322, type: !2126)
!7267 = !DILocation(line: 0, scope: !7258)
!7268 = !DILocation(line: 2324, column: 28, scope: !7258)
!7269 = !DILocation(line: 2324, column: 38, scope: !7258)
!7270 = !DILocation(line: 2324, column: 3, scope: !7258)
!7271 = !DILocation(line: 2327, column: 7, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7258, file: !3, line: 2327, column: 7)
!7273 = !DILocation(line: 2327, column: 7, scope: !7258)
!7274 = !DILocation(line: 2328, column: 26, scope: !7272)
!7275 = !DILocation(line: 2328, column: 44, scope: !7272)
!7276 = !DILocation(line: 2328, column: 5, scope: !7272)
!7277 = !DILocation(line: 2330, column: 26, scope: !7272)
!7278 = !DILocation(line: 2331, column: 10, scope: !7272)
!7279 = !DILocation(line: 2330, column: 5, scope: !7272)
!7280 = !DILocation(line: 2333, column: 9, scope: !7258)
!7281 = !DILocation(line: 2334, column: 7, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7258, file: !3, line: 2334, column: 7)
!7283 = !DILocation(line: 2334, column: 25, scope: !7282)
!7284 = !DILocation(line: 2334, column: 7, scope: !7258)
!7285 = !DILocation(line: 2338, column: 13, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7282, file: !3, line: 2335, column: 5)
!7287 = !DILocation(line: 2340, column: 14, scope: !7286)
!7288 = !DILocation(line: 2340, column: 24, scope: !7286)
!7289 = !DILocation(line: 2341, column: 10, scope: !7286)
!7290 = !DILocation(line: 2339, column: 14, scope: !7286)
!7291 = !DILocation(line: 2342, column: 30, scope: !7286)
!7292 = !DILocation(line: 2342, column: 13, scope: !7286)
!7293 = !DILocation(line: 2342, column: 24, scope: !7286)
!7294 = !DILocation(line: 2343, column: 13, scope: !7286)
!7295 = !DILocation(line: 2343, column: 23, scope: !7286)
!7296 = !DILocation(line: 2344, column: 5, scope: !7286)
!7297 = !DILocation(line: 2345, column: 1, scope: !7258)
!7298 = distinct !DISubprogram(name: "add_iv_value_candidates", scope: !3, file: !3, line: 2367, type: !7299, scopeLine: 2369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7301)
!7299 = !DISubroutineType(types: !7300)
!7300 = !{null, !2184, !2085, !2111}
!7301 = !{!7302, !7303, !7304, !7305, !7306, !7307}
!7302 = !DILocalVariable(name: "data", arg: 1, scope: !7298, file: !3, line: 2367, type: !2184)
!7303 = !DILocalVariable(name: "iv", arg: 2, scope: !7298, file: !3, line: 2368, type: !2085)
!7304 = !DILocalVariable(name: "use", arg: 3, scope: !7298, file: !3, line: 2368, type: !2111)
!7305 = !DILocalVariable(name: "offset", scope: !7298, file: !3, line: 2370, type: !743)
!7306 = !DILocalVariable(name: "base", scope: !7298, file: !3, line: 2371, type: !788)
!7307 = !DILocalVariable(name: "basetype", scope: !7298, file: !3, line: 2372, type: !788)
!7308 = !DILocation(line: 0, scope: !7298)
!7309 = !DILocation(line: 2370, column: 3, scope: !7298)
!7310 = !DILocation(line: 2374, column: 28, scope: !7298)
!7311 = !DILocation(line: 2374, column: 38, scope: !7298)
!7312 = !DILocation(line: 2374, column: 3, scope: !7298)
!7313 = !DILocation(line: 2379, column: 14, scope: !7298)
!7314 = !DILocation(line: 2380, column: 7, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7298, file: !3, line: 2380, column: 7)
!7316 = !DILocation(line: 2380, column: 7, scope: !7298)
!7317 = !DILocation(line: 2381, column: 16, scope: !7315)
!7318 = !DILocation(line: 2381, column: 5, scope: !7315)
!7319 = !DILocation(line: 2382, column: 24, scope: !7298)
!7320 = !DILocation(line: 2383, column: 8, scope: !7298)
!7321 = !DILocation(line: 2382, column: 3, scope: !7298)
!7322 = !DILocation(line: 2387, column: 28, scope: !7298)
!7323 = !DILocation(line: 2387, column: 10, scope: !7298)
!7324 = !DILocation(line: 2388, column: 7, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7298, file: !3, line: 2388, column: 7)
!7326 = !DILocation(line: 2389, column: 7, scope: !7325)
!7327 = !DILocation(line: 2389, column: 22, scope: !7325)
!7328 = !DILocation(line: 2389, column: 15, scope: !7325)
!7329 = !DILocation(line: 2388, column: 7, scope: !7298)
!7330 = !DILocation(line: 2390, column: 36, scope: !7325)
!7331 = !DILocation(line: 2390, column: 5, scope: !7325)
!7332 = !DILocation(line: 2391, column: 1, scope: !7298)
!7333 = distinct !DISubprogram(name: "strip_offset", scope: !3, file: !3, line: 2049, type: !7334, scopeLine: 2050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7337)
!7334 = !DISubroutineType(types: !7335)
!7335 = !{!788, !788, !7336}
!7336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!7337 = !{!7338, !7339}
!7338 = !DILocalVariable(name: "expr", arg: 1, scope: !7333, file: !3, line: 2049, type: !788)
!7339 = !DILocalVariable(name: "offset", arg: 2, scope: !7333, file: !3, line: 2049, type: !7336)
!7340 = !DILocation(line: 0, scope: !7333)
!7341 = !DILocation(line: 2051, column: 10, scope: !7333)
!7342 = !DILocation(line: 2051, column: 3, scope: !7333)
!7343 = distinct !DISubprogram(name: "strip_offset_1", scope: !3, file: !3, line: 1892, type: !7344, scopeLine: 1894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7346)
!7344 = !DISubroutineType(types: !7345)
!7345 = !{!788, !788, !136, !136, !7336}
!7346 = !{!7347, !7348, !7349, !7350, !7351, !7352, !7353, !7354, !7355, !7356, !7357, !7358, !7359, !7360, !7361}
!7347 = !DILocalVariable(name: "expr", arg: 1, scope: !7343, file: !3, line: 1892, type: !788)
!7348 = !DILocalVariable(name: "inside_addr", arg: 2, scope: !7343, file: !3, line: 1892, type: !136)
!7349 = !DILocalVariable(name: "top_compref", arg: 3, scope: !7343, file: !3, line: 1892, type: !136)
!7350 = !DILocalVariable(name: "offset", arg: 4, scope: !7343, file: !3, line: 1893, type: !7336)
!7351 = !DILocalVariable(name: "op0", scope: !7343, file: !3, line: 1895, type: !788)
!7352 = !DILocalVariable(name: "op1", scope: !7343, file: !3, line: 1895, type: !788)
!7353 = !DILocalVariable(name: "tmp", scope: !7343, file: !3, line: 1895, type: !788)
!7354 = !DILocalVariable(name: "step", scope: !7343, file: !3, line: 1895, type: !788)
!7355 = !DILocalVariable(name: "code", scope: !7343, file: !3, line: 1896, type: !159)
!7356 = !DILocalVariable(name: "type", scope: !7343, file: !3, line: 1897, type: !788)
!7357 = !DILocalVariable(name: "orig_type", scope: !7343, file: !3, line: 1897, type: !788)
!7358 = !DILocalVariable(name: "off0", scope: !7343, file: !3, line: 1898, type: !743)
!7359 = !DILocalVariable(name: "off1", scope: !7343, file: !3, line: 1898, type: !743)
!7360 = !DILocalVariable(name: "st", scope: !7343, file: !3, line: 1898, type: !743)
!7361 = !DILocalVariable(name: "orig_expr", scope: !7343, file: !3, line: 1899, type: !788)
!7362 = !DILocation(line: 0, scope: !7343)
!7363 = !DILocation(line: 1897, column: 26, scope: !7343)
!7364 = !DILocation(line: 1898, column: 3, scope: !7343)
!7365 = !DILocation(line: 1901, column: 3, scope: !7343)
!7366 = !DILocation(line: 1903, column: 10, scope: !7343)
!7367 = !DILocation(line: 1904, column: 10, scope: !7343)
!7368 = !DILocation(line: 1905, column: 11, scope: !7343)
!7369 = !DILocation(line: 1907, column: 3, scope: !7343)
!7370 = !DILocation(line: 1910, column: 12, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 1910, column: 11)
!7372 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 1908, column: 5)
!7373 = !DILocation(line: 1911, column: 4, scope: !7371)
!7374 = !DILocation(line: 1911, column: 7, scope: !7371)
!7375 = !DILocation(line: 1910, column: 11, scope: !7372)
!7376 = !DILocation(line: 1914, column: 17, scope: !7372)
!7377 = !DILocation(line: 1914, column: 15, scope: !7372)
!7378 = !DILocation(line: 1915, column: 14, scope: !7372)
!7379 = !DILocation(line: 1915, column: 7, scope: !7372)
!7380 = !DILocation(line: 1920, column: 13, scope: !7372)
!7381 = !DILocation(line: 1921, column: 13, scope: !7372)
!7382 = !DILocation(line: 1923, column: 13, scope: !7372)
!7383 = !DILocation(line: 1924, column: 13, scope: !7372)
!7384 = !DILocation(line: 1926, column: 23, scope: !7372)
!7385 = !DILocation(line: 0, scope: !7372)
!7386 = !DILocation(line: 1926, column: 18, scope: !7372)
!7387 = !DILocation(line: 1926, column: 15, scope: !7372)
!7388 = !DILocation(line: 1927, column: 18, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 1927, column: 11)
!7390 = !DILocation(line: 1927, column: 15, scope: !7389)
!7391 = !DILocation(line: 1928, column: 4, scope: !7389)
!7392 = !DILocation(line: 1928, column: 14, scope: !7389)
!7393 = !DILocation(line: 1928, column: 11, scope: !7389)
!7394 = !DILocation(line: 1927, column: 11, scope: !7372)
!7395 = !DILocation(line: 1931, column: 11, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 1931, column: 11)
!7397 = !DILocation(line: 1931, column: 11, scope: !7372)
!7398 = !DILocation(line: 1933, column: 16, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 1933, column: 16)
!7400 = !DILocation(line: 1933, column: 16, scope: !7396)
!7401 = !DILocation(line: 1935, column: 8, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 1934, column: 2)
!7403 = !DILocation(line: 1936, column: 13, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 1935, column: 8)
!7405 = !DILocation(line: 1936, column: 6, scope: !7404)
!7406 = !DILocation(line: 1941, column: 9, scope: !7399)
!7407 = !DILocation(line: 0, scope: !7396)
!7408 = !DILocation(line: 1943, column: 14, scope: !7372)
!7409 = !DILocation(line: 1943, column: 7, scope: !7372)
!7410 = !DILocation(line: 1946, column: 13, scope: !7372)
!7411 = !DILocation(line: 1947, column: 12, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 1947, column: 11)
!7413 = !DILocation(line: 1947, column: 11, scope: !7372)
!7414 = !DILocation(line: 1950, column: 13, scope: !7372)
!7415 = !DILocation(line: 1951, column: 13, scope: !7372)
!7416 = !DILocation(line: 1952, column: 18, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 1952, column: 11)
!7418 = !DILocation(line: 1952, column: 15, scope: !7417)
!7419 = !DILocation(line: 1952, column: 11, scope: !7372)
!7420 = !DILocation(line: 1955, column: 17, scope: !7372)
!7421 = !DILocation(line: 1955, column: 24, scope: !7372)
!7422 = !DILocation(line: 1955, column: 22, scope: !7372)
!7423 = !DILocation(line: 1955, column: 15, scope: !7372)
!7424 = !DILocation(line: 1956, column: 11, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 1956, column: 11)
!7426 = !DILocation(line: 1956, column: 11, scope: !7372)
!7427 = !DILocation(line: 1959, column: 9, scope: !7425)
!7428 = !DILocation(line: 0, scope: !7425)
!7429 = !DILocation(line: 1961, column: 14, scope: !7372)
!7430 = !DILocation(line: 1961, column: 7, scope: !7372)
!7431 = !DILocation(line: 1965, column: 12, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 1965, column: 11)
!7433 = !DILocation(line: 1965, column: 11, scope: !7372)
!7434 = !DILocation(line: 1968, column: 14, scope: !7372)
!7435 = !DILocation(line: 1969, column: 12, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 1969, column: 11)
!7437 = !DILocation(line: 1969, column: 11, scope: !7372)
!7438 = !DILocation(line: 1972, column: 12, scope: !7372)
!7439 = !DILocation(line: 1973, column: 13, scope: !7372)
!7440 = !DILocation(line: 1974, column: 13, scope: !7372)
!7441 = !DILocation(line: 1975, column: 17, scope: !7372)
!7442 = !DILocation(line: 1975, column: 22, scope: !7372)
!7443 = !DILocation(line: 1975, column: 15, scope: !7372)
!7444 = !DILocation(line: 1977, column: 11, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 1977, column: 11)
!7446 = !DILocation(line: 1978, column: 4, scope: !7445)
!7447 = !DILocation(line: 1978, column: 7, scope: !7445)
!7448 = !DILocation(line: 1977, column: 11, scope: !7372)
!7449 = !DILocation(line: 1981, column: 10, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 1979, column: 2)
!7451 = !DILocation(line: 1982, column: 10, scope: !7450)
!7452 = !DILocation(line: 1983, column: 15, scope: !7450)
!7453 = !DILocation(line: 1983, column: 12, scope: !7450)
!7454 = !DILocation(line: 1984, column: 4, scope: !7450)
!7455 = !DILocation(line: 1989, column: 12, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 1989, column: 11)
!7457 = !DILocation(line: 1989, column: 11, scope: !7372)
!7458 = !DILocation(line: 1992, column: 13, scope: !7372)
!7459 = !DILocation(line: 1993, column: 11, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 1993, column: 11)
!7461 = !DILocation(line: 1994, column: 4, scope: !7460)
!7462 = !DILocation(line: 1994, column: 7, scope: !7460)
!7463 = !DILocation(line: 1993, column: 11, scope: !7372)
!7464 = !DILocation(line: 1997, column: 10, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7460, file: !3, line: 1995, column: 2)
!7466 = !DILocation(line: 1998, column: 10, scope: !7465)
!7467 = !DILocation(line: 1999, column: 14, scope: !7465)
!7468 = !DILocation(line: 1999, column: 21, scope: !7465)
!7469 = !DILocation(line: 1999, column: 19, scope: !7465)
!7470 = !DILocation(line: 1999, column: 12, scope: !7465)
!7471 = !DILocation(line: 2000, column: 4, scope: !7465)
!7472 = !DILocation(line: 2005, column: 13, scope: !7372)
!7473 = !DILocation(line: 2006, column: 13, scope: !7372)
!7474 = !DILocation(line: 2007, column: 18, scope: !7372)
!7475 = !DILocation(line: 2007, column: 15, scope: !7372)
!7476 = !DILocation(line: 2009, column: 18, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 2009, column: 11)
!7478 = !DILocation(line: 2009, column: 15, scope: !7477)
!7479 = !DILocation(line: 2009, column: 11, scope: !7372)
!7480 = !DILocation(line: 2012, column: 14, scope: !7372)
!7481 = !DILocation(line: 2013, column: 14, scope: !7372)
!7482 = !DILocation(line: 2013, column: 7, scope: !7372)
!7483 = !DILocation(line: 2025, column: 9, scope: !7343)
!7484 = !DILocation(line: 2026, column: 9, scope: !7343)
!7485 = !DILocation(line: 2027, column: 14, scope: !7343)
!7486 = !DILocation(line: 2027, column: 11, scope: !7343)
!7487 = !DILocation(line: 2029, column: 14, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 2029, column: 7)
!7489 = !DILocation(line: 2029, column: 11, scope: !7488)
!7490 = !DILocation(line: 2030, column: 7, scope: !7488)
!7491 = !DILocation(line: 2030, column: 12, scope: !7488)
!7492 = !DILocation(line: 2030, column: 16, scope: !7488)
!7493 = !DILocation(line: 2030, column: 26, scope: !7488)
!7494 = !DILocation(line: 2030, column: 23, scope: !7488)
!7495 = !DILocation(line: 2029, column: 7, scope: !7343)
!7496 = !DILocation(line: 2033, column: 10, scope: !7343)
!7497 = !DILocation(line: 2034, column: 3, scope: !7343)
!7498 = !DILocation(line: 2034, column: 26, scope: !7343)
!7499 = !DILocation(line: 2035, column: 7, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 2035, column: 7)
!7501 = !DILocation(line: 2035, column: 7, scope: !7343)
!7502 = !DILocation(line: 2036, column: 5, scope: !7500)
!7503 = !DILocation(line: 2036, column: 28, scope: !7500)
!7504 = !DILocation(line: 2041, column: 10, scope: !7343)
!7505 = !DILocation(line: 2043, column: 3, scope: !7343)
!7506 = !DILocation(line: 2044, column: 1, scope: !7343)
!7507 = distinct !DISubprogram(name: "gimple_uid", scope: !421, file: !421, line: 1265, type: !3250, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7508)
!7508 = !{!7509}
!7509 = !DILocalVariable(name: "g", arg: 1, scope: !7507, file: !421, line: 1265, type: !3194)
!7510 = !DILocation(line: 0, scope: !7507)
!7511 = !DILocation(line: 1267, column: 20, scope: !7507)
!7512 = !DILocation(line: 1267, column: 3, scope: !7507)
!7513 = distinct !DISubprogram(name: "autoinc_possible_for_pair", scope: !3, file: !3, line: 4193, type: !7514, scopeLine: 4195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7516)
!7514 = !DISubroutineType(types: !7515)
!7515 = !{!136, !2184, !2111, !2126}
!7516 = !{!7517, !7518, !7519, !7520, !7521, !7522}
!7517 = !DILocalVariable(name: "data", arg: 1, scope: !7513, file: !3, line: 4193, type: !2184)
!7518 = !DILocalVariable(name: "use", arg: 2, scope: !7513, file: !3, line: 4193, type: !2111)
!7519 = !DILocalVariable(name: "cand", arg: 3, scope: !7513, file: !3, line: 4194, type: !2126)
!7520 = !DILocalVariable(name: "depends_on", scope: !7513, file: !3, line: 4196, type: !1507)
!7521 = !DILocalVariable(name: "can_autoinc", scope: !7513, file: !3, line: 4197, type: !136)
!7522 = !DILocalVariable(name: "cost", scope: !7513, file: !3, line: 4198, type: !2141)
!7523 = !DILocation(line: 0, scope: !7513)
!7524 = !DILocation(line: 4196, column: 3, scope: !7513)
!7525 = !DILocation(line: 4197, column: 3, scope: !7513)
!7526 = !DILocation(line: 4200, column: 12, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 4200, column: 7)
!7528 = !DILocation(line: 4200, column: 17, scope: !7527)
!7529 = !DILocation(line: 4200, column: 7, scope: !7513)
!7530 = !DILocation(line: 4203, column: 10, scope: !7513)
!7531 = !DILocation(line: 4206, column: 3, scope: !7513)
!7532 = !DILocation(line: 4208, column: 11, scope: !7513)
!7533 = !DILocation(line: 4208, column: 34, scope: !7513)
!7534 = !DILocation(line: 4208, column: 10, scope: !7513)
!7535 = !DILocation(line: 4208, column: 3, scope: !7513)
!7536 = !DILocation(line: 4209, column: 1, scope: !7513)
!7537 = distinct !DISubprogram(name: "get_computation_cost", scope: !3, file: !3, line: 3884, type: !7538, scopeLine: 3887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7540)
!7538 = !DISubroutineType(types: !7539)
!7539 = !{!2141, !2184, !2111, !2126, !136, !2204, !658}
!7540 = !{!7541, !7542, !7543, !7544, !7545, !7546}
!7541 = !DILocalVariable(name: "data", arg: 1, scope: !7537, file: !3, line: 3884, type: !2184)
!7542 = !DILocalVariable(name: "use", arg: 2, scope: !7537, file: !3, line: 3885, type: !2111)
!7543 = !DILocalVariable(name: "cand", arg: 3, scope: !7537, file: !3, line: 3885, type: !2126)
!7544 = !DILocalVariable(name: "address_p", arg: 4, scope: !7537, file: !3, line: 3886, type: !136)
!7545 = !DILocalVariable(name: "depends_on", arg: 5, scope: !7537, file: !3, line: 3886, type: !2204)
!7546 = !DILocalVariable(name: "can_autoinc", arg: 6, scope: !7537, file: !3, line: 3886, type: !658)
!7547 = !DILocation(line: 0, scope: !7537)
!7548 = !DILocation(line: 3889, column: 46, scope: !7537)
!7549 = !DILocation(line: 3888, column: 10, scope: !7537)
!7550 = !DILocation(line: 3888, column: 3, scope: !7537)
!7551 = distinct !DISubprogram(name: "infinite_cost_p", scope: !3, file: !3, line: 2545, type: !7552, scopeLine: 2546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7554)
!7552 = !DISubroutineType(types: !7553)
!7553 = !{!136, !2141}
!7554 = !{!7555}
!7555 = !DILocalVariable(name: "cost", arg: 1, scope: !7551, file: !3, line: 2545, type: !2141)
!7556 = !DILocation(line: 2547, column: 15, scope: !7551)
!7557 = !DILocation(line: 2547, column: 20, scope: !7551)
!7558 = !DILocation(line: 2547, column: 10, scope: !7551)
!7559 = !DILocation(line: 2547, column: 3, scope: !7551)
!7560 = distinct !DISubprogram(name: "get_computation_cost_at", scope: !3, file: !3, line: 3697, type: !7561, scopeLine: 3701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7563)
!7561 = !DISubroutineType(types: !7562)
!7562 = !{!2141, !2184, !2111, !2126, !136, !2204, !1090, !658}
!7563 = !{!7564, !7565, !7566, !7567, !7568, !7569, !7570, !7571, !7572, !7573, !7574, !7575, !7576, !7577, !7578, !7579, !7580, !7581, !7582, !7583, !7584, !7585, !7586, !7587, !7589}
!7564 = !DILocalVariable(name: "data", arg: 1, scope: !7560, file: !3, line: 3697, type: !2184)
!7565 = !DILocalVariable(name: "use", arg: 2, scope: !7560, file: !3, line: 3698, type: !2111)
!7566 = !DILocalVariable(name: "cand", arg: 3, scope: !7560, file: !3, line: 3698, type: !2126)
!7567 = !DILocalVariable(name: "address_p", arg: 4, scope: !7560, file: !3, line: 3699, type: !136)
!7568 = !DILocalVariable(name: "depends_on", arg: 5, scope: !7560, file: !3, line: 3699, type: !2204)
!7569 = !DILocalVariable(name: "at", arg: 6, scope: !7560, file: !3, line: 3699, type: !1090)
!7570 = !DILocalVariable(name: "can_autoinc", arg: 7, scope: !7560, file: !3, line: 3700, type: !658)
!7571 = !DILocalVariable(name: "ubase", scope: !7560, file: !3, line: 3702, type: !788)
!7572 = !DILocalVariable(name: "ustep", scope: !7560, file: !3, line: 3702, type: !788)
!7573 = !DILocalVariable(name: "cbase", scope: !7560, file: !3, line: 3703, type: !788)
!7574 = !DILocalVariable(name: "cstep", scope: !7560, file: !3, line: 3703, type: !788)
!7575 = !DILocalVariable(name: "utype", scope: !7560, file: !3, line: 3704, type: !788)
!7576 = !DILocalVariable(name: "ctype", scope: !7560, file: !3, line: 3704, type: !788)
!7577 = !DILocalVariable(name: "cstepi", scope: !7560, file: !3, line: 3705, type: !743)
!7578 = !DILocalVariable(name: "offset", scope: !7560, file: !3, line: 3705, type: !743)
!7579 = !DILocalVariable(name: "ratio", scope: !7560, file: !3, line: 3706, type: !7)
!7580 = !DILocalVariable(name: "aratio", scope: !7560, file: !3, line: 3706, type: !7)
!7581 = !DILocalVariable(name: "var_present", scope: !7560, file: !3, line: 3707, type: !136)
!7582 = !DILocalVariable(name: "symbol_present", scope: !7560, file: !3, line: 3707, type: !136)
!7583 = !DILocalVariable(name: "stmt_is_after_inc", scope: !7560, file: !3, line: 3707, type: !136)
!7584 = !DILocalVariable(name: "cost", scope: !7560, file: !3, line: 3708, type: !2141)
!7585 = !DILocalVariable(name: "rat", scope: !7560, file: !3, line: 3709, type: !836)
!7586 = !DILocalVariable(name: "speed", scope: !7560, file: !3, line: 3710, type: !136)
!7587 = !DILocalVariable(name: "comp", scope: !7588, file: !3, line: 3864, type: !788)
!7588 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3862, column: 3)
!7589 = !DILabel(scope: !7560, name: "fallback", file: !3, line: 3858)
!7590 = !DILocation(line: 0, scope: !7560)
!7591 = !DILocation(line: 3702, column: 21, scope: !7560)
!7592 = !DILocation(line: 3702, column: 25, scope: !7560)
!7593 = !DILocation(line: 3702, column: 48, scope: !7560)
!7594 = !DILocation(line: 3704, column: 16, scope: !7560)
!7595 = !DILocation(line: 3705, column: 3, scope: !7560)
!7596 = !DILocation(line: 3705, column: 34, scope: !7560)
!7597 = !DILocation(line: 3707, column: 3, scope: !7560)
!7598 = !DILocation(line: 3708, column: 3, scope: !7560)
!7599 = !DILocation(line: 3709, column: 3, scope: !7560)
!7600 = !DILocation(line: 3710, column: 41, scope: !7560)
!7601 = !DILocation(line: 3710, column: 16, scope: !7560)
!7602 = !DILocation(line: 3712, column: 15, scope: !7560)
!7603 = !DILocation(line: 3715, column: 14, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3715, column: 7)
!7605 = !DILocation(line: 3715, column: 8, scope: !7604)
!7606 = !DILocation(line: 3715, column: 7, scope: !7560)
!7607 = !DILocation(line: 3716, column: 5, scope: !7604)
!7608 = !DILocation(line: 3718, column: 21, scope: !7560)
!7609 = !DILocation(line: 3719, column: 21, scope: !7560)
!7610 = !DILocation(line: 3720, column: 11, scope: !7560)
!7611 = !DILocation(line: 3722, column: 7, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3722, column: 7)
!7613 = !DILocation(line: 3722, column: 32, scope: !7612)
!7614 = !DILocation(line: 3722, column: 30, scope: !7612)
!7615 = !DILocation(line: 3722, column: 7, scope: !7560)
!7616 = !DILocation(line: 3725, column: 7, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 3723, column: 5)
!7618 = !DILocation(line: 3728, column: 7, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3728, column: 7)
!7620 = !DILocation(line: 3728, column: 7, scope: !7560)
!7621 = !DILocation(line: 3735, column: 16, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 3735, column: 11)
!7623 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 3729, column: 5)
!7624 = !DILocation(line: 3735, column: 20, scope: !7622)
!7625 = !DILocation(line: 3735, column: 11, scope: !7622)
!7626 = !DILocation(line: 3736, column: 4, scope: !7622)
!7627 = !DILocation(line: 3736, column: 17, scope: !7622)
!7628 = !DILocation(line: 3736, column: 7, scope: !7622)
!7629 = !DILocation(line: 3737, column: 4, scope: !7622)
!7630 = !DILocation(line: 3737, column: 8, scope: !7622)
!7631 = !DILocation(line: 3735, column: 11, scope: !7623)
!7632 = !DILocation(line: 3741, column: 7, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3741, column: 7)
!7634 = !DILocation(line: 3741, column: 32, scope: !7633)
!7635 = !DILocation(line: 3738, column: 2, scope: !7622)
!7636 = !DILocation(line: 3741, column: 30, scope: !7633)
!7637 = !DILocation(line: 3741, column: 7, scope: !7560)
!7638 = !DILocation(line: 3753, column: 7, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3753, column: 7)
!7640 = !DILocation(line: 3753, column: 7, scope: !7560)
!7641 = !DILocation(line: 3754, column: 14, scope: !7639)
!7642 = !DILocation(line: 3754, column: 5, scope: !7639)
!7643 = !DILocation(line: 0, scope: !7639)
!7644 = !DILocation(line: 3758, column: 8, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3758, column: 7)
!7646 = !DILocation(line: 3758, column: 7, scope: !7560)
!7647 = !DILocation(line: 3759, column: 5, scope: !7645)
!7648 = !DILocation(line: 3761, column: 7, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3761, column: 7)
!7650 = !DILocation(line: 3761, column: 7, scope: !7560)
!7651 = !DILocation(line: 3762, column: 13, scope: !7649)
!7652 = !DILocation(line: 3766, column: 3, scope: !7560)
!7653 = !DILocation(line: 3767, column: 11, scope: !7560)
!7654 = !DILocation(line: 3776, column: 7, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3776, column: 7)
!7656 = !DILocation(line: 3776, column: 7, scope: !7560)
!7657 = !DILocation(line: 3764, column: 5, scope: !7649)
!7658 = !DILocation(line: 3778, column: 26, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 3777, column: 5)
!7660 = !DILocation(line: 3778, column: 24, scope: !7659)
!7661 = !DILocation(line: 3778, column: 14, scope: !7659)
!7662 = !DILocation(line: 3780, column: 17, scope: !7659)
!7663 = !DILocation(line: 3779, column: 14, scope: !7659)
!7664 = !DILocation(line: 3783, column: 5, scope: !7659)
!7665 = !DILocation(line: 3784, column: 18, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 3784, column: 12)
!7667 = !DILocation(line: 3784, column: 12, scope: !7655)
!7668 = !DILocation(line: 3786, column: 14, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 3785, column: 5)
!7670 = !DILocation(line: 3790, column: 5, scope: !7669)
!7671 = !DILocation(line: 3792, column: 5, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 3791, column: 12)
!7673 = !DILocation(line: 3792, column: 9, scope: !7672)
!7674 = !DILocation(line: 3793, column: 5, scope: !7672)
!7675 = !DILocation(line: 3794, column: 11, scope: !7672)
!7676 = !DILocation(line: 3795, column: 4, scope: !7672)
!7677 = !DILocation(line: 3793, column: 8, scope: !7672)
!7678 = !DILocation(line: 3791, column: 12, scope: !7666)
!7679 = !DILocation(line: 3798, column: 4, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 3796, column: 5)
!7681 = !DILocation(line: 3799, column: 14, scope: !7680)
!7682 = !DILocation(line: 3803, column: 5, scope: !7680)
!7683 = !DILocation(line: 3806, column: 14, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 3805, column: 5)
!7685 = !DILocation(line: 3807, column: 30, scope: !7684)
!7686 = !DILocation(line: 3807, column: 55, scope: !7684)
!7687 = !DILocation(line: 3807, column: 20, scope: !7684)
!7688 = !DILocation(line: 3807, column: 12, scope: !7684)
!7689 = !DILocation(line: 3807, column: 17, scope: !7684)
!7690 = !DILocation(line: 3810, column: 14, scope: !7684)
!7691 = !DILocation(line: 3809, column: 4, scope: !7684)
!7692 = !DILocation(line: 3808, column: 14, scope: !7684)
!7693 = !DILocation(line: 3817, column: 51, scope: !7560)
!7694 = !DILocation(line: 3817, column: 23, scope: !7560)
!7695 = !DILocation(line: 3818, column: 7, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3818, column: 7)
!7697 = !DILocation(line: 3818, column: 7, scope: !7560)
!7698 = !DILocation(line: 3819, column: 21, scope: !7696)
!7699 = !DILocation(line: 3819, column: 12, scope: !7696)
!7700 = !DILocation(line: 3819, column: 5, scope: !7696)
!7701 = !DILocation(line: 3824, column: 7, scope: !7560)
!7702 = !DILocation(line: 3826, column: 43, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3824, column: 7)
!7704 = !DILocation(line: 3827, column: 6, scope: !7703)
!7705 = !DILocation(line: 3828, column: 6, scope: !7703)
!7706 = !DILocation(line: 3829, column: 6, scope: !7703)
!7707 = !DILocation(line: 3826, column: 9, scope: !7703)
!7708 = !DILocation(line: 3825, column: 12, scope: !7703)
!7709 = !DILocation(line: 3825, column: 5, scope: !7703)
!7710 = !DILocation(line: 3834, column: 27, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3834, column: 7)
!7712 = !DILocation(line: 3834, column: 23, scope: !7711)
!7713 = !DILocation(line: 3834, column: 43, scope: !7711)
!7714 = !DILocation(line: 3836, column: 17, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 3836, column: 11)
!7716 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 3835, column: 5)
!7717 = !DILocation(line: 3836, column: 11, scope: !7716)
!7718 = !DILocation(line: 3837, column: 40, scope: !7715)
!7719 = !DILocation(line: 3837, column: 15, scope: !7715)
!7720 = !DILocation(line: 3837, column: 7, scope: !7715)
!7721 = !DILocation(line: 3837, column: 12, scope: !7715)
!7722 = !DILocation(line: 3838, column: 14, scope: !7716)
!7723 = !DILocation(line: 3837, column: 2, scope: !7715)
!7724 = !DILocation(line: 3838, column: 7, scope: !7716)
!7725 = !DILocation(line: 3843, column: 7, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3843, column: 7)
!7727 = !DILocation(line: 3843, column: 19, scope: !7726)
!7728 = !DILocation(line: 3843, column: 23, scope: !7726)
!7729 = !DILocation(line: 3843, column: 38, scope: !7726)
!7730 = !DILocation(line: 3844, column: 28, scope: !7726)
!7731 = !DILocation(line: 3844, column: 18, scope: !7726)
!7732 = !DILocation(line: 3845, column: 4, scope: !7726)
!7733 = !DILocation(line: 3844, column: 10, scope: !7726)
!7734 = !DILocation(line: 3844, column: 15, scope: !7726)
!7735 = !DILocation(line: 3849, column: 7, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3849, column: 7)
!7737 = !DILocation(line: 3844, column: 5, scope: !7726)
!7738 = !DILocation(line: 3849, column: 7, scope: !7560)
!7739 = !DILocation(line: 3850, column: 10, scope: !7736)
!7740 = !DILocation(line: 3850, column: 20, scope: !7736)
!7741 = !DILocation(line: 3850, column: 5, scope: !7736)
!7742 = !DILocation(line: 3852, column: 26, scope: !7560)
!7743 = !DILocation(line: 3852, column: 16, scope: !7560)
!7744 = !DILocation(line: 3852, column: 8, scope: !7560)
!7745 = !DILocation(line: 3852, column: 13, scope: !7560)
!7746 = !DILocation(line: 3854, column: 18, scope: !7560)
!7747 = !DILocation(line: 3854, column: 12, scope: !7560)
!7748 = !DILocation(line: 3855, column: 14, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3855, column: 7)
!7750 = !DILocation(line: 3855, column: 7, scope: !7560)
!7751 = !DILocation(line: 3856, column: 44, scope: !7749)
!7752 = !DILocation(line: 3856, column: 18, scope: !7749)
!7753 = !DILocation(line: 3856, column: 15, scope: !7749)
!7754 = !DILocation(line: 3856, column: 5, scope: !7749)
!7755 = !DILocation(line: 3858, column: 1, scope: !7560)
!7756 = !DILocation(line: 3859, column: 7, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3859, column: 7)
!7758 = !DILocation(line: 3859, column: 7, scope: !7560)
!7759 = !DILocation(line: 3860, column: 18, scope: !7757)
!7760 = !DILocation(line: 3860, column: 5, scope: !7757)
!7761 = !DILocation(line: 3864, column: 43, scope: !7588)
!7762 = !DILocation(line: 3864, column: 17, scope: !7588)
!7763 = !DILocation(line: 0, scope: !7588)
!7764 = !DILocation(line: 3866, column: 10, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 3866, column: 9)
!7766 = !DILocation(line: 3866, column: 9, scope: !7588)
!7767 = !DILocation(line: 3867, column: 7, scope: !7765)
!7768 = !DILocation(line: 3869, column: 9, scope: !7588)
!7769 = !DILocation(line: 3870, column: 14, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 3869, column: 9)
!7771 = !DILocation(line: 3870, column: 7, scope: !7770)
!7772 = !DILocation(line: 3872, column: 22, scope: !7588)
!7773 = !DILocation(line: 3872, column: 12, scope: !7588)
!7774 = !DILocation(line: 3872, column: 5, scope: !7588)
!7775 = !DILocation(line: 3874, column: 1, scope: !7560)
!7776 = distinct !DISubprogram(name: "constant_multiple_of", scope: !3, file: !3, line: 1455, type: !7777, scopeLine: 1456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7780)
!7777 = !DISubroutineType(types: !7778)
!7778 = !{!136, !788, !788, !7779}
!7779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!7780 = !{!7781, !7782, !7783, !7784, !7785, !7786, !7787, !7788, !7789}
!7781 = !DILocalVariable(name: "top", arg: 1, scope: !7776, file: !3, line: 1455, type: !788)
!7782 = !DILocalVariable(name: "bot", arg: 2, scope: !7776, file: !3, line: 1455, type: !788)
!7783 = !DILocalVariable(name: "mul", arg: 3, scope: !7776, file: !3, line: 1455, type: !7779)
!7784 = !DILocalVariable(name: "mby", scope: !7776, file: !3, line: 1457, type: !788)
!7785 = !DILocalVariable(name: "code", scope: !7776, file: !3, line: 1458, type: !159)
!7786 = !DILocalVariable(name: "res", scope: !7776, file: !3, line: 1459, type: !836)
!7787 = !DILocalVariable(name: "p0", scope: !7776, file: !3, line: 1459, type: !836)
!7788 = !DILocalVariable(name: "p1", scope: !7776, file: !3, line: 1459, type: !836)
!7789 = !DILocalVariable(name: "precision", scope: !7776, file: !3, line: 1460, type: !6)
!7790 = !DILocation(line: 0, scope: !7776)
!7791 = !DILocation(line: 1459, column: 3, scope: !7776)
!7792 = !DILocation(line: 1460, column: 24, scope: !7776)
!7793 = !DILocation(line: 1462, column: 3, scope: !7776)
!7794 = !DILocation(line: 1463, column: 3, scope: !7776)
!7795 = !DILocation(line: 1465, column: 7, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7776, file: !3, line: 1465, column: 7)
!7797 = !DILocation(line: 1465, column: 7, scope: !7776)
!7798 = !DILocation(line: 1467, column: 14, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 1466, column: 5)
!7800 = !DILocation(line: 1468, column: 7, scope: !7799)
!7801 = !DILocation(line: 1471, column: 10, scope: !7776)
!7802 = !DILocation(line: 1472, column: 3, scope: !7776)
!7803 = !DILocation(line: 1475, column: 13, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7776, file: !3, line: 1473, column: 5)
!7805 = !DILocation(line: 1476, column: 11, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 1476, column: 11)
!7807 = !DILocation(line: 1476, column: 27, scope: !7806)
!7808 = !DILocation(line: 1476, column: 11, scope: !7804)
!7809 = !DILocation(line: 1479, column: 34, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 1479, column: 11)
!7811 = !DILocation(line: 1479, column: 12, scope: !7810)
!7812 = !DILocation(line: 1479, column: 11, scope: !7804)
!7813 = !DILocation(line: 1482, column: 14, scope: !7804)
!7814 = !DILocation(line: 1482, column: 52, scope: !7804)
!7815 = !DILocation(line: 1482, column: 31, scope: !7804)
!7816 = !DILocation(line: 1484, column: 7, scope: !7804)
!7817 = !DILocation(line: 1488, column: 34, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 1488, column: 11)
!7819 = !DILocation(line: 1488, column: 12, scope: !7818)
!7820 = !DILocation(line: 1489, column: 4, scope: !7818)
!7821 = !DILocation(line: 1489, column: 30, scope: !7818)
!7822 = !DILocation(line: 1489, column: 8, scope: !7818)
!7823 = !DILocation(line: 1488, column: 11, scope: !7804)
!7824 = !DILocation(line: 1492, column: 16, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 1492, column: 11)
!7826 = !DILocation(line: 1492, column: 11, scope: !7804)
!7827 = !DILocation(line: 1493, column: 7, scope: !7825)
!7828 = !DILocation(line: 1493, column: 2, scope: !7825)
!7829 = !DILocation(line: 1494, column: 14, scope: !7804)
!7830 = !DILocation(line: 1494, column: 31, scope: !7804)
!7831 = !DILocation(line: 1495, column: 7, scope: !7804)
!7832 = !DILocation(line: 1498, column: 11, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 1498, column: 11)
!7834 = !DILocation(line: 1498, column: 27, scope: !7833)
!7835 = !DILocation(line: 1498, column: 11, scope: !7804)
!7836 = !DILocation(line: 1501, column: 12, scope: !7804)
!7837 = !DILocation(line: 1501, column: 29, scope: !7804)
!7838 = !DILocation(line: 1502, column: 12, scope: !7804)
!7839 = !DILocation(line: 1502, column: 29, scope: !7804)
!7840 = !DILocation(line: 1503, column: 11, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 1503, column: 11)
!7842 = !DILocation(line: 1503, column: 11, scope: !7804)
!7843 = !DILocation(line: 1505, column: 14, scope: !7804)
!7844 = !DILocation(line: 1505, column: 31, scope: !7804)
!7845 = !DILocation(line: 1507, column: 14, scope: !7804)
!7846 = !DILocation(line: 1507, column: 7, scope: !7804)
!7847 = !DILocation(line: 1512, column: 1, scope: !7776)
!7848 = distinct !DISubprogram(name: "difference_cost", scope: !3, file: !3, line: 3640, type: !7849, scopeLine: 3643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7851)
!7849 = !DISubroutineType(types: !7850)
!7850 = !{!2141, !2184, !788, !788, !658, !658, !7336, !2204}
!7851 = !{!7852, !7853, !7854, !7855, !7856, !7857, !7858, !7859, !7860, !7861, !7862, !7879, !7880, !7881}
!7852 = !DILocalVariable(name: "data", arg: 1, scope: !7848, file: !3, line: 3640, type: !2184)
!7853 = !DILocalVariable(name: "e1", arg: 2, scope: !7848, file: !3, line: 3641, type: !788)
!7854 = !DILocalVariable(name: "e2", arg: 3, scope: !7848, file: !3, line: 3641, type: !788)
!7855 = !DILocalVariable(name: "symbol_present", arg: 4, scope: !7848, file: !3, line: 3641, type: !658)
!7856 = !DILocalVariable(name: "var_present", arg: 5, scope: !7848, file: !3, line: 3641, type: !658)
!7857 = !DILocalVariable(name: "offset", arg: 6, scope: !7848, file: !3, line: 3642, type: !7336)
!7858 = !DILocalVariable(name: "depends_on", arg: 7, scope: !7848, file: !3, line: 3642, type: !2204)
!7859 = !DILocalVariable(name: "mode", scope: !7848, file: !3, line: 3644, type: !8)
!7860 = !DILocalVariable(name: "off1", scope: !7848, file: !3, line: 3645, type: !743)
!7861 = !DILocalVariable(name: "off2", scope: !7848, file: !3, line: 3645, type: !743)
!7862 = !DILocalVariable(name: "aff_e1", scope: !7848, file: !3, line: 3646, type: !7863)
!7863 = !DIDerivedType(tag: DW_TAG_typedef, name: "aff_tree", file: !7864, line: 59, baseType: !7865)
!7864 = !DIFile(filename: "./tree-affine.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "affine_tree_combination", file: !7864, line: 36, size: 1856, elements: !7866)
!7866 = !{!7867, !7868, !7869, !7870, !7878}
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7865, file: !7864, line: 39, baseType: !788, size: 64)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7865, file: !7864, line: 42, baseType: !836, size: 128, offset: 64)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !7865, file: !7864, line: 45, baseType: !6, size: 32, offset: 192)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !7865, file: !7864, line: 53, baseType: !7871, size: 1536, offset: 256)
!7871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7872, size: 1536, elements: !7876)
!7872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aff_comb_elt", file: !7864, line: 27, size: 192, elements: !7873)
!7873 = !{!7874, !7875}
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !7872, file: !7864, line: 30, baseType: !788, size: 64)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !7872, file: !7864, line: 33, baseType: !836, size: 128, offset: 64)
!7876 = !{!7877}
!7877 = !DISubrange(count: 8)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "rest", scope: !7865, file: !7864, line: 58, baseType: !788, size: 64, offset: 1792)
!7879 = !DILocalVariable(name: "aff_e2", scope: !7848, file: !3, line: 3646, type: !7863)
!7880 = !DILocalVariable(name: "type", scope: !7848, file: !3, line: 3647, type: !788)
!7881 = !DILocalVariable(name: "cost", scope: !7882, file: !3, line: 3674, type: !2141)
!7882 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 3673, column: 5)
!7883 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 3672, column: 7)
!7884 = !DILocation(line: 0, scope: !7848)
!7885 = !DILocation(line: 3644, column: 28, scope: !7848)
!7886 = !DILocation(line: 3645, column: 3, scope: !7848)
!7887 = !DILocation(line: 3646, column: 3, scope: !7848)
!7888 = !DILocation(line: 3649, column: 8, scope: !7848)
!7889 = !DILocation(line: 3650, column: 8, scope: !7848)
!7890 = !DILocation(line: 3651, column: 14, scope: !7848)
!7891 = !DILocation(line: 3651, column: 21, scope: !7848)
!7892 = !DILocation(line: 3651, column: 19, scope: !7848)
!7893 = !DILocation(line: 3651, column: 11, scope: !7848)
!7894 = !DILocation(line: 3653, column: 3, scope: !7848)
!7895 = !DILocation(line: 3654, column: 3, scope: !7848)
!7896 = !DILocation(line: 3656, column: 7, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 3656, column: 7)
!7898 = !DILocation(line: 3656, column: 22, scope: !7897)
!7899 = !DILocation(line: 3656, column: 7, scope: !7848)
!7900 = !DILocation(line: 3657, column: 12, scope: !7897)
!7901 = !DILocation(line: 3657, column: 5, scope: !7897)
!7902 = !DILocation(line: 3659, column: 19, scope: !7848)
!7903 = !DILocation(line: 3661, column: 7, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 3661, column: 7)
!7905 = !DILocation(line: 3661, column: 7, scope: !7848)
!7906 = !DILocation(line: 3663, column: 20, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 3662, column: 5)
!7908 = !DILocation(line: 3664, column: 14, scope: !7907)
!7909 = !DILocation(line: 3664, column: 7, scope: !7907)
!7910 = !DILocation(line: 3667, column: 16, scope: !7848)
!7911 = !DILocation(line: 3669, column: 7, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 3669, column: 7)
!7913 = !DILocation(line: 3669, column: 7, scope: !7848)
!7914 = !DILocation(line: 3670, column: 12, scope: !7912)
!7915 = !DILocation(line: 3670, column: 5, scope: !7912)
!7916 = !DILocation(line: 3672, column: 7, scope: !7883)
!7917 = !DILocation(line: 3672, column: 7, scope: !7848)
!7918 = !DILocation(line: 3674, column: 24, scope: !7882)
!7919 = !DILocation(line: 3675, column: 54, scope: !7882)
!7920 = !DILocation(line: 3675, column: 20, scope: !7882)
!7921 = !DILocation(line: 3675, column: 12, scope: !7882)
!7922 = !DILocation(line: 3675, column: 17, scope: !7882)
!7923 = !DILocation(line: 3686, column: 1, scope: !7848)
!7924 = !DILocation(line: 3676, column: 7, scope: !7882)
!7925 = !DILocation(line: 3679, column: 27, scope: !7848)
!7926 = !DILocation(line: 3679, column: 10, scope: !7848)
!7927 = !DILocation(line: 3680, column: 3, scope: !7848)
!7928 = !DILocation(line: 3681, column: 3, scope: !7848)
!7929 = !DILocation(line: 3682, column: 35, scope: !7848)
!7930 = !DILocation(line: 3682, column: 3, scope: !7848)
!7931 = !DILocation(line: 3683, column: 3, scope: !7848)
!7932 = !DILocation(line: 3685, column: 32, scope: !7848)
!7933 = !DILocation(line: 3685, column: 10, scope: !7848)
!7934 = !DILocation(line: 3685, column: 3, scope: !7848)
!7935 = distinct !DISubprogram(name: "force_var_cost", scope: !3, file: !3, line: 3535, type: !7936, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7938)
!7936 = !DISubroutineType(types: !7937)
!7937 = !{!2141, !2184, !788, !2204}
!7938 = !{!7939, !7940, !7941}
!7939 = !DILocalVariable(name: "data", arg: 1, scope: !7935, file: !3, line: 3535, type: !2184)
!7940 = !DILocalVariable(name: "expr", arg: 2, scope: !7935, file: !3, line: 3536, type: !788)
!7941 = !DILocalVariable(name: "depends_on", arg: 3, scope: !7935, file: !3, line: 3536, type: !2204)
!7942 = !DILocation(line: 0, scope: !7935)
!7943 = !DILocation(line: 3538, column: 7, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 3538, column: 7)
!7945 = !DILocation(line: 3538, column: 7, scope: !7935)
!7946 = !DILocation(line: 3540, column: 22, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 3539, column: 5)
!7948 = !DILocation(line: 3541, column: 7, scope: !7947)
!7949 = !DILocation(line: 3544, column: 34, scope: !7935)
!7950 = !DILocation(line: 3542, column: 5, scope: !7947)
!7951 = !DILocation(line: 3544, column: 46, scope: !7935)
!7952 = !DILocation(line: 3544, column: 10, scope: !7935)
!7953 = !DILocation(line: 3544, column: 3, scope: !7935)
!7954 = !DILocation(line: 0, scope: !2339)
!7955 = !DILocation(line: 2941, column: 7, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !2339, file: !3, line: 2941, column: 7)
!7957 = !DILocation(line: 2941, column: 7, scope: !2339)
!7958 = !DILocation(line: 2942, column: 5, scope: !7956)
!7959 = !DILocation(line: 2944, column: 3, scope: !2339)
!7960 = !DILocation(line: 2945, column: 18, scope: !2339)
!7961 = !DILocation(line: 2945, column: 3, scope: !2339)
!7962 = !DILocation(line: 2949, column: 9, scope: !2339)
!7963 = !DILocation(line: 2950, column: 3, scope: !2339)
!7964 = !DILocation(line: 2952, column: 10, scope: !2339)
!7965 = !DILocation(line: 2953, column: 8, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !2339, file: !3, line: 2953, column: 7)
!7967 = !DILocation(line: 2953, column: 7, scope: !2339)
!7968 = !DILocation(line: 2956, column: 15, scope: !2339)
!7969 = !DILocation(line: 2958, column: 7, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !2339, file: !3, line: 2958, column: 7)
!7971 = !DILocation(line: 2958, column: 17, scope: !7970)
!7972 = !DILocation(line: 2958, column: 21, scope: !7970)
!7973 = !DILocation(line: 2958, column: 32, scope: !7970)
!7974 = !DILocation(line: 2958, column: 7, scope: !2339)
!7975 = !DILocation(line: 2960, column: 7, scope: !7970)
!7976 = !DILocation(line: 2959, column: 5, scope: !7970)
!7977 = !DILocation(line: 2962, column: 1, scope: !2339)
!7978 = distinct !DISubprogram(name: "add_costs", scope: !3, file: !3, line: 2512, type: !7979, scopeLine: 2513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7981)
!7979 = !DISubroutineType(types: !7980)
!7980 = !{!2141, !2141, !2141}
!7981 = !{!7982, !7983}
!7982 = !DILocalVariable(name: "cost1", arg: 1, scope: !7978, file: !3, line: 2512, type: !2141)
!7983 = !DILocalVariable(name: "cost2", arg: 2, scope: !7978, file: !3, line: 2512, type: !2141)
!7984 = !DILocation(line: 2514, column: 23, scope: !7978)
!7985 = !DILocation(line: 2514, column: 9, scope: !7978)
!7986 = !DILocation(line: 2514, column: 14, scope: !7978)
!7987 = !DILocation(line: 2515, column: 29, scope: !7978)
!7988 = !DILocation(line: 2515, column: 9, scope: !7978)
!7989 = !DILocation(line: 2515, column: 20, scope: !7978)
!7990 = !DILocation(line: 2517, column: 10, scope: !7978)
!7991 = !DILocation(line: 2517, column: 3, scope: !7978)
!7992 = distinct !DISubprogram(name: "stmt_after_increment", scope: !3, file: !3, line: 604, type: !7993, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !7995)
!7993 = !DISubroutineType(types: !7994)
!7994 = !{!136, !1305, !2126, !1090}
!7995 = !{!7996, !7997, !7998}
!7996 = !DILocalVariable(name: "loop", arg: 1, scope: !7992, file: !3, line: 604, type: !1305)
!7997 = !DILocalVariable(name: "cand", arg: 2, scope: !7992, file: !3, line: 604, type: !2126)
!7998 = !DILocalVariable(name: "stmt", arg: 3, scope: !7992, file: !3, line: 604, type: !1090)
!7999 = !DILocation(line: 0, scope: !7992)
!8000 = !DILocation(line: 606, column: 17, scope: !7992)
!8001 = !DILocation(line: 606, column: 3, scope: !7992)
!8002 = !DILocation(line: 612, column: 14, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 607, column: 5)
!8004 = !DILocation(line: 612, column: 7, scope: !8003)
!8005 = !DILocation(line: 616, column: 14, scope: !8003)
!8006 = !DILocation(line: 616, column: 7, scope: !8003)
!8007 = !DILocation(line: 619, column: 14, scope: !8003)
!8008 = !DILocation(line: 619, column: 7, scope: !8003)
!8009 = !DILocation(line: 622, column: 7, scope: !8003)
!8010 = !DILocation(line: 625, column: 5, scope: !7992)
!8011 = !DILocation(line: 627, column: 1, scope: !7992)
!8012 = !DILocation(line: 0, scope: !2352)
!8013 = !DILocation(line: 3120, column: 55, scope: !2352)
!8014 = !DILocation(line: 3120, column: 36, scope: !2352)
!8015 = !DILocation(line: 3122, column: 29, scope: !2352)
!8016 = !DILocation(line: 3122, column: 38, scope: !2352)
!8017 = !DILocation(line: 3122, column: 57, scope: !2352)
!8018 = !DILocation(line: 3132, column: 21, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !2352, file: !3, line: 3132, column: 7)
!8020 = !DILocation(line: 3132, column: 18, scope: !8019)
!8021 = !DILocation(line: 3132, column: 7, scope: !2352)
!8022 = !DILocation(line: 3133, column: 5, scope: !8019)
!8023 = !DILocation(line: 3136, column: 10, scope: !2352)
!8024 = !DILocation(line: 3137, column: 8, scope: !2382)
!8025 = !DILocation(line: 3137, column: 7, scope: !2352)
!8026 = !DILocation(line: 3140, column: 29, scope: !2381)
!8027 = !DILocation(line: 3140, column: 47, scope: !2381)
!8028 = !DILocation(line: 0, scope: !2381)
!8029 = !DILocation(line: 3147, column: 34, scope: !2381)
!8030 = !DILocation(line: 3147, column: 14, scope: !2381)
!8031 = !DILocation(line: 3149, column: 14, scope: !2381)
!8032 = !DILocation(line: 3151, column: 14, scope: !2381)
!8033 = !DILocation(line: 0, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 3153, column: 2)
!8035 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 3152, column: 7)
!8036 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 3152, column: 7)
!8037 = !DILocation(line: 3152, column: 12, scope: !8036)
!8038 = !DILocation(line: 0, scope: !8036)
!8039 = !DILocation(line: 3152, column: 25, scope: !8035)
!8040 = !DILocation(line: 3152, column: 7, scope: !8036)
!8041 = !DILocation(line: 3154, column: 21, scope: !8034)
!8042 = !DILocation(line: 3154, column: 19, scope: !8034)
!8043 = !DILocation(line: 3155, column: 9, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 3155, column: 8)
!8045 = !DILocation(line: 3155, column: 8, scope: !8034)
!8046 = !DILocation(line: 3152, column: 39, scope: !8035)
!8047 = !DILocation(line: 3152, column: 7, scope: !8035)
!8048 = distinct !{!8048, !8040, !8049}
!8049 = !DILocation(line: 3157, column: 2, scope: !8036)
!8050 = !DILocation(line: 3158, column: 28, scope: !2381)
!8051 = !DILocation(line: 3158, column: 26, scope: !2381)
!8052 = !DILocation(line: 3158, column: 13, scope: !2381)
!8053 = !DILocation(line: 3158, column: 24, scope: !2381)
!8054 = !DILocation(line: 3161, column: 12, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 3161, column: 7)
!8056 = !DILocation(line: 0, scope: !8055)
!8057 = !DILocation(line: 3161, column: 25, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 3161, column: 7)
!8059 = !DILocation(line: 3161, column: 7, scope: !8055)
!8060 = !DILocation(line: 3163, column: 35, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 3162, column: 2)
!8062 = !DILocation(line: 3163, column: 21, scope: !8061)
!8063 = !DILocation(line: 3163, column: 19, scope: !8061)
!8064 = !DILocation(line: 3164, column: 9, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 3164, column: 8)
!8066 = !DILocation(line: 3164, column: 8, scope: !8061)
!8067 = !DILocation(line: 3161, column: 39, scope: !8058)
!8068 = !DILocation(line: 3161, column: 7, scope: !8058)
!8069 = distinct !{!8069, !8059, !8070}
!8070 = !DILocation(line: 3166, column: 2, scope: !8055)
!8071 = !DILocation(line: 3167, column: 28, scope: !2381)
!8072 = !DILocation(line: 3167, column: 26, scope: !2381)
!8073 = !DILocation(line: 3167, column: 13, scope: !2381)
!8074 = !DILocation(line: 3167, column: 24, scope: !2381)
!8075 = !DILocation(line: 3169, column: 11, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 3169, column: 11)
!8077 = !DILocation(line: 3169, column: 21, scope: !8076)
!8078 = !DILocation(line: 3169, column: 25, scope: !8076)
!8079 = !DILocation(line: 3169, column: 36, scope: !8076)
!8080 = !DILocation(line: 3169, column: 11, scope: !2381)
!8081 = !DILocation(line: 3171, column: 4, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 3170, column: 2)
!8083 = !DILocation(line: 3172, column: 13, scope: !8082)
!8084 = !DILocation(line: 3173, column: 6, scope: !8082)
!8085 = !DILocation(line: 3174, column: 18, scope: !8082)
!8086 = !DILocation(line: 3174, column: 6, scope: !8082)
!8087 = !DILocation(line: 3172, column: 4, scope: !8082)
!8088 = !DILocation(line: 3175, column: 13, scope: !8082)
!8089 = !DILocation(line: 3177, column: 18, scope: !8082)
!8090 = !DILocation(line: 3177, column: 6, scope: !8082)
!8091 = !DILocation(line: 3175, column: 4, scope: !8082)
!8092 = !DILocation(line: 3178, column: 2, scope: !8082)
!8093 = !DILocation(line: 3181, column: 12, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 3181, column: 7)
!8095 = !DILocation(line: 0, scope: !8094)
!8096 = !DILocation(line: 3181, column: 21, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 3181, column: 7)
!8098 = !DILocation(line: 3181, column: 7, scope: !8094)
!8099 = !DILocation(line: 3182, column: 6, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 3182, column: 6)
!8101 = !DILocation(line: 3182, column: 6, scope: !8097)
!8102 = !DILocation(line: 3181, column: 36, scope: !8097)
!8103 = !DILocation(line: 3181, column: 7, scope: !8097)
!8104 = distinct !{!8104, !8098, !8105}
!8105 = !DILocation(line: 3186, column: 4, scope: !8094)
!8106 = !DILocation(line: 3190, column: 14, scope: !2381)
!8107 = !DILocation(line: 3191, column: 14, scope: !2381)
!8108 = !DILocation(line: 0, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 3218, column: 2)
!8110 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 3217, column: 7)
!8111 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 3217, column: 7)
!8112 = !DILocation(line: 3217, column: 12, scope: !8111)
!8113 = !DILocation(line: 0, scope: !8111)
!8114 = !DILocation(line: 3217, column: 21, scope: !8110)
!8115 = !DILocation(line: 3217, column: 7, scope: !8111)
!8116 = !DILocation(line: 3219, column: 12, scope: !8109)
!8117 = !DILocation(line: 3220, column: 15, scope: !8109)
!8118 = !DILocation(line: 3220, column: 12, scope: !8109)
!8119 = !DILocation(line: 3221, column: 15, scope: !8109)
!8120 = !DILocation(line: 3221, column: 12, scope: !8109)
!8121 = !DILocation(line: 3222, column: 15, scope: !8109)
!8122 = !DILocation(line: 3222, column: 12, scope: !8109)
!8123 = !DILocation(line: 3225, column: 8, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 3225, column: 8)
!8125 = !DILocation(line: 3225, column: 8, scope: !8109)
!8126 = !DILocation(line: 3226, column: 13, scope: !8124)
!8127 = !DILocation(line: 3226, column: 6, scope: !8124)
!8128 = !DILocation(line: 3229, column: 8, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 3229, column: 8)
!8130 = !DILocation(line: 3229, column: 8, scope: !8109)
!8131 = !DILocation(line: 3230, column: 13, scope: !8129)
!8132 = !DILocation(line: 3230, column: 6, scope: !8129)
!8133 = !DILocation(line: 3232, column: 8, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 3232, column: 8)
!8135 = !DILocation(line: 3232, column: 8, scope: !8109)
!8136 = !DILocation(line: 3234, column: 15, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 3233, column: 6)
!8138 = !DILocation(line: 3239, column: 8, scope: !8137)
!8139 = !DILocation(line: 3239, column: 32, scope: !8137)
!8140 = !DILocation(line: 3241, column: 12, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 3241, column: 12)
!8142 = !DILocation(line: 3241, column: 12, scope: !8137)
!8143 = !DILocation(line: 3242, column: 10, scope: !8141)
!8144 = !DILocation(line: 3242, column: 3, scope: !8141)
!8145 = !DILocation(line: 3247, column: 13, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 3247, column: 13)
!8147 = !DILocation(line: 3247, column: 13, scope: !8134)
!8148 = !DILocation(line: 3248, column: 13, scope: !8146)
!8149 = !DILocation(line: 3248, column: 6, scope: !8146)
!8150 = !DILocation(line: 0, scope: !8134)
!8151 = !DILocation(line: 3252, column: 8, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 3252, column: 8)
!8153 = !DILocation(line: 3252, column: 8, scope: !8109)
!8154 = !DILocation(line: 3253, column: 13, scope: !8152)
!8155 = !DILocation(line: 3253, column: 6, scope: !8152)
!8156 = !DILocation(line: 3255, column: 4, scope: !8109)
!8157 = !DILocation(line: 3258, column: 27, scope: !8109)
!8158 = !DILocation(line: 3259, column: 21, scope: !8109)
!8159 = !DILocation(line: 3260, column: 11, scope: !8109)
!8160 = !DILocation(line: 3261, column: 21, scope: !8109)
!8161 = !DILocation(line: 3262, column: 10, scope: !8109)
!8162 = !DILocation(line: 3263, column: 4, scope: !8109)
!8163 = !DILocation(line: 3265, column: 12, scope: !8109)
!8164 = !DILocation(line: 3266, column: 13, scope: !8109)
!8165 = !DILocation(line: 3266, column: 10, scope: !8109)
!8166 = !DILocation(line: 3268, column: 9, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 3268, column: 8)
!8168 = !DILocation(line: 3268, column: 8, scope: !8109)
!8169 = !DILocation(line: 3270, column: 4, scope: !8109)
!8170 = !DILocation(line: 3270, column: 44, scope: !8109)
!8171 = !DILocation(line: 3217, column: 28, scope: !8110)
!8172 = !DILocation(line: 3217, column: 7, scope: !8110)
!8173 = distinct !{!8173, !8115, !8174}
!8174 = !DILocation(line: 3271, column: 2, scope: !8111)
!8175 = !DILocation(line: 3285, column: 15, scope: !2381)
!8176 = !DILocation(line: 0, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 3287, column: 2)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 3286, column: 7)
!8179 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 3286, column: 7)
!8180 = !DILocation(line: 0, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 3296, column: 8)
!8182 = !DILocation(line: 3286, column: 12, scope: !8179)
!8183 = !DILocation(line: 0, scope: !8179)
!8184 = !DILocation(line: 3286, column: 21, scope: !8178)
!8185 = !DILocation(line: 3286, column: 7, scope: !8179)
!8186 = !DILocation(line: 3288, column: 12, scope: !8177)
!8187 = !DILocation(line: 3289, column: 15, scope: !8177)
!8188 = !DILocation(line: 3289, column: 12, scope: !8177)
!8189 = !DILocation(line: 3290, column: 15, scope: !8177)
!8190 = !DILocation(line: 3290, column: 12, scope: !8177)
!8191 = !DILocation(line: 3292, column: 12, scope: !8177)
!8192 = !DILocation(line: 3292, column: 44, scope: !8177)
!8193 = !DILocation(line: 3293, column: 8, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 3293, column: 8)
!8195 = !DILocation(line: 3293, column: 8, scope: !8177)
!8196 = !DILocation(line: 3296, column: 16, scope: !8181)
!8197 = !DILocation(line: 3296, column: 14, scope: !8181)
!8198 = !DILocation(line: 3296, column: 8, scope: !8177)
!8199 = !DILocation(line: 3297, column: 42, scope: !8181)
!8200 = !DILocation(line: 3297, column: 6, scope: !8181)
!8201 = !DILocation(line: 3286, column: 27, scope: !8178)
!8202 = !DILocation(line: 3286, column: 7, scope: !8178)
!8203 = distinct !{!8203, !8185, !8204}
!8204 = !DILocation(line: 3298, column: 2, scope: !8179)
!8205 = !DILocation(line: 3300, column: 11, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 3300, column: 11)
!8207 = !DILocation(line: 3300, column: 21, scope: !8206)
!8208 = !DILocation(line: 3300, column: 25, scope: !8206)
!8209 = !DILocation(line: 3300, column: 36, scope: !8206)
!8210 = !DILocation(line: 3300, column: 11, scope: !2381)
!8211 = !DILocation(line: 3302, column: 4, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 3301, column: 2)
!8213 = !DILocation(line: 3304, column: 9, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 3304, column: 4)
!8215 = !DILocation(line: 0, scope: !8214)
!8216 = !DILocation(line: 3304, column: 18, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 3304, column: 4)
!8218 = !DILocation(line: 3304, column: 4, scope: !8214)
!8219 = !DILocation(line: 3306, column: 16, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 3305, column: 6)
!8221 = !DILocation(line: 3307, column: 19, scope: !8220)
!8222 = !DILocation(line: 3307, column: 16, scope: !8220)
!8223 = !DILocation(line: 3308, column: 19, scope: !8220)
!8224 = !DILocation(line: 3308, column: 16, scope: !8220)
!8225 = !DILocation(line: 3309, column: 19, scope: !8220)
!8226 = !DILocation(line: 3309, column: 16, scope: !8220)
!8227 = !DILocation(line: 3311, column: 17, scope: !8220)
!8228 = !DILocation(line: 3311, column: 8, scope: !8220)
!8229 = !DILocation(line: 3312, column: 12, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 3312, column: 12)
!8231 = !DILocation(line: 3312, column: 12, scope: !8220)
!8232 = !DILocation(line: 3313, column: 12, scope: !8230)
!8233 = !DILocation(line: 3313, column: 3, scope: !8230)
!8234 = !DILocation(line: 3314, column: 12, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 3314, column: 12)
!8236 = !DILocation(line: 3314, column: 12, scope: !8220)
!8237 = !DILocation(line: 3315, column: 12, scope: !8235)
!8238 = !DILocation(line: 3315, column: 3, scope: !8235)
!8239 = !DILocation(line: 3316, column: 12, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 3316, column: 12)
!8241 = !DILocation(line: 3316, column: 12, scope: !8220)
!8242 = !DILocation(line: 3317, column: 12, scope: !8240)
!8243 = !DILocation(line: 3317, column: 3, scope: !8240)
!8244 = !DILocation(line: 3318, column: 12, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 3318, column: 12)
!8246 = !DILocation(line: 3318, column: 12, scope: !8220)
!8247 = !DILocation(line: 3319, column: 12, scope: !8245)
!8248 = !DILocation(line: 3319, column: 3, scope: !8245)
!8249 = !DILocation(line: 3321, column: 16, scope: !8220)
!8250 = !DILocation(line: 3322, column: 17, scope: !8220)
!8251 = !DILocation(line: 3322, column: 8, scope: !8220)
!8252 = !DILocation(line: 3304, column: 25, scope: !8217)
!8253 = !DILocation(line: 3304, column: 4, scope: !8217)
!8254 = distinct !{!8254, !8218, !8255}
!8255 = !DILocation(line: 3323, column: 6, scope: !8214)
!8256 = !DILocation(line: 3327, column: 13, scope: !8212)
!8257 = !DILocation(line: 3327, column: 4, scope: !8212)
!8258 = !DILocation(line: 3328, column: 2, scope: !8212)
!8259 = !DILocation(line: 3330, column: 7, scope: !2381)
!8260 = !DILocation(line: 3332, column: 5, scope: !2381)
!8261 = !DILocation(line: 3334, column: 10, scope: !2352)
!8262 = !DILocation(line: 3335, column: 49, scope: !2352)
!8263 = !DILocation(line: 3335, column: 40, scope: !2352)
!8264 = !DILocation(line: 3335, column: 54, scope: !2352)
!8265 = !DILocation(line: 3335, column: 10, scope: !2352)
!8266 = !DILocation(line: 3336, column: 10, scope: !2352)
!8267 = !DILocation(line: 3337, column: 29, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !2352, file: !3, line: 3337, column: 7)
!8269 = !DILocation(line: 3337, column: 7, scope: !2352)
!8270 = !DILocation(line: 3346, column: 22, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !2352, file: !3, line: 3346, column: 7)
!8272 = !DILocation(line: 3354, column: 30, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 3348, column: 12)
!8274 = !DILocation(line: 3359, column: 24, scope: !2352)
!8275 = !DILocation(line: 3360, column: 8, scope: !2352)
!8276 = !DILocation(line: 3360, column: 17, scope: !2352)
!8277 = !DILocation(line: 3360, column: 28, scope: !2352)
!8278 = !DILocation(line: 3361, column: 8, scope: !2352)
!8279 = !DILocation(line: 3361, column: 29, scope: !2352)
!8280 = !DILocation(line: 3361, column: 20, scope: !2352)
!8281 = !DILocation(line: 3362, column: 20, scope: !2352)
!8282 = !DILocation(line: 3363, column: 7, scope: !2352)
!8283 = !DILocation(line: 3363, column: 10, scope: !2352)
!8284 = !DILocation(line: 3365, column: 22, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !2352, file: !3, line: 3365, column: 7)
!8286 = !DILocation(line: 3365, column: 18, scope: !8285)
!8287 = !DILocation(line: 3366, column: 13, scope: !8285)
!8288 = !DILocation(line: 3366, column: 5, scope: !8285)
!8289 = !DILocation(line: 3368, column: 16, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !2352, file: !3, line: 3368, column: 7)
!8291 = !DILocation(line: 3369, column: 13, scope: !8290)
!8292 = !DILocation(line: 3369, column: 10, scope: !8290)
!8293 = !DILocation(line: 3369, column: 5, scope: !8290)
!8294 = !DILocation(line: 3371, column: 7, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !2352, file: !3, line: 3371, column: 7)
!8296 = !DILocation(line: 3371, column: 7, scope: !2352)
!8297 = !DILocation(line: 3372, column: 18, scope: !8295)
!8298 = !DILocation(line: 3372, column: 5, scope: !8295)
!8299 = !DILocation(line: 3373, column: 11, scope: !2352)
!8300 = !DILocation(line: 3374, column: 32, scope: !2352)
!8301 = !DILocation(line: 3374, column: 53, scope: !2352)
!8302 = !DILocation(line: 3374, column: 38, scope: !2352)
!8303 = !DILocation(line: 3374, column: 61, scope: !2352)
!8304 = !DILocation(line: 3374, column: 59, scope: !2352)
!8305 = !DILocation(line: 3374, column: 72, scope: !2352)
!8306 = !DILocation(line: 3374, column: 70, scope: !2352)
!8307 = !DILocation(line: 3375, column: 25, scope: !2352)
!8308 = !DILocation(line: 3375, column: 10, scope: !2352)
!8309 = !DILocation(line: 3376, column: 1, scope: !2352)
!8310 = distinct !DISubprogram(name: "get_computation_at", scope: !3, file: !3, line: 2911, type: !8311, scopeLine: 2913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8313)
!8311 = !DISubroutineType(types: !8312)
!8312 = !{!788, !1305, !2111, !2126, !1090}
!8313 = !{!8314, !8315, !8316, !8317, !8318, !8319}
!8314 = !DILocalVariable(name: "loop", arg: 1, scope: !8310, file: !3, line: 2911, type: !1305)
!8315 = !DILocalVariable(name: "use", arg: 2, scope: !8310, file: !3, line: 2912, type: !2111)
!8316 = !DILocalVariable(name: "cand", arg: 3, scope: !8310, file: !3, line: 2912, type: !2126)
!8317 = !DILocalVariable(name: "at", arg: 4, scope: !8310, file: !3, line: 2912, type: !1090)
!8318 = !DILocalVariable(name: "aff", scope: !8310, file: !3, line: 2914, type: !7863)
!8319 = !DILocalVariable(name: "type", scope: !8310, file: !3, line: 2915, type: !788)
!8320 = !DILocation(line: 0, scope: !8310)
!8321 = !DILocation(line: 2914, column: 3, scope: !8310)
!8322 = !DILocation(line: 2915, column: 15, scope: !8310)
!8323 = !DILocation(line: 2917, column: 8, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 2917, column: 7)
!8325 = !DILocation(line: 2917, column: 7, scope: !8310)
!8326 = !DILocation(line: 2919, column: 3, scope: !8310)
!8327 = !DILocation(line: 2920, column: 10, scope: !8310)
!8328 = !DILocation(line: 2920, column: 3, scope: !8310)
!8329 = !DILocation(line: 2921, column: 1, scope: !8310)
!8330 = distinct !DISubprogram(name: "new_cost", scope: !3, file: !3, line: 2499, type: !8331, scopeLine: 2500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8333)
!8331 = !DISubroutineType(types: !8332)
!8332 = !{!2141, !6, !6}
!8333 = !{!8334, !8335, !8336}
!8334 = !DILocalVariable(name: "runtime", arg: 1, scope: !8330, file: !3, line: 2499, type: !6)
!8335 = !DILocalVariable(name: "complexity", arg: 2, scope: !8330, file: !3, line: 2499, type: !6)
!8336 = !DILocalVariable(name: "cost", scope: !8330, file: !3, line: 2501, type: !2141)
!8337 = !DILocation(line: 0, scope: !8330)
!8338 = !DILocation(line: 2503, column: 8, scope: !8330)
!8339 = !DILocation(line: 2503, column: 13, scope: !8330)
!8340 = !DILocation(line: 2504, column: 8, scope: !8330)
!8341 = !DILocation(line: 2504, column: 19, scope: !8330)
!8342 = !DILocation(line: 2506, column: 3, scope: !8330)
!8343 = distinct !DISubprogram(name: "computation_cost", scope: !3, file: !3, line: 2737, type: !8344, scopeLine: 2738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8346)
!8344 = !DISubroutineType(types: !8345)
!8345 = !{!6, !788, !136}
!8346 = !{!8347, !8348, !8349, !8350, !8351, !8352, !8353, !8354}
!8347 = !DILocalVariable(name: "expr", arg: 1, scope: !8343, file: !3, line: 2737, type: !788)
!8348 = !DILocalVariable(name: "speed", arg: 2, scope: !8343, file: !3, line: 2737, type: !136)
!8349 = !DILocalVariable(name: "seq", scope: !8343, file: !3, line: 2739, type: !673)
!8350 = !DILocalVariable(name: "rslt", scope: !8343, file: !3, line: 2739, type: !673)
!8351 = !DILocalVariable(name: "type", scope: !8343, file: !3, line: 2740, type: !788)
!8352 = !DILocalVariable(name: "cost", scope: !8343, file: !3, line: 2741, type: !6)
!8353 = !DILocalVariable(name: "regno", scope: !8343, file: !3, line: 2743, type: !659)
!8354 = !DILocalVariable(name: "real_frequency", scope: !8343, file: !3, line: 2744, type: !641)
!8355 = !DILocation(line: 0, scope: !8343)
!8356 = !DILocation(line: 2740, column: 15, scope: !8343)
!8357 = !DILocation(line: 2743, column: 3, scope: !8343)
!8358 = !DILocation(line: 2743, column: 7, scope: !8343)
!8359 = !DILocation(line: 2744, column: 44, scope: !8343)
!8360 = !DILocation(line: 2744, column: 50, scope: !8343)
!8361 = !DILocation(line: 2746, column: 28, scope: !8343)
!8362 = !DILocation(line: 2747, column: 26, scope: !8343)
!8363 = !DILocation(line: 2748, column: 3, scope: !8343)
!8364 = !DILocation(line: 2749, column: 3, scope: !8343)
!8365 = !DILocation(line: 2750, column: 23, scope: !8343)
!8366 = !DILocation(line: 2750, column: 39, scope: !8343)
!8367 = !DILocation(line: 2750, column: 10, scope: !8343)
!8368 = !DILocation(line: 2751, column: 9, scope: !8343)
!8369 = !DILocation(line: 2752, column: 3, scope: !8343)
!8370 = !DILocation(line: 2753, column: 3, scope: !8343)
!8371 = !DILocation(line: 2754, column: 3, scope: !8343)
!8372 = !DILocation(line: 2754, column: 9, scope: !8343)
!8373 = !DILocation(line: 2754, column: 28, scope: !8343)
!8374 = !DILocation(line: 2756, column: 10, scope: !8343)
!8375 = !DILocation(line: 2757, column: 7, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 2757, column: 7)
!8377 = !DILocation(line: 2757, column: 7, scope: !8343)
!8378 = !DILocation(line: 2758, column: 27, scope: !8376)
!8379 = !DILocation(line: 2758, column: 43, scope: !8376)
!8380 = !DILocation(line: 2759, column: 6, scope: !8376)
!8381 = !DILocation(line: 2758, column: 13, scope: !8376)
!8382 = !DILocation(line: 2758, column: 10, scope: !8376)
!8383 = !DILocation(line: 2758, column: 5, scope: !8376)
!8384 = !DILocation(line: 2762, column: 1, scope: !8343)
!8385 = !DILocation(line: 2761, column: 3, scope: !8343)
!8386 = distinct !DISubprogram(name: "shwi_to_double_int", scope: !837, file: !837, line: 72, type: !8387, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8389)
!8387 = !DISubroutineType(types: !8388)
!8388 = !{!836, !7}
!8389 = !{!8390, !8391}
!8390 = !DILocalVariable(name: "cst", arg: 1, scope: !8386, file: !837, line: 72, type: !7)
!8391 = !DILocalVariable(name: "r", scope: !8386, file: !837, line: 74, type: !836)
!8392 = !DILocation(line: 0, scope: !8386)
!8393 = !DILocation(line: 77, column: 12, scope: !8386)
!8394 = !DILocation(line: 79, column: 3, scope: !8386)
!8395 = distinct !DISubprogram(name: "double_int_zero_p", scope: !837, file: !837, line: 152, type: !8396, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8398)
!8396 = !DISubroutineType(types: !8397)
!8397 = !{!136, !836}
!8398 = !{!8399}
!8399 = !DILocalVariable(name: "cst", arg: 1, scope: !8395, file: !837, line: 152, type: !836)
!8400 = !DILocation(line: 154, column: 23, scope: !8395)
!8401 = !DILocation(line: 154, column: 10, scope: !8395)
!8402 = !DILocation(line: 154, column: 3, scope: !8395)
!8403 = distinct !DISubprogram(name: "ptr_difference_cost", scope: !3, file: !3, line: 3599, type: !7849, scopeLine: 3602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8404)
!8404 = !{!8405, !8406, !8407, !8408, !8409, !8410, !8411, !8412, !8413, !8414, !8415}
!8405 = !DILocalVariable(name: "data", arg: 1, scope: !8403, file: !3, line: 3599, type: !2184)
!8406 = !DILocalVariable(name: "e1", arg: 2, scope: !8403, file: !3, line: 3600, type: !788)
!8407 = !DILocalVariable(name: "e2", arg: 3, scope: !8403, file: !3, line: 3600, type: !788)
!8408 = !DILocalVariable(name: "symbol_present", arg: 4, scope: !8403, file: !3, line: 3600, type: !658)
!8409 = !DILocalVariable(name: "var_present", arg: 5, scope: !8403, file: !3, line: 3600, type: !658)
!8410 = !DILocalVariable(name: "offset", arg: 6, scope: !8403, file: !3, line: 3601, type: !7336)
!8411 = !DILocalVariable(name: "depends_on", arg: 7, scope: !8403, file: !3, line: 3601, type: !2204)
!8412 = !DILocalVariable(name: "diff", scope: !8403, file: !3, line: 3603, type: !7)
!8413 = !DILocalVariable(name: "aff_e1", scope: !8403, file: !3, line: 3604, type: !7863)
!8414 = !DILocalVariable(name: "aff_e2", scope: !8403, file: !3, line: 3604, type: !7863)
!8415 = !DILocalVariable(name: "type", scope: !8403, file: !3, line: 3605, type: !788)
!8416 = !DILocation(line: 0, scope: !8403)
!8417 = !DILocation(line: 3603, column: 3, scope: !8403)
!8418 = !DILocation(line: 3603, column: 17, scope: !8403)
!8419 = !DILocation(line: 3604, column: 3, scope: !8403)
!8420 = !DILocation(line: 3607, column: 3, scope: !8403)
!8421 = !DILocation(line: 3609, column: 7, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3609, column: 7)
!8423 = !DILocation(line: 3609, column: 7, scope: !8403)
!8424 = !DILocation(line: 3611, column: 18, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 3610, column: 5)
!8426 = !DILocation(line: 3611, column: 15, scope: !8425)
!8427 = !DILocation(line: 3612, column: 23, scope: !8425)
!8428 = !DILocation(line: 3613, column: 20, scope: !8425)
!8429 = !DILocation(line: 3614, column: 7, scope: !8425)
!8430 = !DILocation(line: 3617, column: 7, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3617, column: 7)
!8432 = !DILocation(line: 3617, column: 7, scope: !8403)
!8433 = !DILocation(line: 3618, column: 38, scope: !8431)
!8434 = !DILocation(line: 3618, column: 12, scope: !8431)
!8435 = !DILocation(line: 3618, column: 5, scope: !8431)
!8436 = !DILocation(line: 3621, column: 19, scope: !8403)
!8437 = !DILocation(line: 3622, column: 16, scope: !8403)
!8438 = !DILocation(line: 3624, column: 27, scope: !8403)
!8439 = !DILocation(line: 3624, column: 10, scope: !8403)
!8440 = !DILocation(line: 3625, column: 3, scope: !8403)
!8441 = !DILocation(line: 3626, column: 3, scope: !8403)
!8442 = !DILocation(line: 3627, column: 35, scope: !8403)
!8443 = !DILocation(line: 3627, column: 3, scope: !8403)
!8444 = !DILocation(line: 3628, column: 3, scope: !8403)
!8445 = !DILocation(line: 3630, column: 32, scope: !8403)
!8446 = !DILocation(line: 3630, column: 10, scope: !8403)
!8447 = !DILocation(line: 3630, column: 3, scope: !8403)
!8448 = !DILocation(line: 3631, column: 1, scope: !8403)
!8449 = distinct !DISubprogram(name: "split_address_cost", scope: !3, file: !3, line: 3553, type: !8450, scopeLine: 3556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8452)
!8450 = !DISubroutineType(types: !8451)
!8451 = !{!2141, !2184, !788, !658, !658, !7336, !2204}
!8452 = !{!8453, !8454, !8455, !8456, !8457, !8458, !8459, !8460, !8461, !8462, !8463, !8464, !8465}
!8453 = !DILocalVariable(name: "data", arg: 1, scope: !8449, file: !3, line: 3553, type: !2184)
!8454 = !DILocalVariable(name: "addr", arg: 2, scope: !8449, file: !3, line: 3554, type: !788)
!8455 = !DILocalVariable(name: "symbol_present", arg: 3, scope: !8449, file: !3, line: 3554, type: !658)
!8456 = !DILocalVariable(name: "var_present", arg: 4, scope: !8449, file: !3, line: 3554, type: !658)
!8457 = !DILocalVariable(name: "offset", arg: 5, scope: !8449, file: !3, line: 3555, type: !7336)
!8458 = !DILocalVariable(name: "depends_on", arg: 6, scope: !8449, file: !3, line: 3555, type: !2204)
!8459 = !DILocalVariable(name: "core", scope: !8449, file: !3, line: 3557, type: !788)
!8460 = !DILocalVariable(name: "bitsize", scope: !8449, file: !3, line: 3558, type: !7)
!8461 = !DILocalVariable(name: "bitpos", scope: !8449, file: !3, line: 3559, type: !7)
!8462 = !DILocalVariable(name: "toffset", scope: !8449, file: !3, line: 3560, type: !788)
!8463 = !DILocalVariable(name: "mode", scope: !8449, file: !3, line: 3561, type: !8)
!8464 = !DILocalVariable(name: "unsignedp", scope: !8449, file: !3, line: 3562, type: !659)
!8465 = !DILocalVariable(name: "volatilep", scope: !8449, file: !3, line: 3562, type: !659)
!8466 = !DILocation(line: 0, scope: !8449)
!8467 = !DILocation(line: 3558, column: 3, scope: !8449)
!8468 = !DILocation(line: 3559, column: 3, scope: !8449)
!8469 = !DILocation(line: 3560, column: 3, scope: !8449)
!8470 = !DILocation(line: 3561, column: 3, scope: !8449)
!8471 = !DILocation(line: 3562, column: 3, scope: !8449)
!8472 = !DILocation(line: 3564, column: 10, scope: !8449)
!8473 = !DILocation(line: 3567, column: 7, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 3567, column: 7)
!8475 = !DILocation(line: 3567, column: 15, scope: !8474)
!8476 = !DILocation(line: 3568, column: 7, scope: !8474)
!8477 = !DILocation(line: 3568, column: 10, scope: !8474)
!8478 = !DILocation(line: 3568, column: 33, scope: !8474)
!8479 = !DILocation(line: 3569, column: 7, scope: !8474)
!8480 = !DILocation(line: 3569, column: 10, scope: !8474)
!8481 = !DILocation(line: 3569, column: 27, scope: !8474)
!8482 = !DILocation(line: 3567, column: 7, scope: !8449)
!8483 = !DILocation(line: 3571, column: 23, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 3570, column: 5)
!8485 = !DILocation(line: 3572, column: 20, scope: !8484)
!8486 = !DILocation(line: 3573, column: 22, scope: !8484)
!8487 = !DILocation(line: 3574, column: 7, scope: !8484)
!8488 = !DILocation(line: 3575, column: 48, scope: !8484)
!8489 = !DILocation(line: 3575, column: 24, scope: !8484)
!8490 = !DILocation(line: 3575, column: 14, scope: !8484)
!8491 = !DILocation(line: 3575, column: 7, scope: !8484)
!8492 = !DILocation(line: 3578, column: 21, scope: !8449)
!8493 = !DILocation(line: 3578, column: 11, scope: !8449)
!8494 = !DILocation(line: 3579, column: 7, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 3579, column: 7)
!8496 = !DILocation(line: 3580, column: 7, scope: !8495)
!8497 = !DILocation(line: 3580, column: 10, scope: !8495)
!8498 = !DILocation(line: 3579, column: 7, scope: !8449)
!8499 = !DILocation(line: 3582, column: 23, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 3581, column: 5)
!8501 = !DILocation(line: 3583, column: 20, scope: !8500)
!8502 = !DILocation(line: 3584, column: 7, scope: !8500)
!8503 = !DILocation(line: 3587, column: 19, scope: !8449)
!8504 = !DILocation(line: 3588, column: 16, scope: !8449)
!8505 = !DILocation(line: 3589, column: 3, scope: !8449)
!8506 = !DILocation(line: 3590, column: 1, scope: !8449)
!8507 = !DILocation(line: 0, scope: !2307)
!8508 = !DILocation(line: 3388, column: 3, scope: !2307)
!8509 = !DILocation(line: 3391, column: 8, scope: !2321)
!8510 = !DILocation(line: 3391, column: 7, scope: !2307)
!8511 = !DILocation(line: 3393, column: 39, scope: !2320)
!8512 = !DILocation(line: 3393, column: 19, scope: !2320)
!8513 = !DILocation(line: 0, scope: !2320)
!8514 = !DILocation(line: 3398, column: 33, scope: !2320)
!8515 = !DILocation(line: 3398, column: 13, scope: !2320)
!8516 = !DILocation(line: 3399, column: 7, scope: !2320)
!8517 = !DILocation(line: 3399, column: 25, scope: !2320)
!8518 = !DILocation(line: 3400, column: 11, scope: !2320)
!8519 = !DILocation(line: 3401, column: 7, scope: !2320)
!8520 = !DILocation(line: 3403, column: 14, scope: !2320)
!8521 = !DILocation(line: 3406, column: 12, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 3406, column: 7)
!8523 = !DILocation(line: 0, scope: !8522)
!8524 = !DILocation(line: 3406, column: 21, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 3406, column: 7)
!8526 = !DILocation(line: 3406, column: 7, scope: !8522)
!8527 = !DILocation(line: 3408, column: 55, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8525, file: !3, line: 3407, column: 2)
!8529 = !DILocation(line: 3408, column: 40, scope: !8528)
!8530 = !DILocation(line: 3409, column: 20, scope: !8528)
!8531 = !DILocation(line: 3408, column: 22, scope: !8528)
!8532 = !DILocation(line: 3408, column: 4, scope: !8528)
!8533 = !DILocation(line: 3408, column: 20, scope: !8528)
!8534 = !DILocation(line: 3411, column: 21, scope: !8528)
!8535 = !DILocation(line: 3411, column: 48, scope: !8528)
!8536 = !DILocation(line: 3411, column: 4, scope: !8528)
!8537 = !DILocation(line: 3411, column: 19, scope: !8528)
!8538 = !DILocation(line: 3414, column: 26, scope: !8528)
!8539 = !DILocation(line: 3414, column: 8, scope: !8528)
!8540 = !DILocation(line: 3416, column: 42, scope: !8528)
!8541 = !DILocation(line: 3413, column: 4, scope: !8528)
!8542 = !DILocation(line: 3414, column: 6, scope: !8528)
!8543 = !DILocation(line: 3417, column: 8, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 3417, column: 8)
!8545 = !DILocation(line: 3417, column: 18, scope: !8544)
!8546 = !DILocation(line: 3417, column: 22, scope: !8544)
!8547 = !DILocation(line: 3417, column: 33, scope: !8544)
!8548 = !DILocation(line: 3417, column: 8, scope: !8528)
!8549 = !DILocation(line: 3419, column: 66, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 3418, column: 6)
!8551 = !DILocation(line: 3419, column: 8, scope: !8550)
!8552 = !DILocation(line: 3420, column: 17, scope: !8550)
!8553 = !DILocation(line: 3420, column: 52, scope: !8550)
!8554 = !DILocation(line: 3420, column: 8, scope: !8550)
!8555 = !DILocation(line: 3421, column: 17, scope: !8550)
!8556 = !DILocation(line: 3421, column: 51, scope: !8550)
!8557 = !DILocation(line: 3421, column: 8, scope: !8550)
!8558 = !DILocation(line: 3422, column: 17, scope: !8550)
!8559 = !DILocation(line: 3422, column: 52, scope: !8550)
!8560 = !DILocation(line: 3422, column: 8, scope: !8550)
!8561 = !DILocation(line: 3423, column: 17, scope: !8550)
!8562 = !DILocation(line: 3423, column: 50, scope: !8550)
!8563 = !DILocation(line: 3423, column: 8, scope: !8550)
!8564 = !DILocation(line: 3424, column: 17, scope: !8550)
!8565 = !DILocation(line: 3424, column: 8, scope: !8550)
!8566 = !DILocation(line: 3425, column: 6, scope: !8550)
!8567 = !DILocation(line: 3406, column: 27, scope: !8525)
!8568 = !DILocation(line: 3406, column: 7, scope: !8525)
!8569 = distinct !{!8569, !8526, !8570}
!8570 = !DILocation(line: 3426, column: 2, scope: !8522)
!8571 = !DILocation(line: 3428, column: 25, scope: !2320)
!8572 = !DILocation(line: 3429, column: 5, scope: !2320)
!8573 = !DILocation(line: 3431, column: 3, scope: !2307)
!8574 = !DILocation(line: 3433, column: 7, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 3433, column: 7)
!8576 = !DILocation(line: 3433, column: 7, scope: !2307)
!8577 = !DILocation(line: 3434, column: 5, scope: !8575)
!8578 = !DILocation(line: 3436, column: 7, scope: !2330)
!8579 = !DILocation(line: 3436, column: 7, scope: !2307)
!8580 = !DILocation(line: 3438, column: 28, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 3438, column: 11)
!8582 = !DILocation(line: 3438, column: 11, scope: !2329)
!8583 = !DILocation(line: 3439, column: 19, scope: !8581)
!8584 = !DILocation(line: 3439, column: 9, scope: !8581)
!8585 = !DILocation(line: 3439, column: 2, scope: !8581)
!8586 = !DILocation(line: 3441, column: 28, scope: !2328)
!8587 = !DILocation(line: 3441, column: 11, scope: !2329)
!8588 = !DILocation(line: 3443, column: 15, scope: !2327)
!8589 = !DILocation(line: 0, scope: !2327)
!8590 = !DILocation(line: 3445, column: 8, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !2327, file: !3, line: 3445, column: 8)
!8592 = !DILocation(line: 3445, column: 24, scope: !8591)
!8593 = !DILocation(line: 3446, column: 8, scope: !8591)
!8594 = !DILocation(line: 3446, column: 27, scope: !8591)
!8595 = !DILocation(line: 3447, column: 8, scope: !8591)
!8596 = !DILocation(line: 3447, column: 27, scope: !8591)
!8597 = !DILocation(line: 3445, column: 8, scope: !2327)
!8598 = !DILocation(line: 3448, column: 23, scope: !8591)
!8599 = !DILocation(line: 3448, column: 13, scope: !8591)
!8600 = !DILocation(line: 3448, column: 6, scope: !8591)
!8601 = !DILocation(line: 3451, column: 24, scope: !2329)
!8602 = !DILocation(line: 3451, column: 14, scope: !2329)
!8603 = !DILocation(line: 3451, column: 7, scope: !2329)
!8604 = !DILocation(line: 3454, column: 3, scope: !2307)
!8605 = !DILocation(line: 3460, column: 13, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 3455, column: 5)
!8607 = !DILocation(line: 3461, column: 13, scope: !8606)
!8608 = !DILocation(line: 3462, column: 7, scope: !8606)
!8609 = !DILocation(line: 3463, column: 7, scope: !8606)
!8610 = !DILocation(line: 3465, column: 11, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 3465, column: 11)
!8612 = !DILocation(line: 3465, column: 11, scope: !8606)
!8613 = !DILocation(line: 3466, column: 2, scope: !8611)
!8614 = !DILocation(line: 3468, column: 10, scope: !8611)
!8615 = !DILocation(line: 0, scope: !8611)
!8616 = !DILocation(line: 3470, column: 11, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 3470, column: 11)
!8618 = !DILocation(line: 3470, column: 11, scope: !8606)
!8619 = !DILocation(line: 3471, column: 2, scope: !8617)
!8620 = !DILocation(line: 3473, column: 10, scope: !8617)
!8621 = !DILocation(line: 3478, column: 13, scope: !8606)
!8622 = !DILocation(line: 3479, column: 7, scope: !8606)
!8623 = !DILocation(line: 3482, column: 11, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 3482, column: 11)
!8625 = !DILocation(line: 3482, column: 11, scope: !8606)
!8626 = !DILocation(line: 3483, column: 2, scope: !8624)
!8627 = !DILocation(line: 3485, column: 10, scope: !8624)
!8628 = !DILocation(line: 0, scope: !8624)
!8629 = !DILocation(line: 3488, column: 7, scope: !8606)
!8630 = !DILocation(line: 3492, column: 24, scope: !8606)
!8631 = !DILocation(line: 3492, column: 14, scope: !8606)
!8632 = !DILocation(line: 3492, column: 7, scope: !8606)
!8633 = !DILocation(line: 0, scope: !8606)
!8634 = !DILocation(line: 3495, column: 10, scope: !2307)
!8635 = !DILocation(line: 3496, column: 11, scope: !2307)
!8636 = !DILocation(line: 3496, column: 3, scope: !2307)
!8637 = !DILocation(line: 3502, column: 24, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 3497, column: 5)
!8639 = !DILocation(line: 3502, column: 14, scope: !8638)
!8640 = !DILocation(line: 3503, column: 7, scope: !8638)
!8641 = !DILocation(line: 3506, column: 11, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 3506, column: 11)
!8643 = !DILocation(line: 3506, column: 11, scope: !8638)
!8644 = !DILocation(line: 3507, column: 37, scope: !8642)
!8645 = !DILocation(line: 3507, column: 19, scope: !8642)
!8646 = !DILocation(line: 3507, column: 9, scope: !8642)
!8647 = !DILocation(line: 3507, column: 2, scope: !8642)
!8648 = !DILocation(line: 3508, column: 16, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 3508, column: 16)
!8650 = !DILocation(line: 3508, column: 16, scope: !8642)
!8651 = !DILocation(line: 3509, column: 37, scope: !8649)
!8652 = !DILocation(line: 3509, column: 19, scope: !8649)
!8653 = !DILocation(line: 3509, column: 9, scope: !8649)
!8654 = !DILocation(line: 3511, column: 19, scope: !8649)
!8655 = !DILocation(line: 3511, column: 9, scope: !8649)
!8656 = !DILocation(line: 3511, column: 2, scope: !8649)
!8657 = !DILocation(line: 3515, column: 7, scope: !8638)
!8658 = !DILocation(line: 3516, column: 5, scope: !8638)
!8659 = !DILocation(line: 3518, column: 10, scope: !2307)
!8660 = !DILocation(line: 3519, column: 10, scope: !2307)
!8661 = !DILocation(line: 3525, column: 12, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 3525, column: 7)
!8663 = !DILocation(line: 3525, column: 25, scope: !8662)
!8664 = !DILocation(line: 3525, column: 17, scope: !8662)
!8665 = !DILocation(line: 3525, column: 7, scope: !2307)
!8666 = !DILocation(line: 3526, column: 15, scope: !8662)
!8667 = !DILocation(line: 3528, column: 10, scope: !2307)
!8668 = !DILocation(line: 3526, column: 5, scope: !8662)
!8669 = !DILocation(line: 3528, column: 3, scope: !2307)
!8670 = !DILocation(line: 3529, column: 1, scope: !2307)
!8671 = distinct !DISubprogram(name: "produce_memory_decl_rtl", scope: !3, file: !3, line: 2650, type: !8672, scopeLine: 2651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8674)
!8672 = !DISubroutineType(types: !8673)
!8673 = !{!673, !788, !2229}
!8674 = !{!8675, !8676, !8677, !8678, !8679, !8680}
!8675 = !DILocalVariable(name: "obj", arg: 1, scope: !8671, file: !3, line: 2650, type: !788)
!8676 = !DILocalVariable(name: "regno", arg: 2, scope: !8671, file: !3, line: 2650, type: !2229)
!8677 = !DILocalVariable(name: "as", scope: !8671, file: !3, line: 2652, type: !2259)
!8678 = !DILocalVariable(name: "address_mode", scope: !8671, file: !3, line: 2653, type: !8)
!8679 = !DILocalVariable(name: "x", scope: !8671, file: !3, line: 2654, type: !673)
!8680 = !DILocalVariable(name: "name", scope: !8681, file: !3, line: 2659, type: !664)
!8681 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2658, column: 5)
!8682 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 2657, column: 7)
!8683 = !DILocation(line: 0, scope: !8671)
!8684 = !DILocation(line: 2652, column: 21, scope: !8671)
!8685 = !DILocation(line: 2653, column: 55, scope: !8671)
!8686 = !DILocation(line: 2653, column: 36, scope: !8671)
!8687 = !DILocation(line: 2656, column: 3, scope: !8671)
!8688 = !DILocation(line: 2657, column: 7, scope: !8682)
!8689 = !DILocation(line: 2657, column: 25, scope: !8682)
!8690 = !DILocation(line: 2657, column: 28, scope: !8682)
!8691 = !DILocation(line: 2657, column: 7, scope: !8671)
!8692 = !DILocation(line: 2659, column: 26, scope: !8681)
!8693 = !DILocation(line: 0, scope: !8681)
!8694 = !DILocation(line: 2660, column: 11, scope: !8681)
!8695 = !DILocation(line: 2661, column: 7, scope: !8681)
!8696 = !DILocation(line: 2662, column: 24, scope: !8681)
!8697 = !DILocation(line: 2662, column: 11, scope: !8681)
!8698 = !DILocation(line: 2663, column: 7, scope: !8681)
!8699 = !DILocation(line: 2664, column: 15, scope: !8681)
!8700 = !DILocation(line: 2664, column: 7, scope: !8681)
!8701 = !DILocation(line: 2665, column: 5, scope: !8681)
!8702 = !DILocation(line: 2668, column: 46, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2667, column: 5)
!8704 = !DILocation(line: 2668, column: 11, scope: !8703)
!8705 = !DILocation(line: 2669, column: 24, scope: !8703)
!8706 = !DILocation(line: 2669, column: 11, scope: !8703)
!8707 = !DILocation(line: 2670, column: 7, scope: !8703)
!8708 = !DILocation(line: 0, scope: !8682)
!8709 = !DILocation(line: 2673, column: 3, scope: !8671)
!8710 = distinct !DISubprogram(name: "stmt_after_ip_normal_pos", scope: !3, file: !3, line: 563, type: !3217, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8711)
!8711 = !{!8712, !8713, !8714, !8715}
!8712 = !DILocalVariable(name: "loop", arg: 1, scope: !8710, file: !3, line: 563, type: !1305)
!8713 = !DILocalVariable(name: "stmt", arg: 2, scope: !8710, file: !3, line: 563, type: !1090)
!8714 = !DILocalVariable(name: "bb", scope: !8710, file: !3, line: 565, type: !1053)
!8715 = !DILocalVariable(name: "sbb", scope: !8710, file: !3, line: 565, type: !1053)
!8716 = !DILocation(line: 0, scope: !8710)
!8717 = !DILocation(line: 565, column: 20, scope: !8710)
!8718 = !DILocation(line: 565, column: 48, scope: !8710)
!8719 = !DILocation(line: 567, column: 3, scope: !8710)
!8720 = !DILocation(line: 569, column: 20, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 569, column: 7)
!8722 = !DILocation(line: 569, column: 11, scope: !8721)
!8723 = !DILocation(line: 569, column: 7, scope: !8710)
!8724 = !DILocation(line: 572, column: 11, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 572, column: 7)
!8726 = !DILocation(line: 572, column: 7, scope: !8710)
!8727 = !DILocation(line: 575, column: 18, scope: !8710)
!8728 = !DILocation(line: 575, column: 15, scope: !8710)
!8729 = !DILocation(line: 575, column: 10, scope: !8710)
!8730 = !DILocation(line: 575, column: 3, scope: !8710)
!8731 = !DILocation(line: 576, column: 1, scope: !8710)
!8732 = distinct !DISubprogram(name: "stmt_after_inc_pos", scope: !3, file: !3, line: 583, type: !8733, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8735)
!8733 = !DISubroutineType(types: !8734)
!8734 = !{!136, !2126, !1090, !136}
!8735 = !{!8736, !8737, !8738, !8739, !8740}
!8736 = !DILocalVariable(name: "cand", arg: 1, scope: !8732, file: !3, line: 583, type: !2126)
!8737 = !DILocalVariable(name: "stmt", arg: 2, scope: !8732, file: !3, line: 583, type: !1090)
!8738 = !DILocalVariable(name: "true_if_equal", arg: 3, scope: !8732, file: !3, line: 583, type: !136)
!8739 = !DILocalVariable(name: "cand_bb", scope: !8732, file: !3, line: 585, type: !1053)
!8740 = !DILocalVariable(name: "stmt_bb", scope: !8732, file: !3, line: 586, type: !1053)
!8741 = !DILocation(line: 0, scope: !8732)
!8742 = !DILocation(line: 585, column: 42, scope: !8732)
!8743 = !DILocation(line: 585, column: 25, scope: !8732)
!8744 = !DILocation(line: 586, column: 25, scope: !8732)
!8745 = !DILocation(line: 588, column: 8, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 588, column: 7)
!8747 = !DILocation(line: 588, column: 7, scope: !8732)
!8748 = !DILocation(line: 591, column: 15, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 591, column: 7)
!8750 = !DILocation(line: 591, column: 7, scope: !8732)
!8751 = !DILocation(line: 594, column: 7, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 594, column: 7)
!8753 = !DILocation(line: 595, column: 7, scope: !8752)
!8754 = !DILocation(line: 595, column: 10, scope: !8752)
!8755 = !DILocation(line: 595, column: 49, scope: !8752)
!8756 = !DILocation(line: 595, column: 31, scope: !8752)
!8757 = !DILocation(line: 595, column: 28, scope: !8752)
!8758 = !DILocation(line: 594, column: 7, scope: !8732)
!8759 = !DILocation(line: 597, column: 10, scope: !8732)
!8760 = !DILocation(line: 597, column: 48, scope: !8732)
!8761 = !DILocation(line: 597, column: 30, scope: !8732)
!8762 = !DILocation(line: 597, column: 28, scope: !8732)
!8763 = !DILocation(line: 597, column: 3, scope: !8732)
!8764 = !DILocation(line: 598, column: 1, scope: !8732)
!8765 = distinct !DISubprogram(name: "VEC_address_cost_data_base_length", scope: !3, file: !3, line: 3110, type: !8766, scopeLine: 3110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8770)
!8766 = !DISubroutineType(types: !8767)
!8767 = !{!6, !8768}
!8768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8769, size: 64)
!8769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2222)
!8770 = !{!8771}
!8771 = !DILocalVariable(name: "vec_", arg: 1, scope: !8765, file: !3, line: 3110, type: !8768)
!8772 = !DILocation(line: 0, scope: !8765)
!8773 = !DILocation(line: 3110, column: 1, scope: !8765)
!8774 = distinct !DISubprogram(name: "VEC_address_cost_data_heap_safe_grow_cleared", scope: !3, file: !3, line: 3111, type: !8775, scopeLine: 3111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8778)
!8775 = !DISubroutineType(types: !8776)
!8776 = !{null, !8777, !659}
!8777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!8778 = !{!8779, !8780, !8781}
!8779 = !DILocalVariable(name: "vec_", arg: 1, scope: !8774, file: !3, line: 3111, type: !8777)
!8780 = !DILocalVariable(name: "size_", arg: 2, scope: !8774, file: !3, line: 3111, type: !659)
!8781 = !DILocalVariable(name: "oldsize", scope: !8774, file: !3, line: 3111, type: !659)
!8782 = !DILocation(line: 0, scope: !8774)
!8783 = !DILocation(line: 3111, column: 1, scope: !8774)
!8784 = distinct !DISubprogram(name: "VEC_address_cost_data_base_index", scope: !3, file: !3, line: 3110, type: !8785, scopeLine: 3110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8787)
!8785 = !DISubroutineType(types: !8786)
!8786 = !{!2207, !8768, !6}
!8787 = !{!8788, !8789}
!8788 = !DILocalVariable(name: "vec_", arg: 1, scope: !8784, file: !3, line: 3110, type: !8768)
!8789 = !DILocalVariable(name: "ix_", arg: 2, scope: !8784, file: !3, line: 3110, type: !6)
!8790 = !DILocation(line: 0, scope: !8784)
!8791 = !DILocation(line: 3110, column: 1, scope: !8784)
!8792 = distinct !DISubprogram(name: "VEC_address_cost_data_base_replace", scope: !3, file: !3, line: 3110, type: !8793, scopeLine: 3110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8796)
!8793 = !DISubroutineType(types: !8794)
!8794 = !{!2207, !8795, !6, !2207}
!8795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!8796 = !{!8797, !8798, !8799, !8800}
!8797 = !DILocalVariable(name: "vec_", arg: 1, scope: !8792, file: !3, line: 3110, type: !8795)
!8798 = !DILocalVariable(name: "ix_", arg: 2, scope: !8792, file: !3, line: 3110, type: !6)
!8799 = !DILocalVariable(name: "obj_", arg: 3, scope: !8792, file: !3, line: 3110, type: !2207)
!8800 = !DILocalVariable(name: "old_obj_", scope: !8792, file: !3, line: 3110, type: !2207)
!8801 = !DILocation(line: 0, scope: !8792)
!8802 = !DILocation(line: 3110, column: 1, scope: !8792)
!8803 = distinct !DISubprogram(name: "VEC_address_cost_data_heap_safe_grow", scope: !3, file: !3, line: 3111, type: !8775, scopeLine: 3111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8804)
!8804 = !{!8805, !8806}
!8805 = !DILocalVariable(name: "vec_", arg: 1, scope: !8803, file: !3, line: 3111, type: !8777)
!8806 = !DILocalVariable(name: "size_", arg: 2, scope: !8803, file: !3, line: 3111, type: !659)
!8807 = !DILocation(line: 0, scope: !8803)
!8808 = !DILocation(line: 3111, column: 1, scope: !8803)
!8809 = distinct !DISubprogram(name: "VEC_address_cost_data_base_address", scope: !3, file: !3, line: 3110, type: !8810, scopeLine: 3110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8813)
!8810 = !DISubroutineType(types: !8811)
!8811 = !{!8812, !8795}
!8812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!8813 = !{!8814}
!8814 = !DILocalVariable(name: "vec_", arg: 1, scope: !8809, file: !3, line: 3110, type: !8795)
!8815 = !DILocation(line: 0, scope: !8809)
!8816 = !DILocation(line: 3110, column: 1, scope: !8809)
!8817 = distinct !DISubprogram(name: "VEC_address_cost_data_heap_reserve_exact", scope: !3, file: !3, line: 3111, type: !8818, scopeLine: 3111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8820)
!8818 = !DISubroutineType(types: !8819)
!8819 = !{!659, !8777, !659}
!8820 = !{!8821, !8822, !8823}
!8821 = !DILocalVariable(name: "vec_", arg: 1, scope: !8817, file: !3, line: 3111, type: !8777)
!8822 = !DILocalVariable(name: "alloc_", arg: 2, scope: !8817, file: !3, line: 3111, type: !659)
!8823 = !DILocalVariable(name: "extend", scope: !8817, file: !3, line: 3111, type: !659)
!8824 = !DILocation(line: 0, scope: !8817)
!8825 = !DILocation(line: 3111, column: 1, scope: !8817)
!8826 = !DILocation(line: 3111, column: 1, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8817, file: !3, line: 3111, column: 1)
!8828 = distinct !DISubprogram(name: "VEC_address_cost_data_base_space", scope: !3, file: !3, line: 3110, type: !8829, scopeLine: 3110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8831)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!659, !8795, !659}
!8831 = !{!8832, !8833}
!8832 = !DILocalVariable(name: "vec_", arg: 1, scope: !8828, file: !3, line: 3110, type: !8795)
!8833 = !DILocalVariable(name: "alloc_", arg: 2, scope: !8828, file: !3, line: 3110, type: !659)
!8834 = !DILocation(line: 0, scope: !8828)
!8835 = !DILocation(line: 3110, column: 1, scope: !8828)
!8836 = distinct !DISubprogram(name: "get_computation_aff", scope: !3, file: !3, line: 2836, type: !8837, scopeLine: 2839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8840)
!8837 = !DISubroutineType(types: !8838)
!8838 = !{!136, !1305, !2111, !2126, !1090, !8839}
!8839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7865, size: 64)
!8840 = !{!8841, !8842, !8843, !8844, !8845, !8846, !8847, !8848, !8849, !8850, !8851, !8852, !8853, !8854, !8855, !8856, !8857, !8858, !8859}
!8841 = !DILocalVariable(name: "loop", arg: 1, scope: !8836, file: !3, line: 2836, type: !1305)
!8842 = !DILocalVariable(name: "use", arg: 2, scope: !8836, file: !3, line: 2837, type: !2111)
!8843 = !DILocalVariable(name: "cand", arg: 3, scope: !8836, file: !3, line: 2837, type: !2126)
!8844 = !DILocalVariable(name: "at", arg: 4, scope: !8836, file: !3, line: 2837, type: !1090)
!8845 = !DILocalVariable(name: "aff", arg: 5, scope: !8836, file: !3, line: 2838, type: !8839)
!8846 = !DILocalVariable(name: "ubase", scope: !8836, file: !3, line: 2840, type: !788)
!8847 = !DILocalVariable(name: "ustep", scope: !8836, file: !3, line: 2841, type: !788)
!8848 = !DILocalVariable(name: "cbase", scope: !8836, file: !3, line: 2842, type: !788)
!8849 = !DILocalVariable(name: "cstep", scope: !8836, file: !3, line: 2843, type: !788)
!8850 = !DILocalVariable(name: "cstep_common", scope: !8836, file: !3, line: 2843, type: !788)
!8851 = !DILocalVariable(name: "utype", scope: !8836, file: !3, line: 2844, type: !788)
!8852 = !DILocalVariable(name: "ctype", scope: !8836, file: !3, line: 2844, type: !788)
!8853 = !DILocalVariable(name: "common_type", scope: !8836, file: !3, line: 2845, type: !788)
!8854 = !DILocalVariable(name: "var", scope: !8836, file: !3, line: 2845, type: !788)
!8855 = !DILocalVariable(name: "uutype", scope: !8836, file: !3, line: 2846, type: !788)
!8856 = !DILocalVariable(name: "cbase_aff", scope: !8836, file: !3, line: 2847, type: !7863)
!8857 = !DILocalVariable(name: "var_aff", scope: !8836, file: !3, line: 2847, type: !7863)
!8858 = !DILocalVariable(name: "rat", scope: !8836, file: !3, line: 2848, type: !836)
!8859 = !DILocalVariable(name: "cstep_aff", scope: !8860, file: !3, line: 2885, type: !7863)
!8860 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 2884, column: 5)
!8861 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2883, column: 7)
!8862 = !DILocation(line: 0, scope: !8836)
!8863 = !DILocation(line: 2840, column: 3, scope: !8836)
!8864 = !DILocation(line: 2840, column: 21, scope: !8836)
!8865 = !DILocation(line: 2840, column: 25, scope: !8836)
!8866 = !DILocation(line: 2840, column: 8, scope: !8836)
!8867 = !DILocation(line: 2841, column: 25, scope: !8836)
!8868 = !DILocation(line: 2842, column: 3, scope: !8836)
!8869 = !DILocation(line: 2842, column: 22, scope: !8836)
!8870 = !DILocation(line: 2842, column: 26, scope: !8836)
!8871 = !DILocation(line: 2842, column: 8, scope: !8836)
!8872 = !DILocation(line: 2843, column: 26, scope: !8836)
!8873 = !DILocation(line: 2844, column: 16, scope: !8836)
!8874 = !DILocation(line: 2844, column: 43, scope: !8836)
!8875 = !DILocation(line: 2847, column: 3, scope: !8836)
!8876 = !DILocation(line: 2848, column: 3, scope: !8836)
!8877 = !DILocation(line: 2850, column: 7, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2850, column: 7)
!8879 = !DILocation(line: 2850, column: 32, scope: !8878)
!8880 = !DILocation(line: 2850, column: 30, scope: !8878)
!8881 = !DILocation(line: 2850, column: 7, scope: !8836)
!8882 = !DILocation(line: 2856, column: 9, scope: !8836)
!8883 = !DILocation(line: 2857, column: 12, scope: !8836)
!8884 = !DILocation(line: 2860, column: 7, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2860, column: 7)
!8886 = !DILocation(line: 2860, column: 32, scope: !8885)
!8887 = !DILocation(line: 2860, column: 30, scope: !8885)
!8888 = !DILocation(line: 2860, column: 7, scope: !8836)
!8889 = !DILocation(line: 2862, column: 15, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2861, column: 5)
!8891 = !DILocation(line: 2863, column: 15, scope: !8890)
!8892 = !DILocation(line: 2863, column: 13, scope: !8890)
!8893 = !DILocation(line: 2864, column: 13, scope: !8890)
!8894 = !DILocation(line: 2865, column: 5, scope: !8890)
!8895 = !DILocation(line: 2867, column: 8, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2867, column: 7)
!8897 = !DILocation(line: 2867, column: 7, scope: !8836)
!8898 = !DILocation(line: 2875, column: 17, scope: !8836)
!8899 = !DILocation(line: 2878, column: 28, scope: !8836)
!8900 = !DILocation(line: 2878, column: 3, scope: !8836)
!8901 = !DILocation(line: 2879, column: 28, scope: !8836)
!8902 = !DILocation(line: 2879, column: 3, scope: !8836)
!8903 = !DILocation(line: 2880, column: 3, scope: !8836)
!8904 = !DILocation(line: 2883, column: 7, scope: !8861)
!8905 = !DILocation(line: 2883, column: 7, scope: !8836)
!8906 = !DILocation(line: 2885, column: 7, scope: !8860)
!8907 = !DILocation(line: 2887, column: 23, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8860, file: !3, line: 2887, column: 11)
!8909 = !DILocation(line: 2887, column: 11, scope: !8860)
!8910 = !DILocation(line: 2888, column: 17, scope: !8908)
!8911 = !DILocation(line: 2888, column: 2, scope: !8908)
!8912 = !DILocation(line: 0, scope: !8908)
!8913 = !DILocation(line: 0, scope: !8860)
!8914 = !DILocation(line: 2892, column: 7, scope: !8860)
!8915 = !DILocation(line: 2893, column: 7, scope: !8860)
!8916 = !DILocation(line: 2894, column: 5, scope: !8861)
!8917 = !DILocation(line: 2894, column: 5, scope: !8860)
!8918 = !DILocation(line: 2896, column: 38, scope: !8836)
!8919 = !DILocation(line: 2896, column: 3, scope: !8836)
!8920 = !DILocation(line: 2897, column: 3, scope: !8836)
!8921 = !DILocation(line: 2898, column: 19, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2898, column: 7)
!8923 = !DILocation(line: 2898, column: 7, scope: !8836)
!8924 = !DILocation(line: 2899, column: 5, scope: !8922)
!8925 = !DILocation(line: 2901, column: 3, scope: !8836)
!8926 = !DILocation(line: 2902, column: 3, scope: !8836)
!8927 = !DILocation(line: 2904, column: 3, scope: !8836)
!8928 = !DILocation(line: 2905, column: 1, scope: !8836)
!8929 = distinct !DISubprogram(name: "var_at_stmt", scope: !3, file: !3, line: 2767, type: !8930, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8932)
!8930 = !DISubroutineType(types: !8931)
!8931 = !{!788, !1305, !2126, !1090}
!8932 = !{!8933, !8934, !8935}
!8933 = !DILocalVariable(name: "loop", arg: 1, scope: !8929, file: !3, line: 2767, type: !1305)
!8934 = !DILocalVariable(name: "cand", arg: 2, scope: !8929, file: !3, line: 2767, type: !2126)
!8935 = !DILocalVariable(name: "stmt", arg: 3, scope: !8929, file: !3, line: 2767, type: !1090)
!8936 = !DILocation(line: 0, scope: !8929)
!8937 = !DILocation(line: 2769, column: 7, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 2769, column: 7)
!8939 = !DILocation(line: 2769, column: 7, scope: !8929)
!8940 = !DILocation(line: 2770, column: 18, scope: !8938)
!8941 = !DILocation(line: 2770, column: 5, scope: !8938)
!8942 = !DILocation(line: 2772, column: 18, scope: !8938)
!8943 = !DILocation(line: 2772, column: 5, scope: !8938)
!8944 = !DILocation(line: 0, scope: !8938)
!8945 = !DILocation(line: 2773, column: 1, scope: !8929)
!8946 = distinct !DISubprogram(name: "determine_common_wider_type", scope: !3, file: !3, line: 2801, type: !8947, scopeLine: 2802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8949)
!8947 = !DISubroutineType(types: !8948)
!8948 = !{!788, !1124, !1124}
!8949 = !{!8950, !8951, !8952, !8953, !8954, !8955}
!8950 = !DILocalVariable(name: "a", arg: 1, scope: !8946, file: !3, line: 2801, type: !1124)
!8951 = !DILocalVariable(name: "b", arg: 2, scope: !8946, file: !3, line: 2801, type: !1124)
!8952 = !DILocalVariable(name: "wider_type", scope: !8946, file: !3, line: 2803, type: !788)
!8953 = !DILocalVariable(name: "suba", scope: !8946, file: !3, line: 2804, type: !788)
!8954 = !DILocalVariable(name: "subb", scope: !8946, file: !3, line: 2804, type: !788)
!8955 = !DILocalVariable(name: "atype", scope: !8946, file: !3, line: 2805, type: !788)
!8956 = !DILocation(line: 0, scope: !8946)
!8957 = !DILocation(line: 2805, column: 16, scope: !8946)
!8958 = !DILocation(line: 2807, column: 7, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 2807, column: 7)
!8960 = !DILocation(line: 2807, column: 7, scope: !8946)
!8961 = !DILocation(line: 2809, column: 14, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 2808, column: 5)
!8963 = !DILocation(line: 2810, column: 20, scope: !8962)
!8964 = !DILocation(line: 2811, column: 11, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 2811, column: 11)
!8966 = !DILocation(line: 2811, column: 41, scope: !8965)
!8967 = !DILocation(line: 2811, column: 39, scope: !8965)
!8968 = !DILocation(line: 2811, column: 11, scope: !8962)
!8969 = !DILocation(line: 2817, column: 7, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 2817, column: 7)
!8971 = !DILocation(line: 2817, column: 7, scope: !8946)
!8972 = !DILocation(line: 2819, column: 14, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 2818, column: 5)
!8974 = !DILocation(line: 2820, column: 42, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 2820, column: 11)
!8976 = !DILocation(line: 2820, column: 39, scope: !8975)
!8977 = !DILocation(line: 2820, column: 11, scope: !8973)
!8978 = !DILocation(line: 2826, column: 6, scope: !8946)
!8979 = !DILocation(line: 2827, column: 6, scope: !8946)
!8980 = !DILocation(line: 2828, column: 3, scope: !8946)
!8981 = !DILocation(line: 2829, column: 1, scope: !8946)
!8982 = distinct !DISubprogram(name: "prepare_decl_rtl", scope: !3, file: !3, line: 2680, type: !7178, scopeLine: 2681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !8983)
!8983 = !{!8984, !8985, !8986, !8987, !8988, !8989}
!8984 = !DILocalVariable(name: "expr_p", arg: 1, scope: !8982, file: !3, line: 2680, type: !1124)
!8985 = !DILocalVariable(name: "ws", arg: 2, scope: !8982, file: !3, line: 2680, type: !2229)
!8986 = !DILocalVariable(name: "data", arg: 3, scope: !8982, file: !3, line: 2680, type: !663)
!8987 = !DILocalVariable(name: "obj", scope: !8982, file: !3, line: 2682, type: !788)
!8988 = !DILocalVariable(name: "x", scope: !8982, file: !3, line: 2683, type: !673)
!8989 = !DILocalVariable(name: "regno", scope: !8982, file: !3, line: 2684, type: !2229)
!8990 = !DILocation(line: 0, scope: !8982)
!8991 = !DILocation(line: 2684, column: 16, scope: !8982)
!8992 = !DILocation(line: 2686, column: 11, scope: !8982)
!8993 = !DILocation(line: 2686, column: 3, scope: !8982)
!8994 = !DILocation(line: 2689, column: 22, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 2689, column: 7)
!8996 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 2687, column: 5)
!8997 = !DILocation(line: 2689, column: 12, scope: !8995)
!8998 = !DILocation(line: 0, scope: !8995)
!8999 = !DILocation(line: 2690, column: 26, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 2689, column: 7)
!9001 = !DILocation(line: 2690, column: 5, scope: !9000)
!9002 = !DILocation(line: 2689, column: 7, scope: !8995)
!9003 = !DILocation(line: 0, scope: !8996)
!9004 = !DILocation(line: 2691, column: 15, scope: !9000)
!9005 = !DILocation(line: 2689, column: 7, scope: !9000)
!9006 = distinct !{!9006, !9002, !9007}
!9007 = !DILocation(line: 2692, column: 2, scope: !8995)
!9008 = !DILocation(line: 2694, column: 11, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 2694, column: 11)
!9010 = !DILocation(line: 2694, column: 24, scope: !9009)
!9011 = !DILocation(line: 2694, column: 28, scope: !9009)
!9012 = !DILocation(line: 2694, column: 11, scope: !8996)
!9013 = !DILocation(line: 2695, column: 13, scope: !9009)
!9014 = !DILocation(line: 2695, column: 9, scope: !9009)
!9015 = !DILocation(line: 2699, column: 11, scope: !8996)
!9016 = !DILocation(line: 2700, column: 13, scope: !8996)
!9017 = !DILocation(line: 2701, column: 12, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 2701, column: 11)
!9019 = !DILocation(line: 2701, column: 11, scope: !8996)
!9020 = !DILocation(line: 2702, column: 19, scope: !9018)
!9021 = !DILocation(line: 2702, column: 44, scope: !9018)
!9022 = !DILocation(line: 2702, column: 6, scope: !9018)
!9023 = !DILocation(line: 2702, column: 2, scope: !9018)
!9024 = !DILocation(line: 2708, column: 11, scope: !8996)
!9025 = !DILocation(line: 2709, column: 13, scope: !8996)
!9026 = !DILocation(line: 2711, column: 11, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 2711, column: 11)
!9028 = !DILocation(line: 2711, column: 11, scope: !8996)
!9029 = !DILocation(line: 2714, column: 11, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 2714, column: 11)
!9031 = !DILocation(line: 2714, column: 27, scope: !9030)
!9032 = !DILocation(line: 2714, column: 11, scope: !8996)
!9033 = !DILocation(line: 2715, column: 6, scope: !9030)
!9034 = !DILocation(line: 2715, column: 2, scope: !9030)
!9035 = !DILocation(line: 2717, column: 19, scope: !9030)
!9036 = !DILocation(line: 2717, column: 44, scope: !9030)
!9037 = !DILocation(line: 2717, column: 6, scope: !9030)
!9038 = !DILocation(line: 2725, column: 7, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 2725, column: 7)
!9040 = !DILocation(line: 2725, column: 7, scope: !8982)
!9041 = !DILocation(line: 2727, column: 7, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 2726, column: 5)
!9043 = !DILocation(line: 2728, column: 7, scope: !9042)
!9044 = !DILocation(line: 2729, column: 5, scope: !9042)
!9045 = !DILocation(line: 2731, column: 3, scope: !8982)
!9046 = distinct !DISubprogram(name: "expand_expr", scope: !648, file: !648, line: 555, type: !9047, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9049)
!9047 = !DISubroutineType(types: !9048)
!9048 = !{!673, !788, !673, !8, !647}
!9049 = !{!9050, !9051, !9052, !9053}
!9050 = !DILocalVariable(name: "exp", arg: 1, scope: !9046, file: !648, line: 555, type: !788)
!9051 = !DILocalVariable(name: "target", arg: 2, scope: !9046, file: !648, line: 555, type: !673)
!9052 = !DILocalVariable(name: "mode", arg: 3, scope: !9046, file: !648, line: 555, type: !8)
!9053 = !DILocalVariable(name: "modifier", arg: 4, scope: !9046, file: !648, line: 556, type: !647)
!9054 = !DILocation(line: 0, scope: !9046)
!9055 = !DILocation(line: 558, column: 10, scope: !9046)
!9056 = !DILocation(line: 558, column: 3, scope: !9046)
!9057 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !160, file: !160, line: 184, type: !9058, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9061)
!9058 = !DISubroutineType(types: !9059)
!9059 = !{!1124, !9060, !788}
!9060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!9061 = !{!9062, !9063}
!9062 = !DILocalVariable(name: "vec_", arg: 1, scope: !9057, file: !160, line: 184, type: !9060)
!9063 = !DILocalVariable(name: "obj_", arg: 2, scope: !9057, file: !160, line: 184, type: !788)
!9064 = !DILocation(line: 0, scope: !9057)
!9065 = !DILocation(line: 184, column: 1, scope: !9057)
!9066 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !160, file: !160, line: 184, type: !9067, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9069)
!9067 = !DISubroutineType(types: !9068)
!9068 = !{!659, !9060, !659}
!9069 = !{!9070, !9071, !9072}
!9070 = !DILocalVariable(name: "vec_", arg: 1, scope: !9066, file: !160, line: 184, type: !9060)
!9071 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9066, file: !160, line: 184, type: !659)
!9072 = !DILocalVariable(name: "extend", scope: !9066, file: !160, line: 184, type: !659)
!9073 = !DILocation(line: 0, scope: !9066)
!9074 = !DILocation(line: 184, column: 1, scope: !9066)
!9075 = !DILocation(line: 184, column: 1, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9066, file: !160, line: 184, column: 1)
!9077 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !160, file: !160, line: 182, type: !9078, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9081)
!9078 = !DISubroutineType(types: !9079)
!9079 = !{!1124, !9080, !788}
!9080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!9081 = !{!9082, !9083, !9084}
!9082 = !DILocalVariable(name: "vec_", arg: 1, scope: !9077, file: !160, line: 182, type: !9080)
!9083 = !DILocalVariable(name: "obj_", arg: 2, scope: !9077, file: !160, line: 182, type: !788)
!9084 = !DILocalVariable(name: "slot_", scope: !9077, file: !160, line: 182, type: !1124)
!9085 = !DILocation(line: 0, scope: !9077)
!9086 = !DILocation(line: 182, column: 1, scope: !9077)
!9087 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !160, file: !160, line: 182, type: !9088, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9090)
!9088 = !DISubroutineType(types: !9089)
!9089 = !{!659, !9080, !659}
!9090 = !{!9091, !9092}
!9091 = !DILocalVariable(name: "vec_", arg: 1, scope: !9087, file: !160, line: 182, type: !9080)
!9092 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9087, file: !160, line: 182, type: !659)
!9093 = !DILocation(line: 0, scope: !9087)
!9094 = !DILocation(line: 182, column: 1, scope: !9087)
!9095 = distinct !DISubprogram(name: "determine_iv_cost", scope: !3, file: !3, line: 4340, type: !9096, scopeLine: 4341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9098)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{null, !2184, !2126}
!9098 = !{!9099, !9100, !9101, !9102, !9103, !9104}
!9099 = !DILocalVariable(name: "data", arg: 1, scope: !9095, file: !3, line: 4340, type: !2184)
!9100 = !DILocalVariable(name: "cand", arg: 2, scope: !9095, file: !3, line: 4340, type: !2126)
!9101 = !DILocalVariable(name: "cost_base", scope: !9095, file: !3, line: 4342, type: !2141)
!9102 = !DILocalVariable(name: "cost", scope: !9095, file: !3, line: 4343, type: !6)
!9103 = !DILocalVariable(name: "cost_step", scope: !9095, file: !3, line: 4343, type: !6)
!9104 = !DILocalVariable(name: "base", scope: !9095, file: !3, line: 4344, type: !788)
!9105 = !DILocation(line: 0, scope: !9095)
!9106 = !DILocation(line: 4346, column: 14, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 4346, column: 7)
!9108 = !DILocation(line: 4346, column: 8, scope: !9107)
!9109 = !DILocation(line: 4346, column: 7, scope: !9095)
!9110 = !DILocation(line: 4348, column: 13, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9107, file: !3, line: 4347, column: 5)
!9112 = !DILocation(line: 4348, column: 18, scope: !9111)
!9113 = !DILocation(line: 4349, column: 7, scope: !9111)
!9114 = !DILocation(line: 4356, column: 20, scope: !9095)
!9115 = !DILocation(line: 4357, column: 15, scope: !9095)
!9116 = !DILocation(line: 4358, column: 25, scope: !9095)
!9117 = !DILocation(line: 4358, column: 61, scope: !9095)
!9118 = !DILocation(line: 4358, column: 15, scope: !9095)
!9119 = !DILocation(line: 4360, column: 37, scope: !9095)
!9120 = !DILocation(line: 4360, column: 20, scope: !9095)
!9121 = !DILocation(line: 4365, column: 13, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 4365, column: 7)
!9123 = !DILocation(line: 4365, column: 17, scope: !9122)
!9124 = !DILocation(line: 4366, column: 7, scope: !9122)
!9125 = !DILocation(line: 4366, column: 10, scope: !9122)
!9126 = !DILocation(line: 4365, column: 7, scope: !9095)
!9127 = !DILocation(line: 4367, column: 9, scope: !9122)
!9128 = !DILocation(line: 4367, column: 5, scope: !9122)
!9129 = !DILocation(line: 4371, column: 17, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 4371, column: 7)
!9131 = !DILocation(line: 4372, column: 7, scope: !9130)
!9132 = !DILocation(line: 4372, column: 43, scope: !9130)
!9133 = !DILocation(line: 4372, column: 25, scope: !9130)
!9134 = !DILocation(line: 4372, column: 10, scope: !9130)
!9135 = !DILocation(line: 4371, column: 7, scope: !9095)
!9136 = !DILocation(line: 4375, column: 9, scope: !9095)
!9137 = !DILocation(line: 4375, column: 14, scope: !9095)
!9138 = !DILocation(line: 4376, column: 9, scope: !9095)
!9139 = !DILocation(line: 4376, column: 19, scope: !9095)
!9140 = !DILocation(line: 4377, column: 1, scope: !9095)
!9141 = distinct !DISubprogram(name: "alloc_use_cost_map", scope: !3, file: !3, line: 2466, type: !3565, scopeLine: 2467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9142)
!9142 = !{!9143, !9144, !9145, !9146, !9147, !9148, !9152}
!9143 = !DILocalVariable(name: "data", arg: 1, scope: !9141, file: !3, line: 2466, type: !2184)
!9144 = !DILocalVariable(name: "i", scope: !9141, file: !3, line: 2468, type: !6)
!9145 = !DILocalVariable(name: "size", scope: !9141, file: !3, line: 2468, type: !6)
!9146 = !DILocalVariable(name: "s", scope: !9141, file: !3, line: 2468, type: !6)
!9147 = !DILocalVariable(name: "j", scope: !9141, file: !3, line: 2468, type: !6)
!9148 = !DILocalVariable(name: "use", scope: !9149, file: !3, line: 2472, type: !2111)
!9149 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 2471, column: 5)
!9150 = distinct !DILexicalBlock(scope: !9151, file: !3, line: 2470, column: 3)
!9151 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 2470, column: 3)
!9152 = !DILocalVariable(name: "bi", scope: !9149, file: !3, line: 2473, type: !4005)
!9153 = !DILocation(line: 0, scope: !9141)
!9154 = !DILocation(line: 2468, column: 3, scope: !9141)
!9155 = !DILocation(line: 0, scope: !9149)
!9156 = !DILocation(line: 0, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 2475, column: 11)
!9158 = !DILocation(line: 2470, column: 8, scope: !9151)
!9159 = !DILocation(line: 0, scope: !9151)
!9160 = !DILocation(line: 2470, column: 19, scope: !9150)
!9161 = !DILocation(line: 2470, column: 17, scope: !9150)
!9162 = !DILocation(line: 2470, column: 3, scope: !9151)
!9163 = !DILocation(line: 2472, column: 28, scope: !9149)
!9164 = !DILocation(line: 2473, column: 7, scope: !9149)
!9165 = !DILocation(line: 2475, column: 17, scope: !9157)
!9166 = !DILocation(line: 2475, column: 11, scope: !9157)
!9167 = !DILocation(line: 2475, column: 11, scope: !9149)
!9168 = !DILocation(line: 2476, column: 9, scope: !9157)
!9169 = !DILocation(line: 2476, column: 2, scope: !9157)
!9170 = !DILocation(line: 2480, column: 4, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 2480, column: 4)
!9172 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 2478, column: 2)
!9173 = !DILocation(line: 0, scope: !9172)
!9174 = !DILocation(line: 2480, column: 4, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9171, file: !3, line: 2480, column: 4)
!9176 = !DILocation(line: 2486, column: 4, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 2486, column: 4)
!9178 = !DILocation(line: 2482, column: 9, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9175, file: !3, line: 2481, column: 6)
!9180 = distinct !{!9180, !9170, !9181}
!9181 = !DILocation(line: 2483, column: 6, scope: !9171)
!9182 = !DILocation(line: 0, scope: !9177)
!9183 = !DILocation(line: 2486, column: 24, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 2486, column: 4)
!9185 = !DILocation(line: 2486, column: 34, scope: !9184)
!9186 = !DILocation(line: 2486, column: 4, scope: !9184)
!9187 = distinct !{!9187, !9176, !9188}
!9188 = !DILocation(line: 2487, column: 6, scope: !9177)
!9189 = !DILocation(line: 2490, column: 12, scope: !9149)
!9190 = !DILocation(line: 2490, column: 26, scope: !9149)
!9191 = !DILocation(line: 2491, column: 23, scope: !9149)
!9192 = !DILocation(line: 2491, column: 12, scope: !9149)
!9193 = !DILocation(line: 2491, column: 21, scope: !9149)
!9194 = !DILocation(line: 2492, column: 5, scope: !9150)
!9195 = !DILocation(line: 2470, column: 38, scope: !9150)
!9196 = !DILocation(line: 2470, column: 3, scope: !9150)
!9197 = distinct !{!9197, !9162, !9198}
!9198 = !DILocation(line: 2492, column: 5, scope: !9151)
!9199 = !DILocation(line: 2493, column: 1, scope: !9141)
!9200 = distinct !DISubprogram(name: "determine_use_iv_cost", scope: !3, file: !3, line: 4167, type: !7514, scopeLine: 4169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9201)
!9201 = !{!9202, !9203, !9204}
!9202 = !DILocalVariable(name: "data", arg: 1, scope: !9200, file: !3, line: 4167, type: !2184)
!9203 = !DILocalVariable(name: "use", arg: 2, scope: !9200, file: !3, line: 4168, type: !2111)
!9204 = !DILocalVariable(name: "cand", arg: 3, scope: !9200, file: !3, line: 4168, type: !2126)
!9205 = !DILocation(line: 0, scope: !9200)
!9206 = !DILocation(line: 4170, column: 16, scope: !9200)
!9207 = !DILocation(line: 4170, column: 3, scope: !9200)
!9208 = !DILocation(line: 4173, column: 14, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 4171, column: 5)
!9210 = !DILocation(line: 4173, column: 7, scope: !9209)
!9211 = !DILocation(line: 4176, column: 14, scope: !9209)
!9212 = !DILocation(line: 4176, column: 7, scope: !9209)
!9213 = !DILocation(line: 4179, column: 14, scope: !9209)
!9214 = !DILocation(line: 4179, column: 7, scope: !9209)
!9215 = !DILocation(line: 4182, column: 7, scope: !9209)
!9216 = !DILocation(line: 4185, column: 5, scope: !9200)
!9217 = !DILocation(line: 4187, column: 1, scope: !9200)
!9218 = distinct !DISubprogram(name: "determine_use_iv_cost_generic", scope: !3, file: !3, line: 3897, type: !7514, scopeLine: 3899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9219)
!9219 = !{!9220, !9221, !9222, !9223, !9224}
!9220 = !DILocalVariable(name: "data", arg: 1, scope: !9218, file: !3, line: 3897, type: !2184)
!9221 = !DILocalVariable(name: "use", arg: 2, scope: !9218, file: !3, line: 3898, type: !2111)
!9222 = !DILocalVariable(name: "cand", arg: 3, scope: !9218, file: !3, line: 3898, type: !2126)
!9223 = !DILocalVariable(name: "depends_on", scope: !9218, file: !3, line: 3900, type: !1507)
!9224 = !DILocalVariable(name: "cost", scope: !9218, file: !3, line: 3901, type: !2141)
!9225 = !DILocation(line: 0, scope: !9218)
!9226 = !DILocation(line: 3900, column: 3, scope: !9218)
!9227 = !DILocation(line: 3907, column: 13, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3907, column: 7)
!9229 = !DILocation(line: 3907, column: 17, scope: !9228)
!9230 = !DILocation(line: 3908, column: 7, scope: !9228)
!9231 = !DILocation(line: 3908, column: 16, scope: !9228)
!9232 = !DILocation(line: 3908, column: 39, scope: !9228)
!9233 = !DILocation(line: 3908, column: 31, scope: !9228)
!9234 = !DILocation(line: 3907, column: 7, scope: !9218)
!9235 = !DILocation(line: 3910, column: 7, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9228, file: !3, line: 3909, column: 5)
!9237 = !DILocation(line: 3911, column: 7, scope: !9236)
!9238 = !DILocation(line: 3914, column: 10, scope: !9218)
!9239 = !DILocation(line: 3915, column: 43, scope: !9218)
!9240 = !DILocation(line: 3915, column: 3, scope: !9218)
!9241 = !DILocation(line: 3917, column: 11, scope: !9218)
!9242 = !DILocation(line: 3917, column: 10, scope: !9218)
!9243 = !DILocation(line: 3917, column: 3, scope: !9218)
!9244 = !DILocation(line: 3918, column: 1, scope: !9218)
!9245 = distinct !DISubprogram(name: "determine_use_iv_cost_address", scope: !3, file: !3, line: 3923, type: !7514, scopeLine: 3925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9246)
!9246 = !{!9247, !9248, !9249, !9250, !9251, !9252}
!9247 = !DILocalVariable(name: "data", arg: 1, scope: !9245, file: !3, line: 3923, type: !2184)
!9248 = !DILocalVariable(name: "use", arg: 2, scope: !9245, file: !3, line: 3924, type: !2111)
!9249 = !DILocalVariable(name: "cand", arg: 3, scope: !9245, file: !3, line: 3924, type: !2126)
!9250 = !DILocalVariable(name: "depends_on", scope: !9245, file: !3, line: 3926, type: !1507)
!9251 = !DILocalVariable(name: "can_autoinc", scope: !9245, file: !3, line: 3927, type: !136)
!9252 = !DILocalVariable(name: "cost", scope: !9245, file: !3, line: 3928, type: !2141)
!9253 = !DILocation(line: 0, scope: !9245)
!9254 = !DILocation(line: 3926, column: 3, scope: !9245)
!9255 = !DILocation(line: 3927, column: 3, scope: !9245)
!9256 = !DILocation(line: 3928, column: 3, scope: !9245)
!9257 = !DILocation(line: 3928, column: 20, scope: !9245)
!9258 = !DILocation(line: 3931, column: 13, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9245, file: !3, line: 3931, column: 7)
!9260 = !DILocation(line: 3931, column: 22, scope: !9259)
!9261 = !DILocation(line: 3931, column: 7, scope: !9245)
!9262 = !DILocation(line: 3933, column: 11, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9264, file: !3, line: 3933, column: 11)
!9264 = distinct !DILexicalBlock(scope: !9259, file: !3, line: 3932, column: 5)
!9265 = !DILocation(line: 3933, column: 11, scope: !9264)
!9266 = !DILocation(line: 3934, column: 21, scope: !9263)
!9267 = !DILocation(line: 3934, column: 7, scope: !9263)
!9268 = !DILocation(line: 3934, column: 12, scope: !9263)
!9269 = !DILocation(line: 3941, column: 3, scope: !9245)
!9270 = !DILocation(line: 3934, column: 2, scope: !9263)
!9271 = !DILocation(line: 3938, column: 22, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9263, file: !3, line: 3938, column: 16)
!9273 = !DILocation(line: 3938, column: 26, scope: !9272)
!9274 = !DILocation(line: 3938, column: 42, scope: !9272)
!9275 = !DILocation(line: 3938, column: 55, scope: !9272)
!9276 = !DILocation(line: 3938, column: 16, scope: !9263)
!9277 = !DILocation(line: 3939, column: 9, scope: !9272)
!9278 = !DILocation(line: 3939, column: 2, scope: !9272)
!9279 = !DILocation(line: 3941, column: 43, scope: !9245)
!9280 = !DILocation(line: 3943, column: 11, scope: !9245)
!9281 = !DILocation(line: 3943, column: 10, scope: !9245)
!9282 = !DILocation(line: 3944, column: 1, scope: !9245)
!9283 = !DILocation(line: 3943, column: 3, scope: !9245)
!9284 = distinct !DISubprogram(name: "determine_use_iv_cost_condition", scope: !3, file: !3, line: 4087, type: !7514, scopeLine: 4089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9285)
!9285 = !{!9286, !9287, !9288, !9289, !9290, !9291, !9292, !9293, !9294, !9295, !9296, !9297, !9298, !9299}
!9286 = !DILocalVariable(name: "data", arg: 1, scope: !9284, file: !3, line: 4087, type: !2184)
!9287 = !DILocalVariable(name: "use", arg: 2, scope: !9284, file: !3, line: 4088, type: !2111)
!9288 = !DILocalVariable(name: "cand", arg: 3, scope: !9284, file: !3, line: 4088, type: !2126)
!9289 = !DILocalVariable(name: "bound", scope: !9284, file: !3, line: 4090, type: !788)
!9290 = !DILocalVariable(name: "cmp_iv", scope: !9284, file: !3, line: 4091, type: !2085)
!9291 = !DILocalVariable(name: "depends_on_elim", scope: !9284, file: !3, line: 4092, type: !1507)
!9292 = !DILocalVariable(name: "depends_on_express", scope: !9284, file: !3, line: 4092, type: !1507)
!9293 = !DILocalVariable(name: "depends_on", scope: !9284, file: !3, line: 4092, type: !1507)
!9294 = !DILocalVariable(name: "elim_cost", scope: !9284, file: !3, line: 4093, type: !2141)
!9295 = !DILocalVariable(name: "express_cost", scope: !9284, file: !3, line: 4093, type: !2141)
!9296 = !DILocalVariable(name: "cost", scope: !9284, file: !3, line: 4093, type: !2141)
!9297 = !DILocalVariable(name: "ok", scope: !9284, file: !3, line: 4094, type: !136)
!9298 = !DILocalVariable(name: "control_var", scope: !9284, file: !3, line: 4095, type: !1124)
!9299 = !DILocalVariable(name: "bound_cst", scope: !9284, file: !3, line: 4095, type: !1124)
!9300 = !DILocation(line: 0, scope: !9284)
!9301 = !DILocation(line: 4090, column: 3, scope: !9284)
!9302 = !DILocation(line: 4090, column: 8, scope: !9284)
!9303 = !DILocation(line: 4091, column: 3, scope: !9284)
!9304 = !DILocation(line: 4092, column: 3, scope: !9284)
!9305 = !DILocation(line: 4092, column: 10, scope: !9284)
!9306 = !DILocation(line: 4092, column: 34, scope: !9284)
!9307 = !DILocation(line: 4093, column: 3, scope: !9284)
!9308 = !DILocation(line: 4095, column: 3, scope: !9284)
!9309 = !DILocation(line: 4098, column: 14, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 4098, column: 7)
!9311 = !DILocation(line: 4098, column: 8, scope: !9310)
!9312 = !DILocation(line: 4098, column: 7, scope: !9284)
!9313 = !DILocation(line: 4100, column: 7, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 4099, column: 5)
!9315 = !DILocation(line: 4101, column: 7, scope: !9314)
!9316 = !DILocation(line: 4105, column: 7, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 4105, column: 7)
!9318 = !DILocation(line: 4105, column: 7, scope: !9284)
!9319 = !DILocation(line: 4107, column: 41, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 4106, column: 5)
!9321 = !DILocation(line: 4107, column: 19, scope: !9320)
!9322 = !DILocation(line: 4110, column: 17, scope: !9320)
!9323 = !DILocation(line: 4110, column: 22, scope: !9320)
!9324 = !DILocation(line: 4111, column: 5, scope: !9320)
!9325 = !DILocation(line: 4113, column: 17, scope: !9317)
!9326 = !DILocation(line: 4117, column: 42, scope: !9284)
!9327 = !DILocation(line: 4117, column: 8, scope: !9284)
!9328 = !DILocation(line: 4119, column: 3, scope: !9284)
!9329 = !DILocation(line: 4127, column: 8, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 4127, column: 7)
!9331 = !DILocation(line: 4128, column: 7, scope: !9330)
!9332 = !DILocation(line: 4128, column: 26, scope: !9330)
!9333 = !DILocation(line: 4128, column: 25, scope: !9330)
!9334 = !DILocation(line: 4128, column: 10, scope: !9330)
!9335 = !DILocation(line: 4129, column: 7, scope: !9330)
!9336 = !DILocation(line: 4129, column: 29, scope: !9330)
!9337 = !DILocation(line: 4129, column: 28, scope: !9330)
!9338 = !DILocation(line: 4129, column: 48, scope: !9330)
!9339 = !DILocation(line: 4129, column: 11, scope: !9330)
!9340 = !DILocation(line: 4130, column: 4, scope: !9330)
!9341 = !DILocation(line: 4130, column: 25, scope: !9330)
!9342 = !DILocation(line: 4130, column: 24, scope: !9330)
!9343 = !DILocation(line: 4130, column: 44, scope: !9330)
!9344 = !DILocation(line: 4130, column: 7, scope: !9330)
!9345 = !DILocation(line: 4127, column: 7, scope: !9284)
!9346 = !DILocation(line: 4131, column: 15, scope: !9330)
!9347 = !DILocation(line: 4131, column: 20, scope: !9330)
!9348 = !DILocation(line: 4139, column: 7, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 4139, column: 7)
!9350 = !DILocation(line: 4131, column: 5, scope: !9330)
!9351 = !DILocation(line: 4133, column: 18, scope: !9284)
!9352 = !DILocation(line: 4135, column: 18, scope: !9284)
!9353 = !DILocation(line: 4136, column: 3, scope: !9284)
!9354 = !DILocation(line: 4139, column: 47, scope: !9349)
!9355 = !DILocation(line: 4139, column: 7, scope: !9284)
!9356 = !DILocation(line: 4142, column: 20, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 4140, column: 5)
!9358 = !DILocation(line: 4143, column: 23, scope: !9357)
!9359 = !DILocation(line: 4153, column: 55, scope: !9284)
!9360 = !DILocation(line: 4144, column: 5, scope: !9357)
!9361 = !DILocation(line: 4148, column: 20, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 4146, column: 5)
!9363 = !DILocation(line: 4149, column: 26, scope: !9362)
!9364 = !DILocation(line: 4150, column: 13, scope: !9362)
!9365 = !DILocation(line: 4153, column: 3, scope: !9284)
!9366 = !DILocation(line: 0, scope: !9349)
!9367 = !DILocation(line: 4155, column: 7, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 4155, column: 7)
!9369 = !DILocation(line: 4155, column: 7, scope: !9284)
!9370 = !DILocation(line: 4156, column: 5, scope: !9368)
!9371 = !DILocation(line: 4157, column: 7, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 4157, column: 7)
!9373 = !DILocation(line: 4157, column: 7, scope: !9284)
!9374 = !DILocation(line: 4158, column: 5, scope: !9372)
!9375 = !DILocation(line: 4160, column: 11, scope: !9284)
!9376 = !DILocation(line: 4160, column: 10, scope: !9284)
!9377 = !DILocation(line: 4160, column: 3, scope: !9284)
!9378 = !DILocation(line: 4161, column: 1, scope: !9284)
!9379 = distinct !DISubprogram(name: "set_use_iv_cost", scope: !3, file: !3, line: 2555, type: !9380, scopeLine: 2558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9382)
!9380 = !DISubroutineType(types: !9381)
!9381 = !{null, !2184, !2111, !2126, !2141, !1507, !788}
!9382 = !{!9383, !9384, !9385, !9386, !9387, !9388, !9389, !9390, !9391}
!9383 = !DILocalVariable(name: "data", arg: 1, scope: !9379, file: !3, line: 2555, type: !2184)
!9384 = !DILocalVariable(name: "use", arg: 2, scope: !9379, file: !3, line: 2556, type: !2111)
!9385 = !DILocalVariable(name: "cand", arg: 3, scope: !9379, file: !3, line: 2556, type: !2126)
!9386 = !DILocalVariable(name: "cost", arg: 4, scope: !9379, file: !3, line: 2557, type: !2141)
!9387 = !DILocalVariable(name: "depends_on", arg: 5, scope: !9379, file: !3, line: 2557, type: !1507)
!9388 = !DILocalVariable(name: "value", arg: 6, scope: !9379, file: !3, line: 2557, type: !788)
!9389 = !DILocalVariable(name: "i", scope: !9379, file: !3, line: 2559, type: !6)
!9390 = !DILocalVariable(name: "s", scope: !9379, file: !3, line: 2559, type: !6)
!9391 = !DILabel(scope: !9379, name: "found", file: !3, line: 2587)
!9392 = !DILocation(line: 0, scope: !9379)
!9393 = !DILocation(line: 2561, column: 7, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 2561, column: 7)
!9395 = !DILocation(line: 2561, column: 7, scope: !9379)
!9396 = !DILocation(line: 2563, column: 7, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 2562, column: 5)
!9398 = !DILocation(line: 2564, column: 7, scope: !9397)
!9399 = !DILocation(line: 2567, column: 13, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 2567, column: 7)
!9401 = !DILocation(line: 2567, column: 7, scope: !9400)
!9402 = !DILocation(line: 2567, column: 7, scope: !9379)
!9403 = !DILocation(line: 2569, column: 12, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 2568, column: 5)
!9405 = !DILocation(line: 2569, column: 27, scope: !9404)
!9406 = !DILocation(line: 2569, column: 7, scope: !9404)
!9407 = !DILocation(line: 2569, column: 31, scope: !9404)
!9408 = !DILocation(line: 2569, column: 36, scope: !9404)
!9409 = !DILocation(line: 2570, column: 12, scope: !9404)
!9410 = !DILocation(line: 2570, column: 27, scope: !9404)
!9411 = !DILocation(line: 2570, column: 7, scope: !9404)
!9412 = !DILocation(line: 2570, column: 31, scope: !9404)
!9413 = !DILocation(line: 2570, column: 38, scope: !9404)
!9414 = !DILocation(line: 2571, column: 12, scope: !9404)
!9415 = !DILocation(line: 2571, column: 27, scope: !9404)
!9416 = !DILocation(line: 2571, column: 7, scope: !9404)
!9417 = !DILocation(line: 2571, column: 31, scope: !9404)
!9418 = !DILocation(line: 2571, column: 42, scope: !9404)
!9419 = !DILocation(line: 2572, column: 12, scope: !9404)
!9420 = !DILocation(line: 2572, column: 27, scope: !9404)
!9421 = !DILocation(line: 2572, column: 7, scope: !9404)
!9422 = !DILocation(line: 2572, column: 31, scope: !9404)
!9423 = !DILocation(line: 2572, column: 37, scope: !9404)
!9424 = !DILocation(line: 2573, column: 7, scope: !9404)
!9425 = !DILocation(line: 2577, column: 13, scope: !9379)
!9426 = !DILocation(line: 2577, column: 24, scope: !9379)
!9427 = !DILocation(line: 2577, column: 38, scope: !9379)
!9428 = !DILocation(line: 2577, column: 16, scope: !9379)
!9429 = !DILocation(line: 0, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9431, file: !3, line: 2579, column: 9)
!9431 = distinct !DILexicalBlock(scope: !9432, file: !3, line: 2578, column: 3)
!9432 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 2578, column: 3)
!9433 = !DILocation(line: 2578, column: 8, scope: !9432)
!9434 = !DILocation(line: 0, scope: !9432)
!9435 = !DILocation(line: 2578, column: 17, scope: !9431)
!9436 = !DILocation(line: 2578, column: 3, scope: !9432)
!9437 = !DILocation(line: 2581, column: 3, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 2581, column: 3)
!9439 = !DILocation(line: 2579, column: 15, scope: !9430)
!9440 = !DILocation(line: 2579, column: 10, scope: !9430)
!9441 = !DILocation(line: 2579, column: 27, scope: !9430)
!9442 = !DILocation(line: 2579, column: 9, scope: !9431)
!9443 = !DILocation(line: 2578, column: 40, scope: !9431)
!9444 = !DILocation(line: 2578, column: 3, scope: !9431)
!9445 = distinct !{!9445, !9436, !9446}
!9446 = !DILocation(line: 2580, column: 12, scope: !9432)
!9447 = !DILocation(line: 0, scope: !9438)
!9448 = !DILocation(line: 2581, column: 17, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 2581, column: 3)
!9450 = !DILocation(line: 2582, column: 15, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 2582, column: 9)
!9452 = !DILocation(line: 2582, column: 10, scope: !9451)
!9453 = !DILocation(line: 2582, column: 27, scope: !9451)
!9454 = !DILocation(line: 2582, column: 9, scope: !9449)
!9455 = !DILocation(line: 2581, column: 23, scope: !9449)
!9456 = !DILocation(line: 2581, column: 3, scope: !9449)
!9457 = distinct !{!9457, !9437, !9458}
!9458 = !DILocation(line: 2583, column: 12, scope: !9438)
!9459 = !DILocation(line: 2585, column: 3, scope: !9379)
!9460 = !DILocation(line: 2588, column: 8, scope: !9379)
!9461 = !DILocation(line: 2588, column: 3, scope: !9379)
!9462 = !DILocation(line: 2587, column: 1, scope: !9379)
!9463 = !DILocation(line: 2588, column: 20, scope: !9379)
!9464 = !DILocation(line: 2588, column: 25, scope: !9379)
!9465 = !DILocation(line: 2589, column: 8, scope: !9379)
!9466 = !DILocation(line: 2589, column: 20, scope: !9379)
!9467 = !DILocation(line: 2589, column: 27, scope: !9379)
!9468 = !DILocation(line: 2590, column: 8, scope: !9379)
!9469 = !DILocation(line: 2590, column: 20, scope: !9379)
!9470 = !DILocation(line: 2590, column: 31, scope: !9379)
!9471 = !DILocation(line: 2591, column: 8, scope: !9379)
!9472 = !DILocation(line: 2591, column: 20, scope: !9379)
!9473 = !DILocation(line: 2591, column: 26, scope: !9379)
!9474 = !DILocation(line: 2592, column: 1, scope: !9379)
!9475 = distinct !DISubprogram(name: "may_eliminate_iv", scope: !3, file: !3, line: 4015, type: !9476, scopeLine: 4017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9478)
!9476 = !DISubroutineType(types: !9477)
!9477 = !{!136, !2184, !2111, !2126, !1124}
!9478 = !{!9479, !9480, !9481, !9482, !9483, !9484, !9485, !9486, !9487, !9488, !9489, !9493}
!9479 = !DILocalVariable(name: "data", arg: 1, scope: !9475, file: !3, line: 4015, type: !2184)
!9480 = !DILocalVariable(name: "use", arg: 2, scope: !9475, file: !3, line: 4016, type: !2111)
!9481 = !DILocalVariable(name: "cand", arg: 3, scope: !9475, file: !3, line: 4016, type: !2126)
!9482 = !DILocalVariable(name: "bound", arg: 4, scope: !9475, file: !3, line: 4016, type: !1124)
!9483 = !DILocalVariable(name: "ex_bb", scope: !9475, file: !3, line: 4018, type: !1053)
!9484 = !DILocalVariable(name: "exit", scope: !9475, file: !3, line: 4019, type: !1070)
!9485 = !DILocalVariable(name: "nit", scope: !9475, file: !3, line: 4020, type: !788)
!9486 = !DILocalVariable(name: "period", scope: !9475, file: !3, line: 4020, type: !788)
!9487 = !DILocalVariable(name: "loop", scope: !9475, file: !3, line: 4021, type: !1305)
!9488 = !DILocalVariable(name: "bnd", scope: !9475, file: !3, line: 4022, type: !7863)
!9489 = !DILocalVariable(name: "period_value", scope: !9490, file: !3, line: 4062, type: !836)
!9490 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 4061, column: 5)
!9491 = distinct !DILexicalBlock(scope: !9492, file: !3, line: 4060, column: 12)
!9492 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 4051, column: 7)
!9493 = !DILocalVariable(name: "max_niter", scope: !9490, file: !3, line: 4062, type: !836)
!9494 = !DILocation(line: 0, scope: !9475)
!9495 = !DILocation(line: 4021, column: 29, scope: !9475)
!9496 = !DILocation(line: 4022, column: 3, scope: !9475)
!9497 = !DILocation(line: 4024, column: 7, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 4024, column: 7)
!9499 = !DILocation(line: 4024, column: 34, scope: !9498)
!9500 = !DILocation(line: 4024, column: 7, scope: !9475)
!9501 = !DILocation(line: 4029, column: 27, scope: !9475)
!9502 = !DILocation(line: 4029, column: 11, scope: !9475)
!9503 = !DILocation(line: 4030, column: 12, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 4030, column: 7)
!9505 = !DILocation(line: 4030, column: 20, scope: !9504)
!9506 = !DILocation(line: 4030, column: 17, scope: !9504)
!9507 = !DILocation(line: 4031, column: 7, scope: !9504)
!9508 = !DILocation(line: 4031, column: 28, scope: !9504)
!9509 = !DILocation(line: 4031, column: 10, scope: !9504)
!9510 = !DILocation(line: 4031, column: 34, scope: !9504)
!9511 = !DILocation(line: 4032, column: 7, scope: !9504)
!9512 = !DILocation(line: 4032, column: 49, scope: !9504)
!9513 = !DILocation(line: 4032, column: 11, scope: !9504)
!9514 = !DILocation(line: 4030, column: 7, scope: !9475)
!9515 = !DILocation(line: 4035, column: 10, scope: !9475)
!9516 = !DILocation(line: 4036, column: 42, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 4036, column: 7)
!9518 = !DILocation(line: 4036, column: 7, scope: !9517)
!9519 = !DILocation(line: 4036, column: 7, scope: !9475)
!9520 = !DILocation(line: 4037, column: 12, scope: !9517)
!9521 = !DILocation(line: 4037, column: 5, scope: !9517)
!9522 = !DILocation(line: 4038, column: 42, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 4038, column: 7)
!9524 = !DILocation(line: 4038, column: 7, scope: !9523)
!9525 = !DILocation(line: 4038, column: 7, scope: !9475)
!9526 = !DILocation(line: 4041, column: 9, scope: !9475)
!9527 = !DILocation(line: 4042, column: 8, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 4042, column: 7)
!9529 = !DILocation(line: 4042, column: 7, scope: !9475)
!9530 = !DILocation(line: 4048, column: 29, scope: !9475)
!9531 = !DILocation(line: 4048, column: 12, scope: !9475)
!9532 = !DILocation(line: 4051, column: 7, scope: !9492)
!9533 = !DILocation(line: 4051, column: 23, scope: !9492)
!9534 = !DILocation(line: 4051, column: 7, scope: !9475)
!9535 = !DILocation(line: 4053, column: 12, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !3, line: 4053, column: 11)
!9537 = distinct !DILexicalBlock(scope: !9492, file: !3, line: 4052, column: 5)
!9538 = !DILocation(line: 4053, column: 11, scope: !9537)
!9539 = !DILocation(line: 4060, column: 12, scope: !9491)
!9540 = !DILocation(line: 4060, column: 12, scope: !9492)
!9541 = !DILocation(line: 4062, column: 7, scope: !9490)
!9542 = !DILocation(line: 0, scope: !9490)
!9543 = !DILocation(line: 4063, column: 12, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9490, file: !3, line: 4063, column: 11)
!9545 = !DILocation(line: 4063, column: 11, scope: !9490)
!9546 = !DILocation(line: 4065, column: 22, scope: !9490)
!9547 = !DILocation(line: 4066, column: 11, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9490, file: !3, line: 4066, column: 11)
!9549 = !DILocation(line: 4066, column: 53, scope: !9548)
!9550 = !DILocation(line: 0, scope: !9491)
!9551 = !DILocation(line: 4068, column: 5, scope: !9491)
!9552 = !DILocation(line: 4074, column: 35, scope: !9475)
!9553 = !DILocation(line: 4074, column: 3, scope: !9475)
!9554 = !DILocation(line: 4076, column: 12, scope: !9475)
!9555 = !DILocation(line: 4076, column: 10, scope: !9475)
!9556 = !DILocation(line: 4079, column: 7, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 4079, column: 7)
!9558 = !DILocation(line: 4082, column: 1, scope: !9475)
!9559 = distinct !DISubprogram(name: "compare_costs", scope: !3, file: !3, line: 2534, type: !9560, scopeLine: 2535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9562)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{!659, !2141, !2141}
!9562 = !{!9563, !9564}
!9563 = !DILocalVariable(name: "cost1", arg: 1, scope: !9559, file: !3, line: 2534, type: !2141)
!9564 = !DILocalVariable(name: "cost2", arg: 2, scope: !9559, file: !3, line: 2534, type: !2141)
!9565 = !DILocation(line: 2536, column: 13, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 2536, column: 7)
!9567 = !DILocation(line: 2536, column: 27, scope: !9566)
!9568 = !DILocation(line: 2536, column: 18, scope: !9566)
!9569 = !DILocation(line: 2536, column: 7, scope: !9559)
!9570 = !DILocation(line: 2537, column: 29, scope: !9566)
!9571 = !DILocation(line: 2537, column: 5, scope: !9566)
!9572 = !DILocation(line: 2539, column: 21, scope: !9559)
!9573 = !DILocation(line: 2539, column: 3, scope: !9559)
!9574 = !DILocation(line: 0, scope: !9559)
!9575 = !DILocation(line: 2540, column: 1, scope: !9559)
!9576 = distinct !DISubprogram(name: "iv_period", scope: !3, file: !3, line: 3974, type: !9577, scopeLine: 3975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9579)
!9577 = !DISubroutineType(types: !9578)
!9578 = !{!788, !2085}
!9579 = !{!9580, !9581, !9582, !9583, !9584}
!9580 = !DILocalVariable(name: "iv", arg: 1, scope: !9576, file: !3, line: 3974, type: !2085)
!9581 = !DILocalVariable(name: "step", scope: !9576, file: !3, line: 3976, type: !788)
!9582 = !DILocalVariable(name: "period", scope: !9576, file: !3, line: 3976, type: !788)
!9583 = !DILocalVariable(name: "type", scope: !9576, file: !3, line: 3976, type: !788)
!9584 = !DILocalVariable(name: "pow2div", scope: !9576, file: !3, line: 3977, type: !788)
!9585 = !DILocation(line: 0, scope: !9576)
!9586 = !DILocation(line: 3976, column: 19, scope: !9576)
!9587 = !DILocation(line: 3979, column: 3, scope: !9576)
!9588 = !DILocation(line: 3984, column: 13, scope: !9576)
!9589 = !DILocation(line: 3985, column: 29, scope: !9576)
!9590 = !DILocation(line: 3985, column: 10, scope: !9576)
!9591 = !DILocation(line: 3988, column: 6, scope: !9576)
!9592 = !DILocation(line: 3989, column: 8, scope: !9576)
!9593 = !DILocation(line: 3988, column: 5, scope: !9576)
!9594 = !DILocation(line: 3987, column: 12, scope: !9576)
!9595 = !DILocation(line: 3991, column: 3, scope: !9576)
!9596 = distinct !DISubprogram(name: "cand_value_at", scope: !3, file: !3, line: 3950, type: !9597, scopeLine: 3952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9600)
!9597 = !DISubroutineType(types: !9598)
!9598 = !{null, !1305, !2126, !1090, !788, !9599}
!9599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7863, size: 64)
!9600 = !{!9601, !9602, !9603, !9604, !9605, !9606, !9607, !9608, !9609, !9610, !9611}
!9601 = !DILocalVariable(name: "loop", arg: 1, scope: !9596, file: !3, line: 3950, type: !1305)
!9602 = !DILocalVariable(name: "cand", arg: 2, scope: !9596, file: !3, line: 3950, type: !2126)
!9603 = !DILocalVariable(name: "at", arg: 3, scope: !9596, file: !3, line: 3950, type: !1090)
!9604 = !DILocalVariable(name: "niter", arg: 4, scope: !9596, file: !3, line: 3950, type: !788)
!9605 = !DILocalVariable(name: "val", arg: 5, scope: !9596, file: !3, line: 3951, type: !9599)
!9606 = !DILocalVariable(name: "step", scope: !9596, file: !3, line: 3953, type: !7863)
!9607 = !DILocalVariable(name: "delta", scope: !9596, file: !3, line: 3953, type: !7863)
!9608 = !DILocalVariable(name: "nit", scope: !9596, file: !3, line: 3953, type: !7863)
!9609 = !DILocalVariable(name: "iv", scope: !9596, file: !3, line: 3954, type: !2085)
!9610 = !DILocalVariable(name: "type", scope: !9596, file: !3, line: 3955, type: !788)
!9611 = !DILocalVariable(name: "steptype", scope: !9596, file: !3, line: 3956, type: !788)
!9612 = !DILocation(line: 0, scope: !9596)
!9613 = !DILocation(line: 3953, column: 3, scope: !9596)
!9614 = !DILocation(line: 3954, column: 25, scope: !9596)
!9615 = !DILocation(line: 3955, column: 15, scope: !9596)
!9616 = !DILocation(line: 3957, column: 7, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9596, file: !3, line: 3957, column: 7)
!9618 = !DILocation(line: 3957, column: 7, scope: !9596)
!9619 = !DILocation(line: 3958, column: 16, scope: !9617)
!9620 = !DILocation(line: 3958, column: 5, scope: !9617)
!9621 = !DILocation(line: 3960, column: 32, scope: !9596)
!9622 = !DILocation(line: 3960, column: 3, scope: !9596)
!9623 = !DILocation(line: 3961, column: 35, scope: !9596)
!9624 = !DILocation(line: 3961, column: 3, scope: !9596)
!9625 = !DILocation(line: 3962, column: 3, scope: !9596)
!9626 = !DILocation(line: 3963, column: 3, scope: !9596)
!9627 = !DILocation(line: 3964, column: 7, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9596, file: !3, line: 3964, column: 7)
!9629 = !DILocation(line: 3964, column: 7, scope: !9596)
!9630 = !DILocation(line: 3965, column: 5, scope: !9628)
!9631 = !DILocation(line: 3967, column: 32, scope: !9596)
!9632 = !DILocation(line: 3967, column: 3, scope: !9596)
!9633 = !DILocation(line: 3968, column: 3, scope: !9596)
!9634 = !DILocation(line: 3969, column: 1, scope: !9596)
!9635 = distinct !DISubprogram(name: "ivopts_global_cost_for_size", scope: !3, file: !3, line: 4409, type: !9636, scopeLine: 4410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9638)
!9636 = !DISubroutineType(types: !9637)
!9637 = !{!6, !2184, !6}
!9638 = !{!9639, !9640}
!9639 = !DILocalVariable(name: "data", arg: 1, scope: !9635, file: !3, line: 4409, type: !2184)
!9640 = !DILocalVariable(name: "size", arg: 2, scope: !9635, file: !3, line: 4409, type: !6)
!9641 = !DILocation(line: 0, scope: !9635)
!9642 = !DILocation(line: 4413, column: 57, scope: !9635)
!9643 = !DILocation(line: 4413, column: 74, scope: !9635)
!9644 = !DILocation(line: 4413, column: 17, scope: !9635)
!9645 = !DILocation(line: 4413, column: 15, scope: !9635)
!9646 = !DILocation(line: 4413, column: 3, scope: !9635)
!9647 = distinct !DISubprogram(name: "get_initial_solution", scope: !3, file: !3, line: 5177, type: !4520, scopeLine: 5178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9648)
!9648 = !{!9649, !9650, !9651}
!9649 = !DILocalVariable(name: "data", arg: 1, scope: !9647, file: !3, line: 5177, type: !2184)
!9650 = !DILocalVariable(name: "ivs", scope: !9647, file: !3, line: 5179, type: !2230)
!9651 = !DILocalVariable(name: "i", scope: !9647, file: !3, line: 5180, type: !6)
!9652 = !DILocation(line: 0, scope: !9647)
!9653 = !DILocation(line: 5179, column: 3, scope: !9647)
!9654 = !DILocation(line: 5179, column: 23, scope: !9647)
!9655 = !DILocation(line: 5179, column: 17, scope: !9647)
!9656 = !DILocation(line: 5182, column: 8, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9647, file: !3, line: 5182, column: 3)
!9658 = !DILocation(line: 0, scope: !9657)
!9659 = !DILocation(line: 5182, column: 19, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 5182, column: 3)
!9661 = !DILocation(line: 5182, column: 17, scope: !9660)
!9662 = !DILocation(line: 5182, column: 3, scope: !9657)
!9663 = !DILocation(line: 5183, column: 39, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 5183, column: 9)
!9665 = !DILocation(line: 5183, column: 10, scope: !9664)
!9666 = !DILocation(line: 5183, column: 9, scope: !9660)
!9667 = !DILocation(line: 5185, column: 2, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 5184, column: 7)
!9669 = !DILocation(line: 5186, column: 2, scope: !9668)
!9670 = !DILocation(line: 5182, column: 38, scope: !9660)
!9671 = !DILocation(line: 5182, column: 3, scope: !9660)
!9672 = distinct !{!9672, !9662, !9673}
!9673 = !DILocation(line: 5187, column: 7, scope: !9657)
!9674 = !DILocation(line: 5190, column: 1, scope: !9647)
!9675 = distinct !DISubprogram(name: "iv_ca_dump", scope: !3, file: !3, line: 4872, type: !9676, scopeLine: 4873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9678)
!9676 = !DISubroutineType(types: !9677)
!9677 = !{null, !2184, !2448, !2230}
!9678 = !{!9679, !9680, !9681, !9682, !9683, !9684}
!9679 = !DILocalVariable(name: "data", arg: 1, scope: !9675, file: !3, line: 4872, type: !2184)
!9680 = !DILocalVariable(name: "file", arg: 2, scope: !9675, file: !3, line: 4872, type: !2448)
!9681 = !DILocalVariable(name: "ivs", arg: 3, scope: !9675, file: !3, line: 4872, type: !2230)
!9682 = !DILocalVariable(name: "pref", scope: !9675, file: !3, line: 4874, type: !664)
!9683 = !DILocalVariable(name: "i", scope: !9675, file: !3, line: 4875, type: !6)
!9684 = !DILocalVariable(name: "cost", scope: !9675, file: !3, line: 4876, type: !2141)
!9685 = !DILocation(line: 0, scope: !9675)
!9686 = !DILocation(line: 4876, column: 20, scope: !9675)
!9687 = !DILocation(line: 4878, column: 54, scope: !9675)
!9688 = !DILocation(line: 4878, column: 65, scope: !9675)
!9689 = !DILocation(line: 4878, column: 3, scope: !9675)
!9690 = !DILocation(line: 4879, column: 28, scope: !9675)
!9691 = !DILocation(line: 4879, column: 3, scope: !9675)
!9692 = !DILocation(line: 0, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9694, file: !3, line: 4881, column: 3)
!9694 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 4881, column: 3)
!9695 = !DILocation(line: 0, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9693, file: !3, line: 4882, column: 9)
!9697 = !DILocation(line: 4881, column: 8, scope: !9694)
!9698 = !DILocation(line: 0, scope: !9694)
!9699 = !DILocation(line: 4881, column: 26, scope: !9693)
!9700 = !DILocation(line: 4881, column: 17, scope: !9693)
!9701 = !DILocation(line: 4881, column: 3, scope: !9694)
!9702 = !DILocation(line: 4882, column: 14, scope: !9696)
!9703 = !DILocation(line: 4882, column: 9, scope: !9696)
!9704 = !DILocation(line: 4882, column: 9, scope: !9693)
!9705 = !DILocation(line: 4884, column: 2, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 4883, column: 7)
!9707 = !DILocation(line: 4886, column: 7, scope: !9706)
!9708 = !DILocation(line: 4881, column: 39, scope: !9693)
!9709 = !DILocation(line: 4881, column: 3, scope: !9693)
!9710 = distinct !{!9710, !9701, !9711}
!9711 = !DILocation(line: 4886, column: 7, scope: !9694)
!9712 = !DILocation(line: 4887, column: 3, scope: !9675)
!9713 = !DILocation(line: 4888, column: 1, scope: !9675)
!9714 = distinct !DISubprogram(name: "try_improve_iv_set", scope: !3, file: !3, line: 5195, type: !9715, scopeLine: 5196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9717)
!9715 = !DISubroutineType(types: !9716)
!9716 = !{!136, !2184, !2230}
!9717 = !{!9718, !9719, !9720, !9721, !9722, !9723, !9724, !9725, !9726, !9727}
!9718 = !DILocalVariable(name: "data", arg: 1, scope: !9714, file: !3, line: 5195, type: !2184)
!9719 = !DILocalVariable(name: "ivs", arg: 2, scope: !9714, file: !3, line: 5195, type: !2230)
!9720 = !DILocalVariable(name: "i", scope: !9714, file: !3, line: 5197, type: !6)
!9721 = !DILocalVariable(name: "n_ivs", scope: !9714, file: !3, line: 5197, type: !6)
!9722 = !DILocalVariable(name: "acost", scope: !9714, file: !3, line: 5198, type: !2141)
!9723 = !DILocalVariable(name: "best_cost", scope: !9714, file: !3, line: 5198, type: !2141)
!9724 = !DILocalVariable(name: "best_delta", scope: !9714, file: !3, line: 5199, type: !2246)
!9725 = !DILocalVariable(name: "act_delta", scope: !9714, file: !3, line: 5199, type: !2246)
!9726 = !DILocalVariable(name: "tmp_delta", scope: !9714, file: !3, line: 5199, type: !2246)
!9727 = !DILocalVariable(name: "cand", scope: !9714, file: !3, line: 5200, type: !2126)
!9728 = !DILocation(line: 0, scope: !9714)
!9729 = !DILocation(line: 5197, column: 3, scope: !9714)
!9730 = !DILocation(line: 5198, column: 32, scope: !9714)
!9731 = !DILocation(line: 5199, column: 3, scope: !9714)
!9732 = !DILocation(line: 5199, column: 23, scope: !9714)
!9733 = !DILocation(line: 0, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 5225, column: 2)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 5224, column: 11)
!9736 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 5204, column: 5)
!9737 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 5203, column: 3)
!9738 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 5203, column: 3)
!9739 = !DILocation(line: 5203, column: 8, scope: !9738)
!9740 = !DILocation(line: 0, scope: !9738)
!9741 = !DILocation(line: 5203, column: 19, scope: !9737)
!9742 = !DILocation(line: 5203, column: 17, scope: !9737)
!9743 = !DILocation(line: 5203, column: 3, scope: !9738)
!9744 = !DILocation(line: 5205, column: 14, scope: !9736)
!9745 = !DILocation(line: 5207, column: 11, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 5207, column: 11)
!9747 = !DILocation(line: 5207, column: 11, scope: !9736)
!9748 = !DILocation(line: 5210, column: 15, scope: !9736)
!9749 = !DILocation(line: 5211, column: 12, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 5211, column: 11)
!9751 = !DILocation(line: 5211, column: 11, scope: !9736)
!9752 = !DILocation(line: 5216, column: 11, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 5216, column: 11)
!9754 = !DILocation(line: 5216, column: 20, scope: !9753)
!9755 = !DILocation(line: 5216, column: 17, scope: !9753)
!9756 = !DILocation(line: 5216, column: 11, scope: !9736)
!9757 = !DILocation(line: 5218, column: 4, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 5217, column: 8)
!9759 = !DILocation(line: 5219, column: 12, scope: !9758)
!9760 = !DILocation(line: 5220, column: 35, scope: !9758)
!9761 = !DILocation(line: 5220, column: 4, scope: !9758)
!9762 = !DILocation(line: 5221, column: 34, scope: !9758)
!9763 = !DILocation(line: 5221, column: 45, scope: !9758)
!9764 = !DILocation(line: 5221, column: 16, scope: !9758)
!9765 = !DILocation(line: 5221, column: 14, scope: !9758)
!9766 = !DILocation(line: 5222, column: 2, scope: !9758)
!9767 = !DILocation(line: 5224, column: 11, scope: !9735)
!9768 = !DILocation(line: 5224, column: 44, scope: !9735)
!9769 = !DILocation(line: 5224, column: 11, scope: !9736)
!9770 = !DILocation(line: 5227, column: 4, scope: !9734)
!9771 = !DILocation(line: 5228, column: 17, scope: !9734)
!9772 = !DILocation(line: 5228, column: 15, scope: !9734)
!9773 = !DILocation(line: 5229, column: 2, scope: !9734)
!9774 = !DILocation(line: 5231, column: 2, scope: !9735)
!9775 = !DILocation(line: 5203, column: 39, scope: !9737)
!9776 = !DILocation(line: 5203, column: 3, scope: !9737)
!9777 = distinct !{!9777, !9743, !9778}
!9778 = !DILocation(line: 5232, column: 5, scope: !9738)
!9779 = !DILocation(line: 5234, column: 8, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 5234, column: 7)
!9781 = !DILocation(line: 5234, column: 7, scope: !9714)
!9782 = !DILocation(line: 5237, column: 19, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 5235, column: 5)
!9784 = !DILocation(line: 5240, column: 12, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9783, file: !3, line: 5240, column: 11)
!9786 = !DILocation(line: 5240, column: 11, scope: !9783)
!9787 = !DILocation(line: 5245, column: 3, scope: !9714)
!9788 = !DILocation(line: 5244, column: 34, scope: !9714)
!9789 = !DILocation(line: 5244, column: 3, scope: !9714)
!9790 = !DILocation(line: 5246, column: 3, scope: !9714)
!9791 = !DILocation(line: 5247, column: 3, scope: !9714)
!9792 = !DILocation(line: 5248, column: 1, scope: !9714)
!9793 = distinct !DISubprogram(name: "iv_ca_cost", scope: !3, file: !3, line: 4679, type: !9794, scopeLine: 4680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9796)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{!2141, !2230}
!9796 = !{!9797}
!9797 = !DILocalVariable(name: "ivs", arg: 1, scope: !9793, file: !3, line: 4679, type: !2230)
!9798 = !DILocation(line: 0, scope: !9793)
!9799 = !DILocation(line: 4683, column: 12, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9793, file: !3, line: 4683, column: 7)
!9801 = !DILocation(line: 4683, column: 7, scope: !9800)
!9802 = !DILocation(line: 4683, column: 7, scope: !9793)
!9803 = !DILocation(line: 4684, column: 5, scope: !9800)
!9804 = !DILocation(line: 4686, column: 17, scope: !9800)
!9805 = !DILocation(line: 4686, column: 5, scope: !9800)
!9806 = !DILocation(line: 0, scope: !9800)
!9807 = !DILocation(line: 4687, column: 1, scope: !9793)
!9808 = distinct !DISubprogram(name: "iv_ca_cand_for_use", scope: !3, file: !3, line: 4750, type: !9809, scopeLine: 4751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9811)
!9809 = !DISubroutineType(types: !9810)
!9810 = !{!2122, !2230, !2111}
!9811 = !{!9812, !9813}
!9812 = !DILocalVariable(name: "ivs", arg: 1, scope: !9808, file: !3, line: 4750, type: !2230)
!9813 = !DILocalVariable(name: "use", arg: 2, scope: !9808, file: !3, line: 4750, type: !2111)
!9814 = !DILocation(line: 0, scope: !9808)
!9815 = !DILocation(line: 4752, column: 15, scope: !9808)
!9816 = !DILocation(line: 4752, column: 33, scope: !9808)
!9817 = !DILocation(line: 4752, column: 10, scope: !9808)
!9818 = !DILocation(line: 4752, column: 3, scope: !9808)
!9819 = distinct !DISubprogram(name: "iv_ca_new", scope: !3, file: !3, line: 4837, type: !4520, scopeLine: 4838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9820)
!9820 = !{!9821, !9822}
!9821 = !DILocalVariable(name: "data", arg: 1, scope: !9819, file: !3, line: 4837, type: !2184)
!9822 = !DILocalVariable(name: "nw", scope: !9819, file: !3, line: 4839, type: !2230)
!9823 = !DILocation(line: 0, scope: !9819)
!9824 = !DILocation(line: 4839, column: 22, scope: !9819)
!9825 = !DILocation(line: 4841, column: 7, scope: !9819)
!9826 = !DILocation(line: 4841, column: 12, scope: !9819)
!9827 = !DILocation(line: 4842, column: 7, scope: !9819)
!9828 = !DILocation(line: 4842, column: 16, scope: !9819)
!9829 = !DILocation(line: 4843, column: 22, scope: !9819)
!9830 = !DILocation(line: 4843, column: 7, scope: !9819)
!9831 = !DILocation(line: 4843, column: 20, scope: !9819)
!9832 = !DILocation(line: 4844, column: 21, scope: !9819)
!9833 = !DILocation(line: 4844, column: 7, scope: !9819)
!9834 = !DILocation(line: 4844, column: 19, scope: !9819)
!9835 = !DILocation(line: 4845, column: 15, scope: !9819)
!9836 = !DILocation(line: 4845, column: 7, scope: !9819)
!9837 = !DILocation(line: 4845, column: 13, scope: !9819)
!9838 = !DILocation(line: 4846, column: 7, scope: !9819)
!9839 = !DILocation(line: 4846, column: 15, scope: !9819)
!9840 = !DILocation(line: 4847, column: 7, scope: !9819)
!9841 = !DILocation(line: 4847, column: 14, scope: !9819)
!9842 = !DILocation(line: 4848, column: 7, scope: !9819)
!9843 = !DILocation(line: 4848, column: 23, scope: !9819)
!9844 = !DILocation(line: 4849, column: 7, scope: !9819)
!9845 = !DILocation(line: 4849, column: 17, scope: !9819)
!9846 = !DILocation(line: 4850, column: 26, scope: !9819)
!9847 = !DILocation(line: 4850, column: 7, scope: !9819)
!9848 = !DILocation(line: 4850, column: 24, scope: !9819)
!9849 = !DILocation(line: 4851, column: 7, scope: !9819)
!9850 = !DILocation(line: 4851, column: 14, scope: !9819)
!9851 = !DILocation(line: 4853, column: 3, scope: !9819)
!9852 = distinct !DISubprogram(name: "try_add_cand_for", scope: !3, file: !3, line: 5074, type: !9853, scopeLine: 5076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9855)
!9853 = !DISubroutineType(types: !9854)
!9854 = !{!136, !2184, !2230, !2111}
!9855 = !{!9856, !9857, !9858, !9859, !9860, !9861, !9862, !9863, !9864, !9865, !9866}
!9856 = !DILocalVariable(name: "data", arg: 1, scope: !9852, file: !3, line: 5074, type: !2184)
!9857 = !DILocalVariable(name: "ivs", arg: 2, scope: !9852, file: !3, line: 5074, type: !2230)
!9858 = !DILocalVariable(name: "use", arg: 3, scope: !9852, file: !3, line: 5075, type: !2111)
!9859 = !DILocalVariable(name: "best_cost", scope: !9852, file: !3, line: 5077, type: !2141)
!9860 = !DILocalVariable(name: "act_cost", scope: !9852, file: !3, line: 5077, type: !2141)
!9861 = !DILocalVariable(name: "i", scope: !9852, file: !3, line: 5078, type: !6)
!9862 = !DILocalVariable(name: "bi", scope: !9852, file: !3, line: 5079, type: !4005)
!9863 = !DILocalVariable(name: "cand", scope: !9852, file: !3, line: 5080, type: !2126)
!9864 = !DILocalVariable(name: "best_delta", scope: !9852, file: !3, line: 5081, type: !2246)
!9865 = !DILocalVariable(name: "act_delta", scope: !9852, file: !3, line: 5081, type: !2246)
!9866 = !DILocalVariable(name: "cp", scope: !9852, file: !3, line: 5082, type: !2122)
!9867 = !DILocation(line: 0, scope: !9852)
!9868 = !DILocation(line: 5078, column: 3, scope: !9852)
!9869 = !DILocation(line: 5079, column: 3, scope: !9852)
!9870 = !DILocation(line: 5081, column: 3, scope: !9852)
!9871 = !DILocation(line: 5081, column: 23, scope: !9852)
!9872 = !DILocation(line: 5084, column: 3, scope: !9852)
!9873 = !DILocation(line: 5085, column: 15, scope: !9852)
!9874 = !DILocation(line: 5087, column: 8, scope: !9852)
!9875 = !DILocation(line: 5088, column: 7, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 5088, column: 7)
!9877 = !DILocation(line: 5088, column: 7, scope: !9852)
!9878 = !DILocation(line: 5090, column: 20, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9876, file: !3, line: 5089, column: 5)
!9880 = !DILocation(line: 5090, column: 18, scope: !9879)
!9881 = !DILocation(line: 5091, column: 7, scope: !9879)
!9882 = !DILocation(line: 5092, column: 5, scope: !9879)
!9883 = !DILocation(line: 5102, column: 3, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 5102, column: 3)
!9885 = !DILocation(line: 0, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 5122, column: 2)
!9887 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 5121, column: 11)
!9888 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 5103, column: 5)
!9889 = distinct !DILexicalBlock(scope: !9884, file: !3, line: 5102, column: 3)
!9890 = !DILocation(line: 5102, column: 3, scope: !9889)
!9891 = !DILocation(line: 5104, column: 29, scope: !9888)
!9892 = !DILocation(line: 5104, column: 14, scope: !9888)
!9893 = !DILocation(line: 5106, column: 17, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 5106, column: 11)
!9895 = !DILocation(line: 5106, column: 21, scope: !9894)
!9896 = !DILocation(line: 5106, column: 33, scope: !9894)
!9897 = !DILocation(line: 5106, column: 11, scope: !9888)
!9898 = !DILocation(line: 5109, column: 11, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 5109, column: 11)
!9900 = !DILocation(line: 5109, column: 11, scope: !9888)
!9901 = !DILocation(line: 5112, column: 12, scope: !9888)
!9902 = !DILocation(line: 5113, column: 12, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 5113, column: 11)
!9904 = !DILocation(line: 5113, column: 11, scope: !9888)
!9905 = !DILocation(line: 5116, column: 7, scope: !9888)
!9906 = !DILocation(line: 5117, column: 18, scope: !9888)
!9907 = !DILocation(line: 5118, column: 7, scope: !9888)
!9908 = !DILocation(line: 5119, column: 51, scope: !9888)
!9909 = !DILocation(line: 5119, column: 19, scope: !9888)
!9910 = !DILocation(line: 5119, column: 17, scope: !9888)
!9911 = !DILocation(line: 5121, column: 11, scope: !9887)
!9912 = !DILocation(line: 5121, column: 47, scope: !9887)
!9913 = !DILocation(line: 5121, column: 11, scope: !9888)
!9914 = !DILocation(line: 5125, column: 4, scope: !9886)
!9915 = !DILocation(line: 5126, column: 17, scope: !9886)
!9916 = !DILocation(line: 5126, column: 15, scope: !9886)
!9917 = !DILocation(line: 5127, column: 2, scope: !9886)
!9918 = !DILocation(line: 5129, column: 2, scope: !9887)
!9919 = distinct !{!9919, !9883, !9920}
!9920 = !DILocation(line: 5130, column: 5, scope: !9884)
!9921 = !DILocation(line: 5132, column: 7, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 5132, column: 7)
!9923 = !DILocation(line: 5132, column: 7, scope: !9852)
!9924 = !DILocation(line: 0, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9926, file: !3, line: 5134, column: 7)
!9926 = distinct !DILexicalBlock(scope: !9927, file: !3, line: 5134, column: 7)
!9927 = distinct !DILexicalBlock(scope: !9922, file: !3, line: 5133, column: 5)
!9928 = !DILocation(line: 0, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9925, file: !3, line: 5135, column: 2)
!9930 = !DILocation(line: 5134, column: 12, scope: !9926)
!9931 = !DILocation(line: 0, scope: !9926)
!9932 = !DILocation(line: 5134, column: 28, scope: !9925)
!9933 = !DILocation(line: 5134, column: 21, scope: !9925)
!9934 = !DILocation(line: 5134, column: 7, scope: !9926)
!9935 = !DILocation(line: 5136, column: 14, scope: !9929)
!9936 = !DILocation(line: 5136, column: 23, scope: !9929)
!9937 = !DILocation(line: 5137, column: 15, scope: !9929)
!9938 = !DILocation(line: 5138, column: 9, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 5138, column: 8)
!9940 = !DILocation(line: 5138, column: 8, scope: !9929)
!9941 = !DILocation(line: 5142, column: 14, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 5142, column: 8)
!9943 = !DILocation(line: 5142, column: 8, scope: !9942)
!9944 = !DILocation(line: 5142, column: 24, scope: !9942)
!9945 = !DILocation(line: 5142, column: 33, scope: !9942)
!9946 = !DILocation(line: 5142, column: 37, scope: !9942)
!9947 = !DILocation(line: 5142, column: 49, scope: !9942)
!9948 = !DILocation(line: 5142, column: 8, scope: !9929)
!9949 = !DILocation(line: 5145, column: 8, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 5145, column: 8)
!9951 = !DILocation(line: 5145, column: 8, scope: !9929)
!9952 = !DILocation(line: 5148, column: 14, scope: !9929)
!9953 = !DILocation(line: 5149, column: 4, scope: !9929)
!9954 = !DILocation(line: 5150, column: 15, scope: !9929)
!9955 = !DILocation(line: 5151, column: 4, scope: !9929)
!9956 = !DILocation(line: 5152, column: 38, scope: !9929)
!9957 = !DILocation(line: 5153, column: 16, scope: !9929)
!9958 = !DILocation(line: 5152, column: 16, scope: !9929)
!9959 = !DILocation(line: 5152, column: 14, scope: !9929)
!9960 = !DILocation(line: 5155, column: 8, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 5155, column: 8)
!9962 = !DILocation(line: 5155, column: 44, scope: !9961)
!9963 = !DILocation(line: 5155, column: 8, scope: !9929)
!9964 = !DILocation(line: 5159, column: 12, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 5159, column: 12)
!9966 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 5156, column: 6)
!9967 = !DILocation(line: 5159, column: 12, scope: !9966)
!9968 = !DILocation(line: 5160, column: 3, scope: !9965)
!9969 = !DILocation(line: 5161, column: 21, scope: !9966)
!9970 = !DILocation(line: 5161, column: 19, scope: !9966)
!9971 = !DILocation(line: 5162, column: 6, scope: !9966)
!9972 = !DILocation(line: 5164, column: 6, scope: !9961)
!9973 = !DILocation(line: 5134, column: 44, scope: !9925)
!9974 = !DILocation(line: 5134, column: 7, scope: !9925)
!9975 = distinct !{!9975, !9934, !9976}
!9976 = !DILocation(line: 5165, column: 2, scope: !9926)
!9977 = !DILocation(line: 5168, column: 34, scope: !9852)
!9978 = !DILocation(line: 5171, column: 11, scope: !9852)
!9979 = !DILocation(line: 5168, column: 3, scope: !9852)
!9980 = !DILocation(line: 5169, column: 3, scope: !9852)
!9981 = !DILocation(line: 5171, column: 10, scope: !9852)
!9982 = !DILocation(line: 5172, column: 1, scope: !9852)
!9983 = !DILocation(line: 5171, column: 3, scope: !9852)
!9984 = distinct !DISubprogram(name: "iv_ca_add_use", scope: !3, file: !3, line: 4650, type: !9985, scopeLine: 4652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !9987)
!9985 = !DISubroutineType(types: !9986)
!9986 = !{null, !2184, !2230, !2111}
!9987 = !{!9988, !9989, !9990, !9991, !9992, !9993, !9994}
!9988 = !DILocalVariable(name: "data", arg: 1, scope: !9984, file: !3, line: 4650, type: !2184)
!9989 = !DILocalVariable(name: "ivs", arg: 2, scope: !9984, file: !3, line: 4650, type: !2230)
!9990 = !DILocalVariable(name: "use", arg: 3, scope: !9984, file: !3, line: 4651, type: !2111)
!9991 = !DILocalVariable(name: "best_cp", scope: !9984, file: !3, line: 4653, type: !2122)
!9992 = !DILocalVariable(name: "cp", scope: !9984, file: !3, line: 4653, type: !2122)
!9993 = !DILocalVariable(name: "bi", scope: !9984, file: !3, line: 4654, type: !4005)
!9994 = !DILocalVariable(name: "i", scope: !9984, file: !3, line: 4655, type: !6)
!9995 = !DILocation(line: 0, scope: !9984)
!9996 = !DILocation(line: 4654, column: 3, scope: !9984)
!9997 = !DILocation(line: 4655, column: 3, scope: !9984)
!9998 = !DILocation(line: 4657, column: 3, scope: !9984)
!9999 = !DILocation(line: 4659, column: 12, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 4659, column: 7)
!10001 = !DILocation(line: 4659, column: 25, scope: !10000)
!10002 = !DILocation(line: 4659, column: 17, scope: !10000)
!10003 = !DILocation(line: 4659, column: 7, scope: !9984)
!10004 = !DILocation(line: 4661, column: 16, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 4660, column: 5)
!10006 = !DILocation(line: 4662, column: 12, scope: !10005)
!10007 = !DILocation(line: 4662, column: 20, scope: !10005)
!10008 = !DILocation(line: 4663, column: 5, scope: !10005)
!10009 = !DILocation(line: 4665, column: 3, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 4665, column: 3)
!10011 = !DILocation(line: 4665, column: 3, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 4665, column: 3)
!10013 = !DILocation(line: 4667, column: 55, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 4666, column: 5)
!10015 = !DILocation(line: 4667, column: 40, scope: !10014)
!10016 = !DILocation(line: 4667, column: 12, scope: !10014)
!10017 = !DILocation(line: 4669, column: 11, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10014, file: !3, line: 4669, column: 11)
!10019 = !DILocation(line: 4669, column: 11, scope: !10014)
!10020 = distinct !{!10020, !10009, !10021}
!10021 = !DILocation(line: 4671, column: 5, scope: !10010)
!10022 = !DILocation(line: 4673, column: 3, scope: !9984)
!10023 = !DILocation(line: 4674, column: 1, scope: !9984)
!10024 = distinct !DISubprogram(name: "iv_ca_delta_add", scope: !3, file: !3, line: 4713, type: !10025, scopeLine: 4715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10027)
!10025 = !DISubroutineType(types: !10026)
!10026 = !{!2246, !2111, !2122, !2122, !2246}
!10027 = !{!10028, !10029, !10030, !10031, !10032}
!10028 = !DILocalVariable(name: "use", arg: 1, scope: !10024, file: !3, line: 4713, type: !2111)
!10029 = !DILocalVariable(name: "old_cp", arg: 2, scope: !10024, file: !3, line: 4713, type: !2122)
!10030 = !DILocalVariable(name: "new_cp", arg: 3, scope: !10024, file: !3, line: 4714, type: !2122)
!10031 = !DILocalVariable(name: "next_change", arg: 4, scope: !10024, file: !3, line: 4714, type: !2246)
!10032 = !DILocalVariable(name: "change", scope: !10024, file: !3, line: 4716, type: !2246)
!10033 = !DILocation(line: 0, scope: !10024)
!10034 = !DILocation(line: 4716, column: 32, scope: !10024)
!10035 = !DILocation(line: 4718, column: 11, scope: !10024)
!10036 = !DILocation(line: 4718, column: 15, scope: !10024)
!10037 = !DILocation(line: 4719, column: 11, scope: !10024)
!10038 = !DILocation(line: 4719, column: 18, scope: !10024)
!10039 = !DILocation(line: 4720, column: 11, scope: !10024)
!10040 = !DILocation(line: 4720, column: 18, scope: !10024)
!10041 = !DILocation(line: 4721, column: 11, scope: !10024)
!10042 = !DILocation(line: 4721, column: 23, scope: !10024)
!10043 = !DILocation(line: 4723, column: 3, scope: !10024)
!10044 = distinct !DISubprogram(name: "iv_ca_set_no_cp", scope: !3, file: !3, line: 4555, type: !9985, scopeLine: 4557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10045)
!10045 = !{!10046, !10047, !10048, !10049, !10050, !10051}
!10046 = !DILocalVariable(name: "data", arg: 1, scope: !10044, file: !3, line: 4555, type: !2184)
!10047 = !DILocalVariable(name: "ivs", arg: 2, scope: !10044, file: !3, line: 4555, type: !2230)
!10048 = !DILocalVariable(name: "use", arg: 3, scope: !10044, file: !3, line: 4556, type: !2111)
!10049 = !DILocalVariable(name: "uid", scope: !10044, file: !3, line: 4558, type: !6)
!10050 = !DILocalVariable(name: "cid", scope: !10044, file: !3, line: 4558, type: !6)
!10051 = !DILocalVariable(name: "cp", scope: !10044, file: !3, line: 4559, type: !2122)
!10052 = !DILocation(line: 0, scope: !10044)
!10053 = !DILocation(line: 4558, column: 23, scope: !10044)
!10054 = !DILocation(line: 4561, column: 13, scope: !10044)
!10055 = !DILocation(line: 4561, column: 8, scope: !10044)
!10056 = !DILocation(line: 4562, column: 8, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10044, file: !3, line: 4562, column: 7)
!10058 = !DILocation(line: 4562, column: 7, scope: !10044)
!10059 = !DILocation(line: 4564, column: 13, scope: !10044)
!10060 = !DILocation(line: 4564, column: 19, scope: !10044)
!10061 = !DILocation(line: 4566, column: 8, scope: !10044)
!10062 = !DILocation(line: 4566, column: 16, scope: !10044)
!10063 = !DILocation(line: 4567, column: 26, scope: !10044)
!10064 = !DILocation(line: 4568, column: 8, scope: !10044)
!10065 = !DILocation(line: 4568, column: 3, scope: !10044)
!10066 = !DILocation(line: 4568, column: 24, scope: !10044)
!10067 = !DILocation(line: 4570, column: 12, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10044, file: !3, line: 4570, column: 7)
!10069 = !DILocation(line: 4570, column: 7, scope: !10068)
!10070 = !DILocation(line: 4570, column: 29, scope: !10068)
!10071 = !DILocation(line: 4570, column: 7, scope: !10044)
!10072 = !DILocation(line: 4572, column: 30, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 4571, column: 5)
!10074 = !DILocation(line: 4572, column: 7, scope: !10073)
!10075 = !DILocation(line: 4574, column: 15, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10073, file: !3, line: 4574, column: 11)
!10077 = !DILocation(line: 4574, column: 21, scope: !10076)
!10078 = !DILocation(line: 4574, column: 11, scope: !10076)
!10079 = !DILocation(line: 4574, column: 11, scope: !10073)
!10080 = !DILocation(line: 4575, column: 7, scope: !10076)
!10081 = !DILocation(line: 4575, column: 13, scope: !10076)
!10082 = !DILocation(line: 4575, column: 2, scope: !10076)
!10083 = !DILocation(line: 4576, column: 12, scope: !10073)
!10084 = !DILocation(line: 4576, column: 19, scope: !10073)
!10085 = !DILocation(line: 4577, column: 29, scope: !10073)
!10086 = !DILocation(line: 4577, column: 35, scope: !10073)
!10087 = !DILocation(line: 4577, column: 12, scope: !10073)
!10088 = !DILocation(line: 4577, column: 22, scope: !10073)
!10089 = !DILocation(line: 4579, column: 45, scope: !10073)
!10090 = !DILocation(line: 4579, column: 51, scope: !10073)
!10091 = !DILocation(line: 4579, column: 7, scope: !10073)
!10092 = !DILocation(line: 4580, column: 5, scope: !10073)
!10093 = !DILocation(line: 4582, column: 8, scope: !10044)
!10094 = !DILocation(line: 4582, column: 59, scope: !10044)
!10095 = !DILocation(line: 4582, column: 24, scope: !10044)
!10096 = !DILocation(line: 4584, column: 41, scope: !10044)
!10097 = !DILocation(line: 4584, column: 3, scope: !10044)
!10098 = !DILocation(line: 4585, column: 3, scope: !10044)
!10099 = !DILocation(line: 4586, column: 1, scope: !10044)
!10100 = distinct !DISubprogram(name: "iv_ca_cand_used_p", scope: !3, file: !3, line: 4805, type: !10101, scopeLine: 4806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10103)
!10101 = !DISubroutineType(types: !10102)
!10102 = !{!136, !2230, !2126}
!10103 = !{!10104, !10105}
!10104 = !DILocalVariable(name: "ivs", arg: 1, scope: !10100, file: !3, line: 4805, type: !2230)
!10105 = !DILocalVariable(name: "cand", arg: 2, scope: !10100, file: !3, line: 4805, type: !2126)
!10106 = !DILocation(line: 0, scope: !10100)
!10107 = !DILocation(line: 4807, column: 15, scope: !10100)
!10108 = !DILocation(line: 4807, column: 33, scope: !10100)
!10109 = !DILocation(line: 4807, column: 10, scope: !10100)
!10110 = !DILocation(line: 4807, column: 37, scope: !10100)
!10111 = !DILocation(line: 4807, column: 3, scope: !10100)
!10112 = distinct !DISubprogram(name: "get_use_iv_cost", scope: !3, file: !3, line: 2597, type: !10113, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10115)
!10113 = !DISubroutineType(types: !10114)
!10114 = !{!2122, !2184, !2111, !2126}
!10115 = !{!10116, !10117, !10118, !10119, !10120, !10121}
!10116 = !DILocalVariable(name: "data", arg: 1, scope: !10112, file: !3, line: 2597, type: !2184)
!10117 = !DILocalVariable(name: "use", arg: 2, scope: !10112, file: !3, line: 2597, type: !2111)
!10118 = !DILocalVariable(name: "cand", arg: 3, scope: !10112, file: !3, line: 2598, type: !2126)
!10119 = !DILocalVariable(name: "i", scope: !10112, file: !3, line: 2600, type: !6)
!10120 = !DILocalVariable(name: "s", scope: !10112, file: !3, line: 2600, type: !6)
!10121 = !DILocalVariable(name: "ret", scope: !10112, file: !3, line: 2601, type: !2122)
!10122 = !DILocation(line: 0, scope: !10112)
!10123 = !DILocation(line: 2603, column: 8, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 2603, column: 7)
!10125 = !DILocation(line: 2603, column: 7, scope: !10112)
!10126 = !DILocation(line: 2606, column: 13, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 2606, column: 7)
!10128 = !DILocation(line: 2606, column: 7, scope: !10127)
!10129 = !DILocation(line: 2606, column: 7, scope: !10112)
!10130 = !DILocation(line: 2608, column: 18, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 2607, column: 5)
!10132 = !DILocation(line: 2608, column: 35, scope: !10131)
!10133 = !DILocation(line: 2608, column: 27, scope: !10131)
!10134 = !DILocation(line: 2609, column: 17, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 2609, column: 11)
!10136 = !DILocation(line: 2609, column: 12, scope: !10135)
!10137 = !DILocation(line: 0, scope: !10131)
!10138 = !DILocation(line: 2616, column: 13, scope: !10112)
!10139 = !DILocation(line: 2616, column: 24, scope: !10112)
!10140 = !DILocation(line: 2616, column: 38, scope: !10112)
!10141 = !DILocation(line: 2616, column: 16, scope: !10112)
!10142 = !DILocation(line: 0, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 2618, column: 9)
!10144 = distinct !DILexicalBlock(scope: !10145, file: !3, line: 2617, column: 3)
!10145 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 2617, column: 3)
!10146 = !DILocation(line: 2617, column: 8, scope: !10145)
!10147 = !DILocation(line: 0, scope: !10145)
!10148 = !DILocation(line: 2617, column: 17, scope: !10144)
!10149 = !DILocation(line: 2617, column: 3, scope: !10145)
!10150 = !DILocation(line: 2621, column: 3, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 2621, column: 3)
!10152 = !DILocation(line: 2618, column: 14, scope: !10143)
!10153 = !DILocation(line: 2618, column: 9, scope: !10143)
!10154 = !DILocation(line: 2618, column: 26, scope: !10143)
!10155 = !DILocation(line: 2618, column: 31, scope: !10143)
!10156 = !DILocation(line: 2618, column: 9, scope: !10144)
!10157 = !DILocation(line: 2619, column: 28, scope: !10143)
!10158 = !DILocation(line: 2619, column: 7, scope: !10143)
!10159 = !DILocation(line: 2617, column: 40, scope: !10144)
!10160 = !DILocation(line: 2617, column: 3, scope: !10144)
!10161 = distinct !{!10161, !10149, !10162}
!10162 = !DILocation(line: 2619, column: 30, scope: !10145)
!10163 = !DILocation(line: 0, scope: !10151)
!10164 = !DILocation(line: 2621, column: 17, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 2621, column: 3)
!10166 = !DILocation(line: 2622, column: 14, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10165, file: !3, line: 2622, column: 9)
!10168 = !DILocation(line: 2622, column: 9, scope: !10167)
!10169 = !DILocation(line: 2622, column: 26, scope: !10167)
!10170 = !DILocation(line: 2622, column: 31, scope: !10167)
!10171 = !DILocation(line: 2622, column: 9, scope: !10165)
!10172 = !DILocation(line: 2623, column: 28, scope: !10167)
!10173 = !DILocation(line: 2623, column: 7, scope: !10167)
!10174 = !DILocation(line: 2621, column: 23, scope: !10165)
!10175 = !DILocation(line: 2621, column: 3, scope: !10165)
!10176 = distinct !{!10176, !10150, !10177}
!10177 = !DILocation(line: 2623, column: 30, scope: !10151)
!10178 = !DILocation(line: 2626, column: 1, scope: !10112)
!10179 = distinct !DISubprogram(name: "iv_ca_set_cp", scope: !3, file: !3, line: 4610, type: !10180, scopeLine: 4612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10182)
!10180 = !DISubroutineType(types: !10181)
!10181 = !{null, !2184, !2230, !2111, !2122}
!10182 = !{!10183, !10184, !10185, !10186, !10187, !10188}
!10183 = !DILocalVariable(name: "data", arg: 1, scope: !10179, file: !3, line: 4610, type: !2184)
!10184 = !DILocalVariable(name: "ivs", arg: 2, scope: !10179, file: !3, line: 4610, type: !2230)
!10185 = !DILocalVariable(name: "use", arg: 3, scope: !10179, file: !3, line: 4611, type: !2111)
!10186 = !DILocalVariable(name: "cp", arg: 4, scope: !10179, file: !3, line: 4611, type: !2122)
!10187 = !DILocalVariable(name: "uid", scope: !10179, file: !3, line: 4613, type: !6)
!10188 = !DILocalVariable(name: "cid", scope: !10179, file: !3, line: 4613, type: !6)
!10189 = !DILocation(line: 0, scope: !10179)
!10190 = !DILocation(line: 4613, column: 23, scope: !10179)
!10191 = !DILocation(line: 4615, column: 12, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 4615, column: 7)
!10193 = !DILocation(line: 4615, column: 7, scope: !10192)
!10194 = !DILocation(line: 4615, column: 30, scope: !10192)
!10195 = !DILocation(line: 4615, column: 7, scope: !10179)
!10196 = !DILocation(line: 4618, column: 7, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 4618, column: 7)
!10198 = !DILocation(line: 4618, column: 7, scope: !10179)
!10199 = !DILocation(line: 4619, column: 5, scope: !10197)
!10200 = !DILocation(line: 4621, column: 7, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 4621, column: 7)
!10202 = !DILocation(line: 4621, column: 7, scope: !10179)
!10203 = !DILocation(line: 4623, column: 17, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 4622, column: 5)
!10205 = !DILocation(line: 4623, column: 23, scope: !10204)
!10206 = !DILocation(line: 4625, column: 12, scope: !10204)
!10207 = !DILocation(line: 4625, column: 20, scope: !10204)
!10208 = !DILocation(line: 4626, column: 12, scope: !10204)
!10209 = !DILocation(line: 4626, column: 7, scope: !10204)
!10210 = !DILocation(line: 4626, column: 30, scope: !10204)
!10211 = !DILocation(line: 4627, column: 12, scope: !10204)
!10212 = !DILocation(line: 4627, column: 7, scope: !10204)
!10213 = !DILocation(line: 4627, column: 28, scope: !10204)
!10214 = !DILocation(line: 4628, column: 16, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 4628, column: 11)
!10216 = !DILocation(line: 4628, column: 11, scope: !10215)
!10217 = !DILocation(line: 4628, column: 33, scope: !10215)
!10218 = !DILocation(line: 4628, column: 11, scope: !10204)
!10219 = !DILocation(line: 4630, column: 25, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10215, file: !3, line: 4629, column: 2)
!10221 = !DILocation(line: 4630, column: 4, scope: !10220)
!10222 = !DILocation(line: 4632, column: 12, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 4632, column: 8)
!10224 = !DILocation(line: 4632, column: 18, scope: !10223)
!10225 = !DILocation(line: 4632, column: 8, scope: !10223)
!10226 = !DILocation(line: 4632, column: 8, scope: !10220)
!10227 = !DILocation(line: 4633, column: 11, scope: !10223)
!10228 = !DILocation(line: 4633, column: 17, scope: !10223)
!10229 = !DILocation(line: 4633, column: 6, scope: !10223)
!10230 = !DILocation(line: 4634, column: 9, scope: !10220)
!10231 = !DILocation(line: 4634, column: 16, scope: !10220)
!10232 = !DILocation(line: 4635, column: 26, scope: !10220)
!10233 = !DILocation(line: 4635, column: 32, scope: !10220)
!10234 = !DILocation(line: 4635, column: 9, scope: !10220)
!10235 = !DILocation(line: 4635, column: 19, scope: !10220)
!10236 = !DILocation(line: 4637, column: 39, scope: !10220)
!10237 = !DILocation(line: 4637, column: 45, scope: !10220)
!10238 = !DILocation(line: 4637, column: 4, scope: !10220)
!10239 = !DILocation(line: 4638, column: 2, scope: !10220)
!10240 = !DILocation(line: 4640, column: 12, scope: !10204)
!10241 = !DILocation(line: 4640, column: 63, scope: !10204)
!10242 = !DILocation(line: 4640, column: 28, scope: !10204)
!10243 = !DILocation(line: 4641, column: 42, scope: !10204)
!10244 = !DILocation(line: 4641, column: 7, scope: !10204)
!10245 = !DILocation(line: 4642, column: 7, scope: !10204)
!10246 = !DILocation(line: 4643, column: 5, scope: !10204)
!10247 = !DILocation(line: 4644, column: 1, scope: !10179)
!10248 = distinct !DISubprogram(name: "iv_ca_extend", scope: !3, file: !3, line: 4895, type: !10249, scopeLine: 4898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10252)
!10249 = !DISubroutineType(types: !10250)
!10250 = !{!2141, !2184, !2230, !2126, !10251, !2238}
!10251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!10252 = !{!10253, !10254, !10255, !10256, !10257, !10258, !10259, !10260, !10261, !10262}
!10253 = !DILocalVariable(name: "data", arg: 1, scope: !10248, file: !3, line: 4895, type: !2184)
!10254 = !DILocalVariable(name: "ivs", arg: 2, scope: !10248, file: !3, line: 4895, type: !2230)
!10255 = !DILocalVariable(name: "cand", arg: 3, scope: !10248, file: !3, line: 4896, type: !2126)
!10256 = !DILocalVariable(name: "delta", arg: 4, scope: !10248, file: !3, line: 4896, type: !10251)
!10257 = !DILocalVariable(name: "n_ivs", arg: 5, scope: !10248, file: !3, line: 4897, type: !2238)
!10258 = !DILocalVariable(name: "i", scope: !10248, file: !3, line: 4899, type: !6)
!10259 = !DILocalVariable(name: "cost", scope: !10248, file: !3, line: 4900, type: !2141)
!10260 = !DILocalVariable(name: "use", scope: !10248, file: !3, line: 4901, type: !2111)
!10261 = !DILocalVariable(name: "old_cp", scope: !10248, file: !3, line: 4902, type: !2122)
!10262 = !DILocalVariable(name: "new_cp", scope: !10248, file: !3, line: 4902, type: !2122)
!10263 = !DILocation(line: 0, scope: !10248)
!10264 = !DILocation(line: 4904, column: 10, scope: !10248)
!10265 = !DILocation(line: 0, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10267, file: !3, line: 4905, column: 3)
!10267 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 4905, column: 3)
!10268 = !DILocation(line: 4905, column: 8, scope: !10267)
!10269 = !DILocation(line: 0, scope: !10267)
!10270 = !DILocation(line: 4905, column: 24, scope: !10266)
!10271 = !DILocation(line: 4905, column: 17, scope: !10266)
!10272 = !DILocation(line: 4905, column: 3, scope: !10267)
!10273 = !DILocation(line: 4907, column: 13, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10266, file: !3, line: 4906, column: 5)
!10275 = !DILocation(line: 4908, column: 16, scope: !10274)
!10276 = !DILocation(line: 4910, column: 11, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 4910, column: 11)
!10278 = !DILocation(line: 4911, column: 4, scope: !10277)
!10279 = !DILocation(line: 4911, column: 15, scope: !10277)
!10280 = !DILocation(line: 4911, column: 20, scope: !10277)
!10281 = !DILocation(line: 4910, column: 11, scope: !10274)
!10282 = !DILocation(line: 4914, column: 16, scope: !10274)
!10283 = !DILocation(line: 4915, column: 12, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 4915, column: 11)
!10285 = !DILocation(line: 4915, column: 11, scope: !10274)
!10286 = !DILocation(line: 4918, column: 12, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 4918, column: 11)
!10288 = !DILocation(line: 4918, column: 11, scope: !10274)
!10289 = !DILocation(line: 4921, column: 12, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 4921, column: 11)
!10291 = !DILocation(line: 4921, column: 11, scope: !10274)
!10292 = !DILocation(line: 4924, column: 54, scope: !10274)
!10293 = !DILocation(line: 4924, column: 16, scope: !10274)
!10294 = !DILocation(line: 4924, column: 14, scope: !10274)
!10295 = !DILocation(line: 4925, column: 5, scope: !10274)
!10296 = !DILocation(line: 4905, column: 31, scope: !10266)
!10297 = !DILocation(line: 4905, column: 3, scope: !10266)
!10298 = distinct !{!10298, !10272, !10299}
!10299 = !DILocation(line: 4925, column: 5, scope: !10267)
!10300 = !DILocation(line: 4927, column: 34, scope: !10248)
!10301 = !DILocation(line: 4927, column: 3, scope: !10248)
!10302 = !DILocation(line: 4928, column: 10, scope: !10248)
!10303 = !DILocation(line: 4929, column: 7, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 4929, column: 7)
!10305 = !DILocation(line: 4929, column: 7, scope: !10248)
!10306 = !DILocation(line: 4930, column: 14, scope: !10304)
!10307 = !DILocation(line: 4930, column: 12, scope: !10304)
!10308 = !DILocation(line: 4930, column: 5, scope: !10304)
!10309 = !DILocation(line: 4931, column: 34, scope: !10248)
!10310 = !DILocation(line: 4931, column: 3, scope: !10248)
!10311 = !DILocation(line: 4934, column: 1, scope: !10248)
!10312 = distinct !DISubprogram(name: "iv_ca_delta_free", scope: !3, file: !3, line: 4821, type: !10313, scopeLine: 4822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10315)
!10313 = !DISubroutineType(types: !10314)
!10314 = !{null, !10251}
!10315 = !{!10316, !10317, !10318}
!10316 = !DILocalVariable(name: "delta", arg: 1, scope: !10312, file: !3, line: 4821, type: !10251)
!10317 = !DILocalVariable(name: "act", scope: !10312, file: !3, line: 4823, type: !2246)
!10318 = !DILocalVariable(name: "next", scope: !10312, file: !3, line: 4823, type: !2246)
!10319 = !DILocation(line: 0, scope: !10312)
!10320 = !DILocation(line: 4825, column: 14, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 4825, column: 3)
!10322 = !DILocation(line: 4825, column: 8, scope: !10321)
!10323 = !DILocation(line: 0, scope: !10321)
!10324 = !DILocation(line: 4825, column: 3, scope: !10321)
!10325 = !DILocation(line: 4827, column: 19, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 4826, column: 5)
!10327 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 4825, column: 3)
!10328 = !DILocation(line: 4828, column: 7, scope: !10326)
!10329 = !DILocation(line: 4825, column: 3, scope: !10327)
!10330 = distinct !{!10330, !10324, !10331}
!10331 = !DILocation(line: 4829, column: 5, scope: !10321)
!10332 = !DILocation(line: 4831, column: 10, scope: !10312)
!10333 = !DILocation(line: 4832, column: 1, scope: !10312)
!10334 = distinct !DISubprogram(name: "iv_ca_delta_commit", scope: !3, file: !3, line: 4781, type: !10335, scopeLine: 4783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10337)
!10335 = !DISubroutineType(types: !10336)
!10336 = !{null, !2184, !2230, !2246, !136}
!10337 = !{!10338, !10339, !10340, !10341, !10342, !10343, !10344}
!10338 = !DILocalVariable(name: "data", arg: 1, scope: !10334, file: !3, line: 4781, type: !2184)
!10339 = !DILocalVariable(name: "ivs", arg: 2, scope: !10334, file: !3, line: 4781, type: !2230)
!10340 = !DILocalVariable(name: "delta", arg: 3, scope: !10334, file: !3, line: 4782, type: !2246)
!10341 = !DILocalVariable(name: "forward", arg: 4, scope: !10334, file: !3, line: 4782, type: !136)
!10342 = !DILocalVariable(name: "from", scope: !10334, file: !3, line: 4784, type: !2122)
!10343 = !DILocalVariable(name: "to", scope: !10334, file: !3, line: 4784, type: !2122)
!10344 = !DILocalVariable(name: "act", scope: !10334, file: !3, line: 4785, type: !2246)
!10345 = !DILocation(line: 0, scope: !10334)
!10346 = !DILocation(line: 4787, column: 8, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10334, file: !3, line: 4787, column: 7)
!10348 = !DILocation(line: 4787, column: 7, scope: !10334)
!10349 = !DILocation(line: 4788, column: 13, scope: !10347)
!10350 = !DILocation(line: 4788, column: 5, scope: !10347)
!10351 = !DILocation(line: 4790, column: 8, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10334, file: !3, line: 4790, column: 3)
!10353 = !DILocation(line: 0, scope: !10352)
!10354 = !DILocation(line: 4790, column: 3, scope: !10352)
!10355 = !DILocation(line: 4792, column: 19, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10357, file: !3, line: 4791, column: 5)
!10357 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 4790, column: 3)
!10358 = !DILocation(line: 4793, column: 17, scope: !10356)
!10359 = !DILocation(line: 4794, column: 7, scope: !10356)
!10360 = !DILocation(line: 4795, column: 37, scope: !10356)
!10361 = !DILocation(line: 4795, column: 7, scope: !10356)
!10362 = !DILocation(line: 4790, column: 37, scope: !10357)
!10363 = !DILocation(line: 4790, column: 3, scope: !10357)
!10364 = distinct !{!10364, !10354, !10365}
!10365 = !DILocation(line: 4796, column: 5, scope: !10352)
!10366 = !DILocation(line: 4798, column: 7, scope: !10334)
!10367 = !DILocation(line: 4799, column: 5, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10334, file: !3, line: 4798, column: 7)
!10369 = !DILocation(line: 4800, column: 1, scope: !10334)
!10370 = distinct !DISubprogram(name: "cheaper_cost_pair", scope: !3, file: !3, line: 4497, type: !10371, scopeLine: 4498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10373)
!10371 = !DISubroutineType(types: !10372)
!10372 = !{!136, !2122, !2122}
!10373 = !{!10374, !10375, !10376}
!10374 = !DILocalVariable(name: "a", arg: 1, scope: !10370, file: !3, line: 4497, type: !2122)
!10375 = !DILocalVariable(name: "b", arg: 2, scope: !10370, file: !3, line: 4497, type: !2122)
!10376 = !DILocalVariable(name: "cmp", scope: !10370, file: !3, line: 4499, type: !659)
!10377 = !DILocation(line: 0, scope: !10370)
!10378 = !DILocation(line: 4501, column: 8, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 4501, column: 7)
!10380 = !DILocation(line: 4501, column: 7, scope: !10370)
!10381 = !DILocation(line: 4504, column: 8, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 4504, column: 7)
!10383 = !DILocation(line: 4504, column: 7, scope: !10370)
!10384 = !DILocation(line: 4507, column: 27, scope: !10370)
!10385 = !DILocation(line: 4507, column: 36, scope: !10370)
!10386 = !DILocation(line: 4507, column: 9, scope: !10370)
!10387 = !DILocation(line: 4508, column: 11, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 4508, column: 7)
!10389 = !DILocation(line: 4508, column: 7, scope: !10370)
!10390 = !DILocation(line: 4511, column: 11, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 4511, column: 7)
!10392 = !DILocation(line: 4511, column: 7, scope: !10370)
!10393 = !DILocation(line: 4515, column: 10, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 4515, column: 7)
!10395 = !DILocation(line: 4515, column: 16, scope: !10394)
!10396 = !DILocation(line: 4515, column: 26, scope: !10394)
!10397 = !DILocation(line: 4515, column: 32, scope: !10394)
!10398 = !DILocation(line: 4515, column: 21, scope: !10394)
!10399 = !DILocation(line: 4519, column: 1, scope: !10370)
!10400 = distinct !DISubprogram(name: "iv_ca_set_remove_invariants", scope: !3, file: !3, line: 4536, type: !10401, scopeLine: 4537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10403)
!10401 = !DISubroutineType(types: !10402)
!10402 = !{null, !2230, !1507}
!10403 = !{!10404, !10405, !10406, !10407}
!10404 = !DILocalVariable(name: "ivs", arg: 1, scope: !10400, file: !3, line: 4536, type: !2230)
!10405 = !DILocalVariable(name: "invs", arg: 2, scope: !10400, file: !3, line: 4536, type: !1507)
!10406 = !DILocalVariable(name: "bi", scope: !10400, file: !3, line: 4538, type: !4005)
!10407 = !DILocalVariable(name: "iid", scope: !10400, file: !3, line: 4539, type: !6)
!10408 = !DILocation(line: 0, scope: !10400)
!10409 = !DILocation(line: 4538, column: 3, scope: !10400)
!10410 = !DILocation(line: 4539, column: 3, scope: !10400)
!10411 = !DILocation(line: 4541, column: 8, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 4541, column: 7)
!10413 = !DILocation(line: 4541, column: 7, scope: !10400)
!10414 = !DILocation(line: 4544, column: 3, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 4544, column: 3)
!10416 = !DILocation(line: 0, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 4545, column: 5)
!10418 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 4544, column: 3)
!10419 = !DILocation(line: 0, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 4547, column: 11)
!10421 = !DILocation(line: 4544, column: 3, scope: !10418)
!10422 = !DILocation(line: 4546, column: 12, scope: !10417)
!10423 = !DILocation(line: 4546, column: 29, scope: !10417)
!10424 = !DILocation(line: 4546, column: 7, scope: !10417)
!10425 = !DILocation(line: 4546, column: 33, scope: !10417)
!10426 = !DILocation(line: 4547, column: 16, scope: !10420)
!10427 = !DILocation(line: 4547, column: 33, scope: !10420)
!10428 = !DILocation(line: 4547, column: 11, scope: !10420)
!10429 = !DILocation(line: 4547, column: 38, scope: !10420)
!10430 = !DILocation(line: 4547, column: 11, scope: !10417)
!10431 = !DILocation(line: 4548, column: 13, scope: !10420)
!10432 = !DILocation(line: 4548, column: 2, scope: !10420)
!10433 = distinct !{!10433, !10414, !10434}
!10434 = !DILocation(line: 4549, column: 5, scope: !10415)
!10435 = !DILocation(line: 4550, column: 1, scope: !10400)
!10436 = distinct !DISubprogram(name: "sub_costs", scope: !3, file: !3, line: 2522, type: !7979, scopeLine: 2523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10437)
!10437 = !{!10438, !10439}
!10438 = !DILocalVariable(name: "cost1", arg: 1, scope: !10436, file: !3, line: 2522, type: !2141)
!10439 = !DILocalVariable(name: "cost2", arg: 2, scope: !10436, file: !3, line: 2522, type: !2141)
!10440 = !DILocation(line: 2524, column: 23, scope: !10436)
!10441 = !DILocation(line: 2524, column: 9, scope: !10436)
!10442 = !DILocation(line: 2524, column: 14, scope: !10436)
!10443 = !DILocation(line: 2525, column: 29, scope: !10436)
!10444 = !DILocation(line: 2525, column: 9, scope: !10436)
!10445 = !DILocation(line: 2525, column: 20, scope: !10436)
!10446 = !DILocation(line: 2527, column: 10, scope: !10436)
!10447 = !DILocation(line: 2527, column: 3, scope: !10436)
!10448 = distinct !DISubprogram(name: "iv_ca_recount_cost", scope: !3, file: !3, line: 4524, type: !4596, scopeLine: 4525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10449)
!10449 = !{!10450, !10451, !10452}
!10450 = !DILocalVariable(name: "data", arg: 1, scope: !10448, file: !3, line: 4524, type: !2184)
!10451 = !DILocalVariable(name: "ivs", arg: 2, scope: !10448, file: !3, line: 4524, type: !2230)
!10452 = !DILocalVariable(name: "cost", scope: !10448, file: !3, line: 4526, type: !2141)
!10453 = !DILocation(line: 0, scope: !10448)
!10454 = !DILocation(line: 4526, column: 3, scope: !10448)
!10455 = !DILocation(line: 4526, column: 25, scope: !10448)
!10456 = !DILocation(line: 4527, column: 21, scope: !10448)
!10457 = !DILocation(line: 4527, column: 8, scope: !10448)
!10458 = !DILocation(line: 4527, column: 13, scope: !10448)
!10459 = !DILocation(line: 4528, column: 56, scope: !10448)
!10460 = !DILocation(line: 4528, column: 16, scope: !10448)
!10461 = !DILocation(line: 4528, column: 13, scope: !10448)
!10462 = !DILocation(line: 4530, column: 8, scope: !10448)
!10463 = !DILocation(line: 4530, column: 15, scope: !10448)
!10464 = !DILocation(line: 4531, column: 1, scope: !10448)
!10465 = distinct !DISubprogram(name: "iv_ca_set_add_invariants", scope: !3, file: !3, line: 4591, type: !10401, scopeLine: 4592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10466)
!10466 = !{!10467, !10468, !10469, !10470}
!10467 = !DILocalVariable(name: "ivs", arg: 1, scope: !10465, file: !3, line: 4591, type: !2230)
!10468 = !DILocalVariable(name: "invs", arg: 2, scope: !10465, file: !3, line: 4591, type: !1507)
!10469 = !DILocalVariable(name: "bi", scope: !10465, file: !3, line: 4593, type: !4005)
!10470 = !DILocalVariable(name: "iid", scope: !10465, file: !3, line: 4594, type: !6)
!10471 = !DILocation(line: 0, scope: !10465)
!10472 = !DILocation(line: 4593, column: 3, scope: !10465)
!10473 = !DILocation(line: 4594, column: 3, scope: !10465)
!10474 = !DILocation(line: 4596, column: 8, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10465, file: !3, line: 4596, column: 7)
!10476 = !DILocation(line: 4596, column: 7, scope: !10465)
!10477 = !DILocation(line: 4599, column: 3, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10465, file: !3, line: 4599, column: 3)
!10479 = !DILocation(line: 0, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 4600, column: 5)
!10481 = distinct !DILexicalBlock(scope: !10478, file: !3, line: 4599, column: 3)
!10482 = !DILocation(line: 0, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10480, file: !3, line: 4602, column: 11)
!10484 = !DILocation(line: 4599, column: 3, scope: !10481)
!10485 = !DILocation(line: 4601, column: 12, scope: !10480)
!10486 = !DILocation(line: 4601, column: 29, scope: !10480)
!10487 = !DILocation(line: 4601, column: 7, scope: !10480)
!10488 = !DILocation(line: 4601, column: 33, scope: !10480)
!10489 = !DILocation(line: 4602, column: 16, scope: !10483)
!10490 = !DILocation(line: 4602, column: 33, scope: !10483)
!10491 = !DILocation(line: 4602, column: 11, scope: !10483)
!10492 = !DILocation(line: 4602, column: 38, scope: !10483)
!10493 = !DILocation(line: 4602, column: 11, scope: !10480)
!10494 = !DILocation(line: 4603, column: 13, scope: !10483)
!10495 = !DILocation(line: 4603, column: 2, scope: !10483)
!10496 = distinct !{!10496, !10477, !10497}
!10497 = !DILocation(line: 4604, column: 5, scope: !10478)
!10498 = !DILocation(line: 4605, column: 1, scope: !10465)
!10499 = distinct !DISubprogram(name: "iv_ca_has_deps", scope: !3, file: !3, line: 4692, type: !10500, scopeLine: 4693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10502)
!10500 = !DISubroutineType(types: !10501)
!10501 = !{!136, !2230, !2122}
!10502 = !{!10503, !10504, !10505, !10506}
!10503 = !DILocalVariable(name: "ivs", arg: 1, scope: !10499, file: !3, line: 4692, type: !2230)
!10504 = !DILocalVariable(name: "cp", arg: 2, scope: !10499, file: !3, line: 4692, type: !2122)
!10505 = !DILocalVariable(name: "i", scope: !10499, file: !3, line: 4694, type: !6)
!10506 = !DILocalVariable(name: "bi", scope: !10499, file: !3, line: 4695, type: !4005)
!10507 = !DILocation(line: 0, scope: !10499)
!10508 = !DILocation(line: 4694, column: 3, scope: !10499)
!10509 = !DILocation(line: 4695, column: 3, scope: !10499)
!10510 = !DILocation(line: 4697, column: 12, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 4697, column: 7)
!10512 = !DILocation(line: 4697, column: 8, scope: !10511)
!10513 = !DILocation(line: 4697, column: 7, scope: !10499)
!10514 = !DILocation(line: 4700, column: 3, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 4700, column: 3)
!10516 = !DILocation(line: 4702, column: 16, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 4702, column: 11)
!10518 = distinct !DILexicalBlock(scope: !10519, file: !3, line: 4701, column: 5)
!10519 = distinct !DILexicalBlock(scope: !10515, file: !3, line: 4700, column: 3)
!10520 = !DILocation(line: 4700, column: 3, scope: !10519)
!10521 = !DILocation(line: 4702, column: 33, scope: !10517)
!10522 = !DILocation(line: 4702, column: 11, scope: !10517)
!10523 = !DILocation(line: 4702, column: 36, scope: !10517)
!10524 = !DILocation(line: 4702, column: 11, scope: !10518)
!10525 = distinct !{!10525, !10514, !10526}
!10526 = !DILocation(line: 4704, column: 5, scope: !10515)
!10527 = !DILocation(line: 4707, column: 1, scope: !10499)
!10528 = distinct !DISubprogram(name: "iv_ca_n_cands", scope: !3, file: !3, line: 4813, type: !10529, scopeLine: 4814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10531)
!10529 = !DISubroutineType(types: !10530)
!10530 = !{!6, !2230}
!10531 = !{!10532}
!10532 = !DILocalVariable(name: "ivs", arg: 1, scope: !10528, file: !3, line: 4813, type: !2230)
!10533 = !DILocation(line: 0, scope: !10528)
!10534 = !DILocation(line: 4815, column: 15, scope: !10528)
!10535 = !DILocation(line: 4815, column: 3, scope: !10528)
!10536 = distinct !DISubprogram(name: "iv_ca_delta_reverse", scope: !3, file: !3, line: 4758, type: !10537, scopeLine: 4759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10539)
!10537 = !DISubroutineType(types: !10538)
!10538 = !{!2246, !2246}
!10539 = !{!10540, !10541, !10542, !10543, !10544}
!10540 = !DILocalVariable(name: "delta", arg: 1, scope: !10536, file: !3, line: 4758, type: !2246)
!10541 = !DILocalVariable(name: "act", scope: !10536, file: !3, line: 4760, type: !2246)
!10542 = !DILocalVariable(name: "next", scope: !10536, file: !3, line: 4760, type: !2246)
!10543 = !DILocalVariable(name: "prev", scope: !10536, file: !3, line: 4760, type: !2246)
!10544 = !DILocalVariable(name: "tmp", scope: !10536, file: !3, line: 4761, type: !2122)
!10545 = !DILocation(line: 0, scope: !10536)
!10546 = !DILocation(line: 4763, column: 8, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10536, file: !3, line: 4763, column: 3)
!10548 = !DILocation(line: 0, scope: !10547)
!10549 = !DILocation(line: 4763, column: 3, scope: !10547)
!10550 = !DILocation(line: 4765, column: 19, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 4764, column: 5)
!10552 = distinct !DILexicalBlock(scope: !10547, file: !3, line: 4763, column: 3)
!10553 = !DILocation(line: 4766, column: 24, scope: !10551)
!10554 = !DILocation(line: 4769, column: 18, scope: !10551)
!10555 = !DILocation(line: 4770, column: 26, scope: !10551)
!10556 = !DILocation(line: 4770, column: 19, scope: !10551)
!10557 = !DILocation(line: 4771, column: 19, scope: !10551)
!10558 = !DILocation(line: 4763, column: 3, scope: !10552)
!10559 = distinct !{!10559, !10549, !10560}
!10560 = !DILocation(line: 4772, column: 5, scope: !10547)
!10561 = !DILocation(line: 4774, column: 3, scope: !10536)
!10562 = distinct !DISubprogram(name: "iv_ca_prune", scope: !3, file: !3, line: 5025, type: !10563, scopeLine: 5027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10565)
!10563 = !DISubroutineType(types: !10564)
!10564 = !{!2141, !2184, !2230, !2126, !10251}
!10565 = !{!10566, !10567, !10568, !10569, !10570, !10571, !10572, !10573, !10574, !10575, !10576}
!10566 = !DILocalVariable(name: "data", arg: 1, scope: !10562, file: !3, line: 5025, type: !2184)
!10567 = !DILocalVariable(name: "ivs", arg: 2, scope: !10562, file: !3, line: 5025, type: !2230)
!10568 = !DILocalVariable(name: "except_cand", arg: 3, scope: !10562, file: !3, line: 5026, type: !2126)
!10569 = !DILocalVariable(name: "delta", arg: 4, scope: !10562, file: !3, line: 5026, type: !10251)
!10570 = !DILocalVariable(name: "bi", scope: !10562, file: !3, line: 5028, type: !4005)
!10571 = !DILocalVariable(name: "act_delta", scope: !10562, file: !3, line: 5029, type: !2246)
!10572 = !DILocalVariable(name: "best_delta", scope: !10562, file: !3, line: 5029, type: !2246)
!10573 = !DILocalVariable(name: "i", scope: !10562, file: !3, line: 5030, type: !6)
!10574 = !DILocalVariable(name: "best_cost", scope: !10562, file: !3, line: 5031, type: !2141)
!10575 = !DILocalVariable(name: "acost", scope: !10562, file: !3, line: 5031, type: !2141)
!10576 = !DILocalVariable(name: "cand", scope: !10562, file: !3, line: 5032, type: !2126)
!10577 = !DILocation(line: 0, scope: !10562)
!10578 = !DILocation(line: 5028, column: 3, scope: !10562)
!10579 = !DILocation(line: 5029, column: 3, scope: !10562)
!10580 = !DILocation(line: 5030, column: 3, scope: !10562)
!10581 = !DILocation(line: 5034, column: 14, scope: !10562)
!10582 = !DILocation(line: 5035, column: 15, scope: !10562)
!10583 = !DILocation(line: 5037, column: 3, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10562, file: !3, line: 5037, column: 3)
!10585 = !DILocation(line: 0, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 5047, column: 2)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 5046, column: 11)
!10588 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 5038, column: 5)
!10589 = distinct !DILexicalBlock(scope: !10584, file: !3, line: 5037, column: 3)
!10590 = !DILocation(line: 5037, column: 3, scope: !10589)
!10591 = !DILocation(line: 5039, column: 29, scope: !10588)
!10592 = !DILocation(line: 5039, column: 14, scope: !10588)
!10593 = !DILocation(line: 5041, column: 16, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 5041, column: 11)
!10595 = !DILocation(line: 5041, column: 11, scope: !10588)
!10596 = !DILocation(line: 5044, column: 15, scope: !10588)
!10597 = !DILocation(line: 5046, column: 11, scope: !10587)
!10598 = !DILocation(line: 5046, column: 44, scope: !10587)
!10599 = !DILocation(line: 5046, column: 11, scope: !10588)
!10600 = !DILocation(line: 5049, column: 4, scope: !10586)
!10601 = !DILocation(line: 5050, column: 17, scope: !10586)
!10602 = !DILocation(line: 5050, column: 15, scope: !10586)
!10603 = !DILocation(line: 5051, column: 2, scope: !10586)
!10604 = !DILocation(line: 5053, column: 2, scope: !10587)
!10605 = distinct !{!10605, !10583, !10606}
!10606 = !DILocation(line: 5054, column: 5, scope: !10584)
!10607 = !DILocation(line: 5056, column: 8, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10562, file: !3, line: 5056, column: 7)
!10609 = !DILocation(line: 5056, column: 7, scope: !10562)
!10610 = !DILocation(line: 5059, column: 7, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 5057, column: 5)
!10612 = !DILocation(line: 5063, column: 3, scope: !10562)
!10613 = !DILocation(line: 5064, column: 15, scope: !10562)
!10614 = !DILocation(line: 5065, column: 34, scope: !10562)
!10615 = !DILocation(line: 5065, column: 3, scope: !10562)
!10616 = !DILocation(line: 5066, column: 30, scope: !10562)
!10617 = !DILocation(line: 5066, column: 42, scope: !10562)
!10618 = !DILocation(line: 5066, column: 12, scope: !10562)
!10619 = !DILocation(line: 5067, column: 3, scope: !10562)
!10620 = !DILocation(line: 5068, column: 1, scope: !10562)
!10621 = distinct !DISubprogram(name: "iv_ca_delta_join", scope: !3, file: !3, line: 4730, type: !10622, scopeLine: 4731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10624)
!10622 = !DISubroutineType(types: !10623)
!10623 = !{!2246, !2246, !2246}
!10624 = !{!10625, !10626, !10627}
!10625 = !DILocalVariable(name: "l1", arg: 1, scope: !10621, file: !3, line: 4730, type: !2246)
!10626 = !DILocalVariable(name: "l2", arg: 2, scope: !10621, file: !3, line: 4730, type: !2246)
!10627 = !DILocalVariable(name: "last", scope: !10621, file: !3, line: 4732, type: !2246)
!10628 = !DILocation(line: 0, scope: !10621)
!10629 = !DILocation(line: 4734, column: 8, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 4734, column: 7)
!10631 = !DILocation(line: 4734, column: 7, scope: !10621)
!10632 = !DILocation(line: 4737, column: 8, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 4737, column: 7)
!10634 = !DILocation(line: 4737, column: 7, scope: !10621)
!10635 = !DILocation(line: 4740, column: 3, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 4740, column: 3)
!10637 = !DILocation(line: 0, scope: !10636)
!10638 = !DILocation(line: 4740, column: 25, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 4740, column: 3)
!10640 = !DILocation(line: 4740, column: 3, scope: !10639)
!10641 = distinct !{!10641, !10635, !10642}
!10642 = !DILocation(line: 4741, column: 5, scope: !10636)
!10643 = !DILocation(line: 4742, column: 21, scope: !10621)
!10644 = !DILocation(line: 4744, column: 3, scope: !10621)
!10645 = !DILocation(line: 4745, column: 1, scope: !10621)
!10646 = distinct !DISubprogram(name: "iv_ca_narrow", scope: !3, file: !3, line: 4940, type: !10563, scopeLine: 4942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10647)
!10647 = !{!10648, !10649, !10650, !10651, !10652, !10653, !10654, !10655, !10656, !10657, !10658, !10659, !10660}
!10648 = !DILocalVariable(name: "data", arg: 1, scope: !10646, file: !3, line: 4940, type: !2184)
!10649 = !DILocalVariable(name: "ivs", arg: 2, scope: !10646, file: !3, line: 4940, type: !2230)
!10650 = !DILocalVariable(name: "cand", arg: 3, scope: !10646, file: !3, line: 4941, type: !2126)
!10651 = !DILocalVariable(name: "delta", arg: 4, scope: !10646, file: !3, line: 4941, type: !10251)
!10652 = !DILocalVariable(name: "i", scope: !10646, file: !3, line: 4943, type: !6)
!10653 = !DILocalVariable(name: "ci", scope: !10646, file: !3, line: 4943, type: !6)
!10654 = !DILocalVariable(name: "use", scope: !10646, file: !3, line: 4944, type: !2111)
!10655 = !DILocalVariable(name: "old_cp", scope: !10646, file: !3, line: 4945, type: !2122)
!10656 = !DILocalVariable(name: "new_cp", scope: !10646, file: !3, line: 4945, type: !2122)
!10657 = !DILocalVariable(name: "cp", scope: !10646, file: !3, line: 4945, type: !2122)
!10658 = !DILocalVariable(name: "bi", scope: !10646, file: !3, line: 4946, type: !4005)
!10659 = !DILocalVariable(name: "cnd", scope: !10646, file: !3, line: 4947, type: !2126)
!10660 = !DILocalVariable(name: "cost", scope: !10646, file: !3, line: 4948, type: !2141)
!10661 = !DILocation(line: 0, scope: !10646)
!10662 = !DILocation(line: 4943, column: 3, scope: !10646)
!10663 = !DILocation(line: 4946, column: 3, scope: !10646)
!10664 = !DILocation(line: 4950, column: 10, scope: !10646)
!10665 = !DILocation(line: 0, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 4961, column: 11)
!10667 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 4952, column: 5)
!10668 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 4951, column: 3)
!10669 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 4951, column: 3)
!10670 = !DILocation(line: 0, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 4963, column: 4)
!10672 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 4962, column: 2)
!10673 = !DILocation(line: 0, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 4965, column: 12)
!10675 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 4964, column: 6)
!10676 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 4963, column: 4)
!10677 = !DILocation(line: 4951, column: 8, scope: !10669)
!10678 = !DILocation(line: 0, scope: !10669)
!10679 = !DILocation(line: 4951, column: 19, scope: !10668)
!10680 = !DILocation(line: 4951, column: 17, scope: !10668)
!10681 = !DILocation(line: 4951, column: 3, scope: !10669)
!10682 = !DILocation(line: 4953, column: 13, scope: !10667)
!10683 = !DILocation(line: 4955, column: 16, scope: !10667)
!10684 = !DILocation(line: 4956, column: 19, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 4956, column: 11)
!10686 = !DILocation(line: 4956, column: 24, scope: !10685)
!10687 = !DILocation(line: 4956, column: 11, scope: !10667)
!10688 = !DILocation(line: 4961, column: 17, scope: !10666)
!10689 = !DILocation(line: 4961, column: 11, scope: !10666)
!10690 = !DILocation(line: 4961, column: 11, scope: !10667)
!10691 = !DILocation(line: 4963, column: 4, scope: !10671)
!10692 = !DILocation(line: 4959, column: 14, scope: !10667)
!10693 = !DILocation(line: 4963, column: 4, scope: !10676)
!10694 = !DILocation(line: 4965, column: 12, scope: !10674)
!10695 = !DILocation(line: 4965, column: 24, scope: !10674)
!10696 = !DILocation(line: 4965, column: 15, scope: !10674)
!10697 = !DILocation(line: 4965, column: 12, scope: !10675)
!10698 = !DILocation(line: 4968, column: 14, scope: !10675)
!10699 = !DILocation(line: 4970, column: 13, scope: !10675)
!10700 = !DILocation(line: 4971, column: 13, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 4971, column: 12)
!10702 = !DILocation(line: 4971, column: 12, scope: !10675)
!10703 = !DILocation(line: 4973, column: 13, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 4973, column: 12)
!10705 = !DILocation(line: 4973, column: 12, scope: !10675)
!10706 = !DILocation(line: 4976, column: 13, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 4976, column: 12)
!10708 = !DILocation(line: 0, scope: !10675)
!10709 = !DILocation(line: 0, scope: !10667)
!10710 = distinct !{!10710, !10691, !10711}
!10711 = !DILocation(line: 4980, column: 6, scope: !10671)
!10712 = !DILocation(line: 4984, column: 4, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10714, file: !3, line: 4984, column: 4)
!10714 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 4983, column: 2)
!10715 = !DILocation(line: 4984, column: 4, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 4984, column: 4)
!10717 = !DILocation(line: 4986, column: 12, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 4986, column: 12)
!10719 = distinct !DILexicalBlock(scope: !10716, file: !3, line: 4985, column: 6)
!10720 = !DILocation(line: 4986, column: 24, scope: !10718)
!10721 = !DILocation(line: 4986, column: 15, scope: !10718)
!10722 = !DILocation(line: 4986, column: 12, scope: !10719)
!10723 = !DILocation(line: 4989, column: 14, scope: !10719)
!10724 = !DILocation(line: 4991, column: 13, scope: !10719)
!10725 = !DILocation(line: 4992, column: 13, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 4992, column: 12)
!10727 = !DILocation(line: 4992, column: 12, scope: !10719)
!10728 = !DILocation(line: 4994, column: 13, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 4994, column: 12)
!10730 = !DILocation(line: 4994, column: 12, scope: !10719)
!10731 = !DILocation(line: 4997, column: 13, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 4997, column: 12)
!10733 = !DILocation(line: 0, scope: !10719)
!10734 = distinct !{!10734, !10712, !10735}
!10735 = !DILocation(line: 5001, column: 6, scope: !10713)
!10736 = !DILocation(line: 5004, column: 12, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 5004, column: 11)
!10738 = !DILocation(line: 5004, column: 11, scope: !10667)
!10739 = !DILocation(line: 5006, column: 4, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10737, file: !3, line: 5005, column: 2)
!10741 = !DILocation(line: 5007, column: 4, scope: !10740)
!10742 = !DILocation(line: 5010, column: 54, scope: !10667)
!10743 = !DILocation(line: 5010, column: 16, scope: !10667)
!10744 = !DILocation(line: 5010, column: 14, scope: !10667)
!10745 = !DILocation(line: 5011, column: 5, scope: !10667)
!10746 = !DILocation(line: 4951, column: 38, scope: !10668)
!10747 = !DILocation(line: 4951, column: 3, scope: !10668)
!10748 = distinct !{!10748, !10681, !10749}
!10749 = !DILocation(line: 5011, column: 5, scope: !10669)
!10750 = !DILocation(line: 5013, column: 34, scope: !10646)
!10751 = !DILocation(line: 5013, column: 3, scope: !10646)
!10752 = !DILocation(line: 5014, column: 10, scope: !10646)
!10753 = !DILocation(line: 5015, column: 34, scope: !10646)
!10754 = !DILocation(line: 5015, column: 3, scope: !10646)
!10755 = !DILocation(line: 5017, column: 3, scope: !10646)
!10756 = !DILocation(line: 5018, column: 1, scope: !10646)
!10757 = distinct !DISubprogram(name: "bmp_iter_and_init", scope: !729, file: !729, line: 266, type: !10758, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10760)
!10758 = !DISubroutineType(types: !10759)
!10759 = !{null, !5006, !5007, !5007, !6, !2238}
!10760 = !{!10761, !10762, !10763, !10764, !10765}
!10761 = !DILocalVariable(name: "bi", arg: 1, scope: !10757, file: !729, line: 266, type: !5006)
!10762 = !DILocalVariable(name: "map1", arg: 2, scope: !10757, file: !729, line: 266, type: !5007)
!10763 = !DILocalVariable(name: "map2", arg: 3, scope: !10757, file: !729, line: 266, type: !5007)
!10764 = !DILocalVariable(name: "start_bit", arg: 4, scope: !10757, file: !729, line: 267, type: !6)
!10765 = !DILocalVariable(name: "bit_no", arg: 5, scope: !10757, file: !729, line: 267, type: !2238)
!10766 = !DILocation(line: 0, scope: !10757)
!10767 = !DILocation(line: 269, column: 20, scope: !10757)
!10768 = !DILocation(line: 269, column: 12, scope: !10757)
!10769 = !DILocation(line: 270, column: 20, scope: !10757)
!10770 = !DILocation(line: 270, column: 7, scope: !10757)
!10771 = !DILocation(line: 270, column: 12, scope: !10757)
!10772 = !DILocation(line: 0, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10774, file: !729, line: 276, column: 11)
!10774 = distinct !DILexicalBlock(scope: !10757, file: !729, line: 275, column: 5)
!10775 = !DILocation(line: 274, column: 3, scope: !10757)
!10776 = !DILocation(line: 276, column: 12, scope: !10773)
!10777 = !DILocation(line: 276, column: 11, scope: !10774)
!10778 = !DILocation(line: 278, column: 13, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10773, file: !729, line: 277, column: 2)
!10780 = !DILocation(line: 279, column: 4, scope: !10779)
!10781 = !DILocation(line: 282, column: 11, scope: !10774)
!10782 = distinct !{!10782, !10775, !10783}
!10783 = !DILocation(line: 285, column: 5, scope: !10757)
!10784 = !DILocation(line: 288, column: 3, scope: !10757)
!10785 = !DILocation(line: 290, column: 16, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10787, file: !729, line: 290, column: 11)
!10787 = distinct !DILexicalBlock(scope: !10757, file: !729, line: 289, column: 5)
!10788 = !DILocation(line: 290, column: 12, scope: !10786)
!10789 = !DILocation(line: 290, column: 11, scope: !10787)
!10790 = !DILocation(line: 292, column: 24, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10786, file: !729, line: 291, column: 2)
!10792 = !DILocation(line: 292, column: 13, scope: !10791)
!10793 = !DILocation(line: 302, column: 17, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10757, file: !729, line: 302, column: 7)
!10795 = !DILocation(line: 293, column: 4, scope: !10791)
!10796 = !DILocation(line: 296, column: 21, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10787, file: !729, line: 296, column: 11)
!10798 = !DILocation(line: 296, column: 39, scope: !10797)
!10799 = !DILocation(line: 296, column: 26, scope: !10797)
!10800 = !DILocation(line: 296, column: 11, scope: !10787)
!10801 = !DILocation(line: 298, column: 28, scope: !10787)
!10802 = !DILocation(line: 298, column: 16, scope: !10787)
!10803 = distinct !{!10803, !10784, !10804}
!10804 = !DILocation(line: 299, column: 5, scope: !10757)
!10805 = !DILocation(line: 0, scope: !10794)
!10806 = !DILocation(line: 302, column: 35, scope: !10794)
!10807 = !DILocation(line: 302, column: 11, scope: !10794)
!10808 = !DILocation(line: 302, column: 22, scope: !10794)
!10809 = !DILocation(line: 302, column: 7, scope: !10757)
!10810 = !DILocation(line: 306, column: 26, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10812, file: !729, line: 306, column: 11)
!10812 = distinct !DILexicalBlock(scope: !10794, file: !729, line: 303, column: 5)
!10813 = !DILocation(line: 306, column: 11, scope: !10812)
!10814 = !DILocation(line: 307, column: 29, scope: !10811)
!10815 = !DILocation(line: 307, column: 2, scope: !10811)
!10816 = !DILocation(line: 309, column: 11, scope: !10812)
!10817 = !DILocation(line: 309, column: 19, scope: !10812)
!10818 = !DILocation(line: 310, column: 18, scope: !10812)
!10819 = !DILocation(line: 310, column: 48, scope: !10812)
!10820 = !DILocation(line: 310, column: 46, scope: !10812)
!10821 = !DILocation(line: 311, column: 11, scope: !10812)
!10822 = !DILocation(line: 311, column: 16, scope: !10812)
!10823 = !DILocation(line: 312, column: 5, scope: !10812)
!10824 = !DILocation(line: 317, column: 11, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10794, file: !729, line: 314, column: 5)
!10826 = !DILocation(line: 317, column: 19, scope: !10825)
!10827 = !DILocation(line: 318, column: 11, scope: !10825)
!10828 = !DILocation(line: 318, column: 16, scope: !10825)
!10829 = !DILocation(line: 325, column: 13, scope: !10757)
!10830 = !DILocation(line: 327, column: 11, scope: !10757)
!10831 = !DILocation(line: 328, column: 1, scope: !10757)
!10832 = distinct !DISubprogram(name: "bmp_iter_and", scope: !729, file: !729, line: 440, type: !5050, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10833)
!10833 = !{!10834, !10835, !10836}
!10834 = !DILocalVariable(name: "bi", arg: 1, scope: !10832, file: !729, line: 440, type: !5006)
!10835 = !DILocalVariable(name: "bit_no", arg: 2, scope: !10832, file: !729, line: 440, type: !2238)
!10836 = !DILabel(scope: !10837, name: "next_bit", file: !729, line: 445)
!10837 = distinct !DILexicalBlock(scope: !10838, file: !729, line: 444, column: 5)
!10838 = distinct !DILexicalBlock(scope: !10832, file: !729, line: 443, column: 7)
!10839 = !DILocation(line: 0, scope: !10832)
!10840 = !DILocation(line: 443, column: 11, scope: !10838)
!10841 = !DILocation(line: 443, column: 7, scope: !10838)
!10842 = !DILocation(line: 443, column: 7, scope: !10832)
!10843 = !DILocation(line: 466, column: 43, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !729, line: 465, column: 2)
!10845 = distinct !DILexicalBlock(scope: !10832, file: !729, line: 462, column: 5)
!10846 = !DILocation(line: 446, column: 7, scope: !10837)
!10847 = !DILocation(line: 445, column: 5, scope: !10837)
!10848 = !DILocation(line: 446, column: 20, scope: !10837)
!10849 = !DILocation(line: 446, column: 25, scope: !10837)
!10850 = !DILocation(line: 446, column: 14, scope: !10837)
!10851 = !DILocation(line: 448, column: 13, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10837, file: !729, line: 447, column: 2)
!10853 = !DILocation(line: 449, column: 12, scope: !10852)
!10854 = distinct !{!10854, !10846, !10855}
!10855 = !DILocation(line: 450, column: 2, scope: !10837)
!10856 = !DILocation(line: 457, column: 15, scope: !10832)
!10857 = !DILocation(line: 457, column: 42, scope: !10832)
!10858 = !DILocation(line: 458, column: 26, scope: !10832)
!10859 = !DILocation(line: 457, column: 11, scope: !10832)
!10860 = !DILocation(line: 459, column: 7, scope: !10832)
!10861 = !DILocation(line: 459, column: 14, scope: !10832)
!10862 = !DILocation(line: 0, scope: !10844)
!10863 = !DILocation(line: 0, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10865, file: !729, line: 479, column: 6)
!10865 = distinct !DILexicalBlock(scope: !10845, file: !729, line: 475, column: 2)
!10866 = !DILocation(line: 0, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10865, file: !729, line: 489, column: 6)
!10868 = !DILocation(line: 461, column: 3, scope: !10832)
!10869 = !DILocation(line: 464, column: 7, scope: !10845)
!10870 = !DILocation(line: 464, column: 18, scope: !10845)
!10871 = !DILocation(line: 464, column: 26, scope: !10845)
!10872 = !DILocation(line: 480, column: 23, scope: !10864)
!10873 = !DILocation(line: 474, column: 7, scope: !10845)
!10874 = !DILocation(line: 466, column: 19, scope: !10844)
!10875 = !DILocation(line: 466, column: 15, scope: !10844)
!10876 = !DILocation(line: 466, column: 49, scope: !10844)
!10877 = !DILocation(line: 466, column: 45, scope: !10844)
!10878 = !DILocation(line: 466, column: 13, scope: !10844)
!10879 = !DILocation(line: 467, column: 8, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10844, file: !729, line: 467, column: 8)
!10881 = !DILocation(line: 467, column: 8, scope: !10844)
!10882 = !DILocation(line: 469, column: 12, scope: !10844)
!10883 = !DILocation(line: 470, column: 15, scope: !10844)
!10884 = distinct !{!10884, !10869, !10885}
!10885 = !DILocation(line: 471, column: 2, scope: !10845)
!10886 = !DILocation(line: 478, column: 4, scope: !10865)
!10887 = !DILocation(line: 480, column: 29, scope: !10864)
!10888 = !DILocation(line: 480, column: 17, scope: !10864)
!10889 = !DILocation(line: 481, column: 13, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10864, file: !729, line: 481, column: 12)
!10891 = !DILocation(line: 481, column: 12, scope: !10864)
!10892 = !DILocation(line: 484, column: 21, scope: !10865)
!10893 = !DILocation(line: 484, column: 32, scope: !10865)
!10894 = !DILocation(line: 484, column: 38, scope: !10865)
!10895 = !DILocation(line: 484, column: 26, scope: !10865)
!10896 = !DILocation(line: 483, column: 6, scope: !10864)
!10897 = distinct !{!10897, !10886, !10898}
!10898 = !DILocation(line: 484, column: 42, scope: !10865)
!10899 = !DILocation(line: 488, column: 4, scope: !10865)
!10900 = !DILocation(line: 488, column: 38, scope: !10865)
!10901 = !DILocation(line: 488, column: 21, scope: !10865)
!10902 = !DILocation(line: 488, column: 26, scope: !10865)
!10903 = !DILocation(line: 490, column: 29, scope: !10867)
!10904 = !DILocation(line: 490, column: 17, scope: !10867)
!10905 = !DILocation(line: 491, column: 13, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10867, file: !729, line: 491, column: 12)
!10907 = !DILocation(line: 491, column: 12, scope: !10867)
!10908 = distinct !{!10908, !10899, !10909}
!10909 = !DILocation(line: 493, column: 6, scope: !10865)
!10910 = !DILocation(line: 0, scope: !10865)
!10911 = !DILocation(line: 495, column: 29, scope: !10845)
!10912 = !DILocation(line: 494, column: 2, scope: !10865)
!10913 = distinct !{!10913, !10873, !10914}
!10914 = !DILocation(line: 495, column: 46, scope: !10845)
!10915 = !DILocation(line: 497, column: 32, scope: !10845)
!10916 = !DILocation(line: 497, column: 15, scope: !10845)
!10917 = !DILocation(line: 498, column: 19, scope: !10845)
!10918 = distinct !{!10918, !10868, !10919}
!10919 = !DILocation(line: 499, column: 5, scope: !10832)
!10920 = !DILocation(line: 500, column: 1, scope: !10832)
!10921 = distinct !DISubprogram(name: "create_new_iv", scope: !3, file: !3, line: 5303, type: !9096, scopeLine: 5304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10922)
!10922 = !{!10923, !10924, !10925, !10926, !10927}
!10923 = !DILocalVariable(name: "data", arg: 1, scope: !10921, file: !3, line: 5303, type: !2184)
!10924 = !DILocalVariable(name: "cand", arg: 2, scope: !10921, file: !3, line: 5303, type: !2126)
!10925 = !DILocalVariable(name: "incr_pos", scope: !10921, file: !3, line: 5305, type: !4066)
!10926 = !DILocalVariable(name: "base", scope: !10921, file: !3, line: 5306, type: !788)
!10927 = !DILocalVariable(name: "after", scope: !10921, file: !3, line: 5307, type: !136)
!10928 = !DILocation(line: 0, scope: !10921)
!10929 = !DILocation(line: 5305, column: 3, scope: !10921)
!10930 = !DILocation(line: 5309, column: 14, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 5309, column: 7)
!10932 = !DILocation(line: 5309, column: 8, scope: !10931)
!10933 = !DILocation(line: 5309, column: 7, scope: !10921)
!10934 = !DILocation(line: 5312, column: 17, scope: !10921)
!10935 = !DILocation(line: 5312, column: 3, scope: !10921)
!10936 = !DILocation(line: 5315, column: 18, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 5313, column: 5)
!10938 = !DILocation(line: 5315, column: 52, scope: !10937)
!10939 = !DILocation(line: 5315, column: 31, scope: !10937)
!10940 = !DILocation(line: 5316, column: 7, scope: !10937)
!10941 = !DILocation(line: 5319, column: 18, scope: !10937)
!10942 = !DILocation(line: 5319, column: 49, scope: !10937)
!10943 = !DILocation(line: 5319, column: 31, scope: !10937)
!10944 = !DILocation(line: 5321, column: 7, scope: !10937)
!10945 = !DILocation(line: 5324, column: 7, scope: !10937)
!10946 = !DILocation(line: 5327, column: 18, scope: !10937)
!10947 = !DILocation(line: 5327, column: 38, scope: !10937)
!10948 = !DILocation(line: 5328, column: 7, scope: !10937)
!10949 = !DILocation(line: 5332, column: 30, scope: !10937)
!10950 = !DILocation(line: 5332, column: 7, scope: !10937)
!10951 = !DILocation(line: 5332, column: 43, scope: !10937)
!10952 = !DILocation(line: 5332, column: 56, scope: !10937)
!10953 = !DILocation(line: 5333, column: 30, scope: !10937)
!10954 = !DILocation(line: 5333, column: 7, scope: !10937)
!10955 = !DILocation(line: 5333, column: 42, scope: !10937)
!10956 = !DILocation(line: 5333, column: 55, scope: !10937)
!10957 = !DILocation(line: 5336, column: 45, scope: !10937)
!10958 = !DILocation(line: 5336, column: 7, scope: !10937)
!10959 = !DILocation(line: 5336, column: 57, scope: !10937)
!10960 = !DILocation(line: 5336, column: 66, scope: !10937)
!10961 = !DILocation(line: 5338, column: 7, scope: !10937)
!10962 = !DILocation(line: 5341, column: 29, scope: !10921)
!10963 = !DILocation(line: 5341, column: 3, scope: !10921)
!10964 = !DILocation(line: 5342, column: 29, scope: !10921)
!10965 = !DILocation(line: 5342, column: 3, scope: !10921)
!10966 = !DILocation(line: 5344, column: 30, scope: !10921)
!10967 = !DILocation(line: 5344, column: 34, scope: !10921)
!10968 = !DILocation(line: 5344, column: 10, scope: !10921)
!10969 = !DILocation(line: 5346, column: 40, scope: !10921)
!10970 = !DILocation(line: 5346, column: 44, scope: !10921)
!10971 = !DILocation(line: 5346, column: 20, scope: !10921)
!10972 = !DILocation(line: 5347, column: 13, scope: !10921)
!10973 = !DILocation(line: 5347, column: 31, scope: !10921)
!10974 = !DILocation(line: 5348, column: 51, scope: !10921)
!10975 = !DILocation(line: 5346, column: 3, scope: !10921)
!10976 = !DILocation(line: 5349, column: 1, scope: !10921)
!10977 = distinct !DISubprogram(name: "gsi_last_bb", scope: !421, file: !421, line: 4450, type: !5347, scopeLine: 4451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10978)
!10978 = !{!10979, !10980, !10981}
!10979 = !DILocalVariable(name: "bb", arg: 1, scope: !10977, file: !421, line: 4450, type: !1053)
!10980 = !DILocalVariable(name: "i", scope: !10977, file: !421, line: 4452, type: !4066)
!10981 = !DILocalVariable(name: "seq", scope: !10977, file: !421, line: 4453, type: !1080)
!10982 = !DILocation(line: 0, scope: !10977)
!10983 = !DILocation(line: 4452, column: 24, scope: !10977)
!10984 = !DILocation(line: 4455, column: 9, scope: !10977)
!10985 = !DILocation(line: 4456, column: 11, scope: !10977)
!10986 = !DILocation(line: 4456, column: 5, scope: !10977)
!10987 = !DILocation(line: 4456, column: 9, scope: !10977)
!10988 = !DILocation(line: 4457, column: 5, scope: !10977)
!10989 = !DILocation(line: 4457, column: 9, scope: !10977)
!10990 = !DILocation(line: 4458, column: 5, scope: !10977)
!10991 = !DILocation(line: 4458, column: 8, scope: !10977)
!10992 = !DILocation(line: 4461, column: 1, scope: !10977)
!10993 = distinct !DISubprogram(name: "gimple_seq_last", scope: !421, file: !421, line: 178, type: !5399, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !10994)
!10994 = !{!10995}
!10995 = !DILocalVariable(name: "s", arg: 1, scope: !10993, file: !421, line: 178, type: !5401)
!10996 = !DILocation(line: 0, scope: !10993)
!10997 = !DILocation(line: 180, column: 10, scope: !10993)
!10998 = !DILocation(line: 180, column: 17, scope: !10993)
!10999 = !DILocation(line: 180, column: 3, scope: !10993)
!11000 = distinct !DISubprogram(name: "rewrite_use", scope: !3, file: !3, line: 5618, type: !11001, scopeLine: 5619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11003)
!11001 = !DISubroutineType(types: !11002)
!11002 = !{null, !2184, !2111, !2126}
!11003 = !{!11004, !11005, !11006}
!11004 = !DILocalVariable(name: "data", arg: 1, scope: !11000, file: !3, line: 5618, type: !2184)
!11005 = !DILocalVariable(name: "use", arg: 2, scope: !11000, file: !3, line: 5618, type: !2111)
!11006 = !DILocalVariable(name: "cand", arg: 3, scope: !11000, file: !3, line: 5618, type: !2126)
!11007 = !DILocation(line: 0, scope: !11000)
!11008 = !DILocation(line: 5620, column: 16, scope: !11000)
!11009 = !DILocation(line: 5620, column: 3, scope: !11000)
!11010 = !DILocation(line: 5623, column: 2, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 5621, column: 5)
!11012 = !DILocation(line: 5624, column: 2, scope: !11011)
!11013 = !DILocation(line: 5627, column: 2, scope: !11011)
!11014 = !DILocation(line: 5628, column: 2, scope: !11011)
!11015 = !DILocation(line: 5631, column: 2, scope: !11011)
!11016 = !DILocation(line: 5632, column: 2, scope: !11011)
!11017 = !DILocation(line: 5635, column: 2, scope: !11011)
!11018 = !DILocation(line: 5636, column: 5, scope: !11011)
!11019 = !DILocation(line: 5638, column: 21, scope: !11000)
!11020 = !DILocation(line: 5638, column: 3, scope: !11000)
!11021 = !DILocation(line: 5639, column: 1, scope: !11000)
!11022 = distinct !DISubprogram(name: "rewrite_use_nonlinear_expr", scope: !3, file: !3, line: 5372, type: !11001, scopeLine: 5374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11023)
!11023 = !{!11024, !11025, !11026, !11027, !11028, !11029, !11030, !11031, !11032, !11035, !11036, !11037, !11038}
!11024 = !DILocalVariable(name: "data", arg: 1, scope: !11022, file: !3, line: 5372, type: !2184)
!11025 = !DILocalVariable(name: "use", arg: 2, scope: !11022, file: !3, line: 5373, type: !2111)
!11026 = !DILocalVariable(name: "cand", arg: 3, scope: !11022, file: !3, line: 5373, type: !2126)
!11027 = !DILocalVariable(name: "comp", scope: !11022, file: !3, line: 5375, type: !788)
!11028 = !DILocalVariable(name: "op", scope: !11022, file: !3, line: 5376, type: !788)
!11029 = !DILocalVariable(name: "tgt", scope: !11022, file: !3, line: 5376, type: !788)
!11030 = !DILocalVariable(name: "ass", scope: !11022, file: !3, line: 5377, type: !1090)
!11031 = !DILocalVariable(name: "bsi", scope: !11022, file: !3, line: 5378, type: !4066)
!11032 = !DILocalVariable(name: "step", scope: !11033, file: !3, line: 5387, type: !788)
!11033 = distinct !DILexicalBlock(scope: !11034, file: !3, line: 5386, column: 5)
!11034 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 5384, column: 7)
!11035 = !DILocalVariable(name: "ctype", scope: !11033, file: !3, line: 5387, type: !788)
!11036 = !DILocalVariable(name: "utype", scope: !11033, file: !3, line: 5387, type: !788)
!11037 = !DILocalVariable(name: "incr_code", scope: !11033, file: !3, line: 5388, type: !159)
!11038 = !DILocalVariable(name: "old_code", scope: !11033, file: !3, line: 5388, type: !159)
!11039 = !DILocation(line: 0, scope: !11022)
!11040 = !DILocation(line: 5378, column: 3, scope: !11022)
!11041 = !DILocation(line: 5384, column: 13, scope: !11034)
!11042 = !DILocation(line: 5384, column: 17, scope: !11034)
!11043 = !DILocation(line: 5385, column: 7, scope: !11034)
!11044 = !DILocation(line: 5385, column: 16, scope: !11034)
!11045 = !DILocation(line: 5385, column: 39, scope: !11034)
!11046 = !DILocation(line: 5385, column: 31, scope: !11034)
!11047 = !DILocation(line: 5384, column: 7, scope: !11022)
!11048 = !DILocation(line: 0, scope: !11033)
!11049 = !DILocation(line: 5390, column: 7, scope: !11033)
!11050 = !DILocation(line: 5391, column: 7, scope: !11033)
!11051 = !DILocation(line: 5395, column: 15, scope: !11033)
!11052 = !DILocation(line: 5393, column: 20, scope: !11033)
!11053 = !DILocation(line: 5393, column: 24, scope: !11033)
!11054 = !DILocation(line: 5394, column: 15, scope: !11033)
!11055 = !DILocation(line: 5396, column: 11, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 5396, column: 11)
!11057 = !DILocation(line: 5396, column: 28, scope: !11056)
!11058 = !DILocation(line: 5396, column: 11, scope: !11033)
!11059 = !DILocation(line: 5399, column: 11, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11056, file: !3, line: 5397, column: 2)
!11061 = !DILocation(line: 5400, column: 2, scope: !11060)
!11062 = !DILocation(line: 5407, column: 47, scope: !11033)
!11063 = !DILocation(line: 5407, column: 18, scope: !11033)
!11064 = !DILocation(line: 5409, column: 4, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 5408, column: 11)
!11066 = !DILocation(line: 5412, column: 33, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11068, file: !3, line: 5412, column: 8)
!11068 = distinct !DILexicalBlock(scope: !11065, file: !3, line: 5411, column: 2)
!11069 = !DILocation(line: 5412, column: 8, scope: !11067)
!11070 = !DILocation(line: 5412, column: 48, scope: !11067)
!11071 = !DILocation(line: 5412, column: 39, scope: !11067)
!11072 = !DILocation(line: 5412, column: 8, scope: !11068)
!11073 = !DILocation(line: 5413, column: 36, scope: !11067)
!11074 = !DILocation(line: 5413, column: 11, scope: !11067)
!11075 = !DILocation(line: 5413, column: 6, scope: !11067)
!11076 = !DILocation(line: 5414, column: 22, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11067, file: !3, line: 5414, column: 13)
!11078 = !DILocation(line: 5415, column: 6, scope: !11077)
!11079 = !DILocation(line: 5415, column: 34, scope: !11077)
!11080 = !DILocation(line: 5415, column: 9, scope: !11077)
!11081 = !DILocation(line: 5415, column: 49, scope: !11077)
!11082 = !DILocation(line: 5415, column: 40, scope: !11077)
!11083 = !DILocation(line: 5414, column: 13, scope: !11067)
!11084 = !DILocation(line: 5416, column: 36, scope: !11077)
!11085 = !DILocation(line: 5416, column: 11, scope: !11077)
!11086 = !DILocation(line: 5416, column: 6, scope: !11077)
!11087 = !DILocation(line: 0, scope: !11065)
!11088 = !DILocation(line: 5423, column: 11, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 5423, column: 11)
!11090 = !DILocation(line: 5424, column: 4, scope: !11089)
!11091 = !DILocation(line: 5424, column: 8, scope: !11089)
!11092 = !DILocation(line: 5424, column: 23, scope: !11089)
!11093 = !DILocation(line: 5425, column: 8, scope: !11089)
!11094 = !DILocation(line: 5425, column: 11, scope: !11089)
!11095 = !DILocation(line: 5423, column: 11, scope: !11033)
!11096 = !DILocation(line: 5430, column: 12, scope: !11033)
!11097 = !DILocation(line: 5431, column: 14, scope: !11033)
!11098 = !DILocation(line: 5434, column: 5, scope: !11034)
!11099 = !DILocation(line: 5437, column: 37, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11034, file: !3, line: 5436, column: 5)
!11101 = !DILocation(line: 5437, column: 14, scope: !11100)
!11102 = !DILocation(line: 5438, column: 7, scope: !11100)
!11103 = !DILocation(line: 5441, column: 29, scope: !11022)
!11104 = !DILocation(line: 5441, column: 11, scope: !11022)
!11105 = !DILocation(line: 5441, column: 3, scope: !11022)
!11106 = !DILocation(line: 5444, column: 13, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 5442, column: 5)
!11108 = !DILocation(line: 5447, column: 11, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11107, file: !3, line: 5447, column: 11)
!11110 = !DILocation(line: 5447, column: 34, scope: !11109)
!11111 = !DILocation(line: 5447, column: 11, scope: !11107)
!11112 = !DILocation(line: 5450, column: 13, scope: !11107)
!11113 = !DILocation(line: 5450, column: 47, scope: !11107)
!11114 = !DILocation(line: 5450, column: 31, scope: !11107)
!11115 = !DILocation(line: 5451, column: 7, scope: !11107)
!11116 = !DILocation(line: 5454, column: 37, scope: !11107)
!11117 = !DILocation(line: 5454, column: 13, scope: !11107)
!11118 = !DILocation(line: 5455, column: 13, scope: !11107)
!11119 = !DILocation(line: 5455, column: 32, scope: !11107)
!11120 = !DILocation(line: 5456, column: 7, scope: !11107)
!11121 = !DILocation(line: 5459, column: 7, scope: !11107)
!11122 = !DILocation(line: 5460, column: 5, scope: !11107)
!11123 = !DILocation(line: 5462, column: 53, scope: !11022)
!11124 = !DILocation(line: 5462, column: 8, scope: !11022)
!11125 = !DILocation(line: 5465, column: 25, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 5465, column: 7)
!11127 = !DILocation(line: 5465, column: 7, scope: !11126)
!11128 = !DILocation(line: 5465, column: 31, scope: !11126)
!11129 = !DILocation(line: 5465, column: 7, scope: !11022)
!11130 = !DILocation(line: 5467, column: 13, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 5466, column: 5)
!11132 = !DILocation(line: 5468, column: 7, scope: !11131)
!11133 = !DILocation(line: 5470, column: 13, scope: !11131)
!11134 = !DILocation(line: 5470, column: 32, scope: !11131)
!11135 = !DILocation(line: 5471, column: 7, scope: !11131)
!11136 = !DILocation(line: 5472, column: 5, scope: !11131)
!11137 = !DILocation(line: 5475, column: 7, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 5474, column: 5)
!11139 = !DILocation(line: 5476, column: 19, scope: !11138)
!11140 = !DILocation(line: 5476, column: 17, scope: !11138)
!11141 = !DILocation(line: 5478, column: 1, scope: !11022)
!11142 = distinct !DISubprogram(name: "rewrite_use_address", scope: !3, file: !3, line: 5536, type: !11001, scopeLine: 5538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11143)
!11143 = !{!11144, !11145, !11146, !11147, !11148, !11149, !11150, !11151}
!11144 = !DILocalVariable(name: "data", arg: 1, scope: !11142, file: !3, line: 5536, type: !2184)
!11145 = !DILocalVariable(name: "use", arg: 2, scope: !11142, file: !3, line: 5537, type: !2111)
!11146 = !DILocalVariable(name: "cand", arg: 3, scope: !11142, file: !3, line: 5537, type: !2126)
!11147 = !DILocalVariable(name: "aff", scope: !11142, file: !3, line: 5539, type: !7863)
!11148 = !DILocalVariable(name: "bsi", scope: !11142, file: !3, line: 5540, type: !4066)
!11149 = !DILocalVariable(name: "base_hint", scope: !11142, file: !3, line: 5541, type: !788)
!11150 = !DILocalVariable(name: "ref", scope: !11142, file: !3, line: 5542, type: !788)
!11151 = !DILocalVariable(name: "ok", scope: !11142, file: !3, line: 5543, type: !136)
!11152 = !DILocation(line: 0, scope: !11142)
!11153 = !DILocation(line: 5539, column: 3, scope: !11142)
!11154 = !DILocation(line: 5540, column: 3, scope: !11142)
!11155 = !DILocation(line: 5540, column: 49, scope: !11142)
!11156 = !DILocation(line: 5540, column: 30, scope: !11142)
!11157 = !DILocation(line: 5545, column: 35, scope: !11142)
!11158 = !DILocation(line: 5545, column: 65, scope: !11142)
!11159 = !DILocation(line: 5545, column: 8, scope: !11142)
!11160 = !DILocation(line: 5546, column: 3, scope: !11142)
!11161 = !DILocation(line: 5547, column: 3, scope: !11142)
!11162 = !DILocation(line: 5560, column: 13, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11142, file: !3, line: 5560, column: 7)
!11164 = !DILocation(line: 5560, column: 17, scope: !11163)
!11165 = !DILocation(line: 5560, column: 7, scope: !11163)
!11166 = !DILocation(line: 5560, column: 7, scope: !11142)
!11167 = !DILocation(line: 5561, column: 36, scope: !11163)
!11168 = !DILocation(line: 5561, column: 61, scope: !11163)
!11169 = !DILocation(line: 5561, column: 17, scope: !11163)
!11170 = !DILocation(line: 5561, column: 5, scope: !11163)
!11171 = !DILocation(line: 5563, column: 31, scope: !11142)
!11172 = !DILocation(line: 5564, column: 10, scope: !11142)
!11173 = !DILocation(line: 5563, column: 9, scope: !11142)
!11174 = !DILocation(line: 5565, column: 29, scope: !11142)
!11175 = !DILocation(line: 5565, column: 23, scope: !11142)
!11176 = !DILocation(line: 5565, column: 3, scope: !11142)
!11177 = !DILocation(line: 5566, column: 9, scope: !11142)
!11178 = !DILocation(line: 5566, column: 14, scope: !11142)
!11179 = !DILocation(line: 5567, column: 1, scope: !11142)
!11180 = distinct !DISubprogram(name: "rewrite_use_compare", scope: !3, file: !3, line: 5573, type: !11001, scopeLine: 5575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11181)
!11181 = !{!11182, !11183, !11184, !11185, !11186, !11187, !11188, !11189, !11190, !11191, !11192, !11193, !11196, !11197}
!11182 = !DILocalVariable(name: "data", arg: 1, scope: !11180, file: !3, line: 5573, type: !2184)
!11183 = !DILocalVariable(name: "use", arg: 2, scope: !11180, file: !3, line: 5574, type: !2111)
!11184 = !DILocalVariable(name: "cand", arg: 3, scope: !11180, file: !3, line: 5574, type: !2126)
!11185 = !DILocalVariable(name: "comp", scope: !11180, file: !3, line: 5576, type: !788)
!11186 = !DILocalVariable(name: "var_p", scope: !11180, file: !3, line: 5576, type: !1124)
!11187 = !DILocalVariable(name: "op", scope: !11180, file: !3, line: 5576, type: !788)
!11188 = !DILocalVariable(name: "bound", scope: !11180, file: !3, line: 5576, type: !788)
!11189 = !DILocalVariable(name: "bsi", scope: !11180, file: !3, line: 5577, type: !4066)
!11190 = !DILocalVariable(name: "compare", scope: !11180, file: !3, line: 5578, type: !159)
!11191 = !DILocalVariable(name: "cp", scope: !11180, file: !3, line: 5579, type: !2122)
!11192 = !DILocalVariable(name: "ok", scope: !11180, file: !3, line: 5580, type: !136)
!11193 = !DILocalVariable(name: "var", scope: !11194, file: !3, line: 5585, type: !788)
!11194 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 5584, column: 5)
!11195 = distinct !DILexicalBlock(scope: !11180, file: !3, line: 5583, column: 7)
!11196 = !DILocalVariable(name: "var_type", scope: !11194, file: !3, line: 5586, type: !788)
!11197 = !DILocalVariable(name: "stmts", scope: !11194, file: !3, line: 5587, type: !1080)
!11198 = !DILocation(line: 0, scope: !11180)
!11199 = !DILocation(line: 5576, column: 3, scope: !11180)
!11200 = !DILocation(line: 5577, column: 3, scope: !11180)
!11201 = !DILocation(line: 5577, column: 49, scope: !11180)
!11202 = !DILocation(line: 5577, column: 30, scope: !11180)
!11203 = !DILocation(line: 5579, column: 26, scope: !11180)
!11204 = !DILocation(line: 5582, column: 15, scope: !11180)
!11205 = !DILocation(line: 5583, column: 7, scope: !11195)
!11206 = !DILocation(line: 5583, column: 7, scope: !11180)
!11207 = !DILocation(line: 5585, column: 62, scope: !11194)
!11208 = !DILocation(line: 5585, column: 18, scope: !11194)
!11209 = !DILocation(line: 0, scope: !11194)
!11210 = !DILocation(line: 5586, column: 23, scope: !11194)
!11211 = !DILocation(line: 5587, column: 7, scope: !11194)
!11212 = !DILocation(line: 5589, column: 17, scope: !11194)
!11213 = !DILocation(line: 5590, column: 29, scope: !11194)
!11214 = !DILocation(line: 5590, column: 15, scope: !11194)
!11215 = !DILocation(line: 5591, column: 12, scope: !11194)
!11216 = !DILocation(line: 5592, column: 11, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11194, file: !3, line: 5592, column: 11)
!11218 = !DILocation(line: 5592, column: 11, scope: !11194)
!11219 = !DILocation(line: 5594, column: 30, scope: !11217)
!11220 = !DILocation(line: 5594, column: 3, scope: !11217)
!11221 = !DILocation(line: 5595, column: 3, scope: !11217)
!11222 = !DILocation(line: 5593, column: 2, scope: !11217)
!11223 = !DILocation(line: 5597, column: 33, scope: !11194)
!11224 = !DILocation(line: 5597, column: 7, scope: !11194)
!11225 = !DILocation(line: 5598, column: 34, scope: !11194)
!11226 = !DILocation(line: 5598, column: 7, scope: !11194)
!11227 = !DILocation(line: 5599, column: 33, scope: !11194)
!11228 = !DILocation(line: 5599, column: 7, scope: !11194)
!11229 = !DILocation(line: 5601, column: 5, scope: !11195)
!11230 = !DILocation(line: 5605, column: 10, scope: !11180)
!11231 = !DILocation(line: 5606, column: 3, scope: !11180)
!11232 = !DILocation(line: 5608, column: 42, scope: !11180)
!11233 = !DILocation(line: 5608, column: 8, scope: !11180)
!11234 = !DILocation(line: 5609, column: 3, scope: !11180)
!11235 = !DILocation(line: 5611, column: 56, scope: !11180)
!11236 = !DILocation(line: 5611, column: 12, scope: !11180)
!11237 = !DILocation(line: 5611, column: 4, scope: !11180)
!11238 = !DILocation(line: 5611, column: 10, scope: !11180)
!11239 = !DILocation(line: 5613, column: 1, scope: !11180)
!11240 = distinct !DISubprogram(name: "update_stmt", scope: !421, file: !421, line: 1456, type: !11241, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11243)
!11241 = !DISubroutineType(types: !11242)
!11242 = !{null, !1090}
!11243 = !{!11244}
!11244 = !DILocalVariable(name: "s", arg: 1, scope: !11240, file: !421, line: 1456, type: !1090)
!11245 = !DILocation(line: 0, scope: !11240)
!11246 = !DILocation(line: 1458, column: 7, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11240, file: !421, line: 1458, column: 7)
!11248 = !DILocation(line: 1458, column: 7, scope: !11240)
!11249 = !DILocation(line: 1460, column: 7, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11247, file: !421, line: 1459, column: 5)
!11251 = !DILocation(line: 1461, column: 7, scope: !11250)
!11252 = !DILocation(line: 1462, column: 5, scope: !11250)
!11253 = !DILocation(line: 1463, column: 1, scope: !11240)
!11254 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !421, file: !421, line: 1759, type: !5450, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11255)
!11255 = !{!11256}
!11256 = !DILocalVariable(name: "gs", arg: 1, scope: !11254, file: !421, line: 1759, type: !3194)
!11257 = !DILocation(line: 0, scope: !11254)
!11258 = !DILocation(line: 1763, column: 7, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11254, file: !421, line: 1763, column: 7)
!11260 = !DILocation(line: 1763, column: 27, scope: !11259)
!11261 = !DILocation(line: 1763, column: 7, scope: !11254)
!11262 = !DILocation(line: 1764, column: 12, scope: !11259)
!11263 = !DILocation(line: 1764, column: 5, scope: !11259)
!11264 = !DILocation(line: 0, scope: !11259)
!11265 = !DILocation(line: 1767, column: 1, scope: !11254)
!11266 = distinct !DISubprogram(name: "get_computation", scope: !3, file: !3, line: 2927, type: !11267, scopeLine: 2928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11269)
!11267 = !DISubroutineType(types: !11268)
!11268 = !{!788, !1305, !2111, !2126}
!11269 = !{!11270, !11271, !11272}
!11270 = !DILocalVariable(name: "loop", arg: 1, scope: !11266, file: !3, line: 2927, type: !1305)
!11271 = !DILocalVariable(name: "use", arg: 2, scope: !11266, file: !3, line: 2927, type: !2111)
!11272 = !DILocalVariable(name: "cand", arg: 3, scope: !11266, file: !3, line: 2927, type: !2126)
!11273 = !DILocation(line: 0, scope: !11266)
!11274 = !DILocation(line: 2929, column: 52, scope: !11266)
!11275 = !DILocation(line: 2929, column: 10, scope: !11266)
!11276 = !DILocation(line: 2929, column: 3, scope: !11266)
!11277 = distinct !DISubprogram(name: "gsi_after_labels", scope: !421, file: !421, line: 4510, type: !5347, scopeLine: 4511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11278)
!11278 = !{!11279, !11280}
!11279 = !DILocalVariable(name: "bb", arg: 1, scope: !11277, file: !421, line: 4510, type: !1053)
!11280 = !DILocalVariable(name: "gsi", scope: !11277, file: !421, line: 4512, type: !4066)
!11281 = !DILocation(line: 0, scope: !11277)
!11282 = !DILocation(line: 4512, column: 24, scope: !11277)
!11283 = !DILocation(line: 4512, column: 30, scope: !11277)
!11284 = !DILocation(line: 4514, column: 3, scope: !11277)
!11285 = !DILocation(line: 4514, column: 11, scope: !11277)
!11286 = !DILocation(line: 4514, column: 27, scope: !11277)
!11287 = !DILocation(line: 4514, column: 43, scope: !11277)
!11288 = !DILocation(line: 4514, column: 30, scope: !11277)
!11289 = !DILocation(line: 4514, column: 59, scope: !11277)
!11290 = !DILocation(line: 4515, column: 5, scope: !11277)
!11291 = distinct !{!11291, !11284, !11292}
!11292 = !DILocation(line: 4515, column: 19, scope: !11277)
!11293 = !DILocation(line: 4517, column: 3, scope: !11277)
!11294 = distinct !DISubprogram(name: "copy_ref_info", scope: !3, file: !3, line: 5521, type: !11295, scopeLine: 5522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11297)
!11295 = !DISubroutineType(types: !11296)
!11296 = !{null, !788, !788}
!11297 = !{!11298, !11299}
!11298 = !DILocalVariable(name: "new_ref", arg: 1, scope: !11294, file: !3, line: 5521, type: !788)
!11299 = !DILocalVariable(name: "old_ref", arg: 2, scope: !11294, file: !3, line: 5521, type: !788)
!11300 = !DILocation(line: 0, scope: !11294)
!11301 = !DILocation(line: 5523, column: 7, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 5523, column: 7)
!11303 = !DILocation(line: 5523, column: 27, scope: !11302)
!11304 = !DILocation(line: 5523, column: 7, scope: !11294)
!11305 = !DILocation(line: 5524, column: 5, scope: !11302)
!11306 = !DILocation(line: 5527, column: 32, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11302, file: !3, line: 5526, column: 5)
!11308 = !DILocation(line: 5527, column: 7, scope: !11307)
!11309 = !DILocation(line: 5527, column: 30, scope: !11307)
!11310 = !DILocation(line: 5528, column: 37, scope: !11307)
!11311 = !DILocation(line: 5528, column: 7, scope: !11307)
!11312 = !DILocation(line: 5528, column: 35, scope: !11307)
!11313 = !DILocation(line: 5529, column: 38, scope: !11307)
!11314 = !DILocation(line: 5529, column: 36, scope: !11307)
!11315 = !DILocation(line: 5531, column: 1, scope: !11294)
!11316 = distinct !DISubprogram(name: "unshare_and_remove_ssa_names", scope: !3, file: !3, line: 5510, type: !5288, scopeLine: 5511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11317)
!11317 = !{!11318}
!11318 = !DILocalVariable(name: "ref", arg: 1, scope: !11316, file: !3, line: 5510, type: !788)
!11319 = !DILocation(line: 0, scope: !11316)
!11320 = !DILocation(line: 5512, column: 9, scope: !11316)
!11321 = !DILocation(line: 5512, column: 7, scope: !11316)
!11322 = !DILocation(line: 5513, column: 3, scope: !11316)
!11323 = !DILocation(line: 5515, column: 10, scope: !11316)
!11324 = !DILocation(line: 5515, column: 3, scope: !11316)
!11325 = distinct !DISubprogram(name: "idx_remove_ssa_names", scope: !3, file: !3, line: 5484, type: !3108, scopeLine: 5486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11326)
!11326 = !{!11327, !11328, !11329, !11330}
!11327 = !DILocalVariable(name: "base", arg: 1, scope: !11325, file: !3, line: 5484, type: !788)
!11328 = !DILocalVariable(name: "idx", arg: 2, scope: !11325, file: !3, line: 5484, type: !1124)
!11329 = !DILocalVariable(name: "data", arg: 3, scope: !11325, file: !3, line: 5485, type: !663)
!11330 = !DILocalVariable(name: "op", scope: !11325, file: !3, line: 5487, type: !1124)
!11331 = !DILocation(line: 0, scope: !11325)
!11332 = !DILocation(line: 5489, column: 7, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 5489, column: 7)
!11334 = !DILocation(line: 5489, column: 24, scope: !11333)
!11335 = !DILocation(line: 5489, column: 7, scope: !11325)
!11336 = !DILocation(line: 5490, column: 12, scope: !11333)
!11337 = !DILocation(line: 5490, column: 10, scope: !11333)
!11338 = !DILocation(line: 5490, column: 5, scope: !11333)
!11339 = !DILocation(line: 5492, column: 7, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 5492, column: 7)
!11341 = !DILocation(line: 5492, column: 24, scope: !11340)
!11342 = !DILocation(line: 5492, column: 37, scope: !11340)
!11343 = !DILocation(line: 5492, column: 57, scope: !11340)
!11344 = !DILocation(line: 5492, column: 7, scope: !11325)
!11345 = !DILocation(line: 5494, column: 13, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 5493, column: 5)
!11347 = !DILocation(line: 5495, column: 11, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 5495, column: 11)
!11349 = !DILocation(line: 5496, column: 4, scope: !11348)
!11350 = !DILocation(line: 5496, column: 7, scope: !11348)
!11351 = !DILocation(line: 5496, column: 23, scope: !11348)
!11352 = !DILocation(line: 5495, column: 11, scope: !11346)
!11353 = !DILocation(line: 5497, column: 8, scope: !11348)
!11354 = !DILocation(line: 5497, column: 6, scope: !11348)
!11355 = !DILocation(line: 5497, column: 2, scope: !11348)
!11356 = !DILocation(line: 5498, column: 13, scope: !11346)
!11357 = !DILocation(line: 5499, column: 11, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 5499, column: 11)
!11359 = !DILocation(line: 5500, column: 4, scope: !11358)
!11360 = !DILocation(line: 5500, column: 7, scope: !11358)
!11361 = !DILocation(line: 5500, column: 23, scope: !11358)
!11362 = !DILocation(line: 5499, column: 11, scope: !11346)
!11363 = !DILocation(line: 5501, column: 8, scope: !11358)
!11364 = !DILocation(line: 5501, column: 6, scope: !11358)
!11365 = !DILocation(line: 5501, column: 2, scope: !11358)
!11366 = !DILocation(line: 5504, column: 3, scope: !11325)
!11367 = distinct !DISubprogram(name: "iv_elimination_compare", scope: !3, file: !3, line: 3997, type: !11368, scopeLine: 3998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11370)
!11368 = !DISubroutineType(types: !11369)
!11369 = !{!159, !2184, !2111}
!11370 = !{!11371, !11372, !11373, !11374, !11375}
!11371 = !DILocalVariable(name: "data", arg: 1, scope: !11367, file: !3, line: 3997, type: !2184)
!11372 = !DILocalVariable(name: "use", arg: 2, scope: !11367, file: !3, line: 3997, type: !2111)
!11373 = !DILocalVariable(name: "loop", scope: !11367, file: !3, line: 3999, type: !1305)
!11374 = !DILocalVariable(name: "ex_bb", scope: !11367, file: !3, line: 4000, type: !1053)
!11375 = !DILocalVariable(name: "exit", scope: !11367, file: !3, line: 4001, type: !1070)
!11376 = !DILocation(line: 0, scope: !11367)
!11377 = !DILocation(line: 3999, column: 29, scope: !11367)
!11378 = !DILocation(line: 4003, column: 27, scope: !11367)
!11379 = !DILocation(line: 4003, column: 11, scope: !11367)
!11380 = !DILocation(line: 4004, column: 10, scope: !11367)
!11381 = !DILocation(line: 4005, column: 42, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 4005, column: 7)
!11383 = !DILocation(line: 4005, column: 7, scope: !11382)
!11384 = !DILocation(line: 4005, column: 7, scope: !11367)
!11385 = !DILocation(line: 4006, column: 12, scope: !11382)
!11386 = !DILocation(line: 4006, column: 5, scope: !11382)
!11387 = !DILocation(line: 4008, column: 17, scope: !11367)
!11388 = !DILocation(line: 4008, column: 23, scope: !11367)
!11389 = !DILocation(line: 4008, column: 11, scope: !11367)
!11390 = !DILocation(line: 4008, column: 3, scope: !11367)
!11391 = distinct !DISubprogram(name: "gimple_cond_set_lhs", scope: !421, file: !421, line: 2261, type: !11392, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11394)
!11392 = !DISubroutineType(types: !11393)
!11393 = !{null, !1090, !788}
!11394 = !{!11395, !11396}
!11395 = !DILocalVariable(name: "gs", arg: 1, scope: !11391, file: !421, line: 2261, type: !1090)
!11396 = !DILocalVariable(name: "lhs", arg: 2, scope: !11391, file: !421, line: 2261, type: !788)
!11397 = !DILocation(line: 0, scope: !11391)
!11398 = !DILocation(line: 2264, column: 3, scope: !11391)
!11399 = !DILocation(line: 2265, column: 1, scope: !11391)
!11400 = distinct !DISubprogram(name: "gimple_cond_set_code", scope: !421, file: !421, line: 2231, type: !11401, scopeLine: 2232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11403)
!11401 = !DISubroutineType(types: !11402)
!11402 = !{null, !1090, !159}
!11403 = !{!11404, !11405}
!11404 = !DILocalVariable(name: "gs", arg: 1, scope: !11400, file: !421, line: 2231, type: !1090)
!11405 = !DILocalVariable(name: "code", arg: 2, scope: !11400, file: !421, line: 2231, type: !159)
!11406 = !DILocation(line: 0, scope: !11400)
!11407 = !DILocation(line: 2234, column: 14, scope: !11400)
!11408 = !DILocation(line: 2234, column: 22, scope: !11400)
!11409 = !DILocation(line: 2235, column: 1, scope: !11400)
!11410 = distinct !DISubprogram(name: "gimple_cond_set_rhs", scope: !421, file: !421, line: 2292, type: !11392, scopeLine: 2293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11411)
!11411 = !{!11412, !11413}
!11412 = !DILocalVariable(name: "gs", arg: 1, scope: !11410, file: !421, line: 2292, type: !1090)
!11413 = !DILocalVariable(name: "rhs", arg: 2, scope: !11410, file: !421, line: 2292, type: !788)
!11414 = !DILocation(line: 0, scope: !11410)
!11415 = !DILocation(line: 2295, column: 3, scope: !11410)
!11416 = !DILocation(line: 2296, column: 1, scope: !11410)
!11417 = distinct !DISubprogram(name: "gimple_set_op", scope: !421, file: !421, line: 1663, type: !11418, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11420)
!11418 = !DISubroutineType(types: !11419)
!11419 = !{null, !1090, !6, !788}
!11420 = !{!11421, !11422, !11423}
!11421 = !DILocalVariable(name: "gs", arg: 1, scope: !11417, file: !421, line: 1663, type: !1090)
!11422 = !DILocalVariable(name: "i", arg: 2, scope: !11417, file: !421, line: 1663, type: !6)
!11423 = !DILocalVariable(name: "op", arg: 3, scope: !11417, file: !421, line: 1663, type: !788)
!11424 = !DILocation(line: 0, scope: !11417)
!11425 = !DILocation(line: 1665, column: 3, scope: !11417)
!11426 = !DILocation(line: 1671, column: 3, scope: !11417)
!11427 = !DILocation(line: 1671, column: 22, scope: !11417)
!11428 = !DILocation(line: 1672, column: 1, scope: !11417)
!11429 = distinct !DISubprogram(name: "VEC_iv_use_p_base_truncate", scope: !3, file: !3, line: 215, type: !11430, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11432)
!11430 = !DISubroutineType(types: !11431)
!11431 = !{null, !5952, !6}
!11432 = !{!11433, !11434}
!11433 = !DILocalVariable(name: "vec_", arg: 1, scope: !11429, file: !3, line: 215, type: !5952)
!11434 = !DILocalVariable(name: "size_", arg: 2, scope: !11429, file: !3, line: 215, type: !6)
!11435 = !DILocation(line: 0, scope: !11429)
!11436 = !DILocation(line: 215, column: 1, scope: !11429)
!11437 = !DILocation(line: 215, column: 1, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11429, file: !3, line: 215, column: 1)
!11439 = distinct !DISubprogram(name: "VEC_iv_cand_p_base_truncate", scope: !3, file: !3, line: 219, type: !11440, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11442)
!11440 = !DISubroutineType(types: !11441)
!11441 = !{null, !7243, !6}
!11442 = !{!11443, !11444}
!11443 = !DILocalVariable(name: "vec_", arg: 1, scope: !11439, file: !3, line: 219, type: !7243)
!11444 = !DILocalVariable(name: "size_", arg: 2, scope: !11439, file: !3, line: 219, type: !6)
!11445 = !DILocation(line: 0, scope: !11439)
!11446 = !DILocation(line: 219, column: 1, scope: !11439)
!11447 = !DILocation(line: 219, column: 1, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 219, column: 1)
!11449 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !160, file: !160, line: 182, type: !11450, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11452)
!11450 = !DISubroutineType(types: !11451)
!11451 = !{!659, !3914, !6, !1124}
!11452 = !{!11453, !11454, !11455}
!11453 = !DILocalVariable(name: "vec_", arg: 1, scope: !11449, file: !160, line: 182, type: !3914)
!11454 = !DILocalVariable(name: "ix_", arg: 2, scope: !11449, file: !160, line: 182, type: !6)
!11455 = !DILocalVariable(name: "ptr", arg: 3, scope: !11449, file: !160, line: 182, type: !1124)
!11456 = !DILocation(line: 0, scope: !11449)
!11457 = !DILocation(line: 182, column: 1, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11449, file: !160, line: 182, column: 1)
!11459 = !DILocation(line: 182, column: 1, scope: !11449)
!11460 = !DILocation(line: 182, column: 1, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11458, file: !160, line: 182, column: 1)
!11462 = !DILocation(line: 182, column: 1, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11458, file: !160, line: 182, column: 1)
!11464 = !DILocation(line: 0, scope: !11458)
!11465 = distinct !DISubprogram(name: "VEC_tree_base_truncate", scope: !160, file: !160, line: 182, type: !11466, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11468)
!11466 = !DISubroutineType(types: !11467)
!11467 = !{null, !9080, !6}
!11468 = !{!11469, !11470}
!11469 = !DILocalVariable(name: "vec_", arg: 1, scope: !11465, file: !160, line: 182, type: !9080)
!11470 = !DILocalVariable(name: "size_", arg: 2, scope: !11465, file: !160, line: 182, type: !6)
!11471 = !DILocation(line: 0, scope: !11465)
!11472 = !DILocation(line: 182, column: 1, scope: !11465)
!11473 = !DILocation(line: 182, column: 1, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11465, file: !160, line: 182, column: 1)
!11475 = distinct !DISubprogram(name: "VEC_int_base_iterate", scope: !2169, file: !2169, line: 31, type: !11476, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11480)
!11476 = !DISubroutineType(types: !11477)
!11477 = !{!659, !11478, !6, !2229}
!11478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11479, size: 64)
!11479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2173)
!11480 = !{!11481, !11482, !11483}
!11481 = !DILocalVariable(name: "vec_", arg: 1, scope: !11475, file: !2169, line: 31, type: !11478)
!11482 = !DILocalVariable(name: "ix_", arg: 2, scope: !11475, file: !2169, line: 31, type: !6)
!11483 = !DILocalVariable(name: "ptr", arg: 3, scope: !11475, file: !2169, line: 31, type: !2229)
!11484 = !DILocation(line: 0, scope: !11475)
!11485 = !DILocation(line: 31, column: 1, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11475, file: !2169, line: 31, column: 1)
!11487 = !DILocation(line: 31, column: 1, scope: !11475)
!11488 = !DILocation(line: 31, column: 1, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11486, file: !2169, line: 31, column: 1)
!11490 = !DILocation(line: 31, column: 1, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11486, file: !2169, line: 31, column: 1)
!11492 = !DILocation(line: 0, scope: !11486)
!11493 = distinct !DISubprogram(name: "get_loop", scope: !140, file: !140, line: 417, type: !11494, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11496)
!11494 = !DISubroutineType(types: !11495)
!11495 = !{!1305, !6}
!11496 = !{!11497}
!11497 = !DILocalVariable(name: "num", arg: 1, scope: !11493, file: !140, line: 417, type: !6)
!11498 = !DILocation(line: 0, scope: !11493)
!11499 = !DILocation(line: 419, column: 10, scope: !11493)
!11500 = !DILocation(line: 419, column: 3, scope: !11493)
!11501 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !2169, file: !2169, line: 32, type: !11502, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11505)
!11502 = !DISubroutineType(types: !11503)
!11503 = !{null, !11504}
!11504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!11505 = !{!11506}
!11506 = !DILocalVariable(name: "vec_", arg: 1, scope: !11501, file: !2169, line: 32, type: !11504)
!11507 = !DILocation(line: 0, scope: !11501)
!11508 = !DILocation(line: 32, column: 1, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11501, file: !2169, line: 32, column: 1)
!11510 = !DILocation(line: 32, column: 1, scope: !11501)
!11511 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !160, file: !160, line: 184, type: !11512, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11514)
!11512 = !DISubroutineType(types: !11513)
!11513 = !{null, !9060}
!11514 = !{!11515}
!11515 = !DILocalVariable(name: "vec_", arg: 1, scope: !11511, file: !160, line: 184, type: !9060)
!11516 = !DILocation(line: 0, scope: !11511)
!11517 = !DILocation(line: 184, column: 1, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11511, file: !160, line: 184, column: 1)
!11519 = !DILocation(line: 184, column: 1, scope: !11511)
!11520 = distinct !DISubprogram(name: "VEC_iv_use_p_heap_free", scope: !3, file: !3, line: 216, type: !11521, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11523)
!11521 = !DISubroutineType(types: !11522)
!11522 = !{null, !5932}
!11523 = !{!11524}
!11524 = !DILocalVariable(name: "vec_", arg: 1, scope: !11520, file: !3, line: 216, type: !5932)
!11525 = !DILocation(line: 0, scope: !11520)
!11526 = !DILocation(line: 216, column: 1, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 216, column: 1)
!11528 = !DILocation(line: 216, column: 1, scope: !11520)
!11529 = distinct !DISubprogram(name: "VEC_iv_cand_p_heap_free", scope: !3, file: !3, line: 220, type: !11530, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !137, retainedNodes: !11532)
!11530 = !DISubroutineType(types: !11531)
!11531 = !{null, !7171}
!11532 = !{!11533}
!11533 = !DILocalVariable(name: "vec_", arg: 1, scope: !11529, file: !3, line: 220, type: !7171)
!11534 = !DILocation(line: 0, scope: !11529)
!11535 = !DILocation(line: 220, column: 1, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 220, column: 1)
!11537 = !DILocation(line: 220, column: 1, scope: !11529)
