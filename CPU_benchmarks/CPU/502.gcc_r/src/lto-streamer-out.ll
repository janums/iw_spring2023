; ModuleID = 'lto-streamer-out.bc'
source_filename = "lto-streamer-out.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type { %struct.lto_in_decl_state*, %struct.lto_in_decl_state*, %struct.lto_cgraph_encoder_d*, %struct.htab*, i8*, i8, %struct.htab*, %struct.htab* }
%struct.lto_in_decl_state = type { [7 x %struct.lto_tree_ref_table], %union.tree_node* }
%struct.lto_tree_ref_table = type { %union.tree_node**, i32 }
%struct.lto_cgraph_encoder_d = type { %struct.pointer_map_t*, %struct.VEC_cgraph_node_ptr_heap* }
%struct.VEC_cgraph_node_ptr_heap = type { %struct.VEC_cgraph_node_ptr_base }
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.VEC_lto_out_decl_state_ptr_heap = type { %struct.VEC_lto_out_decl_state_ptr_base }
%struct.VEC_lto_out_decl_state_ptr_base = type { i32, i32, [1 x %struct.lto_out_decl_state*] }
%struct.lto_out_decl_state = type { [7 x %struct.lto_tree_ref_encoder], %struct.lto_cgraph_encoder_d*, %union.tree_node* }
%struct.lto_tree_ref_encoder = type { %struct.htab*, i32, %struct.VEC_tree_heap* }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.VEC_alias_pair_gc = type { %struct.VEC_alias_pair_base }
%struct.VEC_alias_pair_base = type { i32, i32, [1 x %struct.alias_pair] }
%struct.alias_pair = type { %union.tree_node*, %union.tree_node* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.output_block = type { i32, %struct.lto_out_decl_state*, %struct.lto_output_stream*, %struct.lto_output_stream*, %struct.lto_output_stream*, %struct.htab*, %struct.cgraph_node*, i8*, i32, i32, i8, %struct.lto_streamer_cache_d* }
%struct.lto_output_stream = type { %struct.lto_char_ptr_base*, %struct.lto_char_ptr_base*, i8*, i32, i32, i32 }
%struct.lto_char_ptr_base = type { i8* }
%struct.lto_streamer_cache_d = type { %struct.htab*, i32, %struct.VEC_tree_gc*, %struct.VEC_unsigned_heap* }
%struct.VEC_unsigned_heap = type { %struct.VEC_unsigned_base }
%struct.VEC_unsigned_base = type { i32, i32, [1 x i32] }
%struct.bitpack_d = type { i64, i64, %struct.VEC_bitpack_word_t_heap* }
%struct.VEC_bitpack_word_t_heap = type { %struct.VEC_bitpack_word_t_base }
%struct.VEC_bitpack_word_t_base = type { i32, i32, [1 x i64] }
%struct.lto_function_header = type { %struct.lto_header, i32, i32, i32, i32, i32, i32, i32 }
%struct.lto_header = type { i16, i16, i32 }
%struct.cgraph_node_set_iterator = type { %struct.cgraph_node_set_def*, i32 }
%struct.lto_decl_header = type { %struct.lto_header, i32, i32, i32, i32 }
%struct.string_slot = type { i8*, i32, i32 }
%struct.real_value = type { i32, [3 x i64] }
%struct.fixed_value = type { %struct.double_int, i32 }
%struct.double_int = type { i64, i64 }
%struct.tree_label_decl = type { %struct.tree_decl_with_rtl, i32, i32 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }
%struct.expanded_location = type { i8*, i32, i32, i8 }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.eh_catch_d = type { %struct.eh_catch_d*, %struct.eh_catch_d*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.gimple_statement_asm = type { %struct.gimple_statement_with_memory_ops_base, i8*, i8, i8, i8, i8, [1 x %union.tree_node*] }
%struct.gimple_statement_with_memory_ops_base = type { %struct.gimple_statement_with_ops_base, %union.tree_node*, %union.tree_node* }
%struct.gimple_statement_with_ops_base = type { %struct.gimple_statement_base, %struct.def_optype_d*, %struct.use_optype_d* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@flag_wpa = external dso_local local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [15 x i8] c"lto_gimple_out\00", align 1
@pass_ipa_lto_gimple_out = dso_local local_unnamed_addr global %struct.ipa_opt_pass_d { %struct.opt_pass { i32 3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i32 0, i32 0), i8 ()* @gate_lto_out, i32 ()* null, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 1 }, void ()* null, void (%struct.cgraph_node_set_def*)* @lto_output, void ()* null, void (%struct.cgraph_node*)* null, void (%struct.cgraph_node*, %union.gimple_statement_d**)* null, i32 0, i32 (%struct.cgraph_node*)* null, void (%struct.varpool_node*)* null }, align 8, !dbg !0
@.str.1 = private unnamed_addr constant [14 x i8] c"lto_decls_out\00", align 1
@pass_ipa_lto_finish_out = dso_local local_unnamed_addr global %struct.ipa_opt_pass_d { %struct.opt_pass { i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i8 ()* @gate_lto_out, i32 ()* null, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0 }, void ()* null, void (%struct.cgraph_node_set_def*)* @produce_asm_for_decls, void ()* null, void (%struct.cgraph_node*)* null, void (%struct.cgraph_node*, %union.gimple_statement_d**)* null, i32 0, i32 (%struct.cgraph_node*)* null, void (%struct.varpool_node*)* null }, align 8, !dbg !2467
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.2 = private unnamed_addr constant [19 x i8] c"lto-streamer-out.c\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str.4 = private unnamed_addr constant [89 x i8] c"gimple bytecode streams do not support machine specific builtin functions on this target\00", align 1
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@.str.5 = private unnamed_addr constant [49 x i8] c"tree code %qs is not supported in gimple streams\00", align 1
@tree_code_name = external dso_local local_unnamed_addr constant [0 x i8*], align 8
@.str.6 = private unnamed_addr constant [66 x i8] c"gimple bytecode streams do not support the optimization attribute\00", align 1
@.str.7 = private unnamed_addr constant [60 x i8] c"gimple bytecode streams do not support the target attribute\00", align 1
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.8 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.9 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.10 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@lto_function_decl_states = external dso_local global %struct.VEC_lto_out_decl_state_ptr_heap*, align 8
@varpool_nodes_queue = external dso_local local_unnamed_addr global %struct.varpool_node*, align 8
@alias_pairs = external dso_local local_unnamed_addr global %struct.VEC_alias_pair_gc*, align 8
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.11 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2473 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2486, metadata !DIExpression()), !dbg !2488
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2487, metadata !DIExpression()), !dbg !2488
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2489
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2490
  ret i32 %call, !dbg !2491
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2492 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2496
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2497
  ret i32 %call, !dbg !2498
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2499 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2552, metadata !DIExpression()), !dbg !2553
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2554
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2554
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2554
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2554
  %cmp = icmp uge i8* %0, %1, !dbg !2554
  %conv1 = zext i1 %cmp to i64, !dbg !2554
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2554
  %tobool = icmp eq i64 %expval, 0, !dbg !2554
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2554

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2554
  br label %cond.end, !dbg !2554

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2554
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2554
  %2 = load i8, i8* %0, align 1, !dbg !2554
  %conv3 = zext i8 %2 to i32, !dbg !2554
  br label %cond.end, !dbg !2554

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2554
  ret i32 %cond, !dbg !2555
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2556 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2558, metadata !DIExpression()), !dbg !2559
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2560
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2560
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2560
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2560
  %cmp = icmp uge i8* %0, %1, !dbg !2560
  %conv1 = zext i1 %cmp to i64, !dbg !2560
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2560
  %tobool = icmp eq i64 %expval, 0, !dbg !2560
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2560

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2560
  br label %cond.end, !dbg !2560

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2560
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2560
  %2 = load i8, i8* %0, align 1, !dbg !2560
  %conv3 = zext i8 %2 to i32, !dbg !2560
  br label %cond.end, !dbg !2560

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2560
  ret i32 %cond, !dbg !2561
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2562 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2563
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2563
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2563
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2563
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2563
  %cmp = icmp uge i8* %1, %2, !dbg !2563
  %conv1 = zext i1 %cmp to i64, !dbg !2563
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2563
  %tobool = icmp eq i64 %expval, 0, !dbg !2563
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2563

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2563
  br label %cond.end, !dbg !2563

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2563
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2563
  %3 = load i8, i8* %1, align 1, !dbg !2563
  %conv3 = zext i8 %3 to i32, !dbg !2563
  br label %cond.end, !dbg !2563

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2563
  ret i32 %cond, !dbg !2564
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2565 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2569, metadata !DIExpression()), !dbg !2570
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2571
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2572
  ret i32 %call, !dbg !2573
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2574 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2578, metadata !DIExpression()), !dbg !2580
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2579, metadata !DIExpression()), !dbg !2580
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2581
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2581
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2581
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2581
  %cmp = icmp uge i8* %0, %1, !dbg !2581
  %conv1 = zext i1 %cmp to i64, !dbg !2581
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2581
  %tobool = icmp eq i64 %expval, 0, !dbg !2581
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2581

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2581
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2581
  br label %cond.end, !dbg !2581

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2581
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2581
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2581
  store i8 %conv2, i8* %0, align 1, !dbg !2581
  %conv6 = and i32 %__c, 255, !dbg !2581
  br label %cond.end, !dbg !2581

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2581
  ret i32 %cond, !dbg !2582
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2583 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2585, metadata !DIExpression()), !dbg !2587
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2586, metadata !DIExpression()), !dbg !2587
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2588
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2588
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2588
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2588
  %cmp = icmp uge i8* %0, %1, !dbg !2588
  %conv1 = zext i1 %cmp to i64, !dbg !2588
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2588
  %tobool = icmp eq i64 %expval, 0, !dbg !2588
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2588

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2588
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2588
  br label %cond.end, !dbg !2588

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2588
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2588
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2588
  store i8 %conv2, i8* %0, align 1, !dbg !2588
  %conv6 = and i32 %__c, 255, !dbg !2588
  br label %cond.end, !dbg !2588

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2588
  ret i32 %cond, !dbg !2589
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2590 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2592, metadata !DIExpression()), !dbg !2593
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2594
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2594
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2594
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2594
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2594
  %cmp = icmp uge i8* %1, %2, !dbg !2594
  %conv1 = zext i1 %cmp to i64, !dbg !2594
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2594
  %tobool = icmp eq i64 %expval, 0, !dbg !2594
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2594

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2594
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2594
  br label %cond.end, !dbg !2594

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2594
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2594
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2594
  store i8 %conv4, i8* %1, align 1, !dbg !2594
  %conv6 = and i32 %__c, 255, !dbg !2594
  br label %cond.end, !dbg !2594

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2594
  ret i32 %cond, !dbg !2595
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2596 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2602, metadata !DIExpression()), !dbg !2605
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2603, metadata !DIExpression()), !dbg !2605
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2604, metadata !DIExpression()), !dbg !2605
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2606
  ret i64 %call, !dbg !2607
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2608 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2610, metadata !DIExpression()), !dbg !2611
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2612
  %0 = load i32, i32* %_flags, align 8, !dbg !2612
  %and = lshr i32 %0, 4, !dbg !2612
  %and.lobit = and i32 %and, 1, !dbg !2612
  ret i32 %and.lobit, !dbg !2613
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2614 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2616, metadata !DIExpression()), !dbg !2617
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2618
  %0 = load i32, i32* %_flags, align 8, !dbg !2618
  %and = lshr i32 %0, 5, !dbg !2618
  %and.lobit = and i32 %and, 1, !dbg !2618
  ret i32 %and.lobit, !dbg !2619
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2620 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2623, metadata !DIExpression()), !dbg !2624
  %__c.off = add i32 %__c, 128, !dbg !2625
  %0 = icmp ult i32 %__c.off, 384, !dbg !2625
  br i1 %0, label %cond.true, label %cond.end, !dbg !2625

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2626
  %1 = load i32*, i32** %call, align 8, !dbg !2627
  %idxprom = sext i32 %__c to i64, !dbg !2628
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2628
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2628
  br label %cond.end, !dbg !2629

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2629
  ret i32 %cond, !dbg !2630
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2631 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2633, metadata !DIExpression()), !dbg !2634
  %__c.off = add i32 %__c, 128, !dbg !2635
  %0 = icmp ult i32 %__c.off, 384, !dbg !2635
  br i1 %0, label %cond.true, label %cond.end, !dbg !2635

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2636
  %1 = load i32*, i32** %call, align 8, !dbg !2637
  %idxprom = sext i32 %__c to i64, !dbg !2638
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2638
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2638
  br label %cond.end, !dbg !2639

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2639
  ret i32 %cond, !dbg !2640
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2641 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2646, metadata !DIExpression()), !dbg !2647
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2648
  %conv = trunc i64 %call to i32, !dbg !2649
  ret i32 %conv, !dbg !2650
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2651 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2655, metadata !DIExpression()), !dbg !2656
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2657
  ret i64 %call, !dbg !2658
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2659 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2664, metadata !DIExpression()), !dbg !2665
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2666
  ret i64 %call, !dbg !2667
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2668 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2674, metadata !DIExpression()), !dbg !2684
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2675, metadata !DIExpression()), !dbg !2684
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2676, metadata !DIExpression()), !dbg !2684
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2677, metadata !DIExpression()), !dbg !2684
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2678, metadata !DIExpression()), !dbg !2684
  call void @llvm.dbg.value(metadata i64 0, metadata !2679, metadata !DIExpression()), !dbg !2684
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2680, metadata !DIExpression()), !dbg !2684
  br label %while.cond, !dbg !2685

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2686
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2684
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2680, metadata !DIExpression()), !dbg !2684
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2679, metadata !DIExpression()), !dbg !2684
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2687
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2685

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2688
  %div = lshr i64 %add, 1, !dbg !2690
  call void @llvm.dbg.value(metadata i64 %div, metadata !2681, metadata !DIExpression()), !dbg !2684
  %mul = mul i64 %div, %__size, !dbg !2691
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2692
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2682, metadata !DIExpression()), !dbg !2684
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2693
  call void @llvm.dbg.value(metadata i32 %call, metadata !2683, metadata !DIExpression()), !dbg !2684
  %cmp1 = icmp slt i32 %call, 0, !dbg !2694
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2696

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2697
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2699

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2700
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2679, metadata !DIExpression()), !dbg !2684
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2684
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2684
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2680, metadata !DIExpression()), !dbg !2684
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2679, metadata !DIExpression()), !dbg !2684
  br label %while.cond, !dbg !2685, !llvm.loop !2701

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2684
  ret i8* %retval.0, !dbg !2703
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2704 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2710, metadata !DIExpression()), !dbg !2711
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2712
  ret double %call, !dbg !2713
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2714 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2723, metadata !DIExpression()), !dbg !2726
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2724, metadata !DIExpression()), !dbg !2726
  call void @llvm.dbg.value(metadata i32 %base, metadata !2725, metadata !DIExpression()), !dbg !2726
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2727
  ret i64 %call, !dbg !2728
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2729 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2735, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2736, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 %base, metadata !2737, metadata !DIExpression()), !dbg !2738
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2739
  ret i64 %call, !dbg !2740
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2741 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2752, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2753, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.value(metadata i32 %base, metadata !2754, metadata !DIExpression()), !dbg !2755
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2756
  ret i64 %call, !dbg !2757
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2758 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2762, metadata !DIExpression()), !dbg !2765
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2763, metadata !DIExpression()), !dbg !2765
  call void @llvm.dbg.value(metadata i32 %base, metadata !2764, metadata !DIExpression()), !dbg !2765
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2766
  ret i64 %call, !dbg !2767
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2768 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2808, metadata !DIExpression()), !dbg !2810
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2809, metadata !DIExpression()), !dbg !2810
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2811
  ret i32 %call, !dbg !2812
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2813 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2815, metadata !DIExpression()), !dbg !2817
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2816, metadata !DIExpression()), !dbg !2817
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2818
  ret i32 %call, !dbg !2819
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2820 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2824, metadata !DIExpression()), !dbg !2826
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2825, metadata !DIExpression()), !dbg !2826
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2827
  ret i32 %call, !dbg !2828
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2829 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2833, metadata !DIExpression()), !dbg !2837
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2834, metadata !DIExpression()), !dbg !2837
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2835, metadata !DIExpression()), !dbg !2837
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2836, metadata !DIExpression()), !dbg !2837
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2838
  ret i32 %call, !dbg !2839
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2840 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2844, metadata !DIExpression()), !dbg !2847
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2845, metadata !DIExpression()), !dbg !2847
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2846, metadata !DIExpression()), !dbg !2847
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2846, metadata !DIExpression(DW_OP_deref)), !dbg !2847
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2848
  ret i32 %call, !dbg !2849
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2850 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2854, metadata !DIExpression()), !dbg !2858
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2855, metadata !DIExpression()), !dbg !2858
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2856, metadata !DIExpression()), !dbg !2858
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2857, metadata !DIExpression()), !dbg !2858
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2857, metadata !DIExpression(DW_OP_deref)), !dbg !2858
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2859
  ret i32 %call, !dbg !2860
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2861 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2885, metadata !DIExpression()), !dbg !2887
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2886, metadata !DIExpression()), !dbg !2887
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2888
  ret i32 %call, !dbg !2889
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2890 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2892, metadata !DIExpression()), !dbg !2894
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2893, metadata !DIExpression()), !dbg !2894
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2895
  ret i32 %call, !dbg !2896
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2897 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2901, metadata !DIExpression()), !dbg !2903
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2902, metadata !DIExpression()), !dbg !2903
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2904
  ret i32 %call, !dbg !2905
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2906 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2910, metadata !DIExpression()), !dbg !2914
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2911, metadata !DIExpression()), !dbg !2914
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2912, metadata !DIExpression()), !dbg !2914
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2913, metadata !DIExpression()), !dbg !2914
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2915
  ret i32 %call, !dbg !2916
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.output_block* @create_output_block(i32 %section_type) local_unnamed_addr #5 !dbg !2917 {
entry:
  call void @llvm.dbg.value(metadata i32 %section_type, metadata !2921, metadata !DIExpression()), !dbg !2923
  %call = tail call i8* @xcalloc(i64 1, i64 88) #6, !dbg !2924
  %0 = bitcast i8* %call to %struct.output_block*, !dbg !2924
  call void @llvm.dbg.value(metadata %struct.output_block* %0, metadata !2922, metadata !DIExpression()), !dbg !2923
  %section_type1 = bitcast i8* %call to i32*, !dbg !2925
  store i32 %section_type, i32* %section_type1, align 8, !dbg !2926
  %call2 = tail call %struct.lto_out_decl_state* @lto_get_out_decl_state() #6, !dbg !2927
  %decl_state = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2928
  %1 = bitcast i8* %decl_state to %struct.lto_out_decl_state**, !dbg !2928
  store %struct.lto_out_decl_state* %call2, %struct.lto_out_decl_state** %1, align 8, !dbg !2929
  %call3 = tail call i8* @xcalloc(i64 1, i64 40) #6, !dbg !2930
  %main_stream = getelementptr inbounds i8, i8* %call, i64 16, !dbg !2931
  %2 = bitcast i8* %main_stream to i8**, !dbg !2932
  store i8* %call3, i8** %2, align 8, !dbg !2932
  %call4 = tail call i8* @xcalloc(i64 1, i64 40) #6, !dbg !2933
  %string_stream = getelementptr inbounds i8, i8* %call, i64 24, !dbg !2934
  %3 = bitcast i8* %string_stream to i8**, !dbg !2935
  store i8* %call4, i8** %3, align 8, !dbg !2935
  %call5 = tail call %struct.lto_streamer_cache_d* @lto_streamer_cache_create() #6, !dbg !2936
  %writer_cache = getelementptr inbounds i8, i8* %call, i64 80, !dbg !2937
  %4 = bitcast i8* %writer_cache to %struct.lto_streamer_cache_d**, !dbg !2937
  store %struct.lto_streamer_cache_d* %call5, %struct.lto_streamer_cache_d** %4, align 8, !dbg !2938
  %cmp = icmp eq i32 %section_type, 1, !dbg !2939
  br i1 %cmp, label %if.then, label %if.end, !dbg !2941

if.then:                                          ; preds = %entry
  %call6 = tail call i8* @xcalloc(i64 1, i64 40) #6, !dbg !2942
  %cfg_stream = getelementptr inbounds i8, i8* %call, i64 32, !dbg !2943
  %5 = bitcast i8* %cfg_stream to i8**, !dbg !2944
  store i8* %call6, i8** %5, align 8, !dbg !2944
  br label %if.end, !dbg !2945

if.end:                                           ; preds = %if.then, %entry
  tail call fastcc void @clear_line_info(%struct.output_block* %0) #7, !dbg !2946
  %call7 = tail call %struct.htab* @htab_create(i64 37, i32 (i8*)* nonnull @hash_string_slot_node, i32 (i8*, i8*)* nonnull @eq_string_slot_node, void (i8*)* nonnull @string_slot_free) #6, !dbg !2947
  %string_hash_table = getelementptr inbounds i8, i8* %call, i64 40, !dbg !2948
  %6 = bitcast i8* %string_hash_table to %struct.htab**, !dbg !2948
  store %struct.htab* %call7, %struct.htab** %6, align 8, !dbg !2949
  ret %struct.output_block* %0, !dbg !2950
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local %struct.lto_out_decl_state* @lto_get_out_decl_state() local_unnamed_addr #2

declare dso_local %struct.lto_streamer_cache_d* @lto_streamer_cache_create() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_line_info(%struct.output_block* %ob) unnamed_addr #5 !dbg !2951 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !2955, metadata !DIExpression()), !dbg !2956
  %current_file = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 7, !dbg !2957
  store i8* null, i8** %current_file, align 8, !dbg !2958
  %current_line = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 8, !dbg !2959
  store i32 0, i32* %current_line, align 8, !dbg !2960
  %current_col = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 9, !dbg !2961
  store i32 0, i32* %current_col, align 4, !dbg !2962
  ret void, !dbg !2963
}

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @hash_string_slot_node(i8* %p) #5 !dbg !2964 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !2966, metadata !DIExpression()), !dbg !2968
  call void @llvm.dbg.value(metadata i8* %p, metadata !2967, metadata !DIExpression()), !dbg !2968
  %s = bitcast i8* %p to i8**, !dbg !2969
  %0 = load i8*, i8** %s, align 8, !dbg !2969
  %call = tail call i32 @htab_hash_string(i8* %0) #6, !dbg !2970
  ret i32 %call, !dbg !2971
}

; Function Attrs: nounwind uwtable
define internal i32 @eq_string_slot_node(i8* %p1, i8* %p2) #5 !dbg !2972 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !2974, metadata !DIExpression()), !dbg !2981
  call void @llvm.dbg.value(metadata i8* %p2, metadata !2975, metadata !DIExpression()), !dbg !2981
  call void @llvm.dbg.value(metadata i8* %p1, metadata !2976, metadata !DIExpression()), !dbg !2981
  call void @llvm.dbg.value(metadata i8* %p2, metadata !2977, metadata !DIExpression()), !dbg !2981
  %len = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !2982
  %0 = bitcast i8* %len to i32*, !dbg !2982
  %1 = load i32, i32* %0, align 8, !dbg !2982
  %len1 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !2983
  %2 = bitcast i8* %len1 to i32*, !dbg !2983
  %3 = load i32, i32* %2, align 8, !dbg !2983
  %cmp = icmp eq i32 %1, %3, !dbg !2984
  br i1 %cmp, label %for.cond.preheader, label %cleanup12, !dbg !2985

for.cond.preheader:                               ; preds = %entry
  %s = bitcast i8* %p1 to i8**, !dbg !2986
  %s4 = bitcast i8* %p2 to i8**, !dbg !2990
  %4 = sext i32 %1 to i64, !dbg !2991
  br label %for.cond, !dbg !2991

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !2992
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2978, metadata !DIExpression()), !dbg !2993
  %cmp3 = icmp slt i64 %indvars.iv, %4, !dbg !2994
  br i1 %cmp3, label %for.body, label %cleanup12.loopexit, !dbg !2991

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %s, align 8, !dbg !2986
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %indvars.iv, !dbg !2995
  %6 = load i8, i8* %arrayidx, align 1, !dbg !2995
  %7 = load i8*, i8** %s4, align 8, !dbg !2996
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 %indvars.iv, !dbg !2997
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !2997
  %cmp8 = icmp eq i8 %6, %8, !dbg !2998
  br i1 %cmp8, label %for.inc, label %cleanup12.loopexit, !dbg !2999

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3000
  call void @llvm.dbg.value(metadata i32 undef, metadata !2978, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2993
  br label %for.cond, !dbg !3001, !llvm.loop !3002

cleanup12.loopexit:                               ; preds = %for.cond, %for.body
  %retval.1.ph = phi i32 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup12, !dbg !3004

cleanup12:                                        ; preds = %cleanup12.loopexit, %entry
  %retval.1 = phi i32 [ 0, %entry ], [ %retval.1.ph, %cleanup12.loopexit ], !dbg !2981
  ret i32 %retval.1, !dbg !3004
}

; Function Attrs: nounwind uwtable
define internal void @string_slot_free(i8* %p) #5 !dbg !3005 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !3007, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i8* %p, metadata !3008, metadata !DIExpression()), !dbg !3009
  %s = bitcast i8* %p to i8**, !dbg !3010
  %0 = load i8*, i8** %s, align 8, !dbg !3010
  tail call void @free(i8* %0) #6, !dbg !3011
  tail call void @free(i8* %p) #6, !dbg !3012
  ret void, !dbg !3013
}

; Function Attrs: nounwind uwtable
define dso_local void @destroy_output_block(%struct.output_block* %ob) local_unnamed_addr #5 !dbg !3014 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3016, metadata !DIExpression()), !dbg !3018
  %section_type1 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 0, !dbg !3019
  %0 = load i32, i32* %section_type1, align 8, !dbg !3019
  call void @llvm.dbg.value(metadata i32 %0, metadata !3017, metadata !DIExpression()), !dbg !3018
  %string_hash_table = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 5, !dbg !3020
  %1 = load %struct.htab*, %struct.htab** %string_hash_table, align 8, !dbg !3020
  tail call void @htab_delete(%struct.htab* %1) #6, !dbg !3021
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3022
  %2 = bitcast %struct.lto_output_stream** %main_stream to i8**, !dbg !3022
  %3 = load i8*, i8** %2, align 8, !dbg !3022
  tail call void @free(i8* %3) #6, !dbg !3023
  %string_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 3, !dbg !3024
  %4 = bitcast %struct.lto_output_stream** %string_stream to i8**, !dbg !3024
  %5 = load i8*, i8** %4, align 8, !dbg !3024
  tail call void @free(i8* %5) #6, !dbg !3025
  %cmp = icmp eq i32 %0, 1, !dbg !3026
  br i1 %cmp, label %if.then, label %if.end, !dbg !3028

if.then:                                          ; preds = %entry
  %cfg_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 4, !dbg !3029
  %6 = bitcast %struct.lto_output_stream** %cfg_stream to i8**, !dbg !3029
  %7 = load i8*, i8** %6, align 8, !dbg !3029
  tail call void @free(i8* %7) #6, !dbg !3030
  br label %if.end, !dbg !3030

if.end:                                           ; preds = %if.then, %entry
  %writer_cache = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 11, !dbg !3031
  %8 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %writer_cache, align 8, !dbg !3031
  tail call void @lto_streamer_cache_delete(%struct.lto_streamer_cache_d* %8) #6, !dbg !3032
  %9 = bitcast %struct.output_block* %ob to i8*, !dbg !3033
  tail call void @free(i8* %9) #6, !dbg !3034
  ret void, !dbg !3035
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local void @lto_streamer_cache_delete(%struct.lto_streamer_cache_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @lto_output_bitpack(%struct.lto_output_stream* %s, %struct.bitpack_d* %bp) local_unnamed_addr #5 !dbg !3036 {
entry:
  %v = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %s, metadata !3058, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !3059, metadata !DIExpression()), !dbg !3062
  %0 = bitcast i64* %v to i8*, !dbg !3063
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3063
  %values = getelementptr inbounds %struct.bitpack_d, %struct.bitpack_d* %bp, i64 0, i32 2, !dbg !3064
  %1 = load %struct.VEC_bitpack_word_t_heap*, %struct.VEC_bitpack_word_t_heap** %values, align 8, !dbg !3064
  %tobool = icmp eq %struct.VEC_bitpack_word_t_heap* %1, null, !dbg !3064
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3064

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_bitpack_word_t_heap, %struct.VEC_bitpack_word_t_heap* %1, i64 0, i32 0, !dbg !3064
  br label %cond.end, !dbg !3064

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_bitpack_word_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3064
  %call = tail call fastcc i32 @VEC_bitpack_word_t_base_length(%struct.VEC_bitpack_word_t_base* %cond) #7, !dbg !3064
  %conv = zext i32 %call to i64, !dbg !3064
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %s, i64 %conv) #6, !dbg !3065
  call void @llvm.dbg.value(metadata i32 0, metadata !3060, metadata !DIExpression()), !dbg !3062
  br label %for.cond, !dbg !3066

for.cond:                                         ; preds = %for.body, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.body ], !dbg !3068
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3060, metadata !DIExpression()), !dbg !3062
  %2 = load %struct.VEC_bitpack_word_t_heap*, %struct.VEC_bitpack_word_t_heap** %values, align 8, !dbg !3069
  %tobool3 = icmp eq %struct.VEC_bitpack_word_t_heap* %2, null, !dbg !3069
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !3069

cond.true4:                                       ; preds = %for.cond
  %base6 = getelementptr inbounds %struct.VEC_bitpack_word_t_heap, %struct.VEC_bitpack_word_t_heap* %2, i64 0, i32 0, !dbg !3069
  br label %cond.end8, !dbg !3069

cond.end8:                                        ; preds = %for.cond, %cond.true4
  %cond9 = phi %struct.VEC_bitpack_word_t_base* [ %base6, %cond.true4 ], [ null, %for.cond ], !dbg !3069
  call void @llvm.dbg.value(metadata i64* %v, metadata !3061, metadata !DIExpression(DW_OP_deref)), !dbg !3062
  %call10 = call fastcc i32 @VEC_bitpack_word_t_base_iterate(%struct.VEC_bitpack_word_t_base* %cond9, i32 %i.0, i64* nonnull %v) #7, !dbg !3069
  %tobool11 = icmp eq i32 %call10, 0, !dbg !3071
  br i1 %tobool11, label %for.end, label %for.body, !dbg !3071

for.body:                                         ; preds = %cond.end8
  %3 = load i64, i64* %v, align 8, !dbg !3072
  call void @llvm.dbg.value(metadata i64 %3, metadata !3061, metadata !DIExpression()), !dbg !3062
  call void @lto_output_uleb128_stream(%struct.lto_output_stream* %s, i64 %3) #6, !dbg !3073
  %inc = add i32 %i.0, 1, !dbg !3074
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3060, metadata !DIExpression()), !dbg !3062
  br label %for.cond, !dbg !3075, !llvm.loop !3076

for.end:                                          ; preds = %cond.end8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3078
  ret void, !dbg !3078
}

declare dso_local void @lto_output_uleb128_stream(%struct.lto_output_stream*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_bitpack_word_t_base_length(%struct.VEC_bitpack_word_t_base* %vec_) unnamed_addr #0 !dbg !3079 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitpack_word_t_base* %vec_, metadata !3085, metadata !DIExpression()), !dbg !3086
  %tobool = icmp eq %struct.VEC_bitpack_word_t_base* %vec_, null, !dbg !3087
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3087

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_bitpack_word_t_base, %struct.VEC_bitpack_word_t_base* %vec_, i64 0, i32 0, !dbg !3087
  %0 = load i32, i32* %num, align 8, !dbg !3087
  br label %cond.end, !dbg !3087

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3087
  ret i32 %cond, !dbg !3087
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_bitpack_word_t_base_iterate(%struct.VEC_bitpack_word_t_base* %vec_, i32 %ix_, i64* %ptr) unnamed_addr #0 !dbg !3088 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitpack_word_t_base* %vec_, metadata !3093, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3094, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i64* %ptr, metadata !3095, metadata !DIExpression()), !dbg !3096
  %tobool = icmp eq %struct.VEC_bitpack_word_t_base* %vec_, null, !dbg !3097
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3097

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_bitpack_word_t_base, %struct.VEC_bitpack_word_t_base* %vec_, i64 0, i32 0, !dbg !3097
  %0 = load i32, i32* %num, align 8, !dbg !3097
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3097
  br i1 %cmp, label %if.then, label %if.else, !dbg !3099

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3100
  %arrayidx = getelementptr inbounds %struct.VEC_bitpack_word_t_base, %struct.VEC_bitpack_word_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3100
  %1 = load i64, i64* %arrayidx, align 8, !dbg !3100
  br label %return, !dbg !3100

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3102

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i64 [ 0, %if.else ], [ %1, %if.then ], !dbg !3104
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3104
  store i64 %storemerge, i64* %ptr, align 8, !dbg !3104
  ret i32 %retval.0, !dbg !3099
}

; Function Attrs: nounwind uwtable
define dso_local void @lto_output_tree(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) local_unnamed_addr #5 !dbg !3105 {
entry:
  %ix = alloca i32, align 4
  %offset = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3109, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3110, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !3111, metadata !DIExpression()), !dbg !3115
  %0 = bitcast i32* %ix to i8*, !dbg !3116
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3116
  %1 = bitcast i32* %offset to i8*, !dbg !3117
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3117
  %cmp = icmp eq %union.tree_node* %expr, null, !dbg !3118
  br i1 %cmp, label %if.then, label %if.end, !dbg !3120

if.then:                                          ; preds = %entry
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !3121
  br label %cleanup, !dbg !3123

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3124
  %bf.load = load i64, i64* %2, align 8, !dbg !3124
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3126
  %cmp1 = icmp eq i64 %bf.cast1, 23, !dbg !3126
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3127

if.then2:                                         ; preds = %if.end
  tail call fastcc void @lto_output_integer_cst(%struct.output_block* %ob, %union.tree_node* nonnull %expr, i8 zeroext %ref_p) #7, !dbg !3128
  br label %cleanup, !dbg !3130

if.end3:                                          ; preds = %if.end
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3131
  %3 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3131
  %total_size = getelementptr inbounds %struct.lto_output_stream, %struct.lto_output_stream* %3, i64 0, i32 5, !dbg !3132
  %4 = load i32, i32* %total_size, align 8, !dbg !3132
  call void @llvm.dbg.value(metadata i32 %4, metadata !3114, metadata !DIExpression()), !dbg !3115
  store i32 %4, i32* %offset, align 4, !dbg !3133
  %writer_cache = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 11, !dbg !3134
  %5 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %writer_cache, align 8, !dbg !3134
  call void @llvm.dbg.value(metadata i32* %ix, metadata !3112, metadata !DIExpression(DW_OP_deref)), !dbg !3115
  call void @llvm.dbg.value(metadata i32* %offset, metadata !3114, metadata !DIExpression(DW_OP_deref)), !dbg !3115
  %call = call zeroext i8 @lto_streamer_cache_insert(%struct.lto_streamer_cache_d* %5, %union.tree_node* nonnull %expr, i32* nonnull %ix, i32* nonnull %offset) #6, !dbg !3135
  call void @llvm.dbg.value(metadata i8 %call, metadata !3113, metadata !DIExpression()), !dbg !3115
  %tobool = icmp eq i8 %call, 0, !dbg !3136
  br i1 %tobool, label %if.else, label %if.then4, !dbg !3138

if.then4:                                         ; preds = %if.end3
  call fastcc void @output_record_start(%struct.output_block* %ob, i32 236) #7, !dbg !3139
  %6 = load i32, i32* %ix, align 4, !dbg !3141
  call void @llvm.dbg.value(metadata i32 %6, metadata !3112, metadata !DIExpression()), !dbg !3115
  %conv = sext i32 %6 to i64, !dbg !3141
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !3142
  %bf.load6 = load i64, i64* %2, align 8, !dbg !3143
  %7 = trunc i64 %bf.load6 to i32, !dbg !3143
  %bf.cast8 = and i32 %7, 65535, !dbg !3143
  %call9 = call fastcc i32 @lto_tree_code_to_tag(i32 %bf.cast8) #7, !dbg !3144
  %conv10 = zext i32 %call9 to i64, !dbg !3144
  call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv10) #7, !dbg !3145
  %8 = load i32, i32* %offset, align 4, !dbg !3146
  call void @llvm.dbg.value(metadata i32 %8, metadata !3114, metadata !DIExpression()), !dbg !3115
  %conv11 = zext i32 %8 to i64, !dbg !3146
  call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv11) #7, !dbg !3147
  br label %cleanup, !dbg !3148

if.else:                                          ; preds = %if.end3
  %call12 = call fastcc zeroext i8 @lto_stream_as_builtin_p(%union.tree_node* nonnull %expr) #7, !dbg !3149
  %tobool13 = icmp eq i8 %call12, 0, !dbg !3149
  %9 = load i32, i32* %ix, align 4, !dbg !3151
  call void @llvm.dbg.value(metadata i32 %9, metadata !3112, metadata !DIExpression()), !dbg !3115
  br i1 %tobool13, label %if.else15, label %if.then14, !dbg !3152

if.then14:                                        ; preds = %if.else
  call fastcc void @lto_output_builtin_tree(%struct.output_block* %ob, %union.tree_node* nonnull %expr, i32 %9) #7, !dbg !3153
  br label %cleanup, !dbg !3155

if.else15:                                        ; preds = %if.else
  call fastcc void @lto_write_tree(%struct.output_block* %ob, %union.tree_node* nonnull %expr, i8 zeroext %ref_p, i32 %9) #7, !dbg !3156
  br label %cleanup

cleanup:                                          ; preds = %if.then4, %if.else15, %if.then14, %if.then2, %if.then
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3158
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3158
  ret void, !dbg !3158
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_zero(%struct.output_block* %ob) unnamed_addr #5 !dbg !3159 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3161, metadata !DIExpression()), !dbg !3162
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3163
  %0 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3163
  tail call void @lto_output_1_stream(%struct.lto_output_stream* %0, i8 signext 0) #6, !dbg !3164
  ret void, !dbg !3165
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_integer_cst(%struct.output_block* %ob, %union.tree_node* %cst, i8 zeroext %ref_p) unnamed_addr #5 !dbg !3166 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3168, metadata !DIExpression()), !dbg !3171
  call void @llvm.dbg.value(metadata %union.tree_node* %cst, metadata !3169, metadata !DIExpression()), !dbg !3171
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !3170, metadata !DIExpression()), !dbg !3171
  %call = tail call fastcc i32 @lto_tree_code_to_tag(i32 23) #7, !dbg !3172
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 %call) #7, !dbg !3173
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %cst, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3174
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3174
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %0, i8 zeroext %ref_p) #7, !dbg !3175
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3176
  %1 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3176
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %cst, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3177
  %bf.load = load i64, i64* %2, align 8, !dbg !3177
  %bf.cast = and i64 %bf.load, 65535, !dbg !3177
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3177
  %3 = load i32, i32* %arrayidx, align 4, !dbg !3177
  %cmp = icmp eq i32 %3, 1, !dbg !3177
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3177

land.rhs:                                         ; preds = %entry
  %bf.lshr = lshr i64 %bf.load, 27, !dbg !3177
  %4 = trunc i64 %bf.lshr to i8
  %5 = and i8 %4, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i8 [ 0, %entry ], [ %5, %land.rhs ]
  tail call void @lto_output_1_stream(%struct.lto_output_stream* %1, i8 signext %6) #6, !dbg !3178
  %int_cst5 = getelementptr inbounds %union.tree_node, %union.tree_node* %cst, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3179
  %low = bitcast i32* %int_cst5 to i64*, !dbg !3179
  %7 = load i64, i64* %low, align 8, !dbg !3179
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %7) #7, !dbg !3180
  %high = getelementptr inbounds i32, i32* %int_cst5, i64 2, !dbg !3181
  %8 = bitcast i32* %high to i64*, !dbg !3181
  %9 = load i64, i64* %8, align 8, !dbg !3181
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %9) #7, !dbg !3182
  ret void, !dbg !3183
}

declare dso_local zeroext i8 @lto_streamer_cache_insert(%struct.lto_streamer_cache_d*, %union.tree_node*, i32*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_record_start(%struct.output_block* %ob, i32 %tag) unnamed_addr #5 !dbg !3184 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3188, metadata !DIExpression()), !dbg !3190
  call void @llvm.dbg.value(metadata i32 %tag, metadata !3189, metadata !DIExpression()), !dbg !3190
  %conv = zext i32 %tag to i64, !dbg !3191
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !3192
  ret void, !dbg !3193
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_sleb128(%struct.output_block* %ob, i64 %work) unnamed_addr #5 !dbg !3194 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3198, metadata !DIExpression()), !dbg !3200
  call void @llvm.dbg.value(metadata i64 %work, metadata !3199, metadata !DIExpression()), !dbg !3200
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3201
  %0 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3201
  tail call void @lto_output_sleb128_stream(%struct.lto_output_stream* %0, i64 %work) #6, !dbg !3202
  ret void, !dbg !3203
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_uleb128(%struct.output_block* %ob, i64 %work) unnamed_addr #5 !dbg !3204 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3208, metadata !DIExpression()), !dbg !3210
  call void @llvm.dbg.value(metadata i64 %work, metadata !3209, metadata !DIExpression()), !dbg !3210
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3211
  %0 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3211
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %0, i64 %work) #6, !dbg !3212
  ret void, !dbg !3213
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @lto_tree_code_to_tag(i32 %code) unnamed_addr #0 !dbg !3214 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !3218, metadata !DIExpression()), !dbg !3219
  %add = add i32 %code, 1, !dbg !3220
  ret i32 %add, !dbg !3221
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @lto_stream_as_builtin_p(%union.tree_node* %expr) unnamed_addr #0 !dbg !3222 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3226, metadata !DIExpression()), !dbg !3227
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3228
  %bf.load = load i64, i64* %0, align 8, !dbg !3228
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3229
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !3229
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !3230

land.lhs.true:                                    ; preds = %entry
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3231
  %1 = load i32, i32* %locus, align 8, !dbg !3231
  %cmp1 = icmp ult i32 %1, 2, !dbg !3231
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !3232

land.rhs:                                         ; preds = %land.lhs.true
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 5, !dbg !3233
  %bf.load2 = load i32, i32* %built_in_class, align 8, !dbg !3233
  %bf.clear3 = and i32 %bf.load2, 6144, !dbg !3233
  %cmp4 = icmp eq i32 %bf.clear3, 6144, !dbg !3234
  br i1 %cmp4, label %land.end, label %lor.rhs, !dbg !3235

lor.rhs:                                          ; preds = %land.rhs
  %cmp10 = icmp eq i32 %bf.clear3, 4096, !dbg !3236
  %phitmp = zext i1 %cmp10 to i8, !dbg !3235
  br label %land.end, !dbg !3235

land.end:                                         ; preds = %land.rhs, %lor.rhs, %land.lhs.true, %entry
  %2 = phi i8 [ 0, %land.lhs.true ], [ 0, %entry ], [ 1, %land.rhs ], [ %phitmp, %lor.rhs ]
  ret i8 %2, !dbg !3237
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_builtin_tree(%struct.output_block* %ob, %union.tree_node* %expr, i32 %ix) unnamed_addr #5 !dbg !3238 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3242, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3243, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.value(metadata i32 %ix, metadata !3244, metadata !DIExpression()), !dbg !3248
  %call = tail call fastcc zeroext i8 @lto_stream_as_builtin_p(%union.tree_node* %expr) #7, !dbg !3249
  %tobool = icmp eq i8 %call, 0, !dbg !3249
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3249

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 1241, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3249
  br label %cond.end, !dbg !3249

cond.end:                                         ; preds = %entry, %cond.true
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 5, !dbg !3250
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !3250
  %bf.clear = and i32 %bf.load, 6144, !dbg !3250
  %cmp = icmp ne i32 %bf.clear, 4096, !dbg !3252
  %0 = load %union.tree_node* (i32, i8)*, %union.tree_node* (i32, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 24), align 8, !dbg !3253
  %tobool1 = icmp ne %union.tree_node* (i32, i8)* %0, null, !dbg !3254
  %or.cond = or i1 %cmp, %tobool1, !dbg !3255
  br i1 %or.cond, label %if.end, label %if.then, !dbg !3255

if.then:                                          ; preds = %cond.end
  tail call void (i8*, ...) @sorry(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3256
  br label %if.end, !dbg !3256

if.end:                                           ; preds = %cond.end, %if.then
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 227) #7, !dbg !3257
  %bf.load4 = load i32, i32* %built_in_class, align 8, !dbg !3258
  %bf.lshr5 = lshr i32 %bf.load4, 11, !dbg !3258
  %bf.clear6 = and i32 %bf.lshr5, 3, !dbg !3258
  %conv = zext i32 %bf.clear6 to i64, !dbg !3258
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !3259
  %bf.load8 = load i32, i32* %built_in_class, align 8, !dbg !3260
  %bf.clear9 = and i32 %bf.load8, 2047, !dbg !3260
  %conv10 = zext i32 %bf.clear9 to i64, !dbg !3260
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv10) #7, !dbg !3261
  %conv11 = sext i32 %ix to i64, !dbg !3262
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv11) #7, !dbg !3263
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3264
  %bf.load12 = load i64, i64* %1, align 8, !dbg !3264
  %bf.cast = and i64 %bf.load12, 65535, !dbg !3264
  %arrayidx14 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 13, !dbg !3264
  %2 = load i8, i8* %arrayidx14, align 1, !dbg !3264
  %tobool16 = icmp eq i8 %2, 0, !dbg !3264
  br i1 %tobool16, label %if.else35, label %land.lhs.true17, !dbg !3264

land.lhs.true17:                                  ; preds = %if.end
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !3264
  %3 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8, !dbg !3264
  %cmp18 = icmp eq %union.tree_node* %3, null, !dbg !3264
  br i1 %cmp18, label %if.else35, label %if.then20, !dbg !3265

if.then20:                                        ; preds = %land.lhs.true17
  %call21 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %expr) #6, !dbg !3266
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3266
  %str22 = bitcast i32* %id to i8**, !dbg !3266
  %4 = load i8*, i8** %str22, align 8, !dbg !3266
  call void @llvm.dbg.value(metadata i8* %4, metadata !3245, metadata !DIExpression()), !dbg !3267
  %call23 = tail call i64 @strlen(i8* %4) #6, !dbg !3268
  %cmp24 = icmp ugt i64 %call23, 1, !dbg !3270
  br i1 %cmp24, label %land.lhs.true26, label %if.else, !dbg !3271

land.lhs.true26:                                  ; preds = %if.then20
  %5 = load i8, i8* %4, align 1, !dbg !3272
  %cmp29 = icmp eq i8 %5, 42, !dbg !3273
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !3274

if.then31:                                        ; preds = %land.lhs.true26
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3275
  %6 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3275
  %arrayidx32 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !3276
  tail call fastcc void @output_string(%struct.output_block* %ob, %struct.lto_output_stream* %6, i8* nonnull %arrayidx32) #7, !dbg !3277
  br label %if.end37, !dbg !3277

if.else:                                          ; preds = %land.lhs.true26, %if.then20
  %main_stream33 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3278
  %7 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream33, align 8, !dbg !3278
  tail call fastcc void @output_string(%struct.output_block* %ob, %struct.lto_output_stream* %7, i8* null) #7, !dbg !3279
  br label %if.end37

if.else35:                                        ; preds = %land.lhs.true17, %if.end
  %main_stream36 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3280
  %8 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream36, align 8, !dbg !3280
  tail call fastcc void @output_string(%struct.output_block* %ob, %struct.lto_output_stream* %8, i8* null) #7, !dbg !3281
  br label %if.end37

if.end37:                                         ; preds = %if.then31, %if.else, %if.else35
  ret void, !dbg !3282
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_write_tree(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p, i32 %ix) unnamed_addr #5 !dbg !3283 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3287, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3288, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !3289, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata i32 %ix, metadata !3290, metadata !DIExpression()), !dbg !3292
  tail call fastcc void @lto_output_tree_header(%struct.output_block* %ob, %union.tree_node* %expr, i32 %ix) #7, !dbg !3293
  %call = tail call fastcc %struct.bitpack_d* @pack_value_fields(%union.tree_node* %expr) #7, !dbg !3294
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %call, metadata !3291, metadata !DIExpression()), !dbg !3292
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3295
  %0 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3295
  tail call void @lto_output_bitpack(%struct.lto_output_stream* %0, %struct.bitpack_d* %call) #7, !dbg !3296
  tail call void @bitpack_delete(%struct.bitpack_d* %call) #6, !dbg !3297
  tail call fastcc void @lto_output_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3298
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !3299
  ret void, !dbg !3300
}

; Function Attrs: nounwind uwtable
define dso_local void @produce_asm(%struct.output_block* %ob, %union.tree_node* %fn) local_unnamed_addr #5 !dbg !3301 {
entry:
  %header = alloca %struct.lto_function_header, align 4
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3305, metadata !DIExpression()), !dbg !3335
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !3306, metadata !DIExpression()), !dbg !3335
  %section_type1 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 0, !dbg !3336
  %0 = load i32, i32* %section_type1, align 8, !dbg !3336
  call void @llvm.dbg.value(metadata i32 %0, metadata !3307, metadata !DIExpression()), !dbg !3335
  %1 = bitcast %struct.lto_function_header* %header to i8*, !dbg !3337
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %1) #8, !dbg !3337
  %cmp = icmp eq i32 %0, 1, !dbg !3338
  br i1 %cmp, label %if.then, label %if.else, !dbg !3339

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %fn) #6, !dbg !3340
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3340
  %str = bitcast i32* %id to i8**, !dbg !3340
  %2 = load i8*, i8** %str, align 8, !dbg !3340
  call void @llvm.dbg.value(metadata i8* %2, metadata !3332, metadata !DIExpression()), !dbg !3341
  %call2 = tail call i8* @lto_get_section_name(i32 1, i8* %2) #6, !dbg !3342
  call void @llvm.dbg.value(metadata i8* %call2, metadata !3330, metadata !DIExpression()), !dbg !3335
  br label %if.end, !dbg !3343

if.else:                                          ; preds = %entry
  %call3 = tail call i8* @lto_get_section_name(i32 %0, i8* null) #6, !dbg !3344
  call void @llvm.dbg.value(metadata i8* %call3, metadata !3330, metadata !DIExpression()), !dbg !3335
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %section_name.0 = phi i8* [ %call2, %if.then ], [ %call3, %if.else ], !dbg !3345
  call void @llvm.dbg.value(metadata i8* %section_name.0, metadata !3330, metadata !DIExpression()), !dbg !3335
  %3 = load i32, i32* @flag_wpa, align 4, !dbg !3346
  %tobool = icmp eq i32 %3, 0, !dbg !3347
  %conv = zext i1 %tobool to i8, !dbg !3347
  tail call void @lto_begin_section(i8* %section_name.0, i8 zeroext %conv) #6, !dbg !3348
  tail call void @free(i8* %section_name.0) #6, !dbg !3349
  %call4 = call i8* @memset(i8* nonnull %1, i32 0, i64 36) #6, !dbg !3350
  %major_version = getelementptr inbounds %struct.lto_function_header, %struct.lto_function_header* %header, i64 0, i32 0, i32 0, !dbg !3351
  store i16 1, i16* %major_version, align 4, !dbg !3352
  %minor_version = getelementptr inbounds %struct.lto_function_header, %struct.lto_function_header* %header, i64 0, i32 0, i32 1, !dbg !3353
  store i16 0, i16* %minor_version, align 2, !dbg !3354
  %section_type7 = getelementptr inbounds %struct.lto_function_header, %struct.lto_function_header* %header, i64 0, i32 0, i32 2, !dbg !3355
  store i32 %0, i32* %section_type7, align 4, !dbg !3356
  %compressed_size = getelementptr inbounds %struct.lto_function_header, %struct.lto_function_header* %header, i64 0, i32 3, !dbg !3357
  store i32 0, i32* %compressed_size, align 4, !dbg !3358
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !3359

if.then10:                                        ; preds = %if.end
  %cfg_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 4, !dbg !3360
  %4 = load %struct.lto_output_stream*, %struct.lto_output_stream** %cfg_stream, align 8, !dbg !3360
  %total_size = getelementptr inbounds %struct.lto_output_stream, %struct.lto_output_stream* %4, i64 0, i32 5, !dbg !3362
  %5 = load i32, i32* %total_size, align 8, !dbg !3362
  %cfg_size = getelementptr inbounds %struct.lto_function_header, %struct.lto_function_header* %header, i64 0, i32 5, !dbg !3363
  store i32 %5, i32* %cfg_size, align 4, !dbg !3364
  br label %if.end11, !dbg !3365

if.end11:                                         ; preds = %if.then10, %if.end
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3366
  %6 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3366
  %total_size12 = getelementptr inbounds %struct.lto_output_stream, %struct.lto_output_stream* %6, i64 0, i32 5, !dbg !3367
  %7 = load i32, i32* %total_size12, align 8, !dbg !3367
  %main_size = getelementptr inbounds %struct.lto_function_header, %struct.lto_function_header* %header, i64 0, i32 6, !dbg !3368
  store i32 %7, i32* %main_size, align 4, !dbg !3369
  %string_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 3, !dbg !3370
  %8 = load %struct.lto_output_stream*, %struct.lto_output_stream** %string_stream, align 8, !dbg !3370
  %total_size13 = getelementptr inbounds %struct.lto_output_stream, %struct.lto_output_stream* %8, i64 0, i32 5, !dbg !3371
  %9 = load i32, i32* %total_size13, align 8, !dbg !3371
  %string_size = getelementptr inbounds %struct.lto_function_header, %struct.lto_function_header* %header, i64 0, i32 7, !dbg !3372
  store i32 %9, i32* %string_size, align 4, !dbg !3373
  %call14 = call i8* @xcalloc(i64 1, i64 40) #6, !dbg !3374
  %10 = bitcast i8* %call14 to %struct.lto_output_stream*, !dbg !3374
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %10, metadata !3331, metadata !DIExpression()), !dbg !3335
  call void @lto_output_data_stream(%struct.lto_output_stream* %10, i8* nonnull %1, i64 36) #6, !dbg !3375
  call void @lto_write_stream(%struct.lto_output_stream* %10) #6, !dbg !3376
  call void @free(i8* %call14) #6, !dbg !3377
  br i1 %cmp, label %if.then17, label %if.end19, !dbg !3378

if.then17:                                        ; preds = %if.end11
  %cfg_stream18 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 4, !dbg !3379
  %11 = load %struct.lto_output_stream*, %struct.lto_output_stream** %cfg_stream18, align 8, !dbg !3379
  call void @lto_write_stream(%struct.lto_output_stream* %11) #6, !dbg !3381
  br label %if.end19, !dbg !3381

if.end19:                                         ; preds = %if.then17, %if.end11
  %12 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3382
  call void @lto_write_stream(%struct.lto_output_stream* %12) #6, !dbg !3383
  %13 = load %struct.lto_output_stream*, %struct.lto_output_stream** %string_stream, align 8, !dbg !3384
  call void @lto_write_stream(%struct.lto_output_stream* %13) #6, !dbg !3385
  call void @lto_end_section() #6, !dbg !3386
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %1) #8, !dbg !3387
  ret void, !dbg !3387
}

declare dso_local %union.tree_node* @decl_assembler_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @lto_get_section_name(i32, i8*) local_unnamed_addr #2

declare dso_local void @lto_begin_section(i8*, i8 zeroext) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local void @lto_output_data_stream(%struct.lto_output_stream*, i8*, i64) local_unnamed_addr #2

declare dso_local void @lto_write_stream(%struct.lto_output_stream*) local_unnamed_addr #2

declare dso_local void @lto_end_section() local_unnamed_addr #2

declare dso_local zeroext i8 @gate_lto_out() #2

; Function Attrs: nounwind uwtable
define internal void @lto_output(%struct.cgraph_node_set_def* %set) #5 !dbg !3388 {
entry:
  %csi = alloca %struct.cgraph_node_set_iterator, align 8
  %tmp = alloca %struct.cgraph_node_set_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_node_set_def* %set, metadata !3393, metadata !DIExpression()), !dbg !3403
  %0 = bitcast %struct.cgraph_node_set_iterator* %csi to i8*, !dbg !3404
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3404
  %call = tail call %struct.bitmap_head_def* @lto_bitmap_alloc() #6, !dbg !3405
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !3402, metadata !DIExpression()), !dbg !3403
  tail call fastcc void @lto_writer_init() #7, !dbg !3406
  %1 = bitcast %struct.cgraph_node_set_iterator* %tmp to i8*, !dbg !3407
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3407
  %call1 = tail call fastcc { %struct.cgraph_node_set_def*, i32 } @csi_start(%struct.cgraph_node_set_def* %set) #7, !dbg !3407
  %2 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %tmp, i64 0, i32 0, !dbg !3407
  %3 = extractvalue { %struct.cgraph_node_set_def*, i32 } %call1, 0, !dbg !3407
  store %struct.cgraph_node_set_def* %3, %struct.cgraph_node_set_def** %2, align 8, !dbg !3407
  %4 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %tmp, i64 0, i32 1, !dbg !3407
  %5 = extractvalue { %struct.cgraph_node_set_def*, i32 } %call1, 1, !dbg !3407
  store i32 %5, i32* %4, align 8, !dbg !3407
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !3407
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3407
  %6 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %csi, i64 0, i32 0, !dbg !3409
  %7 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %csi, i64 0, i32 1, !dbg !3409
  br label %for.cond, !dbg !3411

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.cgraph_node_set_def*, %struct.cgraph_node_set_def** %6, align 8, !dbg !3412
  %9 = load i32, i32* %7, align 8, !dbg !3412
  %call2 = call fastcc zeroext i8 @csi_end_p(%struct.cgraph_node_set_def* %8, i32 %9) #7, !dbg !3412
  %tobool = icmp eq i8 %call2, 0, !dbg !3413
  br i1 %tobool, label %for.body, label %for.end, !dbg !3414

for.body:                                         ; preds = %for.cond
  %10 = load %struct.cgraph_node_set_def*, %struct.cgraph_node_set_def** %6, align 8, !dbg !3415
  %11 = load i32, i32* %7, align 8, !dbg !3415
  %call3 = call fastcc %struct.cgraph_node* @csi_node(%struct.cgraph_node_set_def* %10, i32 %11) #7, !dbg !3415
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call3, metadata !3394, metadata !DIExpression()), !dbg !3403
  %analyzed = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call3, i64 0, i32 27, !dbg !3417
  %bf.load = load i16, i16* %analyzed, align 4, !dbg !3417
  %bf.clear = and i16 %bf.load, 32, !dbg !3417
  %tobool4 = icmp eq i16 %bf.clear, 0, !dbg !3419
  br i1 %tobool4, label %for.inc, label %land.lhs.true, !dbg !3420

land.lhs.true:                                    ; preds = %for.body
  %12 = bitcast %struct.cgraph_node* %call3 to %struct.tree_decl_minimal**, !dbg !3421
  %13 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %12, align 8, !dbg !3421
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %13, i64 0, i32 2, !dbg !3421
  %14 = load i32, i32* %uid, align 4, !dbg !3421
  %call5 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %14) #6, !dbg !3422
  %tobool6 = icmp eq i32 %call5, 0, !dbg !3422
  br i1 %tobool6, label %if.then, label %for.inc, !dbg !3423

if.then:                                          ; preds = %land.lhs.true
  %15 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %12, align 8, !dbg !3424
  %uid9 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %15, i64 0, i32 2, !dbg !3424
  %16 = load i32, i32* %uid9, align 4, !dbg !3424
  %call10 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %16) #6, !dbg !3426
  %call11 = call %struct.lto_out_decl_state* @lto_new_out_decl_state() #6, !dbg !3427
  call void @llvm.dbg.value(metadata %struct.lto_out_decl_state* %call11, metadata !3395, metadata !DIExpression()), !dbg !3403
  call void @lto_push_out_decl_state(%struct.lto_out_decl_state* %call11) #6, !dbg !3428
  %17 = load i32, i32* @flag_wpa, align 4, !dbg !3429
  %tobool12 = icmp eq i32 %17, 0, !dbg !3429
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !3431

if.then13:                                        ; preds = %if.then
  call fastcc void @output_function(%struct.cgraph_node* %call3) #7, !dbg !3432
  br label %if.end, !dbg !3432

if.else:                                          ; preds = %if.then
  call fastcc void @copy_function(%struct.cgraph_node* %call3) #7, !dbg !3433
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  %call14 = call %struct.lto_out_decl_state* @lto_get_out_decl_state() #6, !dbg !3434
  %cmp = icmp eq %struct.lto_out_decl_state* %call14, %call11, !dbg !3434
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3434

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 2115, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3434
  br label %cond.end, !dbg !3434

cond.end:                                         ; preds = %if.end, %cond.true
  %call15 = call %struct.lto_out_decl_state* @lto_pop_out_decl_state() #6, !dbg !3435
  %decl16 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call3, i64 0, i32 0, !dbg !3436
  %18 = load %union.tree_node*, %union.tree_node** %decl16, align 8, !dbg !3436
  call void @lto_record_function_out_decl_state(%union.tree_node* %18, %struct.lto_out_decl_state* %call11) #6, !dbg !3437
  br label %for.inc, !dbg !3438

for.inc:                                          ; preds = %land.lhs.true, %for.body, %cond.end
  call void @llvm.dbg.value(metadata %struct.cgraph_node_set_iterator* %csi, metadata !3396, metadata !DIExpression(DW_OP_deref)), !dbg !3403
  call fastcc void @csi_next(%struct.cgraph_node_set_iterator* nonnull %csi) #7, !dbg !3439
  br label %for.cond, !dbg !3440, !llvm.loop !3441

for.end:                                          ; preds = %for.cond
  call void @output_cgraph(%struct.cgraph_node_set_def* %set) #6, !dbg !3443
  call void @lto_bitmap_free(%struct.bitmap_head_def* %call) #6, !dbg !3444
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3445
  ret void, !dbg !3445
}

; Function Attrs: nounwind uwtable
define internal void @produce_asm_for_decls(%struct.cgraph_node_set_def* %set) #5 !dbg !3446 {
entry:
  %header = alloca %struct.lto_decl_header, align 4
  %num_decl_states = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.cgraph_node_set_def* %set, metadata !3448, metadata !DIExpression()), !dbg !3467
  %0 = bitcast %struct.lto_decl_header* %header to i8*, !dbg !3468
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3468
  %1 = bitcast i32* %num_decl_states to i8*, !dbg !3469
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3469
  %call = tail call %struct.output_block* @create_output_block(i32 0) #7, !dbg !3470
  call void @llvm.dbg.value(metadata %struct.output_block* %call, metadata !3460, metadata !DIExpression()), !dbg !3467
  %global = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 10, !dbg !3471
  store i8 1, i8* %global, align 8, !dbg !3472
  tail call fastcc void @output_unreferenced_globals(%struct.cgraph_node_set_def* %set) #7, !dbg !3473
  %call1 = call i8* @memset(i8* nonnull %0, i32 0, i64 24) #6, !dbg !3474
  %call2 = call i8* @lto_get_section_name(i32 0, i8* null) #6, !dbg !3475
  call void @llvm.dbg.value(metadata i8* %call2, metadata !3459, metadata !DIExpression()), !dbg !3467
  %2 = load i32, i32* @flag_wpa, align 4, !dbg !3476
  %tobool = icmp eq i32 %2, 0, !dbg !3477
  %conv = zext i1 %tobool to i8, !dbg !3477
  call void @lto_begin_section(i8* %call2, i8 zeroext %conv) #6, !dbg !3478
  call void @free(i8* %call2) #6, !dbg !3479
  %string_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 3, !dbg !3480
  %3 = load %struct.lto_output_stream*, %struct.lto_output_stream** %string_stream, align 8, !dbg !3480
  call void @lto_output_1_stream(%struct.lto_output_stream* %3, i8 signext 0) #6, !dbg !3481
  %call3 = call %struct.lto_out_decl_state* @lto_get_out_decl_state() #6, !dbg !3482
  call void @llvm.dbg.value(metadata %struct.lto_out_decl_state* %call3, metadata !3449, metadata !DIExpression()), !dbg !3467
  %4 = load %struct.VEC_lto_out_decl_state_ptr_heap*, %struct.VEC_lto_out_decl_state_ptr_heap** @lto_function_decl_states, align 8, !dbg !3483
  %base = getelementptr inbounds %struct.VEC_lto_out_decl_state_ptr_heap, %struct.VEC_lto_out_decl_state_ptr_heap* %4, i64 0, i32 0, !dbg !3483
  %call5 = call fastcc i32 @VEC_lto_out_decl_state_ptr_base_length(%struct.VEC_lto_out_decl_state_ptr_base* %base) #7, !dbg !3483
  call void @llvm.dbg.value(metadata i32 %call5, metadata !3464, metadata !DIExpression()), !dbg !3467
  call fastcc void @lto_output_decl_state_streams(%struct.output_block* %call, %struct.lto_out_decl_state* %call3) #7, !dbg !3484
  call void @llvm.dbg.value(metadata i32 0, metadata !3463, metadata !DIExpression()), !dbg !3467
  br label %for.cond, !dbg !3485

for.cond:                                         ; preds = %for.body, %entry
  %idx.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3487
  call void @llvm.dbg.value(metadata i32 %idx.0, metadata !3463, metadata !DIExpression()), !dbg !3467
  %exitcond2 = icmp eq i32 %idx.0, %call5, !dbg !3488
  br i1 %exitcond2, label %for.end, label %for.body, !dbg !3490

for.body:                                         ; preds = %for.cond
  %5 = load %struct.VEC_lto_out_decl_state_ptr_heap*, %struct.VEC_lto_out_decl_state_ptr_heap** @lto_function_decl_states, align 8, !dbg !3491
  %base9 = getelementptr inbounds %struct.VEC_lto_out_decl_state_ptr_heap, %struct.VEC_lto_out_decl_state_ptr_heap* %5, i64 0, i32 0, !dbg !3491
  %call13 = call fastcc %struct.lto_out_decl_state* @VEC_lto_out_decl_state_ptr_base_index(%struct.VEC_lto_out_decl_state_ptr_base* %base9, i32 %idx.0) #7, !dbg !3491
  call void @llvm.dbg.value(metadata %struct.lto_out_decl_state* %call13, metadata !3450, metadata !DIExpression()), !dbg !3467
  call fastcc void @lto_output_decl_state_streams(%struct.output_block* %call, %struct.lto_out_decl_state* %call13) #7, !dbg !3493
  %inc = add i32 %idx.0, 1, !dbg !3494
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3463, metadata !DIExpression()), !dbg !3467
  br label %for.cond, !dbg !3495, !llvm.loop !3496

for.end:                                          ; preds = %for.cond
  %major_version = getelementptr inbounds %struct.lto_decl_header, %struct.lto_decl_header* %header, i64 0, i32 0, i32 0, !dbg !3498
  store i16 1, i16* %major_version, align 4, !dbg !3499
  %minor_version = getelementptr inbounds %struct.lto_decl_header, %struct.lto_decl_header* %header, i64 0, i32 0, i32 1, !dbg !3500
  store i16 0, i16* %minor_version, align 2, !dbg !3501
  %section_type = getelementptr inbounds %struct.lto_decl_header, %struct.lto_decl_header* %header, i64 0, i32 0, i32 2, !dbg !3502
  store i32 0, i32* %section_type, align 4, !dbg !3503
  %num_nodes = getelementptr inbounds %struct.lto_decl_header, %struct.lto_decl_header* %header, i64 0, i32 2, !dbg !3504
  store i32 -1, i32* %num_nodes, align 4, !dbg !3505
  call void @llvm.dbg.value(metadata i64 4, metadata !3465, metadata !DIExpression()), !dbg !3467
  %call16 = call fastcc i64 @lto_out_decl_state_written_size(%struct.lto_out_decl_state* %call3) #7, !dbg !3506
  %add = add i64 %call16, 4, !dbg !3507
  call void @llvm.dbg.value(metadata i64 %add, metadata !3465, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 0, metadata !3463, metadata !DIExpression()), !dbg !3467
  br label %for.cond17, !dbg !3508

for.cond17:                                       ; preds = %for.body20, %for.end
  %idx.1 = phi i32 [ 0, %for.end ], [ %inc31, %for.body20 ], !dbg !3510
  %decl_state_size.0 = phi i64 [ %add, %for.end ], [ %add29, %for.body20 ], !dbg !3467
  call void @llvm.dbg.value(metadata i64 %decl_state_size.0, metadata !3465, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %idx.1, metadata !3463, metadata !DIExpression()), !dbg !3467
  %exitcond1 = icmp eq i32 %idx.1, %call5, !dbg !3511
  br i1 %exitcond1, label %for.end32, label %for.body20, !dbg !3513

for.body20:                                       ; preds = %for.cond17
  %6 = load %struct.VEC_lto_out_decl_state_ptr_heap*, %struct.VEC_lto_out_decl_state_ptr_heap** @lto_function_decl_states, align 8, !dbg !3514
  %base23 = getelementptr inbounds %struct.VEC_lto_out_decl_state_ptr_heap, %struct.VEC_lto_out_decl_state_ptr_heap* %6, i64 0, i32 0, !dbg !3514
  %call27 = call fastcc %struct.lto_out_decl_state* @VEC_lto_out_decl_state_ptr_base_index(%struct.VEC_lto_out_decl_state_ptr_base* %base23, i32 %idx.1) #7, !dbg !3514
  call void @llvm.dbg.value(metadata %struct.lto_out_decl_state* %call27, metadata !3450, metadata !DIExpression()), !dbg !3467
  %call28 = call fastcc i64 @lto_out_decl_state_written_size(%struct.lto_out_decl_state* %call27) #7, !dbg !3516
  %add29 = add i64 %decl_state_size.0, %call28, !dbg !3517
  call void @llvm.dbg.value(metadata i64 %add29, metadata !3465, metadata !DIExpression()), !dbg !3467
  %inc31 = add i32 %idx.1, 1, !dbg !3518
  call void @llvm.dbg.value(metadata i32 %inc31, metadata !3463, metadata !DIExpression()), !dbg !3467
  br label %for.cond17, !dbg !3519, !llvm.loop !3520

for.end32:                                        ; preds = %for.cond17
  %decl_state_size.0.lcssa = phi i64 [ %decl_state_size.0, %for.cond17 ], !dbg !3467
  call void @llvm.dbg.value(metadata i64 %decl_state_size.0.lcssa, metadata !3465, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i64 %decl_state_size.0.lcssa, metadata !3465, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i64 %decl_state_size.0.lcssa, metadata !3465, metadata !DIExpression()), !dbg !3467
  %conv33 = trunc i64 %decl_state_size.0.lcssa to i32, !dbg !3522
  %decl_state_size34 = getelementptr inbounds %struct.lto_decl_header, %struct.lto_decl_header* %header, i64 0, i32 1, !dbg !3523
  store i32 %conv33, i32* %decl_state_size34, align 4, !dbg !3524
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 2, !dbg !3525
  %7 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3525
  %total_size = getelementptr inbounds %struct.lto_output_stream, %struct.lto_output_stream* %7, i64 0, i32 5, !dbg !3526
  %8 = load i32, i32* %total_size, align 8, !dbg !3526
  %main_size = getelementptr inbounds %struct.lto_decl_header, %struct.lto_decl_header* %header, i64 0, i32 3, !dbg !3527
  store i32 %8, i32* %main_size, align 4, !dbg !3528
  %9 = load %struct.lto_output_stream*, %struct.lto_output_stream** %string_stream, align 8, !dbg !3529
  %total_size36 = getelementptr inbounds %struct.lto_output_stream, %struct.lto_output_stream* %9, i64 0, i32 5, !dbg !3530
  %10 = load i32, i32* %total_size36, align 8, !dbg !3530
  %string_size = getelementptr inbounds %struct.lto_decl_header, %struct.lto_decl_header* %header, i64 0, i32 4, !dbg !3531
  store i32 %10, i32* %string_size, align 4, !dbg !3532
  %call37 = call i8* @xcalloc(i64 1, i64 40) #6, !dbg !3533
  %11 = bitcast i8* %call37 to %struct.lto_output_stream*, !dbg !3533
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %11, metadata !3461, metadata !DIExpression()), !dbg !3467
  call void @lto_output_data_stream(%struct.lto_output_stream* %11, i8* nonnull %0, i64 24) #6, !dbg !3534
  call void @lto_write_stream(%struct.lto_output_stream* %11) #6, !dbg !3535
  call void @free(i8* %call37) #6, !dbg !3536
  %call38 = call i8* @xcalloc(i64 1, i64 40) #6, !dbg !3537
  %12 = bitcast i8* %call38 to %struct.lto_output_stream*, !dbg !3538
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %12, metadata !3462, metadata !DIExpression()), !dbg !3467
  %add39 = add i32 %call5, 1, !dbg !3539
  call void @llvm.dbg.value(metadata i32 %add39, metadata !3466, metadata !DIExpression()), !dbg !3467
  store i32 %add39, i32* %num_decl_states, align 4, !dbg !3540
  call void @lto_output_data_stream(%struct.lto_output_stream* %12, i8* nonnull %1, i64 4) #6, !dbg !3541
  call fastcc void @lto_output_decl_state_refs(%struct.output_block* %call, %struct.lto_output_stream* %12, %struct.lto_out_decl_state* %call3) #7, !dbg !3542
  call void @llvm.dbg.value(metadata i32 0, metadata !3463, metadata !DIExpression()), !dbg !3467
  br label %for.cond40, !dbg !3543

for.cond40:                                       ; preds = %for.body43, %for.end32
  %idx.2 = phi i32 [ 0, %for.end32 ], [ %inc52, %for.body43 ], !dbg !3545
  call void @llvm.dbg.value(metadata i32 %idx.2, metadata !3463, metadata !DIExpression()), !dbg !3467
  %exitcond = icmp eq i32 %idx.2, %call5, !dbg !3546
  br i1 %exitcond, label %for.end53, label %for.body43, !dbg !3548

for.body43:                                       ; preds = %for.cond40
  %13 = load %struct.VEC_lto_out_decl_state_ptr_heap*, %struct.VEC_lto_out_decl_state_ptr_heap** @lto_function_decl_states, align 8, !dbg !3549
  %base46 = getelementptr inbounds %struct.VEC_lto_out_decl_state_ptr_heap, %struct.VEC_lto_out_decl_state_ptr_heap* %13, i64 0, i32 0, !dbg !3549
  %call50 = call fastcc %struct.lto_out_decl_state* @VEC_lto_out_decl_state_ptr_base_index(%struct.VEC_lto_out_decl_state_ptr_base* %base46, i32 %idx.2) #7, !dbg !3549
  call void @llvm.dbg.value(metadata %struct.lto_out_decl_state* %call50, metadata !3450, metadata !DIExpression()), !dbg !3467
  call fastcc void @lto_output_decl_state_refs(%struct.output_block* %call, %struct.lto_output_stream* %12, %struct.lto_out_decl_state* %call50) #7, !dbg !3551
  %inc52 = add i32 %idx.2, 1, !dbg !3552
  call void @llvm.dbg.value(metadata i32 %inc52, metadata !3463, metadata !DIExpression()), !dbg !3467
  br label %for.cond40, !dbg !3553, !llvm.loop !3554

for.end53:                                        ; preds = %for.cond40
  call void @lto_write_stream(%struct.lto_output_stream* %12) #6, !dbg !3556
  call void @free(i8* %call38) #6, !dbg !3557
  %14 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3558
  call void @lto_write_stream(%struct.lto_output_stream* %14) #6, !dbg !3559
  %15 = load %struct.lto_output_stream*, %struct.lto_output_stream** %string_stream, align 8, !dbg !3560
  call void @lto_write_stream(%struct.lto_output_stream* %15) #6, !dbg !3561
  call void @lto_end_section() #6, !dbg !3562
  %writer_cache = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 11, !dbg !3563
  %16 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %writer_cache, align 8, !dbg !3563
  call fastcc void @produce_symtab(%struct.lto_streamer_cache_d* %16) #7, !dbg !3564
  call void @lto_write_options() #6, !dbg !3565
  %decl_state = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 1, !dbg !3566
  %17 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state, align 8, !dbg !3566
  %cgraph_node_encoder = getelementptr inbounds %struct.lto_out_decl_state, %struct.lto_out_decl_state* %17, i64 0, i32 1, !dbg !3567
  %18 = load %struct.lto_cgraph_encoder_d*, %struct.lto_cgraph_encoder_d** %cgraph_node_encoder, align 8, !dbg !3567
  call void @lto_cgraph_encoder_delete(%struct.lto_cgraph_encoder_d* %18) #6, !dbg !3568
  call fastcc void @VEC_lto_out_decl_state_ptr_heap_free(%struct.VEC_lto_out_decl_state_ptr_heap** nonnull @lto_function_decl_states) #7, !dbg !3569
  store %struct.VEC_lto_out_decl_state_ptr_heap* null, %struct.VEC_lto_out_decl_state_ptr_heap** @lto_function_decl_states, align 8, !dbg !3570
  call void @destroy_output_block(%struct.output_block* %call) #7, !dbg !3571
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3572
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3572
  ret void, !dbg !3572
}

declare dso_local i32 @htab_hash_string(i8*) local_unnamed_addr #2

declare dso_local void @lto_output_1_stream(%struct.lto_output_stream*, i8 signext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #0 !dbg !3573 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3575, metadata !DIExpression()), !dbg !3578
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3576, metadata !DIExpression()), !dbg !3578
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !3577, metadata !DIExpression()), !dbg !3578
  %tobool = icmp eq i8 %ref_p, 0, !dbg !3579
  br i1 %tobool, label %if.else, label %if.then, !dbg !3581

if.then:                                          ; preds = %entry
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %expr) #7, !dbg !3582
  br label %if.end, !dbg !3582

if.else:                                          ; preds = %entry
  tail call void @lto_output_tree(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext 0) #7, !dbg !3583
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3584
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %expr) unnamed_addr #5 !dbg !3585 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3587, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3588, metadata !DIExpression()), !dbg !3590
  %cmp = icmp eq %union.tree_node* %expr, null, !dbg !3591
  br i1 %cmp, label %if.then, label %if.end, !dbg !3593

if.then:                                          ; preds = %entry
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !3594
  br label %cleanup.cont, !dbg !3596

if.end:                                           ; preds = %entry
  %call = tail call fastcc zeroext i8 @tree_is_indexable(%union.tree_node* nonnull %expr) #7, !dbg !3597
  %tobool = icmp eq i8 %call, 0, !dbg !3597
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !3599

if.then1:                                         ; preds = %if.end
  tail call void @lto_output_tree(%struct.output_block* %ob, %union.tree_node* nonnull %expr, i8 zeroext 1) #7, !dbg !3600
  br label %cleanup.cont, !dbg !3602

if.end2:                                          ; preds = %if.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3603
  %bf.load = load i64, i64* %0, align 8, !dbg !3603
  %bf.cast = and i64 %bf.load, 65535, !dbg !3603
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3603
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3603
  %cmp3 = icmp eq i32 %1, 2, !dbg !3603
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !3605

if.then4:                                         ; preds = %if.end2
  tail call fastcc void @output_type_ref(%struct.output_block* %ob, %union.tree_node* nonnull %expr) #7, !dbg !3606
  br label %cleanup.cont, !dbg !3608

if.end5:                                          ; preds = %if.end2
  %2 = trunc i64 %bf.load to i16, !dbg !3609
  switch i16 %2, label %sw.default [
    i16 141, label %sw.bb
    i16 31, label %sw.bb10
    i16 29, label %sw.bb11
    i16 32, label %sw.bb14
    i16 37, label %sw.bb14
    i16 33, label %sw.bb25
    i16 39, label %sw.bb28
    i16 35, label %sw.bb38
    i16 38, label %sw.bb41
    i16 30, label %sw.bb44
    i16 36, label %sw.bb47
  ], !dbg !3610

sw.bb:                                            ; preds = %if.end5
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 243) #7, !dbg !3611
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3613
  %3 = bitcast %union.tree_node** %version to i32*, !dbg !3613
  %4 = load i32, i32* %3, align 8, !dbg !3613
  %conv = zext i32 %4 to i64, !dbg !3613
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !3614
  br label %cleanup.cont, !dbg !3615

sw.bb10:                                          ; preds = %if.end5
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 238) #7, !dbg !3616
  %decl_state = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 1, !dbg !3617
  %5 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state, align 8, !dbg !3617
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3618
  %6 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3618
  tail call void @lto_output_field_decl_index(%struct.lto_out_decl_state* %5, %struct.lto_output_stream* %6, %union.tree_node* nonnull %expr) #6, !dbg !3619
  br label %cleanup.cont, !dbg !3620

sw.bb11:                                          ; preds = %if.end5
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 239) #7, !dbg !3621
  %decl_state12 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 1, !dbg !3622
  %7 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state12, align 8, !dbg !3622
  %main_stream13 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3623
  %8 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream13, align 8, !dbg !3623
  tail call void @lto_output_fn_decl_index(%struct.lto_out_decl_state* %7, %struct.lto_output_stream* %8, %union.tree_node* nonnull %expr) #6, !dbg !3624
  br label %cleanup.cont, !dbg !3625

sw.bb14:                                          ; preds = %if.end5, %if.end5
  %call15 = tail call %union.tree_node* @decl_function_context(%union.tree_node* nonnull %expr) #6, !dbg !3626
  %cmp16 = icmp eq %union.tree_node* %call15, null, !dbg !3626
  br i1 %cmp16, label %cond.end, label %lor.lhs.false, !dbg !3626

lor.lhs.false:                                    ; preds = %sw.bb14
  %bf.load19 = load i64, i64* %0, align 8, !dbg !3626
  %bf.cast211 = and i64 %bf.load19, 67108864, !dbg !3626
  %tobool22 = icmp eq i64 %bf.cast211, 0, !dbg !3626
  br i1 %tobool22, label %cond.true, label %cond.end, !dbg !3626

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 699, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3626
  br label %cond.end, !dbg !3626

cond.end:                                         ; preds = %lor.lhs.false, %sw.bb14, %cond.true
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 248) #7, !dbg !3627
  %decl_state23 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 1, !dbg !3628
  %9 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state23, align 8, !dbg !3628
  %main_stream24 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3629
  %10 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream24, align 8, !dbg !3629
  tail call void @lto_output_var_decl_index(%struct.lto_out_decl_state* %9, %struct.lto_output_stream* %10, %union.tree_node* nonnull %expr) #6, !dbg !3630
  br label %cleanup.cont, !dbg !3631

sw.bb25:                                          ; preds = %if.end5
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 246) #7, !dbg !3632
  %decl_state26 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 1, !dbg !3633
  %11 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state26, align 8, !dbg !3633
  %main_stream27 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3634
  %12 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream27, align 8, !dbg !3634
  tail call void @lto_output_var_decl_index(%struct.lto_out_decl_state* %11, %struct.lto_output_stream* %12, %union.tree_node* nonnull %expr) #6, !dbg !3635
  br label %cleanup.cont, !dbg !3636

sw.bb28:                                          ; preds = %if.end5
  %call29 = tail call %union.tree_node* @decl_function_context(%union.tree_node* nonnull %expr) #6, !dbg !3637
  %cmp30 = icmp eq %union.tree_node* %call29, null, !dbg !3637
  br i1 %cmp30, label %cond.end34, label %cond.true32, !dbg !3637

cond.true32:                                      ; preds = %sw.bb28
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 710, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3637
  br label %cond.end34, !dbg !3637

cond.end34:                                       ; preds = %sw.bb28, %cond.true32
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 247) #7, !dbg !3638
  %decl_state36 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 1, !dbg !3639
  %13 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state36, align 8, !dbg !3639
  %main_stream37 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3640
  %14 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream37, align 8, !dbg !3640
  tail call void @lto_output_var_decl_index(%struct.lto_out_decl_state* %13, %struct.lto_output_stream* %14, %union.tree_node* nonnull %expr) #6, !dbg !3641
  br label %cleanup.cont, !dbg !3642

sw.bb38:                                          ; preds = %if.end5
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 244) #7, !dbg !3643
  %decl_state39 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 1, !dbg !3644
  %15 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state39, align 8, !dbg !3644
  %main_stream40 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3645
  %16 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream40, align 8, !dbg !3645
  tail call void @lto_output_type_decl_index(%struct.lto_out_decl_state* %15, %struct.lto_output_stream* %16, %union.tree_node* nonnull %expr) #6, !dbg !3646
  br label %cleanup.cont, !dbg !3647

sw.bb41:                                          ; preds = %if.end5
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 241) #7, !dbg !3648
  %decl_state42 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 1, !dbg !3649
  %17 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state42, align 8, !dbg !3649
  %main_stream43 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3650
  %18 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream43, align 8, !dbg !3650
  tail call void @lto_output_namespace_decl_index(%struct.lto_out_decl_state* %17, %struct.lto_output_stream* %18, %union.tree_node* nonnull %expr) #6, !dbg !3651
  br label %cleanup.cont, !dbg !3652

sw.bb44:                                          ; preds = %if.end5
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 240) #7, !dbg !3653
  %decl_state45 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 1, !dbg !3654
  %19 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state45, align 8, !dbg !3654
  %main_stream46 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3655
  %20 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream46, align 8, !dbg !3655
  tail call void @lto_output_var_decl_index(%struct.lto_out_decl_state* %19, %struct.lto_output_stream* %20, %union.tree_node* nonnull %expr) #6, !dbg !3656
  br label %cleanup.cont, !dbg !3657

sw.bb47:                                          ; preds = %if.end5
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 242) #7, !dbg !3658
  %decl_state48 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 1, !dbg !3659
  %21 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state48, align 8, !dbg !3659
  %main_stream49 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3660
  %22 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream49, align 8, !dbg !3660
  tail call void @lto_output_var_decl_index(%struct.lto_out_decl_state* %21, %struct.lto_output_stream* %22, %union.tree_node* nonnull %expr) #6, !dbg !3661
  br label %cleanup.cont, !dbg !3662

sw.default:                                       ; preds = %if.end5
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3663
  br label %cleanup.cont, !dbg !3664

cleanup.cont:                                     ; preds = %if.then, %if.then1, %if.then4, %sw.default, %sw.bb47, %sw.bb44, %sw.bb41, %sw.bb38, %cond.end34, %sw.bb25, %cond.end, %sw.bb11, %sw.bb10, %sw.bb
  ret void, !dbg !3665
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @tree_is_indexable(%union.tree_node* %t) unnamed_addr #5 !dbg !3666 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3668, metadata !DIExpression()), !dbg !3669
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3670
  %bf.load = load i64, i64* %0, align 8, !dbg !3670
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3672
  %cmp = icmp eq i64 %bf.cast1, 34, !dbg !3672
  br i1 %cmp, label %return, label %if.else, !dbg !3673

if.else:                                          ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 32, !dbg !3674
  br i1 %cmp5, label %land.lhs.true, label %if.else13, !dbg !3676

land.lhs.true:                                    ; preds = %if.else
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %t) #6, !dbg !3677
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !3677
  br i1 %tobool, label %land.lhs.true.if.else13_crit_edge, label %land.lhs.true6, !dbg !3678

land.lhs.true.if.else13_crit_edge:                ; preds = %land.lhs.true
  %bf.load15.pre = load i64, i64* %0, align 8, !dbg !3679
  br label %if.else13, !dbg !3678

land.lhs.true6:                                   ; preds = %land.lhs.true
  %bf.load8 = load i64, i64* %0, align 8, !dbg !3680
  %bf.cast104 = and i64 %bf.load8, 67108864, !dbg !3680
  %tobool11 = icmp eq i64 %bf.cast104, 0, !dbg !3680
  br i1 %tobool11, label %return, label %if.else13, !dbg !3681

if.else13:                                        ; preds = %land.lhs.true.if.else13_crit_edge, %land.lhs.true6, %if.else
  %bf.load27 = phi i64 [ %bf.load15.pre, %land.lhs.true.if.else13_crit_edge ], [ %bf.load8, %land.lhs.true6 ], [ %bf.load, %if.else ], !dbg !3679
  %bf.cast17 = and i64 %bf.load27, 65535, !dbg !3679
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast17, !dbg !3679
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3679
  %cmp18 = icmp eq i32 %1, 2, !dbg !3679
  br i1 %cmp18, label %lor.end, label %lor.lhs.false, !dbg !3682

lor.lhs.false:                                    ; preds = %if.else13
  %cmp25 = icmp eq i32 %1, 3, !dbg !3683
  br i1 %cmp25, label %lor.end, label %lor.rhs, !dbg !3684

lor.rhs:                                          ; preds = %lor.lhs.false
  %cmp30 = icmp eq i64 %bf.cast17, 141, !dbg !3685
  %phitmp = zext i1 %cmp30 to i8, !dbg !3684
  br label %lor.end, !dbg !3684

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.else13
  %2 = phi i8 [ 1, %lor.lhs.false ], [ 1, %if.else13 ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !3686

return:                                           ; preds = %land.lhs.true6, %entry, %lor.end
  %retval.0 = phi i8 [ %2, %lor.end ], [ 0, %entry ], [ 0, %land.lhs.true6 ], !dbg !3687
  ret i8 %retval.0, !dbg !3688
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_type_ref(%struct.output_block* %ob, %union.tree_node* %node) unnamed_addr #5 !dbg !3689 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3691, metadata !DIExpression()), !dbg !3693
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !3692, metadata !DIExpression()), !dbg !3693
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 245) #7, !dbg !3694
  %decl_state = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 1, !dbg !3695
  %0 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state, align 8, !dbg !3695
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3696
  %1 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3696
  tail call void @lto_output_type_ref_index(%struct.lto_out_decl_state* %0, %struct.lto_output_stream* %1, %union.tree_node* %node) #6, !dbg !3697
  ret void, !dbg !3698
}

declare dso_local void @lto_output_field_decl_index(%struct.lto_out_decl_state*, %struct.lto_output_stream*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @lto_output_fn_decl_index(%struct.lto_out_decl_state*, %struct.lto_output_stream*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_function_context(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local void @lto_output_var_decl_index(%struct.lto_out_decl_state*, %struct.lto_output_stream*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @lto_output_type_decl_index(%struct.lto_out_decl_state*, %struct.lto_output_stream*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @lto_output_namespace_decl_index(%struct.lto_out_decl_state*, %struct.lto_output_stream*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @lto_output_type_ref_index(%struct.lto_out_decl_state*, %struct.lto_output_stream*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @lto_output_sleb128_stream(%struct.lto_output_stream*, i64) local_unnamed_addr #2

declare dso_local void @sorry(i8*, ...) local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_string(%struct.output_block* %ob, %struct.lto_output_stream* %index_stream, i8* %string) unnamed_addr #5 !dbg !3699 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3703, metadata !DIExpression()), !dbg !3706
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %index_stream, metadata !3704, metadata !DIExpression()), !dbg !3706
  call void @llvm.dbg.value(metadata i8* %string, metadata !3705, metadata !DIExpression()), !dbg !3706
  %tobool = icmp eq i8* %string, null, !dbg !3707
  br i1 %tobool, label %if.else, label %if.then, !dbg !3709

if.then:                                          ; preds = %entry
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %index_stream, i64 0) #6, !dbg !3710
  %call = tail call i64 @strlen(i8* nonnull %string) #6, !dbg !3712
  %0 = trunc i64 %call to i32, !dbg !3712
  %conv = add i32 %0, 1, !dbg !3712
  tail call fastcc void @output_string_with_length(%struct.output_block* %ob, %struct.lto_output_stream* %index_stream, i8* nonnull %string, i32 %conv) #7, !dbg !3713
  br label %if.end, !dbg !3714

if.else:                                          ; preds = %entry
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %index_stream, i64 1) #6, !dbg !3715
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3716
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_string_with_length(%struct.output_block* %ob, %struct.lto_output_stream* %index_stream, i8* %s, i32 %len) unnamed_addr #5 !dbg !3717 {
entry:
  %s_slot = alloca %struct.string_slot, align 8
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3721, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %index_stream, metadata !3722, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata i8* %s, metadata !3723, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata i32 %len, metadata !3724, metadata !DIExpression()), !dbg !3736
  %0 = bitcast %struct.string_slot* %s_slot to i8*, !dbg !3737
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3737
  %add = add i32 %len, 1, !dbg !3738
  %conv = zext i32 %add to i64, !dbg !3739
  %call = tail call i8* @xmalloc(i64 %conv) #6, !dbg !3740
  call void @llvm.dbg.value(metadata i8* %call, metadata !3727, metadata !DIExpression()), !dbg !3736
  %conv1 = zext i32 %len to i64, !dbg !3741
  %call2 = tail call i8* @memcpy(i8* %call, i8* %s, i64 %conv1) #6, !dbg !3742
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 %conv1, !dbg !3743
  store i8 0, i8* %arrayidx, align 1, !dbg !3744
  %s3 = getelementptr inbounds %struct.string_slot, %struct.string_slot* %s_slot, i64 0, i32 0, !dbg !3745
  store i8* %call, i8** %s3, align 8, !dbg !3746
  %len4 = getelementptr inbounds %struct.string_slot, %struct.string_slot* %s_slot, i64 0, i32 1, !dbg !3747
  store i32 %len, i32* %len4, align 8, !dbg !3748
  %slot_num = getelementptr inbounds %struct.string_slot, %struct.string_slot* %s_slot, i64 0, i32 2, !dbg !3749
  store i32 0, i32* %slot_num, align 4, !dbg !3750
  %string_hash_table = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 5, !dbg !3751
  %1 = load %struct.htab*, %struct.htab** %string_hash_table, align 8, !dbg !3751
  %call5 = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 1) #6, !dbg !3752
  %2 = bitcast i8** %call5 to %struct.string_slot**, !dbg !3753
  call void @llvm.dbg.value(metadata %struct.string_slot** %2, metadata !3725, metadata !DIExpression()), !dbg !3736
  %3 = load %struct.string_slot*, %struct.string_slot** %2, align 8, !dbg !3754
  %cmp = icmp eq %struct.string_slot* %3, null, !dbg !3755
  br i1 %cmp, label %if.then, label %if.else, !dbg !3756

if.then:                                          ; preds = %entry
  %string_stream7 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 3, !dbg !3757
  %4 = load %struct.lto_output_stream*, %struct.lto_output_stream** %string_stream7, align 8, !dbg !3757
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %4, metadata !3728, metadata !DIExpression()), !dbg !3758
  %total_size = getelementptr inbounds %struct.lto_output_stream, %struct.lto_output_stream* %4, i64 0, i32 5, !dbg !3759
  %5 = load i32, i32* %total_size, align 8, !dbg !3759
  call void @llvm.dbg.value(metadata i32 %5, metadata !3731, metadata !DIExpression()), !dbg !3758
  %call8 = call i8* @xmalloc(i64 16) #6, !dbg !3760
  call void @llvm.dbg.value(metadata i8* %call8, metadata !3732, metadata !DIExpression()), !dbg !3758
  %s9 = bitcast i8* %call8 to i8**, !dbg !3761
  store i8* %call, i8** %s9, align 8, !dbg !3762
  %len10 = getelementptr inbounds i8, i8* %call8, i64 8, !dbg !3763
  %6 = bitcast i8* %len10 to i32*, !dbg !3763
  store i32 %len, i32* %6, align 8, !dbg !3764
  %slot_num11 = getelementptr inbounds i8, i8* %call8, i64 12, !dbg !3765
  %7 = bitcast i8* %slot_num11 to i32*, !dbg !3765
  store i32 %5, i32* %7, align 4, !dbg !3766
  store i8* %call8, i8** %call5, align 8, !dbg !3767
  %conv12 = zext i32 %5 to i64, !dbg !3768
  call void @lto_output_uleb128_stream(%struct.lto_output_stream* %index_stream, i64 %conv12) #6, !dbg !3769
  call void @lto_output_uleb128_stream(%struct.lto_output_stream* %4, i64 %conv1) #6, !dbg !3770
  call void @llvm.dbg.value(metadata i32 0, metadata !3733, metadata !DIExpression()), !dbg !3758
  %wide.trip.count = zext i32 %len to i64, !dbg !3771
  br label %for.cond, !dbg !3774

for.cond:                                         ; preds = %for.body, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ], !dbg !3775
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3733, metadata !DIExpression()), !dbg !3758
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !3771
  br i1 %exitcond, label %if.end.loopexit, label %for.body, !dbg !3776

for.body:                                         ; preds = %for.cond
  %arrayidx17 = getelementptr inbounds i8, i8* %call, i64 %indvars.iv, !dbg !3777
  %8 = load i8, i8* %arrayidx17, align 1, !dbg !3777
  call void @lto_output_1_stream(%struct.lto_output_stream* %4, i8 signext %8) #6, !dbg !3778
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3779
  br label %for.cond, !dbg !3780, !llvm.loop !3781

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.string_slot* %3, metadata !3734, metadata !DIExpression()), !dbg !3783
  %slot_num18 = getelementptr inbounds %struct.string_slot, %struct.string_slot* %3, i64 0, i32 2, !dbg !3784
  %9 = load i32, i32* %slot_num18, align 4, !dbg !3784
  %conv19 = zext i32 %9 to i64, !dbg !3785
  call void @lto_output_uleb128_stream(%struct.lto_output_stream* %index_stream, i64 %conv19) #6, !dbg !3786
  call void @free(i8* %call) #6, !dbg !3787
  br label %if.end

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !3788

if.end:                                           ; preds = %if.end.loopexit, %if.else
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3788
  ret void, !dbg !3788
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_tree_header(%struct.output_block* %ob, %union.tree_node* %expr, i32 %ix) unnamed_addr #5 !dbg !3789 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3791, metadata !DIExpression()), !dbg !3796
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3792, metadata !DIExpression()), !dbg !3796
  call void @llvm.dbg.value(metadata i32 %ix, metadata !3793, metadata !DIExpression()), !dbg !3796
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3797
  %bf.load = load i64, i64* %0, align 8, !dbg !3797
  %1 = trunc i64 %bf.load to i32, !dbg !3797
  %bf.cast = and i32 %1, 65535, !dbg !3797
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !3795, metadata !DIExpression()), !dbg !3796
  %call = tail call fastcc zeroext i8 @lto_is_streamable(%union.tree_node* %expr) #7, !dbg !3798
  %tobool = icmp eq i8 %call, 0, !dbg !3798
  br i1 %tobool, label %if.then, label %entry.if.end_crit_edge, !dbg !3800

entry.if.end_crit_edge:                           ; preds = %entry
  %.pre = zext i32 %bf.cast to i64, !dbg !3801
  br label %if.end, !dbg !3800

if.then:                                          ; preds = %entry
  %idxprom = zext i32 %bf.cast to i64, !dbg !3803
  %arrayidx = getelementptr inbounds [0 x i8*], [0 x i8*]* @tree_code_name, i64 0, i64 %idxprom, !dbg !3803
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !3803
  tail call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0), i8* %2) #6, !dbg !3804
  br label %if.end, !dbg !3804

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %idxprom2.pre-phi = phi i64 [ %.pre, %entry.if.end_crit_edge ], [ %idxprom, %if.then ], !dbg !3801
  %call1 = tail call fastcc i32 @lto_tree_code_to_tag(i32 %bf.cast) #7, !dbg !3805
  call void @llvm.dbg.value(metadata i32 %call1, metadata !3794, metadata !DIExpression()), !dbg !3796
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 %call1) #7, !dbg !3806
  %conv = sext i32 %ix to i64, !dbg !3807
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !3808
  %arrayidx4 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom2.pre-phi, i64 6, !dbg !3801
  %3 = load i8, i8* %arrayidx4, align 2, !dbg !3801
  %tobool5 = icmp eq i8 %3, 0, !dbg !3801
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !3809

if.then6:                                         ; preds = %if.end
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3810
  %4 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !3810
  tail call fastcc void @output_string_cst(%struct.output_block* %ob, %struct.lto_output_stream* %4, %union.tree_node* %expr) #7, !dbg !3811
  br label %if.end35, !dbg !3811

if.else:                                          ; preds = %if.end
  %arrayidx9 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom2.pre-phi, i64 8, !dbg !3812
  %5 = load i8, i8* %arrayidx9, align 8, !dbg !3812
  %tobool10 = icmp eq i8 %5, 0, !dbg !3812
  br i1 %tobool10, label %if.else13, label %if.then11, !dbg !3814

if.then11:                                        ; preds = %if.else
  %main_stream12 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !3815
  %6 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream12, align 8, !dbg !3815
  tail call fastcc void @output_identifier(%struct.output_block* %ob, %struct.lto_output_stream* %6, %union.tree_node* %expr) #7, !dbg !3816
  br label %if.end35, !dbg !3816

if.else13:                                        ; preds = %if.else
  %arrayidx16 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom2.pre-phi, i64 24, !dbg !3817
  %7 = load i8, i8* %arrayidx16, align 8, !dbg !3817
  %tobool17 = icmp eq i8 %7, 0, !dbg !3817
  br i1 %tobool17, label %if.else20, label %if.then18, !dbg !3819

if.then18:                                        ; preds = %if.else13
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3820
  %9 = load i32, i32* %8, align 8, !dbg !3820
  %conv19 = sext i32 %9 to i64, !dbg !3820
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv19) #7, !dbg !3821
  br label %if.end35, !dbg !3821

if.else20:                                        ; preds = %if.else13
  %arrayidx23 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom2.pre-phi, i64 28, !dbg !3822
  %10 = load i8, i8* %arrayidx23, align 4, !dbg !3822
  %tobool24 = icmp eq i8 %10, 0, !dbg !3822
  br i1 %tobool24, label %if.end35, label %if.then25, !dbg !3824

if.then25:                                        ; preds = %if.else20
  %base_binfos28 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !3825
  %base29 = bitcast %union.tree_node** %base_binfos28 to %struct.VEC_tree_base*, !dbg !3825
  %call30 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* nonnull %base29) #7, !dbg !3825
  %conv31 = zext i32 %call30 to i64, !dbg !3825
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv31) #7, !dbg !3826
  br label %if.end35, !dbg !3826

if.end35:                                         ; preds = %if.else20, %if.then11, %if.then25, %if.then18, %if.then6
  ret void, !dbg !3827
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.bitpack_d* @pack_value_fields(%union.tree_node* %expr) unnamed_addr #5 !dbg !3828 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3832, metadata !DIExpression()), !dbg !3835
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3836
  %bf.load = load i64, i64* %0, align 8, !dbg !3836
  %bf.cast = and i64 %bf.load, 65535, !dbg !3836
  %call = tail call %struct.bitpack_d* @bitpack_create() #6, !dbg !3837
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %call, metadata !3834, metadata !DIExpression()), !dbg !3835
  tail call fastcc void @pack_ts_base_value_fields(%struct.bitpack_d* %call, %union.tree_node* %expr) #7, !dbg !3838
  %arrayidx1 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 3, !dbg !3839
  %1 = load i8, i8* %arrayidx1, align 1, !dbg !3839
  %tobool = icmp eq i8 %1, 0, !dbg !3839
  br i1 %tobool, label %if.end, label %if.then, !dbg !3841

if.then:                                          ; preds = %entry
  tail call fastcc void @pack_ts_real_cst_value_fields(%struct.bitpack_d* %call, %union.tree_node* %expr) #7, !dbg !3842
  br label %if.end, !dbg !3842

if.end:                                           ; preds = %entry, %if.then
  %arrayidx4 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 4, !dbg !3843
  %2 = load i8, i8* %arrayidx4, align 4, !dbg !3843
  %tobool5 = icmp eq i8 %2, 0, !dbg !3843
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !3845

if.then6:                                         ; preds = %if.end
  tail call fastcc void @pack_ts_fixed_cst_value_fields(%struct.bitpack_d* %call, %union.tree_node* %expr) #7, !dbg !3846
  br label %if.end7, !dbg !3846

if.end7:                                          ; preds = %if.end, %if.then6
  %arrayidx10 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 10, !dbg !3847
  %3 = load i8, i8* %arrayidx10, align 2, !dbg !3847
  %tobool11 = icmp eq i8 %3, 0, !dbg !3847
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !3849

if.then12:                                        ; preds = %if.end7
  tail call fastcc void @pack_ts_decl_common_value_fields(%struct.bitpack_d* %call, %union.tree_node* %expr) #7, !dbg !3850
  br label %if.end13, !dbg !3850

if.end13:                                         ; preds = %if.end7, %if.then12
  %arrayidx16 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 11, !dbg !3851
  %4 = load i8, i8* %arrayidx16, align 1, !dbg !3851
  %tobool17 = icmp eq i8 %4, 0, !dbg !3851
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !3853

if.then18:                                        ; preds = %if.end13
  tail call fastcc void @pack_ts_decl_wrtl_value_fields(%struct.bitpack_d* %call, %union.tree_node* %expr) #7, !dbg !3854
  br label %if.end19, !dbg !3854

if.end19:                                         ; preds = %if.end13, %if.then18
  %arrayidx22 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 13, !dbg !3855
  %5 = load i8, i8* %arrayidx22, align 1, !dbg !3855
  %tobool23 = icmp eq i8 %5, 0, !dbg !3855
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !3857

if.then24:                                        ; preds = %if.end19
  tail call fastcc void @pack_ts_decl_with_vis_value_fields(%struct.bitpack_d* %call, %union.tree_node* %expr) #7, !dbg !3858
  br label %if.end25, !dbg !3858

if.end25:                                         ; preds = %if.end19, %if.then24
  %arrayidx28 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 21, !dbg !3859
  %6 = load i8, i8* %arrayidx28, align 1, !dbg !3859
  %tobool29 = icmp eq i8 %6, 0, !dbg !3859
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !3861

if.then30:                                        ; preds = %if.end25
  tail call fastcc void @pack_ts_function_decl_value_fields(%struct.bitpack_d* %call, %union.tree_node* %expr) #7, !dbg !3862
  br label %if.end31, !dbg !3862

if.end31:                                         ; preds = %if.end25, %if.then30
  %arrayidx34 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 22, !dbg !3863
  %7 = load i8, i8* %arrayidx34, align 2, !dbg !3863
  %tobool35 = icmp eq i8 %7, 0, !dbg !3863
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !3865

if.then36:                                        ; preds = %if.end31
  tail call fastcc void @pack_ts_type_value_fields(%struct.bitpack_d* %call, %union.tree_node* %expr) #7, !dbg !3866
  br label %if.end37, !dbg !3866

if.end37:                                         ; preds = %if.end31, %if.then36
  %arrayidx40 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 27, !dbg !3867
  %8 = load i8, i8* %arrayidx40, align 1, !dbg !3867
  %tobool41 = icmp eq i8 %8, 0, !dbg !3867
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !3869

if.then42:                                        ; preds = %if.end37
  tail call fastcc void @pack_ts_block_value_fields(%struct.bitpack_d* %call, %union.tree_node* %expr) #7, !dbg !3870
  br label %if.end43, !dbg !3870

if.end43:                                         ; preds = %if.end37, %if.then42
  %arrayidx46 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 26, !dbg !3871
  %9 = load i8, i8* %arrayidx46, align 2, !dbg !3871
  %tobool47 = icmp eq i8 %9, 0, !dbg !3871
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !3873

if.then48:                                        ; preds = %if.end43
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 586, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3874
  br label %if.end49, !dbg !3876

if.end49:                                         ; preds = %if.end43, %if.then48
  %arrayidx52 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 29, !dbg !3877
  %10 = load i8, i8* %arrayidx52, align 1, !dbg !3877
  %tobool53 = icmp eq i8 %10, 0, !dbg !3877
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !3879

if.then54:                                        ; preds = %if.end49
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 592, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3880
  br label %if.end55, !dbg !3882

if.end55:                                         ; preds = %if.end49, %if.then54
  %arrayidx58 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 31, !dbg !3883
  %11 = load i8, i8* %arrayidx58, align 1, !dbg !3883
  %tobool59 = icmp eq i8 %11, 0, !dbg !3883
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !3885

if.then60:                                        ; preds = %if.end55
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 598, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3886
  br label %if.end61, !dbg !3888

if.end61:                                         ; preds = %if.end55, %if.then60
  ret %struct.bitpack_d* %call, !dbg !3889
}

declare dso_local void @bitpack_delete(%struct.bitpack_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !3890 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !3892, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3893, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !3894, metadata !DIExpression()), !dbg !3896
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3897
  %bf.load = load i64, i64* %0, align 8, !dbg !3897
  %bf.cast = and i64 %bf.load, 65535, !dbg !3897
  call void @llvm.dbg.value(metadata i64 %bf.cast, metadata !3895, metadata !DIExpression()), !dbg !3896
  %arrayidx1 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 1, !dbg !3898
  %1 = load i8, i8* %arrayidx1, align 1, !dbg !3898
  %tobool = icmp eq i8 %1, 0, !dbg !3898
  br i1 %tobool, label %if.end, label %if.then, !dbg !3900

if.then:                                          ; preds = %entry
  tail call fastcc void @lto_output_ts_common_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3901
  br label %if.end, !dbg !3901

if.end:                                           ; preds = %entry, %if.then
  %arrayidx4 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 5, !dbg !3902
  %2 = load i8, i8* %arrayidx4, align 1, !dbg !3902
  %tobool5 = icmp eq i8 %2, 0, !dbg !3902
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !3904

if.then6:                                         ; preds = %if.end
  tail call fastcc void @lto_output_ts_vector_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3905
  br label %if.end7, !dbg !3905

if.end7:                                          ; preds = %if.end, %if.then6
  %arrayidx10 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 7, !dbg !3906
  %3 = load i8, i8* %arrayidx10, align 1, !dbg !3906
  %tobool11 = icmp eq i8 %3, 0, !dbg !3906
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !3908

if.then12:                                        ; preds = %if.end7
  tail call fastcc void @lto_output_ts_complex_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3909
  br label %if.end13, !dbg !3909

if.end13:                                         ; preds = %if.end7, %if.then12
  %arrayidx16 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 9, !dbg !3910
  %4 = load i8, i8* %arrayidx16, align 1, !dbg !3910
  %tobool17 = icmp eq i8 %4, 0, !dbg !3910
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !3912

if.then18:                                        ; preds = %if.end13
  tail call fastcc void @lto_output_ts_decl_minimal_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3913
  br label %if.end19, !dbg !3913

if.end19:                                         ; preds = %if.end13, %if.then18
  %arrayidx22 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 10, !dbg !3914
  %5 = load i8, i8* %arrayidx22, align 2, !dbg !3914
  %tobool23 = icmp eq i8 %5, 0, !dbg !3914
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !3916

if.then24:                                        ; preds = %if.end19
  tail call fastcc void @lto_output_ts_decl_common_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3917
  br label %if.end25, !dbg !3917

if.end25:                                         ; preds = %if.end19, %if.then24
  %arrayidx28 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 12, !dbg !3918
  %6 = load i8, i8* %arrayidx28, align 4, !dbg !3918
  %tobool29 = icmp eq i8 %6, 0, !dbg !3918
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !3920

if.then30:                                        ; preds = %if.end25
  tail call fastcc void @lto_output_ts_decl_non_common_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3921
  br label %if.end31, !dbg !3921

if.end31:                                         ; preds = %if.end25, %if.then30
  %arrayidx34 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 13, !dbg !3922
  %7 = load i8, i8* %arrayidx34, align 1, !dbg !3922
  %tobool35 = icmp eq i8 %7, 0, !dbg !3922
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !3924

if.then36:                                        ; preds = %if.end31
  tail call fastcc void @lto_output_ts_decl_with_vis_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3925
  br label %if.end37, !dbg !3925

if.end37:                                         ; preds = %if.end31, %if.then36
  %arrayidx40 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 14, !dbg !3926
  %8 = load i8, i8* %arrayidx40, align 2, !dbg !3926
  %tobool41 = icmp eq i8 %8, 0, !dbg !3926
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !3928

if.then42:                                        ; preds = %if.end37
  tail call fastcc void @lto_output_ts_field_decl_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3929
  br label %if.end43, !dbg !3929

if.end43:                                         ; preds = %if.end37, %if.then42
  %arrayidx46 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 21, !dbg !3930
  %9 = load i8, i8* %arrayidx46, align 1, !dbg !3930
  %tobool47 = icmp eq i8 %9, 0, !dbg !3930
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !3932

if.then48:                                        ; preds = %if.end43
  tail call fastcc void @lto_output_ts_function_decl_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3933
  br label %if.end49, !dbg !3933

if.end49:                                         ; preds = %if.end43, %if.then48
  %arrayidx52 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 22, !dbg !3934
  %10 = load i8, i8* %arrayidx52, align 2, !dbg !3934
  %tobool53 = icmp eq i8 %10, 0, !dbg !3934
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !3936

if.then54:                                        ; preds = %if.end49
  tail call fastcc void @lto_output_ts_type_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3937
  br label %if.end55, !dbg !3937

if.end55:                                         ; preds = %if.end49, %if.then54
  %arrayidx58 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 23, !dbg !3938
  %11 = load i8, i8* %arrayidx58, align 1, !dbg !3938
  %tobool59 = icmp eq i8 %11, 0, !dbg !3938
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !3940

if.then60:                                        ; preds = %if.end55
  tail call fastcc void @lto_output_ts_list_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3941
  br label %if.end61, !dbg !3941

if.end61:                                         ; preds = %if.end55, %if.then60
  %arrayidx64 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 24, !dbg !3942
  %12 = load i8, i8* %arrayidx64, align 8, !dbg !3942
  %tobool65 = icmp eq i8 %12, 0, !dbg !3942
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !3944

if.then66:                                        ; preds = %if.end61
  tail call fastcc void @lto_output_ts_vec_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3945
  br label %if.end67, !dbg !3945

if.end67:                                         ; preds = %if.end61, %if.then66
  %arrayidx70 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 25, !dbg !3946
  %13 = load i8, i8* %arrayidx70, align 1, !dbg !3946
  %tobool71 = icmp eq i8 %13, 0, !dbg !3946
  br i1 %tobool71, label %if.end73, label %if.then72, !dbg !3948

if.then72:                                        ; preds = %if.end67
  tail call fastcc void @lto_output_ts_exp_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3949
  br label %if.end73, !dbg !3949

if.end73:                                         ; preds = %if.end67, %if.then72
  %arrayidx76 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 26, !dbg !3950
  %14 = load i8, i8* %arrayidx76, align 2, !dbg !3950
  %tobool77 = icmp eq i8 %14, 0, !dbg !3950
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !3952

if.then78:                                        ; preds = %if.end73
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 1155, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3953
  br label %if.end79, !dbg !3955

if.end79:                                         ; preds = %if.end73, %if.then78
  %arrayidx82 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 27, !dbg !3956
  %15 = load i8, i8* %arrayidx82, align 1, !dbg !3956
  %tobool83 = icmp eq i8 %15, 0, !dbg !3956
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !3958

if.then84:                                        ; preds = %if.end79
  tail call fastcc void @lto_output_ts_block_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3959
  br label %if.end85, !dbg !3959

if.end85:                                         ; preds = %if.end79, %if.then84
  %arrayidx88 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 28, !dbg !3960
  %16 = load i8, i8* %arrayidx88, align 4, !dbg !3960
  %tobool89 = icmp eq i8 %16, 0, !dbg !3960
  br i1 %tobool89, label %if.end91, label %if.then90, !dbg !3962

if.then90:                                        ; preds = %if.end85
  tail call fastcc void @lto_output_ts_binfo_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3963
  br label %if.end91, !dbg !3963

if.end91:                                         ; preds = %if.end85, %if.then90
  %arrayidx94 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 30, !dbg !3964
  %17 = load i8, i8* %arrayidx94, align 2, !dbg !3964
  %tobool95 = icmp eq i8 %17, 0, !dbg !3964
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !3966

if.then96:                                        ; preds = %if.end91
  tail call fastcc void @lto_output_ts_constructor_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) #7, !dbg !3967
  br label %if.end97, !dbg !3967

if.end97:                                         ; preds = %if.end91, %if.then96
  %arrayidx100 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 29, !dbg !3968
  %18 = load i8, i8* %arrayidx100, align 1, !dbg !3968
  %tobool101 = icmp eq i8 %18, 0, !dbg !3968
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !3970

if.then102:                                       ; preds = %if.end97
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 1170, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3971
  br label %if.end103, !dbg !3973

if.end103:                                        ; preds = %if.end97, %if.then102
  %arrayidx106 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 31, !dbg !3974
  %19 = load i8, i8* %arrayidx106, align 1, !dbg !3974
  %tobool107 = icmp eq i8 %19, 0, !dbg !3974
  br i1 %tobool107, label %if.end109, label %if.then108, !dbg !3976

if.then108:                                       ; preds = %if.end103
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 1176, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3977
  br label %if.end109, !dbg !3979

if.end109:                                        ; preds = %if.end103, %if.then108
  %arrayidx112 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 32, !dbg !3980
  %20 = load i8, i8* %arrayidx112, align 16, !dbg !3980
  %tobool113 = icmp eq i8 %20, 0, !dbg !3980
  br i1 %tobool113, label %if.end115, label %if.then114, !dbg !3982

if.then114:                                       ; preds = %if.end109
  tail call void (i8*, ...) @sorry(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3983
  br label %if.end115, !dbg !3983

if.end115:                                        ; preds = %if.end109, %if.then114
  %arrayidx118 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 33, !dbg !3984
  %21 = load i8, i8* %arrayidx118, align 1, !dbg !3984
  %tobool119 = icmp eq i8 %21, 0, !dbg !3984
  br i1 %tobool119, label %if.end121, label %if.then120, !dbg !3986

if.then120:                                       ; preds = %if.end115
  tail call void (i8*, ...) @sorry(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3987
  br label %if.end121, !dbg !3987

if.end121:                                        ; preds = %if.end115, %if.then120
  ret void, !dbg !3988
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @lto_is_streamable(%union.tree_node* %expr) unnamed_addr #0 !dbg !3989 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3991, metadata !DIExpression()), !dbg !3993
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3994
  %bf.load = load i64, i64* %0, align 8, !dbg !3994
  %bf.cast = and i64 %bf.load, 65535, !dbg !3994
  %call = tail call fastcc zeroext i8 @is_lang_specific(%union.tree_node* %expr) #7, !dbg !3995
  %tobool = icmp eq i8 %call, 0, !dbg !3995
  br i1 %tobool, label %switch.early.test, label %land.end, !dbg !3996

switch.early.test:                                ; preds = %entry
  %trunc = trunc i64 %bf.load to i16, !dbg !3996
  switch i16 %trunc, label %lor.rhs [
    i16 147, label %land.end
    i16 141, label %land.end
    i16 60, label %land.end
    i16 59, label %land.end
    i16 58, label %land.end
    i16 55, label %land.end
    i16 54, label %land.end
    i16 53, label %land.end
    i16 22, label %land.end
    i16 139, label %land.end.fold.split
    i16 132, label %land.end.fold.split
  ], !dbg !3996

lor.rhs:                                          ; preds = %switch.early.test
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3997
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3997
  %cmp19 = icmp ne i32 %1, 8, !dbg !3998
  %phitmp = zext i1 %cmp19 to i8, !dbg !3999
  br label %land.end, !dbg !3999

land.end.fold.split:                              ; preds = %switch.early.test, %switch.early.test
  br label %land.end, !dbg !4000

land.end:                                         ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %land.end.fold.split, %entry, %lor.rhs
  %2 = phi i8 [ 0, %switch.early.test ], [ %phitmp, %lor.rhs ], [ 0, %entry ], [ 0, %switch.early.test ], [ 0, %switch.early.test ], [ 0, %switch.early.test ], [ 0, %switch.early.test ], [ 0, %switch.early.test ], [ 0, %switch.early.test ], [ 0, %switch.early.test ], [ 0, %switch.early.test ], [ 1, %land.end.fold.split ]
  ret i8 %2, !dbg !4001
}

declare dso_local void @internal_error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_string_cst(%struct.output_block* %ob, %struct.lto_output_stream* %index_stream, %union.tree_node* %string) unnamed_addr #5 !dbg !4002 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4006, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %index_stream, metadata !4007, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.value(metadata %union.tree_node* %string, metadata !4008, metadata !DIExpression()), !dbg !4009
  %tobool = icmp eq %union.tree_node* %string, null, !dbg !4010
  br i1 %tobool, label %if.else, label %if.then, !dbg !4012

if.then:                                          ; preds = %entry
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %index_stream, i64 0) #6, !dbg !4013
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %string, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4015
  %arraydecay = bitcast i32* %str to i8*, !dbg !4015
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %string, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4016
  %1 = load i32, i32* %0, align 8, !dbg !4016
  tail call fastcc void @output_string_with_length(%struct.output_block* %ob, %struct.lto_output_stream* %index_stream, i8* nonnull %arraydecay, i32 %1) #7, !dbg !4017
  br label %if.end, !dbg !4018

if.else:                                          ; preds = %entry
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %index_stream, i64 1) #6, !dbg !4019
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4020
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_identifier(%struct.output_block* %ob, %struct.lto_output_stream* %index_stream, %union.tree_node* %id) unnamed_addr #5 !dbg !4021 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4023, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %index_stream, metadata !4024, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.value(metadata %union.tree_node* %id, metadata !4025, metadata !DIExpression()), !dbg !4026
  %tobool = icmp eq %union.tree_node* %id, null, !dbg !4027
  br i1 %tobool, label %if.else, label %if.then, !dbg !4029

if.then:                                          ; preds = %entry
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %index_stream, i64 0) #6, !dbg !4030
  %id1 = getelementptr inbounds %union.tree_node, %union.tree_node* %id, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4032
  %str = bitcast i32* %id1 to i8**, !dbg !4032
  %0 = load i8*, i8** %str, align 8, !dbg !4032
  %1 = getelementptr inbounds i32, i32* %id1, i64 2, !dbg !4033
  %2 = load i32, i32* %1, align 8, !dbg !4033
  tail call fastcc void @output_string_with_length(%struct.output_block* %ob, %struct.lto_output_stream* %index_stream, i8* %0, i32 %2) #7, !dbg !4034
  br label %if.end, !dbg !4035

if.else:                                          ; preds = %entry
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %index_stream, i64 1) #6, !dbg !4036
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4037
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !4038 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4044, metadata !DIExpression()), !dbg !4045
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !4046
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4046

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !4046
  %0 = load i32, i32* %num, align 8, !dbg !4046
  br label %cond.end, !dbg !4046

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4046
  ret i32 %cond, !dbg !4046
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_lang_specific(%union.tree_node* %t) unnamed_addr #0 !dbg !4047 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4049, metadata !DIExpression()), !dbg !4050
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4051
  %bf.load = load i64, i64* %0, align 8, !dbg !4051
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4052
  %cmp = icmp eq i64 %bf.cast1, 22, !dbg !4052
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4053

lor.rhs:                                          ; preds = %entry
  %bf.cast42 = and i64 %bf.load, 65532, !dbg !4054
  %cmp5 = icmp ugt i64 %bf.cast42, 187, !dbg !4054
  %phitmp = zext i1 %cmp5 to i8, !dbg !4053
  br label %lor.end, !dbg !4053

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %1, !dbg !4055
}

declare dso_local %struct.bitpack_d* @bitpack_create() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @pack_ts_base_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !4056 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !4060, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4061, metadata !DIExpression()), !dbg !4062
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4063
  %bf.load = load i64, i64* %0, align 8, !dbg !4063
  %bf.cast = and i64 %bf.load, 65535, !dbg !4063
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast, i32 16) #6, !dbg !4064
  %bf.load2 = load i64, i64* %0, align 8, !dbg !4065
  %bf.cast4 = and i64 %bf.load2, 65535, !dbg !4065
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast4, !dbg !4065
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4065
  %cmp = icmp eq i32 %1, 2, !dbg !4065
  br i1 %cmp, label %if.end, label %if.then, !dbg !4067

if.then:                                          ; preds = %entry
  %bf.lshr = lshr i64 %bf.load2, 16, !dbg !4068
  %bf.cast9 = and i64 %bf.lshr, 1, !dbg !4068
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast9, i32 1) #6, !dbg !4070
  %bf.load12 = load i64, i64* %0, align 8, !dbg !4071
  %bf.lshr13 = lshr i64 %bf.load12, 17, !dbg !4071
  %bf.cast15 = and i64 %bf.lshr13, 1, !dbg !4071
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast15, i32 1) #6, !dbg !4072
  %bf.load18 = load i64, i64* %0, align 8, !dbg !4073
  %bf.lshr19 = lshr i64 %bf.load18, 20, !dbg !4073
  %bf.cast21 = and i64 %bf.lshr19, 1, !dbg !4073
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast21, i32 1) #6, !dbg !4074
  %bf.load24 = load i64, i64* %0, align 8, !dbg !4075
  %bf.lshr25 = lshr i64 %bf.load24, 27, !dbg !4075
  %bf.cast27 = and i64 %bf.lshr25, 1, !dbg !4075
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast27, i32 1) #6, !dbg !4076
  %bf.load30.pre = load i64, i64* %0, align 8, !dbg !4077
  br label %if.end, !dbg !4078

if.end:                                           ; preds = %if.then, %entry
  %bf.load30 = phi i64 [ %bf.load30.pre, %if.then ], [ %bf.load2, %entry ], !dbg !4077
  %bf.lshr31 = lshr i64 %bf.load30, 18, !dbg !4077
  %bf.cast33 = and i64 %bf.lshr31, 1, !dbg !4077
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast33, i32 1) #6, !dbg !4079
  %bf.load36 = load i64, i64* %0, align 8, !dbg !4080
  %bf.lshr37 = lshr i64 %bf.load36, 19, !dbg !4080
  %bf.cast39 = and i64 %bf.lshr37, 1, !dbg !4080
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast39, i32 1) #6, !dbg !4081
  %bf.load42 = load i64, i64* %0, align 8, !dbg !4082
  %bf.cast44 = and i64 %bf.load42, 65535, !dbg !4082
  %arrayidx46 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast44, !dbg !4082
  %2 = load i32, i32* %arrayidx46, align 4, !dbg !4082
  %cmp47 = icmp eq i32 %2, 3, !dbg !4082
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !4084

if.then49:                                        ; preds = %if.end
  %bf.lshr52 = lshr i64 %bf.load42, 21, !dbg !4085
  %bf.cast54 = and i64 %bf.lshr52, 1, !dbg !4085
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast54, i32 1) #6, !dbg !4086
  br label %if.end72, !dbg !4086

if.else:                                          ; preds = %if.end
  %cmp62 = icmp eq i32 %2, 2, !dbg !4087
  br i1 %cmp62, label %if.then64, label %if.end72, !dbg !4089

if.then64:                                        ; preds = %if.else
  %bf.lshr67 = lshr i64 %bf.load42, 21, !dbg !4090
  %bf.cast69 = and i64 %bf.lshr67, 1, !dbg !4090
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast69, i32 1) #6, !dbg !4091
  br label %if.end72, !dbg !4091

if.end72:                                         ; preds = %if.else, %if.then64, %if.then49
  %bf.load74 = load i64, i64* %0, align 8, !dbg !4092
  %bf.cast76 = and i64 %bf.load74, 65535, !dbg !4092
  %arrayidx78 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast76, !dbg !4092
  %3 = load i32, i32* %arrayidx78, align 4, !dbg !4092
  %cmp79 = icmp eq i32 %3, 2, !dbg !4092
  br i1 %cmp79, label %cond.end, label %cond.false, !dbg !4092

cond.false:                                       ; preds = %if.end72
  %bf.lshr83 = lshr i64 %bf.load74, 22, !dbg !4093
  %bf.cast85 = and i64 %bf.lshr83, 1, !dbg !4093
  br label %cond.end, !dbg !4092

cond.end:                                         ; preds = %if.end72, %cond.false
  %cond = phi i64 [ %bf.cast85, %cond.false ], [ 0, %if.end72 ]
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %cond, i32 1) #6, !dbg !4094
  %bf.load88 = load i64, i64* %0, align 8, !dbg !4095
  %bf.lshr89 = lshr i64 %bf.load88, 23, !dbg !4095
  %bf.cast91 = and i64 %bf.lshr89, 1, !dbg !4095
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast91, i32 1) #6, !dbg !4096
  %bf.load94 = load i64, i64* %0, align 8, !dbg !4097
  %bf.lshr95 = lshr i64 %bf.load94, 24, !dbg !4097
  %bf.cast97 = and i64 %bf.lshr95, 1, !dbg !4097
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast97, i32 1) #6, !dbg !4098
  %bf.load100 = load i64, i64* %0, align 8, !dbg !4099
  %bf.lshr101 = lshr i64 %bf.load100, 25, !dbg !4099
  %bf.cast103 = and i64 %bf.lshr101, 1, !dbg !4099
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast103, i32 1) #6, !dbg !4100
  %bf.load106 = load i64, i64* %0, align 8, !dbg !4101
  %bf.lshr107 = lshr i64 %bf.load106, 26, !dbg !4101
  %bf.cast109 = and i64 %bf.lshr107, 1, !dbg !4101
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast109, i32 1) #6, !dbg !4102
  %bf.load112 = load i64, i64* %0, align 8, !dbg !4103
  %bf.lshr113 = lshr i64 %bf.load112, 28, !dbg !4103
  %bf.cast115 = and i64 %bf.lshr113, 1, !dbg !4103
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast115, i32 1) #6, !dbg !4104
  %bf.load118 = load i64, i64* %0, align 8, !dbg !4105
  %bf.lshr119 = lshr i64 %bf.load118, 29, !dbg !4105
  %bf.cast121 = and i64 %bf.lshr119, 1, !dbg !4105
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast121, i32 1) #6, !dbg !4106
  %bf.load124 = load i64, i64* %0, align 8, !dbg !4107
  %bf.lshr125 = lshr i64 %bf.load124, 30, !dbg !4107
  %bf.cast127 = and i64 %bf.lshr125, 1, !dbg !4107
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast127, i32 1) #6, !dbg !4108
  %bf.load130 = load i64, i64* %0, align 8, !dbg !4109
  %bf.cast132 = and i64 %bf.load130, 65535, !dbg !4109
  %arrayidx134 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast132, !dbg !4109
  %4 = load i32, i32* %arrayidx134, align 4, !dbg !4109
  %cmp135 = icmp eq i32 %4, 2, !dbg !4109
  br i1 %cmp135, label %if.then137, label %if.end144, !dbg !4111

if.then137:                                       ; preds = %cond.end
  %bf.lshr140 = lshr i64 %bf.load130, 31, !dbg !4112
  %bf.cast142 = and i64 %bf.lshr140, 1, !dbg !4112
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast142, i32 1) #6, !dbg !4113
  %bf.load146.pre = load i64, i64* %0, align 8, !dbg !4114
  br label %if.end144, !dbg !4113

if.end144:                                        ; preds = %if.then137, %cond.end
  %bf.load153 = phi i64 [ %bf.load146.pre, %if.then137 ], [ %bf.load130, %cond.end ], !dbg !4114
  %bf.cast1481 = and i64 %bf.load153, 65535, !dbg !4116
  %cmp149 = icmp eq i64 %bf.cast1481, 141, !dbg !4116
  br i1 %cmp149, label %if.then151, label %if.end158, !dbg !4117

if.then151:                                       ; preds = %if.end144
  %bf.lshr154 = lshr i64 %bf.load153, 32, !dbg !4118
  %bf.cast156 = and i64 %bf.lshr154, 1, !dbg !4118
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast156, i32 1) #6, !dbg !4119
  br label %if.end158, !dbg !4119

if.end158:                                        ; preds = %if.then151, %if.end144
  ret void, !dbg !4120
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pack_ts_real_cst_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !4121 {
entry:
  %r = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !4123, metadata !DIExpression()), !dbg !4127
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4124, metadata !DIExpression()), !dbg !4127
  %0 = bitcast %struct.real_value* %r to i8*, !dbg !4128
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !4128
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4129
  %1 = bitcast i32* %real_cst_ptr to i8**, !dbg !4129
  %2 = load i8*, i8** %1, align 8, !dbg !4129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %2, i64 32, i1 false), !dbg !4129
  %3 = getelementptr inbounds %struct.real_value, %struct.real_value* %r, i64 0, i32 0, !dbg !4130
  %bf.load = load i32, i32* %3, align 8, !dbg !4130
  %bf.clear = and i32 %bf.load, 3, !dbg !4130
  %conv = zext i32 %bf.clear to i64, !dbg !4131
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv, i32 2) #6, !dbg !4132
  %bf.lshr = lshr i32 %bf.load, 2, !dbg !4133
  %bf.clear2 = and i32 %bf.lshr, 1, !dbg !4133
  %conv3 = zext i32 %bf.clear2 to i64, !dbg !4134
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv3, i32 1) #6, !dbg !4135
  %bf.lshr5 = lshr i32 %bf.load, 3, !dbg !4136
  %bf.clear6 = and i32 %bf.lshr5, 1, !dbg !4136
  %conv7 = zext i32 %bf.clear6 to i64, !dbg !4137
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv7, i32 1) #6, !dbg !4138
  %bf.lshr9 = lshr i32 %bf.load, 4, !dbg !4139
  %bf.clear10 = and i32 %bf.lshr9, 1, !dbg !4139
  %conv11 = zext i32 %bf.clear10 to i64, !dbg !4140
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv11, i32 1) #6, !dbg !4141
  %bf.lshr13 = lshr i32 %bf.load, 5, !dbg !4142
  %bf.clear14 = and i32 %bf.lshr13, 1, !dbg !4142
  %conv15 = zext i32 %bf.clear14 to i64, !dbg !4143
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv15, i32 1) #6, !dbg !4144
  %bf.lshr17 = lshr i32 %bf.load, 6, !dbg !4145
  %conv18 = zext i32 %bf.lshr17 to i64, !dbg !4146
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv18, i32 26) #6, !dbg !4147
  call void @llvm.dbg.value(metadata i32 0, metadata !4125, metadata !DIExpression()), !dbg !4127
  br label %for.cond, !dbg !4148

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !4150
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4125, metadata !DIExpression()), !dbg !4127
  %exitcond = icmp eq i64 %indvars.iv, 3, !dbg !4151
  br i1 %exitcond, label %for.end, label %for.body, !dbg !4153

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.real_value, %struct.real_value* %r, i64 0, i32 1, i64 %indvars.iv, !dbg !4154
  %4 = load i64, i64* %arrayidx, align 8, !dbg !4154
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %4, i32 64) #6, !dbg !4155
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4156
  call void @llvm.dbg.value(metadata i32 undef, metadata !4125, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4127
  br label %for.cond, !dbg !4157, !llvm.loop !4158

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !4160
  ret void, !dbg !4160
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pack_ts_fixed_cst_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !4161 {
entry:
  %fv = alloca %struct.fixed_value, align 8
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !4163, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4164, metadata !DIExpression()), !dbg !4166
  %0 = bitcast %struct.fixed_value* %fv to i8*, !dbg !4167
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4167
  %fixed_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4168
  %1 = bitcast i32* %fixed_cst_ptr to i8**, !dbg !4168
  %2 = load i8*, i8** %1, align 8, !dbg !4168
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %2, i64 24, i1 false), !dbg !4168
  %low = getelementptr inbounds %struct.fixed_value, %struct.fixed_value* %fv, i64 0, i32 0, i32 0, !dbg !4169
  %3 = load i64, i64* %low, align 8, !dbg !4169
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %3, i32 64) #6, !dbg !4170
  %high = getelementptr inbounds %struct.fixed_value, %struct.fixed_value* %fv, i64 0, i32 0, i32 1, !dbg !4171
  %4 = load i64, i64* %high, align 8, !dbg !4171
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %4, i32 64) #6, !dbg !4172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4173
  ret void, !dbg !4173
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pack_ts_decl_common_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !4174 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !4176, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4177, metadata !DIExpression()), !dbg !4178
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4179
  %0 = bitcast i40* %mode to i64*, !dbg !4179
  %bf.load = load i64, i64* %0, align 8, !dbg !4179
  %bf.cast = and i64 %bf.load, 255, !dbg !4179
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast, i32 8) #6, !dbg !4180
  %bf.load2 = load i64, i64* %0, align 8, !dbg !4181
  %bf.lshr = lshr i64 %bf.load2, 8, !dbg !4181
  %bf.cast4 = and i64 %bf.lshr, 1, !dbg !4181
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast4, i32 1) #6, !dbg !4182
  %bf.load7 = load i64, i64* %0, align 8, !dbg !4183
  %bf.lshr8 = lshr i64 %bf.load7, 9, !dbg !4183
  %bf.cast10 = and i64 %bf.lshr8, 1, !dbg !4183
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast10, i32 1) #6, !dbg !4184
  %bf.load13 = load i64, i64* %0, align 8, !dbg !4185
  %bf.lshr14 = lshr i64 %bf.load13, 10, !dbg !4185
  %bf.cast16 = and i64 %bf.lshr14, 1, !dbg !4185
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast16, i32 1) #6, !dbg !4186
  %bf.load19 = load i64, i64* %0, align 8, !dbg !4187
  %bf.lshr20 = lshr i64 %bf.load19, 11, !dbg !4187
  %bf.cast22 = and i64 %bf.lshr20, 1, !dbg !4187
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast22, i32 1) #6, !dbg !4188
  %bf.load25 = load i64, i64* %0, align 8, !dbg !4189
  %bf.lshr26 = lshr i64 %bf.load25, 12, !dbg !4189
  %bf.cast28 = and i64 %bf.lshr26, 1, !dbg !4189
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast28, i32 1) #6, !dbg !4190
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4191
  %bf.load30 = load i64, i64* %1, align 8, !dbg !4191
  %bf.lshr31 = lshr i64 %bf.load30, 42, !dbg !4191
  %bf.cast33 = and i64 %bf.lshr31, 1, !dbg !4191
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast33, i32 1) #6, !dbg !4192
  %bf.load36 = load i64, i64* %0, align 8, !dbg !4193
  %bf.lshr37 = lshr i64 %bf.load36, 13, !dbg !4193
  %bf.cast39 = and i64 %bf.lshr37, 1, !dbg !4193
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast39, i32 1) #6, !dbg !4194
  %bf.load42 = load i64, i64* %0, align 8, !dbg !4195
  %bf.lshr43 = lshr i64 %bf.load42, 14, !dbg !4195
  %bf.cast45 = and i64 %bf.lshr43, 1, !dbg !4195
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast45, i32 1) #6, !dbg !4196
  %bf.load48 = load i64, i64* %0, align 8, !dbg !4197
  %bf.lshr49 = lshr i64 %bf.load48, 25, !dbg !4197
  %bf.cast51 = and i64 %bf.lshr49, 1, !dbg !4197
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast51, i32 1) #6, !dbg !4198
  %bf.load54 = load i64, i64* %0, align 8, !dbg !4199
  %bf.lshr55 = lshr i64 %bf.load54, 27, !dbg !4199
  %bf.cast57 = and i64 %bf.lshr55, 1, !dbg !4199
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast57, i32 1) #6, !dbg !4200
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4201
  %2 = load i32, i32* %align, align 8, !dbg !4201
  %conv60 = zext i32 %2 to i64, !dbg !4201
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv60, i32 32) #6, !dbg !4202
  %bf.load62 = load i64, i64* %1, align 8, !dbg !4203
  %bf.cast641 = and i64 %bf.load62, 65535, !dbg !4205
  %cmp = icmp eq i64 %bf.cast641, 30, !dbg !4205
  br i1 %cmp, label %if.then, label %if.end, !dbg !4206

if.then:                                          ; preds = %entry
  %bf.load67 = load i64, i64* %0, align 8, !dbg !4207
  %bf.lshr68 = lshr i64 %bf.load67, 24, !dbg !4207
  %bf.cast70 = and i64 %bf.lshr68, 1, !dbg !4207
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast70, i32 1) #6, !dbg !4209
  %label_decl = bitcast %union.tree_node* %expr to %struct.tree_label_decl*, !dbg !4210
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %label_decl, i64 0, i32 2, !dbg !4210
  %3 = load i32, i32* %eh_landing_pad_nr, align 4, !dbg !4210
  %conv72 = sext i32 %3 to i64, !dbg !4210
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv72, i32 32) #6, !dbg !4211
  %bf.load74.pre = load i64, i64* %1, align 8, !dbg !4212
  br label %if.end, !dbg !4214

if.end:                                           ; preds = %if.then, %entry
  %bf.load82 = phi i64 [ %bf.load74.pre, %if.then ], [ %bf.load62, %entry ], !dbg !4212
  %bf.cast762 = and i64 %bf.load82, 65535, !dbg !4215
  %cmp77 = icmp eq i64 %bf.cast762, 31, !dbg !4215
  br i1 %cmp77, label %if.then79, label %if.end98, !dbg !4216

if.then79:                                        ; preds = %if.end
  %bf.lshr83 = lshr i64 %bf.load82, 41, !dbg !4217
  %bf.cast85 = and i64 %bf.lshr83, 1, !dbg !4217
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast85, i32 1) #6, !dbg !4219
  %bf.load88 = load i64, i64* %0, align 8, !dbg !4220
  %bf.lshr89 = lshr i64 %bf.load88, 26, !dbg !4220
  %bf.cast91 = and i64 %bf.lshr89, 1, !dbg !4220
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast91, i32 1) #6, !dbg !4221
  %bf.load94 = load i64, i64* %0, align 8, !dbg !4222
  %bf.lshr95 = lshr i64 %bf.load94, 32, !dbg !4222
  %bf.cast97 = and i64 %bf.lshr95, 255, !dbg !4222
  %shl = shl i64 1, %bf.cast97, !dbg !4222
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %shl, i32 8) #6, !dbg !4223
  %bf.load100.pre = load i64, i64* %1, align 8, !dbg !4224
  %.pre = and i64 %bf.load100.pre, 65535, !dbg !4226
  br label %if.end98, !dbg !4227

if.end98:                                         ; preds = %if.then79, %if.end
  %bf.cast1023.pre-phi = phi i64 [ %.pre, %if.then79 ], [ %bf.cast762, %if.end ], !dbg !4226
  %cmp103 = icmp eq i64 %bf.cast1023.pre-phi, 36, !dbg !4226
  br i1 %cmp103, label %if.then118, label %lor.lhs.false, !dbg !4228

lor.lhs.false:                                    ; preds = %if.end98
  %cmp109 = icmp eq i64 %bf.cast1023.pre-phi, 34, !dbg !4229
  br i1 %cmp109, label %if.then118, label %lor.lhs.false111, !dbg !4230

lor.lhs.false111:                                 ; preds = %lor.lhs.false
  %cmp116 = icmp eq i64 %bf.cast1023.pre-phi, 32, !dbg !4231
  br i1 %cmp116, label %if.then118, label %if.end153, !dbg !4232

if.then118:                                       ; preds = %lor.lhs.false111, %lor.lhs.false, %if.end98
  %bf.load120 = load i64, i64* %0, align 8, !dbg !4233
  %bf.lshr121 = lshr i64 %bf.load120, 28, !dbg !4233
  %bf.cast123 = and i64 %bf.lshr121, 1, !dbg !4233
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast123, i32 1) #6, !dbg !4235
  %bf.load126 = load i64, i64* %1, align 8, !dbg !4236
  %bf.cast1286 = and i64 %bf.load126, 65535, !dbg !4238
  %cmp129 = icmp eq i64 %bf.cast1286, 32, !dbg !4238
  br i1 %cmp129, label %if.then138, label %lor.lhs.false131, !dbg !4239

lor.lhs.false131:                                 ; preds = %if.then118
  %cmp136 = icmp eq i64 %bf.cast1286, 34, !dbg !4240
  br i1 %cmp136, label %if.then138, label %if.end146, !dbg !4241

if.then138:                                       ; preds = %lor.lhs.false131, %if.then118
  %bf.load141 = load i64, i64* %0, align 8, !dbg !4242
  %bf.lshr142 = lshr i64 %bf.load141, 26, !dbg !4242
  %bf.cast144 = and i64 %bf.lshr142, 1, !dbg !4242
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast144, i32 1) #6, !dbg !4243
  br label %if.end146, !dbg !4243

if.end146:                                        ; preds = %if.then138, %lor.lhs.false131
  %bf.load148 = load i64, i64* %0, align 8, !dbg !4244
  %bf.lshr149 = lshr i64 %bf.load148, 29, !dbg !4244
  %bf.cast151 = and i64 %bf.lshr149, 1, !dbg !4244
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast151, i32 1) #6, !dbg !4245
  br label %if.end153, !dbg !4246

if.end153:                                        ; preds = %if.end146, %lor.lhs.false111
  ret void, !dbg !4247
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pack_ts_decl_wrtl_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !4248 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !4250, metadata !DIExpression()), !dbg !4252
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4251, metadata !DIExpression()), !dbg !4252
  %decl_flag_0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4253
  %0 = bitcast i40* %decl_flag_0 to i64*, !dbg !4253
  %bf.load = load i64, i64* %0, align 8, !dbg !4253
  %bf.lshr = lshr i64 %bf.load, 24, !dbg !4253
  %bf.cast = and i64 %bf.lshr, 1, !dbg !4253
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast, i32 1) #6, !dbg !4254
  ret void, !dbg !4255
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pack_ts_decl_with_vis_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !4256 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !4258, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4259, metadata !DIExpression()), !dbg !4260
  %defer_output = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4261
  %0 = bitcast i24* %defer_output to i32*, !dbg !4261
  %bf.load = load i32, i32* %0, align 8, !dbg !4261
  %bf.clear = and i32 %bf.load, 1, !dbg !4261
  %conv = zext i32 %bf.clear to i64, !dbg !4261
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv, i32 1) #6, !dbg !4262
  %bf.load2 = load i32, i32* %0, align 8, !dbg !4263
  %bf.lshr = lshr i32 %bf.load2, 3, !dbg !4263
  %bf.clear3 = and i32 %bf.lshr, 1, !dbg !4263
  %conv4 = zext i32 %bf.clear3 to i64, !dbg !4263
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv4, i32 1) #6, !dbg !4264
  %bf.load6 = load i32, i32* %0, align 8, !dbg !4265
  %bf.lshr7 = lshr i32 %bf.load6, 5, !dbg !4265
  %bf.clear8 = and i32 %bf.lshr7, 1, !dbg !4265
  %conv9 = zext i32 %bf.clear8 to i64, !dbg !4265
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv9, i32 1) #6, !dbg !4266
  %bf.load11 = load i32, i32* %0, align 8, !dbg !4267
  %bf.lshr12 = lshr i32 %bf.load11, 7, !dbg !4267
  %bf.clear13 = and i32 %bf.lshr12, 1, !dbg !4267
  %conv14 = zext i32 %bf.clear13 to i64, !dbg !4267
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv14, i32 1) #6, !dbg !4268
  %bf.load16 = load i32, i32* %0, align 8, !dbg !4269
  %bf.lshr17 = lshr i32 %bf.load16, 8, !dbg !4269
  %bf.clear18 = and i32 %bf.lshr17, 1, !dbg !4269
  %conv19 = zext i32 %bf.clear18 to i64, !dbg !4269
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv19, i32 1) #6, !dbg !4270
  %bf.load21 = load i32, i32* %0, align 8, !dbg !4271
  %bf.lshr22 = lshr i32 %bf.load21, 9, !dbg !4271
  %bf.clear23 = and i32 %bf.lshr22, 1, !dbg !4271
  %conv24 = zext i32 %bf.clear23 to i64, !dbg !4271
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv24, i32 1) #6, !dbg !4272
  %bf.load26 = load i32, i32* %0, align 8, !dbg !4273
  %bf.lshr27 = lshr i32 %bf.load26, 10, !dbg !4273
  %bf.clear28 = and i32 %bf.lshr27, 3, !dbg !4273
  %conv29 = zext i32 %bf.clear28 to i64, !dbg !4273
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv29, i32 2) #6, !dbg !4274
  %bf.load31 = load i32, i32* %0, align 8, !dbg !4275
  %bf.lshr32 = lshr i32 %bf.load31, 12, !dbg !4275
  %bf.clear33 = and i32 %bf.lshr32, 1, !dbg !4275
  %conv34 = zext i32 %bf.clear33 to i64, !dbg !4275
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv34, i32 1) #6, !dbg !4276
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4277
  %bf.load35 = load i64, i64* %1, align 8, !dbg !4277
  %bf.cast1 = and i64 %bf.load35, 65535, !dbg !4279
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !4279
  br i1 %cmp, label %if.then, label %if.end, !dbg !4280

if.then:                                          ; preds = %entry
  %bf.load39 = load i32, i32* %0, align 8, !dbg !4281
  %bf.lshr40 = lshr i32 %bf.load39, 1, !dbg !4281
  %bf.clear41 = and i32 %bf.lshr40, 1, !dbg !4281
  %conv42 = zext i32 %bf.clear41 to i64, !dbg !4281
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv42, i32 1) #6, !dbg !4283
  %bf.load44 = load i32, i32* %0, align 8, !dbg !4284
  %bf.lshr45 = lshr i32 %bf.load44, 4, !dbg !4284
  %bf.clear46 = and i32 %bf.lshr45, 1, !dbg !4284
  %conv47 = zext i32 %bf.clear46 to i64, !dbg !4284
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv47, i32 1) #6, !dbg !4285
  %bf.load49 = load i32, i32* %0, align 8, !dbg !4286
  %bf.lshr50 = lshr i32 %bf.load49, 13, !dbg !4286
  %bf.clear51 = and i32 %bf.lshr50, 7, !dbg !4286
  %conv52 = zext i32 %bf.clear51 to i64, !dbg !4286
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv52, i32 3) #6, !dbg !4287
  %bf.load54.pre = load i64, i64* %1, align 8, !dbg !4288
  %.pre = and i64 %bf.load54.pre, 65535, !dbg !4288
  br label %if.end, !dbg !4290

if.end:                                           ; preds = %if.then, %entry
  %bf.cast562.pre-phi = phi i64 [ %.pre, %if.then ], [ %bf.cast1, %entry ], !dbg !4288
  %cmp57 = icmp eq i64 %bf.cast562.pre-phi, 32, !dbg !4288
  br i1 %cmp57, label %if.then65, label %lor.lhs.false, !dbg !4288

lor.lhs.false:                                    ; preds = %if.end
  %cmp63 = icmp eq i64 %bf.cast562.pre-phi, 29, !dbg !4288
  br i1 %cmp63, label %if.then65, label %if.end67, !dbg !4291

if.then65:                                        ; preds = %lor.lhs.false, %if.end
  %call = tail call zeroext i16 @decl_init_priority_lookup(%union.tree_node* %expr) #6, !dbg !4292
  %conv66 = zext i16 %call to i64, !dbg !4292
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv66, i32 16) #6, !dbg !4293
  br label %if.end67, !dbg !4293

if.end67:                                         ; preds = %if.then65, %lor.lhs.false
  ret void, !dbg !4294
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pack_ts_function_decl_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !4295 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !4297, metadata !DIExpression()), !dbg !4299
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4298, metadata !DIExpression()), !dbg !4299
  %call = tail call fastcc zeroext i8 @lto_stream_as_builtin_p(%union.tree_node* %expr) #7, !dbg !4300
  %tobool = icmp eq i8 %call, 0, !dbg !4300
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4300

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 487, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4300
  br label %cond.end, !dbg !4300

cond.end:                                         ; preds = %entry, %cond.true
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 5, !dbg !4301
  %bf.load = load i32, i32* %function_code, align 8, !dbg !4301
  %bf.clear = and i32 %bf.load, 2047, !dbg !4301
  %conv = zext i32 %bf.clear to i64, !dbg !4301
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv, i32 11) #6, !dbg !4302
  %bf.load2 = load i32, i32* %function_code, align 8, !dbg !4303
  %bf.lshr = lshr i32 %bf.load2, 11, !dbg !4303
  %bf.clear3 = and i32 %bf.lshr, 3, !dbg !4303
  %conv4 = zext i32 %bf.clear3 to i64, !dbg !4303
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv4, i32 2) #6, !dbg !4304
  %bf.load6 = load i32, i32* %function_code, align 8, !dbg !4305
  %bf.lshr7 = lshr i32 %bf.load6, 13, !dbg !4305
  %bf.clear8 = and i32 %bf.lshr7, 1, !dbg !4305
  %conv9 = zext i32 %bf.clear8 to i64, !dbg !4305
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv9, i32 1) #6, !dbg !4306
  %bf.load11 = load i32, i32* %function_code, align 8, !dbg !4307
  %bf.lshr12 = lshr i32 %bf.load11, 14, !dbg !4307
  %bf.clear13 = and i32 %bf.lshr12, 1, !dbg !4307
  %conv14 = zext i32 %bf.clear13 to i64, !dbg !4307
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv14, i32 1) #6, !dbg !4308
  %bf.load16 = load i32, i32* %function_code, align 8, !dbg !4309
  %bf.lshr17 = lshr i32 %bf.load16, 15, !dbg !4309
  %bf.clear18 = and i32 %bf.lshr17, 1, !dbg !4309
  %conv19 = zext i32 %bf.clear18 to i64, !dbg !4309
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv19, i32 1) #6, !dbg !4310
  %bf.load21 = load i32, i32* %function_code, align 8, !dbg !4311
  %bf.lshr22 = lshr i32 %bf.load21, 16, !dbg !4311
  %bf.clear23 = and i32 %bf.lshr22, 1, !dbg !4311
  %conv24 = zext i32 %bf.clear23 to i64, !dbg !4311
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv24, i32 1) #6, !dbg !4312
  %bf.load26 = load i32, i32* %function_code, align 8, !dbg !4313
  %bf.lshr27 = lshr i32 %bf.load26, 17, !dbg !4313
  %bf.clear28 = and i32 %bf.lshr27, 1, !dbg !4313
  %conv29 = zext i32 %bf.clear28 to i64, !dbg !4313
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv29, i32 1) #6, !dbg !4314
  %bf.load31 = load i32, i32* %function_code, align 8, !dbg !4315
  %bf.lshr32 = lshr i32 %bf.load31, 18, !dbg !4315
  %bf.clear33 = and i32 %bf.lshr32, 1, !dbg !4315
  %conv34 = zext i32 %bf.clear33 to i64, !dbg !4315
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv34, i32 1) #6, !dbg !4316
  %bf.load36 = load i32, i32* %function_code, align 8, !dbg !4317
  %bf.lshr37 = lshr i32 %bf.load36, 19, !dbg !4317
  %bf.clear38 = and i32 %bf.lshr37, 1, !dbg !4317
  %conv39 = zext i32 %bf.clear38 to i64, !dbg !4317
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv39, i32 1) #6, !dbg !4318
  %bf.load41 = load i32, i32* %function_code, align 8, !dbg !4319
  %bf.lshr42 = lshr i32 %bf.load41, 20, !dbg !4319
  %bf.clear43 = and i32 %bf.lshr42, 1, !dbg !4319
  %conv44 = zext i32 %bf.clear43 to i64, !dbg !4319
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv44, i32 1) #6, !dbg !4320
  %bf.load46 = load i32, i32* %function_code, align 8, !dbg !4321
  %bf.lshr47 = lshr i32 %bf.load46, 21, !dbg !4321
  %bf.clear48 = and i32 %bf.lshr47, 1, !dbg !4321
  %conv49 = zext i32 %bf.clear48 to i64, !dbg !4321
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv49, i32 1) #6, !dbg !4322
  %bf.load51 = load i32, i32* %function_code, align 8, !dbg !4323
  %bf.lshr52 = lshr i32 %bf.load51, 22, !dbg !4323
  %bf.clear53 = and i32 %bf.lshr52, 1, !dbg !4323
  %conv54 = zext i32 %bf.clear53 to i64, !dbg !4323
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv54, i32 1) #6, !dbg !4324
  %bf.load56 = load i32, i32* %function_code, align 8, !dbg !4325
  %bf.lshr57 = lshr i32 %bf.load56, 23, !dbg !4325
  %bf.clear58 = and i32 %bf.lshr57, 1, !dbg !4325
  %conv59 = zext i32 %bf.clear58 to i64, !dbg !4325
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv59, i32 1) #6, !dbg !4326
  %bf.load61 = load i32, i32* %function_code, align 8, !dbg !4327
  %bf.lshr62 = lshr i32 %bf.load61, 24, !dbg !4327
  %bf.clear63 = and i32 %bf.lshr62, 1, !dbg !4327
  %conv64 = zext i32 %bf.clear63 to i64, !dbg !4327
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv64, i32 1) #6, !dbg !4328
  %bf.load66 = load i32, i32* %function_code, align 8, !dbg !4329
  %bf.lshr67 = lshr i32 %bf.load66, 25, !dbg !4329
  %bf.clear68 = and i32 %bf.lshr67, 1, !dbg !4329
  %conv69 = zext i32 %bf.clear68 to i64, !dbg !4329
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv69, i32 1) #6, !dbg !4330
  %bf.load71 = load i32, i32* %function_code, align 8, !dbg !4331
  %bf.lshr72 = lshr i32 %bf.load71, 26, !dbg !4331
  %bf.clear73 = and i32 %bf.lshr72, 1, !dbg !4331
  %conv74 = zext i32 %bf.clear73 to i64, !dbg !4331
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv74, i32 1) #6, !dbg !4332
  %bf.load76 = load i32, i32* %function_code, align 8, !dbg !4333
  %bf.lshr77 = lshr i32 %bf.load76, 27, !dbg !4333
  %bf.clear78 = and i32 %bf.lshr77, 1, !dbg !4333
  %conv79 = zext i32 %bf.clear78 to i64, !dbg !4333
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv79, i32 1) #6, !dbg !4334
  %bf.load81 = load i32, i32* %function_code, align 8, !dbg !4335
  %bf.lshr82 = lshr i32 %bf.load81, 28, !dbg !4335
  %bf.clear83 = and i32 %bf.lshr82, 1, !dbg !4335
  %conv84 = zext i32 %bf.clear83 to i64, !dbg !4335
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv84, i32 1) #6, !dbg !4336
  ret void, !dbg !4337
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pack_ts_type_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !4338 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !4340, metadata !DIExpression()), !dbg !4342
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4341, metadata !DIExpression()), !dbg !4342
  %type = bitcast %union.tree_node* %expr to %struct.tree_type*, !dbg !4343
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !4343
  %bf.load = load i32, i32* %precision, align 4, !dbg !4343
  %bf.clear = and i32 %bf.load, 1023, !dbg !4343
  %conv = zext i32 %bf.clear to i64, !dbg !4343
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv, i32 9) #6, !dbg !4344
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4345
  %bf.load1 = load i64, i64* %0, align 8, !dbg !4345
  %bf.cast1 = and i64 %bf.load1, 65535, !dbg !4345
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !4345
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4345

cond.true:                                        ; preds = %entry
  %call = tail call i32 @vector_type_mode(%union.tree_node* %expr) #6, !dbg !4345
  br label %cond.end, !dbg !4345

cond.false:                                       ; preds = %entry
  %bf.load5 = load i32, i32* %precision, align 4, !dbg !4345
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !4345
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !4345
  br label %cond.end, !dbg !4345

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear6, %cond.false ], !dbg !4345
  %conv7 = zext i32 %cond to i64, !dbg !4345
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv7, i32 7) #6, !dbg !4346
  %bf.load9 = load i32, i32* %precision, align 4, !dbg !4347
  %bf.lshr10 = lshr i32 %bf.load9, 24, !dbg !4347
  %bf.clear11 = and i32 %bf.lshr10, 1, !dbg !4347
  %conv12 = zext i32 %bf.clear11 to i64, !dbg !4347
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv12, i32 1) #6, !dbg !4348
  %bf.load14 = load i32, i32* %precision, align 4, !dbg !4349
  %bf.lshr15 = lshr i32 %bf.load14, 10, !dbg !4349
  %bf.clear16 = and i32 %bf.lshr15, 1, !dbg !4349
  %conv17 = zext i32 %bf.clear16 to i64, !dbg !4349
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv17, i32 1) #6, !dbg !4350
  %bf.load19 = load i32, i32* %precision, align 4, !dbg !4351
  %bf.lshr20 = lshr i32 %bf.load19, 11, !dbg !4351
  %bf.clear21 = and i32 %bf.lshr20, 1, !dbg !4351
  %conv22 = zext i32 %bf.clear21 to i64, !dbg !4351
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv22, i32 1) #6, !dbg !4352
  %bf.load24 = load i64, i64* %0, align 8, !dbg !4353
  %bf.cast262 = and i64 %bf.load24, 65535, !dbg !4355
  %cmp27 = icmp eq i64 %bf.cast262, 17, !dbg !4355
  br i1 %cmp27, label %if.then, label %lor.lhs.false, !dbg !4356

lor.lhs.false:                                    ; preds = %cond.end
  %cmp33 = icmp eq i64 %bf.cast262, 16, !dbg !4357
  br i1 %cmp33, label %if.then, label %if.end, !dbg !4358

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  %bf.load36 = load i32, i32* %precision, align 4, !dbg !4359
  %bf.lshr37 = lshr i32 %bf.load36, 12, !dbg !4359
  %bf.clear38 = and i32 %bf.lshr37, 1, !dbg !4359
  %conv39 = zext i32 %bf.clear38 to i64, !dbg !4359
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv39, i32 1) #6, !dbg !4360
  %bf.load41.pre = load i64, i64* %0, align 8, !dbg !4361
  br label %if.end, !dbg !4360

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %bf.load41 = phi i64 [ %bf.load41.pre, %if.then ], [ %bf.load24, %lor.lhs.false ], !dbg !4361
  %bf.lshr42 = lshr i64 %bf.load41, 41, !dbg !4361
  %bf.cast44 = and i64 %bf.lshr42, 1, !dbg !4361
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast44, i32 1) #6, !dbg !4362
  %bf.load47 = load i32, i32* %precision, align 4, !dbg !4363
  %bf.lshr48 = lshr i32 %bf.load47, 13, !dbg !4363
  %bf.clear49 = and i32 %bf.lshr48, 1, !dbg !4363
  %conv50 = zext i32 %bf.clear49 to i64, !dbg !4363
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv50, i32 1) #6, !dbg !4364
  %bf.load52 = load i32, i32* %precision, align 4, !dbg !4365
  %bf.lshr53 = lshr i32 %bf.load52, 14, !dbg !4365
  %bf.clear54 = and i32 %bf.lshr53, 3, !dbg !4365
  %conv55 = zext i32 %bf.clear54 to i64, !dbg !4365
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv55, i32 2) #6, !dbg !4366
  %bf.load58 = load i64, i64* %0, align 8, !dbg !4367
  %bf.lshr59 = lshr i64 %bf.load58, 42, !dbg !4367
  %bf.cast61 = and i64 %bf.lshr59, 1, !dbg !4367
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast61, i32 1) #6, !dbg !4368
  %bf.load64 = load i64, i64* %0, align 8, !dbg !4369
  %bf.lshr65 = lshr i64 %bf.load64, 20, !dbg !4369
  %bf.cast67 = and i64 %bf.lshr65, 1, !dbg !4369
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %bf.cast67, i32 1) #6, !dbg !4370
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4371
  %2 = load i32, i32* %1, align 8, !dbg !4371
  %conv70 = zext i32 %2 to i64, !dbg !4371
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv70, i32 32) #6, !dbg !4372
  %alias_set = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 8, !dbg !4373
  %3 = load i32, i32* %alias_set, align 4, !dbg !4373
  %cmp72 = icmp ne i32 %3, 0, !dbg !4374
  %conv75 = sext i1 %cmp72 to i64, !dbg !4373
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv75, i32 32) #6, !dbg !4375
  ret void, !dbg !4376
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pack_ts_block_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !4377 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !4379, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4380, metadata !DIExpression()), !dbg !4381
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4382
  %bf.load = load i32, i32* %0, align 8, !dbg !4382
  %bf.clear = and i32 %bf.load, 1, !dbg !4382
  %conv = zext i32 %bf.clear to i64, !dbg !4382
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv, i32 1) #6, !dbg !4383
  %bf.load2 = load i32, i32* %0, align 8, !dbg !4384
  %bf.lshr = lshr i32 %bf.load2, 1, !dbg !4384
  %conv3 = zext i32 %bf.lshr to i64, !dbg !4384
  tail call void @bp_pack_value(%struct.bitpack_d* %bp, i64 %conv3, i32 31) #6, !dbg !4385
  ret void, !dbg !4386
}

declare dso_local void @bp_pack_value(%struct.bitpack_d*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local zeroext i16 @decl_init_priority_lookup(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_common_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4387 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4389, metadata !DIExpression()), !dbg !4392
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4390, metadata !DIExpression()), !dbg !4392
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4391, metadata !DIExpression()), !dbg !4392
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4393
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4393
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %0, i8 zeroext %ref_p) #7, !dbg !4394
  ret void, !dbg !4395
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_vector_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4396 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4398, metadata !DIExpression()), !dbg !4401
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4399, metadata !DIExpression()), !dbg !4401
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4400, metadata !DIExpression()), !dbg !4401
  %elements = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4402
  %0 = bitcast i32* %elements to %union.tree_node**, !dbg !4402
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4402
  tail call fastcc void @lto_output_chain(%struct.output_block* %ob, %union.tree_node* %1, i8 zeroext %ref_p) #7, !dbg !4403
  ret void, !dbg !4404
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_complex_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4405 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4407, metadata !DIExpression()), !dbg !4410
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4408, metadata !DIExpression()), !dbg !4410
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4409, metadata !DIExpression()), !dbg !4410
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4411
  %0 = bitcast i32* %real to %union.tree_node**, !dbg !4411
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4411
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %1, i8 zeroext %ref_p) #7, !dbg !4412
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4413
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !4413
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %3, i8 zeroext %ref_p) #7, !dbg !4414
  ret void, !dbg !4415
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_decl_minimal_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4416 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4418, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4419, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4420, metadata !DIExpression()), !dbg !4421
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4422
  %0 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !4422
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %0, i8 zeroext %ref_p) #7, !dbg !4423
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4424
  %1 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !4424
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %1, i8 zeroext %ref_p) #7, !dbg !4425
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4426
  %2 = load i32, i32* %locus, align 8, !dbg !4426
  tail call fastcc void @lto_output_location(%struct.output_block* %ob, i32 %2) #7, !dbg !4427
  ret void, !dbg !4428
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_decl_common_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4429 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4431, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4432, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4433, metadata !DIExpression()), !dbg !4434
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4435
  %0 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !4435
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %0, i8 zeroext %ref_p) #7, !dbg !4436
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4437
  %1 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !4437
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %1, i8 zeroext %ref_p) #7, !dbg !4438
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4439
  %bf.load = load i64, i64* %2, align 8, !dbg !4439
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4441
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4441
  br i1 %cmp, label %if.end, label %if.then, !dbg !4442

if.then:                                          ; preds = %entry
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4443
  %3 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4443
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %3, i8 zeroext %ref_p) #7, !dbg !4444
  br label %if.end, !dbg !4444

if.end:                                           ; preds = %entry, %if.then
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !4445
  %4 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !4445
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %4, i8 zeroext %ref_p) #7, !dbg !4446
  %abstract_origin = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4447
  %5 = load %union.tree_node*, %union.tree_node** %abstract_origin, align 8, !dbg !4447
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %5, i8 zeroext %ref_p) #7, !dbg !4448
  %bf.load6 = load i64, i64* %2, align 8, !dbg !4449
  %bf.cast82 = and i64 %bf.load6, 65535, !dbg !4451
  %cmp9 = icmp eq i64 %bf.cast82, 34, !dbg !4451
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !4452

if.then10:                                        ; preds = %if.end
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4453
  %6 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4453
  tail call fastcc void @lto_output_chain(%struct.output_block* %ob, %union.tree_node* %6, i8 zeroext %ref_p) #7, !dbg !4454
  %bf.load13.pre = load i64, i64* %2, align 8, !dbg !4455
  %.pre = and i64 %bf.load13.pre, 65535, !dbg !4457
  br label %if.end11, !dbg !4454

if.end11:                                         ; preds = %if.then10, %if.end
  %bf.cast153.pre-phi = phi i64 [ %.pre, %if.then10 ], [ %bf.cast82, %if.end ], !dbg !4457
  %cmp16 = icmp eq i64 %bf.cast153.pre-phi, 32, !dbg !4457
  br i1 %cmp16, label %land.lhs.true, label %lor.lhs.false, !dbg !4458

lor.lhs.false:                                    ; preds = %if.end11
  %cmp21 = icmp eq i64 %bf.cast153.pre-phi, 34, !dbg !4459
  br i1 %cmp21, label %land.lhs.true, label %if.end27, !dbg !4460

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end11
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4461
  %7 = bitcast i40* %decl_flag_2 to i64*, !dbg !4461
  %bf.load23 = load i64, i64* %7, align 8, !dbg !4461
  %bf.cast255 = and i64 %bf.load23, 67108864, !dbg !4461
  %tobool = icmp eq i64 %bf.cast255, 0, !dbg !4461
  br i1 %tobool, label %if.end27, label %if.then26, !dbg !4462

if.then26:                                        ; preds = %land.lhs.true
  %call = tail call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* %expr) #6, !dbg !4463
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %call, i8 zeroext %ref_p) #7, !dbg !4464
  br label %if.end27, !dbg !4464

if.end27:                                         ; preds = %land.lhs.true, %if.then26, %lor.lhs.false
  ret void, !dbg !4465
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_decl_non_common_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4466 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4468, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4469, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4470, metadata !DIExpression()), !dbg !4471
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4472
  %bf.load = load i64, i64* %0, align 8, !dbg !4472
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4474
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4474
  br i1 %cmp, label %if.then, label %if.end, !dbg !4475

if.then:                                          ; preds = %entry
  %saved_tree = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 1, !dbg !4476
  %1 = load %union.tree_node*, %union.tree_node** %saved_tree, align 8, !dbg !4476
  %cmp1 = icmp eq %union.tree_node* %1, null, !dbg !4476
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !4476

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 876, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4476
  br label %cond.end, !dbg !4476

cond.end:                                         ; preds = %if.then, %cond.true
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 2, !dbg !4478
  %2 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !4478
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %2, i8 zeroext %ref_p) #7, !dbg !4479
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 3, !dbg !4480
  %3 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !4480
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %3, i8 zeroext %ref_p) #7, !dbg !4481
  br label %if.end, !dbg !4482

if.end:                                           ; preds = %cond.end, %entry
  %vindex = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 4, !dbg !4483
  %4 = load %union.tree_node*, %union.tree_node** %vindex, align 8, !dbg !4483
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %4, i8 zeroext %ref_p) #7, !dbg !4484
  ret void, !dbg !4485
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_decl_with_vis_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4486 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4488, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4489, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4490, metadata !DIExpression()), !dbg !4491
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4492
  %bf.load = load i64, i64* %0, align 8, !dbg !4492
  %bf.cast = and i64 %bf.load, 65535, !dbg !4492
  %arrayidx1 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 13, !dbg !4492
  %1 = load i8, i8* %arrayidx1, align 1, !dbg !4492
  %tobool = icmp eq i8 %1, 0, !dbg !4492
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4492

land.lhs.true:                                    ; preds = %entry
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !4492
  %2 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8, !dbg !4492
  %cmp = icmp eq %union.tree_node* %2, null, !dbg !4492
  br i1 %cmp, label %if.else, label %if.then, !dbg !4494

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %expr) #6, !dbg !4495
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %call, i8 zeroext %ref_p) #7, !dbg !4496
  br label %if.end, !dbg !4496

if.else:                                          ; preds = %land.lhs.true, %entry
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !4497
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4498
  %3 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !4498
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %3, i8 zeroext %ref_p) #7, !dbg !4499
  %comdat_group = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !4500
  %4 = load %union.tree_node*, %union.tree_node** %comdat_group, align 8, !dbg !4500
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %4, i8 zeroext %ref_p) #7, !dbg !4501
  ret void, !dbg !4502
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_field_decl_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4503 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4505, metadata !DIExpression()), !dbg !4508
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4506, metadata !DIExpression()), !dbg !4508
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4507, metadata !DIExpression()), !dbg !4508
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4509
  %0 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !4509
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4509
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %1, i8 zeroext %ref_p) #7, !dbg !4510
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !4511
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !4511
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %3, i8 zeroext %ref_p) #7, !dbg !4512
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4513
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !4513
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %5, i8 zeroext %ref_p) #7, !dbg !4514
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !4515
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !4515
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %7, i8 zeroext %ref_p) #7, !dbg !4516
  %fcontext = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4517
  %8 = bitcast i24* %fcontext to %union.tree_node**, !dbg !4517
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !4517
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %9, i8 zeroext %ref_p) #7, !dbg !4518
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4519
  %10 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4519
  tail call fastcc void @lto_output_chain(%struct.output_block* %ob, %union.tree_node* %10, i8 zeroext %ref_p) #7, !dbg !4520
  ret void, !dbg !4521
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_function_decl_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4522 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4524, metadata !DIExpression()), !dbg !4527
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4525, metadata !DIExpression()), !dbg !4527
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4526, metadata !DIExpression()), !dbg !4527
  %personality = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 2, !dbg !4528
  %0 = load %union.tree_node*, %union.tree_node** %personality, align 8, !dbg !4528
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %0, i8 zeroext %ref_p) #7, !dbg !4529
  %function_specific_target = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 3, !dbg !4530
  %1 = load %union.tree_node*, %union.tree_node** %function_specific_target, align 8, !dbg !4530
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %1, i8 zeroext %ref_p) #7, !dbg !4531
  %function_specific_optimization = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 4, !dbg !4532
  %2 = load %union.tree_node*, %union.tree_node** %function_specific_optimization, align 8, !dbg !4532
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %2, i8 zeroext %ref_p) #7, !dbg !4533
  ret void, !dbg !4534
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_type_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4535 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4537, metadata !DIExpression()), !dbg !4540
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4538, metadata !DIExpression()), !dbg !4540
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4539, metadata !DIExpression()), !dbg !4540
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4541
  %bf.load = load i64, i64* %0, align 8, !dbg !4541
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4543
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !4543
  br i1 %cmp, label %if.then, label %if.else, !dbg !4544

if.then:                                          ; preds = %entry
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4545
  %1 = bitcast i32* %values to %union.tree_node**, !dbg !4545
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4545
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %2, i8 zeroext %ref_p) #7, !dbg !4546
  br label %if.end50, !dbg !4546

if.else:                                          ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 15, !dbg !4547
  br i1 %cmp5, label %if.then6, label %if.else9, !dbg !4549

if.then6:                                         ; preds = %if.else
  %values8 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4550
  %3 = bitcast i32* %values8 to %union.tree_node**, !dbg !4550
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !4550
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %4, i8 zeroext %ref_p) #7, !dbg !4551
  br label %if.end50, !dbg !4551

if.else9:                                         ; preds = %if.else
  %cmp14 = icmp eq i64 %bf.cast1, 16, !dbg !4552
  br i1 %cmp14, label %if.then20, label %lor.lhs.false, !dbg !4554

lor.lhs.false:                                    ; preds = %if.else9
  %cmp19 = icmp eq i64 %bf.cast1, 17, !dbg !4555
  br i1 %cmp19, label %if.then20, label %if.else23, !dbg !4556

if.then20:                                        ; preds = %lor.lhs.false, %if.else9
  %values22 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4557
  %5 = bitcast i32* %values22 to %union.tree_node**, !dbg !4557
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !4557
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %6, i8 zeroext %ref_p) #7, !dbg !4558
  br label %if.end50, !dbg !4558

if.else23:                                        ; preds = %lor.lhs.false
  %cmp28 = icmp eq i64 %bf.cast1, 20, !dbg !4559
  br i1 %cmp28, label %if.then35, label %lor.lhs.false29, !dbg !4561

lor.lhs.false29:                                  ; preds = %if.else23
  %cmp34 = icmp eq i64 %bf.cast1, 21, !dbg !4562
  br i1 %cmp34, label %if.then35, label %if.else38, !dbg !4563

if.then35:                                        ; preds = %lor.lhs.false29, %if.else23
  %values37 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4564
  %7 = bitcast i32* %values37 to %union.tree_node**, !dbg !4564
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !4564
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %8, i8 zeroext %ref_p) #7, !dbg !4565
  br label %if.end50, !dbg !4565

if.else38:                                        ; preds = %lor.lhs.false29
  %cmp43 = icmp eq i64 %bf.cast1, 14, !dbg !4566
  br i1 %cmp43, label %if.then44, label %if.end50, !dbg !4568

if.then44:                                        ; preds = %if.else38
  %values46 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4569
  %9 = bitcast i32* %values46 to %union.tree_node**, !dbg !4569
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !4569
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %10, i8 zeroext %ref_p) #7, !dbg !4570
  br label %if.end50, !dbg !4570

if.end50:                                         ; preds = %if.then6, %if.then35, %if.then44, %if.else38, %if.then20, %if.then
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4571
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !4571
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %12, i8 zeroext %ref_p) #7, !dbg !4572
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4573
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !4573
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %14, i8 zeroext %ref_p) #7, !dbg !4574
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4575
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !4575
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %16, i8 zeroext %ref_p) #7, !dbg !4576
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4577
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !4577
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %18, i8 zeroext %ref_p) #7, !dbg !4578
  %bf.load56 = load i64, i64* %0, align 8, !dbg !4579
  %bf.cast589 = and i64 %bf.load56, 65535, !dbg !4579
  %cmp59 = icmp eq i64 %bf.cast589, 10, !dbg !4579
  br i1 %cmp59, label %if.end68, label %lor.lhs.false60, !dbg !4579

lor.lhs.false60:                                  ; preds = %if.end50
  %cmp65 = icmp eq i64 %bf.cast589, 12, !dbg !4579
  br i1 %cmp65, label %if.end68, label %if.then66, !dbg !4581

if.then66:                                        ; preds = %lor.lhs.false60
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !4582
  %19 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !4582
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !4582
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %20, i8 zeroext %ref_p) #7, !dbg !4583
  br label %if.end68, !dbg !4583

if.end68:                                         ; preds = %if.then66, %lor.lhs.false60, %if.end50
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4584
  %21 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !4584
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !4584
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %22, i8 zeroext %ref_p) #7, !dbg !4585
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4586
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !4586
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %24, i8 zeroext %ref_p) #7, !dbg !4587
  %bf.load72 = load i64, i64* %0, align 8, !dbg !4588
  %bf.cast7411 = and i64 %bf.load72, 65535, !dbg !4590
  %cmp75 = icmp eq i64 %bf.cast7411, 16, !dbg !4590
  br i1 %cmp75, label %if.then82, label %lor.lhs.false76, !dbg !4591

lor.lhs.false76:                                  ; preds = %if.end68
  %cmp81 = icmp eq i64 %bf.cast7411, 17, !dbg !4592
  br i1 %cmp81, label %if.then82, label %if.end84, !dbg !4593

if.then82:                                        ; preds = %lor.lhs.false76, %if.end68
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !4594
  %26 = load %union.tree_node*, %union.tree_node** %25, align 8, !dbg !4594
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %26, i8 zeroext %ref_p) #7, !dbg !4595
  br label %if.end84, !dbg !4595

if.end84:                                         ; preds = %if.then82, %lor.lhs.false76
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4596
  %27 = bitcast i24* %context to %union.tree_node**, !dbg !4596
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8, !dbg !4596
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %28, i8 zeroext %ref_p) #7, !dbg !4597
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 1, !dbg !4598
  %30 = load %union.tree_node*, %union.tree_node** %29, align 8, !dbg !4598
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %30, i8 zeroext %ref_p) #7, !dbg !4599
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4600
  %31 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4600
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %31, i8 zeroext %ref_p) #7, !dbg !4601
  ret void, !dbg !4602
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_list_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4603 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4605, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4606, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4607, metadata !DIExpression()), !dbg !4608
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4609
  %0 = bitcast i32* %purpose to %union.tree_node**, !dbg !4609
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4609
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %1, i8 zeroext %ref_p) #7, !dbg !4610
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4611
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !4611
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %3, i8 zeroext %ref_p) #7, !dbg !4612
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4613
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4613
  tail call fastcc void @lto_output_chain(%struct.output_block* %ob, %union.tree_node* %4, i8 zeroext %ref_p) #7, !dbg !4614
  ret void, !dbg !4615
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_vec_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4616 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4618, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4619, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4620, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 0, metadata !4621, metadata !DIExpression()), !dbg !4622
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4623
  %a = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4623
  br label %for.cond, !dbg !4626

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !4627
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4621, metadata !DIExpression()), !dbg !4622
  %1 = load i32, i32* %0, align 8, !dbg !4628
  %2 = sext i32 %1 to i64, !dbg !4629
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !4629
  br i1 %cmp, label %for.body, label %for.end, !dbg !4630

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %a, i64 %indvars.iv, !dbg !4631
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4631
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %3, i8 zeroext %ref_p) #7, !dbg !4632
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4633
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4622
  br label %for.cond, !dbg !4634, !llvm.loop !4635

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4637
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_exp_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4638 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4640, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4641, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4642, metadata !DIExpression()), !dbg !4644
  %call = tail call fastcc i32 @tree_operand_length(%union.tree_node* %expr) #7, !dbg !4645
  %conv = sext i32 %call to i64, !dbg !4645
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !4646
  call void @llvm.dbg.value(metadata i32 0, metadata !4643, metadata !DIExpression()), !dbg !4644
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4647
  br label %for.cond, !dbg !4650

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !4651
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4643, metadata !DIExpression()), !dbg !4644
  %call1 = tail call fastcc i32 @tree_operand_length(%union.tree_node* %expr) #7, !dbg !4652
  %0 = sext i32 %call1 to i64, !dbg !4653
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !4653
  br i1 %cmp, label %for.body, label %for.end, !dbg !4654

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %indvars.iv, !dbg !4655
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4655
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %1, i8 zeroext %ref_p) #7, !dbg !4656
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4657
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4644
  br label %for.cond, !dbg !4658, !llvm.loop !4659

for.end:                                          ; preds = %for.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4661
  %bf.load = load i64, i64* %2, align 8, !dbg !4661
  %bf.cast = and i64 %bf.load, 65535, !dbg !4661
  %arrayidx4 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4661
  %3 = load i32, i32* %arrayidx4, align 4, !dbg !4661
  %cmp5 = icmp ugt i32 %3, 3, !dbg !4661
  br i1 %cmp5, label %land.lhs.true, label %cond.end, !dbg !4661

land.lhs.true:                                    ; preds = %for.end
  %cmp13 = icmp ult i32 %3, 11, !dbg !4661
  br i1 %cmp13, label %cond.true, label %cond.end, !dbg !4661

cond.true:                                        ; preds = %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4661
  %5 = load i32, i32* %4, align 8, !dbg !4661
  br label %cond.end, !dbg !4661

cond.end:                                         ; preds = %for.end, %land.lhs.true, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %land.lhs.true ], [ 0, %for.end ], !dbg !4661
  tail call fastcc void @lto_output_location(%struct.output_block* %ob, i32 %cond) #7, !dbg !4662
  %call16 = tail call %union.tree_node** @tree_block(%union.tree_node* %expr) #6, !dbg !4663
  %6 = load %union.tree_node*, %union.tree_node** %call16, align 8, !dbg !4663
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %6, i8 zeroext %ref_p) #7, !dbg !4664
  ret void, !dbg !4665
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_block_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4666 {
entry:
  %t = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4668, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4669, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4670, metadata !DIExpression()), !dbg !4673
  %0 = bitcast %union.tree_node** %t to i8*, !dbg !4674
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4674
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4675
  %2 = load i32, i32* %1, align 4, !dbg !4675
  tail call fastcc void @lto_output_location(%struct.output_block* %ob, i32 %2) #7, !dbg !4676
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4677
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !4677
  tail call fastcc void @lto_output_chain(%struct.output_block* %ob, %union.tree_node* %4, i8 zeroext %ref_p) #7, !dbg !4678
  %nonlocalized_vars = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4679
  %5 = bitcast %union.tree_node** %nonlocalized_vars to %struct.VEC_tree_gc**, !dbg !4679
  %6 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %5, align 8, !dbg !4679
  %tobool = icmp eq %struct.VEC_tree_gc* %6, null, !dbg !4679
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4679

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %6, i64 0, i32 0, !dbg !4679
  br label %cond.end, !dbg !4679

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4679
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !4679
  %conv = zext i32 %call to i64, !dbg !4679
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !4680
  call void @llvm.dbg.value(metadata i32 0, metadata !4671, metadata !DIExpression()), !dbg !4673
  br label %for.cond, !dbg !4681

for.cond:                                         ; preds = %for.body, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.body ], !dbg !4683
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4671, metadata !DIExpression()), !dbg !4673
  %7 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %5, align 8, !dbg !4684
  %tobool7 = icmp eq %struct.VEC_tree_gc* %7, null, !dbg !4684
  br i1 %tobool7, label %cond.end13, label %cond.true8, !dbg !4684

cond.true8:                                       ; preds = %for.cond
  %base11 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %7, i64 0, i32 0, !dbg !4684
  br label %cond.end13, !dbg !4684

cond.end13:                                       ; preds = %for.cond, %cond.true8
  %cond14 = phi %struct.VEC_tree_base* [ %base11, %cond.true8 ], [ null, %for.cond ], !dbg !4684
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !4672, metadata !DIExpression(DW_OP_deref)), !dbg !4673
  %call15 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond14, i32 %i.0, %union.tree_node** nonnull %t) #7, !dbg !4684
  %tobool16 = icmp eq i32 %call15, 0, !dbg !4686
  br i1 %tobool16, label %for.end, label %for.body, !dbg !4686

for.body:                                         ; preds = %cond.end13
  %8 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !4687
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4672, metadata !DIExpression()), !dbg !4673
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %8, i8 zeroext %ref_p) #7, !dbg !4688
  %inc = add i32 %i.0, 1, !dbg !4689
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4671, metadata !DIExpression()), !dbg !4673
  br label %for.cond, !dbg !4690, !llvm.loop !4691

for.end:                                          ; preds = %cond.end13
  %supercontext = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4693
  %9 = bitcast i40* %supercontext to %union.tree_node**, !dbg !4693
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !4693
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %10, i8 zeroext %ref_p) #7, !dbg !4694
  %abstract_origin = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4695
  %11 = bitcast i32* %abstract_origin to %union.tree_node**, !dbg !4695
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !4695
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %12, i8 zeroext %ref_p) #7, !dbg !4696
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4697
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !4697
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %14, i8 zeroext %ref_p) #7, !dbg !4698
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4699
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !4699
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %16, i8 zeroext %ref_p) #7, !dbg !4700
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4701
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !4701
  call fastcc void @lto_output_chain(%struct.output_block* %ob, %union.tree_node* %18, i8 zeroext %ref_p) #7, !dbg !4702
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4703
  ret void, !dbg !4703
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_binfo_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4704 {
entry:
  %t = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4706, metadata !DIExpression()), !dbg !4711
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4707, metadata !DIExpression()), !dbg !4711
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4708, metadata !DIExpression()), !dbg !4711
  %0 = bitcast %union.tree_node** %t to i8*, !dbg !4712
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4712
  call void @llvm.dbg.value(metadata i32 0, metadata !4709, metadata !DIExpression()), !dbg !4711
  %base_binfos2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !4713
  %base = bitcast %union.tree_node** %base_binfos2 to %struct.VEC_tree_base*, !dbg !4713
  br label %for.cond, !dbg !4716

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !4717
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4709, metadata !DIExpression()), !dbg !4711
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !4710, metadata !DIExpression(DW_OP_deref)), !dbg !4711
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* nonnull %base, i32 %i.0, %union.tree_node** nonnull %t) #7, !dbg !4718
  %tobool3 = icmp eq i32 %call, 0, !dbg !4719
  br i1 %tobool3, label %for.end, label %for.body, !dbg !4719

for.body:                                         ; preds = %for.cond
  %1 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !4720
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4710, metadata !DIExpression()), !dbg !4711
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %1, i8 zeroext %ref_p) #7, !dbg !4721
  %inc = add i32 %i.0, 1, !dbg !4722
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4709, metadata !DIExpression()), !dbg !4711
  br label %for.cond, !dbg !4723, !llvm.loop !4724

for.end:                                          ; preds = %for.cond
  call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !4726
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4727
  %2 = bitcast i32* %offset to %union.tree_node**, !dbg !4727
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !4727
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %3, i8 zeroext %ref_p) #7, !dbg !4728
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4729
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !4729
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %5, i8 zeroext %ref_p) #7, !dbg !4730
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4731
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !4731
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %7, i8 zeroext %ref_p) #7, !dbg !4732
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4733
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !4733
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %9, i8 zeroext %ref_p) #7, !dbg !4734
  %base_accesses = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4735
  %10 = bitcast i40* %base_accesses to %struct.VEC_tree_gc**, !dbg !4735
  %11 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %10, align 8, !dbg !4735
  %tobool9 = icmp eq %struct.VEC_tree_gc* %11, null, !dbg !4735
  br i1 %tobool9, label %cond.end15, label %cond.true10, !dbg !4735

cond.true10:                                      ; preds = %for.end
  %base13 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %11, i64 0, i32 0, !dbg !4735
  br label %cond.end15, !dbg !4735

cond.end15:                                       ; preds = %for.end, %cond.true10
  %cond16 = phi %struct.VEC_tree_base* [ %base13, %cond.true10 ], [ null, %for.end ], !dbg !4735
  %call17 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond16) #7, !dbg !4735
  %conv = zext i32 %call17 to i64, !dbg !4735
  call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !4736
  call void @llvm.dbg.value(metadata i32 0, metadata !4709, metadata !DIExpression()), !dbg !4711
  br label %for.cond18, !dbg !4737

for.cond18:                                       ; preds = %for.body31, %cond.end15
  %i.1 = phi i32 [ 0, %cond.end15 ], [ %inc33, %for.body31 ], !dbg !4739
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4709, metadata !DIExpression()), !dbg !4711
  %12 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %10, align 8, !dbg !4740
  %tobool21 = icmp eq %struct.VEC_tree_gc* %12, null, !dbg !4740
  br i1 %tobool21, label %cond.end27, label %cond.true22, !dbg !4740

cond.true22:                                      ; preds = %for.cond18
  %base25 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %12, i64 0, i32 0, !dbg !4740
  br label %cond.end27, !dbg !4740

cond.end27:                                       ; preds = %for.cond18, %cond.true22
  %cond28 = phi %struct.VEC_tree_base* [ %base25, %cond.true22 ], [ null, %for.cond18 ], !dbg !4740
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !4710, metadata !DIExpression(DW_OP_deref)), !dbg !4711
  %call29 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond28, i32 %i.1, %union.tree_node** nonnull %t) #7, !dbg !4740
  %tobool30 = icmp eq i32 %call29, 0, !dbg !4742
  br i1 %tobool30, label %for.end34, label %for.body31, !dbg !4742

for.body31:                                       ; preds = %cond.end27
  %13 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !4743
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !4710, metadata !DIExpression()), !dbg !4711
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %13, i8 zeroext %ref_p) #7, !dbg !4744
  %inc33 = add i32 %i.1, 1, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %inc33, metadata !4709, metadata !DIExpression()), !dbg !4711
  br label %for.cond18, !dbg !4746, !llvm.loop !4747

for.end34:                                        ; preds = %cond.end27
  %inheritance = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4749
  %14 = bitcast i32* %inheritance to %union.tree_node**, !dbg !4749
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !4749
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %15, i8 zeroext %ref_p) #7, !dbg !4750
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4751
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !4751
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %17, i8 zeroext %ref_p) #7, !dbg !4752
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4753
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !4753
  call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %19, i8 zeroext %ref_p) #7, !dbg !4754
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4755
  ret void, !dbg !4755
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_ts_constructor_tree_pointers(%struct.output_block* %ob, %union.tree_node* %expr, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4756 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4758, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4759, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4760, metadata !DIExpression()), !dbg !4764
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4765
  %0 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !4765
  %1 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %0, align 8, !dbg !4765
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %1, null, !dbg !4765
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4765

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %1, i64 0, i32 0, !dbg !4765
  br label %cond.end, !dbg !4765

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4765
  %call = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #7, !dbg !4765
  %conv = zext i32 %call to i64, !dbg !4765
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !4766
  call void @llvm.dbg.value(metadata i32 0, metadata !4761, metadata !DIExpression()), !dbg !4764
  br label %for.cond, !dbg !4767

for.cond:                                         ; preds = %for.body, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.body ], !dbg !4769
  %index.0 = phi %union.tree_node* [ undef, %cond.end ], [ %index.1, %for.body ]
  %value.0 = phi %union.tree_node* [ undef, %cond.end ], [ %value.1, %for.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !4763, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata %union.tree_node* %index.0, metadata !4762, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4761, metadata !DIExpression()), !dbg !4764
  %2 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %0, align 8, !dbg !4770
  %tobool5 = icmp eq %struct.VEC_constructor_elt_gc* %2, null, !dbg !4770
  br i1 %tobool5, label %cond.end11, label %cond.true6, !dbg !4770

cond.true6:                                       ; preds = %for.cond
  %base9 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %2, i64 0, i32 0, !dbg !4770
  br label %cond.end11, !dbg !4770

cond.end11:                                       ; preds = %for.cond, %cond.true6
  %cond12 = phi %struct.VEC_constructor_elt_base* [ %base9, %cond.true6 ], [ null, %for.cond ], !dbg !4770
  %call13 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond12) #7, !dbg !4770
  %cmp = icmp ult i32 %i.0, %call13, !dbg !4770
  br i1 %cmp, label %cond.false16, label %cond.end41, !dbg !4770

cond.false16:                                     ; preds = %cond.end11
  %3 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %0, align 8, !dbg !4770
  %tobool19 = icmp eq %struct.VEC_constructor_elt_gc* %3, null, !dbg !4770
  br i1 %tobool19, label %cond.end25, label %cond.true20, !dbg !4770

cond.true20:                                      ; preds = %cond.false16
  %base23 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %3, i64 0, i32 0, !dbg !4770
  br label %cond.end25, !dbg !4770

cond.end25:                                       ; preds = %cond.false16, %cond.true20
  %cond26 = phi %struct.VEC_constructor_elt_base* [ %base23, %cond.true20 ], [ null, %cond.false16 ], !dbg !4770
  %call27 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond26, i32 %i.0) #7, !dbg !4770
  %value28 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call27, i64 0, i32 1, !dbg !4770
  %4 = load %union.tree_node*, %union.tree_node** %value28, align 8, !dbg !4770
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !4763, metadata !DIExpression()), !dbg !4764
  %5 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %0, align 8, !dbg !4770
  %tobool31 = icmp eq %struct.VEC_constructor_elt_gc* %5, null, !dbg !4770
  br i1 %tobool31, label %cond.end37, label %cond.true32, !dbg !4770

cond.true32:                                      ; preds = %cond.end25
  %base35 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %5, i64 0, i32 0, !dbg !4770
  br label %cond.end37, !dbg !4770

cond.end37:                                       ; preds = %cond.end25, %cond.true32
  %cond38 = phi %struct.VEC_constructor_elt_base* [ %base35, %cond.true32 ], [ null, %cond.end25 ], !dbg !4770
  %call39 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond38, i32 %i.0) #7, !dbg !4770
  %index40 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call39, i64 0, i32 0, !dbg !4770
  %6 = load %union.tree_node*, %union.tree_node** %index40, align 8, !dbg !4770
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4762, metadata !DIExpression()), !dbg !4764
  br label %cond.end41, !dbg !4770

cond.end41:                                       ; preds = %cond.end11, %cond.end37
  %index.1 = phi %union.tree_node* [ %6, %cond.end37 ], [ %index.0, %cond.end11 ]
  %value.1 = phi %union.tree_node* [ %4, %cond.end37 ], [ %value.0, %cond.end11 ]
  %cond42 = phi i1 [ true, %cond.end37 ], [ false, %cond.end11 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.1, metadata !4763, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata %union.tree_node* %index.1, metadata !4762, metadata !DIExpression()), !dbg !4764
  br i1 %cond42, label %for.body, label %for.end, !dbg !4767

for.body:                                         ; preds = %cond.end41
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %index.1, i8 zeroext %ref_p) #7, !dbg !4772
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %value.1, i8 zeroext %ref_p) #7, !dbg !4774
  %inc = add i32 %i.0, 1, !dbg !4770
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4761, metadata !DIExpression()), !dbg !4764
  br label %for.cond, !dbg !4770, !llvm.loop !4775

for.end:                                          ; preds = %cond.end41
  ret void, !dbg !4777
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_chain(%struct.output_block* %ob, %union.tree_node* %t, i8 zeroext %ref_p) unnamed_addr #5 !dbg !4778 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4780, metadata !DIExpression()), !dbg !4789
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4781, metadata !DIExpression()), !dbg !4789
  call void @llvm.dbg.value(metadata i8 %ref_p, metadata !4782, metadata !DIExpression()), !dbg !4789
  %call = tail call i32 @list_length(%union.tree_node* %t) #6, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %call, metadata !4784, metadata !DIExpression()), !dbg !4789
  %conv = sext i32 %call to i64, !dbg !4791
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !4792
  call void @llvm.dbg.value(metadata i32 0, metadata !4783, metadata !DIExpression()), !dbg !4789
  br label %for.cond, !dbg !4793

for.cond:                                         ; preds = %for.body, %entry
  %t.addr.0 = phi %union.tree_node* [ %t, %entry ], [ %.cast, %for.body ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !4794
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4783, metadata !DIExpression()), !dbg !4789
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !4781, metadata !DIExpression()), !dbg !4789
  %cmp = icmp slt i32 %i.0, %call, !dbg !4795
  br i1 %cmp, label %for.body, label %for.end, !dbg !4796

for.body:                                         ; preds = %for.cond
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4797
  %0 = bitcast %union.tree_node** %chain to i64*, !dbg !4797
  %1 = load i64, i64* %0, align 8, !dbg !4797
  store %union.tree_node* null, %union.tree_node** %chain, align 8, !dbg !4798
  tail call fastcc void @lto_output_tree_or_ref(%struct.output_block* %ob, %union.tree_node* %t.addr.0, i8 zeroext %ref_p) #7, !dbg !4799
  store i64 %1, i64* %0, align 8, !dbg !4800
  %.cast = inttoptr i64 %1 to %union.tree_node*, !dbg !4801
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !4781, metadata !DIExpression()), !dbg !4789
  %inc = add nuw nsw i32 %i.0, 1, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4783, metadata !DIExpression()), !dbg !4789
  br label %for.cond, !dbg !4803, !llvm.loop !4804

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4806
}

declare dso_local i32 @list_length(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_location(%struct.output_block* %ob, i32 %loc) unnamed_addr #5 !dbg !4807 {
entry:
  %xloc = alloca %struct.expanded_location, align 8
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !4811, metadata !DIExpression()), !dbg !4821
  call void @llvm.dbg.value(metadata i32 %loc, metadata !4812, metadata !DIExpression()), !dbg !4821
  %0 = bitcast %struct.expanded_location* %xloc to i8*, !dbg !4822
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4822
  %cmp = icmp eq i32 %loc, 0, !dbg !4823
  br i1 %cmp, label %if.then, label %if.end, !dbg !4825

if.then:                                          ; preds = %entry
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !4826
  %1 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !4826
  tail call fastcc void @output_string(%struct.output_block* %ob, %struct.lto_output_stream* %1, i8* null) #7, !dbg !4828
  br label %cleanup, !dbg !4829

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.expanded_location* %tmp to i8*, !dbg !4830
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4830
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %loc) #6, !dbg !4830
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !4830
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4830
  %main_stream1 = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !4831
  %3 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream1, align 8, !dbg !4831
  %file = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %xloc, i64 0, i32 0, !dbg !4832
  %4 = load i8*, i8** %file, align 8, !dbg !4832
  call fastcc void @output_string(%struct.output_block* %ob, %struct.lto_output_stream* %3, i8* %4) #7, !dbg !4833
  %line = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %xloc, i64 0, i32 1, !dbg !4834
  %5 = load i32, i32* %line, align 8, !dbg !4834
  %conv = sext i32 %5 to i64, !dbg !4835
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !4836
  %column = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %xloc, i64 0, i32 2, !dbg !4837
  %6 = load i32, i32* %column, align 4, !dbg !4837
  %conv2 = sext i32 %6 to i64, !dbg !4838
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv2) #7, !dbg !4839
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %xloc, i64 0, i32 3, !dbg !4840
  %7 = load i8, i8* %sysp, align 8, !dbg !4840
  %conv3 = zext i8 %7 to i64, !dbg !4841
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv3) #7, !dbg !4842
  %8 = ptrtoint i8* %4 to i64, !dbg !4843
  %current_file = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 7, !dbg !4844
  %9 = bitcast i8** %current_file to i64*, !dbg !4845
  store i64 %8, i64* %9, align 8, !dbg !4845
  %current_line = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 8, !dbg !4846
  store i32 %5, i32* %current_line, align 8, !dbg !4847
  %current_col = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 9, !dbg !4848
  store i32 %6, i32* %current_col, align 4, !dbg !4849
  br label %cleanup, !dbg !4850

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4850
  ret void, !dbg !4850
}

declare dso_local void @expand_location(%struct.expanded_location* sret, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_value_expr_lookup(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @tree_operand_length(%union.tree_node* %node) unnamed_addr #0 !dbg !4851 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !4858, metadata !DIExpression()), !dbg !4859
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4860
  %bf.load = load i64, i64* %0, align 8, !dbg !4860
  %bf.cast = and i64 %bf.load, 65535, !dbg !4860
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4860
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4860
  %cmp = icmp eq i32 %1, 9, !dbg !4860
  br i1 %cmp, label %if.then, label %if.else, !dbg !4862

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4863
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !4863
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !4863
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !4863
  %4 = load i64, i64* %low, align 8, !dbg !4863
  %conv = trunc i64 %4 to i32, !dbg !4863
  br label %return, !dbg !4864

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !4865
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !4865
  %conv9 = zext i8 %5 to i32, !dbg !4865
  br label %return, !dbg !4866

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv9, %if.else ], !dbg !4867
  ret i32 %retval.0, !dbg !4868
}

declare dso_local %union.tree_node** @tree_block(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !4869 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4873, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4874, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !4875, metadata !DIExpression()), !dbg !4876
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !4877
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4877

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !4877
  %0 = load i32, i32* %num, align 8, !dbg !4877
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4877
  br i1 %cmp, label %if.then, label %if.else, !dbg !4879

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4880
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4880
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4880
  br label %return, !dbg !4880

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4882

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !4884
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4884
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !4884
  ret i32 %retval.0, !dbg !4879
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !4885 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !4891, metadata !DIExpression()), !dbg !4892
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !4893
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4893

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !4893
  %0 = load i32, i32* %num, align 8, !dbg !4893
  br label %cond.end, !dbg !4893

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4893
  ret i32 %cond, !dbg !4893
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4894 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !4900, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4901, metadata !DIExpression()), !dbg !4902
  br label %land.end, !dbg !4903

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4903
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4903
  ret %struct.constructor_elt_d* %arrayidx, !dbg !4903
}

declare dso_local %struct.bitmap_head_def* @lto_bitmap_alloc() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_writer_init() unnamed_addr #5 !dbg !4904 {
entry:
  tail call void @lto_streamer_init() #6, !dbg !4905
  ret void, !dbg !4906
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { %struct.cgraph_node_set_def*, i32 } @csi_start(%struct.cgraph_node_set_def* %set) unnamed_addr #0 !dbg !4907 {
entry:
  %retval = alloca %struct.cgraph_node_set_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_node_set_def* %set, metadata !4911, metadata !DIExpression()), !dbg !4913
  %set1 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %retval, i64 0, i32 0, !dbg !4914
  store %struct.cgraph_node_set_def* %set, %struct.cgraph_node_set_def** %set1, align 8, !dbg !4915
  %index = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %retval, i64 0, i32 1, !dbg !4916
  store i32 0, i32* %index, align 8, !dbg !4917
  %0 = bitcast %struct.cgraph_node_set_iterator* %retval to { %struct.cgraph_node_set_def*, i32 }*, !dbg !4918
  %1 = load { %struct.cgraph_node_set_def*, i32 }, { %struct.cgraph_node_set_def*, i32 }* %0, align 8, !dbg !4918
  ret { %struct.cgraph_node_set_def*, i32 } %1, !dbg !4918
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @csi_end_p(%struct.cgraph_node_set_def* %csi.coerce0, i32 %csi.coerce1) unnamed_addr #0 !dbg !4919 {
entry:
  %nodes = getelementptr inbounds %struct.cgraph_node_set_def, %struct.cgraph_node_set_def* %csi.coerce0, i64 0, i32 1, !dbg !4924
  %0 = load %struct.VEC_cgraph_node_ptr_gc*, %struct.VEC_cgraph_node_ptr_gc** %nodes, align 8, !dbg !4924
  %tobool = icmp eq %struct.VEC_cgraph_node_ptr_gc* %0, null, !dbg !4924
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4924

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_cgraph_node_ptr_gc, %struct.VEC_cgraph_node_ptr_gc* %0, i64 0, i32 0, !dbg !4924
  br label %cond.end, !dbg !4924

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_cgraph_node_ptr_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4924
  %call = tail call fastcc i32 @VEC_cgraph_node_ptr_base_length(%struct.VEC_cgraph_node_ptr_base* %cond) #7, !dbg !4924
  %cmp = icmp ule i32 %call, %csi.coerce1, !dbg !4925
  %conv3 = zext i1 %cmp to i8, !dbg !4926
  ret i8 %conv3, !dbg !4927
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.cgraph_node* @csi_node(%struct.cgraph_node_set_def* %csi.coerce0, i32 %csi.coerce1) unnamed_addr #0 !dbg !4928 {
entry:
  %nodes = getelementptr inbounds %struct.cgraph_node_set_def, %struct.cgraph_node_set_def* %csi.coerce0, i64 0, i32 1, !dbg !4933
  %0 = load %struct.VEC_cgraph_node_ptr_gc*, %struct.VEC_cgraph_node_ptr_gc** %nodes, align 8, !dbg !4933
  %tobool = icmp eq %struct.VEC_cgraph_node_ptr_gc* %0, null, !dbg !4933
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4933

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_cgraph_node_ptr_gc, %struct.VEC_cgraph_node_ptr_gc* %0, i64 0, i32 0, !dbg !4933
  br label %cond.end, !dbg !4933

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_cgraph_node_ptr_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4933
  %call = tail call fastcc %struct.cgraph_node* @VEC_cgraph_node_ptr_base_index(%struct.VEC_cgraph_node_ptr_base* %cond, i32 %csi.coerce1) #7, !dbg !4933
  ret %struct.cgraph_node* %call, !dbg !4934
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local %struct.lto_out_decl_state* @lto_new_out_decl_state() local_unnamed_addr #2

declare dso_local void @lto_push_out_decl_state(%struct.lto_out_decl_state*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_function(%struct.cgraph_node* %node) unnamed_addr #5 !dbg !4935 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !4937, metadata !DIExpression()), !dbg !4943
  %decl = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 0, !dbg !4944
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4944
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4939, metadata !DIExpression()), !dbg !4943
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 1, !dbg !4945
  %1 = load %struct.function*, %struct.function** %f, align 8, !dbg !4945
  call void @llvm.dbg.value(metadata %struct.function* %1, metadata !4940, metadata !DIExpression()), !dbg !4943
  %call = tail call %struct.output_block* @create_output_block(i32 1) #7, !dbg !4946
  call void @llvm.dbg.value(metadata %struct.output_block* %call, metadata !4942, metadata !DIExpression()), !dbg !4943
  tail call fastcc void @clear_line_info(%struct.output_block* %call) #7, !dbg !4947
  %cgraph_node = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 6, !dbg !4948
  store %struct.cgraph_node* %node, %struct.cgraph_node** %cgraph_node, align 8, !dbg !4949
  %2 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4950
  %cmp = icmp eq %union.tree_node* %2, null, !dbg !4950
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !4950

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4950
  %cmp1 = icmp eq %struct.function* %3, null, !dbg !4950
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !4950

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 1844, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4950
  br label %cond.end, !dbg !4950

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  store %union.tree_node* %0, %union.tree_node** @current_function_decl, align 8, !dbg !4951
  tail call void @push_cfun(%struct.function* %1) #6, !dbg !4952
  %string_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 3, !dbg !4953
  %4 = load %struct.lto_output_stream*, %struct.lto_output_stream** %string_stream, align 8, !dbg !4953
  tail call void @lto_output_1_stream(%struct.lto_output_stream* %4, i8 signext 0) #6, !dbg !4954
  tail call fastcc void @output_record_start(%struct.output_block* %call, i32 228) #7, !dbg !4955
  %call2 = tail call %struct.bitpack_d* @bitpack_create() #6, !dbg !4956
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %call2, metadata !4938, metadata !DIExpression()), !dbg !4943
  %is_thunk = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 20, !dbg !4957
  %bf.load = load i32, i32* %is_thunk, align 8, !dbg !4957
  %bf.lshr = lshr i32 %bf.load, 30, !dbg !4957
  %bf.clear = and i32 %bf.lshr, 1, !dbg !4957
  %conv = zext i32 %bf.clear to i64, !dbg !4958
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv, i32 1) #6, !dbg !4959
  %bf.load3 = load i32, i32* %is_thunk, align 8, !dbg !4960
  %bf.lshr4 = lshr i32 %bf.load3, 29, !dbg !4960
  %bf.clear5 = and i32 %bf.lshr4, 1, !dbg !4960
  %conv6 = zext i32 %bf.clear5 to i64, !dbg !4961
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv6, i32 1) #6, !dbg !4962
  %bf.load7 = load i32, i32* %is_thunk, align 8, !dbg !4963
  %bf.lshr8 = lshr i32 %bf.load7, 28, !dbg !4963
  %bf.clear9 = and i32 %bf.lshr8, 1, !dbg !4963
  %conv10 = zext i32 %bf.clear9 to i64, !dbg !4964
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv10, i32 1) #6, !dbg !4965
  %bf.load11 = load i32, i32* %is_thunk, align 8, !dbg !4966
  %bf.lshr12 = lshr i32 %bf.load11, 27, !dbg !4966
  %bf.clear13 = and i32 %bf.lshr12, 1, !dbg !4966
  %conv14 = zext i32 %bf.clear13 to i64, !dbg !4967
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv14, i32 1) #6, !dbg !4968
  %bf.load15 = load i32, i32* %is_thunk, align 8, !dbg !4969
  %bf.lshr16 = lshr i32 %bf.load15, 26, !dbg !4969
  %bf.clear17 = and i32 %bf.lshr16, 1, !dbg !4969
  %conv18 = zext i32 %bf.clear17 to i64, !dbg !4970
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv18, i32 1) #6, !dbg !4971
  %bf.load19 = load i32, i32* %is_thunk, align 8, !dbg !4972
  %bf.lshr20 = lshr i32 %bf.load19, 25, !dbg !4972
  %bf.clear21 = and i32 %bf.lshr20, 1, !dbg !4972
  %conv22 = zext i32 %bf.clear21 to i64, !dbg !4973
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv22, i32 1) #6, !dbg !4974
  %bf.load23 = load i32, i32* %is_thunk, align 8, !dbg !4975
  %bf.lshr24 = lshr i32 %bf.load23, 24, !dbg !4975
  %bf.clear25 = and i32 %bf.lshr24, 1, !dbg !4975
  %conv26 = zext i32 %bf.clear25 to i64, !dbg !4976
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv26, i32 1) #6, !dbg !4977
  %bf.load27 = load i32, i32* %is_thunk, align 8, !dbg !4978
  %bf.lshr28 = lshr i32 %bf.load27, 23, !dbg !4978
  %bf.clear29 = and i32 %bf.lshr28, 1, !dbg !4978
  %conv30 = zext i32 %bf.clear29 to i64, !dbg !4979
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv30, i32 1) #6, !dbg !4980
  %bf.load31 = load i32, i32* %is_thunk, align 8, !dbg !4981
  %bf.lshr32 = lshr i32 %bf.load31, 22, !dbg !4981
  %bf.clear33 = and i32 %bf.lshr32, 1, !dbg !4981
  %conv34 = zext i32 %bf.clear33 to i64, !dbg !4982
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv34, i32 1) #6, !dbg !4983
  %bf.load35 = load i32, i32* %is_thunk, align 8, !dbg !4984
  %bf.lshr36 = lshr i32 %bf.load35, 20, !dbg !4984
  %bf.clear37 = and i32 %bf.lshr36, 1, !dbg !4984
  %conv38 = zext i32 %bf.clear37 to i64, !dbg !4985
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv38, i32 1) #6, !dbg !4986
  %bf.load39 = load i32, i32* %is_thunk, align 8, !dbg !4987
  %bf.lshr40 = lshr i32 %bf.load39, 19, !dbg !4987
  %bf.clear41 = and i32 %bf.lshr40, 1, !dbg !4987
  %conv42 = zext i32 %bf.clear41 to i64, !dbg !4988
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv42, i32 1) #6, !dbg !4989
  %bf.load43 = load i32, i32* %is_thunk, align 8, !dbg !4990
  %bf.lshr44 = lshr i32 %bf.load43, 18, !dbg !4990
  %bf.clear45 = and i32 %bf.lshr44, 1, !dbg !4990
  %conv46 = zext i32 %bf.clear45 to i64, !dbg !4991
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv46, i32 1) #6, !dbg !4992
  %bf.load47 = load i32, i32* %is_thunk, align 8, !dbg !4993
  %bf.lshr48 = lshr i32 %bf.load47, 16, !dbg !4993
  %bf.clear49 = and i32 %bf.lshr48, 3, !dbg !4993
  %conv50 = zext i32 %bf.clear49 to i64, !dbg !4994
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv50, i32 2) #6, !dbg !4995
  %bf.load51 = load i32, i32* %is_thunk, align 8, !dbg !4996
  %bf.lshr52 = lshr i32 %bf.load51, 8, !dbg !4996
  %bf.clear53 = and i32 %bf.lshr52, 255, !dbg !4996
  %conv54 = zext i32 %bf.clear53 to i64, !dbg !4997
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv54, i32 8) #6, !dbg !4998
  %bf.load55 = load i32, i32* %is_thunk, align 8, !dbg !4999
  %bf.clear56 = and i32 %bf.load55, 255, !dbg !4999
  %conv57 = zext i32 %bf.clear56 to i64, !dbg !5000
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv57, i32 8) #6, !dbg !5001
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 2, !dbg !5002
  %5 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !5002
  tail call void @lto_output_bitpack(%struct.lto_output_stream* %5, %struct.bitpack_d* %call2) #7, !dbg !5003
  tail call void @bitpack_delete(%struct.bitpack_d* %call2) #6, !dbg !5004
  %curr_properties = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 17, !dbg !5005
  %6 = load i32, i32* %curr_properties, align 8, !dbg !5005
  %conv58 = zext i32 %6 to i64, !dbg !5006
  tail call fastcc void @output_uleb128(%struct.output_block* %call, i64 %conv58) #7, !dbg !5007
  %static_chain_decl = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 7, !dbg !5008
  %7 = load %union.tree_node*, %union.tree_node** %static_chain_decl, align 8, !dbg !5008
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %call, %union.tree_node* %7) #7, !dbg !5009
  %nonlocal_goto_save_area = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 8, !dbg !5010
  %8 = load %union.tree_node*, %union.tree_node** %nonlocal_goto_save_area, align 8, !dbg !5010
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %call, %union.tree_node* %8) #7, !dbg !5011
  %local_decls = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 9, !dbg !5012
  %9 = load %union.tree_node*, %union.tree_node** %local_decls, align 8, !dbg !5012
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %call, %union.tree_node* %9) #7, !dbg !5013
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !5014
  %10 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !5014
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %call, %union.tree_node* %10) #7, !dbg !5015
  tail call fastcc void @output_ssa_names(%struct.output_block* %call, %struct.function* %1) #7, !dbg !5016
  tail call fastcc void @output_eh_regions(%struct.output_block* %call, %struct.function* %1) #7, !dbg !5017
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !5018
  %11 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !5018
  tail call void @lto_output_tree(%struct.output_block* %call, %union.tree_node* %11, i8 zeroext 1) #7, !dbg !5019
  tail call void @renumber_gimple_stmt_uids() #6, !dbg !5020
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !5021
  %12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5021
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %12, i64 0, i32 0, !dbg !5021
  br label %for.cond, !dbg !5021

for.cond:                                         ; preds = %for.body, %cond.end
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %cond.end ], [ %next_bb, %for.body ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5023
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4941, metadata !DIExpression()), !dbg !4943
  %tobool = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !5021
  br i1 %tobool, label %for.end, label %for.body, !dbg !5021

for.body:                                         ; preds = %for.cond
  tail call fastcc void @output_bb(%struct.output_block* %call, %struct.basic_block_def* nonnull %bb.0, %struct.function* %1) #7, !dbg !5024
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !5026
  br label %for.cond, !dbg !5026, !llvm.loop !5027

for.end:                                          ; preds = %for.cond
  tail call fastcc void @output_zero(%struct.output_block* %call) #7, !dbg !5029
  tail call fastcc void @output_cfg(%struct.output_block* %call, %struct.function* %1) #7, !dbg !5030
  tail call void @produce_asm(%struct.output_block* %call, %union.tree_node* %0) #7, !dbg !5031
  tail call void @destroy_output_block(%struct.output_block* %call) #7, !dbg !5032
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8, !dbg !5033
  tail call void @pop_cfun() #6, !dbg !5034
  ret void, !dbg !5035
}

; Function Attrs: nounwind uwtable
define internal fastcc void @copy_function(%struct.cgraph_node* %node) unnamed_addr #5 !dbg !5036 {
entry:
  %len = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !5038, metadata !DIExpression()), !dbg !5057
  %decl = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 0, !dbg !5058
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5058
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5039, metadata !DIExpression()), !dbg !5057
  %lto_file_data = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 18, i32 0, !dbg !5059
  %1 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %lto_file_data, align 8, !dbg !5059
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %1, metadata !5040, metadata !DIExpression()), !dbg !5057
  %call = tail call i8* @xcalloc(i64 1, i64 40) #6, !dbg !5060
  %2 = bitcast i8* %call to %struct.lto_output_stream*, !dbg !5060
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %2, metadata !5041, metadata !DIExpression()), !dbg !5057
  %3 = bitcast i64* %len to i8*, !dbg !5061
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5061
  %call1 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %0) #6, !dbg !5062
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5062
  %str = bitcast i32* %id to i8**, !dbg !5062
  %4 = load i8*, i8** %str, align 8, !dbg !5062
  call void @llvm.dbg.value(metadata i8* %4, metadata !5044, metadata !DIExpression()), !dbg !5057
  %call2 = tail call i8* @lto_get_section_name(i32 1, i8* %4) #6, !dbg !5063
  call void @llvm.dbg.value(metadata i8* %call2, metadata !5045, metadata !DIExpression()), !dbg !5057
  %call3 = tail call %struct.lto_out_decl_state* @lto_get_out_decl_state() #6, !dbg !5064
  call void @llvm.dbg.value(metadata %struct.lto_out_decl_state* %call3, metadata !5049, metadata !DIExpression()), !dbg !5057
  %5 = load i32, i32* @flag_wpa, align 4, !dbg !5065
  %tobool = icmp eq i32 %5, 0, !dbg !5066
  %conv = zext i1 %tobool to i8, !dbg !5066
  tail call void @lto_begin_section(i8* %call2, i8 zeroext %conv) #6, !dbg !5067
  tail call void @free(i8* %call2) #6, !dbg !5068
  %call4 = tail call i8* @lto_get_decl_name_mapping(%struct.lto_file_decl_data* %1, i8* %4) #6, !dbg !5069
  call void @llvm.dbg.value(metadata i8* %call4, metadata !5044, metadata !DIExpression()), !dbg !5057
  call void @llvm.dbg.value(metadata i64* %len, metadata !5043, metadata !DIExpression(DW_OP_deref)), !dbg !5057
  %call5 = call i8* @lto_get_section_data(%struct.lto_file_decl_data* %1, i32 1, i8* %call4, i64* nonnull %len) #6, !dbg !5070
  call void @llvm.dbg.value(metadata i8* %call5, metadata !5042, metadata !DIExpression()), !dbg !5057
  %tobool6 = icmp eq i8* %call5, null, !dbg !5071
  br i1 %tobool6, label %cond.true, label %cond.end, !dbg !5071

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 2048, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5071
  br label %cond.end, !dbg !5071

cond.end:                                         ; preds = %entry, %cond.true
  %6 = load i64, i64* %len, align 8, !dbg !5072
  call void @llvm.dbg.value(metadata i64 %6, metadata !5043, metadata !DIExpression()), !dbg !5057
  call void @lto_output_data_stream(%struct.lto_output_stream* %2, i8* %call5, i64 %6) #6, !dbg !5073
  call void @lto_write_stream(%struct.lto_output_stream* %2) #6, !dbg !5074
  %7 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %lto_file_data, align 8, !dbg !5075
  %call9 = call %struct.lto_in_decl_state* @lto_get_function_in_decl_state(%struct.lto_file_decl_data* %7, %union.tree_node* %0) #6, !dbg !5076
  call void @llvm.dbg.value(metadata %struct.lto_in_decl_state* %call9, metadata !5048, metadata !DIExpression()), !dbg !5057
  %tobool10 = icmp eq %struct.lto_in_decl_state* %call9, null, !dbg !5077
  br i1 %tobool10, label %cond.true11, label %cond.end13, !dbg !5077

cond.true11:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 2057, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5077
  br label %cond.end13, !dbg !5077

cond.end13:                                       ; preds = %cond.end, %cond.true11
  call void @llvm.dbg.value(metadata i64 0, metadata !5046, metadata !DIExpression()), !dbg !5057
  br label %for.cond, !dbg !5078

for.cond:                                         ; preds = %for.end, %cond.end13
  %i.0 = phi i64 [ 0, %cond.end13 ], [ %inc38, %for.end ], !dbg !5079
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5046, metadata !DIExpression()), !dbg !5057
  %exitcond1 = icmp eq i64 %i.0, 7, !dbg !5080
  br i1 %exitcond1, label %for.end39, label %for.body, !dbg !5081

for.body:                                         ; preds = %for.cond
  %size = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %call9, i64 0, i32 0, i64 %i.0, i32 1, !dbg !5082
  %8 = load i32, i32* %size, align 8, !dbg !5082
  %conv16 = zext i32 %8 to i64, !dbg !5083
  call void @llvm.dbg.value(metadata i64 %conv16, metadata !5050, metadata !DIExpression()), !dbg !5084
  %trees19 = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %call9, i64 0, i32 0, i64 %i.0, i32 0, !dbg !5085
  %9 = load %union.tree_node**, %union.tree_node*** %trees19, align 8, !dbg !5085
  call void @llvm.dbg.value(metadata %union.tree_node** %9, metadata !5054, metadata !DIExpression()), !dbg !5084
  %arrayidx21 = getelementptr inbounds %struct.lto_out_decl_state, %struct.lto_out_decl_state* %call3, i64 0, i32 0, i64 %i.0, !dbg !5086
  call void @llvm.dbg.value(metadata %struct.lto_tree_ref_encoder* %arrayidx21, metadata !5055, metadata !DIExpression()), !dbg !5084
  %call22 = call fastcc i32 @lto_tree_ref_encoder_size(%struct.lto_tree_ref_encoder* %arrayidx21) #7, !dbg !5087
  %cmp23 = icmp eq i32 %call22, 0, !dbg !5087
  br i1 %cmp23, label %cond.end27, label %cond.true25, !dbg !5087

cond.true25:                                      ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 2068, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5087
  br label %cond.end27, !dbg !5087

cond.end27:                                       ; preds = %for.body, %cond.true25
  call void @llvm.dbg.value(metadata i64 0, metadata !5047, metadata !DIExpression()), !dbg !5057
  %trees33 = getelementptr inbounds %struct.lto_out_decl_state, %struct.lto_out_decl_state* %call3, i64 0, i32 0, i64 %i.0, i32 2, !dbg !5088
  br label %for.cond29, !dbg !5091

for.cond29:                                       ; preds = %for.body32, %cond.end27
  %j.0 = phi i64 [ 0, %cond.end27 ], [ %inc, %for.body32 ], !dbg !5092
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !5047, metadata !DIExpression()), !dbg !5057
  %exitcond = icmp eq i64 %j.0, %conv16, !dbg !5093
  br i1 %exitcond, label %for.end, label %for.body32, !dbg !5094

for.body32:                                       ; preds = %for.cond29
  %arrayidx34 = getelementptr inbounds %union.tree_node*, %union.tree_node** %9, i64 %j.0, !dbg !5095
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx34, align 8, !dbg !5095
  %call35 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %trees33, %union.tree_node* %10) #7, !dbg !5095
  %inc = add nuw nsw i64 %j.0, 1, !dbg !5096
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5047, metadata !DIExpression()), !dbg !5057
  br label %for.cond29, !dbg !5097, !llvm.loop !5098

for.end:                                          ; preds = %for.cond29
  %next_index = getelementptr inbounds %struct.lto_out_decl_state, %struct.lto_out_decl_state* %call3, i64 0, i32 0, i64 %i.0, i32 1, !dbg !5100
  store i32 %8, i32* %next_index, align 8, !dbg !5101
  %inc38 = add nuw nsw i64 %i.0, 1, !dbg !5102
  call void @llvm.dbg.value(metadata i64 %inc38, metadata !5046, metadata !DIExpression()), !dbg !5057
  br label %for.cond, !dbg !5103, !llvm.loop !5104

for.end39:                                        ; preds = %for.cond
  %11 = load i64, i64* %len, align 8, !dbg !5106
  call void @llvm.dbg.value(metadata i64 %11, metadata !5043, metadata !DIExpression()), !dbg !5057
  call void @lto_free_section_data(%struct.lto_file_decl_data* %1, i32 1, i8* %call4, i8* %call5, i64 %11) #6, !dbg !5107
  call void @free(i8* %call) #6, !dbg !5108
  call void @lto_end_section() #6, !dbg !5109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5110
  ret void, !dbg !5110
}

declare dso_local %struct.lto_out_decl_state* @lto_pop_out_decl_state() local_unnamed_addr #2

declare dso_local void @lto_record_function_out_decl_state(%union.tree_node*, %struct.lto_out_decl_state*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @csi_next(%struct.cgraph_node_set_iterator* %csi) unnamed_addr #0 !dbg !5111 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node_set_iterator* %csi, metadata !5116, metadata !DIExpression()), !dbg !5117
  %index = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %csi, i64 0, i32 1, !dbg !5118
  %0 = load i32, i32* %index, align 8, !dbg !5119
  %inc = add i32 %0, 1, !dbg !5119
  store i32 %inc, i32* %index, align 8, !dbg !5119
  ret void, !dbg !5120
}

declare dso_local void @output_cgraph(%struct.cgraph_node_set_def*) local_unnamed_addr #2

declare dso_local void @lto_bitmap_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @lto_streamer_init() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_cgraph_node_ptr_base_length(%struct.VEC_cgraph_node_ptr_base* %vec_) unnamed_addr #0 !dbg !5121 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_cgraph_node_ptr_base* %vec_, metadata !5127, metadata !DIExpression()), !dbg !5128
  %tobool = icmp eq %struct.VEC_cgraph_node_ptr_base* %vec_, null, !dbg !5129
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5129

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_cgraph_node_ptr_base, %struct.VEC_cgraph_node_ptr_base* %vec_, i64 0, i32 0, !dbg !5129
  %0 = load i32, i32* %num, align 8, !dbg !5129
  br label %cond.end, !dbg !5129

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5129
  ret i32 %cond, !dbg !5129
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.cgraph_node* @VEC_cgraph_node_ptr_base_index(%struct.VEC_cgraph_node_ptr_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5130 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_cgraph_node_ptr_base* %vec_, metadata !5134, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5135, metadata !DIExpression()), !dbg !5136
  br label %land.end, !dbg !5137

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5137
  %arrayidx = getelementptr inbounds %struct.VEC_cgraph_node_ptr_base, %struct.VEC_cgraph_node_ptr_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5137
  %0 = load %struct.cgraph_node*, %struct.cgraph_node** %arrayidx, align 8, !dbg !5137
  ret %struct.cgraph_node* %0, !dbg !5137
}

declare dso_local void @push_cfun(%struct.function*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_ssa_names(%struct.output_block* %ob, %struct.function* %fn) unnamed_addr #5 !dbg !5138 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !5142, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !5143, metadata !DIExpression()), !dbg !5150
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 3, !dbg !5151
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !5151
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 2, !dbg !5151
  %1 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !5151
  %tobool = icmp eq %struct.VEC_tree_gc* %1, null, !dbg !5151
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5151

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %1, i64 0, i32 0, !dbg !5151
  br label %cond.end, !dbg !5151

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5151
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !5151
  call void @llvm.dbg.value(metadata i32 %call, metadata !5145, metadata !DIExpression()), !dbg !5150
  %conv = zext i32 %call to i64, !dbg !5152
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !5153
  call void @llvm.dbg.value(metadata i32 1, metadata !5144, metadata !DIExpression()), !dbg !5150
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !5154
  %2 = zext i32 %call to i64, !dbg !5155
  br label %for.cond, !dbg !5155

for.cond:                                         ; preds = %cleanup, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup ], [ 1, %cond.end ], !dbg !5156
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5144, metadata !DIExpression()), !dbg !5150
  %cmp = icmp ult i64 %indvars.iv, %2, !dbg !5157
  br i1 %cmp, label %for.body, label %for.end, !dbg !5158

for.body:                                         ; preds = %for.cond
  %3 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !5159
  %ssa_names5 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %3, i64 0, i32 2, !dbg !5159
  %4 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names5, align 8, !dbg !5159
  %tobool6 = icmp eq %struct.VEC_tree_gc* %4, null, !dbg !5159
  br i1 %tobool6, label %cond.end12, label %cond.true7, !dbg !5159

cond.true7:                                       ; preds = %for.body
  %base10 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %4, i64 0, i32 0, !dbg !5159
  br label %cond.end12, !dbg !5159

cond.end12:                                       ; preds = %for.body, %cond.true7
  %cond13 = phi %struct.VEC_tree_base* [ %base10, %cond.true7 ], [ null, %for.body ], !dbg !5159
  %5 = trunc i64 %indvars.iv to i32, !dbg !5159
  %call14 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond13, i32 %5) #7, !dbg !5159
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !5146, metadata !DIExpression()), !dbg !5154
  %cmp15 = icmp eq %union.tree_node* %call14, null, !dbg !5160
  br i1 %cmp15, label %cleanup, label %lor.lhs.false, !dbg !5162

lor.lhs.false:                                    ; preds = %cond.end12
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5163
  %bf.load = load i64, i64* %6, align 8, !dbg !5163
  %bf.cast1 = and i64 %bf.load, 33554432, !dbg !5163
  %tobool18 = icmp eq i64 %bf.cast1, 0, !dbg !5163
  br i1 %tobool18, label %lor.lhs.false19, label %cleanup, !dbg !5164

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %call20 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* nonnull %call14) #6, !dbg !5165
  %tobool21 = icmp eq i8 %call20, 0, !dbg !5165
  br i1 %tobool21, label %cleanup, label %if.end, !dbg !5166

if.end:                                           ; preds = %lor.lhs.false19
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %indvars.iv) #7, !dbg !5167
  %7 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !5168
  %bf.load24 = load i64, i64* %6, align 8, !dbg !5169
  %bf.lshr25 = lshr i64 %bf.load24, 32, !dbg !5169
  %8 = trunc i64 %bf.lshr25 to i8, !dbg !5169
  %bf.cast27 = and i8 %8, 1, !dbg !5169
  tail call void @lto_output_1_stream(%struct.lto_output_stream* %7, i8 signext %bf.cast27) #6, !dbg !5170
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5171
  %9 = bitcast i32* %var to %union.tree_node**, !dbg !5171
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !5171
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %10) #7, !dbg !5172
  br label %cleanup, !dbg !5173

cleanup:                                          ; preds = %lor.lhs.false19, %lor.lhs.false, %cond.end12, %if.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5174
  br label %for.cond, !dbg !5175, !llvm.loop !5176

for.end:                                          ; preds = %for.cond
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5178
  ret void, !dbg !5179
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_eh_regions(%struct.output_block* %ob, %struct.function* %fn) unnamed_addr #5 !dbg !5180 {
entry:
  %eh3 = alloca %struct.eh_region_d*, align 8
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  %ttype = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  %c = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !5182, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !5183, metadata !DIExpression()), !dbg !5195
  %eh = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 0, !dbg !5196
  %0 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5196
  %tobool = icmp eq %struct.eh_status* %0, null, !dbg !5197
  br i1 %tobool, label %if.end144, label %land.lhs.true, !dbg !5198

land.lhs.true:                                    ; preds = %entry
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 0, !dbg !5199
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !5199
  %tobool2 = icmp eq %struct.eh_region_d* %1, null, !dbg !5200
  br i1 %tobool2, label %if.end144, label %if.then, !dbg !5201

if.then:                                          ; preds = %land.lhs.true
  %2 = bitcast %struct.eh_region_d** %eh3 to i8*, !dbg !5202
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5202
  %3 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !5203
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5203
  %4 = bitcast %union.tree_node** %ttype to i8*, !dbg !5204
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5204
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 229) #7, !dbg !5205
  %5 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5206
  %region_tree5 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %5, i64 0, i32 0, !dbg !5207
  %6 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree5, align 8, !dbg !5207
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %6, i64 0, i32 3, !dbg !5208
  %7 = load i32, i32* %index, align 8, !dbg !5208
  %conv = sext i32 %7 to i64, !dbg !5209
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !5210
  %8 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5211
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %8, i64 0, i32 1, !dbg !5211
  %9 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !5211
  %tobool7 = icmp eq %struct.VEC_eh_region_gc* %9, null, !dbg !5211
  br i1 %tobool7, label %cond.end, label %cond.true, !dbg !5211

cond.true:                                        ; preds = %if.then
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %9, i64 0, i32 0, !dbg !5211
  br label %cond.end, !dbg !5211

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %if.then ], !dbg !5211
  %call = tail call fastcc i32 @VEC_eh_region_base_length(%struct.VEC_eh_region_base* %cond) #7, !dbg !5211
  %conv10 = zext i32 %call to i64, !dbg !5211
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv10) #7, !dbg !5212
  call void @llvm.dbg.value(metadata i32 0, metadata !5184, metadata !DIExpression()), !dbg !5213
  br label %for.cond, !dbg !5214

for.cond:                                         ; preds = %for.body, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.body ], !dbg !5216
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5184, metadata !DIExpression()), !dbg !5213
  %10 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5217
  %region_array12 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %10, i64 0, i32 1, !dbg !5217
  %11 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array12, align 8, !dbg !5217
  %tobool13 = icmp eq %struct.VEC_eh_region_gc* %11, null, !dbg !5217
  br i1 %tobool13, label %cond.end19, label %cond.true14, !dbg !5217

cond.true14:                                      ; preds = %for.cond
  %base17 = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %11, i64 0, i32 0, !dbg !5217
  br label %cond.end19, !dbg !5217

cond.end19:                                       ; preds = %for.cond, %cond.true14
  %cond20 = phi %struct.VEC_eh_region_base* [ %base17, %cond.true14 ], [ null, %for.cond ], !dbg !5217
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %eh3, metadata !5187, metadata !DIExpression(DW_OP_deref)), !dbg !5213
  %call21 = call fastcc i32 @VEC_eh_region_base_iterate(%struct.VEC_eh_region_base* %cond20, i32 %i.0, %struct.eh_region_d** nonnull %eh3) #7, !dbg !5217
  %tobool22 = icmp eq i32 %call21, 0, !dbg !5219
  br i1 %tobool22, label %for.end, label %for.body, !dbg !5219

for.body:                                         ; preds = %cond.end19
  %12 = load %struct.eh_region_d*, %struct.eh_region_d** %eh3, align 8, !dbg !5220
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %12, metadata !5187, metadata !DIExpression()), !dbg !5213
  call fastcc void @output_eh_region(%struct.output_block* %ob, %struct.eh_region_d* %12) #7, !dbg !5221
  %inc = add i32 %i.0, 1, !dbg !5222
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5184, metadata !DIExpression()), !dbg !5213
  br label %for.cond, !dbg !5223, !llvm.loop !5224

for.end:                                          ; preds = %cond.end19
  %13 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5226
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %13, i64 0, i32 2, !dbg !5226
  %14 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !5226
  %tobool24 = icmp eq %struct.VEC_eh_landing_pad_gc* %14, null, !dbg !5226
  br i1 %tobool24, label %cond.end30, label %cond.true25, !dbg !5226

cond.true25:                                      ; preds = %for.end
  %base28 = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %14, i64 0, i32 0, !dbg !5226
  br label %cond.end30, !dbg !5226

cond.end30:                                       ; preds = %for.end, %cond.true25
  %cond31 = phi %struct.VEC_eh_landing_pad_base* [ %base28, %cond.true25 ], [ null, %for.end ], !dbg !5226
  %call32 = call fastcc i32 @VEC_eh_landing_pad_base_length(%struct.VEC_eh_landing_pad_base* %cond31) #7, !dbg !5226
  %conv33 = zext i32 %call32 to i64, !dbg !5226
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv33) #7, !dbg !5227
  call void @llvm.dbg.value(metadata i32 0, metadata !5184, metadata !DIExpression()), !dbg !5213
  br label %for.cond34, !dbg !5228

for.cond34:                                       ; preds = %for.body47, %cond.end30
  %i.1 = phi i32 [ 0, %cond.end30 ], [ %inc49, %for.body47 ], !dbg !5230
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5184, metadata !DIExpression()), !dbg !5213
  %15 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5231
  %lp_array36 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %15, i64 0, i32 2, !dbg !5231
  %16 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array36, align 8, !dbg !5231
  %tobool37 = icmp eq %struct.VEC_eh_landing_pad_gc* %16, null, !dbg !5231
  br i1 %tobool37, label %cond.end43, label %cond.true38, !dbg !5231

cond.true38:                                      ; preds = %for.cond34
  %base41 = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %16, i64 0, i32 0, !dbg !5231
  br label %cond.end43, !dbg !5231

cond.end43:                                       ; preds = %for.cond34, %cond.true38
  %cond44 = phi %struct.VEC_eh_landing_pad_base* [ %base41, %cond.true38 ], [ null, %for.cond34 ], !dbg !5231
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !5188, metadata !DIExpression(DW_OP_deref)), !dbg !5213
  %call45 = call fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %cond44, i32 %i.1, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !5231
  %tobool46 = icmp eq i32 %call45, 0, !dbg !5233
  br i1 %tobool46, label %for.end50, label %for.body47, !dbg !5233

for.body47:                                       ; preds = %cond.end43
  %17 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !5234
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %17, metadata !5188, metadata !DIExpression()), !dbg !5213
  call fastcc void @output_eh_lp(%struct.output_block* %ob, %struct.eh_landing_pad_d* %17) #7, !dbg !5235
  %inc49 = add i32 %i.1, 1, !dbg !5236
  call void @llvm.dbg.value(metadata i32 %inc49, metadata !5184, metadata !DIExpression()), !dbg !5213
  br label %for.cond34, !dbg !5237, !llvm.loop !5238

for.end50:                                        ; preds = %cond.end43
  %18 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5240
  %ttype_data = getelementptr inbounds %struct.eh_status, %struct.eh_status* %18, i64 0, i32 4, !dbg !5240
  %19 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ttype_data, align 8, !dbg !5240
  %tobool52 = icmp eq %struct.VEC_tree_gc* %19, null, !dbg !5240
  br i1 %tobool52, label %cond.end58, label %cond.true53, !dbg !5240

cond.true53:                                      ; preds = %for.end50
  %base56 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %19, i64 0, i32 0, !dbg !5240
  br label %cond.end58, !dbg !5240

cond.end58:                                       ; preds = %for.end50, %cond.true53
  %cond59 = phi %struct.VEC_tree_base* [ %base56, %cond.true53 ], [ null, %for.end50 ], !dbg !5240
  %call60 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond59) #7, !dbg !5240
  %conv61 = zext i32 %call60 to i64, !dbg !5240
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv61) #7, !dbg !5241
  call void @llvm.dbg.value(metadata i32 0, metadata !5184, metadata !DIExpression()), !dbg !5213
  br label %for.cond62, !dbg !5242

for.cond62:                                       ; preds = %for.body75, %cond.end58
  %i.2 = phi i32 [ 0, %cond.end58 ], [ %inc77, %for.body75 ], !dbg !5244
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !5184, metadata !DIExpression()), !dbg !5213
  %20 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5245
  %ttype_data64 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %20, i64 0, i32 4, !dbg !5245
  %21 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ttype_data64, align 8, !dbg !5245
  %tobool65 = icmp eq %struct.VEC_tree_gc* %21, null, !dbg !5245
  br i1 %tobool65, label %cond.end71, label %cond.true66, !dbg !5245

cond.true66:                                      ; preds = %for.cond62
  %base69 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %21, i64 0, i32 0, !dbg !5245
  br label %cond.end71, !dbg !5245

cond.end71:                                       ; preds = %for.cond62, %cond.true66
  %cond72 = phi %struct.VEC_tree_base* [ %base69, %cond.true66 ], [ null, %for.cond62 ], !dbg !5245
  call void @llvm.dbg.value(metadata %union.tree_node** %ttype, metadata !5189, metadata !DIExpression(DW_OP_deref)), !dbg !5213
  %call73 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond72, i32 %i.2, %union.tree_node** nonnull %ttype) #7, !dbg !5245
  %tobool74 = icmp eq i32 %call73, 0, !dbg !5247
  br i1 %tobool74, label %for.end78, label %for.body75, !dbg !5247

for.body75:                                       ; preds = %cond.end71
  %22 = load %union.tree_node*, %union.tree_node** %ttype, align 8, !dbg !5248
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !5189, metadata !DIExpression()), !dbg !5213
  call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %22) #7, !dbg !5249
  %inc77 = add i32 %i.2, 1, !dbg !5250
  call void @llvm.dbg.value(metadata i32 %inc77, metadata !5184, metadata !DIExpression()), !dbg !5213
  br label %for.cond62, !dbg !5251, !llvm.loop !5252

for.end78:                                        ; preds = %cond.end71
  %23 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 120), align 1, !dbg !5254
  %tobool79 = icmp eq i8 %23, 0, !dbg !5255
  br i1 %tobool79, label %if.else, label %if.then80, !dbg !5256

if.then80:                                        ; preds = %for.end78
  %24 = bitcast %union.tree_node** %t to i8*, !dbg !5257
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8, !dbg !5257
  %25 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5258
  %arm_eabi = getelementptr inbounds %struct.eh_status, %struct.eh_status* %25, i64 0, i32 5, i32 0, !dbg !5258
  %26 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %arm_eabi, align 8, !dbg !5258
  %tobool82 = icmp eq %struct.VEC_tree_gc* %26, null, !dbg !5258
  br i1 %tobool82, label %cond.end89, label %cond.true83, !dbg !5258

cond.true83:                                      ; preds = %if.then80
  %base87 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %26, i64 0, i32 0, !dbg !5258
  br label %cond.end89, !dbg !5258

cond.end89:                                       ; preds = %if.then80, %cond.true83
  %cond90 = phi %struct.VEC_tree_base* [ %base87, %cond.true83 ], [ null, %if.then80 ], !dbg !5258
  %call91 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond90) #7, !dbg !5258
  %conv92 = zext i32 %call91 to i64, !dbg !5258
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv92) #7, !dbg !5259
  call void @llvm.dbg.value(metadata i32 0, metadata !5184, metadata !DIExpression()), !dbg !5213
  br label %for.cond93, !dbg !5260

for.cond93:                                       ; preds = %for.body108, %cond.end89
  %i.3 = phi i32 [ 0, %cond.end89 ], [ %inc110, %for.body108 ], !dbg !5262
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !5184, metadata !DIExpression()), !dbg !5213
  %27 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5263
  %arm_eabi96 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %27, i64 0, i32 5, i32 0, !dbg !5263
  %28 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %arm_eabi96, align 8, !dbg !5263
  %tobool97 = icmp eq %struct.VEC_tree_gc* %28, null, !dbg !5263
  br i1 %tobool97, label %cond.end104, label %cond.true98, !dbg !5263

cond.true98:                                      ; preds = %for.cond93
  %base102 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %28, i64 0, i32 0, !dbg !5263
  br label %cond.end104, !dbg !5263

cond.end104:                                      ; preds = %for.cond93, %cond.true98
  %cond105 = phi %struct.VEC_tree_base* [ %base102, %cond.true98 ], [ null, %for.cond93 ], !dbg !5263
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !5190, metadata !DIExpression(DW_OP_deref)), !dbg !5265
  %call106 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond105, i32 %i.3, %union.tree_node** nonnull %t) #7, !dbg !5263
  %tobool107 = icmp eq i32 %call106, 0, !dbg !5266
  br i1 %tobool107, label %for.end111, label %for.body108, !dbg !5266

for.body108:                                      ; preds = %cond.end104
  %29 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !5267
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !5190, metadata !DIExpression()), !dbg !5265
  call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %29) #7, !dbg !5268
  %inc110 = add i32 %i.3, 1, !dbg !5269
  call void @llvm.dbg.value(metadata i32 %inc110, metadata !5184, metadata !DIExpression()), !dbg !5213
  br label %for.cond93, !dbg !5270, !llvm.loop !5271

for.end111:                                       ; preds = %cond.end104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8, !dbg !5273
  br label %if.end, !dbg !5274

if.else:                                          ; preds = %for.end78
  call void @llvm.dbg.value(metadata i8* %c, metadata !5193, metadata !DIExpression(DW_OP_deref)), !dbg !5275
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %c) #8, !dbg !5276
  %30 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5277
  %ehspec_data113 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %30, i64 0, i32 5, !dbg !5277
  %other = bitcast %union.eh_status_u* %ehspec_data113 to %struct.VEC_uchar_gc**, !dbg !5277
  %31 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** %other, align 8, !dbg !5277
  %tobool114 = icmp eq %struct.VEC_uchar_gc* %31, null, !dbg !5277
  br i1 %tobool114, label %cond.end121, label %cond.true115, !dbg !5277

cond.true115:                                     ; preds = %if.else
  %base119 = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %31, i64 0, i32 0, !dbg !5277
  br label %cond.end121, !dbg !5277

cond.end121:                                      ; preds = %if.else, %cond.true115
  %cond122 = phi %struct.VEC_uchar_base* [ %base119, %cond.true115 ], [ null, %if.else ], !dbg !5277
  %call123 = call fastcc i32 @VEC_uchar_base_length(%struct.VEC_uchar_base* %cond122) #7, !dbg !5277
  %conv124 = zext i32 %call123 to i64, !dbg !5277
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv124) #7, !dbg !5278
  call void @llvm.dbg.value(metadata i32 0, metadata !5184, metadata !DIExpression()), !dbg !5213
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !5279
  br label %for.cond125, !dbg !5282

for.cond125:                                      ; preds = %for.body140, %cond.end121
  %i.4 = phi i32 [ 0, %cond.end121 ], [ %inc142, %for.body140 ], !dbg !5283
  call void @llvm.dbg.value(metadata i32 %i.4, metadata !5184, metadata !DIExpression()), !dbg !5213
  %32 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5284
  %ehspec_data127 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %32, i64 0, i32 5, !dbg !5284
  %other128 = bitcast %union.eh_status_u* %ehspec_data127 to %struct.VEC_uchar_gc**, !dbg !5284
  %33 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** %other128, align 8, !dbg !5284
  %tobool129 = icmp eq %struct.VEC_uchar_gc* %33, null, !dbg !5284
  br i1 %tobool129, label %cond.end136, label %cond.true130, !dbg !5284

cond.true130:                                     ; preds = %for.cond125
  %base134 = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %33, i64 0, i32 0, !dbg !5284
  br label %cond.end136, !dbg !5284

cond.end136:                                      ; preds = %for.cond125, %cond.true130
  %cond137 = phi %struct.VEC_uchar_base* [ %base134, %cond.true130 ], [ null, %for.cond125 ], !dbg !5284
  call void @llvm.dbg.value(metadata i8* %c, metadata !5193, metadata !DIExpression(DW_OP_deref)), !dbg !5275
  %call138 = call fastcc i32 @VEC_uchar_base_iterate(%struct.VEC_uchar_base* %cond137, i32 %i.4, i8* nonnull %c) #7, !dbg !5284
  %tobool139 = icmp eq i32 %call138, 0, !dbg !5285
  br i1 %tobool139, label %for.end143, label %for.body140, !dbg !5285

for.body140:                                      ; preds = %cond.end136
  %34 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !5286
  %35 = load i8, i8* %c, align 1, !dbg !5287
  call void @llvm.dbg.value(metadata i8 %35, metadata !5193, metadata !DIExpression()), !dbg !5275
  call void @lto_output_1_stream(%struct.lto_output_stream* %34, i8 signext %35) #6, !dbg !5288
  %inc142 = add i32 %i.4, 1, !dbg !5289
  call void @llvm.dbg.value(metadata i32 %inc142, metadata !5184, metadata !DIExpression()), !dbg !5213
  br label %for.cond125, !dbg !5290, !llvm.loop !5291

for.end143:                                       ; preds = %cond.end136
  call void @llvm.dbg.value(metadata i8* %c, metadata !5193, metadata !DIExpression(DW_OP_deref)), !dbg !5275
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %c) #8, !dbg !5293
  br label %if.end

if.end:                                           ; preds = %for.end143, %for.end111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5294
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5294
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5294
  br label %if.end144, !dbg !5295

if.end144:                                        ; preds = %land.lhs.true, %entry, %if.end
  call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5296
  ret void, !dbg !5297
}

declare dso_local void @renumber_gimple_stmt_uids() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_bb(%struct.output_block* %ob, %struct.basic_block_def* %bb, %struct.function* %fn) unnamed_addr #5 !dbg !5298 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp17 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !5302, metadata !DIExpression()), !dbg !5323
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5303, metadata !DIExpression()), !dbg !5323
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !5304, metadata !DIExpression()), !dbg !5323
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !5324
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5324
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5305, metadata !DIExpression(DW_OP_deref)), !dbg !5323
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %bsi, %struct.basic_block_def* %bb) #7, !dbg !5325
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5305, metadata !DIExpression(DW_OP_deref)), !dbg !5323
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !5326
  %tobool = icmp eq i8 %call, 0, !dbg !5326
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !5327

lor.rhs:                                          ; preds = %entry
  %call1 = call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %bb) #7, !dbg !5328
  %tobool2 = icmp eq %struct.gimple_seq_d* %call1, null, !dbg !5327
  %phitmp = select i1 %tobool2, i32 224, i32 225, !dbg !5327
  br label %lor.end, !dbg !5327

lor.end:                                          ; preds = %entry, %lor.rhs
  %1 = phi i32 [ 225, %entry ], [ %phitmp, %lor.rhs ]
  call fastcc void @output_record_start(%struct.output_block* %ob, i32 %1) #7, !dbg !5329
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5330
  %2 = load i32, i32* %index, align 8, !dbg !5330
  %conv = sext i32 %2 to i64, !dbg !5331
  call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !5332
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 8, !dbg !5333
  %3 = load i64, i64* %count, align 8, !dbg !5333
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %3) #7, !dbg !5334
  %loop_depth = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 10, !dbg !5335
  %4 = load i32, i32* %loop_depth, align 4, !dbg !5335
  %conv3 = sext i32 %4 to i64, !dbg !5336
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv3) #7, !dbg !5337
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 11, !dbg !5338
  %5 = load i32, i32* %frequency, align 8, !dbg !5338
  %conv4 = sext i32 %5 to i64, !dbg !5339
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv4) #7, !dbg !5340
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !5341
  %6 = load i32, i32* %flags, align 8, !dbg !5341
  %conv5 = sext i32 %6 to i64, !dbg !5342
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv5) #7, !dbg !5343
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5305, metadata !DIExpression(DW_OP_deref)), !dbg !5323
  %call6 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !5344
  %tobool7 = icmp eq i8 %call6, 0, !dbg !5344
  br i1 %tobool7, label %if.then, label %lor.lhs.false, !dbg !5345

lor.lhs.false:                                    ; preds = %lor.end
  %call8 = call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %bb) #7, !dbg !5346
  %tobool9 = icmp eq %struct.gimple_seq_d* %call8, null, !dbg !5346
  br i1 %tobool9, label %if.end31, label %if.then, !dbg !5347

if.then:                                          ; preds = %lor.lhs.false, %lor.end
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5348
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !5348
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !5348
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !5348
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !5348
  br label %for.cond, !dbg !5349

for.cond:                                         ; preds = %for.inc, %if.then
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5305, metadata !DIExpression(DW_OP_deref)), !dbg !5323
  %call10 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !5350
  %tobool11 = icmp eq i8 %call10, 0, !dbg !5351
  br i1 %tobool11, label %for.body, label %for.end, !dbg !5352

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5305, metadata !DIExpression(DW_OP_deref)), !dbg !5323
  %call12 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !5353
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !5318, metadata !DIExpression()), !dbg !5354
  call fastcc void @output_gimple_stmt(%struct.output_block* %ob, %union.gimple_statement_d* %call12) #7, !dbg !5355
  %call13 = call i32 @lookup_stmt_eh_lp_fn(%struct.function* %fn, %union.gimple_statement_d* %call12) #6, !dbg !5356
  call void @llvm.dbg.value(metadata i32 %call13, metadata !5312, metadata !DIExpression()), !dbg !5354
  %cmp = icmp eq i32 %call13, 0, !dbg !5357
  br i1 %cmp, label %if.else, label %if.then15, !dbg !5359

if.then15:                                        ; preds = %for.body
  call fastcc void @output_record_start(%struct.output_block* %ob, i32 226) #7, !dbg !5360
  %conv16 = sext i32 %call13 to i64, !dbg !5362
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv16) #7, !dbg !5363
  br label %for.inc, !dbg !5364

if.else:                                          ; preds = %for.body
  call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5365
  br label %for.inc

for.inc:                                          ; preds = %if.then15, %if.else
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5305, metadata !DIExpression(DW_OP_deref)), !dbg !5323
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !5366
  br label %for.cond, !dbg !5367, !llvm.loop !5368

for.end:                                          ; preds = %for.cond
  call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5370
  %8 = bitcast %struct.gimple_stmt_iterator* %tmp17 to i8*, !dbg !5371
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !5371
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp17, %struct.basic_block_def* %bb) #6, !dbg !5371
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !5371
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !5371
  br label %for.cond18, !dbg !5372

for.cond18:                                       ; preds = %for.inc29, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5305, metadata !DIExpression(DW_OP_deref)), !dbg !5323
  %call19 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !5373
  %tobool20 = icmp eq i8 %call19, 0, !dbg !5374
  br i1 %tobool20, label %for.body22, label %for.end30, !dbg !5375

for.body22:                                       ; preds = %for.cond18
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5305, metadata !DIExpression(DW_OP_deref)), !dbg !5323
  %call23 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !5376
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call23, metadata !5319, metadata !DIExpression()), !dbg !5377
  %call24 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call23) #7, !dbg !5378
  %call25 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call24) #6, !dbg !5380
  %tobool26 = icmp eq i8 %call25, 0, !dbg !5380
  br i1 %tobool26, label %for.inc29, label %if.then27, !dbg !5381

if.then27:                                        ; preds = %for.body22
  call fastcc void @output_phi(%struct.output_block* %ob, %union.gimple_statement_d* %call23) #7, !dbg !5382
  br label %for.inc29, !dbg !5382

for.inc29:                                        ; preds = %for.body22, %if.then27
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5305, metadata !DIExpression(DW_OP_deref)), !dbg !5323
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !5383
  br label %for.cond18, !dbg !5384, !llvm.loop !5385

for.end30:                                        ; preds = %for.cond18
  call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5387
  br label %if.end31, !dbg !5388

if.end31:                                         ; preds = %lor.lhs.false, %for.end30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5389
  ret void, !dbg !5389
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_cfg(%struct.output_block* %ob, %struct.function* %fn) unnamed_addr #5 !dbg !5390 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !5392, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !5393, metadata !DIExpression()), !dbg !5407
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !5408
  %0 = bitcast %struct.lto_output_stream** %main_stream to i64*, !dbg !5408
  %1 = load i64, i64* %0, align 8, !dbg !5408
  %cfg_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 4, !dbg !5409
  %2 = bitcast %struct.lto_output_stream** %cfg_stream to i64*, !dbg !5409
  %3 = load i64, i64* %2, align 8, !dbg !5409
  store i64 %3, i64* %0, align 8, !dbg !5410
  %cfg = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 1, !dbg !5411
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5411
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 7, !dbg !5411
  %5 = load i32, i32* %x_profile_status, align 8, !dbg !5411
  %conv = zext i32 %5 to i64, !dbg !5411
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !5412
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5413
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 5, !dbg !5413
  %7 = load i32, i32* %x_last_basic_block, align 8, !dbg !5413
  %conv3 = sext i32 %7 to i64, !dbg !5413
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv3) #7, !dbg !5414
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5415
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 0, !dbg !5415
  %9 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5416
  %10 = bitcast %struct.edge_def** %e to i8*, !dbg !5416
  %11 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5417
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5417
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5417
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5419
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5419
  br label %for.cond, !dbg !5415

for.cond:                                         ; preds = %for.end, %entry
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %entry ], [ %next_bb, %for.end ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5421
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5395, metadata !DIExpression()), !dbg !5407
  %tobool = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !5415
  br i1 %tobool, label %for.end20, label %for.body, !dbg !5415

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8, !dbg !5422
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8, !dbg !5423
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !5424
  %16 = load i32, i32* %index, align 8, !dbg !5424
  %conv5 = sext i32 %16 to i64, !dbg !5425
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv5) #7, !dbg !5426
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !5427
  %17 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5427
  %tobool6 = icmp eq %struct.VEC_edge_gc* %17, null, !dbg !5427
  br i1 %tobool6, label %cond.end, label %cond.true, !dbg !5427

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %17, i64 0, i32 0, !dbg !5427
  br label %cond.end, !dbg !5427

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !5427
  %call = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5427
  %conv8 = zext i32 %call to i64, !dbg !5427
  call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv8) #7, !dbg !5428
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8, !dbg !5429
  %call10 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !5429
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call10, 0, !dbg !5429
  store i32 %18, i32* %12, align 8, !dbg !5429
  %19 = extractvalue { i32, %struct.VEC_edge_gc** } %call10, 1, !dbg !5429
  store %struct.VEC_edge_gc** %19, %struct.VEC_edge_gc*** %13, align 8, !dbg !5429
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %11, i64 16, i1 false), !dbg !5429
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8, !dbg !5429
  br label %for.cond11, !dbg !5429

for.cond11:                                       ; preds = %for.body14, %cond.end
  %20 = load i32, i32* %14, align 8, !dbg !5430
  %21 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %15, align 8, !dbg !5430
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5406, metadata !DIExpression(DW_OP_deref)), !dbg !5416
  %call12 = call fastcc zeroext i8 @ei_cond(i32 %20, %struct.VEC_edge_gc** %21, %struct.edge_def** nonnull %e) #7, !dbg !5430
  %tobool13 = icmp eq i8 %call12, 0, !dbg !5429
  br i1 %tobool13, label %for.end, label %for.body14, !dbg !5429

for.body14:                                       ; preds = %for.cond11
  %22 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5431
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !5406, metadata !DIExpression()), !dbg !5416
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i64 0, i32 1, !dbg !5433
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5433
  %index15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 9, !dbg !5434
  %24 = load i32, i32* %index15, align 8, !dbg !5434
  %conv16 = sext i32 %24 to i64, !dbg !5431
  call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv16) #7, !dbg !5435
  %25 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5436
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !5406, metadata !DIExpression()), !dbg !5416
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %25, i64 0, i32 8, !dbg !5437
  %26 = load i32, i32* %probability, align 4, !dbg !5437
  %conv17 = sext i32 %26 to i64, !dbg !5436
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv17) #7, !dbg !5438
  %27 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5439
  call void @llvm.dbg.value(metadata %struct.edge_def* %27, metadata !5406, metadata !DIExpression()), !dbg !5416
  %count = getelementptr inbounds %struct.edge_def, %struct.edge_def* %27, i64 0, i32 9, !dbg !5440
  %28 = load i64, i64* %count, align 8, !dbg !5440
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %28) #7, !dbg !5441
  %29 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5442
  call void @llvm.dbg.value(metadata %struct.edge_def* %29, metadata !5406, metadata !DIExpression()), !dbg !5416
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %29, i64 0, i32 7, !dbg !5443
  %30 = load i32, i32* %flags, align 8, !dbg !5443
  %conv18 = sext i32 %30 to i64, !dbg !5442
  call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv18) #7, !dbg !5444
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5396, metadata !DIExpression(DW_OP_deref)), !dbg !5416
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5430
  br label %for.cond11, !dbg !5430, !llvm.loop !5445

for.end:                                          ; preds = %for.cond11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8, !dbg !5447
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8, !dbg !5447
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !5448
  br label %for.cond, !dbg !5448, !llvm.loop !5449

for.end20:                                        ; preds = %for.cond
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 -1) #7, !dbg !5451
  %31 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5452
  %cfg21 = getelementptr inbounds %struct.function, %struct.function* %31, i64 0, i32 1, !dbg !5452
  %32 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg21, align 8, !dbg !5452
  %x_entry_block_ptr22 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %32, i64 0, i32 0, !dbg !5452
  br label %while.cond, !dbg !5453

while.cond:                                       ; preds = %while.body, %for.end20
  %bb.1.in = phi %struct.basic_block_def** [ %x_entry_block_ptr22, %for.end20 ], [ %next_bb23, %while.body ]
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !5407
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !5395, metadata !DIExpression()), !dbg !5407
  %next_bb23 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 6, !dbg !5454
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb23, align 8, !dbg !5454
  %tobool24 = icmp eq %struct.basic_block_def* %33, null, !dbg !5453
  br i1 %tobool24, label %while.end, label %while.body, !dbg !5453

while.body:                                       ; preds = %while.cond
  %index26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i64 0, i32 9, !dbg !5455
  %34 = load i32, i32* %index26, align 8, !dbg !5455
  %conv27 = sext i32 %34 to i64, !dbg !5457
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv27) #7, !dbg !5458
  br label %while.cond, !dbg !5453, !llvm.loop !5459

while.end:                                        ; preds = %while.cond
  call fastcc void @output_sleb128(%struct.output_block* %ob, i64 -1) #7, !dbg !5461
  store i64 %1, i64* %0, align 8, !dbg !5462
  ret void, !dbg !5463
}

declare dso_local void @pop_cfun() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5464 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5468, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5469, metadata !DIExpression()), !dbg !5470
  br label %land.end, !dbg !5471

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5471
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5471
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5471
  ret %union.tree_node* %0, !dbg !5471
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_region_base_length(%struct.VEC_eh_region_base* %vec_) unnamed_addr #0 !dbg !5472 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !5478, metadata !DIExpression()), !dbg !5479
  %tobool = icmp eq %struct.VEC_eh_region_base* %vec_, null, !dbg !5480
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5480

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 0, !dbg !5480
  %0 = load i32, i32* %num, align 8, !dbg !5480
  br label %cond.end, !dbg !5480

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5480
  ret i32 %cond, !dbg !5480
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_region_base_iterate(%struct.VEC_eh_region_base* %vec_, i32 %ix_, %struct.eh_region_d** %ptr) unnamed_addr #0 !dbg !5481 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !5486, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5487, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %ptr, metadata !5488, metadata !DIExpression()), !dbg !5489
  %tobool = icmp eq %struct.VEC_eh_region_base* %vec_, null, !dbg !5490
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5490

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 0, !dbg !5490
  %0 = load i32, i32* %num, align 8, !dbg !5490
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5490
  br i1 %cmp, label %if.then, label %if.else, !dbg !5492

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5493
  %arrayidx = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5493
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %arrayidx, align 8, !dbg !5493
  br label %return, !dbg !5493

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5495

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.eh_region_d* [ null, %if.else ], [ %1, %if.then ], !dbg !5497
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5497
  store %struct.eh_region_d* %storemerge, %struct.eh_region_d** %ptr, align 8, !dbg !5497
  ret i32 %retval.0, !dbg !5492
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_eh_region(%struct.output_block* %ob, %struct.eh_region_d* %r) unnamed_addr #5 !dbg !5498 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !5502, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r, metadata !5503, metadata !DIExpression()), !dbg !5505
  %cmp = icmp eq %struct.eh_region_d* %r, null, !dbg !5506
  br i1 %cmp, label %if.then, label %if.end, !dbg !5508

if.then:                                          ; preds = %entry
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5509
  br label %cleanup.cont, !dbg !5511

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 4, !dbg !5512
  %0 = load i32, i32* %type, align 4, !dbg !5512
  %cmp1 = icmp eq i32 %0, 0, !dbg !5514
  br i1 %cmp1, label %if.end18, label %if.else, !dbg !5515

if.else:                                          ; preds = %if.end
  %cmp4 = icmp eq i32 %0, 1, !dbg !5516
  br i1 %cmp4, label %if.end18, label %if.else6, !dbg !5518

if.else6:                                         ; preds = %if.else
  %cmp8 = icmp eq i32 %0, 2, !dbg !5519
  br i1 %cmp8, label %if.end18, label %if.else10, !dbg !5521

if.else10:                                        ; preds = %if.else6
  %cmp12 = icmp eq i32 %0, 3, !dbg !5522
  br i1 %cmp12, label %if.end18, label %if.else14, !dbg !5524

if.else14:                                        ; preds = %if.else10
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 1415, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5525
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.else14, %if.else10, %if.else6, %if.end
  %tag.3 = phi i32 [ 230, %if.end ], [ 231, %if.else ], [ 232, %if.else6 ], [ 233, %if.else10 ], [ 233, %if.else14 ], !dbg !5526
  call void @llvm.dbg.value(metadata i32 %tag.3, metadata !5504, metadata !DIExpression()), !dbg !5505
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 %tag.3) #7, !dbg !5527
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 3, !dbg !5528
  %1 = load i32, i32* %index, align 8, !dbg !5528
  %conv = sext i32 %1 to i64, !dbg !5529
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !5530
  %outer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 0, !dbg !5531
  %2 = load %struct.eh_region_d*, %struct.eh_region_d** %outer, align 8, !dbg !5531
  %tobool = icmp eq %struct.eh_region_d* %2, null, !dbg !5533
  br i1 %tobool, label %if.else23, label %if.then19, !dbg !5534

if.then19:                                        ; preds = %if.end18
  %index21 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %2, i64 0, i32 3, !dbg !5535
  %3 = load i32, i32* %index21, align 8, !dbg !5535
  %conv22 = sext i32 %3 to i64, !dbg !5536
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv22) #7, !dbg !5537
  br label %if.end24, !dbg !5537

if.else23:                                        ; preds = %if.end18
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5538
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then19
  %inner = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 1, !dbg !5539
  %4 = load %struct.eh_region_d*, %struct.eh_region_d** %inner, align 8, !dbg !5539
  %tobool25 = icmp eq %struct.eh_region_d* %4, null, !dbg !5541
  br i1 %tobool25, label %if.else30, label %if.then26, !dbg !5542

if.then26:                                        ; preds = %if.end24
  %index28 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %4, i64 0, i32 3, !dbg !5543
  %5 = load i32, i32* %index28, align 8, !dbg !5543
  %conv29 = sext i32 %5 to i64, !dbg !5544
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv29) #7, !dbg !5545
  br label %if.end31, !dbg !5545

if.else30:                                        ; preds = %if.end24
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5546
  br label %if.end31

if.end31:                                         ; preds = %if.else30, %if.then26
  %next_peer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 2, !dbg !5547
  %6 = load %struct.eh_region_d*, %struct.eh_region_d** %next_peer, align 8, !dbg !5547
  %tobool32 = icmp eq %struct.eh_region_d* %6, null, !dbg !5549
  br i1 %tobool32, label %if.else37, label %if.then33, !dbg !5550

if.then33:                                        ; preds = %if.end31
  %index35 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %6, i64 0, i32 3, !dbg !5551
  %7 = load i32, i32* %index35, align 8, !dbg !5551
  %conv36 = sext i32 %7 to i64, !dbg !5552
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv36) #7, !dbg !5553
  br label %if.end38, !dbg !5553

if.else37:                                        ; preds = %if.end31
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5554
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then33
  %8 = load i32, i32* %type, align 4, !dbg !5555
  %cmp40 = icmp eq i32 %8, 1, !dbg !5557
  br i1 %cmp40, label %if.then42, label %if.else43, !dbg !5558

if.then42:                                        ; preds = %if.end38
  %u = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 5, !dbg !5559
  %first_catch = bitcast %union.eh_region_u* %u to %struct.eh_catch_d**, !dbg !5561
  %9 = load %struct.eh_catch_d*, %struct.eh_catch_d** %first_catch, align 8, !dbg !5561
  tail call fastcc void @output_eh_try_list(%struct.output_block* %ob, %struct.eh_catch_d* %9) #7, !dbg !5562
  br label %if.end64, !dbg !5563

if.else43:                                        ; preds = %if.end38
  %cmp45 = icmp eq i32 %8, 2, !dbg !5564
  br i1 %cmp45, label %if.then47, label %if.else54, !dbg !5566

if.then47:                                        ; preds = %if.else43
  %type_list = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 5, i32 0, i32 0, !dbg !5567
  %10 = load %union.tree_node*, %union.tree_node** %type_list, align 8, !dbg !5567
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %10) #7, !dbg !5569
  %label = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 5, i32 0, i32 1, !dbg !5570
  %11 = load %union.tree_node*, %union.tree_node** %label, align 8, !dbg !5570
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %11) #7, !dbg !5571
  %filter = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 5, i32 0, i32 2, !dbg !5572
  %12 = load i32, i32* %filter, align 8, !dbg !5572
  %conv53 = sext i32 %12 to i64, !dbg !5573
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv53) #7, !dbg !5574
  br label %if.end64, !dbg !5575

if.else54:                                        ; preds = %if.else43
  %cmp56 = icmp eq i32 %8, 3, !dbg !5576
  br i1 %cmp56, label %if.then58, label %if.end64, !dbg !5578

if.then58:                                        ; preds = %if.else54
  %failure_decl = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 5, i32 0, i32 0, !dbg !5579
  %13 = load %union.tree_node*, %union.tree_node** %failure_decl, align 8, !dbg !5579
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %13) #7, !dbg !5581
  %failure_loc = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 5, i32 0, i32 1, !dbg !5582
  %14 = bitcast %union.tree_node** %failure_loc to i32*, !dbg !5582
  %15 = load i32, i32* %14, align 8, !dbg !5582
  tail call fastcc void @lto_output_location(%struct.output_block* %ob, i32 %15) #7, !dbg !5583
  br label %if.end64, !dbg !5584

if.end64:                                         ; preds = %if.then47, %if.then58, %if.else54, %if.then42
  %landing_pads = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 6, !dbg !5585
  %16 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %landing_pads, align 8, !dbg !5585
  %tobool65 = icmp eq %struct.eh_landing_pad_d* %16, null, !dbg !5587
  br i1 %tobool65, label %if.else70, label %if.then66, !dbg !5588

if.then66:                                        ; preds = %if.end64
  %index68 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %16, i64 0, i32 4, !dbg !5589
  %17 = load i32, i32* %index68, align 8, !dbg !5589
  %conv69 = sext i32 %17 to i64, !dbg !5590
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv69) #7, !dbg !5591
  br label %cleanup.cont, !dbg !5591

if.else70:                                        ; preds = %if.end64
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5592
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then, %if.else70, %if.then66
  ret void, !dbg !5593
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_base_length(%struct.VEC_eh_landing_pad_base* %vec_) unnamed_addr #0 !dbg !5594 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !5600, metadata !DIExpression()), !dbg !5601
  %tobool = icmp eq %struct.VEC_eh_landing_pad_base* %vec_, null, !dbg !5602
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5602

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 0, !dbg !5602
  %0 = load i32, i32* %num, align 8, !dbg !5602
  br label %cond.end, !dbg !5602

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5602
  ret i32 %cond, !dbg !5602
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %vec_, i32 %ix_, %struct.eh_landing_pad_d** %ptr) unnamed_addr #0 !dbg !5603 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !5608, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5609, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %ptr, metadata !5610, metadata !DIExpression()), !dbg !5611
  %tobool = icmp eq %struct.VEC_eh_landing_pad_base* %vec_, null, !dbg !5612
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5612

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 0, !dbg !5612
  %0 = load i32, i32* %num, align 8, !dbg !5612
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5612
  br i1 %cmp, label %if.then, label %if.else, !dbg !5614

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5615
  %arrayidx = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5615
  %1 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !5615
  br label %return, !dbg !5615

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5617

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.eh_landing_pad_d* [ null, %if.else ], [ %1, %if.then ], !dbg !5619
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5619
  store %struct.eh_landing_pad_d* %storemerge, %struct.eh_landing_pad_d** %ptr, align 8, !dbg !5619
  ret i32 %retval.0, !dbg !5614
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_eh_lp(%struct.output_block* %ob, %struct.eh_landing_pad_d* %lp) unnamed_addr #5 !dbg !5620 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !5624, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp, metadata !5625, metadata !DIExpression()), !dbg !5626
  %cmp = icmp eq %struct.eh_landing_pad_d* %lp, null, !dbg !5627
  br i1 %cmp, label %if.then, label %if.end, !dbg !5629

if.then:                                          ; preds = %entry
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5630
  br label %return, !dbg !5632

if.end:                                           ; preds = %entry
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 234) #7, !dbg !5633
  %index = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 4, !dbg !5634
  %0 = load i32, i32* %index, align 8, !dbg !5634
  %conv = sext i32 %0 to i64, !dbg !5635
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !5636
  %next_lp = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 0, !dbg !5637
  %1 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %next_lp, align 8, !dbg !5637
  %tobool = icmp eq %struct.eh_landing_pad_d* %1, null, !dbg !5639
  br i1 %tobool, label %if.else, label %if.then1, !dbg !5640

if.then1:                                         ; preds = %if.end
  %index3 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %1, i64 0, i32 4, !dbg !5641
  %2 = load i32, i32* %index3, align 8, !dbg !5641
  %conv4 = sext i32 %2 to i64, !dbg !5642
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv4) #7, !dbg !5643
  br label %if.end5, !dbg !5643

if.else:                                          ; preds = %if.end
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5644
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then1
  %region = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 1, !dbg !5645
  %3 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !5645
  %tobool6 = icmp eq %struct.eh_region_d* %3, null, !dbg !5647
  br i1 %tobool6, label %if.else11, label %if.then7, !dbg !5648

if.then7:                                         ; preds = %if.end5
  %index9 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %3, i64 0, i32 3, !dbg !5649
  %4 = load i32, i32* %index9, align 8, !dbg !5649
  %conv10 = sext i32 %4 to i64, !dbg !5650
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv10) #7, !dbg !5651
  br label %if.end12, !dbg !5651

if.else11:                                        ; preds = %if.end5
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5652
  br label %if.end12

if.end12:                                         ; preds = %if.else11, %if.then7
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 2, !dbg !5653
  %5 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !5653
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %5) #7, !dbg !5654
  br label %return, !dbg !5655

return:                                           ; preds = %if.end12, %if.then
  ret void, !dbg !5655
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_uchar_base_length(%struct.VEC_uchar_base* %vec_) unnamed_addr #0 !dbg !5656 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_base* %vec_, metadata !5662, metadata !DIExpression()), !dbg !5663
  %tobool = icmp eq %struct.VEC_uchar_base* %vec_, null, !dbg !5664
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5664

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 0, !dbg !5664
  %0 = load i32, i32* %num, align 4, !dbg !5664
  br label %cond.end, !dbg !5664

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5664
  ret i32 %cond, !dbg !5664
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_uchar_base_iterate(%struct.VEC_uchar_base* %vec_, i32 %ix_, i8* %ptr) unnamed_addr #0 !dbg !5665 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_base* %vec_, metadata !5670, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5671, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !5672, metadata !DIExpression()), !dbg !5673
  %tobool = icmp eq %struct.VEC_uchar_base* %vec_, null, !dbg !5674
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5674

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 0, !dbg !5674
  %0 = load i32, i32* %num, align 4, !dbg !5674
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5674
  br i1 %cmp, label %if.then, label %if.else, !dbg !5676

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5677
  %arrayidx = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5677
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5677
  br label %return, !dbg !5677

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5679

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i8 [ 0, %if.else ], [ %1, %if.then ], !dbg !5681
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5681
  store i8 %storemerge, i8* %ptr, align 1, !dbg !5681
  ret i32 %retval.0, !dbg !5676
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_eh_try_list(%struct.output_block* %ob, %struct.eh_catch_d* %first) unnamed_addr #5 !dbg !5682 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !5687, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %first, metadata !5688, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %first, metadata !5689, metadata !DIExpression()), !dbg !5690
  br label %for.cond, !dbg !5691

for.cond:                                         ; preds = %for.body, %entry
  %n.0 = phi %struct.eh_catch_d* [ %first, %entry ], [ %3, %for.body ], !dbg !5693
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %n.0, metadata !5689, metadata !DIExpression()), !dbg !5690
  %tobool = icmp eq %struct.eh_catch_d* %n.0, null, !dbg !5694
  br i1 %tobool, label %for.end, label %for.body, !dbg !5694

for.body:                                         ; preds = %for.cond
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 235) #7, !dbg !5695
  %type_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %n.0, i64 0, i32 2, !dbg !5698
  %0 = load %union.tree_node*, %union.tree_node** %type_list, align 8, !dbg !5698
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %0) #7, !dbg !5699
  %filter_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %n.0, i64 0, i32 3, !dbg !5700
  %1 = load %union.tree_node*, %union.tree_node** %filter_list, align 8, !dbg !5700
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %1) #7, !dbg !5701
  %label = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %n.0, i64 0, i32 4, !dbg !5702
  %2 = load %union.tree_node*, %union.tree_node** %label, align 8, !dbg !5702
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %2) #7, !dbg !5703
  %next_catch = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %n.0, i64 0, i32 0, !dbg !5704
  %3 = load %struct.eh_catch_d*, %struct.eh_catch_d** %next_catch, align 8, !dbg !5704
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %3, metadata !5689, metadata !DIExpression()), !dbg !5690
  br label %for.cond, !dbg !5705, !llvm.loop !5706

for.end:                                          ; preds = %for.cond
  tail call fastcc void @output_zero(%struct.output_block* %ob) #7, !dbg !5708
  ret void, !dbg !5709
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5710 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5714, metadata !DIExpression()), !dbg !5717
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5715, metadata !DIExpression()), !dbg !5718
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !5719
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !5716, metadata !DIExpression()), !dbg !5717
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !5720
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !5721
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5722
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !5723
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !5724
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !5725
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !5726
  ret void, !dbg !5727
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5728 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5732, metadata !DIExpression()), !dbg !5733
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5734
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5734
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !5735
  %conv1 = zext i1 %cmp to i8, !dbg !5736
  ret i8 %conv1, !dbg !5737
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5738 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5746, metadata !DIExpression()), !dbg !5747
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !5748
  %0 = load i32, i32* %flags, align 8, !dbg !5748
  %and = and i32 %0, 512, !dbg !5748
  %tobool = icmp eq i32 %and, 0, !dbg !5748
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5748

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32 510, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5748
  br label %cond.end, !dbg !5748

cond.end:                                         ; preds = %entry, %cond.true
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !5749
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !5749
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !5751
  br i1 %tobool1, label %return, label %if.end, !dbg !5752

if.end:                                           ; preds = %cond.end
  %phi_nodes = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 1, !dbg !5753
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %phi_nodes, align 8, !dbg !5753
  br label %return, !dbg !5754

return:                                           ; preds = %cond.end, %if.end
  %retval.0 = phi %struct.gimple_seq_d* [ %2, %if.end ], [ null, %cond.end ], !dbg !5747
  ret %struct.gimple_seq_d* %retval.0, !dbg !5755
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5756 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5760, metadata !DIExpression()), !dbg !5761
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5762
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5762
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !5763
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5763
  ret %union.gimple_statement_d* %1, !dbg !5764
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_gimple_stmt(%struct.output_block* %ob, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5765 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !5769, metadata !DIExpression()), !dbg !5780
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5770, metadata !DIExpression()), !dbg !5780
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5781
  call void @llvm.dbg.value(metadata i32 %call, metadata !5772, metadata !DIExpression()), !dbg !5780
  %call1 = tail call fastcc i32 @lto_gimple_code_to_tag(i32 %call) #7, !dbg !5782
  call void @llvm.dbg.value(metadata i32 %call1, metadata !5773, metadata !DIExpression()), !dbg !5780
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 %call1) #7, !dbg !5783
  %call2 = tail call %struct.bitpack_d* @bitpack_create() #6, !dbg !5784
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %call2, metadata !5774, metadata !DIExpression()), !dbg !5780
  %call3 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5785
  %conv = zext i32 %call3 to i64, !dbg !5785
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv, i32 32) #6, !dbg !5786
  %call4 = tail call fastcc zeroext i8 @gimple_no_warning_p(%union.gimple_statement_d* %stmt) #7, !dbg !5787
  %conv5 = zext i8 %call4 to i64, !dbg !5787
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv5, i32 1) #6, !dbg !5788
  %call6 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !5789
  %tobool = icmp eq i8 %call6, 0, !dbg !5789
  br i1 %tobool, label %if.end, label %if.then, !dbg !5791

if.then:                                          ; preds = %entry
  %call7 = tail call fastcc zeroext i8 @gimple_assign_nontemporal_move_p(%union.gimple_statement_d* %stmt) #7, !dbg !5792
  %conv8 = zext i8 %call7 to i64, !dbg !5792
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv8, i32 1) #6, !dbg !5793
  br label %if.end, !dbg !5793

if.end:                                           ; preds = %entry, %if.then
  %call9 = tail call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5794
  %conv10 = zext i8 %call9 to i64, !dbg !5794
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv10, i32 1) #6, !dbg !5795
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5796
  %bf.load = load i32, i32* %0, align 8, !dbg !5796
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5796
  %conv11 = zext i32 %bf.lshr to i64, !dbg !5797
  tail call void @bp_pack_value(%struct.bitpack_d* %call2, i64 %conv11, i32 16) #6, !dbg !5798
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 2, !dbg !5799
  %1 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !5799
  tail call void @lto_output_bitpack(%struct.lto_output_stream* %1, %struct.bitpack_d* %call2) #7, !dbg !5800
  tail call void @bitpack_delete(%struct.bitpack_d* %call2) #6, !dbg !5801
  %call12 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #7, !dbg !5802
  tail call fastcc void @lto_output_location(%struct.output_block* %ob, i32 %call12) #7, !dbg !5803
  %call13 = tail call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %stmt) #7, !dbg !5804
  tail call void @lto_output_tree(%struct.output_block* %ob, %union.tree_node* %call13, i8 zeroext 1) #7, !dbg !5805
  %call14 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5806
  switch i32 %call14, label %sw.default [
    i32 14, label %sw.bb
    i32 13, label %sw.bb17
    i32 15, label %sw.bb19
    i32 7, label %sw.bb22
    i32 6, label %sw.bb34
    i32 8, label %sw.bb34
    i32 9, label %sw.bb34
    i32 5, label %sw.bb34
    i32 4, label %sw.bb34
    i32 1, label %sw.bb34
    i32 3, label %sw.bb34
    i32 2, label %sw.bb34
    i32 18, label %sw.epilog
    i32 33, label %sw.epilog
  ], !dbg !5807

sw.bb:                                            ; preds = %if.end
  %call15 = tail call fastcc i32 @gimple_resx_region(%union.gimple_statement_d* %stmt) #7, !dbg !5808
  %conv16 = sext i32 %call15 to i64, !dbg !5808
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv16) #7, !dbg !5809
  br label %sw.epilog, !dbg !5810

sw.bb17:                                          ; preds = %if.end
  %call18 = tail call fastcc %union.tree_node* @gimple_eh_must_not_throw_fndecl(%union.gimple_statement_d* %stmt) #7, !dbg !5811
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %call18) #7, !dbg !5812
  br label %sw.epilog, !dbg !5813

sw.bb19:                                          ; preds = %if.end
  %call20 = tail call fastcc i32 @gimple_eh_dispatch_region(%union.gimple_statement_d* %stmt) #7, !dbg !5814
  %conv21 = sext i32 %call20 to i64, !dbg !5814
  tail call fastcc void @output_sleb128(%struct.output_block* %ob, i64 %conv21) #7, !dbg !5815
  br label %sw.epilog, !dbg !5816

sw.bb22:                                          ; preds = %if.end
  %2 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !5817
  %call24 = tail call fastcc i32 @gimple_asm_ninputs(%union.gimple_statement_d* %stmt) #7, !dbg !5818
  %conv25 = zext i32 %call24 to i64, !dbg !5818
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %2, i64 %conv25) #6, !dbg !5819
  %3 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !5820
  %call27 = tail call fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %stmt) #7, !dbg !5821
  %conv28 = zext i32 %call27 to i64, !dbg !5821
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %3, i64 %conv28) #6, !dbg !5822
  %4 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !5823
  %call30 = tail call fastcc i32 @gimple_asm_nclobbers(%union.gimple_statement_d* %stmt) #7, !dbg !5824
  %conv31 = zext i32 %call30 to i64, !dbg !5824
  tail call void @lto_output_uleb128_stream(%struct.lto_output_stream* %4, i64 %conv31) #6, !dbg !5825
  %5 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !5826
  %call33 = tail call fastcc i8* @gimple_asm_string(%union.gimple_statement_d* %stmt) #7, !dbg !5827
  tail call fastcc void @output_string(%struct.output_block* %ob, %struct.lto_output_stream* %5, i8* %call33) #7, !dbg !5828
  br label %sw.bb34, !dbg !5828

sw.bb34:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb22
  call void @llvm.dbg.value(metadata i32 0, metadata !5771, metadata !DIExpression()), !dbg !5780
  br label %for.cond, !dbg !5829

for.cond:                                         ; preds = %for.body, %sw.bb34
  %i.0 = phi i32 [ 0, %sw.bb34 ], [ %inc, %for.body ], !dbg !5830
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5771, metadata !DIExpression()), !dbg !5780
  %call35 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5831
  %cmp = icmp ult i32 %i.0, %call35, !dbg !5832
  br i1 %cmp, label %for.body, label %sw.epilog.loopexit, !dbg !5833

for.body:                                         ; preds = %for.cond
  %call37 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %stmt, i32 %i.0) #7, !dbg !5834
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !5775, metadata !DIExpression()), !dbg !5835
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %call37) #7, !dbg !5836
  %inc = add i32 %i.0, 1, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5771, metadata !DIExpression()), !dbg !5780
  br label %for.cond, !dbg !5838, !llvm.loop !5839

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 1711, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5841
  br label %sw.epilog, !dbg !5842

sw.epilog.loopexit:                               ; preds = %for.cond
  br label %sw.epilog, !dbg !5843

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %if.end, %if.end, %sw.default, %sw.bb19, %sw.bb17, %sw.bb
  ret void, !dbg !5843
}

declare dso_local i32 @lookup_stmt_eh_lp_fn(%struct.function*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !5844 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5849, metadata !DIExpression()), !dbg !5850
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5851
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5851
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !5852
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !5852
  %2 = load i64, i64* %1, align 8, !dbg !5852
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !5853
  store i64 %2, i64* %3, align 8, !dbg !5853
  ret void, !dbg !5854
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5855 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5860, metadata !DIExpression()), !dbg !5861
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !5862
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !5862
  ret %union.tree_node* %0, !dbg !5863
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_phi(%struct.output_block* %ob, %union.gimple_statement_d* %phi) unnamed_addr #5 !dbg !5864 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !5866, metadata !DIExpression()), !dbg !5870
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !5867, metadata !DIExpression()), !dbg !5870
  %call = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !5871
  call void @llvm.dbg.value(metadata i32 %call, metadata !5869, metadata !DIExpression()), !dbg !5870
  %call1 = tail call fastcc i32 @lto_gimple_code_to_tag(i32 16) #7, !dbg !5872
  tail call fastcc void @output_record_start(%struct.output_block* %ob, i32 %call1) #7, !dbg !5873
  %call2 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !5874
  %call3 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call2) #7, !dbg !5874
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5874
  %0 = bitcast %union.tree_node** %version to i32*, !dbg !5874
  %1 = load i32, i32* %0, align 8, !dbg !5874
  %conv = zext i32 %1 to i64, !dbg !5874
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv) #7, !dbg !5875
  call void @llvm.dbg.value(metadata i32 0, metadata !5868, metadata !DIExpression()), !dbg !5870
  %wide.trip.count = zext i32 %call to i64, !dbg !5876
  br label %for.cond, !dbg !5879

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !5880
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5868, metadata !DIExpression()), !dbg !5870
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !5876
  br i1 %exitcond, label %for.end, label %for.body, !dbg !5881

for.body:                                         ; preds = %for.cond
  %call6 = tail call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %phi, i64 %indvars.iv) #7, !dbg !5882
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %ob, %union.tree_node* %call6) #7, !dbg !5884
  %call8 = tail call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %phi, i64 %indvars.iv) #7, !dbg !5885
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call8, i64 0, i32 0, !dbg !5886
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5886
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 9, !dbg !5887
  %3 = load i32, i32* %index, align 8, !dbg !5887
  %conv9 = sext i32 %3 to i64, !dbg !5885
  tail call fastcc void @output_uleb128(%struct.output_block* %ob, i64 %conv9) #7, !dbg !5888
  %call11 = tail call fastcc i32 @gimple_phi_arg_location(%union.gimple_statement_d* %phi, i64 %indvars.iv) #7, !dbg !5889
  tail call fastcc void @lto_output_location(%struct.output_block* %ob, i32 %call11) #7, !dbg !5890
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5891
  br label %for.cond, !dbg !5892, !llvm.loop !5893

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5895
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5896 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5898, metadata !DIExpression()), !dbg !5899
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !5900
  %0 = load i32, i32* %flags, align 8, !dbg !5900
  %and = and i32 %0, 512, !dbg !5901
  %tobool = icmp eq i32 %and, 0, !dbg !5901
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !5902

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !5903
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !5903
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !5904
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5905

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !5906
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !5906
  br label %cond.end, !dbg !5905

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !5905
  ret %struct.gimple_seq_d* %cond, !dbg !5907
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !5908 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !5915, metadata !DIExpression()), !dbg !5916
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !5917
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5917

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !5918
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !5918
  br label %cond.end, !dbg !5917

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !5917
  ret %struct.gimple_seq_node_d* %cond, !dbg !5919
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5920 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5924, metadata !DIExpression()), !dbg !5925
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !5926
  %bf.load = load i32, i32* %0, align 8, !dbg !5926
  %bf.clear = and i32 %bf.load, 255, !dbg !5926
  ret i32 %bf.clear, !dbg !5927
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @lto_gimple_code_to_tag(i32 %code) unnamed_addr #0 !dbg !5928 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5932, metadata !DIExpression()), !dbg !5933
  %add1 = add i32 %code, 189, !dbg !5934
  ret i32 %add1, !dbg !5935
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5936 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5940, metadata !DIExpression()), !dbg !5941
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !5942
  %0 = load i32, i32* %num_ops, align 4, !dbg !5942
  ret i32 %0, !dbg !5943
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_no_warning_p(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5944 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5948, metadata !DIExpression()), !dbg !5949
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5950
  %bf.load = load i32, i32* %0, align 8, !dbg !5950
  %bf.lshr = lshr i32 %bf.load, 8, !dbg !5950
  %1 = trunc i32 %bf.lshr to i8, !dbg !5951
  %conv = and i8 %1, 1, !dbg !5951
  ret i8 %conv, !dbg !5952
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5953 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5955, metadata !DIExpression()), !dbg !5956
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !5957
  %cmp = icmp eq i32 %call, 6, !dbg !5958
  %conv1 = zext i1 %cmp to i8, !dbg !5957
  ret i8 %conv1, !dbg !5959
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_assign_nontemporal_move_p(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5960 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5962, metadata !DIExpression()), !dbg !5963
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !5964
  %bf.load = load i32, i32* %0, align 8, !dbg !5964
  %bf.lshr = lshr i32 %bf.load, 10, !dbg !5964
  %1 = trunc i32 %bf.lshr to i8, !dbg !5965
  %conv = and i8 %1, 1, !dbg !5965
  ret i8 %conv, !dbg !5966
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5967 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5969, metadata !DIExpression()), !dbg !5970
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5971
  %tobool = icmp eq i8 %call, 0, !dbg !5971
  br i1 %tobool, label %return, label %if.then, !dbg !5973

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5974
  %bf.load = load i32, i32* %0, align 8, !dbg !5974
  %bf.lshr = lshr i32 %bf.load, 14, !dbg !5974
  %1 = trunc i32 %bf.lshr to i8, !dbg !5975
  %conv = and i8 %1, 1, !dbg !5975
  br label %return, !dbg !5976

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv, %if.then ], [ 0, %entry ], !dbg !5977
  ret i8 %retval.0, !dbg !5978
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5979 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5983, metadata !DIExpression()), !dbg !5984
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !5985
  %0 = load i32, i32* %location, align 8, !dbg !5985
  ret i32 %0, !dbg !5986
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5987 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5989, metadata !DIExpression()), !dbg !5990
  %block = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 5, !dbg !5991
  %0 = load %union.tree_node*, %union.tree_node** %block, align 8, !dbg !5991
  ret %union.tree_node* %0, !dbg !5992
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_resx_region(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5993 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5997, metadata !DIExpression()), !dbg !5998
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !5999
  %1 = load i32, i32* %0, align 8, !dbg !5999
  ret i32 %1, !dbg !6000
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_eh_must_not_throw_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6001 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6005, metadata !DIExpression()), !dbg !6006
  %fndecl = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6007
  %0 = bitcast i32* %fndecl to %union.tree_node**, !dbg !6007
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6007
  ret %union.tree_node* %1, !dbg !6008
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_eh_dispatch_region(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6009 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6011, metadata !DIExpression()), !dbg !6012
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6013
  %1 = load i32, i32* %0, align 8, !dbg !6013
  ret i32 %1, !dbg !6014
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_ninputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6015 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6017, metadata !DIExpression()), !dbg !6018
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !6019
  %0 = bitcast %union.tree_node*** %ni to i8*, !dbg !6019
  %1 = load i8, i8* %0, align 8, !dbg !6019
  %conv = zext i8 %1 to i32, !dbg !6020
  ret i32 %conv, !dbg !6021
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6022 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6024, metadata !DIExpression()), !dbg !6025
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !6026
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !6027
  %0 = load i8, i8* %no, align 1, !dbg !6027
  %conv = zext i8 %0 to i32, !dbg !6028
  ret i32 %conv, !dbg !6029
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_nclobbers(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6030 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6032, metadata !DIExpression()), !dbg !6033
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !6034
  %nc = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 4, !dbg !6035
  %0 = load i8, i8* %nc, align 2, !dbg !6035
  %conv = zext i8 %0 to i32, !dbg !6036
  ret i32 %conv, !dbg !6037
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @gimple_asm_string(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6038 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6042, metadata !DIExpression()), !dbg !6043
  %string = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 2, !dbg !6044
  %0 = bitcast %union.anon* %string to i8**, !dbg !6044
  %1 = load i8*, i8** %0, align 8, !dbg !6044
  ret i8* %1, !dbg !6045
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !6046 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6050, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.value(metadata i32 %i, metadata !6051, metadata !DIExpression()), !dbg !6052
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !6053
  %tobool = icmp eq i8 %call, 0, !dbg !6053
  br i1 %tobool, label %return, label %if.then, !dbg !6055

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !6056
  %idxprom = zext i32 %i to i64, !dbg !6056
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !6056
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6056
  br label %return, !dbg !6058

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !6059
  ret %union.tree_node* %retval.0, !dbg !6060
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6061 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6063, metadata !DIExpression()), !dbg !6064
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6065
  %cmp = icmp ugt i32 %call, 5, !dbg !6066
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6067

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6068
  %cmp2 = icmp ult i32 %call1, 10, !dbg !6069
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6070
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6071 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6073, metadata !DIExpression()), !dbg !6074
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6075
  %cmp = icmp eq i32 %call, 0, !dbg !6076
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !6077

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6078
  %cmp2 = icmp ult i32 %call1, 10, !dbg !6079
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6080
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6081 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6085, metadata !DIExpression()), !dbg !6087
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !6088
  %idxprom = zext i32 %call to i64, !dbg !6089
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !6089
  %0 = load i64, i64* %arrayidx, align 8, !dbg !6089
  call void @llvm.dbg.value(metadata i64 %0, metadata !6086, metadata !DIExpression()), !dbg !6087
  %cmp = icmp eq i64 %0, 0, !dbg !6090
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6090

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6090
  br label %cond.end, !dbg !6090

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !6091
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !6092
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !6093
  ret %union.tree_node** %2, !dbg !6094
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6095 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6099, metadata !DIExpression()), !dbg !6100
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !6101
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !6102
  ret i32 %call1, !dbg !6103
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !6104 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6108, metadata !DIExpression()), !dbg !6109
  %idxprom = zext i32 %code to i64, !dbg !6110
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !6110
  %0 = load i32, i32* %arrayidx, align 4, !dbg !6110
  ret i32 %0, !dbg !6111
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6112 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6114, metadata !DIExpression()), !dbg !6115
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !6116
  %0 = load i32, i32* %nargs, align 4, !dbg !6116
  ret i32 %0, !dbg !6117
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !6118 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !6123, metadata !DIExpression()), !dbg !6124
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !6125
  ret %union.tree_node* %0, !dbg !6126
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6127 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6129, metadata !DIExpression()), !dbg !6130
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !6131
  ret %union.tree_node** %result, !dbg !6132
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %gs, i64 %index) unnamed_addr #0 !dbg !6133 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6137, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i64 %index, metadata !6138, metadata !DIExpression()), !dbg !6141
  %conv = trunc i64 %index to i32, !dbg !6142
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #7, !dbg !6143
  call void @llvm.dbg.value(metadata %struct.phi_arg_d* %call, metadata !6139, metadata !DIExpression()), !dbg !6141
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !6144
  %call1 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %imm_use) #7, !dbg !6145
  ret %union.tree_node* %call1, !dbg !6146
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !6147 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6151, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.value(metadata i64 %i, metadata !6152, metadata !DIExpression()), !dbg !6153
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !6154
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 0, !dbg !6154
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6154
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6154
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6154

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !6154
  %preds2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call1, i64 0, i32 0, !dbg !6154
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds2, align 8, !dbg !6154
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !6154
  br label %cond.end, !dbg !6154

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6154
  %conv = trunc i64 %i to i32, !dbg !6154
  %call3 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %conv) #7, !dbg !6154
  ret %struct.edge_def* %call3, !dbg !6155
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_arg_location(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !6156 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6160, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.value(metadata i64 %i, metadata !6161, metadata !DIExpression()), !dbg !6162
  %conv = trunc i64 %i to i32, !dbg !6163
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #7, !dbg !6164
  %locus = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 2, !dbg !6165
  %0 = load i32, i32* %locus, align 8, !dbg !6165
  ret i32 %0, !dbg !6166
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6167 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6171, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i32 %index, metadata !6172, metadata !DIExpression()), !dbg !6173
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6174
  %0 = load i32, i32* %capacity, align 8, !dbg !6174
  %cmp = icmp ult i32 %0, %index, !dbg !6174
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6174

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6174
  br label %cond.end, !dbg !6174

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !6175
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !6175
  ret %struct.phi_arg_d* %arrayidx, !dbg !6176
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !6177 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !6184, metadata !DIExpression()), !dbg !6185
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !6186
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !6186
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6187
  ret %union.tree_node* %1, !dbg !6188
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6189 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6195, metadata !DIExpression()), !dbg !6197
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6196, metadata !DIExpression()), !dbg !6197
  br label %land.end, !dbg !6198

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6198
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6198
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6198
  ret %struct.edge_def* %0, !dbg !6198
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6199 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6203, metadata !DIExpression()), !dbg !6204
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !6205
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6205
  ret %struct.basic_block_def* %0, !dbg !6206
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6207 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6211, metadata !DIExpression()), !dbg !6212
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6213
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6213

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6213
  %0 = load i32, i32* %num, align 8, !dbg !6213
  br label %cond.end, !dbg !6213

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6213
  ret i32 %cond, !dbg !6213
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !6214 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !6218, metadata !DIExpression()), !dbg !6220
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !6221
  store i32 0, i32* %index, align 8, !dbg !6222
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !6223
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !6224
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !6225
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !6225
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !6225
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !6226 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !6232, metadata !DIExpression()), !dbg !6233
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6234
  %tobool = icmp eq i8 %call, 0, !dbg !6234
  br i1 %tobool, label %if.then, label %if.else, !dbg !6236

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6237
  br label %return, !dbg !6239

if.else:                                          ; preds = %entry
  br label %return, !dbg !6240

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !6242
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !6242
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !6242
  ret i8 %retval.0, !dbg !6243
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !6244 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !6249, metadata !DIExpression()), !dbg !6250
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !6251
  %0 = load i32, i32* %index, align 8, !dbg !6251
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !6251
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !6251
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !6251
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6251
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6251

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !6251
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !6251
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !6251
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6251
  br label %cond.end, !dbg !6251

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6251
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6251
  %cmp = icmp ult i32 %0, %call2, !dbg !6251
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !6251

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6251
  br label %cond.end5, !dbg !6251

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !6252
  %inc = add i32 %5, 1, !dbg !6252
  store i32 %inc, i32* %index, align 8, !dbg !6252
  ret void, !dbg !6253
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6254 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6259
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6259
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6259

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6259
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6259
  br label %cond.end, !dbg !6259

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6259
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6259
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !6260
  %conv3 = zext i1 %cmp to i8, !dbg !6261
  ret i8 %conv3, !dbg !6262
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6263 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6268
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6268
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6268

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6268
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6268
  br label %cond.end, !dbg !6268

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6268
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !6268
  ret %struct.edge_def* %call2, !dbg !6269
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6270 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !6275
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6275

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6275
  br label %cond.end, !dbg !6275

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !6276
  ret %struct.VEC_edge_gc* %0, !dbg !6277
}

declare dso_local i8* @lto_get_decl_name_mapping(%struct.lto_file_decl_data*, i8*) local_unnamed_addr #2

declare dso_local i8* @lto_get_section_data(%struct.lto_file_decl_data*, i32, i8*, i64*) local_unnamed_addr #2

declare dso_local %struct.lto_in_decl_state* @lto_get_function_in_decl_state(%struct.lto_file_decl_data*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @lto_tree_ref_encoder_size(%struct.lto_tree_ref_encoder* %encoder) unnamed_addr #0 !dbg !6278 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_tree_ref_encoder* %encoder, metadata !6282, metadata !DIExpression()), !dbg !6283
  %trees = getelementptr inbounds %struct.lto_tree_ref_encoder, %struct.lto_tree_ref_encoder* %encoder, i64 0, i32 2, !dbg !6284
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %trees, align 8, !dbg !6284
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !6284
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6284

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6284
  br label %cond.end, !dbg !6284

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6284
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !6284
  ret i32 %call, !dbg !6285
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !6286 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !6291, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !6292, metadata !DIExpression()), !dbg !6293
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 1) #7, !dbg !6294
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !6294
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !6294
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6294

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6294
  br label %cond.end, !dbg !6294

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6294
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !6294
  ret %union.tree_node** %call1, !dbg !6294
}

declare dso_local void @lto_free_section_data(%struct.lto_file_decl_data*, i32, i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6295 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !6299, metadata !DIExpression()), !dbg !6302
  call void @llvm.dbg.value(metadata i32 1, metadata !6300, metadata !DIExpression()), !dbg !6302
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !6303
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !6303
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6303

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6303
  br label %cond.end, !dbg !6303

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6303
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #7, !dbg !6303
  %tobool1 = icmp eq i32 %call, 0, !dbg !6303
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6303
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6301, metadata !DIExpression()), !dbg !6302
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6303

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_heap** %vec_ to i8**, !dbg !6304
  %2 = load i8*, i8** %1, align 8, !dbg !6304
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !6304
  store i8* %call3, i8** %1, align 8, !dbg !6304
  br label %if.end, !dbg !6304

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6303
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !6306 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6311, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !6312, metadata !DIExpression()), !dbg !6314
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6315
  %0 = load i32, i32* %num1, align 8, !dbg !6315
  %inc = add i32 %0, 1, !dbg !6315
  store i32 %inc, i32* %num1, align 8, !dbg !6315
  %idxprom = zext i32 %0 to i64, !dbg !6315
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6315
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !6313, metadata !DIExpression()), !dbg !6314
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !6315
  ret %union.tree_node** %arrayidx, !dbg !6315
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6316 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6320, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i32 1, metadata !6321, metadata !DIExpression()), !dbg !6322
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !6323
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6323

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !6323
  %0 = load i32, i32* %alloc, align 4, !dbg !6323
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6323
  %1 = load i32, i32* %num, align 8, !dbg !6323
  %cmp1 = icmp ne i32 %0, %1, !dbg !6323
  %phitmp = zext i1 %cmp1 to i32, !dbg !6323
  br label %cond.end, !dbg !6323

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6323

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6323
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_unreferenced_globals(%struct.cgraph_node_set_def* %set) unnamed_addr #5 !dbg !6324 {
entry:
  %p = alloca %struct.alias_pair*, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_node_set_def* %set, metadata !6326, metadata !DIExpression()), !dbg !6344
  %0 = bitcast %struct.alias_pair** %p to i8*, !dbg !6345
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6345
  %call = tail call %struct.output_block* @create_output_block(i32 2) #7, !dbg !6346
  call void @llvm.dbg.value(metadata %struct.output_block* %call, metadata !6327, metadata !DIExpression()), !dbg !6344
  %cgraph_node = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 6, !dbg !6347
  store %struct.cgraph_node* null, %struct.cgraph_node** %cgraph_node, align 8, !dbg !6348
  tail call fastcc void @clear_line_info(%struct.output_block* %call) #7, !dbg !6349
  %string_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 3, !dbg !6350
  %1 = load %struct.lto_output_stream*, %struct.lto_output_stream** %string_stream, align 8, !dbg !6350
  tail call void @lto_output_1_stream(%struct.lto_output_stream* %1, i8 signext 0) #6, !dbg !6351
  %decl_state = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 1, !dbg !6352
  %main_stream = getelementptr inbounds %struct.output_block, %struct.output_block* %call, i64 0, i32 2, !dbg !6352
  br label %for.cond, !dbg !6356

for.cond:                                         ; preds = %for.inc15, %entry
  %vnode.0.in = phi %struct.varpool_node** [ @varpool_nodes_queue, %entry ], [ %next_needed, %for.inc15 ]
  %vnode.0 = load %struct.varpool_node*, %struct.varpool_node** %vnode.0.in, align 8, !dbg !6357
  call void @llvm.dbg.value(metadata %struct.varpool_node* %vnode.0, metadata !6336, metadata !DIExpression()), !dbg !6344
  %tobool = icmp eq %struct.varpool_node* %vnode.0, null, !dbg !6356
  br i1 %tobool, label %for.end16, label %for.body, !dbg !6356

for.body:                                         ; preds = %for.cond
  %decl = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %vnode.0, i64 0, i32 0, !dbg !6358
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6358
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6337, metadata !DIExpression()), !dbg !6359
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6360
  %bf.load = load i64, i64* %3, align 8, !dbg !6360
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6361
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !6361
  br i1 %cmp, label %if.then, label %for.inc15, !dbg !6362

if.then:                                          ; preds = %for.body
  tail call void @lto_output_tree(%struct.output_block* %call, %union.tree_node* %2, i8 zeroext 1) #7, !dbg !6363
  %bf.load2 = load i64, i64* %3, align 8, !dbg !6364
  %bf.cast42 = and i64 %bf.load2, 134217728, !dbg !6364
  %tobool5 = icmp eq i64 %bf.cast42, 0, !dbg !6364
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !6366

if.then6:                                         ; preds = %if.then
  tail call fastcc void @lto_output_tree_ref(%struct.output_block* %call, %union.tree_node* %2) #7, !dbg !6367
  br label %if.end, !dbg !6367

if.end:                                           ; preds = %if.then, %if.then6
  %extra_name = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %vnode.0, i64 0, i32 3, !dbg !6368
  br label %for.cond7, !dbg !6369

for.cond7:                                        ; preds = %for.body9, %if.end
  %alias.0.in = phi %struct.varpool_node** [ %extra_name, %if.end ], [ %next, %for.body9 ]
  %alias.0 = load %struct.varpool_node*, %struct.varpool_node** %alias.0.in, align 8, !dbg !6370
  call void @llvm.dbg.value(metadata %struct.varpool_node* %alias.0, metadata !6341, metadata !DIExpression()), !dbg !6371
  %tobool8 = icmp eq %struct.varpool_node* %alias.0, null, !dbg !6372
  br i1 %tobool8, label %for.inc15.loopexit, label %for.body9, !dbg !6372

for.body9:                                        ; preds = %for.cond7
  %decl10 = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %alias.0, i64 0, i32 0, !dbg !6373
  %4 = load %union.tree_node*, %union.tree_node** %decl10, align 8, !dbg !6373
  tail call void @lto_output_tree(%struct.output_block* %call, %union.tree_node* %4, i8 zeroext 1) #7, !dbg !6374
  tail call fastcc void @output_record_start(%struct.output_block* %call, i32 237) #7, !dbg !6375
  %5 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state, align 8, !dbg !6376
  %6 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !6377
  %7 = load %union.tree_node*, %union.tree_node** %decl10, align 8, !dbg !6378
  tail call void @lto_output_var_decl_index(%struct.lto_out_decl_state* %5, %struct.lto_output_stream* %6, %union.tree_node* %7) #6, !dbg !6379
  %8 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %decl_state, align 8, !dbg !6380
  %9 = load %struct.lto_output_stream*, %struct.lto_output_stream** %main_stream, align 8, !dbg !6381
  tail call void @lto_output_var_decl_index(%struct.lto_out_decl_state* %8, %struct.lto_output_stream* %9, %union.tree_node* %2) #6, !dbg !6382
  %next = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %alias.0, i64 0, i32 1, !dbg !6383
  br label %for.cond7, !dbg !6384, !llvm.loop !6385

for.inc15.loopexit:                               ; preds = %for.cond7
  br label %for.inc15, !dbg !6387

for.inc15:                                        ; preds = %for.inc15.loopexit, %for.body
  %next_needed = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %vnode.0, i64 0, i32 2, !dbg !6387
  br label %for.cond, !dbg !6387, !llvm.loop !6388

for.end16:                                        ; preds = %for.cond
  tail call fastcc void @output_zero(%struct.output_block* %call) #7, !dbg !6390
  call void @llvm.dbg.value(metadata i32 0, metadata !6335, metadata !DIExpression()), !dbg !6344
  br label %for.cond17, !dbg !6391

for.cond17:                                       ; preds = %for.inc28, %for.end16
  %i.0 = phi i32 [ 0, %for.end16 ], [ %inc, %for.inc28 ], !dbg !6393
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6335, metadata !DIExpression()), !dbg !6344
  %10 = load %struct.VEC_alias_pair_gc*, %struct.VEC_alias_pair_gc** @alias_pairs, align 8, !dbg !6394
  %base19 = getelementptr inbounds %struct.VEC_alias_pair_gc, %struct.VEC_alias_pair_gc* %10, i64 0, i32 0, !dbg !6394
  call void @llvm.dbg.value(metadata %struct.alias_pair** %p, metadata !6328, metadata !DIExpression(DW_OP_deref)), !dbg !6344
  %call20 = call fastcc i32 @VEC_alias_pair_base_iterate(%struct.VEC_alias_pair_base* %base19, i32 %i.0, %struct.alias_pair** nonnull %p) #7, !dbg !6394
  %tobool21 = icmp eq i32 %call20, 0, !dbg !6396
  br i1 %tobool21, label %for.end29, label %for.body22, !dbg !6396

for.body22:                                       ; preds = %for.cond17
  %11 = load %struct.alias_pair*, %struct.alias_pair** %p, align 8, !dbg !6397
  call void @llvm.dbg.value(metadata %struct.alias_pair* %11, metadata !6328, metadata !DIExpression()), !dbg !6344
  %call23 = call fastcc zeroext i8 @output_alias_pair_p(%struct.alias_pair* %11, %struct.cgraph_node_set_def* %set) #7, !dbg !6400
  %tobool24 = icmp eq i8 %call23, 0, !dbg !6400
  br i1 %tobool24, label %for.inc28, label %if.then25, !dbg !6401

if.then25:                                        ; preds = %for.body22
  %12 = load %struct.alias_pair*, %struct.alias_pair** %p, align 8, !dbg !6402
  call void @llvm.dbg.value(metadata %struct.alias_pair* %12, metadata !6328, metadata !DIExpression()), !dbg !6344
  %decl26 = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %12, i64 0, i32 0, !dbg !6404
  %13 = load %union.tree_node*, %union.tree_node** %decl26, align 8, !dbg !6404
  call fastcc void @lto_output_tree_ref(%struct.output_block* %call, %union.tree_node* %13) #7, !dbg !6405
  %14 = load %struct.alias_pair*, %struct.alias_pair** %p, align 8, !dbg !6406
  call void @llvm.dbg.value(metadata %struct.alias_pair* %14, metadata !6328, metadata !DIExpression()), !dbg !6344
  %target = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %14, i64 0, i32 1, !dbg !6407
  %15 = load %union.tree_node*, %union.tree_node** %target, align 8, !dbg !6407
  call fastcc void @lto_output_tree_ref(%struct.output_block* %call, %union.tree_node* %15) #7, !dbg !6408
  br label %for.inc28, !dbg !6409

for.inc28:                                        ; preds = %for.body22, %if.then25
  %inc = add i32 %i.0, 1, !dbg !6410
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6335, metadata !DIExpression()), !dbg !6344
  br label %for.cond17, !dbg !6411, !llvm.loop !6412

for.end29:                                        ; preds = %for.cond17
  call fastcc void @output_zero(%struct.output_block* %call) #7, !dbg !6414
  call void @produce_asm(%struct.output_block* %call, %union.tree_node* null) #7, !dbg !6415
  call void @destroy_output_block(%struct.output_block* %call) #7, !dbg !6416
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6417
  ret void, !dbg !6417
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_lto_out_decl_state_ptr_base_length(%struct.VEC_lto_out_decl_state_ptr_base* %vec_) unnamed_addr #0 !dbg !6418 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lto_out_decl_state_ptr_base* %vec_, metadata !6432, metadata !DIExpression()), !dbg !6433
  %tobool = icmp eq %struct.VEC_lto_out_decl_state_ptr_base* %vec_, null, !dbg !6434
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6434

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_lto_out_decl_state_ptr_base, %struct.VEC_lto_out_decl_state_ptr_base* %vec_, i64 0, i32 0, !dbg !6434
  %0 = load i32, i32* %num, align 8, !dbg !6434
  br label %cond.end, !dbg !6434

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6434
  ret i32 %cond, !dbg !6434
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_decl_state_streams(%struct.output_block* %ob, %struct.lto_out_decl_state* %state) unnamed_addr #5 !dbg !6435 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !6439, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.value(metadata %struct.lto_out_decl_state* %state, metadata !6440, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.value(metadata i32 0, metadata !6441, metadata !DIExpression()), !dbg !6442
  br label %for.cond, !dbg !6443

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !6445
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6441, metadata !DIExpression()), !dbg !6442
  %exitcond = icmp eq i64 %indvars.iv, 7, !dbg !6446
  br i1 %exitcond, label %for.end, label %for.body, !dbg !6448

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.lto_out_decl_state, %struct.lto_out_decl_state* %state, i64 0, i32 0, i64 %indvars.iv, !dbg !6449
  tail call fastcc void @write_global_stream(%struct.output_block* %ob, %struct.lto_tree_ref_encoder* %arrayidx) #7, !dbg !6450
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6451
  call void @llvm.dbg.value(metadata i32 undef, metadata !6441, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6442
  br label %for.cond, !dbg !6452, !llvm.loop !6453

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6455
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.lto_out_decl_state* @VEC_lto_out_decl_state_ptr_base_index(%struct.VEC_lto_out_decl_state_ptr_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6456 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lto_out_decl_state_ptr_base* %vec_, metadata !6460, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6461, metadata !DIExpression()), !dbg !6462
  br label %land.end, !dbg !6463

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6463
  %arrayidx = getelementptr inbounds %struct.VEC_lto_out_decl_state_ptr_base, %struct.VEC_lto_out_decl_state_ptr_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6463
  %0 = load %struct.lto_out_decl_state*, %struct.lto_out_decl_state** %arrayidx, align 8, !dbg !6463
  ret %struct.lto_out_decl_state* %0, !dbg !6463
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @lto_out_decl_state_written_size(%struct.lto_out_decl_state* %state) unnamed_addr #5 !dbg !6464 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_out_decl_state* %state, metadata !6468, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i64 4, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 0, metadata !6469, metadata !DIExpression()), !dbg !6471
  br label %for.cond, !dbg !6472

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !6474
  %size.0 = phi i64 [ %add1, %for.body ], [ 4, %entry ], !dbg !6471
  call void @llvm.dbg.value(metadata i64 %size.0, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6469, metadata !DIExpression()), !dbg !6471
  %exitcond = icmp eq i64 %indvars.iv, 7, !dbg !6475
  br i1 %exitcond, label %for.end, label %for.body, !dbg !6477

for.body:                                         ; preds = %for.cond
  %add = add i64 %size.0, 4, !dbg !6478
  call void @llvm.dbg.value(metadata i64 %add, metadata !6470, metadata !DIExpression()), !dbg !6471
  %arrayidx = getelementptr inbounds %struct.lto_out_decl_state, %struct.lto_out_decl_state* %state, i64 0, i32 0, i64 %indvars.iv, !dbg !6480
  %call = tail call fastcc i32 @lto_tree_ref_encoder_size(%struct.lto_tree_ref_encoder* %arrayidx) #7, !dbg !6481
  %conv = zext i32 %call to i64, !dbg !6481
  %mul = shl nuw nsw i64 %conv, 2, !dbg !6482
  %add1 = add i64 %add, %mul, !dbg !6483
  call void @llvm.dbg.value(metadata i64 %add1, metadata !6470, metadata !DIExpression()), !dbg !6471
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6484
  call void @llvm.dbg.value(metadata i32 undef, metadata !6469, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6471
  br label %for.cond, !dbg !6485, !llvm.loop !6486

for.end:                                          ; preds = %for.cond
  %size.0.lcssa = phi i64 [ %size.0, %for.cond ], !dbg !6471
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !6470, metadata !DIExpression()), !dbg !6471
  ret i64 %size.0.lcssa, !dbg !6488
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_output_decl_state_refs(%struct.output_block* %ob, %struct.lto_output_stream* %out_stream, %struct.lto_out_decl_state* %state) unnamed_addr #5 !dbg !6489 {
entry:
  %ref = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !6493, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %out_stream, metadata !6494, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %struct.lto_out_decl_state* %state, metadata !6495, metadata !DIExpression()), !dbg !6499
  %0 = bitcast i32* %ref to i8*, !dbg !6500
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6500
  %fn_decl = getelementptr inbounds %struct.lto_out_decl_state, %struct.lto_out_decl_state* %state, i64 0, i32 2, !dbg !6501
  %1 = load %union.tree_node*, %union.tree_node** %fn_decl, align 8, !dbg !6501
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !6502
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6502

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6502

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6502

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %union.tree_node** [ %fn_decl, %cond.true ], [ getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), %cond.false ]
  %cond = load %union.tree_node*, %union.tree_node** %cond.in, align 8, !dbg !6502
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !6498, metadata !DIExpression()), !dbg !6499
  %writer_cache = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 11, !dbg !6503
  %2 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %writer_cache, align 8, !dbg !6503
  call void @llvm.dbg.value(metadata i32* %ref, metadata !6497, metadata !DIExpression(DW_OP_deref)), !dbg !6499
  %call = call zeroext i8 @lto_streamer_cache_lookup(%struct.lto_streamer_cache_d* %2, %union.tree_node* %cond, i32* nonnull %ref) #6, !dbg !6504
  %3 = load i32, i32* %ref, align 4, !dbg !6505
  call void @llvm.dbg.value(metadata i32 %3, metadata !6497, metadata !DIExpression()), !dbg !6499
  %cmp = icmp sgt i32 %3, -1, !dbg !6505
  br i1 %cmp, label %cond.end4, label %cond.true2, !dbg !6505

cond.true2:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 2256, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6505
  br label %cond.end4, !dbg !6505

cond.end4:                                        ; preds = %cond.end, %cond.true2
  call void @lto_output_data_stream(%struct.lto_output_stream* %out_stream, i8* nonnull %0, i64 4) #6, !dbg !6506
  call void @llvm.dbg.value(metadata i32 0, metadata !6496, metadata !DIExpression()), !dbg !6499
  br label %for.cond, !dbg !6507

for.cond:                                         ; preds = %for.body, %cond.end4
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end4 ], !dbg !6509
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6496, metadata !DIExpression()), !dbg !6499
  %exitcond = icmp eq i64 %indvars.iv, 7, !dbg !6510
  br i1 %exitcond, label %for.end, label %for.body, !dbg !6512

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.lto_out_decl_state, %struct.lto_out_decl_state* %state, i64 0, i32 0, i64 %indvars.iv, !dbg !6513
  call fastcc void @write_global_references(%struct.output_block* %ob, %struct.lto_output_stream* %out_stream, %struct.lto_tree_ref_encoder* %arrayidx) #7, !dbg !6514
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6515
  call void @llvm.dbg.value(metadata i32 undef, metadata !6496, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6499
  br label %for.cond, !dbg !6516, !llvm.loop !6517

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6519
  ret void, !dbg !6519
}

; Function Attrs: nounwind uwtable
define internal fastcc void @produce_symtab(%struct.lto_streamer_cache_d* %cache) unnamed_addr #5 !dbg !6520 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_streamer_cache_d* %cache, metadata !6524, metadata !DIExpression()), !dbg !6527
  %call = tail call i8* @lto_get_section_name(i32 7, i8* null) #6, !dbg !6528
  call void @llvm.dbg.value(metadata i8* %call, metadata !6525, metadata !DIExpression()), !dbg !6527
  tail call void @lto_begin_section(i8* %call, i8 zeroext 0) #6, !dbg !6529
  tail call void @free(i8* %call) #6, !dbg !6530
  %call1 = tail call %struct.bitmap_head_def* @lto_bitmap_alloc() #6, !dbg !6531
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1, metadata !6526, metadata !DIExpression()), !dbg !6527
  tail call fastcc void @write_symbols_of_kind(i32 2, %struct.lto_streamer_cache_d* %cache, %struct.bitmap_head_def* %call1) #7, !dbg !6532
  tail call fastcc void @write_symbols_of_kind(i32 3, %struct.lto_streamer_cache_d* %cache, %struct.bitmap_head_def* %call1) #7, !dbg !6533
  tail call void @lto_bitmap_free(%struct.bitmap_head_def* %call1) #6, !dbg !6534
  tail call void @lto_end_section() #6, !dbg !6535
  ret void, !dbg !6536
}

declare dso_local void @lto_write_options() local_unnamed_addr #2

declare dso_local void @lto_cgraph_encoder_delete(%struct.lto_cgraph_encoder_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_lto_out_decl_state_ptr_heap_free(%struct.VEC_lto_out_decl_state_ptr_heap** %vec_) unnamed_addr #0 !dbg !6537 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lto_out_decl_state_ptr_heap** @lto_function_decl_states, metadata !6547, metadata !DIExpression()), !dbg !6548
  %0 = load %struct.VEC_lto_out_decl_state_ptr_heap*, %struct.VEC_lto_out_decl_state_ptr_heap** @lto_function_decl_states, align 8, !dbg !6549
  %tobool = icmp eq %struct.VEC_lto_out_decl_state_ptr_heap* %0, null, !dbg !6549
  br i1 %tobool, label %if.end, label %if.then, !dbg !6551

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_lto_out_decl_state_ptr_heap* %0 to i8*, !dbg !6551
  tail call void @free(i8* nonnull %1) #6, !dbg !6549
  br label %if.end, !dbg !6549

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_lto_out_decl_state_ptr_heap* null, %struct.VEC_lto_out_decl_state_ptr_heap** @lto_function_decl_states, align 8, !dbg !6551
  ret void, !dbg !6551
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alias_pair_base_iterate(%struct.VEC_alias_pair_base* %vec_, i32 %ix_, %struct.alias_pair** %ptr) unnamed_addr #0 !dbg !6552 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_base* %vec_, metadata !6565, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6566, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.value(metadata %struct.alias_pair** %ptr, metadata !6567, metadata !DIExpression()), !dbg !6568
  %tobool = icmp eq %struct.VEC_alias_pair_base* %vec_, null, !dbg !6569
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6569

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 0, !dbg !6569
  %0 = load i32, i32* %num, align 8, !dbg !6569
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6569
  br i1 %cmp, label %if.then, label %if.else, !dbg !6571

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6572
  %arrayidx = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6572
  br label %return, !dbg !6572

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6574

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.alias_pair* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !6576
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6576
  store %struct.alias_pair* %storemerge, %struct.alias_pair** %ptr, align 8, !dbg !6576
  ret i32 %retval.0, !dbg !6571
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @output_alias_pair_p(%struct.alias_pair* %p, %struct.cgraph_node_set_def* %set) unnamed_addr #5 !dbg !6577 {
entry:
  %csi = alloca %struct.cgraph_node_set_iterator, align 8
  %tmp = alloca %struct.cgraph_node_set_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.alias_pair* %p, metadata !6581, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata %struct.cgraph_node_set_def* %set, metadata !6582, metadata !DIExpression()), !dbg !6585
  %0 = bitcast %struct.cgraph_node_set_iterator* %csi to i8*, !dbg !6586
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6586
  %1 = bitcast %struct.alias_pair* %p to i64**, !dbg !6587
  %2 = load i64*, i64** %1, align 8, !dbg !6587
  %bf.load = load i64, i64* %2, align 8, !dbg !6587
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6589
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !6589
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6590

if.end:                                           ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast1, 29, !dbg !6591
  br i1 %cmp6, label %cond.end, label %cond.true, !dbg !6591

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 1944, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6591
  br label %cond.end, !dbg !6591

cond.end:                                         ; preds = %if.end, %cond.true
  %target = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %p, i64 0, i32 1, !dbg !6592
  %3 = load %union.tree_node*, %union.tree_node** %target, align 8, !dbg !6592
  %call = tail call %struct.cgraph_node* @cgraph_node_for_asm(%union.tree_node* %3) #6, !dbg !6593
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call, metadata !6584, metadata !DIExpression()), !dbg !6585
  %4 = bitcast %struct.cgraph_node_set_iterator* %tmp to i8*, !dbg !6594
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !6594
  %call7 = tail call { %struct.cgraph_node_set_def*, i32 } @cgraph_node_set_find(%struct.cgraph_node_set_def* %set, %struct.cgraph_node* %call) #6, !dbg !6594
  %5 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %tmp, i64 0, i32 0, !dbg !6594
  %6 = extractvalue { %struct.cgraph_node_set_def*, i32 } %call7, 0, !dbg !6594
  store %struct.cgraph_node_set_def* %6, %struct.cgraph_node_set_def** %5, align 8, !dbg !6594
  %7 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %tmp, i64 0, i32 1, !dbg !6594
  %8 = extractvalue { %struct.cgraph_node_set_def*, i32 } %call7, 1, !dbg !6594
  store i32 %8, i32* %7, align 8, !dbg !6594
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !6594
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !6594
  %9 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %csi, i64 0, i32 0, !dbg !6595
  %10 = load %struct.cgraph_node_set_def*, %struct.cgraph_node_set_def** %9, align 8, !dbg !6595
  %11 = getelementptr inbounds %struct.cgraph_node_set_iterator, %struct.cgraph_node_set_iterator* %csi, i64 0, i32 1, !dbg !6595
  %12 = load i32, i32* %11, align 8, !dbg !6595
  %call8 = tail call fastcc zeroext i8 @csi_end_p(%struct.cgraph_node_set_def* %10, i32 %12) #7, !dbg !6595
  %tobool = icmp eq i8 %call8, 0, !dbg !6596
  %conv = zext i1 %tobool to i8, !dbg !6597
  br label %cleanup, !dbg !6598

cleanup:                                          ; preds = %entry, %cond.end
  %retval.0 = phi i8 [ %conv, %cond.end ], [ 1, %entry ], !dbg !6585
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6599
  ret i8 %retval.0, !dbg !6599
}

declare dso_local %struct.cgraph_node* @cgraph_node_for_asm(%union.tree_node*) local_unnamed_addr #2

declare dso_local { %struct.cgraph_node_set_def*, i32 } @cgraph_node_set_find(%struct.cgraph_node_set_def*, %struct.cgraph_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @write_global_stream(%struct.output_block* %ob, %struct.lto_tree_ref_encoder* %encoder) unnamed_addr #5 !dbg !6600 {
entry:
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !6604, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata %struct.lto_tree_ref_encoder* %encoder, metadata !6605, metadata !DIExpression()), !dbg !6610
  %call = tail call fastcc i32 @lto_tree_ref_encoder_size(%struct.lto_tree_ref_encoder* %encoder) #7, !dbg !6611
  %conv = zext i32 %call to i64, !dbg !6611
  call void @llvm.dbg.value(metadata i64 %conv, metadata !6608, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i64 0, metadata !6607, metadata !DIExpression()), !dbg !6610
  %writer_cache = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 11, !dbg !6612
  br label %for.cond, !dbg !6617

for.cond:                                         ; preds = %for.inc, %entry
  %index.0 = phi i64 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6618
  call void @llvm.dbg.value(metadata i64 %index.0, metadata !6607, metadata !DIExpression()), !dbg !6610
  %exitcond = icmp eq i64 %index.0, %conv, !dbg !6619
  br i1 %exitcond, label %for.end, label %for.body, !dbg !6620

for.body:                                         ; preds = %for.cond
  %conv2 = trunc i64 %index.0 to i32, !dbg !6621
  %call3 = tail call fastcc %union.tree_node* @lto_tree_ref_encoder_get_tree(%struct.lto_tree_ref_encoder* %encoder, i32 %conv2) #7, !dbg !6622
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !6606, metadata !DIExpression()), !dbg !6610
  %0 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %writer_cache, align 8, !dbg !6623
  %call4 = tail call zeroext i8 @lto_streamer_cache_lookup(%struct.lto_streamer_cache_d* %0, %union.tree_node* %call3, i32* null) #6, !dbg !6624
  %tobool = icmp eq i8 %call4, 0, !dbg !6624
  br i1 %tobool, label %if.then, label %if.end, !dbg !6625

if.then:                                          ; preds = %for.body
  tail call void @lto_output_tree(%struct.output_block* %ob, %union.tree_node* %call3, i8 zeroext 0) #7, !dbg !6626
  br label %if.end, !dbg !6626

if.end:                                           ; preds = %for.body, %if.then
  %1 = load i32, i32* @flag_wpa, align 4, !dbg !6627
  %tobool5 = icmp eq i32 %1, 0, !dbg !6627
  br i1 %tobool5, label %for.inc, label %if.then6, !dbg !6629

if.then6:                                         ; preds = %if.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6630
  %bf.load = load i64, i64* %2, align 8, !dbg !6630
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6633
  %cmp7 = icmp eq i64 %bf.cast1, 32, !dbg !6633
  br i1 %cmp7, label %land.lhs.true, label %for.inc, !dbg !6634

land.lhs.true:                                    ; preds = %if.then6
  %bf.cast122 = and i64 %bf.load, 134217728, !dbg !6635
  %tobool13 = icmp eq i64 %bf.cast122, 0, !dbg !6635
  br i1 %tobool13, label %for.inc, label %land.lhs.true14, !dbg !6636

land.lhs.true14:                                  ; preds = %land.lhs.true
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6637
  %3 = bitcast i40* %decl_flag_1 to i64*, !dbg !6637
  %bf.load15 = load i64, i64* %3, align 8, !dbg !6637
  %bf.cast183 = and i64 %bf.load15, 33554432, !dbg !6637
  %tobool19 = icmp eq i64 %bf.cast183, 0, !dbg !6637
  br i1 %tobool19, label %if.then20, label %for.inc, !dbg !6638

if.then20:                                        ; preds = %land.lhs.true14
  %bf.set = or i64 %bf.load, 4194304, !dbg !6639
  store i64 %bf.set, i64* %2, align 8, !dbg !6639
  br label %for.inc, !dbg !6640

for.inc:                                          ; preds = %land.lhs.true14, %land.lhs.true, %if.end, %if.then20, %if.then6
  %inc = add nuw nsw i64 %index.0, 1, !dbg !6641
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6607, metadata !DIExpression()), !dbg !6610
  br label %for.cond, !dbg !6642, !llvm.loop !6643

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6645
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @lto_tree_ref_encoder_get_tree(%struct.lto_tree_ref_encoder* %encoder, i32 %idx) unnamed_addr #0 !dbg !6646 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_tree_ref_encoder* %encoder, metadata !6650, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata i32 %idx, metadata !6651, metadata !DIExpression()), !dbg !6652
  %trees = getelementptr inbounds %struct.lto_tree_ref_encoder, %struct.lto_tree_ref_encoder* %encoder, i64 0, i32 2, !dbg !6653
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %trees, align 8, !dbg !6653
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !6653
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6653

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6653
  br label %cond.end, !dbg !6653

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6653
  %call = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %idx) #7, !dbg !6653
  ret %union.tree_node* %call, !dbg !6654
}

declare dso_local zeroext i8 @lto_streamer_cache_lookup(%struct.lto_streamer_cache_d*, %union.tree_node*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @write_global_references(%struct.output_block* %ob, %struct.lto_output_stream* %ref_stream, %struct.lto_tree_ref_encoder* %encoder) unnamed_addr #5 !dbg !6655 {
entry:
  %size = alloca i32, align 4
  %slot_num = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.output_block* %ob, metadata !6659, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %ref_stream, metadata !6660, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata %struct.lto_tree_ref_encoder* %encoder, metadata !6661, metadata !DIExpression()), !dbg !6670
  %0 = bitcast i32* %size to i8*, !dbg !6671
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6671
  %call = tail call fastcc i32 @lto_tree_ref_encoder_size(%struct.lto_tree_ref_encoder* %encoder) #7, !dbg !6672
  call void @llvm.dbg.value(metadata i32 %call, metadata !6664, metadata !DIExpression()), !dbg !6670
  store i32 %call, i32* %size, align 4, !dbg !6673
  call void @lto_output_data_stream(%struct.lto_output_stream* %ref_stream, i8* nonnull %0, i64 4) #6, !dbg !6674
  call void @llvm.dbg.value(metadata i32 0, metadata !6663, metadata !DIExpression()), !dbg !6670
  %1 = bitcast i32* %slot_num to i8*, !dbg !6675
  %writer_cache = getelementptr inbounds %struct.output_block, %struct.output_block* %ob, i64 0, i32 11, !dbg !6675
  br label %for.cond, !dbg !6676

for.cond:                                         ; preds = %cond.end, %entry
  %index.0 = phi i32 [ 0, %entry ], [ %inc, %cond.end ], !dbg !6677
  call void @llvm.dbg.value(metadata i32 %index.0, metadata !6663, metadata !DIExpression()), !dbg !6670
  %2 = load i32, i32* %size, align 4, !dbg !6678
  call void @llvm.dbg.value(metadata i32 %2, metadata !6664, metadata !DIExpression()), !dbg !6670
  %cmp = icmp slt i32 %index.0, %2, !dbg !6679
  br i1 %cmp, label %for.body, label %for.end, !dbg !6680

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6681
  %call1 = call fastcc %union.tree_node* @lto_tree_ref_encoder_get_tree(%struct.lto_tree_ref_encoder* %encoder, i32 %index.0) #7, !dbg !6682
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6662, metadata !DIExpression()), !dbg !6670
  %3 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %writer_cache, align 8, !dbg !6683
  call void @llvm.dbg.value(metadata i32* %slot_num, metadata !6666, metadata !DIExpression(DW_OP_deref)), !dbg !6675
  %call2 = call zeroext i8 @lto_streamer_cache_lookup(%struct.lto_streamer_cache_d* %3, %union.tree_node* %call1, i32* nonnull %slot_num) #6, !dbg !6684
  %4 = load i32, i32* %slot_num, align 4, !dbg !6685
  call void @llvm.dbg.value(metadata i32 %4, metadata !6666, metadata !DIExpression()), !dbg !6675
  %cmp3 = icmp sgt i32 %4, -1, !dbg !6685
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !6685

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 2220, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6685
  br label %cond.end, !dbg !6685

cond.end:                                         ; preds = %for.body, %cond.true
  call void @lto_output_data_stream(%struct.lto_output_stream* %ref_stream, i8* nonnull %1, i64 4) #6, !dbg !6686
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6687
  %inc = add nuw nsw i32 %index.0, 1, !dbg !6688
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6663, metadata !DIExpression()), !dbg !6670
  br label %for.cond, !dbg !6689, !llvm.loop !6690

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6692
  ret void, !dbg !6692
}

; Function Attrs: nounwind uwtable
define internal fastcc void @write_symbols_of_kind(i32 %kind, %struct.lto_streamer_cache_d* %cache, %struct.bitmap_head_def* %seen) unnamed_addr #5 !dbg !6693 {
entry:
  %stream = alloca %struct.lto_output_stream, align 8
  call void @llvm.dbg.value(metadata i32 %kind, metadata !6698, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata %struct.lto_streamer_cache_d* %cache, metadata !6699, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %seen, metadata !6700, metadata !DIExpression()), !dbg !6705
  %0 = bitcast %struct.lto_output_stream* %stream to i8*, !dbg !6706
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !6706
  %1 = load %struct.VEC_lto_out_decl_state_ptr_heap*, %struct.VEC_lto_out_decl_state_ptr_heap** @lto_function_decl_states, align 8, !dbg !6707
  %base = getelementptr inbounds %struct.VEC_lto_out_decl_state_ptr_heap, %struct.VEC_lto_out_decl_state_ptr_heap* %1, i64 0, i32 0, !dbg !6707
  %call = tail call fastcc i32 @VEC_lto_out_decl_state_ptr_base_length(%struct.VEC_lto_out_decl_state_ptr_base* %base) #7, !dbg !6707
  call void @llvm.dbg.value(metadata i32 %call, metadata !6703, metadata !DIExpression()), !dbg !6705
  %call1 = call i8* @memset(i8* nonnull %0, i32 0, i64 40) #6, !dbg !6708
  %call2 = call %struct.lto_out_decl_state* @lto_get_out_decl_state() #6, !dbg !6709
  call void @llvm.dbg.value(metadata %struct.lto_out_decl_state* %call2, metadata !6701, metadata !DIExpression()), !dbg !6705
  %idxprom = zext i32 %kind to i64, !dbg !6710
  %trees = getelementptr inbounds %struct.lto_out_decl_state, %struct.lto_out_decl_state* %call2, i64 0, i32 0, i64 %idxprom, i32 2, !dbg !6711
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %trees, align 8, !dbg !6711
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %stream, metadata !6702, metadata !DIExpression(DW_OP_deref)), !dbg !6705
  call fastcc void @write_symbol_vec(%struct.lto_streamer_cache_d* %cache, %struct.lto_output_stream* nonnull %stream, %struct.VEC_tree_heap* %2, %struct.bitmap_head_def* %seen) #7, !dbg !6712
  call void @llvm.dbg.value(metadata i32 0, metadata !6704, metadata !DIExpression()), !dbg !6705
  br label %for.cond, !dbg !6713

for.cond:                                         ; preds = %for.body, %entry
  %idx.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !6715
  call void @llvm.dbg.value(metadata i32 %idx.0, metadata !6704, metadata !DIExpression()), !dbg !6705
  %exitcond = icmp eq i32 %idx.0, %call, !dbg !6716
  br i1 %exitcond, label %for.end, label %for.body, !dbg !6718

for.body:                                         ; preds = %for.cond
  %3 = load %struct.VEC_lto_out_decl_state_ptr_heap*, %struct.VEC_lto_out_decl_state_ptr_heap** @lto_function_decl_states, align 8, !dbg !6719
  %base5 = getelementptr inbounds %struct.VEC_lto_out_decl_state_ptr_heap, %struct.VEC_lto_out_decl_state_ptr_heap* %3, i64 0, i32 0, !dbg !6719
  %call9 = call fastcc %struct.lto_out_decl_state* @VEC_lto_out_decl_state_ptr_base_index(%struct.VEC_lto_out_decl_state_ptr_base* %base5, i32 %idx.0) #7, !dbg !6719
  call void @llvm.dbg.value(metadata %struct.lto_out_decl_state* %call9, metadata !6701, metadata !DIExpression()), !dbg !6705
  %trees13 = getelementptr inbounds %struct.lto_out_decl_state, %struct.lto_out_decl_state* %call9, i64 0, i32 0, i64 %idxprom, i32 2, !dbg !6721
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %trees13, align 8, !dbg !6721
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %stream, metadata !6702, metadata !DIExpression(DW_OP_deref)), !dbg !6705
  call fastcc void @write_symbol_vec(%struct.lto_streamer_cache_d* %cache, %struct.lto_output_stream* nonnull %stream, %struct.VEC_tree_heap* %4, %struct.bitmap_head_def* %seen) #7, !dbg !6722
  %inc = add i32 %idx.0, 1, !dbg !6723
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6704, metadata !DIExpression()), !dbg !6705
  br label %for.cond, !dbg !6724, !llvm.loop !6725

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %stream, metadata !6702, metadata !DIExpression(DW_OP_deref)), !dbg !6705
  call void @lto_write_stream(%struct.lto_output_stream* nonnull %stream) #6, !dbg !6727
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !6728
  ret void, !dbg !6728
}

; Function Attrs: nounwind uwtable
define internal fastcc void @write_symbol_vec(%struct.lto_streamer_cache_d* %cache, %struct.lto_output_stream* %stream, %struct.VEC_tree_heap* %v, %struct.bitmap_head_def* %seen) unnamed_addr #5 !dbg !6729 {
entry:
  %t = alloca %union.tree_node*, align 8
  %kind = alloca i32, align 4
  %visibility = alloca i32, align 4
  %slot_num = alloca i32, align 4
  %size = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.lto_streamer_cache_d* %cache, metadata !6733, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata %struct.lto_output_stream* %stream, metadata !6734, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %v, metadata !6735, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %seen, metadata !6736, metadata !DIExpression()), !dbg !6748
  %0 = bitcast %union.tree_node** %t to i8*, !dbg !6749
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6749
  call void @llvm.dbg.value(metadata i32 0, metadata !6738, metadata !DIExpression()), !dbg !6748
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %v, i64 0, i32 0, !dbg !6750
  %1 = bitcast i32* %kind to i8*, !dbg !6751
  %2 = bitcast i32* %visibility to i8*, !dbg !6751
  %3 = bitcast i32* %slot_num to i8*, !dbg !6751
  %4 = bitcast i64* %size to i8*, !dbg !6751
  %5 = bitcast %union.tree_node** %t to i64**, !dbg !6752
  %6 = bitcast %union.tree_node** %t to %struct.tree_decl_common**, !dbg !6752
  br label %for.cond, !dbg !6754

for.cond:                                         ; preds = %cleanup, %entry
  %index.0 = phi i32 [ 0, %entry ], [ %inc, %cleanup ], !dbg !6755
  call void @llvm.dbg.value(metadata i32 %index.0, metadata !6738, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !6737, metadata !DIExpression(DW_OP_deref)), !dbg !6748
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %index.0, %union.tree_node** nonnull %t) #7, !dbg !6756
  %tobool1 = icmp eq i32 %call, 0, !dbg !6757
  br i1 %tobool1, label %for.end, label %for.body, !dbg !6757

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6758
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !6759
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !6760
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6761
  %7 = load i64*, i64** %5, align 8, !dbg !6762
  %bf.load = load i64, i64* %7, align 8, !dbg !6762
  %bf.cast2 = and i64 %bf.load, 134217728, !dbg !6762
  %tobool3 = icmp eq i64 %bf.cast2, 0, !dbg !6762
  br i1 %tobool3, label %cleanup, label %lor.lhs.false, !dbg !6763

lor.lhs.false:                                    ; preds = %for.body
  %8 = bitcast i64* %7 to %union.tree_node*, !dbg !6763
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6737, metadata !DIExpression()), !dbg !6748
  %call4 = call zeroext i8 @is_builtin_fn(%union.tree_node* %8) #6, !dbg !6764
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6764
  br i1 %tobool5, label %lor.lhs.false6, label %cleanup, !dbg !6765

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %9 = load %struct.tree_decl_common*, %struct.tree_decl_common** %6, align 8, !dbg !6766
  %abstract_flag = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %9, i64 0, i32 2, !dbg !6766
  %10 = bitcast i40* %abstract_flag to i64*, !dbg !6766
  %bf.load7 = load i64, i64* %10, align 8, !dbg !6766
  %bf.cast103 = and i64 %bf.load7, 2048, !dbg !6766
  %tobool11 = icmp eq i64 %bf.cast103, 0, !dbg !6766
  %11 = bitcast %struct.tree_decl_common* %9 to %union.tree_node*, !dbg !6767
  br i1 %tobool11, label %lor.lhs.false12, label %cleanup, !dbg !6767

lor.lhs.false12:                                  ; preds = %lor.lhs.false6
  %12 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %9, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !6767
  %bf.load14 = load i64, i64* %12, align 8, !dbg !6768
  %bf.cast164 = and i64 %bf.load14, 65535, !dbg !6769
  %cmp = icmp eq i64 %bf.cast164, 36, !dbg !6769
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6770

if.end:                                           ; preds = %lor.lhs.false12
  %cmp22 = icmp eq i64 %bf.cast164, 32, !dbg !6771
  br i1 %cmp22, label %cond.end33, label %lor.lhs.false24, !dbg !6771

lor.lhs.false24:                                  ; preds = %if.end
  %cmp29 = icmp eq i64 %bf.cast164, 29, !dbg !6771
  br i1 %cmp29, label %cond.end33, label %cond.true31, !dbg !6771

cond.true31:                                      ; preds = %lor.lhs.false24
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 2314, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6771
  %.pre = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !6772
  br label %cond.end33, !dbg !6771

cond.end33:                                       ; preds = %if.end, %lor.lhs.false24, %cond.true31
  %13 = phi %union.tree_node* [ %11, %if.end ], [ %11, %lor.lhs.false24 ], [ %.pre, %cond.true31 ], !dbg !6772
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !6737, metadata !DIExpression()), !dbg !6748
  %call35 = call %union.tree_node* @decl_assembler_name(%union.tree_node* %13) #6, !dbg !6772
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6772
  %str = bitcast i32* %id to i8**, !dbg !6772
  %14 = load i8*, i8** %str, align 8, !dbg !6772
  call void @llvm.dbg.value(metadata i8* %14, metadata !6739, metadata !DIExpression()), !dbg !6751
  %15 = load i8, i8* %14, align 1, !dbg !6773
  %cmp37 = icmp eq i8 %15, 42, !dbg !6775
  %arrayidx40 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !6776
  %spec.select = select i1 %cmp37, i8* %arrayidx40, i8* %14, !dbg !6777
  call void @llvm.dbg.value(metadata i8* %spec.select, metadata !6739, metadata !DIExpression()), !dbg !6751
  %16 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !6778
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !6737, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata i32* %slot_num, metadata !6745, metadata !DIExpression(DW_OP_deref)), !dbg !6751
  %call42 = call zeroext i8 @lto_streamer_cache_lookup(%struct.lto_streamer_cache_d* %cache, %union.tree_node* %16, i32* nonnull %slot_num) #6, !dbg !6779
  %17 = load i32, i32* %slot_num, align 4, !dbg !6780
  call void @llvm.dbg.value(metadata i32 %17, metadata !6745, metadata !DIExpression()), !dbg !6751
  %cmp43 = icmp sgt i32 %17, -1, !dbg !6780
  br i1 %cmp43, label %cond.end47, label %cond.true45, !dbg !6780

cond.true45:                                      ; preds = %cond.end33
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 2325, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6780
  %.pre9 = load i32, i32* %slot_num, align 4, !dbg !6781
  br label %cond.end47, !dbg !6780

cond.end47:                                       ; preds = %cond.end33, %cond.true45
  %18 = phi i32 [ %17, %cond.end33 ], [ %.pre9, %cond.true45 ], !dbg !6781
  call void @llvm.dbg.value(metadata i32 %18, metadata !6745, metadata !DIExpression()), !dbg !6751
  %call49 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %seen, i32 %18) #6, !dbg !6783
  %tobool50 = icmp eq i32 %call49, 0, !dbg !6783
  br i1 %tobool50, label %if.else, label %cleanup, !dbg !6784

if.else:                                          ; preds = %cond.end47
  %19 = load i32, i32* %slot_num, align 4, !dbg !6785
  call void @llvm.dbg.value(metadata i32 %19, metadata !6745, metadata !DIExpression()), !dbg !6751
  %call52 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %seen, i32 %19) #6, !dbg !6786
  %20 = load %struct.tree_decl_common*, %struct.tree_decl_common** %6, align 8, !dbg !6787
  %decl_flag_1 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %20, i64 0, i32 2, !dbg !6787
  %21 = bitcast i40* %decl_flag_1 to i64*, !dbg !6787
  %bf.load55 = load i64, i64* %21, align 8, !dbg !6787
  %bf.cast587 = and i64 %bf.load55, 33554432, !dbg !6787
  %tobool59 = icmp eq i64 %bf.cast587, 0, !dbg !6787
  %weak_flag = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %20, i64 1, i32 0, i32 3, !dbg !6789
  %22 = bitcast %union.tree_node** %weak_flag to i32*, !dbg !6789
  %bf.load61 = load i32, i32* %22, align 8, !dbg !6789
  %23 = trunc i32 %bf.load61 to i8, !dbg !6789
  %tobool64 = icmp slt i8 %23, 0, !dbg !6789
  br i1 %tobool59, label %if.else68, label %if.then60, !dbg !6790

if.then60:                                        ; preds = %if.else
  br i1 %tobool64, label %if.then65, label %if.else66, !dbg !6791

if.then65:                                        ; preds = %if.then60
  call void @llvm.dbg.value(metadata i32 3, metadata !6743, metadata !DIExpression()), !dbg !6751
  store i32 3, i32* %kind, align 4, !dbg !6793
  br label %if.end86, !dbg !6795

if.else66:                                        ; preds = %if.then60
  call void @llvm.dbg.value(metadata i32 2, metadata !6743, metadata !DIExpression()), !dbg !6751
  store i32 2, i32* %kind, align 4, !dbg !6796
  br label %if.end86

if.else68:                                        ; preds = %if.else
  br i1 %tobool64, label %if.then75, label %if.else76, !dbg !6797

if.then75:                                        ; preds = %if.else68
  call void @llvm.dbg.value(metadata i32 1, metadata !6743, metadata !DIExpression()), !dbg !6751
  store i32 1, i32* %kind, align 4, !dbg !6799
  br label %if.end86, !dbg !6801

if.else76:                                        ; preds = %if.else68
  %bf.clear80 = and i32 %bf.load61, 8, !dbg !6802
  %tobool81 = icmp eq i32 %bf.clear80, 0, !dbg !6802
  br i1 %tobool81, label %if.else83, label %if.then82, !dbg !6804

if.then82:                                        ; preds = %if.else76
  call void @llvm.dbg.value(metadata i32 4, metadata !6743, metadata !DIExpression()), !dbg !6751
  store i32 4, i32* %kind, align 4, !dbg !6805
  br label %if.end86, !dbg !6806

if.else83:                                        ; preds = %if.else76
  call void @llvm.dbg.value(metadata i32 0, metadata !6743, metadata !DIExpression()), !dbg !6751
  store i32 0, i32* %kind, align 4, !dbg !6807
  br label %if.end86

if.end86:                                         ; preds = %if.then75, %if.else83, %if.then82, %if.then65, %if.else66
  %24 = phi i32 [ 1, %if.then75 ], [ 0, %if.else83 ], [ 4, %if.then82 ], [ 3, %if.then65 ], [ 2, %if.else66 ]
  %bf.lshr90 = lshr i32 %bf.load61, 10, !dbg !6808
  %bf.clear91 = and i32 %bf.lshr90, 3, !dbg !6808
  switch i32 %bf.clear91, label %sw.epilog1 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb92
    i32 2, label %sw.bb93
    i32 3, label %sw.bb94
  ], !dbg !6809

sw.bb:                                            ; preds = %if.end86
  call void @llvm.dbg.value(metadata i32 0, metadata !6744, metadata !DIExpression()), !dbg !6751
  store i32 0, i32* %visibility, align 4, !dbg !6810
  br label %sw.epilog, !dbg !6812

sw.bb92:                                          ; preds = %if.end86
  call void @llvm.dbg.value(metadata i32 1, metadata !6744, metadata !DIExpression()), !dbg !6751
  store i32 1, i32* %visibility, align 4, !dbg !6813
  br label %sw.epilog, !dbg !6814

sw.bb93:                                          ; preds = %if.end86
  call void @llvm.dbg.value(metadata i32 3, metadata !6744, metadata !DIExpression()), !dbg !6751
  store i32 3, i32* %visibility, align 4, !dbg !6815
  br label %sw.epilog, !dbg !6816

sw.bb94:                                          ; preds = %if.end86
  call void @llvm.dbg.value(metadata i32 2, metadata !6744, metadata !DIExpression()), !dbg !6751
  store i32 2, i32* %visibility, align 4, !dbg !6817
  br label %sw.epilog, !dbg !6818

sw.epilog1:                                       ; preds = %if.end86
  unreachable

sw.epilog:                                        ; preds = %sw.bb94, %sw.bb93, %sw.bb92, %sw.bb
  call void @llvm.dbg.value(metadata i32 %24, metadata !6743, metadata !DIExpression()), !dbg !6751
  %cmp95 = icmp eq i32 %24, 4, !dbg !6819
  br i1 %cmp95, label %land.lhs.true, label %if.else117, !dbg !6821

land.lhs.true:                                    ; preds = %sw.epilog
  %size98 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %20, i64 0, i32 1, !dbg !6822
  %25 = load %union.tree_node*, %union.tree_node** %size98, align 8, !dbg !6822
  %tobool99 = icmp eq %union.tree_node* %25, null, !dbg !6822
  br i1 %tobool99, label %if.else117, label %land.lhs.true100, !dbg !6823

land.lhs.true100:                                 ; preds = %land.lhs.true
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6823
  %bf.load104 = load i64, i64* %26, align 8, !dbg !6824
  %bf.cast1068 = and i64 %bf.load104, 65535, !dbg !6825
  %cmp107 = icmp eq i64 %bf.cast1068, 23, !dbg !6825
  br i1 %cmp107, label %if.then109, label %if.else117, !dbg !6826

if.then109:                                       ; preds = %land.lhs.true100
  %high = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6827
  %27 = bitcast %union.tree_node** %high to i64*, !dbg !6827
  %28 = load i64, i64* %27, align 8, !dbg !6827
  %shl = shl i64 %28, 32, !dbg !6828
  %low = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6829
  %29 = bitcast i32* %low to i64*, !dbg !6829
  %30 = load i64, i64* %29, align 8, !dbg !6829
  %or = or i64 %shl, %30, !dbg !6830
  call void @llvm.dbg.value(metadata i64 %or, metadata !6746, metadata !DIExpression()), !dbg !6751
  br label %if.end118, !dbg !6831

if.else117:                                       ; preds = %land.lhs.true, %land.lhs.true100, %sw.epilog
  call void @llvm.dbg.value(metadata i64 0, metadata !6746, metadata !DIExpression()), !dbg !6751
  br label %if.end118

if.end118:                                        ; preds = %if.else117, %if.then109
  %storemerge = phi i64 [ 0, %if.else117 ], [ %or, %if.then109 ], !dbg !6832
  store i64 %storemerge, i64* %size, align 8, !dbg !6832
  %comdat_group = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %20, i64 1, i32 0, i32 1, !dbg !6833
  %31 = bitcast i32* %comdat_group to %union.tree_node**, !dbg !6833
  %32 = load %union.tree_node*, %union.tree_node** %31, align 8, !dbg !6833
  %cmp120 = icmp eq %union.tree_node* %32, null, !dbg !6833
  br i1 %cmp120, label %if.end129, label %if.then122, !dbg !6835

if.then122:                                       ; preds = %if.end118
  %str127 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6836
  %33 = bitcast i32* %str127 to i8**, !dbg !6836
  %34 = load i8*, i8** %33, align 8, !dbg !6836
  call void @llvm.dbg.value(metadata i8* %34, metadata !6747, metadata !DIExpression()), !dbg !6751
  br label %if.end129, !dbg !6837

if.end129:                                        ; preds = %if.end118, %if.then122
  %comdat.0 = phi i8* [ %34, %if.then122 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0), %if.end118 ], !dbg !6838
  call void @llvm.dbg.value(metadata i8* %comdat.0, metadata !6747, metadata !DIExpression()), !dbg !6751
  %call130 = call i64 @strlen(i8* %spec.select) #6, !dbg !6839
  %add = add i64 %call130, 1, !dbg !6840
  call void @lto_output_data_stream(%struct.lto_output_stream* %stream, i8* %spec.select, i64 %add) #6, !dbg !6841
  %call131 = call i64 @strlen(i8* %comdat.0) #6, !dbg !6842
  %add132 = add i64 %call131, 1, !dbg !6843
  call void @lto_output_data_stream(%struct.lto_output_stream* %stream, i8* %comdat.0, i64 %add132) #6, !dbg !6844
  call void @lto_output_data_stream(%struct.lto_output_stream* %stream, i8* nonnull %1, i64 1) #6, !dbg !6845
  call void @lto_output_data_stream(%struct.lto_output_stream* %stream, i8* nonnull %2, i64 1) #6, !dbg !6846
  call void @lto_output_data_stream(%struct.lto_output_stream* %stream, i8* nonnull %4, i64 8) #6, !dbg !6847
  call void @lto_output_data_stream(%struct.lto_output_stream* %stream, i8* nonnull %3, i64 4) #6, !dbg !6848
  br label %cleanup, !dbg !6849

cleanup:                                          ; preds = %cond.end47, %lor.lhs.false6, %lor.lhs.false, %for.body, %lor.lhs.false12, %if.end129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6849
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !6849
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !6849
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6849
  %inc = add nuw nsw i32 %index.0, 1, !dbg !6850
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6738, metadata !DIExpression()), !dbg !6748
  br label %for.cond, !dbg !6851, !llvm.loop !6852

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6854
  ret void, !dbg !6854
}

declare dso_local zeroext i8 @is_builtin_fn(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2469, !2470, !2471}
!llvm.ident = !{!2472}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pass_ipa_lto_gimple_out", scope: !2, file: !3, line: 2130, type: !2224, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !722, globals: !2466, nameTableKind: None)
!3 = !DIFile(filename: "lto-streamer-out.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !20, !148, !343, !350, !356, !361, !366, !384, !391, !398, !421, !428, !604, !633, !672, !698, !708, !716}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lto_section_type", file: !6, line: 256, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./lto-streamer.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19}
!9 = !DIEnumerator(name: "LTO_section_decls", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "LTO_section_function_body", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "LTO_section_static_initializer", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "LTO_section_cgraph", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "LTO_section_jump_functions", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "LTO_section_ipa_pure_const", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "LTO_section_ipa_reference", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "LTO_section_symtab", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "LTO_section_wpa_fixup", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "LTO_section_opts", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "LTO_N_SECTION_TYPES", value: 10, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !21, line: 7, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!22 = !{!23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147}
!23 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!27 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!28 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!29 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!30 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!31 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!32 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!33 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!34 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!35 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!36 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!37 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!38 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!39 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!40 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!41 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!42 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!43 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!44 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!45 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!46 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!47 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!48 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!49 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!50 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!51 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!52 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!53 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!54 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!55 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!56 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!57 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!58 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!59 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!60 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!61 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!62 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!63 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!64 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!65 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!66 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!67 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!68 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!69 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!70 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!71 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!72 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!73 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!74 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!75 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!76 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!77 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!78 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!79 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!80 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!81 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!82 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!83 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!84 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!85 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!86 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!87 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!90 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!91 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!92 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!93 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!94 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!95 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!96 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!97 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!98 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!99 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!100 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!101 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!102 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!103 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!104 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!105 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!106 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!107 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!108 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!109 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!133 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!134 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!135 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!136 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!137 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!140 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!142 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!144 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!146 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!147 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !149, line: 39, baseType: !7, size: 32, elements: !150)
!149 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!150 = !{!151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342}
!151 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!152 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!153 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!154 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!155 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!156 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!157 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!158 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!159 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!160 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!161 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!163 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!164 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!165 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!166 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!167 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!168 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!169 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!170 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!171 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!172 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!173 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!174 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!175 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!176 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!177 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!178 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!179 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!180 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!181 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!182 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!183 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!184 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!185 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!186 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!187 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!188 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!189 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!190 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!191 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!192 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!193 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!194 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!195 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!196 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!197 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!198 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!199 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!200 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!201 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!202 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!203 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!204 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!205 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!206 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!207 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!208 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!209 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!210 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!211 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!212 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!213 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!214 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!215 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!216 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!217 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!218 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!219 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!220 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!221 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!222 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!223 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!224 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!225 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!226 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!227 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!228 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!229 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!230 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!231 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!232 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!233 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!234 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!235 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!236 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!237 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!238 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!239 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!240 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!241 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!242 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!243 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!244 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!245 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!246 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!247 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!248 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!249 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!250 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!251 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!252 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!253 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!254 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!255 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!256 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!257 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!258 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!259 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!260 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!261 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!262 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!263 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!264 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!265 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!266 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!267 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!268 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!269 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!270 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!271 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!272 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!273 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!274 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!275 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!276 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!277 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!278 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!279 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!280 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!281 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!282 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!283 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!284 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!285 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!286 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!287 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!288 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!289 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!290 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!291 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!292 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!293 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!294 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!295 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!296 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!297 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!298 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!299 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!300 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!301 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!302 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!303 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!304 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!305 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!306 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!307 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!308 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!309 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!310 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!311 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!312 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!313 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!314 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!315 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!316 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!317 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!318 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!319 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!320 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!322 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!323 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!324 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!325 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!326 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!327 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!328 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!329 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!330 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!331 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!332 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!333 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!334 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!335 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!336 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!337 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!338 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!339 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!340 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!341 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!342 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!343 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !344, line: 30, baseType: !7, size: 32, elements: !345)
!344 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!345 = !{!346, !347, !348, !349}
!346 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!347 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!348 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!349 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!350 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !351, line: 363, baseType: !7, size: 32, elements: !352)
!351 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!352 = !{!353, !354, !355}
!353 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!354 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!355 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !351, line: 355, baseType: !7, size: 32, elements: !357)
!357 = !{!358, !359, !360}
!358 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!361 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !362, line: 474, baseType: !7, size: 32, elements: !363)
!362 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!363 = !{!364, !365}
!364 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!365 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!366 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !149, line: 280, baseType: !7, size: 32, elements: !367)
!367 = !{!368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!368 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!377 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!378 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!383 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !149, line: 1817, baseType: !7, size: 32, elements: !385)
!385 = !{!386, !387, !388, !389, !390}
!386 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!387 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!388 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!389 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!390 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!391 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !149, line: 1805, baseType: !7, size: 32, elements: !392)
!392 = !{!393, !394, !395, !396, !397}
!393 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!397 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!398 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !399, line: 309, baseType: !7, size: 32, elements: !400)
!399 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!400 = !{!401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420}
!401 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!402 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!403 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!404 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!405 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!406 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!407 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!408 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!409 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!410 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!411 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!412 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!413 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!414 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!415 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!416 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!417 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!418 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!419 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!420 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!421 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !422, line: 104, baseType: !7, size: 32, elements: !423)
!422 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!423 = !{!424, !425, !426, !427}
!424 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!425 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!426 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!427 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!428 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !429, line: 74, baseType: !7, size: 32, elements: !430)
!429 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!430 = !{!431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603}
!431 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!581 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!582 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!583 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!584 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!585 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!586 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!587 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!588 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!589 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!590 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!591 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!592 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!593 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!594 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!595 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!596 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!597 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!598 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!599 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!600 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!601 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!602 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!603 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "LTO_tags", file: !6, line: 175, baseType: !7, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632}
!606 = !DIEnumerator(name: "LTO_null", value: 0, isUnsigned: true)
!607 = !DIEnumerator(name: "LTO_bb0", value: 224, isUnsigned: true)
!608 = !DIEnumerator(name: "LTO_bb1", value: 225, isUnsigned: true)
!609 = !DIEnumerator(name: "LTO_eh_region", value: 226, isUnsigned: true)
!610 = !DIEnumerator(name: "LTO_builtin_decl", value: 227, isUnsigned: true)
!611 = !DIEnumerator(name: "LTO_function", value: 228, isUnsigned: true)
!612 = !DIEnumerator(name: "LTO_eh_table", value: 229, isUnsigned: true)
!613 = !DIEnumerator(name: "LTO_ert_cleanup", value: 230, isUnsigned: true)
!614 = !DIEnumerator(name: "LTO_ert_try", value: 231, isUnsigned: true)
!615 = !DIEnumerator(name: "LTO_ert_allowed_exceptions", value: 232, isUnsigned: true)
!616 = !DIEnumerator(name: "LTO_ert_must_not_throw", value: 233, isUnsigned: true)
!617 = !DIEnumerator(name: "LTO_eh_landing_pad", value: 234, isUnsigned: true)
!618 = !DIEnumerator(name: "LTO_eh_catch", value: 235, isUnsigned: true)
!619 = !DIEnumerator(name: "LTO_tree_pickle_reference", value: 236, isUnsigned: true)
!620 = !DIEnumerator(name: "LTO_var_decl_alias", value: 237, isUnsigned: true)
!621 = !DIEnumerator(name: "LTO_field_decl_ref", value: 238, isUnsigned: true)
!622 = !DIEnumerator(name: "LTO_function_decl_ref", value: 239, isUnsigned: true)
!623 = !DIEnumerator(name: "LTO_label_decl_ref", value: 240, isUnsigned: true)
!624 = !DIEnumerator(name: "LTO_namespace_decl_ref", value: 241, isUnsigned: true)
!625 = !DIEnumerator(name: "LTO_result_decl_ref", value: 242, isUnsigned: true)
!626 = !DIEnumerator(name: "LTO_ssa_name_ref", value: 243, isUnsigned: true)
!627 = !DIEnumerator(name: "LTO_type_decl_ref", value: 244, isUnsigned: true)
!628 = !DIEnumerator(name: "LTO_type_ref", value: 245, isUnsigned: true)
!629 = !DIEnumerator(name: "LTO_const_decl_ref", value: 246, isUnsigned: true)
!630 = !DIEnumerator(name: "LTO_imported_decl_ref", value: 247, isUnsigned: true)
!631 = !DIEnumerator(name: "LTO_global_decl_ref", value: 248, isUnsigned: true)
!632 = !DIEnumerator(name: "LTO_NUM_TAGS", value: 249, isUnsigned: true)
!633 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !634, line: 51, baseType: !7, size: 32, elements: !635)
!634 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!635 = !{!636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671}
!636 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!637 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!638 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!639 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!640 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!641 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!642 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!643 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!644 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!645 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!646 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!647 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!648 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!649 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!650 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!651 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!652 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!653 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!654 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!655 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!656 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!657 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!658 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!659 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!660 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!661 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!662 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!663 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!664 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!665 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!666 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!667 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!668 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!669 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!670 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!671 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!672 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !634, line: 727, baseType: !7, size: 32, elements: !673)
!673 = !{!674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697}
!674 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!675 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!676 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!677 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!678 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!679 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!680 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!681 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!682 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!683 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!684 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!685 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!686 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!687 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!688 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!689 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!690 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!691 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!692 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!693 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!694 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!695 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!696 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!697 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!698 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 272, baseType: !7, size: 32, elements: !699)
!699 = !{!700, !701, !702, !703, !704, !705, !706, !707}
!700 = !DIEnumerator(name: "LTO_DECL_STREAM_TYPE", value: 0, isUnsigned: true)
!701 = !DIEnumerator(name: "LTO_DECL_STREAM_FIELD_DECL", value: 1, isUnsigned: true)
!702 = !DIEnumerator(name: "LTO_DECL_STREAM_FN_DECL", value: 2, isUnsigned: true)
!703 = !DIEnumerator(name: "LTO_DECL_STREAM_VAR_DECL", value: 3, isUnsigned: true)
!704 = !DIEnumerator(name: "LTO_DECL_STREAM_TYPE_DECL", value: 4, isUnsigned: true)
!705 = !DIEnumerator(name: "LTO_DECL_STREAM_NAMESPACE_DECL", value: 5, isUnsigned: true)
!706 = !DIEnumerator(name: "LTO_DECL_STREAM_LABEL_DECL", value: 6, isUnsigned: true)
!707 = !DIEnumerator(name: "LTO_N_DECL_STREAMS", value: 7, isUnsigned: true)
!708 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gcc_plugin_symbol_kind", file: !709, line: 24, baseType: !7, size: 32, elements: !710)
!709 = !DIFile(filename: "./include/lto-symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!710 = !{!711, !712, !713, !714, !715}
!711 = !DIEnumerator(name: "GCCPK_DEF", value: 0, isUnsigned: true)
!712 = !DIEnumerator(name: "GCCPK_WEAKDEF", value: 1, isUnsigned: true)
!713 = !DIEnumerator(name: "GCCPK_UNDEF", value: 2, isUnsigned: true)
!714 = !DIEnumerator(name: "GCCPK_WEAKUNDEF", value: 3, isUnsigned: true)
!715 = !DIEnumerator(name: "GCCPK_COMMON", value: 4, isUnsigned: true)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gcc_plugin_symbol_visibility", file: !709, line: 33, baseType: !7, size: 32, elements: !717)
!717 = !{!718, !719, !720, !721}
!718 = !DIEnumerator(name: "GCCPV_DEFAULT", value: 0, isUnsigned: true)
!719 = !DIEnumerator(name: "GCCPV_PROTECTED", value: 1, isUnsigned: true)
!720 = !DIEnumerator(name: "GCCPV_INTERNAL", value: 2, isUnsigned: true)
!721 = !DIEnumerator(name: "GCCPV_HIDDEN", value: 3, isUnsigned: true)
!722 = !{!723, !724, !725, !726, !729, !730, !732, !2409, !811, !148, !2450, !755, !2457, !756, !2458, !604, !7, !937, !727, !2459, !773, !1528, !1602, !1628, !1135, !2460, !1169, !799, !2462}
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!725 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "output_block", file: !6, line: 625, size: 704, elements: !734)
!734 = !{!735, !736, !2408, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "section_type", scope: !733, file: !6, line: 627, baseType: !5, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "decl_state", scope: !733, file: !6, line: 628, baseType: !737, size: 64, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_out_decl_state", file: !6, line: 517, size: 1472, elements: !739)
!739 = !{!740, !2147, !2407}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !738, file: !6, line: 521, baseType: !741, size: 1344)
!741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !742, size: 1344, elements: !2145)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_tree_ref_encoder", file: !6, line: 493, size: 192, elements: !743)
!743 = !{!744, !797, !798}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "tree_hash_table", scope: !742, file: !6, line: 495, baseType: !745, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !746, line: 144, baseType: !747)
!746 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !746, line: 100, size: 896, elements: !749)
!749 = !{!750, !758, !763, !768, !770, !774, !775, !776, !777, !778, !783, !785, !786, !791, !796}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !748, file: !746, line: 102, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !746, line: 52, baseType: !752)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DISubroutineType(types: !754)
!754 = !{!755, !756}
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !746, line: 47, baseType: !7)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !748, file: !746, line: 105, baseType: !759, size: 64, offset: 64)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !746, line: 59, baseType: !760)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DISubroutineType(types: !762)
!762 = !{!725, !756, !756}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !748, file: !746, line: 108, baseType: !764, size: 64, offset: 128)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !746, line: 63, baseType: !765)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DISubroutineType(types: !767)
!767 = !{null, !729}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !748, file: !746, line: 111, baseType: !769, size: 64, offset: 192)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !748, file: !746, line: 114, baseType: !771, size: 64, offset: 256)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !772, line: 46, baseType: !773)
!772 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!773 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !748, file: !746, line: 117, baseType: !771, size: 64, offset: 320)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !748, file: !746, line: 120, baseType: !771, size: 64, offset: 384)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !748, file: !746, line: 124, baseType: !7, size: 32, offset: 448)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !748, file: !746, line: 128, baseType: !7, size: 32, offset: 480)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !748, file: !746, line: 131, baseType: !779, size: 64, offset: 512)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !746, line: 75, baseType: !780)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!729, !771, !771}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !748, file: !746, line: 132, baseType: !784, size: 64, offset: 576)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !746, line: 78, baseType: !765)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !748, file: !746, line: 135, baseType: !729, size: 64, offset: 640)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !748, file: !746, line: 136, baseType: !787, size: 64, offset: 704)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !746, line: 82, baseType: !788)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{!729, !729, !771, !771}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !748, file: !746, line: 137, baseType: !792, size: 64, offset: 768)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !746, line: 83, baseType: !793)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DISubroutineType(types: !795)
!795 = !{null, !729, !729}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !748, file: !746, line: 141, baseType: !7, size: 32, offset: 832)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "next_index", scope: !742, file: !6, line: 496, baseType: !7, size: 32, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "trees", scope: !742, file: !6, line: 497, baseType: !799, size: 64, offset: 128)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !149, line: 184, baseType: !801)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !149, line: 184, size: 128, elements: !802)
!802 = !{!803}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !801, file: !149, line: 184, baseType: !804, size: 128)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !149, line: 182, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !149, line: 182, size: 128, elements: !806)
!806 = !{!807, !808, !809}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !805, file: !149, line: 182, baseType: !7, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !805, file: !149, line: 182, baseType: !7, size: 32, offset: 32)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !805, file: !149, line: 182, baseType: !810, size: 64, offset: 64)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 64, elements: !909)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !812, line: 56, baseType: !813)
!812 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !149, line: 3371, size: 1792, elements: !815)
!815 = !{!816, !849, !855, !867, !886, !897, !902, !911, !917, !930, !942, !980, !1435, !1463, !1480, !1481, !1486, !1495, !1501, !1506, !1510, !1514, !1796, !1843, !1849, !1855, !1862, !1875, !1889, !1906, !1918, !1940, !1955, !2127}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !814, file: !149, line: 3372, baseType: !817, size: 64)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !149, line: 360, size: 64, elements: !818)
!818 = !{!819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !817, file: !149, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !817, file: !149, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !817, file: !149, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !817, file: !149, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !817, file: !149, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !817, file: !149, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !817, file: !149, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !817, file: !149, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !817, file: !149, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !817, file: !149, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !817, file: !149, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !817, file: !149, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !817, file: !149, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !817, file: !149, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !817, file: !149, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !817, file: !149, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !817, file: !149, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !817, file: !149, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !817, file: !149, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !817, file: !149, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !817, file: !149, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !817, file: !149, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !817, file: !149, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !817, file: !149, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !817, file: !149, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !817, file: !149, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !817, file: !149, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !817, file: !149, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !817, file: !149, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !817, file: !149, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !814, file: !149, line: 3373, baseType: !850, size: 192)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !149, line: 402, size: 192, elements: !851)
!851 = !{!852, !853, !854}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !850, file: !149, line: 403, baseType: !817, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !850, file: !149, line: 404, baseType: !811, size: 64, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !850, file: !149, line: 405, baseType: !811, size: 64, offset: 128)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !814, file: !149, line: 3374, baseType: !856, size: 320)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !149, line: 1384, size: 320, elements: !857)
!857 = !{!858, !859}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !856, file: !149, line: 1385, baseType: !850, size: 192)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !856, file: !149, line: 1386, baseType: !860, size: 128, offset: 192)
!860 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !861, line: 58, baseType: !862)
!861 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !861, line: 54, size: 128, elements: !863)
!863 = !{!864, !865}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !862, file: !861, line: 56, baseType: !773, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !862, file: !861, line: 57, baseType: !866, size: 64, offset: 64)
!866 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !814, file: !149, line: 3375, baseType: !868, size: 256)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !149, line: 1397, size: 256, elements: !869)
!869 = !{!870, !871}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !868, file: !149, line: 1398, baseType: !850, size: 192)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !868, file: !149, line: 1399, baseType: !872, size: 64, offset: 192)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !874, line: 52, size: 256, elements: !875)
!874 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!875 = !{!876, !877, !878, !879, !880, !881, !882}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !873, file: !874, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !873, file: !874, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !873, file: !874, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !873, file: !874, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !873, file: !874, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !873, file: !874, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !873, file: !874, line: 62, baseType: !883, size: 192, offset: 64)
!883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !773, size: 192, elements: !884)
!884 = !{!885}
!885 = !DISubrange(count: 3)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !814, file: !149, line: 3376, baseType: !887, size: 256)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !149, line: 1408, size: 256, elements: !888)
!888 = !{!889, !890}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !887, file: !149, line: 1409, baseType: !850, size: 192)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !887, file: !149, line: 1410, baseType: !891, size: 64, offset: 192)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !893, line: 27, size: 192, elements: !894)
!893 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!894 = !{!895, !896}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !892, file: !893, line: 29, baseType: !860, size: 128)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !892, file: !893, line: 30, baseType: !20, size: 32, offset: 128)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !814, file: !149, line: 3377, baseType: !898, size: 256)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !149, line: 1437, size: 256, elements: !899)
!899 = !{!900, !901}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !898, file: !149, line: 1438, baseType: !850, size: 192)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !898, file: !149, line: 1439, baseType: !811, size: 64, offset: 192)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !814, file: !149, line: 3378, baseType: !903, size: 256)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !149, line: 1418, size: 256, elements: !904)
!904 = !{!905, !906, !907}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !903, file: !149, line: 1419, baseType: !850, size: 192)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !903, file: !149, line: 1420, baseType: !725, size: 32, offset: 192)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !903, file: !149, line: 1421, baseType: !908, size: 8, offset: 224)
!908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !728, size: 8, elements: !909)
!909 = !{!910}
!910 = !DISubrange(count: 1)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !814, file: !149, line: 3379, baseType: !912, size: 320)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !149, line: 1428, size: 320, elements: !913)
!913 = !{!914, !915, !916}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !912, file: !149, line: 1429, baseType: !850, size: 192)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !912, file: !149, line: 1430, baseType: !811, size: 64, offset: 192)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !912, file: !149, line: 1431, baseType: !811, size: 64, offset: 256)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !814, file: !149, line: 3380, baseType: !918, size: 320)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !149, line: 1460, size: 320, elements: !919)
!919 = !{!920, !921}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !918, file: !149, line: 1461, baseType: !850, size: 192)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !918, file: !149, line: 1462, baseType: !922, size: 128, offset: 192)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !923, line: 31, size: 128, elements: !924)
!923 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!924 = !{!925, !928, !929}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !922, file: !923, line: 32, baseType: !926, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !724)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !922, file: !923, line: 33, baseType: !7, size: 32, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !922, file: !923, line: 34, baseType: !7, size: 32, offset: 96)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !814, file: !149, line: 3381, baseType: !931, size: 384)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !149, line: 2507, size: 384, elements: !932)
!932 = !{!933, !934, !939, !940, !941}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !931, file: !149, line: 2508, baseType: !850, size: 192)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !931, file: !149, line: 2509, baseType: !935, size: 32, offset: 192)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !936, line: 58, baseType: !937)
!936 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !938, line: 44, baseType: !7)
!938 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!939 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !931, file: !149, line: 2510, baseType: !7, size: 32, offset: 224)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !931, file: !149, line: 2511, baseType: !811, size: 64, offset: 256)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !931, file: !149, line: 2512, baseType: !811, size: 64, offset: 320)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !814, file: !149, line: 3382, baseType: !943, size: 896)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !149, line: 2652, size: 896, elements: !944)
!944 = !{!945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !943, file: !149, line: 2653, baseType: !931, size: 384)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !943, file: !149, line: 2654, baseType: !811, size: 64, offset: 384)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !943, file: !149, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !943, file: !149, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !943, file: !149, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !943, file: !149, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !943, file: !149, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !943, file: !149, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !943, file: !149, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !943, file: !149, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !943, file: !149, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !943, file: !149, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !943, file: !149, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !943, file: !149, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !943, file: !149, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !943, file: !149, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !943, file: !149, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !943, file: !149, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !943, file: !149, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !943, file: !149, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !943, file: !149, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !943, file: !149, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !943, file: !149, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !943, file: !149, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !943, file: !149, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !943, file: !149, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !943, file: !149, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !943, file: !149, line: 2703, baseType: !7, size: 32, offset: 512)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !943, file: !149, line: 2705, baseType: !811, size: 64, offset: 576)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !943, file: !149, line: 2706, baseType: !811, size: 64, offset: 640)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !943, file: !149, line: 2707, baseType: !811, size: 64, offset: 704)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !943, file: !149, line: 2708, baseType: !811, size: 64, offset: 768)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !943, file: !149, line: 2711, baseType: !978, size: 64, offset: 832)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !149, line: 2711, flags: DIFlagFwdDecl)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !814, file: !149, line: 3383, baseType: !981, size: 960)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !149, line: 2756, size: 960, elements: !982)
!982 = !{!983, !984}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !981, file: !149, line: 2757, baseType: !943, size: 896)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !981, file: !149, line: 2758, baseType: !985, size: 64, offset: 896)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !812, line: 50, baseType: !986)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !988, line: 240, size: 384, elements: !989)
!988 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!989 = !{!990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !987, file: !988, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !987, file: !988, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !987, file: !988, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !987, file: !988, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !987, file: !988, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !987, file: !988, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !987, file: !988, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !987, file: !988, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !987, file: !988, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !987, file: !988, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !987, file: !988, line: 321, baseType: !1001, size: 320, offset: 64)
!1001 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !988, line: 315, size: 320, elements: !1002)
!1002 = !{!1003, !1402, !1404, !1433, !1434}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1001, file: !988, line: 316, baseType: !1004, size: 64)
!1004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1005, size: 64, elements: !909)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !988, line: 183, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !988, line: 166, size: 64, elements: !1007)
!1007 = !{!1008, !1009, !1010, !1011, !1012, !1020, !1021, !1033, !1036, !1096, !1097, !1379, !1392, !1399}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !1006, file: !988, line: 168, baseType: !725, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !1006, file: !988, line: 169, baseType: !7, size: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !1006, file: !988, line: 170, baseType: !730, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !1006, file: !988, line: 171, baseType: !985, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !1006, file: !988, line: 172, baseType: !1013, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !812, line: 53, baseType: !1014)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !988, line: 359, size: 128, elements: !1016)
!1016 = !{!1017, !1018}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !1015, file: !988, line: 360, baseType: !725, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1015, file: !988, line: 361, baseType: !1019, size: 64, offset: 64)
!1019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 64, elements: !909)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !1006, file: !988, line: 173, baseType: !20, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !1006, file: !988, line: 174, baseType: !1022, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !988, line: 133, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !988, line: 115, size: 32, elements: !1024)
!1024 = !{!1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !1023, file: !988, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !1023, file: !988, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !1023, file: !988, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !1023, file: !988, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !1023, file: !988, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !1023, file: !988, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !1023, file: !988, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1023, file: !988, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !1006, file: !988, line: 175, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !988, line: 175, flags: DIFlagFwdDecl)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !1006, file: !988, line: 176, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !1039, line: 75, size: 256, elements: !1040)
!1039 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1040 = !{!1041, !1055, !1056, !1057}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1038, file: !1039, line: 76, baseType: !1042, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !1039, line: 68, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !1039, line: 63, size: 320, elements: !1045)
!1045 = !{!1046, !1048, !1049, !1050}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1044, file: !1039, line: 64, baseType: !1047, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1044, file: !1039, line: 65, baseType: !1047, size: 64, offset: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1044, file: !1039, line: 66, baseType: !7, size: 32, offset: 128)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1044, file: !1039, line: 67, baseType: !1051, size: 128, offset: 192)
!1051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1052, size: 128, elements: !1053)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !1039, line: 29, baseType: !773)
!1053 = !{!1054}
!1054 = !DISubrange(count: 2)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1038, file: !1039, line: 77, baseType: !1042, size: 64, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1038, file: !1039, line: 78, baseType: !7, size: 32, offset: 128)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1038, file: !1039, line: 79, baseType: !1058, size: 64, offset: 192)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !1039, line: 49, baseType: !1060)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !1039, line: 45, size: 832, elements: !1061)
!1061 = !{!1062, !1063, !1064}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1060, file: !1039, line: 46, baseType: !1047, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !1060, file: !1039, line: 47, baseType: !1037, size: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1060, file: !1039, line: 48, baseType: !1065, size: 704, offset: 128)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1066, line: 164, size: 704, elements: !1067)
!1066 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1067 = !{!1068, !1069, !1079, !1080, !1081, !1082, !1083, !1084, !1088, !1092, !1093, !1094, !1095}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1065, file: !1066, line: 166, baseType: !866, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1065, file: !1066, line: 167, baseType: !1070, size: 64, offset: 64)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1066, line: 157, size: 192, elements: !1072)
!1072 = !{!1073, !1074, !1075}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1071, file: !1066, line: 159, baseType: !727, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1071, file: !1066, line: 160, baseType: !1070, size: 64, offset: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1071, file: !1066, line: 161, baseType: !1076, size: 32, offset: 128)
!1076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !728, size: 32, elements: !1077)
!1077 = !{!1078}
!1078 = !DISubrange(count: 4)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1065, file: !1066, line: 168, baseType: !727, size: 64, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1065, file: !1066, line: 169, baseType: !727, size: 64, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1065, file: !1066, line: 170, baseType: !727, size: 64, offset: 256)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1065, file: !1066, line: 171, baseType: !866, size: 64, offset: 320)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1065, file: !1066, line: 172, baseType: !725, size: 32, offset: 384)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1065, file: !1066, line: 176, baseType: !1085, size: 64, offset: 448)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!1070, !729, !866}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1065, file: !1066, line: 177, baseType: !1089, size: 64, offset: 512)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{null, !729, !1070}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1065, file: !1066, line: 178, baseType: !729, size: 64, offset: 576)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1065, file: !1066, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1065, file: !1066, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1065, file: !1066, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !1006, file: !988, line: 177, baseType: !811, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !1006, file: !988, line: 178, baseType: !1098, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !351, line: 217, size: 832, elements: !1100)
!1100 = !{!1101, !1344, !1345, !1346, !1349, !1353, !1354, !1355, !1373, !1374, !1375, !1376, !1377, !1378}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1099, file: !351, line: 219, baseType: !1102, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !351, line: 151, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !351, line: 151, size: 128, elements: !1105)
!1105 = !{!1106}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1104, file: !351, line: 151, baseType: !1107, size: 128)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !351, line: 150, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !351, line: 150, size: 128, elements: !1109)
!1109 = !{!1110, !1111, !1112}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1108, file: !351, line: 150, baseType: !7, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1108, file: !351, line: 150, baseType: !7, size: 32, offset: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1108, file: !351, line: 150, baseType: !1113, size: 64, offset: 64)
!1113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1114, size: 64, elements: !909)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !812, line: 108, baseType: !1115)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !351, line: 122, size: 512, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1336, !1337, !1338, !1339, !1340, !1341, !1342}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1116, file: !351, line: 124, baseType: !1098, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1116, file: !351, line: 125, baseType: !1098, size: 64, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1116, file: !351, line: 131, baseType: !1121, size: 64, offset: 128)
!1121 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !351, line: 128, size: 64, elements: !1122)
!1122 = !{!1123, !1335}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1121, file: !351, line: 129, baseType: !1124, size: 64)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !812, line: 66, baseType: !1125)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !634, line: 143, size: 192, elements: !1127)
!1127 = !{!1128, !1333, !1334}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1126, file: !634, line: 145, baseType: !1129, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !812, line: 69, baseType: !1130)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !634, line: 136, size: 192, elements: !1132)
!1132 = !{!1133, !1331, !1332}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1131, file: !634, line: 137, baseType: !1134, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !812, line: 58, baseType: !1135)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !634, line: 737, size: 768, elements: !1137)
!1137 = !{!1138, !1155, !1188, !1194, !1199, !1204, !1211, !1217, !1223, !1228, !1242, !1247, !1253, !1258, !1268, !1273, !1289, !1296, !1303, !1309, !1314, !1320, !1326}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1136, file: !634, line: 738, baseType: !1139, size: 256)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !634, line: 271, size: 256, elements: !1140)
!1140 = !{!1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1139, file: !634, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1139, file: !634, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1139, file: !634, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1139, file: !634, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1139, file: !634, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1139, file: !634, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1139, file: !634, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1139, file: !634, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1139, file: !634, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1139, file: !634, line: 312, baseType: !7, size: 32, offset: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1139, file: !634, line: 316, baseType: !935, size: 32, offset: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1139, file: !634, line: 319, baseType: !7, size: 32, offset: 96)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1139, file: !634, line: 323, baseType: !1098, size: 64, offset: 128)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1139, file: !634, line: 327, baseType: !811, size: 64, offset: 192)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1136, file: !634, line: 739, baseType: !1156, size: 448)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !634, line: 350, size: 448, elements: !1157)
!1157 = !{!1158, !1187}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1156, file: !634, line: 353, baseType: !1159, size: 384)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !634, line: 333, size: 384, elements: !1160)
!1160 = !{!1161, !1162, !1170}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1159, file: !634, line: 336, baseType: !1139, size: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1159, file: !634, line: 343, baseType: !1163, size: 64, offset: 256)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !1165, line: 37, size: 128, elements: !1166)
!1165 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1166 = !{!1167, !1168}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1164, file: !1165, line: 39, baseType: !1163, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1164, file: !1165, line: 40, baseType: !1169, size: 64, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1159, file: !634, line: 344, baseType: !1171, size: 64, offset: 320)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !1165, line: 45, size: 320, elements: !1173)
!1173 = !{!1174, !1175}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1172, file: !1165, line: 47, baseType: !1171, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1172, file: !1165, line: 48, baseType: !1176, size: 256, offset: 64)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !149, line: 1883, size: 256, elements: !1177)
!1177 = !{!1178, !1180, !1181, !1186}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1176, file: !149, line: 1884, baseType: !1179, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1176, file: !149, line: 1885, baseType: !1179, size: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1176, file: !149, line: 1891, baseType: !1182, size: 64, offset: 128)
!1182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1176, file: !149, line: 1891, size: 64, elements: !1183)
!1183 = !{!1184, !1185}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1182, file: !149, line: 1891, baseType: !1134, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1182, file: !149, line: 1891, baseType: !811, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1176, file: !149, line: 1892, baseType: !1169, size: 64, offset: 192)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1156, file: !634, line: 359, baseType: !810, size: 64, offset: 384)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1136, file: !634, line: 740, baseType: !1189, size: 512)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !634, line: 365, size: 512, elements: !1190)
!1190 = !{!1191, !1192, !1193}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1189, file: !634, line: 368, baseType: !1159, size: 384)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1189, file: !634, line: 373, baseType: !811, size: 64, offset: 384)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1189, file: !634, line: 374, baseType: !811, size: 64, offset: 448)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1136, file: !634, line: 741, baseType: !1195, size: 576)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !634, line: 380, size: 576, elements: !1196)
!1196 = !{!1197, !1198}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1195, file: !634, line: 383, baseType: !1189, size: 512)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1195, file: !634, line: 389, baseType: !810, size: 64, offset: 512)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1136, file: !634, line: 742, baseType: !1200, size: 320)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !634, line: 395, size: 320, elements: !1201)
!1201 = !{!1202, !1203}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1200, file: !634, line: 397, baseType: !1139, size: 256)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1200, file: !634, line: 400, baseType: !1124, size: 64, offset: 256)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1136, file: !634, line: 743, baseType: !1205, size: 448)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !634, line: 406, size: 448, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1205, file: !634, line: 408, baseType: !1139, size: 256)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1205, file: !634, line: 412, baseType: !811, size: 64, offset: 256)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1205, file: !634, line: 420, baseType: !811, size: 64, offset: 320)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1205, file: !634, line: 423, baseType: !1124, size: 64, offset: 384)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1136, file: !634, line: 744, baseType: !1212, size: 384)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !634, line: 429, size: 384, elements: !1213)
!1213 = !{!1214, !1215, !1216}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1212, file: !634, line: 431, baseType: !1139, size: 256)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1212, file: !634, line: 434, baseType: !811, size: 64, offset: 256)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1212, file: !634, line: 437, baseType: !1124, size: 64, offset: 320)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1136, file: !634, line: 745, baseType: !1218, size: 384)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !634, line: 443, size: 384, elements: !1219)
!1219 = !{!1220, !1221, !1222}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1218, file: !634, line: 445, baseType: !1139, size: 256)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1218, file: !634, line: 449, baseType: !811, size: 64, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1218, file: !634, line: 453, baseType: !1124, size: 64, offset: 320)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1136, file: !634, line: 746, baseType: !1224, size: 320)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !634, line: 459, size: 320, elements: !1225)
!1225 = !{!1226, !1227}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1224, file: !634, line: 461, baseType: !1139, size: 256)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1224, file: !634, line: 464, baseType: !811, size: 64, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1136, file: !634, line: 747, baseType: !1229, size: 768)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !634, line: 469, size: 768, elements: !1230)
!1230 = !{!1231, !1232, !1233, !1234, !1235}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1229, file: !634, line: 471, baseType: !1139, size: 256)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1229, file: !634, line: 474, baseType: !7, size: 32, offset: 256)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1229, file: !634, line: 475, baseType: !7, size: 32, offset: 288)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1229, file: !634, line: 478, baseType: !811, size: 64, offset: 320)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1229, file: !634, line: 481, baseType: !1236, size: 384, offset: 384)
!1236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 384, elements: !909)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !149, line: 1917, size: 384, elements: !1238)
!1238 = !{!1239, !1240, !1241}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1237, file: !149, line: 1920, baseType: !1176, size: 256)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1237, file: !149, line: 1921, baseType: !811, size: 64, offset: 256)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1237, file: !149, line: 1922, baseType: !935, size: 32, offset: 320)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1136, file: !634, line: 748, baseType: !1243, size: 320)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !634, line: 487, size: 320, elements: !1244)
!1244 = !{!1245, !1246}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1243, file: !634, line: 490, baseType: !1139, size: 256)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1243, file: !634, line: 494, baseType: !725, size: 32, offset: 256)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1136, file: !634, line: 749, baseType: !1248, size: 384)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !634, line: 500, size: 384, elements: !1249)
!1249 = !{!1250, !1251, !1252}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1248, file: !634, line: 502, baseType: !1139, size: 256)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1248, file: !634, line: 506, baseType: !1124, size: 64, offset: 256)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1248, file: !634, line: 510, baseType: !1124, size: 64, offset: 320)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1136, file: !634, line: 750, baseType: !1254, size: 320)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !634, line: 529, size: 320, elements: !1255)
!1255 = !{!1256, !1257}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1254, file: !634, line: 531, baseType: !1139, size: 256)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1254, file: !634, line: 540, baseType: !1124, size: 64, offset: 256)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1136, file: !634, line: 751, baseType: !1259, size: 704)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !634, line: 546, size: 704, elements: !1260)
!1260 = !{!1261, !1262, !1263, !1264, !1265, !1266, !1267}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1259, file: !634, line: 549, baseType: !1189, size: 512)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1259, file: !634, line: 553, baseType: !730, size: 64, offset: 512)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1259, file: !634, line: 557, baseType: !724, size: 8, offset: 576)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1259, file: !634, line: 558, baseType: !724, size: 8, offset: 584)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1259, file: !634, line: 559, baseType: !724, size: 8, offset: 592)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1259, file: !634, line: 560, baseType: !724, size: 8, offset: 600)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1259, file: !634, line: 566, baseType: !810, size: 64, offset: 640)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1136, file: !634, line: 752, baseType: !1269, size: 384)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !634, line: 571, size: 384, elements: !1270)
!1270 = !{!1271, !1272}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1269, file: !634, line: 573, baseType: !1200, size: 320)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1269, file: !634, line: 577, baseType: !811, size: 64, offset: 320)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1136, file: !634, line: 753, baseType: !1274, size: 576)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !634, line: 600, size: 576, elements: !1275)
!1275 = !{!1276, !1277, !1278, !1279, !1288}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1274, file: !634, line: 602, baseType: !1200, size: 320)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1274, file: !634, line: 605, baseType: !811, size: 64, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1274, file: !634, line: 609, baseType: !771, size: 64, offset: 384)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1274, file: !634, line: 612, baseType: !1280, size: 64, offset: 448)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !634, line: 581, size: 320, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286, !1287}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1281, file: !634, line: 583, baseType: !148, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1281, file: !634, line: 586, baseType: !811, size: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1281, file: !634, line: 589, baseType: !811, size: 64, offset: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1281, file: !634, line: 592, baseType: !811, size: 64, offset: 192)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1281, file: !634, line: 595, baseType: !811, size: 64, offset: 256)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1274, file: !634, line: 616, baseType: !1124, size: 64, offset: 512)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1136, file: !634, line: 754, baseType: !1290, size: 512)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !634, line: 622, size: 512, elements: !1291)
!1291 = !{!1292, !1293, !1294, !1295}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1290, file: !634, line: 624, baseType: !1200, size: 320)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1290, file: !634, line: 628, baseType: !811, size: 64, offset: 320)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1290, file: !634, line: 632, baseType: !811, size: 64, offset: 384)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1290, file: !634, line: 636, baseType: !811, size: 64, offset: 448)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1136, file: !634, line: 755, baseType: !1297, size: 704)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !634, line: 642, size: 704, elements: !1298)
!1298 = !{!1299, !1300, !1301, !1302}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1297, file: !634, line: 644, baseType: !1290, size: 512)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1297, file: !634, line: 648, baseType: !811, size: 64, offset: 512)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1297, file: !634, line: 652, baseType: !811, size: 64, offset: 576)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1297, file: !634, line: 653, baseType: !811, size: 64, offset: 640)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1136, file: !634, line: 756, baseType: !1304, size: 448)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !634, line: 663, size: 448, elements: !1305)
!1305 = !{!1306, !1307, !1308}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1304, file: !634, line: 665, baseType: !1200, size: 320)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1304, file: !634, line: 668, baseType: !811, size: 64, offset: 320)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1304, file: !634, line: 673, baseType: !811, size: 64, offset: 384)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1136, file: !634, line: 757, baseType: !1310, size: 384)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !634, line: 694, size: 384, elements: !1311)
!1311 = !{!1312, !1313}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1310, file: !634, line: 696, baseType: !1200, size: 320)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1310, file: !634, line: 699, baseType: !811, size: 64, offset: 320)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1136, file: !634, line: 758, baseType: !1315, size: 384)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !634, line: 681, size: 384, elements: !1316)
!1316 = !{!1317, !1318, !1319}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1315, file: !634, line: 683, baseType: !1139, size: 256)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1315, file: !634, line: 686, baseType: !811, size: 64, offset: 256)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1315, file: !634, line: 689, baseType: !811, size: 64, offset: 320)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1136, file: !634, line: 759, baseType: !1321, size: 384)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !634, line: 707, size: 384, elements: !1322)
!1322 = !{!1323, !1324, !1325}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1321, file: !634, line: 709, baseType: !1139, size: 256)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1321, file: !634, line: 712, baseType: !811, size: 64, offset: 256)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1321, file: !634, line: 712, baseType: !811, size: 64, offset: 320)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1136, file: !634, line: 760, baseType: !1327, size: 320)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !634, line: 718, size: 320, elements: !1328)
!1328 = !{!1329, !1330}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1327, file: !634, line: 720, baseType: !1139, size: 256)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1327, file: !634, line: 723, baseType: !811, size: 64, offset: 256)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1131, file: !634, line: 138, baseType: !1130, size: 64, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1131, file: !634, line: 139, baseType: !1130, size: 64, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1126, file: !634, line: 146, baseType: !1129, size: 64, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1126, file: !634, line: 152, baseType: !1124, size: 64, offset: 128)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1121, file: !351, line: 130, baseType: !985, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1116, file: !351, line: 134, baseType: !729, size: 64, offset: 192)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1116, file: !351, line: 137, baseType: !811, size: 64, offset: 256)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1116, file: !351, line: 138, baseType: !935, size: 32, offset: 320)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1116, file: !351, line: 142, baseType: !7, size: 32, offset: 352)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1116, file: !351, line: 144, baseType: !725, size: 32, offset: 384)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1116, file: !351, line: 145, baseType: !725, size: 32, offset: 416)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1116, file: !351, line: 146, baseType: !1343, size: 64, offset: 448)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !351, line: 119, baseType: !866)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1099, file: !351, line: 220, baseType: !1102, size: 64, offset: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1099, file: !351, line: 223, baseType: !729, size: 64, offset: 128)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1099, file: !351, line: 226, baseType: !1347, size: 64, offset: 192)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !351, line: 185, flags: DIFlagFwdDecl)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1099, file: !351, line: 229, baseType: !1350, size: 128, offset: 256)
!1350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1351, size: 128, elements: !1053)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !351, line: 229, flags: DIFlagFwdDecl)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1099, file: !351, line: 232, baseType: !1098, size: 64, offset: 384)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1099, file: !351, line: 233, baseType: !1098, size: 64, offset: 448)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1099, file: !351, line: 238, baseType: !1356, size: 64, offset: 512)
!1356 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !351, line: 235, size: 64, elements: !1357)
!1357 = !{!1358, !1364}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1356, file: !351, line: 236, baseType: !1359, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !351, line: 273, size: 128, elements: !1361)
!1361 = !{!1362, !1363}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1360, file: !351, line: 275, baseType: !1124, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1360, file: !351, line: 278, baseType: !1124, size: 64, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1356, file: !351, line: 237, baseType: !1365, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !351, line: 259, size: 320, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1372}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1366, file: !351, line: 261, baseType: !985, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1366, file: !351, line: 262, baseType: !985, size: 64, offset: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1366, file: !351, line: 266, baseType: !985, size: 64, offset: 128)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1366, file: !351, line: 267, baseType: !985, size: 64, offset: 192)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1366, file: !351, line: 270, baseType: !725, size: 32, offset: 256)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1099, file: !351, line: 241, baseType: !1343, size: 64, offset: 576)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1099, file: !351, line: 244, baseType: !725, size: 32, offset: 640)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1099, file: !351, line: 247, baseType: !725, size: 32, offset: 672)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1099, file: !351, line: 250, baseType: !725, size: 32, offset: 704)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1099, file: !351, line: 253, baseType: !725, size: 32, offset: 736)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1099, file: !351, line: 256, baseType: !725, size: 32, offset: 768)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !1006, file: !988, line: 179, baseType: !1380, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !988, line: 150, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !988, line: 142, size: 320, elements: !1383)
!1383 = !{!1384, !1385, !1386, !1387, !1390, !1391}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1382, file: !988, line: 144, baseType: !811, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1382, file: !988, line: 145, baseType: !985, size: 64, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1382, file: !988, line: 146, baseType: !985, size: 64, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1382, file: !988, line: 147, baseType: !1388, size: 32, offset: 192)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1389, line: 31, baseType: !725)
!1389 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1382, file: !988, line: 148, baseType: !7, size: 32, offset: 224)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1382, file: !988, line: 149, baseType: !724, size: 8, offset: 256)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !1006, file: !988, line: 180, baseType: !1393, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !988, line: 162, baseType: !1395)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !988, line: 159, size: 128, elements: !1396)
!1396 = !{!1397, !1398}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1395, file: !988, line: 160, baseType: !811, size: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1395, file: !988, line: 161, baseType: !866, size: 64, offset: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !1006, file: !988, line: 181, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !988, line: 181, flags: DIFlagFwdDecl)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !1001, file: !988, line: 317, baseType: !1403, size: 64)
!1403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !866, size: 64, elements: !909)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !1001, file: !988, line: 318, baseType: !1405, size: 320)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !988, line: 188, size: 320, elements: !1406)
!1406 = !{!1407, !1409, !1432}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1405, file: !988, line: 190, baseType: !1408, size: 192)
!1408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1005, size: 192, elements: !884)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1405, file: !988, line: 193, baseType: !1410, size: 64, offset: 192)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !988, line: 206, size: 320, elements: !1412)
!1412 = !{!1413, !1417, !1418, !1419, !1431}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1411, file: !988, line: 208, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !812, line: 62, baseType: !1416)
!1416 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !812, line: 61, flags: DIFlagFwdDecl)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1411, file: !988, line: 211, baseType: !7, size: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1411, file: !988, line: 214, baseType: !866, size: 64, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1411, file: !988, line: 224, baseType: !1420, size: 64, offset: 192)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !988, line: 202, baseType: !1422)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !988, line: 202, size: 128, elements: !1423)
!1423 = !{!1424}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1422, file: !988, line: 202, baseType: !1425, size: 128)
!1425 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !988, line: 200, baseType: !1426)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !988, line: 200, size: 128, elements: !1427)
!1427 = !{!1428, !1429, !1430}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1426, file: !988, line: 200, baseType: !7, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1426, file: !988, line: 200, baseType: !7, size: 32, offset: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1426, file: !988, line: 200, baseType: !1019, size: 64, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1411, file: !988, line: 234, baseType: !1420, size: 64, offset: 256)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1405, file: !988, line: 197, baseType: !866, size: 64, offset: 256)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !1001, file: !988, line: 319, baseType: !873, size: 256)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !1001, file: !988, line: 320, baseType: !892, size: 192)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !814, file: !149, line: 3384, baseType: !1436, size: 1472)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !149, line: 3114, size: 1472, elements: !1437)
!1437 = !{!1438, !1459, !1460, !1461, !1462}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1436, file: !149, line: 3115, baseType: !1439, size: 1216)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !149, line: 2984, size: 1216, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1439, file: !149, line: 2985, baseType: !981, size: 960)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1439, file: !149, line: 2986, baseType: !811, size: 64, offset: 960)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1439, file: !149, line: 2987, baseType: !811, size: 64, offset: 1024)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1439, file: !149, line: 2988, baseType: !811, size: 64, offset: 1088)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1439, file: !149, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1439, file: !149, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1439, file: !149, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1439, file: !149, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1439, file: !149, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1439, file: !149, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1439, file: !149, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1439, file: !149, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1439, file: !149, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1439, file: !149, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1439, file: !149, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1439, file: !149, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1439, file: !149, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1439, file: !149, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1436, file: !149, line: 3117, baseType: !811, size: 64, offset: 1216)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1436, file: !149, line: 3119, baseType: !811, size: 64, offset: 1280)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1436, file: !149, line: 3121, baseType: !811, size: 64, offset: 1344)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1436, file: !149, line: 3123, baseType: !811, size: 64, offset: 1408)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !814, file: !149, line: 3385, baseType: !1464, size: 1088)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !149, line: 2874, size: 1088, elements: !1465)
!1465 = !{!1466, !1467, !1468}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1464, file: !149, line: 2875, baseType: !981, size: 960)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1464, file: !149, line: 2876, baseType: !985, size: 64, offset: 960)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1464, file: !149, line: 2877, baseType: !1469, size: 64, offset: 1024)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1471, line: 172, size: 128, elements: !1472)
!1471 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1472 = !{!1473, !1474, !1475, !1476, !1477, !1478, !1479}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1470, file: !1471, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1470, file: !1471, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1470, file: !1471, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1470, file: !1471, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1470, file: !1471, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1470, file: !1471, line: 195, baseType: !7, size: 32, offset: 32)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1470, file: !1471, line: 199, baseType: !811, size: 64, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !814, file: !149, line: 3386, baseType: !1439, size: 1216)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !814, file: !149, line: 3387, baseType: !1482, size: 1280)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !149, line: 3093, size: 1280, elements: !1483)
!1483 = !{!1484, !1485}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1482, file: !149, line: 3094, baseType: !1439, size: 1216)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1482, file: !149, line: 3095, baseType: !1469, size: 64, offset: 1216)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !814, file: !149, line: 3388, baseType: !1487, size: 1216)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !149, line: 2824, size: 1216, elements: !1488)
!1488 = !{!1489, !1490, !1491, !1492, !1493, !1494}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1487, file: !149, line: 2825, baseType: !943, size: 896)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1487, file: !149, line: 2827, baseType: !811, size: 64, offset: 896)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1487, file: !149, line: 2828, baseType: !811, size: 64, offset: 960)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1487, file: !149, line: 2829, baseType: !811, size: 64, offset: 1024)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1487, file: !149, line: 2830, baseType: !811, size: 64, offset: 1088)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1487, file: !149, line: 2831, baseType: !811, size: 64, offset: 1152)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !814, file: !149, line: 3389, baseType: !1496, size: 1024)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !149, line: 2850, size: 1024, elements: !1497)
!1497 = !{!1498, !1499, !1500}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1496, file: !149, line: 2851, baseType: !981, size: 960)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1496, file: !149, line: 2852, baseType: !725, size: 32, offset: 960)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1496, file: !149, line: 2853, baseType: !725, size: 32, offset: 992)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !814, file: !149, line: 3390, baseType: !1502, size: 1024)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !149, line: 2857, size: 1024, elements: !1503)
!1503 = !{!1504, !1505}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1502, file: !149, line: 2858, baseType: !981, size: 960)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1502, file: !149, line: 2859, baseType: !1469, size: 64, offset: 960)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !814, file: !149, line: 3391, baseType: !1507, size: 960)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !149, line: 2862, size: 960, elements: !1508)
!1508 = !{!1509}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1507, file: !149, line: 2863, baseType: !981, size: 960)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !814, file: !149, line: 3392, baseType: !1511, size: 1472)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !149, line: 3304, size: 1472, elements: !1512)
!1512 = !{!1513}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1511, file: !149, line: 3305, baseType: !1436, size: 1472)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !814, file: !149, line: 3393, baseType: !1515, size: 1792)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !149, line: 3248, size: 1792, elements: !1516)
!1516 = !{!1517, !1518, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1515, file: !149, line: 3249, baseType: !1436, size: 1472)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1515, file: !149, line: 3251, baseType: !1519, size: 64, offset: 1472)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1521, line: 463, size: 1152, elements: !1522)
!1521 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1522 = !{!1523, !1629, !1660, !1661, !1716, !1719, !1720, !1721, !1722, !1723, !1724, !1748, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1520, file: !1521, line: 464, baseType: !1524, size: 64)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !344, line: 194, size: 384, elements: !1526)
!1526 = !{!1527, !1576, !1589, !1603, !1604, !1610}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1525, file: !344, line: 197, baseType: !1528, size: 64)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !344, line: 182, baseType: !1529)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !344, line: 116, size: 704, elements: !1531)
!1531 = !{!1532, !1533, !1534, !1535, !1536, !1537, !1564, !1573, !1574, !1575}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1530, file: !344, line: 119, baseType: !1529, size: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1530, file: !344, line: 122, baseType: !1529, size: 64, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1530, file: !344, line: 123, baseType: !1529, size: 64, offset: 128)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1530, file: !344, line: 126, baseType: !725, size: 32, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1530, file: !344, line: 129, baseType: !343, size: 32, offset: 224)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1530, file: !344, line: 165, baseType: !1538, size: 192, offset: 256)
!1538 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !344, line: 132, size: 192, elements: !1539)
!1539 = !{!1540, !1553, !1559}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1538, file: !344, line: 137, baseType: !1541, size: 128)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !344, line: 133, size: 128, elements: !1542)
!1542 = !{!1543, !1552}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1541, file: !344, line: 135, baseType: !1544, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !344, line: 93, size: 320, elements: !1546)
!1546 = !{!1547, !1548, !1549, !1550, !1551}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1545, file: !344, line: 96, baseType: !1544, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1545, file: !344, line: 97, baseType: !1544, size: 64, offset: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1545, file: !344, line: 101, baseType: !811, size: 64, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1545, file: !344, line: 106, baseType: !811, size: 64, offset: 192)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1545, file: !344, line: 111, baseType: !811, size: 64, offset: 256)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1541, file: !344, line: 136, baseType: !1544, size: 64, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1538, file: !344, line: 151, baseType: !1554, size: 192)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !344, line: 139, size: 192, elements: !1555)
!1555 = !{!1556, !1557, !1558}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1554, file: !344, line: 141, baseType: !811, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1554, file: !344, line: 145, baseType: !811, size: 64, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1554, file: !344, line: 150, baseType: !725, size: 32, offset: 128)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1538, file: !344, line: 164, baseType: !1560, size: 128)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !344, line: 153, size: 128, elements: !1561)
!1561 = !{!1562, !1563}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1560, file: !344, line: 161, baseType: !811, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1560, file: !344, line: 163, baseType: !935, size: 32, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1530, file: !344, line: 168, baseType: !1565, size: 64, offset: 448)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !344, line: 67, size: 320, elements: !1567)
!1567 = !{!1568, !1569, !1570, !1571, !1572}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1566, file: !344, line: 70, baseType: !1565, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1566, file: !344, line: 73, baseType: !1529, size: 64, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1566, file: !344, line: 78, baseType: !811, size: 64, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1566, file: !344, line: 85, baseType: !985, size: 64, offset: 192)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1566, file: !344, line: 88, baseType: !725, size: 32, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1530, file: !344, line: 173, baseType: !985, size: 64, offset: 512)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1530, file: !344, line: 173, baseType: !985, size: 64, offset: 576)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1530, file: !344, line: 177, baseType: !724, size: 8, offset: 640)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1525, file: !344, line: 200, baseType: !1577, size: 64, offset: 64)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !344, line: 185, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !344, line: 185, size: 128, elements: !1580)
!1580 = !{!1581}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1579, file: !344, line: 185, baseType: !1582, size: 128)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !344, line: 184, baseType: !1583)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !344, line: 184, size: 128, elements: !1584)
!1584 = !{!1585, !1586, !1587}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1583, file: !344, line: 184, baseType: !7, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1583, file: !344, line: 184, baseType: !7, size: 32, offset: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1583, file: !344, line: 184, baseType: !1588, size: 64, offset: 64)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1528, size: 64, elements: !909)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1525, file: !344, line: 203, baseType: !1590, size: 64, offset: 128)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !344, line: 189, baseType: !1592)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !344, line: 189, size: 128, elements: !1593)
!1593 = !{!1594}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1592, file: !344, line: 189, baseType: !1595, size: 128)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !344, line: 188, baseType: !1596)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !344, line: 188, size: 128, elements: !1597)
!1597 = !{!1598, !1599, !1600}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1596, file: !344, line: 188, baseType: !7, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1596, file: !344, line: 188, baseType: !7, size: 32, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1596, file: !344, line: 188, baseType: !1601, size: 64, offset: 64)
!1601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1602, size: 64, elements: !909)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !344, line: 180, baseType: !1565)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1525, file: !344, line: 207, baseType: !745, size: 64, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1525, file: !344, line: 211, baseType: !1605, size: 64, offset: 256)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !149, line: 183, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !149, line: 183, size: 128, elements: !1608)
!1608 = !{!1609}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1607, file: !149, line: 183, baseType: !804, size: 128)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1525, file: !344, line: 220, baseType: !1611, size: 64, offset: 320)
!1611 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !344, line: 217, size: 64, elements: !1612)
!1612 = !{!1613, !1614}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1611, file: !344, line: 218, baseType: !1605, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1611, file: !344, line: 219, baseType: !1615, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1617, line: 29, baseType: !1618)
!1617 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1617, line: 29, size: 96, elements: !1619)
!1619 = !{!1620}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1618, file: !1617, line: 29, baseType: !1621, size: 96)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1617, line: 27, baseType: !1622)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1617, line: 27, size: 96, elements: !1623)
!1623 = !{!1624, !1625, !1626}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1622, file: !1617, line: 27, baseType: !7, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1622, file: !1617, line: 27, baseType: !7, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1622, file: !1617, line: 27, baseType: !1627, size: 8, offset: 64)
!1627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1628, size: 8, elements: !909)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1617, line: 26, baseType: !724)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1520, file: !1521, line: 467, baseType: !1630, size: 64, offset: 64)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !351, line: 374, size: 640, elements: !1632)
!1632 = !{!1633, !1635, !1636, !1649, !1650, !1651, !1652, !1653, !1654, !1656, !1658, !1659}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1631, file: !351, line: 377, baseType: !1634, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !812, line: 111, baseType: !1098)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1631, file: !351, line: 378, baseType: !1634, size: 64, offset: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1631, file: !351, line: 381, baseType: !1637, size: 64, offset: 128)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !351, line: 282, baseType: !1639)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !351, line: 282, size: 128, elements: !1640)
!1640 = !{!1641}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1639, file: !351, line: 282, baseType: !1642, size: 128)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !351, line: 281, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !351, line: 281, size: 128, elements: !1644)
!1644 = !{!1645, !1646, !1647}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1643, file: !351, line: 281, baseType: !7, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1643, file: !351, line: 281, baseType: !7, size: 32, offset: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1643, file: !351, line: 281, baseType: !1648, size: 64, offset: 64)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1634, size: 64, elements: !909)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1631, file: !351, line: 384, baseType: !725, size: 32, offset: 192)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1631, file: !351, line: 387, baseType: !725, size: 32, offset: 224)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1631, file: !351, line: 390, baseType: !725, size: 32, offset: 256)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1631, file: !351, line: 394, baseType: !1637, size: 64, offset: 320)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1631, file: !351, line: 396, baseType: !350, size: 32, offset: 384)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1631, file: !351, line: 399, baseType: !1655, size: 64, offset: 416)
!1655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 64, elements: !1053)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1631, file: !351, line: 402, baseType: !1657, size: 64, offset: 480)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1053)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1631, file: !351, line: 406, baseType: !725, size: 32, offset: 544)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1631, file: !351, line: 409, baseType: !725, size: 32, offset: 576)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1520, file: !1521, line: 470, baseType: !1125, size: 64, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1520, file: !1521, line: 473, baseType: !1662, size: 64, offset: 192)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1471, line: 39, size: 1152, elements: !1664)
!1664 = !{!1665, !1666, !1679, !1680, !1681, !1693, !1694, !1698, !1699, !1700, !1701, !1702}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1663, file: !1471, line: 41, baseType: !745, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1663, file: !1471, line: 48, baseType: !1667, size: 64, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !634, line: 35, baseType: !1669)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !634, line: 35, size: 128, elements: !1670)
!1670 = !{!1671}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1669, file: !634, line: 35, baseType: !1672, size: 128)
!1672 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !634, line: 33, baseType: !1673)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !634, line: 33, size: 128, elements: !1674)
!1674 = !{!1675, !1676, !1677}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1673, file: !634, line: 33, baseType: !7, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1673, file: !634, line: 33, baseType: !7, size: 32, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1673, file: !634, line: 33, baseType: !1678, size: 64, offset: 64)
!1678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 64, elements: !909)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1663, file: !1471, line: 51, baseType: !1605, size: 64, offset: 128)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1663, file: !1471, line: 54, baseType: !811, size: 64, offset: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1663, file: !1471, line: 57, baseType: !1682, size: 128, offset: 256)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1683, line: 31, size: 128, elements: !1684)
!1683 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1684 = !{!1685, !1686, !1687, !1688, !1689, !1690, !1691}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1682, file: !1683, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1682, file: !1683, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1682, file: !1683, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1682, file: !1683, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1682, file: !1683, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1682, file: !1683, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1682, file: !1683, line: 56, baseType: !1692, size: 64, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !812, line: 47, baseType: !1037)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1663, file: !1471, line: 60, baseType: !1682, size: 128, offset: 384)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1663, file: !1471, line: 64, baseType: !1695, size: 64, offset: 512)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1697, line: 33, flags: DIFlagFwdDecl)
!1697 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1663, file: !1471, line: 67, baseType: !811, size: 64, offset: 576)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1663, file: !1471, line: 73, baseType: !745, size: 64, offset: 640)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1663, file: !1471, line: 77, baseType: !1692, size: 64, offset: 704)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1663, file: !1471, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1663, file: !1471, line: 82, baseType: !1703, size: 320, offset: 832)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !1165, line: 62, size: 320, elements: !1704)
!1704 = !{!1705, !1711, !1712, !1713, !1714, !1715}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1703, file: !1165, line: 63, baseType: !1706, size: 64)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !1165, line: 56, size: 128, elements: !1708)
!1708 = !{!1709, !1710}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1707, file: !1165, line: 57, baseType: !1706, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1707, file: !1165, line: 58, baseType: !908, size: 8, offset: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1703, file: !1165, line: 64, baseType: !7, size: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1703, file: !1165, line: 66, baseType: !7, size: 32, offset: 96)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1703, file: !1165, line: 68, baseType: !724, size: 8, offset: 128)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1703, file: !1165, line: 70, baseType: !1163, size: 64, offset: 192)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1703, file: !1165, line: 71, baseType: !1171, size: 64, offset: 256)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1520, file: !1521, line: 476, baseType: !1717, size: 64, offset: 256)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1521, line: 476, flags: DIFlagFwdDecl)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1520, file: !1521, line: 479, baseType: !745, size: 64, offset: 320)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1520, file: !1521, line: 484, baseType: !811, size: 64, offset: 384)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1520, file: !1521, line: 488, baseType: !811, size: 64, offset: 448)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1520, file: !1521, line: 493, baseType: !811, size: 64, offset: 512)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1520, file: !1521, line: 496, baseType: !811, size: 64, offset: 576)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1520, file: !1521, line: 501, baseType: !1725, size: 64, offset: 640)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !362, line: 2355, size: 576, elements: !1727)
!1727 = !{!1728, !1731, !1732, !1733, !1734, !1736, !1737, !1742, !1743, !1744, !1745, !1746, !1747}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1726, file: !362, line: 2356, baseType: !1729, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !362, line: 2356, flags: DIFlagFwdDecl)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1726, file: !362, line: 2357, baseType: !730, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1726, file: !362, line: 2358, baseType: !725, size: 32, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1726, file: !362, line: 2359, baseType: !725, size: 32, offset: 160)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1726, file: !362, line: 2360, baseType: !1735, size: 128, offset: 192)
!1735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 128, elements: !1077)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1726, file: !362, line: 2364, baseType: !725, size: 32, offset: 320)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1726, file: !362, line: 2367, baseType: !1738, size: 128, offset: 384)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !362, line: 2349, size: 128, elements: !1739)
!1739 = !{!1740, !1741}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1738, file: !362, line: 2351, baseType: !985, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1738, file: !362, line: 2352, baseType: !866, size: 64, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1726, file: !362, line: 2371, baseType: !361, size: 32, offset: 512)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1726, file: !362, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1726, file: !362, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1726, file: !362, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1726, file: !362, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1726, file: !362, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1520, file: !1521, line: 504, baseType: !1749, size: 64, offset: 704)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1521, line: 504, flags: DIFlagFwdDecl)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1520, file: !1521, line: 507, baseType: !745, size: 64, offset: 768)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1520, file: !1521, line: 510, baseType: !725, size: 32, offset: 832)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1520, file: !1521, line: 513, baseType: !725, size: 32, offset: 864)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1520, file: !1521, line: 516, baseType: !935, size: 32, offset: 896)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1520, file: !1521, line: 519, baseType: !935, size: 32, offset: 928)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1520, file: !1521, line: 522, baseType: !7, size: 32, offset: 960)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1520, file: !1521, line: 523, baseType: !7, size: 32, offset: 992)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1520, file: !1521, line: 528, baseType: !730, size: 64, offset: 1024)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1520, file: !1521, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1520, file: !1521, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1520, file: !1521, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1520, file: !1521, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1520, file: !1521, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1520, file: !1521, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1520, file: !1521, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1520, file: !1521, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1520, file: !1521, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1520, file: !1521, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1520, file: !1521, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1520, file: !1521, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1520, file: !1521, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1520, file: !1521, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1520, file: !1521, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1520, file: !1521, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1515, file: !149, line: 3254, baseType: !811, size: 64, offset: 1536)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1515, file: !149, line: 3257, baseType: !811, size: 64, offset: 1600)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1515, file: !149, line: 3258, baseType: !811, size: 64, offset: 1664)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1515, file: !149, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1515, file: !149, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1515, file: !149, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1515, file: !149, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1515, file: !149, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1515, file: !149, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1515, file: !149, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1515, file: !149, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1515, file: !149, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1515, file: !149, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1515, file: !149, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1515, file: !149, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1515, file: !149, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1515, file: !149, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1515, file: !149, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1515, file: !149, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1515, file: !149, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1515, file: !149, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !814, file: !149, line: 3394, baseType: !1797, size: 1344)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !149, line: 2279, size: 1344, elements: !1798)
!1798 = !{!1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1797, file: !149, line: 2280, baseType: !850, size: 192)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1797, file: !149, line: 2281, baseType: !811, size: 64, offset: 192)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1797, file: !149, line: 2282, baseType: !811, size: 64, offset: 256)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1797, file: !149, line: 2283, baseType: !811, size: 64, offset: 320)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1797, file: !149, line: 2284, baseType: !811, size: 64, offset: 384)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1797, file: !149, line: 2285, baseType: !7, size: 32, offset: 448)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1797, file: !149, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1797, file: !149, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1797, file: !149, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1797, file: !149, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1797, file: !149, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1797, file: !149, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1797, file: !149, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1797, file: !149, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1797, file: !149, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1797, file: !149, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1797, file: !149, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1797, file: !149, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1797, file: !149, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1797, file: !149, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1797, file: !149, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1797, file: !149, line: 2305, baseType: !7, size: 32, offset: 512)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1797, file: !149, line: 2306, baseType: !1388, size: 32, offset: 544)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1797, file: !149, line: 2307, baseType: !811, size: 64, offset: 576)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1797, file: !149, line: 2308, baseType: !811, size: 64, offset: 640)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1797, file: !149, line: 2314, baseType: !1825, size: 64, offset: 704)
!1825 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !149, line: 2309, size: 64, elements: !1826)
!1826 = !{!1827, !1828, !1829}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1825, file: !149, line: 2310, baseType: !725, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1825, file: !149, line: 2311, baseType: !730, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1825, file: !149, line: 2312, baseType: !1830, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !149, line: 2277, flags: DIFlagFwdDecl)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1797, file: !149, line: 2315, baseType: !811, size: 64, offset: 768)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1797, file: !149, line: 2316, baseType: !811, size: 64, offset: 832)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1797, file: !149, line: 2317, baseType: !811, size: 64, offset: 896)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1797, file: !149, line: 2318, baseType: !811, size: 64, offset: 960)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1797, file: !149, line: 2319, baseType: !811, size: 64, offset: 1024)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1797, file: !149, line: 2320, baseType: !811, size: 64, offset: 1088)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1797, file: !149, line: 2321, baseType: !811, size: 64, offset: 1152)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1797, file: !149, line: 2322, baseType: !811, size: 64, offset: 1216)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1797, file: !149, line: 2324, baseType: !1841, size: 64, offset: 1280)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !149, line: 2324, flags: DIFlagFwdDecl)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !814, file: !149, line: 3395, baseType: !1844, size: 320)
!1844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !149, line: 1469, size: 320, elements: !1845)
!1845 = !{!1846, !1847, !1848}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1844, file: !149, line: 1470, baseType: !850, size: 192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1844, file: !149, line: 1471, baseType: !811, size: 64, offset: 192)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1844, file: !149, line: 1472, baseType: !811, size: 64, offset: 256)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !814, file: !149, line: 3396, baseType: !1850, size: 320)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !149, line: 1482, size: 320, elements: !1851)
!1851 = !{!1852, !1853, !1854}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1850, file: !149, line: 1483, baseType: !850, size: 192)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1850, file: !149, line: 1484, baseType: !725, size: 32, offset: 192)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1850, file: !149, line: 1485, baseType: !810, size: 64, offset: 256)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !814, file: !149, line: 3397, baseType: !1856, size: 384)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !149, line: 1829, size: 384, elements: !1857)
!1857 = !{!1858, !1859, !1860, !1861}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1856, file: !149, line: 1830, baseType: !850, size: 192)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1856, file: !149, line: 1831, baseType: !935, size: 32, offset: 192)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1856, file: !149, line: 1832, baseType: !811, size: 64, offset: 256)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1856, file: !149, line: 1835, baseType: !810, size: 64, offset: 320)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !814, file: !149, line: 3398, baseType: !1863, size: 704)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !149, line: 1898, size: 704, elements: !1864)
!1864 = !{!1865, !1866, !1867, !1868, !1869, !1874}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1863, file: !149, line: 1899, baseType: !850, size: 192)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1863, file: !149, line: 1902, baseType: !811, size: 64, offset: 192)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1863, file: !149, line: 1905, baseType: !1134, size: 64, offset: 256)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1863, file: !149, line: 1908, baseType: !7, size: 32, offset: 320)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1863, file: !149, line: 1911, baseType: !1870, size: 64, offset: 384)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1471, line: 117, size: 128, elements: !1872)
!1872 = !{!1873}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1871, file: !1471, line: 120, baseType: !1682, size: 128)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1863, file: !149, line: 1914, baseType: !1176, size: 256, offset: 448)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !814, file: !149, line: 3399, baseType: !1876, size: 704)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !149, line: 2008, size: 704, elements: !1877)
!1877 = !{!1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1876, file: !149, line: 2009, baseType: !850, size: 192)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1876, file: !149, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1876, file: !149, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1876, file: !149, line: 2014, baseType: !935, size: 32, offset: 224)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1876, file: !149, line: 2016, baseType: !811, size: 64, offset: 256)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1876, file: !149, line: 2017, baseType: !1605, size: 64, offset: 320)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1876, file: !149, line: 2019, baseType: !811, size: 64, offset: 384)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1876, file: !149, line: 2020, baseType: !811, size: 64, offset: 448)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1876, file: !149, line: 2021, baseType: !811, size: 64, offset: 512)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1876, file: !149, line: 2022, baseType: !811, size: 64, offset: 576)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1876, file: !149, line: 2023, baseType: !811, size: 64, offset: 640)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !814, file: !149, line: 3400, baseType: !1890, size: 832)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !149, line: 2430, size: 832, elements: !1891)
!1891 = !{!1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1890, file: !149, line: 2431, baseType: !850, size: 192)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1890, file: !149, line: 2433, baseType: !811, size: 64, offset: 192)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1890, file: !149, line: 2434, baseType: !811, size: 64, offset: 256)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1890, file: !149, line: 2435, baseType: !811, size: 64, offset: 320)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1890, file: !149, line: 2436, baseType: !811, size: 64, offset: 384)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1890, file: !149, line: 2437, baseType: !1605, size: 64, offset: 448)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1890, file: !149, line: 2438, baseType: !811, size: 64, offset: 512)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1890, file: !149, line: 2440, baseType: !811, size: 64, offset: 576)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1890, file: !149, line: 2441, baseType: !811, size: 64, offset: 640)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1890, file: !149, line: 2443, baseType: !1902, size: 128, offset: 704)
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !149, line: 182, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !149, line: 182, size: 128, elements: !1904)
!1904 = !{!1905}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1903, file: !149, line: 182, baseType: !804, size: 128)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !814, file: !149, line: 3401, baseType: !1907, size: 320)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !149, line: 3327, size: 320, elements: !1908)
!1908 = !{!1909, !1910, !1917}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1907, file: !149, line: 3329, baseType: !850, size: 192)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1907, file: !149, line: 3330, baseType: !1911, size: 64, offset: 192)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !149, line: 3320, size: 192, elements: !1913)
!1913 = !{!1914, !1915, !1916}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1912, file: !149, line: 3322, baseType: !1911, size: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1912, file: !149, line: 3323, baseType: !1911, size: 64, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1912, file: !149, line: 3324, baseType: !811, size: 64, offset: 128)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1907, file: !149, line: 3331, baseType: !1911, size: 64, offset: 256)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !814, file: !149, line: 3402, baseType: !1919, size: 256)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !149, line: 1540, size: 256, elements: !1920)
!1920 = !{!1921, !1922}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1919, file: !149, line: 1541, baseType: !850, size: 192)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1919, file: !149, line: 1542, baseType: !1923, size: 64, offset: 192)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !149, line: 1538, baseType: !1925)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !149, line: 1538, size: 192, elements: !1926)
!1926 = !{!1927}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1925, file: !149, line: 1538, baseType: !1928, size: 192)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !149, line: 1537, baseType: !1929)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !149, line: 1537, size: 192, elements: !1930)
!1930 = !{!1931, !1932, !1933}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1929, file: !149, line: 1537, baseType: !7, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1929, file: !149, line: 1537, baseType: !7, size: 32, offset: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1929, file: !149, line: 1537, baseType: !1934, size: 128, offset: 64)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1935, size: 128, elements: !909)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !149, line: 1535, baseType: !1936)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !149, line: 1532, size: 128, elements: !1937)
!1937 = !{!1938, !1939}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1936, file: !149, line: 1533, baseType: !811, size: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1936, file: !149, line: 1534, baseType: !811, size: 64, offset: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !814, file: !149, line: 3403, baseType: !1941, size: 512)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !149, line: 1938, size: 512, elements: !1942)
!1942 = !{!1943, !1944, !1945, !1946, !1952, !1953, !1954}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1941, file: !149, line: 1939, baseType: !850, size: 192)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1941, file: !149, line: 1940, baseType: !935, size: 32, offset: 192)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1941, file: !149, line: 1941, baseType: !366, size: 32, offset: 224)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1941, file: !149, line: 1946, baseType: !1947, size: 32, offset: 256)
!1947 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !149, line: 1942, size: 32, elements: !1948)
!1948 = !{!1949, !1950, !1951}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1947, file: !149, line: 1943, baseType: !384, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1947, file: !149, line: 1944, baseType: !391, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1947, file: !149, line: 1945, baseType: !148, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1941, file: !149, line: 1950, baseType: !1124, size: 64, offset: 320)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1941, file: !149, line: 1951, baseType: !1124, size: 64, offset: 384)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1941, file: !149, line: 1953, baseType: !810, size: 64, offset: 448)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !814, file: !149, line: 3404, baseType: !1956, size: 1664)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !149, line: 3337, size: 1664, elements: !1957)
!1957 = !{!1958, !1959}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1956, file: !149, line: 3338, baseType: !850, size: 192)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1956, file: !149, line: 3341, baseType: !1960, size: 1472, offset: 192)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1961, line: 410, size: 1472, elements: !1962)
!1961 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1962 = !{!1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1960, file: !1961, line: 412, baseType: !725, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1960, file: !1961, line: 413, baseType: !725, size: 32, offset: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1960, file: !1961, line: 414, baseType: !725, size: 32, offset: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1960, file: !1961, line: 415, baseType: !725, size: 32, offset: 96)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1960, file: !1961, line: 416, baseType: !725, size: 32, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1960, file: !1961, line: 417, baseType: !725, size: 32, offset: 160)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1960, file: !1961, line: 418, baseType: !724, size: 8, offset: 192)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1960, file: !1961, line: 419, baseType: !724, size: 8, offset: 200)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1960, file: !1961, line: 420, baseType: !1972, size: 8, offset: 208)
!1972 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1960, file: !1961, line: 421, baseType: !1972, size: 8, offset: 216)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1960, file: !1961, line: 422, baseType: !1972, size: 8, offset: 224)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1960, file: !1961, line: 423, baseType: !1972, size: 8, offset: 232)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1960, file: !1961, line: 424, baseType: !1972, size: 8, offset: 240)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1960, file: !1961, line: 425, baseType: !1972, size: 8, offset: 248)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1960, file: !1961, line: 426, baseType: !1972, size: 8, offset: 256)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1960, file: !1961, line: 427, baseType: !1972, size: 8, offset: 264)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1960, file: !1961, line: 428, baseType: !1972, size: 8, offset: 272)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1960, file: !1961, line: 429, baseType: !1972, size: 8, offset: 280)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1960, file: !1961, line: 430, baseType: !1972, size: 8, offset: 288)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1960, file: !1961, line: 431, baseType: !1972, size: 8, offset: 296)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1960, file: !1961, line: 432, baseType: !1972, size: 8, offset: 304)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1960, file: !1961, line: 433, baseType: !1972, size: 8, offset: 312)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1960, file: !1961, line: 434, baseType: !1972, size: 8, offset: 320)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1960, file: !1961, line: 435, baseType: !1972, size: 8, offset: 328)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1960, file: !1961, line: 436, baseType: !1972, size: 8, offset: 336)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1960, file: !1961, line: 437, baseType: !1972, size: 8, offset: 344)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1960, file: !1961, line: 438, baseType: !1972, size: 8, offset: 352)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1960, file: !1961, line: 439, baseType: !1972, size: 8, offset: 360)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1960, file: !1961, line: 440, baseType: !1972, size: 8, offset: 368)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1960, file: !1961, line: 441, baseType: !1972, size: 8, offset: 376)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1960, file: !1961, line: 442, baseType: !1972, size: 8, offset: 384)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1960, file: !1961, line: 443, baseType: !1972, size: 8, offset: 392)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1960, file: !1961, line: 444, baseType: !1972, size: 8, offset: 400)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1960, file: !1961, line: 445, baseType: !1972, size: 8, offset: 408)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1960, file: !1961, line: 446, baseType: !1972, size: 8, offset: 416)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1960, file: !1961, line: 447, baseType: !1972, size: 8, offset: 424)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1960, file: !1961, line: 448, baseType: !1972, size: 8, offset: 432)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1960, file: !1961, line: 449, baseType: !1972, size: 8, offset: 440)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1960, file: !1961, line: 450, baseType: !1972, size: 8, offset: 448)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1960, file: !1961, line: 451, baseType: !1972, size: 8, offset: 456)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1960, file: !1961, line: 452, baseType: !1972, size: 8, offset: 464)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1960, file: !1961, line: 453, baseType: !1972, size: 8, offset: 472)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1960, file: !1961, line: 454, baseType: !1972, size: 8, offset: 480)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1960, file: !1961, line: 455, baseType: !1972, size: 8, offset: 488)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1960, file: !1961, line: 456, baseType: !1972, size: 8, offset: 496)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1960, file: !1961, line: 457, baseType: !1972, size: 8, offset: 504)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1960, file: !1961, line: 458, baseType: !1972, size: 8, offset: 512)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1960, file: !1961, line: 459, baseType: !1972, size: 8, offset: 520)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1960, file: !1961, line: 460, baseType: !1972, size: 8, offset: 528)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1960, file: !1961, line: 461, baseType: !1972, size: 8, offset: 536)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1960, file: !1961, line: 462, baseType: !1972, size: 8, offset: 544)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1960, file: !1961, line: 463, baseType: !1972, size: 8, offset: 552)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1960, file: !1961, line: 464, baseType: !1972, size: 8, offset: 560)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1960, file: !1961, line: 465, baseType: !1972, size: 8, offset: 568)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1960, file: !1961, line: 466, baseType: !1972, size: 8, offset: 576)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1960, file: !1961, line: 467, baseType: !1972, size: 8, offset: 584)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1960, file: !1961, line: 468, baseType: !1972, size: 8, offset: 592)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1960, file: !1961, line: 469, baseType: !1972, size: 8, offset: 600)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1960, file: !1961, line: 470, baseType: !1972, size: 8, offset: 608)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1960, file: !1961, line: 471, baseType: !1972, size: 8, offset: 616)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1960, file: !1961, line: 472, baseType: !1972, size: 8, offset: 624)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1960, file: !1961, line: 473, baseType: !1972, size: 8, offset: 632)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1960, file: !1961, line: 474, baseType: !1972, size: 8, offset: 640)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1960, file: !1961, line: 475, baseType: !1972, size: 8, offset: 648)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1960, file: !1961, line: 476, baseType: !1972, size: 8, offset: 656)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1960, file: !1961, line: 477, baseType: !1972, size: 8, offset: 664)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1960, file: !1961, line: 478, baseType: !1972, size: 8, offset: 672)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1960, file: !1961, line: 479, baseType: !1972, size: 8, offset: 680)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1960, file: !1961, line: 480, baseType: !1972, size: 8, offset: 688)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1960, file: !1961, line: 481, baseType: !1972, size: 8, offset: 696)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1960, file: !1961, line: 482, baseType: !1972, size: 8, offset: 704)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1960, file: !1961, line: 483, baseType: !1972, size: 8, offset: 712)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1960, file: !1961, line: 484, baseType: !1972, size: 8, offset: 720)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1960, file: !1961, line: 485, baseType: !1972, size: 8, offset: 728)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1960, file: !1961, line: 486, baseType: !1972, size: 8, offset: 736)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1960, file: !1961, line: 487, baseType: !1972, size: 8, offset: 744)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1960, file: !1961, line: 488, baseType: !1972, size: 8, offset: 752)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1960, file: !1961, line: 489, baseType: !1972, size: 8, offset: 760)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1960, file: !1961, line: 490, baseType: !1972, size: 8, offset: 768)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1960, file: !1961, line: 491, baseType: !1972, size: 8, offset: 776)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1960, file: !1961, line: 492, baseType: !1972, size: 8, offset: 784)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1960, file: !1961, line: 493, baseType: !1972, size: 8, offset: 792)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1960, file: !1961, line: 494, baseType: !1972, size: 8, offset: 800)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1960, file: !1961, line: 495, baseType: !1972, size: 8, offset: 808)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1960, file: !1961, line: 496, baseType: !1972, size: 8, offset: 816)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1960, file: !1961, line: 497, baseType: !1972, size: 8, offset: 824)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1960, file: !1961, line: 498, baseType: !1972, size: 8, offset: 832)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1960, file: !1961, line: 499, baseType: !1972, size: 8, offset: 840)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1960, file: !1961, line: 500, baseType: !1972, size: 8, offset: 848)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1960, file: !1961, line: 501, baseType: !1972, size: 8, offset: 856)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1960, file: !1961, line: 502, baseType: !1972, size: 8, offset: 864)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1960, file: !1961, line: 503, baseType: !1972, size: 8, offset: 872)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1960, file: !1961, line: 504, baseType: !1972, size: 8, offset: 880)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1960, file: !1961, line: 505, baseType: !1972, size: 8, offset: 888)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1960, file: !1961, line: 506, baseType: !1972, size: 8, offset: 896)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1960, file: !1961, line: 507, baseType: !1972, size: 8, offset: 904)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1960, file: !1961, line: 508, baseType: !1972, size: 8, offset: 912)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1960, file: !1961, line: 509, baseType: !1972, size: 8, offset: 920)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1960, file: !1961, line: 510, baseType: !1972, size: 8, offset: 928)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1960, file: !1961, line: 511, baseType: !1972, size: 8, offset: 936)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1960, file: !1961, line: 512, baseType: !1972, size: 8, offset: 944)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1960, file: !1961, line: 513, baseType: !1972, size: 8, offset: 952)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1960, file: !1961, line: 514, baseType: !1972, size: 8, offset: 960)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1960, file: !1961, line: 515, baseType: !1972, size: 8, offset: 968)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1960, file: !1961, line: 516, baseType: !1972, size: 8, offset: 976)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1960, file: !1961, line: 517, baseType: !1972, size: 8, offset: 984)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1960, file: !1961, line: 518, baseType: !1972, size: 8, offset: 992)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1960, file: !1961, line: 519, baseType: !1972, size: 8, offset: 1000)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1960, file: !1961, line: 520, baseType: !1972, size: 8, offset: 1008)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1960, file: !1961, line: 521, baseType: !1972, size: 8, offset: 1016)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1960, file: !1961, line: 522, baseType: !1972, size: 8, offset: 1024)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1960, file: !1961, line: 523, baseType: !1972, size: 8, offset: 1032)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1960, file: !1961, line: 524, baseType: !1972, size: 8, offset: 1040)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1960, file: !1961, line: 525, baseType: !1972, size: 8, offset: 1048)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1960, file: !1961, line: 526, baseType: !1972, size: 8, offset: 1056)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1960, file: !1961, line: 527, baseType: !1972, size: 8, offset: 1064)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1960, file: !1961, line: 528, baseType: !1972, size: 8, offset: 1072)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1960, file: !1961, line: 529, baseType: !1972, size: 8, offset: 1080)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1960, file: !1961, line: 530, baseType: !1972, size: 8, offset: 1088)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1960, file: !1961, line: 531, baseType: !1972, size: 8, offset: 1096)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1960, file: !1961, line: 532, baseType: !1972, size: 8, offset: 1104)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1960, file: !1961, line: 533, baseType: !1972, size: 8, offset: 1112)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1960, file: !1961, line: 534, baseType: !1972, size: 8, offset: 1120)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1960, file: !1961, line: 535, baseType: !1972, size: 8, offset: 1128)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1960, file: !1961, line: 536, baseType: !1972, size: 8, offset: 1136)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1960, file: !1961, line: 537, baseType: !1972, size: 8, offset: 1144)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1960, file: !1961, line: 538, baseType: !1972, size: 8, offset: 1152)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1960, file: !1961, line: 539, baseType: !1972, size: 8, offset: 1160)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1960, file: !1961, line: 540, baseType: !1972, size: 8, offset: 1168)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1960, file: !1961, line: 541, baseType: !1972, size: 8, offset: 1176)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1960, file: !1961, line: 542, baseType: !1972, size: 8, offset: 1184)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1960, file: !1961, line: 543, baseType: !1972, size: 8, offset: 1192)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1960, file: !1961, line: 544, baseType: !1972, size: 8, offset: 1200)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1960, file: !1961, line: 545, baseType: !1972, size: 8, offset: 1208)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1960, file: !1961, line: 546, baseType: !1972, size: 8, offset: 1216)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1960, file: !1961, line: 547, baseType: !1972, size: 8, offset: 1224)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1960, file: !1961, line: 548, baseType: !1972, size: 8, offset: 1232)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1960, file: !1961, line: 549, baseType: !1972, size: 8, offset: 1240)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1960, file: !1961, line: 550, baseType: !1972, size: 8, offset: 1248)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1960, file: !1961, line: 551, baseType: !1972, size: 8, offset: 1256)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1960, file: !1961, line: 552, baseType: !1972, size: 8, offset: 1264)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1960, file: !1961, line: 553, baseType: !1972, size: 8, offset: 1272)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1960, file: !1961, line: 554, baseType: !1972, size: 8, offset: 1280)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1960, file: !1961, line: 555, baseType: !1972, size: 8, offset: 1288)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1960, file: !1961, line: 556, baseType: !1972, size: 8, offset: 1296)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1960, file: !1961, line: 557, baseType: !1972, size: 8, offset: 1304)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1960, file: !1961, line: 558, baseType: !1972, size: 8, offset: 1312)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1960, file: !1961, line: 559, baseType: !1972, size: 8, offset: 1320)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1960, file: !1961, line: 560, baseType: !1972, size: 8, offset: 1328)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1960, file: !1961, line: 561, baseType: !1972, size: 8, offset: 1336)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1960, file: !1961, line: 562, baseType: !1972, size: 8, offset: 1344)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1960, file: !1961, line: 563, baseType: !1972, size: 8, offset: 1352)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1960, file: !1961, line: 564, baseType: !1972, size: 8, offset: 1360)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1960, file: !1961, line: 565, baseType: !1972, size: 8, offset: 1368)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1960, file: !1961, line: 566, baseType: !1972, size: 8, offset: 1376)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1960, file: !1961, line: 567, baseType: !1972, size: 8, offset: 1384)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1960, file: !1961, line: 568, baseType: !1972, size: 8, offset: 1392)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1960, file: !1961, line: 569, baseType: !1972, size: 8, offset: 1400)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1960, file: !1961, line: 570, baseType: !1972, size: 8, offset: 1408)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1960, file: !1961, line: 571, baseType: !1972, size: 8, offset: 1416)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1960, file: !1961, line: 572, baseType: !1972, size: 8, offset: 1424)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1960, file: !1961, line: 573, baseType: !1972, size: 8, offset: 1432)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1960, file: !1961, line: 574, baseType: !1972, size: 8, offset: 1440)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !814, file: !149, line: 3405, baseType: !2128, size: 384)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !149, line: 3352, size: 384, elements: !2129)
!2129 = !{!2130, !2131}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2128, file: !149, line: 3353, baseType: !850, size: 192)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2128, file: !149, line: 3356, baseType: !2132, size: 192, offset: 192)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1961, line: 578, size: 192, elements: !2133)
!2133 = !{!2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2132, file: !1961, line: 580, baseType: !725, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2132, file: !1961, line: 581, baseType: !725, size: 32, offset: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2132, file: !1961, line: 582, baseType: !725, size: 32, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2132, file: !1961, line: 583, baseType: !725, size: 32, offset: 96)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2132, file: !1961, line: 584, baseType: !724, size: 8, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2132, file: !1961, line: 585, baseType: !724, size: 8, offset: 136)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2132, file: !1961, line: 586, baseType: !724, size: 8, offset: 144)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2132, file: !1961, line: 587, baseType: !724, size: 8, offset: 152)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2132, file: !1961, line: 588, baseType: !724, size: 8, offset: 160)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2132, file: !1961, line: 589, baseType: !724, size: 8, offset: 168)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2132, file: !1961, line: 590, baseType: !724, size: 8, offset: 176)
!2145 = !{!2146}
!2146 = !DISubrange(count: 7)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "cgraph_node_encoder", scope: !738, file: !6, line: 524, baseType: !2148, size: 64, offset: 1344)
!2148 = !DIDerivedType(tag: DW_TAG_typedef, name: "lto_cgraph_encoder_t", file: !6, line: 470, baseType: !2149)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_cgraph_encoder_d", file: !6, line: 461, size: 128, elements: !2151)
!2151 = !{!2152, !2153}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2150, file: !6, line: 464, baseType: !1695, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2150, file: !6, line: 467, baseType: !2154, size: 64, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_heap", file: !399, line: 271, baseType: !2156)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_heap", file: !399, line: 271, size: 128, elements: !2157)
!2157 = !{!2158}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2156, file: !399, line: 271, baseType: !2159, size: 128)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !399, line: 270, baseType: !2160)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !399, line: 270, size: 128, elements: !2161)
!2161 = !{!2162, !2163, !2164}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2160, file: !399, line: 270, baseType: !7, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2160, file: !399, line: 270, baseType: !7, size: 32, offset: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2160, file: !399, line: 270, baseType: !2165, size: 64, offset: 64)
!2165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2166, size: 64, elements: !909)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !399, line: 268, baseType: !2167)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !399, line: 181, size: 2496, elements: !2169)
!2169 = !{!2170, !2171, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2303, !2344, !2354, !2358, !2384, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2168, file: !399, line: 182, baseType: !811, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !2168, file: !399, line: 183, baseType: !2172, size: 64, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !399, line: 314, size: 768, elements: !2174)
!2174 = !{!2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2186, !2187, !2188, !2189, !2191, !2192, !2193}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2173, file: !399, line: 316, baseType: !1343, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2173, file: !399, line: 317, baseType: !2167, size: 64, offset: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !2173, file: !399, line: 318, baseType: !2167, size: 64, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !2173, file: !399, line: 319, baseType: !2172, size: 64, offset: 192)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !2173, file: !399, line: 320, baseType: !2172, size: 64, offset: 256)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !2173, file: !399, line: 321, baseType: !2172, size: 64, offset: 320)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !2173, file: !399, line: 322, baseType: !2172, size: 64, offset: 384)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !2173, file: !399, line: 323, baseType: !1134, size: 64, offset: 448)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2173, file: !399, line: 324, baseType: !729, size: 64, offset: 512)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !2173, file: !399, line: 327, baseType: !2185, size: 32, offset: 576)
!2185 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !399, line: 312, baseType: !398)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !2173, file: !399, line: 330, baseType: !7, size: 32, offset: 608)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2173, file: !399, line: 334, baseType: !725, size: 32, offset: 640)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2173, file: !399, line: 336, baseType: !725, size: 32, offset: 672)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !2173, file: !399, line: 338, baseType: !2190, size: 16, offset: 704)
!2190 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !2173, file: !399, line: 340, baseType: !7, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !2173, file: !399, line: 342, baseType: !7, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !2173, file: !399, line: 344, baseType: !7, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !2168, file: !399, line: 184, baseType: !2172, size: 64, offset: 128)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2168, file: !399, line: 185, baseType: !2167, size: 64, offset: 192)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !2168, file: !399, line: 186, baseType: !2167, size: 64, offset: 256)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !2168, file: !399, line: 188, baseType: !2167, size: 64, offset: 320)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2168, file: !399, line: 190, baseType: !2167, size: 64, offset: 384)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !2168, file: !399, line: 192, baseType: !2167, size: 64, offset: 448)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !2168, file: !399, line: 194, baseType: !2167, size: 64, offset: 512)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !2168, file: !399, line: 196, baseType: !2167, size: 64, offset: 576)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !2168, file: !399, line: 197, baseType: !2167, size: 64, offset: 640)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !2168, file: !399, line: 198, baseType: !2167, size: 64, offset: 704)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !2168, file: !399, line: 199, baseType: !2167, size: 64, offset: 768)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !2168, file: !399, line: 202, baseType: !2167, size: 64, offset: 832)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !2168, file: !399, line: 204, baseType: !2167, size: 64, offset: 896)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !2168, file: !399, line: 207, baseType: !745, size: 64, offset: 960)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2168, file: !399, line: 209, baseType: !729, size: 64, offset: 1024)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !2168, file: !399, line: 214, baseType: !2210, size: 64, offset: 1088)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !1521, line: 177, baseType: !2212)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !1521, line: 177, size: 128, elements: !2213)
!2213 = !{!2214}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2212, file: !1521, line: 177, baseType: !2215, size: 128)
!2215 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !1521, line: 176, baseType: !2216)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !1521, line: 176, size: 128, elements: !2217)
!2217 = !{!2218, !2219, !2220}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2216, file: !1521, line: 176, baseType: !7, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2216, file: !1521, line: 176, baseType: !7, size: 32, offset: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2216, file: !1521, line: 176, baseType: !2221, size: 64, offset: 64)
!2221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2222, size: 64, elements: !909)
!2222 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !1521, line: 174, baseType: !2223)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !422, line: 173, size: 1152, elements: !2225)
!2225 = !{!2226, !2250, !2254, !2269, !2270, !2274, !2279, !2280, !2284}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2224, file: !422, line: 175, baseType: !2227, size: 640)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !422, line: 114, size: 640, elements: !2228)
!2228 = !{!2229, !2230, !2231, !2235, !2239, !2241, !2242, !2243, !2245, !2246, !2247, !2248, !2249}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2227, file: !422, line: 117, baseType: !421, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2227, file: !422, line: 121, baseType: !730, size: 64, offset: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2227, file: !422, line: 125, baseType: !2232, size: 64, offset: 128)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DISubroutineType(types: !2234)
!2234 = !{!724}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2227, file: !422, line: 130, baseType: !2236, size: 64, offset: 192)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = !DISubroutineType(types: !2238)
!2238 = !{!7}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2227, file: !422, line: 133, baseType: !2240, size: 64, offset: 256)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2227, file: !422, line: 136, baseType: !2240, size: 64, offset: 320)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2227, file: !422, line: 139, baseType: !725, size: 32, offset: 384)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2227, file: !422, line: 143, baseType: !2244, size: 32, offset: 416)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !429, line: 80, baseType: !428)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2227, file: !422, line: 146, baseType: !7, size: 32, offset: 448)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2227, file: !422, line: 147, baseType: !7, size: 32, offset: 480)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2227, file: !422, line: 148, baseType: !7, size: 32, offset: 512)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2227, file: !422, line: 151, baseType: !7, size: 32, offset: 544)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2227, file: !422, line: 152, baseType: !7, size: 32, offset: 576)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !2224, file: !422, line: 179, baseType: !2251, size: 64, offset: 640)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!2252 = !DISubroutineType(types: !2253)
!2253 = !{null}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !2224, file: !422, line: 182, baseType: !2255, size: 64, offset: 704)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DISubroutineType(types: !2257)
!2257 = !{null, !2258}
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !399, line: 276, size: 192, elements: !2260)
!2260 = !{!2261, !2262, !2268}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !2259, file: !399, line: 278, baseType: !745, size: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2259, file: !399, line: 279, baseType: !2263, size: 64, offset: 64)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !399, line: 272, baseType: !2265)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !399, line: 272, size: 128, elements: !2266)
!2266 = !{!2267}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2265, file: !399, line: 272, baseType: !2159, size: 128)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2259, file: !399, line: 280, baseType: !729, size: 64, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !2224, file: !422, line: 187, baseType: !2251, size: 64, offset: 768)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !2224, file: !422, line: 188, baseType: !2271, size: 64, offset: 832)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{null, !2167}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !2224, file: !422, line: 191, baseType: !2275, size: 64, offset: 896)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DISubroutineType(types: !2277)
!2277 = !{null, !2167, !2278}
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !2224, file: !422, line: 195, baseType: !7, size: 32, offset: 960)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !2224, file: !422, line: 196, baseType: !2281, size: 64, offset: 1024)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!7, !2167}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !2224, file: !422, line: 197, baseType: !2285, size: 64, offset: 1088)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64)
!2286 = !DISubroutineType(types: !2287)
!2287 = !{null, !2288}
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !399, line: 358, size: 320, elements: !2290)
!2290 = !{!2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2289, file: !399, line: 359, baseType: !811, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2289, file: !399, line: 361, baseType: !2288, size: 64, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !2289, file: !399, line: 363, baseType: !2288, size: 64, offset: 128)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !2289, file: !399, line: 366, baseType: !2288, size: 64, offset: 192)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2289, file: !399, line: 368, baseType: !725, size: 32, offset: 256)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !2289, file: !399, line: 372, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !2289, file: !399, line: 375, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !2289, file: !399, line: 378, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !2289, file: !399, line: 380, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2289, file: !399, line: 382, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !2289, file: !399, line: 384, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2289, file: !399, line: 387, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !2168, file: !399, line: 216, baseType: !2304, size: 320, offset: 1152)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !399, line: 88, size: 320, elements: !2305)
!2305 = !{!2306, !2328, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !2304, file: !399, line: 90, baseType: !2307, size: 64)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !6, line: 540, size: 512, elements: !2309)
!2309 = !{!2310, !2321, !2322, !2323, !2324, !2325, !2326, !2327}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "current_decl_state", scope: !2308, file: !6, line: 543, baseType: !2311, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_in_decl_state", file: !6, line: 502, size: 960, elements: !2313)
!2313 = !{!2314, !2320}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !2312, file: !6, line: 505, baseType: !2315, size: 896)
!2315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2316, size: 896, elements: !2145)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_tree_ref_table", file: !6, line: 473, size: 128, elements: !2317)
!2317 = !{!2318, !2319}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "trees", scope: !2316, file: !6, line: 476, baseType: !1169, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2316, file: !6, line: 479, baseType: !7, size: 32, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "fn_decl", scope: !2312, file: !6, line: 509, baseType: !811, size: 64, offset: 896)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "global_decl_state", scope: !2308, file: !6, line: 547, baseType: !2311, size: 64, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "cgraph_node_encoder", scope: !2308, file: !6, line: 550, baseType: !2148, size: 64, offset: 128)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl_states", scope: !2308, file: !6, line: 553, baseType: !745, size: 64, offset: 192)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "file_name", scope: !2308, file: !6, line: 556, baseType: !730, size: 64, offset: 256)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "needs_ltrans_p", scope: !2308, file: !6, line: 559, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "section_hash_table", scope: !2308, file: !6, line: 562, baseType: !745, size: 64, offset: 384)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "renaming_hash_table", scope: !2308, file: !6, line: 565, baseType: !745, size: 64, offset: 448)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !2304, file: !399, line: 92, baseType: !2329, size: 192, offset: 64)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !399, line: 57, size: 192, elements: !2330)
!2330 = !{!2331, !2332, !2333, !2334, !2335}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !2329, file: !399, line: 60, baseType: !866, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !2329, file: !399, line: 63, baseType: !725, size: 32, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !2329, file: !399, line: 65, baseType: !725, size: 32, offset: 96)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !2329, file: !399, line: 67, baseType: !725, size: 32, offset: 128)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !2329, file: !399, line: 69, baseType: !725, size: 32, offset: 160)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !2304, file: !399, line: 96, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !2304, file: !399, line: 99, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !2304, file: !399, line: 102, baseType: !7, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !2304, file: !399, line: 105, baseType: !7, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2304, file: !399, line: 108, baseType: !7, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !2304, file: !399, line: 112, baseType: !7, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !2304, file: !399, line: 116, baseType: !7, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !2304, file: !399, line: 120, baseType: !7, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !2168, file: !399, line: 217, baseType: !2345, size: 320, offset: 1472)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !399, line: 126, size: 320, elements: !2346)
!2346 = !{!2347, !2348, !2349, !2350, !2351, !2352, !2353}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !2345, file: !399, line: 128, baseType: !866, size: 64)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !2345, file: !399, line: 130, baseType: !866, size: 64, offset: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !2345, file: !399, line: 134, baseType: !2167, size: 64, offset: 128)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2345, file: !399, line: 137, baseType: !725, size: 32, offset: 192)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2345, file: !399, line: 138, baseType: !725, size: 32, offset: 224)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !2345, file: !399, line: 141, baseType: !725, size: 32, offset: 256)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !2345, file: !399, line: 144, baseType: !724, size: 8, offset: 288)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2168, file: !399, line: 218, baseType: !2355, size: 32, offset: 1792)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !399, line: 150, size: 32, elements: !2356)
!2356 = !{!2357}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !2355, file: !399, line: 151, baseType: !7, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2168, file: !399, line: 219, baseType: !2359, size: 192, offset: 1856)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !399, line: 171, size: 192, elements: !2360)
!2360 = !{!2361, !2382, !2383}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !2359, file: !399, line: 173, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !399, line: 169, baseType: !2364)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !399, line: 169, size: 128, elements: !2365)
!2365 = !{!2366}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2364, file: !399, line: 169, baseType: !2367, size: 128)
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !399, line: 168, baseType: !2368)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !399, line: 168, size: 128, elements: !2369)
!2369 = !{!2370, !2371, !2372}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2368, file: !399, line: 168, baseType: !7, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2368, file: !399, line: 168, baseType: !7, size: 32, offset: 32)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2368, file: !399, line: 168, baseType: !2373, size: 64, offset: 64)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2374, size: 64, elements: !909)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !399, line: 167, baseType: !2375)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !399, line: 156, size: 192, elements: !2377)
!2377 = !{!2378, !2379, !2380, !2381}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !2376, file: !399, line: 159, baseType: !811, size: 64)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !2376, file: !399, line: 161, baseType: !811, size: 64, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !2376, file: !399, line: 163, baseType: !724, size: 8, offset: 128)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !2376, file: !399, line: 165, baseType: !724, size: 8, offset: 136)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !2359, file: !399, line: 174, baseType: !1692, size: 64, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !2359, file: !399, line: 175, baseType: !1692, size: 64, offset: 128)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !2168, file: !399, line: 220, baseType: !2385, size: 256, offset: 2048)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !399, line: 74, size: 256, elements: !2386)
!2386 = !{!2387, !2388, !2389, !2390, !2391, !2392}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !2385, file: !399, line: 76, baseType: !866, size: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !2385, file: !399, line: 77, baseType: !866, size: 64, offset: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2385, file: !399, line: 78, baseType: !811, size: 64, offset: 128)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !2385, file: !399, line: 79, baseType: !724, size: 8, offset: 192)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !2385, file: !399, line: 80, baseType: !724, size: 8, offset: 200)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !2385, file: !399, line: 82, baseType: !724, size: 8, offset: 208)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2168, file: !399, line: 223, baseType: !1343, size: 64, offset: 2304)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2168, file: !399, line: 225, baseType: !725, size: 32, offset: 2368)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2168, file: !399, line: 227, baseType: !725, size: 32, offset: 2400)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2168, file: !399, line: 231, baseType: !725, size: 32, offset: 2432)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !2168, file: !399, line: 238, baseType: !7, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !2168, file: !399, line: 241, baseType: !7, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !2168, file: !399, line: 244, baseType: !7, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !2168, file: !399, line: 251, baseType: !7, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !2168, file: !399, line: 253, baseType: !7, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !2168, file: !399, line: 256, baseType: !7, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !2168, file: !399, line: 258, baseType: !7, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2168, file: !399, line: 260, baseType: !7, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !2168, file: !399, line: 262, baseType: !7, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !2168, file: !399, line: 265, baseType: !7, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "fn_decl", scope: !738, file: !6, line: 528, baseType: !811, size: 64, offset: 1408)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "main_stream", scope: !733, file: !6, line: 631, baseType: !2409, size: 64, offset: 128)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_output_stream", file: !6, line: 577, size: 320, elements: !2411)
!2411 = !{!2412, !2417, !2418, !2419, !2420, !2421}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "first_block", scope: !2410, file: !6, line: 580, baseType: !2413, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_char_ptr_base", file: !6, line: 568, size: 64, elements: !2415)
!2415 = !{!2416}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2414, file: !6, line: 570, baseType: !727, size: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "current_block", scope: !2410, file: !6, line: 583, baseType: !2413, size: 64, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "current_pointer", scope: !2410, file: !6, line: 586, baseType: !727, size: 64, offset: 128)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "left_in_block", scope: !2410, file: !6, line: 589, baseType: !7, size: 32, offset: 192)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2410, file: !6, line: 592, baseType: !7, size: 32, offset: 224)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "total_size", scope: !2410, file: !6, line: 595, baseType: !7, size: 32, offset: 256)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "string_stream", scope: !733, file: !6, line: 634, baseType: !2409, size: 64, offset: 192)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_stream", scope: !733, file: !6, line: 637, baseType: !2409, size: 64, offset: 256)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "string_hash_table", scope: !733, file: !6, line: 641, baseType: !745, size: 64, offset: 320)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "cgraph_node", scope: !733, file: !6, line: 645, baseType: !2167, size: 64, offset: 384)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "current_file", scope: !733, file: !6, line: 650, baseType: !730, size: 64, offset: 448)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "current_line", scope: !733, file: !6, line: 651, baseType: !725, size: 32, offset: 512)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "current_col", scope: !733, file: !6, line: 652, baseType: !725, size: 32, offset: 544)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !733, file: !6, line: 655, baseType: !724, size: 8, offset: 576)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "writer_cache", scope: !733, file: !6, line: 658, baseType: !2431, size: 64, offset: 640)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_streamer_cache_d", file: !6, line: 346, size: 256, elements: !2433)
!2433 = !{!2434, !2435, !2436, !2437}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "node_map", scope: !2432, file: !6, line: 349, baseType: !745, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "next_slot", scope: !2432, file: !6, line: 352, baseType: !7, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2432, file: !6, line: 355, baseType: !1605, size: 64, offset: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !2432, file: !6, line: 358, baseType: !2438, size: 64, offset: 192)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64)
!2439 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_unsigned_heap", file: !1617, line: 35, baseType: !2440)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_unsigned_heap", file: !1617, line: 35, size: 96, elements: !2441)
!2441 = !{!2442}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2440, file: !1617, line: 35, baseType: !2443, size: 96)
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_unsigned_base", file: !1617, line: 34, baseType: !2444)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_unsigned_base", file: !1617, line: 34, size: 96, elements: !2445)
!2445 = !{!2446, !2447, !2448}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2444, file: !1617, line: 34, baseType: !7, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2444, file: !1617, line: 34, baseType: !7, size: 32, offset: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2444, file: !1617, line: 34, baseType: !2449, size: 32, offset: 64)
!2449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !909)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2452)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "string_slot", file: !3, line: 48, size: 128, elements: !2453)
!2453 = !{!2454, !2455, !2456}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2452, file: !3, line: 50, baseType: !730, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2452, file: !3, line: 51, baseType: !725, size: 32, offset: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "slot_num", scope: !2452, file: !3, line: 52, baseType: !7, size: 32, offset: 96)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitpack_word_t", file: !6, line: 152, baseType: !773)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1136)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2463, line: 27, baseType: !2464)
!2463 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2465, line: 45, baseType: !773)
!2465 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2466 = !{!0, !2467}
!2467 = !DIGlobalVariableExpression(var: !2468, expr: !DIExpression())
!2468 = distinct !DIGlobalVariable(name: "pass_ipa_lto_finish_out", scope: !2, file: !3, line: 2548, type: !2224, isLocal: false, isDefinition: true)
!2469 = !{i32 2, !"Dwarf Version", i32 4}
!2470 = !{i32 2, !"Debug Info Version", i32 3}
!2471 = !{i32 1, !"wchar_size", i32 4}
!2472 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2473 = distinct !DISubprogram(name: "vprintf", scope: !2474, file: !2474, line: 39, type: !2475, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2485)
!2474 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2475 = !DISubroutineType(types: !2476)
!2476 = !{!725, !2477, !2478}
!2477 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !730)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2480)
!2480 = !{!2481, !2482, !2483, !2484}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2479, file: !3, baseType: !7, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2479, file: !3, baseType: !7, size: 32, offset: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2479, file: !3, baseType: !729, size: 64, offset: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2479, file: !3, baseType: !729, size: 64, offset: 128)
!2485 = !{!2486, !2487}
!2486 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2473, file: !2474, line: 39, type: !2477)
!2487 = !DILocalVariable(name: "__arg", arg: 2, scope: !2473, file: !2474, line: 39, type: !2478)
!2488 = !DILocation(line: 0, scope: !2473)
!2489 = !DILocation(line: 41, column: 20, scope: !2473)
!2490 = !DILocation(line: 41, column: 10, scope: !2473)
!2491 = !DILocation(line: 41, column: 3, scope: !2473)
!2492 = distinct !DISubprogram(name: "getchar", scope: !2474, file: !2474, line: 47, type: !2493, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2495)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!725}
!2495 = !{}
!2496 = !DILocation(line: 49, column: 16, scope: !2492)
!2497 = !DILocation(line: 49, column: 10, scope: !2492)
!2498 = !DILocation(line: 49, column: 3, scope: !2492)
!2499 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2474, file: !2474, line: 56, type: !2500, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2551)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{!725, !2502}
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2504, line: 7, baseType: !2505)
!2504 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2506, line: 49, size: 1728, elements: !2507)
!2506 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2507 = !{!2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2523, !2525, !2526, !2527, !2529, !2530, !2531, !2532, !2535, !2537, !2540, !2543, !2544, !2545, !2546, !2547}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2505, file: !2506, line: 51, baseType: !725, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2505, file: !2506, line: 54, baseType: !727, size: 64, offset: 64)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2505, file: !2506, line: 55, baseType: !727, size: 64, offset: 128)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2505, file: !2506, line: 56, baseType: !727, size: 64, offset: 192)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2505, file: !2506, line: 57, baseType: !727, size: 64, offset: 256)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2505, file: !2506, line: 58, baseType: !727, size: 64, offset: 320)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2505, file: !2506, line: 59, baseType: !727, size: 64, offset: 384)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2505, file: !2506, line: 60, baseType: !727, size: 64, offset: 448)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2505, file: !2506, line: 61, baseType: !727, size: 64, offset: 512)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2505, file: !2506, line: 64, baseType: !727, size: 64, offset: 576)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2505, file: !2506, line: 65, baseType: !727, size: 64, offset: 640)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2505, file: !2506, line: 66, baseType: !727, size: 64, offset: 704)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2505, file: !2506, line: 68, baseType: !2521, size: 64, offset: 768)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2506, line: 36, flags: DIFlagFwdDecl)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2505, file: !2506, line: 70, baseType: !2524, size: 64, offset: 832)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2505, file: !2506, line: 72, baseType: !725, size: 32, offset: 896)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2505, file: !2506, line: 73, baseType: !725, size: 32, offset: 928)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2505, file: !2506, line: 74, baseType: !2528, size: 64, offset: 960)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2465, line: 152, baseType: !866)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2505, file: !2506, line: 77, baseType: !2190, size: 16, offset: 1024)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2505, file: !2506, line: 78, baseType: !1972, size: 8, offset: 1040)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2505, file: !2506, line: 79, baseType: !908, size: 8, offset: 1048)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2505, file: !2506, line: 81, baseType: !2533, size: 64, offset: 1088)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2534 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2506, line: 43, baseType: null)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2505, file: !2506, line: 89, baseType: !2536, size: 64, offset: 1152)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2465, line: 153, baseType: !866)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2505, file: !2506, line: 91, baseType: !2538, size: 64, offset: 1216)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2506, line: 37, flags: DIFlagFwdDecl)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2505, file: !2506, line: 92, baseType: !2541, size: 64, offset: 1280)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2542 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2506, line: 38, flags: DIFlagFwdDecl)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2505, file: !2506, line: 93, baseType: !2524, size: 64, offset: 1344)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2505, file: !2506, line: 94, baseType: !729, size: 64, offset: 1408)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2505, file: !2506, line: 95, baseType: !771, size: 64, offset: 1472)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2505, file: !2506, line: 96, baseType: !725, size: 32, offset: 1536)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2505, file: !2506, line: 98, baseType: !2548, size: 160, offset: 1568)
!2548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !728, size: 160, elements: !2549)
!2549 = !{!2550}
!2550 = !DISubrange(count: 20)
!2551 = !{!2552}
!2552 = !DILocalVariable(name: "__fp", arg: 1, scope: !2499, file: !2474, line: 56, type: !2502)
!2553 = !DILocation(line: 0, scope: !2499)
!2554 = !DILocation(line: 58, column: 10, scope: !2499)
!2555 = !DILocation(line: 58, column: 3, scope: !2499)
!2556 = distinct !DISubprogram(name: "getc_unlocked", scope: !2474, file: !2474, line: 66, type: !2500, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2557)
!2557 = !{!2558}
!2558 = !DILocalVariable(name: "__fp", arg: 1, scope: !2556, file: !2474, line: 66, type: !2502)
!2559 = !DILocation(line: 0, scope: !2556)
!2560 = !DILocation(line: 68, column: 10, scope: !2556)
!2561 = !DILocation(line: 68, column: 3, scope: !2556)
!2562 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2474, file: !2474, line: 73, type: !2493, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2495)
!2563 = !DILocation(line: 75, column: 10, scope: !2562)
!2564 = !DILocation(line: 75, column: 3, scope: !2562)
!2565 = distinct !DISubprogram(name: "putchar", scope: !2474, file: !2474, line: 82, type: !2566, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2568)
!2566 = !DISubroutineType(types: !2567)
!2567 = !{!725, !725}
!2568 = !{!2569}
!2569 = !DILocalVariable(name: "__c", arg: 1, scope: !2565, file: !2474, line: 82, type: !725)
!2570 = !DILocation(line: 0, scope: !2565)
!2571 = !DILocation(line: 84, column: 21, scope: !2565)
!2572 = !DILocation(line: 84, column: 10, scope: !2565)
!2573 = !DILocation(line: 84, column: 3, scope: !2565)
!2574 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2474, file: !2474, line: 91, type: !2575, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2577)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{!725, !725, !2502}
!2577 = !{!2578, !2579}
!2578 = !DILocalVariable(name: "__c", arg: 1, scope: !2574, file: !2474, line: 91, type: !725)
!2579 = !DILocalVariable(name: "__stream", arg: 2, scope: !2574, file: !2474, line: 91, type: !2502)
!2580 = !DILocation(line: 0, scope: !2574)
!2581 = !DILocation(line: 93, column: 10, scope: !2574)
!2582 = !DILocation(line: 93, column: 3, scope: !2574)
!2583 = distinct !DISubprogram(name: "putc_unlocked", scope: !2474, file: !2474, line: 101, type: !2575, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2584)
!2584 = !{!2585, !2586}
!2585 = !DILocalVariable(name: "__c", arg: 1, scope: !2583, file: !2474, line: 101, type: !725)
!2586 = !DILocalVariable(name: "__stream", arg: 2, scope: !2583, file: !2474, line: 101, type: !2502)
!2587 = !DILocation(line: 0, scope: !2583)
!2588 = !DILocation(line: 103, column: 10, scope: !2583)
!2589 = !DILocation(line: 103, column: 3, scope: !2583)
!2590 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2474, file: !2474, line: 108, type: !2566, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2591)
!2591 = !{!2592}
!2592 = !DILocalVariable(name: "__c", arg: 1, scope: !2590, file: !2474, line: 108, type: !725)
!2593 = !DILocation(line: 0, scope: !2590)
!2594 = !DILocation(line: 110, column: 10, scope: !2590)
!2595 = !DILocation(line: 110, column: 3, scope: !2590)
!2596 = distinct !DISubprogram(name: "getline", scope: !2474, file: !2474, line: 118, type: !2597, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2601)
!2597 = !DISubroutineType(types: !2598)
!2598 = !{!2599, !726, !2600, !2502}
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2465, line: 193, baseType: !866)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!2601 = !{!2602, !2603, !2604}
!2602 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2596, file: !2474, line: 118, type: !726)
!2603 = !DILocalVariable(name: "__n", arg: 2, scope: !2596, file: !2474, line: 118, type: !2600)
!2604 = !DILocalVariable(name: "__stream", arg: 3, scope: !2596, file: !2474, line: 118, type: !2502)
!2605 = !DILocation(line: 0, scope: !2596)
!2606 = !DILocation(line: 120, column: 10, scope: !2596)
!2607 = !DILocation(line: 120, column: 3, scope: !2596)
!2608 = distinct !DISubprogram(name: "feof_unlocked", scope: !2474, file: !2474, line: 128, type: !2500, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2609)
!2609 = !{!2610}
!2610 = !DILocalVariable(name: "__stream", arg: 1, scope: !2608, file: !2474, line: 128, type: !2502)
!2611 = !DILocation(line: 0, scope: !2608)
!2612 = !DILocation(line: 130, column: 10, scope: !2608)
!2613 = !DILocation(line: 130, column: 3, scope: !2608)
!2614 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2474, file: !2474, line: 135, type: !2500, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2615)
!2615 = !{!2616}
!2616 = !DILocalVariable(name: "__stream", arg: 1, scope: !2614, file: !2474, line: 135, type: !2502)
!2617 = !DILocation(line: 0, scope: !2614)
!2618 = !DILocation(line: 137, column: 10, scope: !2614)
!2619 = !DILocation(line: 137, column: 3, scope: !2614)
!2620 = distinct !DISubprogram(name: "tolower", scope: !2621, file: !2621, line: 207, type: !2566, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2622)
!2621 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2622 = !{!2623}
!2623 = !DILocalVariable(name: "__c", arg: 1, scope: !2620, file: !2621, line: 207, type: !725)
!2624 = !DILocation(line: 0, scope: !2620)
!2625 = !DILocation(line: 209, column: 22, scope: !2620)
!2626 = !DILocation(line: 209, column: 39, scope: !2620)
!2627 = !DILocation(line: 209, column: 38, scope: !2620)
!2628 = !DILocation(line: 209, column: 37, scope: !2620)
!2629 = !DILocation(line: 209, column: 10, scope: !2620)
!2630 = !DILocation(line: 209, column: 3, scope: !2620)
!2631 = distinct !DISubprogram(name: "toupper", scope: !2621, file: !2621, line: 213, type: !2566, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2632)
!2632 = !{!2633}
!2633 = !DILocalVariable(name: "__c", arg: 1, scope: !2631, file: !2621, line: 213, type: !725)
!2634 = !DILocation(line: 0, scope: !2631)
!2635 = !DILocation(line: 215, column: 22, scope: !2631)
!2636 = !DILocation(line: 215, column: 39, scope: !2631)
!2637 = !DILocation(line: 215, column: 38, scope: !2631)
!2638 = !DILocation(line: 215, column: 37, scope: !2631)
!2639 = !DILocation(line: 215, column: 10, scope: !2631)
!2640 = !DILocation(line: 215, column: 3, scope: !2631)
!2641 = distinct !DISubprogram(name: "atoi", scope: !2642, file: !2642, line: 361, type: !2643, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2645)
!2642 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2643 = !DISubroutineType(types: !2644)
!2644 = !{!725, !730}
!2645 = !{!2646}
!2646 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2641, file: !2642, line: 361, type: !730)
!2647 = !DILocation(line: 0, scope: !2641)
!2648 = !DILocation(line: 363, column: 16, scope: !2641)
!2649 = !DILocation(line: 363, column: 10, scope: !2641)
!2650 = !DILocation(line: 363, column: 3, scope: !2641)
!2651 = distinct !DISubprogram(name: "atol", scope: !2642, file: !2642, line: 366, type: !2652, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2654)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{!866, !730}
!2654 = !{!2655}
!2655 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2651, file: !2642, line: 366, type: !730)
!2656 = !DILocation(line: 0, scope: !2651)
!2657 = !DILocation(line: 368, column: 10, scope: !2651)
!2658 = !DILocation(line: 368, column: 3, scope: !2651)
!2659 = distinct !DISubprogram(name: "atoll", scope: !2642, file: !2642, line: 373, type: !2660, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2663)
!2660 = !DISubroutineType(types: !2661)
!2661 = !{!2662, !730}
!2662 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2663 = !{!2664}
!2664 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2659, file: !2642, line: 373, type: !730)
!2665 = !DILocation(line: 0, scope: !2659)
!2666 = !DILocation(line: 375, column: 10, scope: !2659)
!2667 = !DILocation(line: 375, column: 3, scope: !2659)
!2668 = distinct !DISubprogram(name: "bsearch", scope: !2669, file: !2669, line: 20, type: !2670, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2673)
!2669 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2670 = !DISubroutineType(types: !2671)
!2671 = !{!729, !756, !756, !771, !771, !2672}
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2642, line: 808, baseType: !760)
!2673 = !{!2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683}
!2674 = !DILocalVariable(name: "__key", arg: 1, scope: !2668, file: !2669, line: 20, type: !756)
!2675 = !DILocalVariable(name: "__base", arg: 2, scope: !2668, file: !2669, line: 20, type: !756)
!2676 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2668, file: !2669, line: 20, type: !771)
!2677 = !DILocalVariable(name: "__size", arg: 4, scope: !2668, file: !2669, line: 20, type: !771)
!2678 = !DILocalVariable(name: "__compar", arg: 5, scope: !2668, file: !2669, line: 21, type: !2672)
!2679 = !DILocalVariable(name: "__l", scope: !2668, file: !2669, line: 23, type: !771)
!2680 = !DILocalVariable(name: "__u", scope: !2668, file: !2669, line: 23, type: !771)
!2681 = !DILocalVariable(name: "__idx", scope: !2668, file: !2669, line: 23, type: !771)
!2682 = !DILocalVariable(name: "__p", scope: !2668, file: !2669, line: 24, type: !756)
!2683 = !DILocalVariable(name: "__comparison", scope: !2668, file: !2669, line: 25, type: !725)
!2684 = !DILocation(line: 0, scope: !2668)
!2685 = !DILocation(line: 29, column: 3, scope: !2668)
!2686 = !DILocation(line: 27, column: 7, scope: !2668)
!2687 = !DILocation(line: 29, column: 14, scope: !2668)
!2688 = !DILocation(line: 31, column: 20, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2668, file: !2669, line: 30, column: 5)
!2690 = !DILocation(line: 31, column: 27, scope: !2689)
!2691 = !DILocation(line: 32, column: 56, scope: !2689)
!2692 = !DILocation(line: 32, column: 47, scope: !2689)
!2693 = !DILocation(line: 33, column: 22, scope: !2689)
!2694 = !DILocation(line: 34, column: 24, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2689, file: !2669, line: 34, column: 11)
!2696 = !DILocation(line: 34, column: 11, scope: !2689)
!2697 = !DILocation(line: 36, column: 29, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2695, file: !2669, line: 36, column: 16)
!2699 = !DILocation(line: 36, column: 16, scope: !2695)
!2700 = !DILocation(line: 37, column: 14, scope: !2698)
!2701 = distinct !{!2701, !2685, !2702}
!2702 = !DILocation(line: 40, column: 5, scope: !2668)
!2703 = !DILocation(line: 43, column: 1, scope: !2668)
!2704 = distinct !DISubprogram(name: "atof", scope: !2705, file: !2705, line: 25, type: !2706, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2709)
!2705 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2706 = !DISubroutineType(types: !2707)
!2707 = !{!2708, !730}
!2708 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2709 = !{!2710}
!2710 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2704, file: !2705, line: 25, type: !730)
!2711 = !DILocation(line: 0, scope: !2704)
!2712 = !DILocation(line: 27, column: 10, scope: !2704)
!2713 = !DILocation(line: 27, column: 3, scope: !2704)
!2714 = distinct !DISubprogram(name: "strtoimax", scope: !2715, file: !2715, line: 324, type: !2716, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2722)
!2715 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2716 = !DISubroutineType(types: !2717)
!2717 = !{!2718, !2477, !2721, !725}
!2718 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2719, line: 101, baseType: !2720)
!2719 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2720 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2465, line: 72, baseType: !866)
!2721 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !726)
!2722 = !{!2723, !2724, !2725}
!2723 = !DILocalVariable(name: "nptr", arg: 1, scope: !2714, file: !2715, line: 324, type: !2477)
!2724 = !DILocalVariable(name: "endptr", arg: 2, scope: !2714, file: !2715, line: 324, type: !2721)
!2725 = !DILocalVariable(name: "base", arg: 3, scope: !2714, file: !2715, line: 324, type: !725)
!2726 = !DILocation(line: 0, scope: !2714)
!2727 = !DILocation(line: 327, column: 10, scope: !2714)
!2728 = !DILocation(line: 327, column: 3, scope: !2714)
!2729 = distinct !DISubprogram(name: "strtoumax", scope: !2715, file: !2715, line: 336, type: !2730, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2734)
!2730 = !DISubroutineType(types: !2731)
!2731 = !{!2732, !2477, !2721, !725}
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2719, line: 102, baseType: !2733)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2465, line: 73, baseType: !773)
!2734 = !{!2735, !2736, !2737}
!2735 = !DILocalVariable(name: "nptr", arg: 1, scope: !2729, file: !2715, line: 336, type: !2477)
!2736 = !DILocalVariable(name: "endptr", arg: 2, scope: !2729, file: !2715, line: 336, type: !2721)
!2737 = !DILocalVariable(name: "base", arg: 3, scope: !2729, file: !2715, line: 336, type: !725)
!2738 = !DILocation(line: 0, scope: !2729)
!2739 = !DILocation(line: 339, column: 10, scope: !2729)
!2740 = !DILocation(line: 339, column: 3, scope: !2729)
!2741 = distinct !DISubprogram(name: "wcstoimax", scope: !2715, file: !2715, line: 348, type: !2742, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2751)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{!2718, !2744, !2748, !725}
!2744 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2745)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2747)
!2747 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2715, line: 34, baseType: !725)
!2748 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2749)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2751 = !{!2752, !2753, !2754}
!2752 = !DILocalVariable(name: "nptr", arg: 1, scope: !2741, file: !2715, line: 348, type: !2744)
!2753 = !DILocalVariable(name: "endptr", arg: 2, scope: !2741, file: !2715, line: 348, type: !2748)
!2754 = !DILocalVariable(name: "base", arg: 3, scope: !2741, file: !2715, line: 348, type: !725)
!2755 = !DILocation(line: 0, scope: !2741)
!2756 = !DILocation(line: 351, column: 10, scope: !2741)
!2757 = !DILocation(line: 351, column: 3, scope: !2741)
!2758 = distinct !DISubprogram(name: "wcstoumax", scope: !2715, file: !2715, line: 362, type: !2759, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2761)
!2759 = !DISubroutineType(types: !2760)
!2760 = !{!2732, !2744, !2748, !725}
!2761 = !{!2762, !2763, !2764}
!2762 = !DILocalVariable(name: "nptr", arg: 1, scope: !2758, file: !2715, line: 362, type: !2744)
!2763 = !DILocalVariable(name: "endptr", arg: 2, scope: !2758, file: !2715, line: 362, type: !2748)
!2764 = !DILocalVariable(name: "base", arg: 3, scope: !2758, file: !2715, line: 362, type: !725)
!2765 = !DILocation(line: 0, scope: !2758)
!2766 = !DILocation(line: 365, column: 10, scope: !2758)
!2767 = !DILocation(line: 365, column: 3, scope: !2758)
!2768 = distinct !DISubprogram(name: "stat", scope: !2769, file: !2769, line: 453, type: !2770, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2807)
!2769 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!725, !730, !2772}
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2774, line: 46, size: 1152, elements: !2775)
!2774 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2775 = !{!2776, !2778, !2780, !2782, !2784, !2786, !2788, !2789, !2790, !2791, !2793, !2795, !2803, !2804, !2805}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2773, file: !2774, line: 48, baseType: !2777, size: 64)
!2777 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2465, line: 145, baseType: !773)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2773, file: !2774, line: 53, baseType: !2779, size: 64, offset: 64)
!2779 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2465, line: 148, baseType: !773)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2773, file: !2774, line: 61, baseType: !2781, size: 64, offset: 128)
!2781 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2465, line: 151, baseType: !773)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2773, file: !2774, line: 62, baseType: !2783, size: 32, offset: 192)
!2783 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2465, line: 150, baseType: !7)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2773, file: !2774, line: 64, baseType: !2785, size: 32, offset: 224)
!2785 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2465, line: 146, baseType: !7)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2773, file: !2774, line: 65, baseType: !2787, size: 32, offset: 256)
!2787 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2465, line: 147, baseType: !7)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2773, file: !2774, line: 67, baseType: !725, size: 32, offset: 288)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2773, file: !2774, line: 69, baseType: !2777, size: 64, offset: 320)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2773, file: !2774, line: 74, baseType: !2528, size: 64, offset: 384)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2773, file: !2774, line: 78, baseType: !2792, size: 64, offset: 448)
!2792 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2465, line: 174, baseType: !866)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2773, file: !2774, line: 80, baseType: !2794, size: 64, offset: 512)
!2794 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2465, line: 179, baseType: !866)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2773, file: !2774, line: 91, baseType: !2796, size: 128, offset: 576)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2797, line: 10, size: 128, elements: !2798)
!2797 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2798 = !{!2799, !2801}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2796, file: !2797, line: 12, baseType: !2800, size: 64)
!2800 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2465, line: 160, baseType: !866)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2796, file: !2797, line: 16, baseType: !2802, size: 64, offset: 64)
!2802 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2465, line: 196, baseType: !866)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2773, file: !2774, line: 92, baseType: !2796, size: 128, offset: 704)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2773, file: !2774, line: 93, baseType: !2796, size: 128, offset: 832)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2773, file: !2774, line: 106, baseType: !2806, size: 192, offset: 960)
!2806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2802, size: 192, elements: !884)
!2807 = !{!2808, !2809}
!2808 = !DILocalVariable(name: "__path", arg: 1, scope: !2768, file: !2769, line: 453, type: !730)
!2809 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2768, file: !2769, line: 453, type: !2772)
!2810 = !DILocation(line: 0, scope: !2768)
!2811 = !DILocation(line: 455, column: 10, scope: !2768)
!2812 = !DILocation(line: 455, column: 3, scope: !2768)
!2813 = distinct !DISubprogram(name: "lstat", scope: !2769, file: !2769, line: 460, type: !2770, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2814)
!2814 = !{!2815, !2816}
!2815 = !DILocalVariable(name: "__path", arg: 1, scope: !2813, file: !2769, line: 460, type: !730)
!2816 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2813, file: !2769, line: 460, type: !2772)
!2817 = !DILocation(line: 0, scope: !2813)
!2818 = !DILocation(line: 462, column: 10, scope: !2813)
!2819 = !DILocation(line: 462, column: 3, scope: !2813)
!2820 = distinct !DISubprogram(name: "fstat", scope: !2769, file: !2769, line: 467, type: !2821, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2823)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!725, !725, !2772}
!2823 = !{!2824, !2825}
!2824 = !DILocalVariable(name: "__fd", arg: 1, scope: !2820, file: !2769, line: 467, type: !725)
!2825 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2820, file: !2769, line: 467, type: !2772)
!2826 = !DILocation(line: 0, scope: !2820)
!2827 = !DILocation(line: 469, column: 10, scope: !2820)
!2828 = !DILocation(line: 469, column: 3, scope: !2820)
!2829 = distinct !DISubprogram(name: "fstatat", scope: !2769, file: !2769, line: 474, type: !2830, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2832)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!725, !725, !730, !2772, !725}
!2832 = !{!2833, !2834, !2835, !2836}
!2833 = !DILocalVariable(name: "__fd", arg: 1, scope: !2829, file: !2769, line: 474, type: !725)
!2834 = !DILocalVariable(name: "__filename", arg: 2, scope: !2829, file: !2769, line: 474, type: !730)
!2835 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2829, file: !2769, line: 474, type: !2772)
!2836 = !DILocalVariable(name: "__flag", arg: 4, scope: !2829, file: !2769, line: 474, type: !725)
!2837 = !DILocation(line: 0, scope: !2829)
!2838 = !DILocation(line: 477, column: 10, scope: !2829)
!2839 = !DILocation(line: 477, column: 3, scope: !2829)
!2840 = distinct !DISubprogram(name: "mknod", scope: !2769, file: !2769, line: 483, type: !2841, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2843)
!2841 = !DISubroutineType(types: !2842)
!2842 = !{!725, !730, !2783, !2777}
!2843 = !{!2844, !2845, !2846}
!2844 = !DILocalVariable(name: "__path", arg: 1, scope: !2840, file: !2769, line: 483, type: !730)
!2845 = !DILocalVariable(name: "__mode", arg: 2, scope: !2840, file: !2769, line: 483, type: !2783)
!2846 = !DILocalVariable(name: "__dev", arg: 3, scope: !2840, file: !2769, line: 483, type: !2777)
!2847 = !DILocation(line: 0, scope: !2840)
!2848 = !DILocation(line: 485, column: 10, scope: !2840)
!2849 = !DILocation(line: 485, column: 3, scope: !2840)
!2850 = distinct !DISubprogram(name: "mknodat", scope: !2769, file: !2769, line: 491, type: !2851, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2853)
!2851 = !DISubroutineType(types: !2852)
!2852 = !{!725, !725, !730, !2783, !2777}
!2853 = !{!2854, !2855, !2856, !2857}
!2854 = !DILocalVariable(name: "__fd", arg: 1, scope: !2850, file: !2769, line: 491, type: !725)
!2855 = !DILocalVariable(name: "__path", arg: 2, scope: !2850, file: !2769, line: 491, type: !730)
!2856 = !DILocalVariable(name: "__mode", arg: 3, scope: !2850, file: !2769, line: 491, type: !2783)
!2857 = !DILocalVariable(name: "__dev", arg: 4, scope: !2850, file: !2769, line: 491, type: !2777)
!2858 = !DILocation(line: 0, scope: !2850)
!2859 = !DILocation(line: 494, column: 10, scope: !2850)
!2860 = !DILocation(line: 494, column: 3, scope: !2850)
!2861 = distinct !DISubprogram(name: "stat64", scope: !2769, file: !2769, line: 502, type: !2862, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2884)
!2862 = !DISubroutineType(types: !2863)
!2863 = !{!725, !730, !2864}
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2774, line: 119, size: 1152, elements: !2866)
!2866 = !{!2867, !2868, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2880, !2881, !2882, !2883}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2865, file: !2774, line: 121, baseType: !2777, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2865, file: !2774, line: 123, baseType: !2869, size: 64, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2465, line: 149, baseType: !773)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2865, file: !2774, line: 124, baseType: !2781, size: 64, offset: 128)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2865, file: !2774, line: 125, baseType: !2783, size: 32, offset: 192)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2865, file: !2774, line: 132, baseType: !2785, size: 32, offset: 224)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2865, file: !2774, line: 133, baseType: !2787, size: 32, offset: 256)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2865, file: !2774, line: 135, baseType: !725, size: 32, offset: 288)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2865, file: !2774, line: 136, baseType: !2777, size: 64, offset: 320)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2865, file: !2774, line: 137, baseType: !2528, size: 64, offset: 384)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2865, file: !2774, line: 143, baseType: !2792, size: 64, offset: 448)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2865, file: !2774, line: 144, baseType: !2879, size: 64, offset: 512)
!2879 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2465, line: 180, baseType: !866)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2865, file: !2774, line: 152, baseType: !2796, size: 128, offset: 576)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2865, file: !2774, line: 153, baseType: !2796, size: 128, offset: 704)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2865, file: !2774, line: 154, baseType: !2796, size: 128, offset: 832)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2865, file: !2774, line: 164, baseType: !2806, size: 192, offset: 960)
!2884 = !{!2885, !2886}
!2885 = !DILocalVariable(name: "__path", arg: 1, scope: !2861, file: !2769, line: 502, type: !730)
!2886 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2861, file: !2769, line: 502, type: !2864)
!2887 = !DILocation(line: 0, scope: !2861)
!2888 = !DILocation(line: 504, column: 10, scope: !2861)
!2889 = !DILocation(line: 504, column: 3, scope: !2861)
!2890 = distinct !DISubprogram(name: "lstat64", scope: !2769, file: !2769, line: 509, type: !2862, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2891)
!2891 = !{!2892, !2893}
!2892 = !DILocalVariable(name: "__path", arg: 1, scope: !2890, file: !2769, line: 509, type: !730)
!2893 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2890, file: !2769, line: 509, type: !2864)
!2894 = !DILocation(line: 0, scope: !2890)
!2895 = !DILocation(line: 511, column: 10, scope: !2890)
!2896 = !DILocation(line: 511, column: 3, scope: !2890)
!2897 = distinct !DISubprogram(name: "fstat64", scope: !2769, file: !2769, line: 516, type: !2898, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2900)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!725, !725, !2864}
!2900 = !{!2901, !2902}
!2901 = !DILocalVariable(name: "__fd", arg: 1, scope: !2897, file: !2769, line: 516, type: !725)
!2902 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2897, file: !2769, line: 516, type: !2864)
!2903 = !DILocation(line: 0, scope: !2897)
!2904 = !DILocation(line: 518, column: 10, scope: !2897)
!2905 = !DILocation(line: 518, column: 3, scope: !2897)
!2906 = distinct !DISubprogram(name: "fstatat64", scope: !2769, file: !2769, line: 523, type: !2907, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2909)
!2907 = !DISubroutineType(types: !2908)
!2908 = !{!725, !725, !730, !2864, !725}
!2909 = !{!2910, !2911, !2912, !2913}
!2910 = !DILocalVariable(name: "__fd", arg: 1, scope: !2906, file: !2769, line: 523, type: !725)
!2911 = !DILocalVariable(name: "__filename", arg: 2, scope: !2906, file: !2769, line: 523, type: !730)
!2912 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2906, file: !2769, line: 523, type: !2864)
!2913 = !DILocalVariable(name: "__flag", arg: 4, scope: !2906, file: !2769, line: 523, type: !725)
!2914 = !DILocation(line: 0, scope: !2906)
!2915 = !DILocation(line: 526, column: 10, scope: !2906)
!2916 = !DILocation(line: 526, column: 3, scope: !2906)
!2917 = distinct !DISubprogram(name: "create_output_block", scope: !3, file: !3, line: 113, type: !2918, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2920)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{!732, !5}
!2920 = !{!2921, !2922}
!2921 = !DILocalVariable(name: "section_type", arg: 1, scope: !2917, file: !3, line: 113, type: !5)
!2922 = !DILocalVariable(name: "ob", scope: !2917, file: !3, line: 115, type: !732)
!2923 = !DILocation(line: 0, scope: !2917)
!2924 = !DILocation(line: 115, column: 29, scope: !2917)
!2925 = !DILocation(line: 117, column: 7, scope: !2917)
!2926 = !DILocation(line: 117, column: 20, scope: !2917)
!2927 = !DILocation(line: 118, column: 20, scope: !2917)
!2928 = !DILocation(line: 118, column: 7, scope: !2917)
!2929 = !DILocation(line: 118, column: 18, scope: !2917)
!2930 = !DILocation(line: 119, column: 21, scope: !2917)
!2931 = !DILocation(line: 119, column: 7, scope: !2917)
!2932 = !DILocation(line: 119, column: 19, scope: !2917)
!2933 = !DILocation(line: 120, column: 23, scope: !2917)
!2934 = !DILocation(line: 120, column: 7, scope: !2917)
!2935 = !DILocation(line: 120, column: 21, scope: !2917)
!2936 = !DILocation(line: 121, column: 22, scope: !2917)
!2937 = !DILocation(line: 121, column: 7, scope: !2917)
!2938 = !DILocation(line: 121, column: 20, scope: !2917)
!2939 = !DILocation(line: 123, column: 20, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2917, file: !3, line: 123, column: 7)
!2941 = !DILocation(line: 123, column: 7, scope: !2917)
!2942 = !DILocation(line: 124, column: 22, scope: !2940)
!2943 = !DILocation(line: 124, column: 9, scope: !2940)
!2944 = !DILocation(line: 124, column: 20, scope: !2940)
!2945 = !DILocation(line: 124, column: 5, scope: !2940)
!2946 = !DILocation(line: 126, column: 3, scope: !2917)
!2947 = !DILocation(line: 128, column: 27, scope: !2917)
!2948 = !DILocation(line: 128, column: 7, scope: !2917)
!2949 = !DILocation(line: 128, column: 25, scope: !2917)
!2950 = !DILocation(line: 131, column: 3, scope: !2917)
!2951 = distinct !DISubprogram(name: "clear_line_info", scope: !3, file: !3, line: 101, type: !2952, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2954)
!2952 = !DISubroutineType(types: !2953)
!2953 = !{null, !732}
!2954 = !{!2955}
!2955 = !DILocalVariable(name: "ob", arg: 1, scope: !2951, file: !3, line: 101, type: !732)
!2956 = !DILocation(line: 0, scope: !2951)
!2957 = !DILocation(line: 103, column: 7, scope: !2951)
!2958 = !DILocation(line: 103, column: 20, scope: !2951)
!2959 = !DILocation(line: 104, column: 7, scope: !2951)
!2960 = !DILocation(line: 104, column: 20, scope: !2951)
!2961 = !DILocation(line: 105, column: 7, scope: !2951)
!2962 = !DILocation(line: 105, column: 19, scope: !2951)
!2963 = !DILocation(line: 106, column: 1, scope: !2951)
!2964 = distinct !DISubprogram(name: "hash_string_slot_node", scope: !3, file: !3, line: 59, type: !753, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2965)
!2965 = !{!2966, !2967}
!2966 = !DILocalVariable(name: "p", arg: 1, scope: !2964, file: !3, line: 59, type: !756)
!2967 = !DILocalVariable(name: "ds", scope: !2964, file: !3, line: 61, type: !2450)
!2968 = !DILocation(line: 0, scope: !2964)
!2969 = !DILocation(line: 62, column: 44, scope: !2964)
!2970 = !DILocation(line: 62, column: 22, scope: !2964)
!2971 = !DILocation(line: 62, column: 3, scope: !2964)
!2972 = distinct !DISubprogram(name: "eq_string_slot_node", scope: !3, file: !3, line: 69, type: !761, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2973)
!2973 = !{!2974, !2975, !2976, !2977, !2978}
!2974 = !DILocalVariable(name: "p1", arg: 1, scope: !2972, file: !3, line: 69, type: !756)
!2975 = !DILocalVariable(name: "p2", arg: 2, scope: !2972, file: !3, line: 69, type: !756)
!2976 = !DILocalVariable(name: "ds1", scope: !2972, file: !3, line: 71, type: !2450)
!2977 = !DILocalVariable(name: "ds2", scope: !2972, file: !3, line: 72, type: !2450)
!2978 = !DILocalVariable(name: "i", scope: !2979, file: !3, line: 76, type: !725)
!2979 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 75, column: 5)
!2980 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 74, column: 7)
!2981 = !DILocation(line: 0, scope: !2972)
!2982 = !DILocation(line: 74, column: 12, scope: !2980)
!2983 = !DILocation(line: 74, column: 24, scope: !2980)
!2984 = !DILocation(line: 74, column: 16, scope: !2980)
!2985 = !DILocation(line: 74, column: 7, scope: !2972)
!2986 = !DILocation(line: 78, column: 11, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2988, file: !3, line: 78, column: 6)
!2988 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 77, column: 7)
!2989 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 77, column: 7)
!2990 = !DILocation(line: 0, scope: !2987)
!2991 = !DILocation(line: 77, column: 7, scope: !2989)
!2992 = !DILocation(line: 0, scope: !2989)
!2993 = !DILocation(line: 0, scope: !2979)
!2994 = !DILocation(line: 77, column: 21, scope: !2988)
!2995 = !DILocation(line: 78, column: 6, scope: !2987)
!2996 = !DILocation(line: 78, column: 24, scope: !2987)
!2997 = !DILocation(line: 78, column: 19, scope: !2987)
!2998 = !DILocation(line: 78, column: 16, scope: !2987)
!2999 = !DILocation(line: 78, column: 6, scope: !2988)
!3000 = !DILocation(line: 77, column: 34, scope: !2988)
!3001 = !DILocation(line: 77, column: 7, scope: !2988)
!3002 = distinct !{!3002, !2991, !3003}
!3003 = !DILocation(line: 79, column: 11, scope: !2989)
!3004 = !DILocation(line: 84, column: 1, scope: !2972)
!3005 = distinct !DISubprogram(name: "string_slot_free", scope: !3, file: !3, line: 90, type: !766, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3006)
!3006 = !{!3007, !3008}
!3007 = !DILocalVariable(name: "p", arg: 1, scope: !3005, file: !3, line: 90, type: !729)
!3008 = !DILocalVariable(name: "slot", scope: !3005, file: !3, line: 92, type: !2457)
!3009 = !DILocation(line: 0, scope: !3005)
!3010 = !DILocation(line: 93, column: 9, scope: !3005)
!3011 = !DILocation(line: 93, column: 3, scope: !3005)
!3012 = !DILocation(line: 94, column: 3, scope: !3005)
!3013 = !DILocation(line: 95, column: 1, scope: !3005)
!3014 = distinct !DISubprogram(name: "destroy_output_block", scope: !3, file: !3, line: 138, type: !2952, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3015)
!3015 = !{!3016, !3017}
!3016 = !DILocalVariable(name: "ob", arg: 1, scope: !3014, file: !3, line: 138, type: !732)
!3017 = !DILocalVariable(name: "section_type", scope: !3014, file: !3, line: 140, type: !5)
!3018 = !DILocation(line: 0, scope: !3014)
!3019 = !DILocation(line: 140, column: 44, scope: !3014)
!3020 = !DILocation(line: 142, column: 20, scope: !3014)
!3021 = !DILocation(line: 142, column: 3, scope: !3014)
!3022 = !DILocation(line: 144, column: 13, scope: !3014)
!3023 = !DILocation(line: 144, column: 3, scope: !3014)
!3024 = !DILocation(line: 145, column: 13, scope: !3014)
!3025 = !DILocation(line: 145, column: 3, scope: !3014)
!3026 = !DILocation(line: 146, column: 20, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 146, column: 7)
!3028 = !DILocation(line: 146, column: 7, scope: !3014)
!3029 = !DILocation(line: 147, column: 15, scope: !3027)
!3030 = !DILocation(line: 147, column: 5, scope: !3027)
!3031 = !DILocation(line: 149, column: 34, scope: !3014)
!3032 = !DILocation(line: 149, column: 3, scope: !3014)
!3033 = !DILocation(line: 151, column: 9, scope: !3014)
!3034 = !DILocation(line: 151, column: 3, scope: !3014)
!3035 = !DILocation(line: 152, column: 1, scope: !3014)
!3036 = distinct !DISubprogram(name: "lto_output_bitpack", scope: !3, file: !3, line: 158, type: !3037, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3057)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{null, !2409, !3039}
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitpack_d", file: !6, line: 156, size: 192, elements: !3041)
!3041 = !{!3042, !3043, !3044}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "num_bits", scope: !3040, file: !6, line: 159, baseType: !771, size: 64)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "first_unused_bit", scope: !3040, file: !6, line: 165, baseType: !771, size: 64, offset: 64)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3040, file: !6, line: 168, baseType: !3045, size: 64, offset: 128)
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_bitpack_word_t_heap", file: !6, line: 154, baseType: !3047)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_bitpack_word_t_heap", file: !6, line: 154, size: 128, elements: !3048)
!3048 = !{!3049}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3047, file: !6, line: 154, baseType: !3050, size: 128)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_bitpack_word_t_base", file: !6, line: 153, baseType: !3051)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_bitpack_word_t_base", file: !6, line: 153, size: 128, elements: !3052)
!3052 = !{!3053, !3054, !3055}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3051, file: !6, line: 153, baseType: !7, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3051, file: !6, line: 153, baseType: !7, size: 32, offset: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3051, file: !6, line: 153, baseType: !3056, size: 64, offset: 64)
!3056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2458, size: 64, elements: !909)
!3057 = !{!3058, !3059, !3060, !3061}
!3058 = !DILocalVariable(name: "s", arg: 1, scope: !3036, file: !3, line: 158, type: !2409)
!3059 = !DILocalVariable(name: "bp", arg: 2, scope: !3036, file: !3, line: 158, type: !3039)
!3060 = !DILocalVariable(name: "i", scope: !3036, file: !3, line: 160, type: !7)
!3061 = !DILocalVariable(name: "v", scope: !3036, file: !3, line: 161, type: !2458)
!3062 = !DILocation(line: 0, scope: !3036)
!3063 = !DILocation(line: 161, column: 3, scope: !3036)
!3064 = !DILocation(line: 163, column: 33, scope: !3036)
!3065 = !DILocation(line: 163, column: 3, scope: !3036)
!3066 = !DILocation(line: 164, column: 8, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 164, column: 3)
!3068 = !DILocation(line: 0, scope: !3067)
!3069 = !DILocation(line: 164, column: 15, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 164, column: 3)
!3071 = !DILocation(line: 164, column: 3, scope: !3067)
!3072 = !DILocation(line: 165, column: 35, scope: !3070)
!3073 = !DILocation(line: 165, column: 5, scope: !3070)
!3074 = !DILocation(line: 164, column: 64, scope: !3070)
!3075 = !DILocation(line: 164, column: 3, scope: !3070)
!3076 = distinct !{!3076, !3071, !3077}
!3077 = !DILocation(line: 165, column: 36, scope: !3067)
!3078 = !DILocation(line: 166, column: 1, scope: !3036)
!3079 = distinct !DISubprogram(name: "VEC_bitpack_word_t_base_length", scope: !6, file: !6, line: 153, type: !3080, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3084)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!7, !3082}
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3050)
!3084 = !{!3085}
!3085 = !DILocalVariable(name: "vec_", arg: 1, scope: !3079, file: !6, line: 153, type: !3082)
!3086 = !DILocation(line: 0, scope: !3079)
!3087 = !DILocation(line: 153, column: 1, scope: !3079)
!3088 = distinct !DISubprogram(name: "VEC_bitpack_word_t_base_iterate", scope: !6, file: !6, line: 153, type: !3089, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3092)
!3089 = !DISubroutineType(types: !3090)
!3090 = !{!725, !3082, !7, !3091}
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!3092 = !{!3093, !3094, !3095}
!3093 = !DILocalVariable(name: "vec_", arg: 1, scope: !3088, file: !6, line: 153, type: !3082)
!3094 = !DILocalVariable(name: "ix_", arg: 2, scope: !3088, file: !6, line: 153, type: !7)
!3095 = !DILocalVariable(name: "ptr", arg: 3, scope: !3088, file: !6, line: 153, type: !3091)
!3096 = !DILocation(line: 0, scope: !3088)
!3097 = !DILocation(line: 153, column: 1, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3088, file: !6, line: 153, column: 1)
!3099 = !DILocation(line: 153, column: 1, scope: !3088)
!3100 = !DILocation(line: 153, column: 1, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3098, file: !6, line: 153, column: 1)
!3102 = !DILocation(line: 153, column: 1, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3098, file: !6, line: 153, column: 1)
!3104 = !DILocation(line: 0, scope: !3098)
!3105 = distinct !DISubprogram(name: "lto_output_tree", scope: !3, file: !3, line: 1317, type: !3106, scopeLine: 1318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3108)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{null, !732, !811, !724}
!3108 = !{!3109, !3110, !3111, !3112, !3113, !3114}
!3109 = !DILocalVariable(name: "ob", arg: 1, scope: !3105, file: !3, line: 1317, type: !732)
!3110 = !DILocalVariable(name: "expr", arg: 2, scope: !3105, file: !3, line: 1317, type: !811)
!3111 = !DILocalVariable(name: "ref_p", arg: 3, scope: !3105, file: !3, line: 1317, type: !724)
!3112 = !DILocalVariable(name: "ix", scope: !3105, file: !3, line: 1319, type: !725)
!3113 = !DILocalVariable(name: "existed_p", scope: !3105, file: !3, line: 1320, type: !724)
!3114 = !DILocalVariable(name: "offset", scope: !3105, file: !3, line: 1321, type: !7)
!3115 = !DILocation(line: 0, scope: !3105)
!3116 = !DILocation(line: 1319, column: 3, scope: !3105)
!3117 = !DILocation(line: 1321, column: 3, scope: !3105)
!3118 = !DILocation(line: 1323, column: 12, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 1323, column: 7)
!3120 = !DILocation(line: 1323, column: 7, scope: !3105)
!3121 = !DILocation(line: 1325, column: 7, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 1324, column: 5)
!3123 = !DILocation(line: 1326, column: 7, scope: !3122)
!3124 = !DILocation(line: 1331, column: 7, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 1331, column: 7)
!3126 = !DILocation(line: 1331, column: 24, scope: !3125)
!3127 = !DILocation(line: 1331, column: 7, scope: !3105)
!3128 = !DILocation(line: 1333, column: 7, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3125, file: !3, line: 1332, column: 5)
!3130 = !DILocation(line: 1334, column: 7, scope: !3129)
!3131 = !DILocation(line: 1341, column: 16, scope: !3105)
!3132 = !DILocation(line: 1341, column: 29, scope: !3105)
!3133 = !DILocation(line: 1341, column: 10, scope: !3105)
!3134 = !DILocation(line: 1343, column: 46, scope: !3105)
!3135 = !DILocation(line: 1343, column: 15, scope: !3105)
!3136 = !DILocation(line: 1344, column: 7, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 1344, column: 7)
!3138 = !DILocation(line: 1344, column: 7, scope: !3105)
!3139 = !DILocation(line: 1349, column: 7, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3137, file: !3, line: 1345, column: 5)
!3141 = !DILocation(line: 1350, column: 27, scope: !3140)
!3142 = !DILocation(line: 1350, column: 7, scope: !3140)
!3143 = !DILocation(line: 1351, column: 49, scope: !3140)
!3144 = !DILocation(line: 1351, column: 27, scope: !3140)
!3145 = !DILocation(line: 1351, column: 7, scope: !3140)
!3146 = !DILocation(line: 1352, column: 27, scope: !3140)
!3147 = !DILocation(line: 1352, column: 7, scope: !3140)
!3148 = !DILocation(line: 1353, column: 5, scope: !3140)
!3149 = !DILocation(line: 1354, column: 12, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3137, file: !3, line: 1354, column: 12)
!3151 = !DILocation(line: 0, scope: !3150)
!3152 = !DILocation(line: 1354, column: 12, scope: !3137)
!3153 = !DILocation(line: 1361, column: 7, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 1355, column: 5)
!3155 = !DILocation(line: 1362, column: 5, scope: !3154)
!3156 = !DILocation(line: 1367, column: 7, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 1364, column: 5)
!3158 = !DILocation(line: 1369, column: 1, scope: !3105)
!3159 = distinct !DISubprogram(name: "output_zero", scope: !3, file: !3, line: 276, type: !2952, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3160)
!3160 = !{!3161}
!3161 = !DILocalVariable(name: "ob", arg: 1, scope: !3159, file: !3, line: 276, type: !732)
!3162 = !DILocation(line: 0, scope: !3159)
!3163 = !DILocation(line: 278, column: 28, scope: !3159)
!3164 = !DILocation(line: 278, column: 3, scope: !3159)
!3165 = !DILocation(line: 279, column: 1, scope: !3159)
!3166 = distinct !DISubprogram(name: "lto_output_integer_cst", scope: !3, file: !3, line: 1302, type: !3106, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3167)
!3167 = !{!3168, !3169, !3170}
!3168 = !DILocalVariable(name: "ob", arg: 1, scope: !3166, file: !3, line: 1302, type: !732)
!3169 = !DILocalVariable(name: "cst", arg: 2, scope: !3166, file: !3, line: 1302, type: !811)
!3170 = !DILocalVariable(name: "ref_p", arg: 3, scope: !3166, file: !3, line: 1302, type: !724)
!3171 = !DILocation(line: 0, scope: !3166)
!3172 = !DILocation(line: 1304, column: 28, scope: !3166)
!3173 = !DILocation(line: 1304, column: 3, scope: !3166)
!3174 = !DILocation(line: 1305, column: 31, scope: !3166)
!3175 = !DILocation(line: 1305, column: 3, scope: !3166)
!3176 = !DILocation(line: 1306, column: 28, scope: !3166)
!3177 = !DILocation(line: 1306, column: 41, scope: !3166)
!3178 = !DILocation(line: 1306, column: 3, scope: !3166)
!3179 = !DILocation(line: 1307, column: 23, scope: !3166)
!3180 = !DILocation(line: 1307, column: 3, scope: !3166)
!3181 = !DILocation(line: 1308, column: 23, scope: !3166)
!3182 = !DILocation(line: 1308, column: 3, scope: !3166)
!3183 = !DILocation(line: 1309, column: 1, scope: !3166)
!3184 = distinct !DISubprogram(name: "output_record_start", scope: !3, file: !3, line: 303, type: !3185, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3187)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{null, !732, !604}
!3187 = !{!3188, !3189}
!3188 = !DILocalVariable(name: "ob", arg: 1, scope: !3184, file: !3, line: 303, type: !732)
!3189 = !DILocalVariable(name: "tag", arg: 2, scope: !3184, file: !3, line: 303, type: !604)
!3190 = !DILocation(line: 0, scope: !3184)
!3191 = !DILocation(line: 307, column: 23, scope: !3184)
!3192 = !DILocation(line: 307, column: 3, scope: !3184)
!3193 = !DILocation(line: 308, column: 1, scope: !3184)
!3194 = distinct !DISubprogram(name: "output_sleb128", scope: !3, file: !3, line: 294, type: !3195, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3197)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{null, !732, !866}
!3197 = !{!3198, !3199}
!3198 = !DILocalVariable(name: "ob", arg: 1, scope: !3194, file: !3, line: 294, type: !732)
!3199 = !DILocalVariable(name: "work", arg: 2, scope: !3194, file: !3, line: 294, type: !866)
!3200 = !DILocation(line: 0, scope: !3194)
!3201 = !DILocation(line: 296, column: 34, scope: !3194)
!3202 = !DILocation(line: 296, column: 3, scope: !3194)
!3203 = !DILocation(line: 297, column: 1, scope: !3194)
!3204 = distinct !DISubprogram(name: "output_uleb128", scope: !3, file: !3, line: 285, type: !3205, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3207)
!3205 = !DISubroutineType(types: !3206)
!3206 = !{null, !732, !773}
!3207 = !{!3208, !3209}
!3208 = !DILocalVariable(name: "ob", arg: 1, scope: !3204, file: !3, line: 285, type: !732)
!3209 = !DILocalVariable(name: "work", arg: 2, scope: !3204, file: !3, line: 285, type: !773)
!3210 = !DILocation(line: 0, scope: !3204)
!3211 = !DILocation(line: 287, column: 34, scope: !3204)
!3212 = !DILocation(line: 287, column: 3, scope: !3204)
!3213 = !DILocation(line: 288, column: 1, scope: !3204)
!3214 = distinct !DISubprogram(name: "lto_tree_code_to_tag", scope: !6, file: !6, line: 915, type: !3215, scopeLine: 916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3217)
!3215 = !DISubroutineType(types: !3216)
!3216 = !{!604, !148}
!3217 = !{!3218}
!3218 = !DILocalVariable(name: "code", arg: 1, scope: !3214, file: !6, line: 915, type: !148)
!3219 = !DILocation(line: 0, scope: !3214)
!3220 = !DILocation(line: 917, column: 43, scope: !3214)
!3221 = !DILocation(line: 917, column: 3, scope: !3214)
!3222 = distinct !DISubprogram(name: "lto_stream_as_builtin_p", scope: !6, file: !6, line: 1010, type: !3223, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3225)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{!724, !811}
!3225 = !{!3226}
!3226 = !DILocalVariable(name: "expr", arg: 1, scope: !3222, file: !6, line: 1010, type: !811)
!3227 = !DILocation(line: 0, scope: !3222)
!3228 = !DILocation(line: 1012, column: 11, scope: !3222)
!3229 = !DILocation(line: 1012, column: 28, scope: !3222)
!3230 = !DILocation(line: 1013, column: 4, scope: !3222)
!3231 = !DILocation(line: 1013, column: 7, scope: !3222)
!3232 = !DILocation(line: 1014, column: 4, scope: !3222)
!3233 = !DILocation(line: 1014, column: 8, scope: !3222)
!3234 = !DILocation(line: 1014, column: 35, scope: !3222)
!3235 = !DILocation(line: 1015, column: 8, scope: !3222)
!3236 = !DILocation(line: 1015, column: 38, scope: !3222)
!3237 = !DILocation(line: 1012, column: 3, scope: !3222)
!3238 = distinct !DISubprogram(name: "lto_output_builtin_tree", scope: !3, file: !3, line: 1239, type: !3239, scopeLine: 1240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3241)
!3239 = !DISubroutineType(types: !3240)
!3240 = !{null, !732, !811, !725}
!3241 = !{!3242, !3243, !3244, !3245}
!3242 = !DILocalVariable(name: "ob", arg: 1, scope: !3238, file: !3, line: 1239, type: !732)
!3243 = !DILocalVariable(name: "expr", arg: 2, scope: !3238, file: !3, line: 1239, type: !811)
!3244 = !DILocalVariable(name: "ix", arg: 3, scope: !3238, file: !3, line: 1239, type: !725)
!3245 = !DILocalVariable(name: "str", scope: !3246, file: !3, line: 1259, type: !730)
!3246 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 1254, column: 5)
!3247 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 1253, column: 7)
!3248 = !DILocation(line: 0, scope: !3238)
!3249 = !DILocation(line: 1241, column: 3, scope: !3238)
!3250 = !DILocation(line: 1243, column: 7, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 1243, column: 7)
!3252 = !DILocation(line: 1243, column: 34, scope: !3251)
!3253 = !DILocation(line: 1244, column: 19, scope: !3251)
!3254 = !DILocation(line: 1244, column: 11, scope: !3251)
!3255 = !DILocation(line: 1244, column: 7, scope: !3251)
!3256 = !DILocation(line: 1245, column: 5, scope: !3251)
!3257 = !DILocation(line: 1248, column: 3, scope: !3238)
!3258 = !DILocation(line: 1249, column: 23, scope: !3238)
!3259 = !DILocation(line: 1249, column: 3, scope: !3238)
!3260 = !DILocation(line: 1250, column: 23, scope: !3238)
!3261 = !DILocation(line: 1250, column: 3, scope: !3238)
!3262 = !DILocation(line: 1251, column: 23, scope: !3238)
!3263 = !DILocation(line: 1251, column: 3, scope: !3238)
!3264 = !DILocation(line: 1253, column: 7, scope: !3247)
!3265 = !DILocation(line: 1253, column: 7, scope: !3238)
!3266 = !DILocation(line: 1259, column: 25, scope: !3246)
!3267 = !DILocation(line: 0, scope: !3246)
!3268 = !DILocation(line: 1260, column: 11, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 1260, column: 11)
!3270 = !DILocation(line: 1260, column: 24, scope: !3269)
!3271 = !DILocation(line: 1260, column: 28, scope: !3269)
!3272 = !DILocation(line: 1260, column: 31, scope: !3269)
!3273 = !DILocation(line: 1260, column: 38, scope: !3269)
!3274 = !DILocation(line: 1260, column: 11, scope: !3246)
!3275 = !DILocation(line: 1261, column: 25, scope: !3269)
!3276 = !DILocation(line: 1261, column: 39, scope: !3269)
!3277 = !DILocation(line: 1261, column: 2, scope: !3269)
!3278 = !DILocation(line: 1263, column: 25, scope: !3269)
!3279 = !DILocation(line: 1263, column: 2, scope: !3269)
!3280 = !DILocation(line: 1266, column: 28, scope: !3247)
!3281 = !DILocation(line: 1266, column: 5, scope: !3247)
!3282 = !DILocation(line: 1267, column: 1, scope: !3238)
!3283 = distinct !DISubprogram(name: "lto_write_tree", scope: !3, file: !3, line: 1276, type: !3284, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3286)
!3284 = !DISubroutineType(types: !3285)
!3285 = !{null, !732, !811, !724, !725}
!3286 = !{!3287, !3288, !3289, !3290, !3291}
!3287 = !DILocalVariable(name: "ob", arg: 1, scope: !3283, file: !3, line: 1276, type: !732)
!3288 = !DILocalVariable(name: "expr", arg: 2, scope: !3283, file: !3, line: 1276, type: !811)
!3289 = !DILocalVariable(name: "ref_p", arg: 3, scope: !3283, file: !3, line: 1276, type: !724)
!3290 = !DILocalVariable(name: "ix", arg: 4, scope: !3283, file: !3, line: 1276, type: !725)
!3291 = !DILocalVariable(name: "bp", scope: !3283, file: !3, line: 1278, type: !3039)
!3292 = !DILocation(line: 0, scope: !3283)
!3293 = !DILocation(line: 1282, column: 3, scope: !3283)
!3294 = !DILocation(line: 1286, column: 8, scope: !3283)
!3295 = !DILocation(line: 1287, column: 27, scope: !3283)
!3296 = !DILocation(line: 1287, column: 3, scope: !3283)
!3297 = !DILocation(line: 1288, column: 3, scope: !3283)
!3298 = !DILocation(line: 1291, column: 3, scope: !3283)
!3299 = !DILocation(line: 1294, column: 3, scope: !3283)
!3300 = !DILocation(line: 1295, column: 1, scope: !3283)
!3301 = distinct !DISubprogram(name: "produce_asm", scope: !3, file: !3, line: 1777, type: !3302, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3304)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{null, !732, !811}
!3304 = !{!3305, !3306, !3307, !3308, !3330, !3331, !3332}
!3305 = !DILocalVariable(name: "ob", arg: 1, scope: !3301, file: !3, line: 1777, type: !732)
!3306 = !DILocalVariable(name: "fn", arg: 2, scope: !3301, file: !3, line: 1777, type: !811)
!3307 = !DILocalVariable(name: "section_type", scope: !3301, file: !3, line: 1779, type: !5)
!3308 = !DILocalVariable(name: "header", scope: !3301, file: !3, line: 1780, type: !3309)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_function_header", file: !6, line: 395, size: 288, elements: !3310)
!3310 = !{!3311, !3321, !3324, !3325, !3326, !3327, !3328, !3329}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "lto_header", scope: !3309, file: !6, line: 398, baseType: !3312, size: 64)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_header", file: !6, line: 387, size: 64, elements: !3313)
!3313 = !{!3314, !3319, !3320}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "major_version", scope: !3312, file: !6, line: 389, baseType: !3315, size: 16)
!3315 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !3316, line: 25, baseType: !3317)
!3316 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "")
!3317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !2465, line: 39, baseType: !3318)
!3318 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "minor_version", scope: !3312, file: !6, line: 390, baseType: !3315, size: 16, offset: 16)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "section_type", scope: !3312, file: !6, line: 391, baseType: !5, size: 32, offset: 32)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "num_named_labels", scope: !3309, file: !6, line: 401, baseType: !3322, size: 32, offset: 64)
!3322 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !3316, line: 26, baseType: !3323)
!3323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !2465, line: 41, baseType: !725)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "num_unnamed_labels", scope: !3309, file: !6, line: 404, baseType: !3322, size: 32, offset: 96)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "compressed_size", scope: !3309, file: !6, line: 407, baseType: !3322, size: 32, offset: 128)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "named_label_size", scope: !3309, file: !6, line: 410, baseType: !3322, size: 32, offset: 160)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !3309, file: !6, line: 413, baseType: !3322, size: 32, offset: 192)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "main_size", scope: !3309, file: !6, line: 416, baseType: !3322, size: 32, offset: 224)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "string_size", scope: !3309, file: !6, line: 419, baseType: !3322, size: 32, offset: 256)
!3330 = !DILocalVariable(name: "section_name", scope: !3301, file: !3, line: 1781, type: !727)
!3331 = !DILocalVariable(name: "header_stream", scope: !3301, file: !3, line: 1782, type: !2409)
!3332 = !DILocalVariable(name: "name", scope: !3333, file: !3, line: 1786, type: !730)
!3333 = distinct !DILexicalBlock(scope: !3334, file: !3, line: 1785, column: 5)
!3334 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 1784, column: 7)
!3335 = !DILocation(line: 0, scope: !3301)
!3336 = !DILocation(line: 1779, column: 44, scope: !3301)
!3337 = !DILocation(line: 1780, column: 3, scope: !3301)
!3338 = !DILocation(line: 1784, column: 20, scope: !3334)
!3339 = !DILocation(line: 1784, column: 7, scope: !3301)
!3340 = !DILocation(line: 1786, column: 26, scope: !3333)
!3341 = !DILocation(line: 0, scope: !3333)
!3342 = !DILocation(line: 1787, column: 22, scope: !3333)
!3343 = !DILocation(line: 1788, column: 5, scope: !3333)
!3344 = !DILocation(line: 1790, column: 20, scope: !3334)
!3345 = !DILocation(line: 0, scope: !3334)
!3346 = !DILocation(line: 1792, column: 37, scope: !3301)
!3347 = !DILocation(line: 1792, column: 36, scope: !3301)
!3348 = !DILocation(line: 1792, column: 3, scope: !3301)
!3349 = !DILocation(line: 1793, column: 3, scope: !3301)
!3350 = !DILocation(line: 1796, column: 3, scope: !3301)
!3351 = !DILocation(line: 1799, column: 21, scope: !3301)
!3352 = !DILocation(line: 1799, column: 35, scope: !3301)
!3353 = !DILocation(line: 1800, column: 21, scope: !3301)
!3354 = !DILocation(line: 1800, column: 35, scope: !3301)
!3355 = !DILocation(line: 1801, column: 21, scope: !3301)
!3356 = !DILocation(line: 1801, column: 34, scope: !3301)
!3357 = !DILocation(line: 1803, column: 10, scope: !3301)
!3358 = !DILocation(line: 1803, column: 26, scope: !3301)
!3359 = !DILocation(line: 1805, column: 7, scope: !3301)
!3360 = !DILocation(line: 1806, column: 27, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 1805, column: 7)
!3362 = !DILocation(line: 1806, column: 39, scope: !3361)
!3363 = !DILocation(line: 1806, column: 12, scope: !3361)
!3364 = !DILocation(line: 1806, column: 21, scope: !3361)
!3365 = !DILocation(line: 1806, column: 5, scope: !3361)
!3366 = !DILocation(line: 1807, column: 26, scope: !3301)
!3367 = !DILocation(line: 1807, column: 39, scope: !3301)
!3368 = !DILocation(line: 1807, column: 10, scope: !3301)
!3369 = !DILocation(line: 1807, column: 20, scope: !3301)
!3370 = !DILocation(line: 1808, column: 28, scope: !3301)
!3371 = !DILocation(line: 1808, column: 43, scope: !3301)
!3372 = !DILocation(line: 1808, column: 10, scope: !3301)
!3373 = !DILocation(line: 1808, column: 22, scope: !3301)
!3374 = !DILocation(line: 1810, column: 19, scope: !3301)
!3375 = !DILocation(line: 1811, column: 3, scope: !3301)
!3376 = !DILocation(line: 1812, column: 3, scope: !3301)
!3377 = !DILocation(line: 1813, column: 3, scope: !3301)
!3378 = !DILocation(line: 1817, column: 7, scope: !3301)
!3379 = !DILocation(line: 1818, column: 27, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 1817, column: 7)
!3381 = !DILocation(line: 1818, column: 5, scope: !3380)
!3382 = !DILocation(line: 1819, column: 25, scope: !3301)
!3383 = !DILocation(line: 1819, column: 3, scope: !3301)
!3384 = !DILocation(line: 1820, column: 25, scope: !3301)
!3385 = !DILocation(line: 1820, column: 3, scope: !3301)
!3386 = !DILocation(line: 1822, column: 3, scope: !3301)
!3387 = !DILocation(line: 1823, column: 1, scope: !3301)
!3388 = distinct !DISubprogram(name: "lto_output", scope: !3, file: !3, line: 2093, type: !3389, scopeLine: 2094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3392)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{null, !3391}
!3391 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_set", file: !399, line: 283, baseType: !2258)
!3392 = !{!3393, !3394, !3395, !3396, !3402}
!3393 = !DILocalVariable(name: "set", arg: 1, scope: !3388, file: !3, line: 2093, type: !3391)
!3394 = !DILocalVariable(name: "node", scope: !3388, file: !3, line: 2095, type: !2167)
!3395 = !DILocalVariable(name: "decl_state", scope: !3388, file: !3, line: 2096, type: !737)
!3396 = !DILocalVariable(name: "csi", scope: !3388, file: !3, line: 2097, type: !3397)
!3397 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_set_iterator", file: !399, line: 305, baseType: !3398)
!3398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 301, size: 128, elements: !3399)
!3399 = !{!3400, !3401}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !3398, file: !399, line: 303, baseType: !3391, size: 64)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3398, file: !399, line: 304, baseType: !7, size: 32, offset: 64)
!3402 = !DILocalVariable(name: "output", scope: !3388, file: !3, line: 2098, type: !1692)
!3403 = !DILocation(line: 0, scope: !3388)
!3404 = !DILocation(line: 2097, column: 3, scope: !3388)
!3405 = !DILocation(line: 2098, column: 19, scope: !3388)
!3406 = !DILocation(line: 2100, column: 3, scope: !3388)
!3407 = !DILocation(line: 2103, column: 14, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3388, file: !3, line: 2103, column: 3)
!3409 = !DILocation(line: 0, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 2103, column: 3)
!3411 = !DILocation(line: 2103, column: 8, scope: !3408)
!3412 = !DILocation(line: 2103, column: 32, scope: !3410)
!3413 = !DILocation(line: 2103, column: 31, scope: !3410)
!3414 = !DILocation(line: 2103, column: 3, scope: !3408)
!3415 = !DILocation(line: 2105, column: 14, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 2104, column: 5)
!3417 = !DILocation(line: 2106, column: 17, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3416, file: !3, line: 2106, column: 11)
!3419 = !DILocation(line: 2106, column: 11, scope: !3418)
!3420 = !DILocation(line: 2106, column: 26, scope: !3418)
!3421 = !DILocation(line: 2106, column: 52, scope: !3418)
!3422 = !DILocation(line: 2106, column: 30, scope: !3418)
!3423 = !DILocation(line: 2106, column: 11, scope: !3416)
!3424 = !DILocation(line: 2108, column: 28, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 2107, column: 2)
!3426 = !DILocation(line: 2108, column: 4, scope: !3425)
!3427 = !DILocation(line: 2109, column: 17, scope: !3425)
!3428 = !DILocation(line: 2110, column: 4, scope: !3425)
!3429 = !DILocation(line: 2111, column: 9, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3425, file: !3, line: 2111, column: 8)
!3431 = !DILocation(line: 2111, column: 8, scope: !3425)
!3432 = !DILocation(line: 2112, column: 6, scope: !3430)
!3433 = !DILocation(line: 2114, column: 6, scope: !3430)
!3434 = !DILocation(line: 2115, column: 4, scope: !3425)
!3435 = !DILocation(line: 2116, column: 4, scope: !3425)
!3436 = !DILocation(line: 2117, column: 46, scope: !3425)
!3437 = !DILocation(line: 2117, column: 4, scope: !3425)
!3438 = !DILocation(line: 2118, column: 2, scope: !3425)
!3439 = !DILocation(line: 2103, column: 49, scope: !3410)
!3440 = !DILocation(line: 2103, column: 3, scope: !3410)
!3441 = distinct !{!3441, !3414, !3442}
!3442 = !DILocation(line: 2119, column: 5, scope: !3408)
!3443 = !DILocation(line: 2125, column: 3, scope: !3388)
!3444 = !DILocation(line: 2127, column: 3, scope: !3388)
!3445 = !DILocation(line: 2128, column: 1, scope: !3388)
!3446 = distinct !DISubprogram(name: "produce_asm_for_decls", scope: !3, file: !3, line: 2445, type: !3389, scopeLine: 2446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3447)
!3447 = !{!3448, !3449, !3450, !3451, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466}
!3448 = !DILocalVariable(name: "set", arg: 1, scope: !3446, file: !3, line: 2445, type: !3391)
!3449 = !DILocalVariable(name: "out_state", scope: !3446, file: !3, line: 2447, type: !737)
!3450 = !DILocalVariable(name: "fn_out_state", scope: !3446, file: !3, line: 2448, type: !737)
!3451 = !DILocalVariable(name: "header", scope: !3446, file: !3, line: 2449, type: !3452)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_decl_header", file: !6, line: 424, size: 192, elements: !3453)
!3453 = !{!3454, !3455, !3456, !3457, !3458}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "lto_header", scope: !3452, file: !6, line: 427, baseType: !3312, size: 64)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "decl_state_size", scope: !3452, file: !6, line: 430, baseType: !3322, size: 32, offset: 64)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !3452, file: !6, line: 433, baseType: !3322, size: 32, offset: 96)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "main_size", scope: !3452, file: !6, line: 436, baseType: !3322, size: 32, offset: 128)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "string_size", scope: !3452, file: !6, line: 439, baseType: !3322, size: 32, offset: 160)
!3459 = !DILocalVariable(name: "section_name", scope: !3446, file: !3, line: 2450, type: !727)
!3460 = !DILocalVariable(name: "ob", scope: !3446, file: !3, line: 2451, type: !732)
!3461 = !DILocalVariable(name: "header_stream", scope: !3446, file: !3, line: 2452, type: !2409)
!3462 = !DILocalVariable(name: "decl_state_stream", scope: !3446, file: !3, line: 2452, type: !2409)
!3463 = !DILocalVariable(name: "idx", scope: !3446, file: !3, line: 2453, type: !7)
!3464 = !DILocalVariable(name: "num_fns", scope: !3446, file: !3, line: 2453, type: !7)
!3465 = !DILocalVariable(name: "decl_state_size", scope: !3446, file: !3, line: 2454, type: !771)
!3466 = !DILocalVariable(name: "num_decl_states", scope: !3446, file: !3, line: 2455, type: !3322)
!3467 = !DILocation(line: 0, scope: !3446)
!3468 = !DILocation(line: 2449, column: 3, scope: !3446)
!3469 = !DILocation(line: 2455, column: 3, scope: !3446)
!3470 = !DILocation(line: 2457, column: 8, scope: !3446)
!3471 = !DILocation(line: 2458, column: 7, scope: !3446)
!3472 = !DILocation(line: 2458, column: 14, scope: !3446)
!3473 = !DILocation(line: 2463, column: 3, scope: !3446)
!3474 = !DILocation(line: 2465, column: 3, scope: !3446)
!3475 = !DILocation(line: 2467, column: 18, scope: !3446)
!3476 = !DILocation(line: 2468, column: 37, scope: !3446)
!3477 = !DILocation(line: 2468, column: 36, scope: !3446)
!3478 = !DILocation(line: 2468, column: 3, scope: !3446)
!3479 = !DILocation(line: 2469, column: 3, scope: !3446)
!3480 = !DILocation(line: 2472, column: 28, scope: !3446)
!3481 = !DILocation(line: 2472, column: 3, scope: !3446)
!3482 = !DILocation(line: 2475, column: 15, scope: !3446)
!3483 = !DILocation(line: 2476, column: 13, scope: !3446)
!3484 = !DILocation(line: 2477, column: 3, scope: !3446)
!3485 = !DILocation(line: 2478, column: 8, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 2478, column: 3)
!3487 = !DILocation(line: 0, scope: !3486)
!3488 = !DILocation(line: 2478, column: 21, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2478, column: 3)
!3490 = !DILocation(line: 2478, column: 3, scope: !3486)
!3491 = !DILocation(line: 2481, column: 2, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3489, file: !3, line: 2479, column: 5)
!3493 = !DILocation(line: 2482, column: 7, scope: !3492)
!3494 = !DILocation(line: 2478, column: 35, scope: !3489)
!3495 = !DILocation(line: 2478, column: 3, scope: !3489)
!3496 = distinct !{!3496, !3490, !3497}
!3497 = !DILocation(line: 2483, column: 5, scope: !3486)
!3498 = !DILocation(line: 2485, column: 21, scope: !3446)
!3499 = !DILocation(line: 2485, column: 35, scope: !3446)
!3500 = !DILocation(line: 2486, column: 21, scope: !3446)
!3501 = !DILocation(line: 2486, column: 35, scope: !3446)
!3502 = !DILocation(line: 2487, column: 21, scope: !3446)
!3503 = !DILocation(line: 2487, column: 34, scope: !3446)
!3504 = !DILocation(line: 2491, column: 10, scope: !3446)
!3505 = !DILocation(line: 2491, column: 20, scope: !3446)
!3506 = !DILocation(line: 2495, column: 22, scope: !3446)
!3507 = !DILocation(line: 2495, column: 19, scope: !3446)
!3508 = !DILocation(line: 2496, column: 8, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 2496, column: 3)
!3510 = !DILocation(line: 0, scope: !3509)
!3511 = !DILocation(line: 2496, column: 21, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3509, file: !3, line: 2496, column: 3)
!3513 = !DILocation(line: 2496, column: 3, scope: !3509)
!3514 = !DILocation(line: 2499, column: 2, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 2497, column: 5)
!3516 = !DILocation(line: 2500, column: 26, scope: !3515)
!3517 = !DILocation(line: 2500, column: 23, scope: !3515)
!3518 = !DILocation(line: 2496, column: 35, scope: !3512)
!3519 = !DILocation(line: 2496, column: 3, scope: !3512)
!3520 = distinct !{!3520, !3513, !3521}
!3521 = !DILocation(line: 2501, column: 5, scope: !3509)
!3522 = !DILocation(line: 2502, column: 28, scope: !3446)
!3523 = !DILocation(line: 2502, column: 10, scope: !3446)
!3524 = !DILocation(line: 2502, column: 26, scope: !3446)
!3525 = !DILocation(line: 2504, column: 26, scope: !3446)
!3526 = !DILocation(line: 2504, column: 39, scope: !3446)
!3527 = !DILocation(line: 2504, column: 10, scope: !3446)
!3528 = !DILocation(line: 2504, column: 20, scope: !3446)
!3529 = !DILocation(line: 2505, column: 28, scope: !3446)
!3530 = !DILocation(line: 2505, column: 43, scope: !3446)
!3531 = !DILocation(line: 2505, column: 10, scope: !3446)
!3532 = !DILocation(line: 2505, column: 22, scope: !3446)
!3533 = !DILocation(line: 2507, column: 19, scope: !3446)
!3534 = !DILocation(line: 2508, column: 3, scope: !3446)
!3535 = !DILocation(line: 2509, column: 3, scope: !3446)
!3536 = !DILocation(line: 2510, column: 3, scope: !3446)
!3537 = !DILocation(line: 2515, column: 10, scope: !3446)
!3538 = !DILocation(line: 2514, column: 24, scope: !3446)
!3539 = !DILocation(line: 2516, column: 29, scope: !3446)
!3540 = !DILocation(line: 2516, column: 19, scope: !3446)
!3541 = !DILocation(line: 2517, column: 3, scope: !3446)
!3542 = !DILocation(line: 2519, column: 3, scope: !3446)
!3543 = !DILocation(line: 2520, column: 8, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 2520, column: 3)
!3545 = !DILocation(line: 0, scope: !3544)
!3546 = !DILocation(line: 2520, column: 21, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3544, file: !3, line: 2520, column: 3)
!3548 = !DILocation(line: 2520, column: 3, scope: !3544)
!3549 = !DILocation(line: 2523, column: 2, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 2521, column: 5)
!3551 = !DILocation(line: 2524, column: 7, scope: !3550)
!3552 = !DILocation(line: 2520, column: 35, scope: !3547)
!3553 = !DILocation(line: 2520, column: 3, scope: !3547)
!3554 = distinct !{!3554, !3548, !3555}
!3555 = !DILocation(line: 2525, column: 5, scope: !3544)
!3556 = !DILocation(line: 2526, column: 3, scope: !3446)
!3557 = !DILocation(line: 2527, column: 3, scope: !3446)
!3558 = !DILocation(line: 2529, column: 25, scope: !3446)
!3559 = !DILocation(line: 2529, column: 3, scope: !3446)
!3560 = !DILocation(line: 2530, column: 25, scope: !3446)
!3561 = !DILocation(line: 2530, column: 3, scope: !3446)
!3562 = !DILocation(line: 2532, column: 3, scope: !3446)
!3563 = !DILocation(line: 2535, column: 23, scope: !3446)
!3564 = !DILocation(line: 2535, column: 3, scope: !3446)
!3565 = !DILocation(line: 2538, column: 3, scope: !3446)
!3566 = !DILocation(line: 2541, column: 34, scope: !3446)
!3567 = !DILocation(line: 2541, column: 46, scope: !3446)
!3568 = !DILocation(line: 2541, column: 3, scope: !3446)
!3569 = !DILocation(line: 2542, column: 3, scope: !3446)
!3570 = !DILocation(line: 2543, column: 28, scope: !3446)
!3571 = !DILocation(line: 2544, column: 3, scope: !3446)
!3572 = !DILocation(line: 2545, column: 1, scope: !3446)
!3573 = distinct !DISubprogram(name: "lto_output_tree_or_ref", scope: !3, file: !3, line: 747, type: !3106, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3574)
!3574 = !{!3575, !3576, !3577}
!3575 = !DILocalVariable(name: "ob", arg: 1, scope: !3573, file: !3, line: 747, type: !732)
!3576 = !DILocalVariable(name: "expr", arg: 2, scope: !3573, file: !3, line: 747, type: !811)
!3577 = !DILocalVariable(name: "ref_p", arg: 3, scope: !3573, file: !3, line: 747, type: !724)
!3578 = !DILocation(line: 0, scope: !3573)
!3579 = !DILocation(line: 749, column: 7, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 749, column: 7)
!3581 = !DILocation(line: 749, column: 7, scope: !3573)
!3582 = !DILocation(line: 750, column: 5, scope: !3580)
!3583 = !DILocation(line: 752, column: 5, scope: !3580)
!3584 = !DILocation(line: 753, column: 1, scope: !3573)
!3585 = distinct !DISubprogram(name: "lto_output_tree_ref", scope: !3, file: !3, line: 654, type: !3302, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3586)
!3586 = !{!3587, !3588, !3589}
!3587 = !DILocalVariable(name: "ob", arg: 1, scope: !3585, file: !3, line: 654, type: !732)
!3588 = !DILocalVariable(name: "expr", arg: 2, scope: !3585, file: !3, line: 654, type: !811)
!3589 = !DILocalVariable(name: "code", scope: !3585, file: !3, line: 656, type: !148)
!3590 = !DILocation(line: 0, scope: !3585)
!3591 = !DILocation(line: 658, column: 12, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 658, column: 7)
!3593 = !DILocation(line: 658, column: 7, scope: !3585)
!3594 = !DILocation(line: 660, column: 7, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 659, column: 5)
!3596 = !DILocation(line: 661, column: 7, scope: !3595)
!3597 = !DILocation(line: 664, column: 8, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 664, column: 7)
!3599 = !DILocation(line: 664, column: 7, scope: !3585)
!3600 = !DILocation(line: 668, column: 7, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 665, column: 5)
!3602 = !DILocation(line: 669, column: 7, scope: !3601)
!3603 = !DILocation(line: 672, column: 7, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 672, column: 7)
!3605 = !DILocation(line: 672, column: 7, scope: !3585)
!3606 = !DILocation(line: 674, column: 7, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3604, file: !3, line: 673, column: 5)
!3608 = !DILocation(line: 675, column: 7, scope: !3607)
!3609 = !DILocation(line: 678, column: 10, scope: !3585)
!3610 = !DILocation(line: 679, column: 3, scope: !3585)
!3611 = !DILocation(line: 682, column: 7, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 680, column: 5)
!3613 = !DILocation(line: 683, column: 27, scope: !3612)
!3614 = !DILocation(line: 683, column: 7, scope: !3612)
!3615 = !DILocation(line: 684, column: 7, scope: !3612)
!3616 = !DILocation(line: 687, column: 7, scope: !3612)
!3617 = !DILocation(line: 688, column: 40, scope: !3612)
!3618 = !DILocation(line: 688, column: 56, scope: !3612)
!3619 = !DILocation(line: 688, column: 7, scope: !3612)
!3620 = !DILocation(line: 689, column: 7, scope: !3612)
!3621 = !DILocation(line: 692, column: 7, scope: !3612)
!3622 = !DILocation(line: 693, column: 37, scope: !3612)
!3623 = !DILocation(line: 693, column: 53, scope: !3612)
!3624 = !DILocation(line: 693, column: 7, scope: !3612)
!3625 = !DILocation(line: 694, column: 7, scope: !3612)
!3626 = !DILocation(line: 698, column: 7, scope: !3612)
!3627 = !DILocation(line: 700, column: 7, scope: !3612)
!3628 = !DILocation(line: 701, column: 38, scope: !3612)
!3629 = !DILocation(line: 701, column: 54, scope: !3612)
!3630 = !DILocation(line: 701, column: 7, scope: !3612)
!3631 = !DILocation(line: 702, column: 7, scope: !3612)
!3632 = !DILocation(line: 705, column: 7, scope: !3612)
!3633 = !DILocation(line: 706, column: 38, scope: !3612)
!3634 = !DILocation(line: 706, column: 54, scope: !3612)
!3635 = !DILocation(line: 706, column: 7, scope: !3612)
!3636 = !DILocation(line: 707, column: 7, scope: !3612)
!3637 = !DILocation(line: 710, column: 7, scope: !3612)
!3638 = !DILocation(line: 711, column: 7, scope: !3612)
!3639 = !DILocation(line: 712, column: 38, scope: !3612)
!3640 = !DILocation(line: 712, column: 54, scope: !3612)
!3641 = !DILocation(line: 712, column: 7, scope: !3612)
!3642 = !DILocation(line: 713, column: 7, scope: !3612)
!3643 = !DILocation(line: 716, column: 7, scope: !3612)
!3644 = !DILocation(line: 717, column: 39, scope: !3612)
!3645 = !DILocation(line: 717, column: 55, scope: !3612)
!3646 = !DILocation(line: 717, column: 7, scope: !3612)
!3647 = !DILocation(line: 718, column: 7, scope: !3612)
!3648 = !DILocation(line: 721, column: 7, scope: !3612)
!3649 = !DILocation(line: 722, column: 44, scope: !3612)
!3650 = !DILocation(line: 722, column: 60, scope: !3612)
!3651 = !DILocation(line: 722, column: 7, scope: !3612)
!3652 = !DILocation(line: 723, column: 7, scope: !3612)
!3653 = !DILocation(line: 726, column: 7, scope: !3612)
!3654 = !DILocation(line: 727, column: 38, scope: !3612)
!3655 = !DILocation(line: 727, column: 54, scope: !3612)
!3656 = !DILocation(line: 727, column: 7, scope: !3612)
!3657 = !DILocation(line: 728, column: 7, scope: !3612)
!3658 = !DILocation(line: 731, column: 7, scope: !3612)
!3659 = !DILocation(line: 732, column: 38, scope: !3612)
!3660 = !DILocation(line: 732, column: 54, scope: !3612)
!3661 = !DILocation(line: 732, column: 7, scope: !3612)
!3662 = !DILocation(line: 733, column: 7, scope: !3612)
!3663 = !DILocation(line: 738, column: 7, scope: !3612)
!3664 = !DILocation(line: 739, column: 5, scope: !3612)
!3665 = !DILocation(line: 740, column: 1, scope: !3585)
!3666 = distinct !DISubprogram(name: "tree_is_indexable", scope: !3, file: !3, line: 637, type: !3223, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3667)
!3667 = !{!3668}
!3668 = !DILocalVariable(name: "t", arg: 1, scope: !3666, file: !3, line: 637, type: !811)
!3669 = !DILocation(line: 0, scope: !3666)
!3670 = !DILocation(line: 639, column: 7, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3666, file: !3, line: 639, column: 7)
!3672 = !DILocation(line: 639, column: 21, scope: !3671)
!3673 = !DILocation(line: 639, column: 7, scope: !3666)
!3674 = !DILocation(line: 641, column: 26, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3671, file: !3, line: 641, column: 12)
!3676 = !DILocation(line: 641, column: 38, scope: !3675)
!3677 = !DILocation(line: 641, column: 41, scope: !3675)
!3678 = !DILocation(line: 642, column: 5, scope: !3675)
!3679 = !DILocation(line: 645, column: 13, scope: !3675)
!3680 = !DILocation(line: 642, column: 9, scope: !3675)
!3681 = !DILocation(line: 641, column: 12, scope: !3671)
!3682 = !DILocation(line: 645, column: 24, scope: !3675)
!3683 = !DILocation(line: 645, column: 27, scope: !3675)
!3684 = !DILocation(line: 645, column: 38, scope: !3675)
!3685 = !DILocation(line: 645, column: 55, scope: !3675)
!3686 = !DILocation(line: 645, column: 5, scope: !3675)
!3687 = !DILocation(line: 0, scope: !3671)
!3688 = !DILocation(line: 646, column: 1, scope: !3666)
!3689 = distinct !DISubprogram(name: "output_type_ref", scope: !3, file: !3, line: 314, type: !3302, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3690)
!3690 = !{!3691, !3692}
!3691 = !DILocalVariable(name: "ob", arg: 1, scope: !3689, file: !3, line: 314, type: !732)
!3692 = !DILocalVariable(name: "node", arg: 2, scope: !3689, file: !3, line: 314, type: !811)
!3693 = !DILocation(line: 0, scope: !3689)
!3694 = !DILocation(line: 316, column: 3, scope: !3689)
!3695 = !DILocation(line: 317, column: 34, scope: !3689)
!3696 = !DILocation(line: 317, column: 50, scope: !3689)
!3697 = !DILocation(line: 317, column: 3, scope: !3689)
!3698 = !DILocation(line: 318, column: 1, scope: !3689)
!3699 = distinct !DISubprogram(name: "output_string", scope: !3, file: !3, line: 220, type: !3700, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3702)
!3700 = !DISubroutineType(types: !3701)
!3701 = !{null, !732, !2409, !730}
!3702 = !{!3703, !3704, !3705}
!3703 = !DILocalVariable(name: "ob", arg: 1, scope: !3699, file: !3, line: 220, type: !732)
!3704 = !DILocalVariable(name: "index_stream", arg: 2, scope: !3699, file: !3, line: 221, type: !2409)
!3705 = !DILocalVariable(name: "string", arg: 3, scope: !3699, file: !3, line: 222, type: !730)
!3706 = !DILocation(line: 0, scope: !3699)
!3707 = !DILocation(line: 224, column: 7, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 224, column: 7)
!3709 = !DILocation(line: 224, column: 7, scope: !3699)
!3710 = !DILocation(line: 226, column: 7, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 225, column: 5)
!3712 = !DILocation(line: 227, column: 60, scope: !3711)
!3713 = !DILocation(line: 227, column: 7, scope: !3711)
!3714 = !DILocation(line: 228, column: 5, scope: !3711)
!3715 = !DILocation(line: 230, column: 5, scope: !3708)
!3716 = !DILocation(line: 231, column: 1, scope: !3699)
!3717 = distinct !DISubprogram(name: "output_string_with_length", scope: !3, file: !3, line: 174, type: !3718, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3720)
!3718 = !DISubroutineType(types: !3719)
!3719 = !{null, !732, !2409, !730, !7}
!3720 = !{!3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3731, !3732, !3733, !3734}
!3721 = !DILocalVariable(name: "ob", arg: 1, scope: !3717, file: !3, line: 174, type: !732)
!3722 = !DILocalVariable(name: "index_stream", arg: 2, scope: !3717, file: !3, line: 175, type: !2409)
!3723 = !DILocalVariable(name: "s", arg: 3, scope: !3717, file: !3, line: 176, type: !730)
!3724 = !DILocalVariable(name: "len", arg: 4, scope: !3717, file: !3, line: 177, type: !7)
!3725 = !DILocalVariable(name: "slot", scope: !3717, file: !3, line: 179, type: !2459)
!3726 = !DILocalVariable(name: "s_slot", scope: !3717, file: !3, line: 180, type: !2452)
!3727 = !DILocalVariable(name: "string", scope: !3717, file: !3, line: 181, type: !727)
!3728 = !DILocalVariable(name: "string_stream", scope: !3729, file: !3, line: 193, type: !2409)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !3, line: 192, column: 5)
!3730 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 191, column: 7)
!3731 = !DILocalVariable(name: "start", scope: !3729, file: !3, line: 194, type: !7)
!3732 = !DILocalVariable(name: "new_slot", scope: !3729, file: !3, line: 195, type: !2457)
!3733 = !DILocalVariable(name: "i", scope: !3729, file: !3, line: 197, type: !7)
!3734 = !DILocalVariable(name: "old_slot", scope: !3735, file: !3, line: 210, type: !2457)
!3735 = distinct !DILexicalBlock(scope: !3730, file: !3, line: 209, column: 5)
!3736 = !DILocation(line: 0, scope: !3717)
!3737 = !DILocation(line: 180, column: 3, scope: !3717)
!3738 = !DILocation(line: 181, column: 40, scope: !3717)
!3739 = !DILocation(line: 181, column: 36, scope: !3717)
!3740 = !DILocation(line: 181, column: 27, scope: !3717)
!3741 = !DILocation(line: 182, column: 22, scope: !3717)
!3742 = !DILocation(line: 182, column: 3, scope: !3717)
!3743 = !DILocation(line: 183, column: 3, scope: !3717)
!3744 = !DILocation(line: 183, column: 15, scope: !3717)
!3745 = !DILocation(line: 185, column: 10, scope: !3717)
!3746 = !DILocation(line: 185, column: 12, scope: !3717)
!3747 = !DILocation(line: 186, column: 10, scope: !3717)
!3748 = !DILocation(line: 186, column: 14, scope: !3717)
!3749 = !DILocation(line: 187, column: 10, scope: !3717)
!3750 = !DILocation(line: 187, column: 19, scope: !3717)
!3751 = !DILocation(line: 189, column: 54, scope: !3717)
!3752 = !DILocation(line: 189, column: 34, scope: !3717)
!3753 = !DILocation(line: 189, column: 10, scope: !3717)
!3754 = !DILocation(line: 191, column: 7, scope: !3730)
!3755 = !DILocation(line: 191, column: 13, scope: !3730)
!3756 = !DILocation(line: 191, column: 7, scope: !3717)
!3757 = !DILocation(line: 193, column: 53, scope: !3729)
!3758 = !DILocation(line: 0, scope: !3729)
!3759 = !DILocation(line: 194, column: 43, scope: !3729)
!3760 = !DILocation(line: 196, column: 27, scope: !3729)
!3761 = !DILocation(line: 199, column: 17, scope: !3729)
!3762 = !DILocation(line: 199, column: 19, scope: !3729)
!3763 = !DILocation(line: 200, column: 17, scope: !3729)
!3764 = !DILocation(line: 200, column: 21, scope: !3729)
!3765 = !DILocation(line: 201, column: 17, scope: !3729)
!3766 = !DILocation(line: 201, column: 26, scope: !3729)
!3767 = !DILocation(line: 202, column: 13, scope: !3729)
!3768 = !DILocation(line: 203, column: 48, scope: !3729)
!3769 = !DILocation(line: 203, column: 7, scope: !3729)
!3770 = !DILocation(line: 204, column: 7, scope: !3729)
!3771 = !DILocation(line: 205, column: 21, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 205, column: 7)
!3773 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 205, column: 7)
!3774 = !DILocation(line: 205, column: 12, scope: !3773)
!3775 = !DILocation(line: 0, scope: !3773)
!3776 = !DILocation(line: 205, column: 7, scope: !3773)
!3777 = !DILocation(line: 206, column: 38, scope: !3772)
!3778 = !DILocation(line: 206, column: 2, scope: !3772)
!3779 = !DILocation(line: 205, column: 29, scope: !3772)
!3780 = !DILocation(line: 205, column: 7, scope: !3772)
!3781 = distinct !{!3781, !3776, !3782}
!3782 = !DILocation(line: 206, column: 47, scope: !3773)
!3783 = !DILocation(line: 0, scope: !3735)
!3784 = !DILocation(line: 211, column: 58, scope: !3735)
!3785 = !DILocation(line: 211, column: 48, scope: !3735)
!3786 = !DILocation(line: 211, column: 7, scope: !3735)
!3787 = !DILocation(line: 212, column: 7, scope: !3735)
!3788 = !DILocation(line: 214, column: 1, scope: !3717)
!3789 = distinct !DISubprogram(name: "lto_output_tree_header", scope: !3, file: !3, line: 1193, type: !3239, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3790)
!3790 = !{!3791, !3792, !3793, !3794, !3795}
!3791 = !DILocalVariable(name: "ob", arg: 1, scope: !3789, file: !3, line: 1193, type: !732)
!3792 = !DILocalVariable(name: "expr", arg: 2, scope: !3789, file: !3, line: 1193, type: !811)
!3793 = !DILocalVariable(name: "ix", arg: 3, scope: !3789, file: !3, line: 1193, type: !725)
!3794 = !DILocalVariable(name: "tag", scope: !3789, file: !3, line: 1195, type: !604)
!3795 = !DILocalVariable(name: "code", scope: !3789, file: !3, line: 1196, type: !148)
!3796 = !DILocation(line: 0, scope: !3789)
!3797 = !DILocation(line: 1199, column: 10, scope: !3789)
!3798 = !DILocation(line: 1200, column: 8, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 1200, column: 7)
!3800 = !DILocation(line: 1200, column: 7, scope: !3789)
!3801 = !DILocation(line: 1224, column: 7, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 1224, column: 7)
!3803 = !DILocation(line: 1202, column: 7, scope: !3799)
!3804 = !DILocation(line: 1201, column: 5, scope: !3799)
!3805 = !DILocation(line: 1208, column: 9, scope: !3789)
!3806 = !DILocation(line: 1209, column: 3, scope: !3789)
!3807 = !DILocation(line: 1210, column: 23, scope: !3789)
!3808 = !DILocation(line: 1210, column: 3, scope: !3789)
!3809 = !DILocation(line: 1224, column: 7, scope: !3789)
!3810 = !DILocation(line: 1225, column: 32, scope: !3802)
!3811 = !DILocation(line: 1225, column: 5, scope: !3802)
!3812 = !DILocation(line: 1226, column: 12, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3802, file: !3, line: 1226, column: 12)
!3814 = !DILocation(line: 1226, column: 12, scope: !3802)
!3815 = !DILocation(line: 1227, column: 32, scope: !3813)
!3816 = !DILocation(line: 1227, column: 5, scope: !3813)
!3817 = !DILocation(line: 1228, column: 12, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 1228, column: 12)
!3819 = !DILocation(line: 1228, column: 12, scope: !3813)
!3820 = !DILocation(line: 1229, column: 25, scope: !3818)
!3821 = !DILocation(line: 1229, column: 5, scope: !3818)
!3822 = !DILocation(line: 1230, column: 12, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 1230, column: 12)
!3824 = !DILocation(line: 1230, column: 12, scope: !3818)
!3825 = !DILocation(line: 1231, column: 25, scope: !3823)
!3826 = !DILocation(line: 1231, column: 5, scope: !3823)
!3827 = !DILocation(line: 1232, column: 1, scope: !3789)
!3828 = distinct !DISubprogram(name: "pack_value_fields", scope: !3, file: !3, line: 547, type: !3829, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3831)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!3039, !811}
!3831 = !{!3832, !3833, !3834}
!3832 = !DILocalVariable(name: "expr", arg: 1, scope: !3828, file: !3, line: 547, type: !811)
!3833 = !DILocalVariable(name: "code", scope: !3828, file: !3, line: 549, type: !148)
!3834 = !DILocalVariable(name: "bp", scope: !3828, file: !3, line: 550, type: !3039)
!3835 = !DILocation(line: 0, scope: !3828)
!3836 = !DILocation(line: 552, column: 10, scope: !3828)
!3837 = !DILocation(line: 553, column: 8, scope: !3828)
!3838 = !DILocation(line: 557, column: 3, scope: !3828)
!3839 = !DILocation(line: 559, column: 7, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 559, column: 7)
!3841 = !DILocation(line: 559, column: 7, scope: !3828)
!3842 = !DILocation(line: 560, column: 5, scope: !3840)
!3843 = !DILocation(line: 562, column: 7, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 562, column: 7)
!3845 = !DILocation(line: 562, column: 7, scope: !3828)
!3846 = !DILocation(line: 563, column: 5, scope: !3844)
!3847 = !DILocation(line: 565, column: 7, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 565, column: 7)
!3849 = !DILocation(line: 565, column: 7, scope: !3828)
!3850 = !DILocation(line: 566, column: 5, scope: !3848)
!3851 = !DILocation(line: 568, column: 7, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 568, column: 7)
!3853 = !DILocation(line: 568, column: 7, scope: !3828)
!3854 = !DILocation(line: 569, column: 5, scope: !3852)
!3855 = !DILocation(line: 571, column: 7, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 571, column: 7)
!3857 = !DILocation(line: 571, column: 7, scope: !3828)
!3858 = !DILocation(line: 572, column: 5, scope: !3856)
!3859 = !DILocation(line: 574, column: 7, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 574, column: 7)
!3861 = !DILocation(line: 574, column: 7, scope: !3828)
!3862 = !DILocation(line: 575, column: 5, scope: !3860)
!3863 = !DILocation(line: 577, column: 7, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 577, column: 7)
!3865 = !DILocation(line: 577, column: 7, scope: !3828)
!3866 = !DILocation(line: 578, column: 5, scope: !3864)
!3867 = !DILocation(line: 580, column: 7, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 580, column: 7)
!3869 = !DILocation(line: 580, column: 7, scope: !3828)
!3870 = !DILocation(line: 581, column: 5, scope: !3868)
!3871 = !DILocation(line: 583, column: 7, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 583, column: 7)
!3873 = !DILocation(line: 583, column: 7, scope: !3828)
!3874 = !DILocation(line: 586, column: 7, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 584, column: 5)
!3876 = !DILocation(line: 587, column: 5, scope: !3875)
!3877 = !DILocation(line: 589, column: 7, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 589, column: 7)
!3879 = !DILocation(line: 589, column: 7, scope: !3828)
!3880 = !DILocation(line: 592, column: 7, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3878, file: !3, line: 590, column: 5)
!3882 = !DILocation(line: 593, column: 5, scope: !3881)
!3883 = !DILocation(line: 595, column: 7, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 595, column: 7)
!3885 = !DILocation(line: 595, column: 7, scope: !3828)
!3886 = !DILocation(line: 598, column: 7, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3884, file: !3, line: 596, column: 5)
!3888 = !DILocation(line: 599, column: 5, scope: !3887)
!3889 = !DILocation(line: 601, column: 3, scope: !3828)
!3890 = distinct !DISubprogram(name: "lto_output_tree_pointers", scope: !3, file: !3, line: 1107, type: !3106, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3891)
!3891 = !{!3892, !3893, !3894, !3895}
!3892 = !DILocalVariable(name: "ob", arg: 1, scope: !3890, file: !3, line: 1107, type: !732)
!3893 = !DILocalVariable(name: "expr", arg: 2, scope: !3890, file: !3, line: 1107, type: !811)
!3894 = !DILocalVariable(name: "ref_p", arg: 3, scope: !3890, file: !3, line: 1107, type: !724)
!3895 = !DILocalVariable(name: "code", scope: !3890, file: !3, line: 1109, type: !148)
!3896 = !DILocation(line: 0, scope: !3890)
!3897 = !DILocation(line: 1111, column: 10, scope: !3890)
!3898 = !DILocation(line: 1113, column: 7, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1113, column: 7)
!3900 = !DILocation(line: 1113, column: 7, scope: !3890)
!3901 = !DILocation(line: 1114, column: 5, scope: !3899)
!3902 = !DILocation(line: 1116, column: 7, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1116, column: 7)
!3904 = !DILocation(line: 1116, column: 7, scope: !3890)
!3905 = !DILocation(line: 1117, column: 5, scope: !3903)
!3906 = !DILocation(line: 1119, column: 7, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1119, column: 7)
!3908 = !DILocation(line: 1119, column: 7, scope: !3890)
!3909 = !DILocation(line: 1120, column: 5, scope: !3907)
!3910 = !DILocation(line: 1122, column: 7, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1122, column: 7)
!3912 = !DILocation(line: 1122, column: 7, scope: !3890)
!3913 = !DILocation(line: 1123, column: 5, scope: !3911)
!3914 = !DILocation(line: 1125, column: 7, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1125, column: 7)
!3916 = !DILocation(line: 1125, column: 7, scope: !3890)
!3917 = !DILocation(line: 1126, column: 5, scope: !3915)
!3918 = !DILocation(line: 1128, column: 7, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1128, column: 7)
!3920 = !DILocation(line: 1128, column: 7, scope: !3890)
!3921 = !DILocation(line: 1129, column: 5, scope: !3919)
!3922 = !DILocation(line: 1131, column: 7, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1131, column: 7)
!3924 = !DILocation(line: 1131, column: 7, scope: !3890)
!3925 = !DILocation(line: 1132, column: 5, scope: !3923)
!3926 = !DILocation(line: 1134, column: 7, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1134, column: 7)
!3928 = !DILocation(line: 1134, column: 7, scope: !3890)
!3929 = !DILocation(line: 1135, column: 5, scope: !3927)
!3930 = !DILocation(line: 1137, column: 7, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1137, column: 7)
!3932 = !DILocation(line: 1137, column: 7, scope: !3890)
!3933 = !DILocation(line: 1138, column: 5, scope: !3931)
!3934 = !DILocation(line: 1140, column: 7, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1140, column: 7)
!3936 = !DILocation(line: 1140, column: 7, scope: !3890)
!3937 = !DILocation(line: 1141, column: 5, scope: !3935)
!3938 = !DILocation(line: 1143, column: 7, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1143, column: 7)
!3940 = !DILocation(line: 1143, column: 7, scope: !3890)
!3941 = !DILocation(line: 1144, column: 5, scope: !3939)
!3942 = !DILocation(line: 1146, column: 7, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1146, column: 7)
!3944 = !DILocation(line: 1146, column: 7, scope: !3890)
!3945 = !DILocation(line: 1147, column: 5, scope: !3943)
!3946 = !DILocation(line: 1149, column: 7, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1149, column: 7)
!3948 = !DILocation(line: 1149, column: 7, scope: !3890)
!3949 = !DILocation(line: 1150, column: 5, scope: !3947)
!3950 = !DILocation(line: 1152, column: 7, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1152, column: 7)
!3952 = !DILocation(line: 1152, column: 7, scope: !3890)
!3953 = !DILocation(line: 1155, column: 7, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3951, file: !3, line: 1153, column: 5)
!3955 = !DILocation(line: 1156, column: 5, scope: !3954)
!3956 = !DILocation(line: 1158, column: 7, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1158, column: 7)
!3958 = !DILocation(line: 1158, column: 7, scope: !3890)
!3959 = !DILocation(line: 1159, column: 5, scope: !3957)
!3960 = !DILocation(line: 1161, column: 7, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1161, column: 7)
!3962 = !DILocation(line: 1161, column: 7, scope: !3890)
!3963 = !DILocation(line: 1162, column: 5, scope: !3961)
!3964 = !DILocation(line: 1164, column: 7, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1164, column: 7)
!3966 = !DILocation(line: 1164, column: 7, scope: !3890)
!3967 = !DILocation(line: 1165, column: 5, scope: !3965)
!3968 = !DILocation(line: 1167, column: 7, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1167, column: 7)
!3970 = !DILocation(line: 1167, column: 7, scope: !3890)
!3971 = !DILocation(line: 1170, column: 7, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 1168, column: 5)
!3973 = !DILocation(line: 1171, column: 5, scope: !3972)
!3974 = !DILocation(line: 1173, column: 7, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1173, column: 7)
!3976 = !DILocation(line: 1173, column: 7, scope: !3890)
!3977 = !DILocation(line: 1176, column: 7, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 1174, column: 5)
!3979 = !DILocation(line: 1177, column: 5, scope: !3978)
!3980 = !DILocation(line: 1179, column: 7, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1179, column: 7)
!3982 = !DILocation(line: 1179, column: 7, scope: !3890)
!3983 = !DILocation(line: 1180, column: 5, scope: !3981)
!3984 = !DILocation(line: 1182, column: 7, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 1182, column: 7)
!3986 = !DILocation(line: 1182, column: 7, scope: !3890)
!3987 = !DILocation(line: 1183, column: 5, scope: !3985)
!3988 = !DILocation(line: 1184, column: 1, scope: !3890)
!3989 = distinct !DISubprogram(name: "lto_is_streamable", scope: !6, file: !6, line: 1020, type: !3223, scopeLine: 1021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3990)
!3990 = !{!3991, !3992}
!3991 = !DILocalVariable(name: "expr", arg: 1, scope: !3989, file: !6, line: 1020, type: !811)
!3992 = !DILocalVariable(name: "code", scope: !3989, file: !6, line: 1022, type: !148)
!3993 = !DILocation(line: 0, scope: !3989)
!3994 = !DILocation(line: 1022, column: 25, scope: !3989)
!3995 = !DILocation(line: 1026, column: 11, scope: !3989)
!3996 = !DILocation(line: 1027, column: 3, scope: !3989)
!3997 = !DILocation(line: 1038, column: 10, scope: !3989)
!3998 = !DILocation(line: 1038, column: 33, scope: !3989)
!3999 = !DILocation(line: 1038, column: 7, scope: !3989)
!4000 = !DILocation(line: 1036, column: 3, scope: !3989)
!4001 = !DILocation(line: 1026, column: 3, scope: !3989)
!4002 = distinct !DISubprogram(name: "output_string_cst", scope: !3, file: !3, line: 238, type: !4003, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4005)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{null, !732, !2409, !811}
!4005 = !{!4006, !4007, !4008}
!4006 = !DILocalVariable(name: "ob", arg: 1, scope: !4002, file: !3, line: 238, type: !732)
!4007 = !DILocalVariable(name: "index_stream", arg: 2, scope: !4002, file: !3, line: 239, type: !2409)
!4008 = !DILocalVariable(name: "string", arg: 3, scope: !4002, file: !3, line: 240, type: !811)
!4009 = !DILocation(line: 0, scope: !4002)
!4010 = !DILocation(line: 242, column: 7, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 242, column: 7)
!4012 = !DILocation(line: 242, column: 7, scope: !4002)
!4013 = !DILocation(line: 244, column: 7, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4011, file: !3, line: 243, column: 5)
!4015 = !DILocation(line: 246, column: 6, scope: !4014)
!4016 = !DILocation(line: 247, column: 6, scope: !4014)
!4017 = !DILocation(line: 245, column: 7, scope: !4014)
!4018 = !DILocation(line: 248, column: 5, scope: !4014)
!4019 = !DILocation(line: 250, column: 5, scope: !4011)
!4020 = !DILocation(line: 251, column: 1, scope: !4002)
!4021 = distinct !DISubprogram(name: "output_identifier", scope: !3, file: !3, line: 258, type: !4003, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4022)
!4022 = !{!4023, !4024, !4025}
!4023 = !DILocalVariable(name: "ob", arg: 1, scope: !4021, file: !3, line: 258, type: !732)
!4024 = !DILocalVariable(name: "index_stream", arg: 2, scope: !4021, file: !3, line: 259, type: !2409)
!4025 = !DILocalVariable(name: "id", arg: 3, scope: !4021, file: !3, line: 260, type: !811)
!4026 = !DILocation(line: 0, scope: !4021)
!4027 = !DILocation(line: 262, column: 7, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 262, column: 7)
!4029 = !DILocation(line: 262, column: 7, scope: !4021)
!4030 = !DILocation(line: 264, column: 7, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 263, column: 5)
!4032 = !DILocation(line: 266, column: 6, scope: !4031)
!4033 = !DILocation(line: 267, column: 6, scope: !4031)
!4034 = !DILocation(line: 265, column: 7, scope: !4031)
!4035 = !DILocation(line: 268, column: 5, scope: !4031)
!4036 = !DILocation(line: 270, column: 5, scope: !4028)
!4037 = !DILocation(line: 271, column: 1, scope: !4021)
!4038 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !149, file: !149, line: 182, type: !4039, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4043)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!7, !4041}
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !804)
!4043 = !{!4044}
!4044 = !DILocalVariable(name: "vec_", arg: 1, scope: !4038, file: !149, line: 182, type: !4041)
!4045 = !DILocation(line: 0, scope: !4038)
!4046 = !DILocation(line: 182, column: 1, scope: !4038)
!4047 = distinct !DISubprogram(name: "is_lang_specific", scope: !149, file: !149, line: 5458, type: !3223, scopeLine: 5459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4048)
!4048 = !{!4049}
!4049 = !DILocalVariable(name: "t", arg: 1, scope: !4047, file: !149, line: 5458, type: !811)
!4050 = !DILocation(line: 0, scope: !4047)
!4051 = !DILocation(line: 5460, column: 10, scope: !4047)
!4052 = !DILocation(line: 5460, column: 24, scope: !4047)
!4053 = !DILocation(line: 5460, column: 37, scope: !4047)
!4054 = !DILocation(line: 5460, column: 54, scope: !4047)
!4055 = !DILocation(line: 5460, column: 3, scope: !4047)
!4056 = distinct !DISubprogram(name: "pack_ts_base_value_fields", scope: !3, file: !3, line: 325, type: !4057, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4059)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{null, !3039, !811}
!4059 = !{!4060, !4061}
!4060 = !DILocalVariable(name: "bp", arg: 1, scope: !4056, file: !3, line: 325, type: !3039)
!4061 = !DILocalVariable(name: "expr", arg: 2, scope: !4056, file: !3, line: 325, type: !811)
!4062 = !DILocation(line: 0, scope: !4056)
!4063 = !DILocation(line: 327, column: 22, scope: !4056)
!4064 = !DILocation(line: 327, column: 3, scope: !4056)
!4065 = !DILocation(line: 328, column: 8, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 328, column: 7)
!4067 = !DILocation(line: 328, column: 7, scope: !4056)
!4068 = !DILocation(line: 330, column: 26, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 329, column: 5)
!4070 = !DILocation(line: 330, column: 7, scope: !4069)
!4071 = !DILocation(line: 331, column: 26, scope: !4069)
!4072 = !DILocation(line: 331, column: 7, scope: !4069)
!4073 = !DILocation(line: 332, column: 26, scope: !4069)
!4074 = !DILocation(line: 332, column: 7, scope: !4069)
!4075 = !DILocation(line: 337, column: 26, scope: !4069)
!4076 = !DILocation(line: 337, column: 7, scope: !4069)
!4077 = !DILocation(line: 339, column: 22, scope: !4056)
!4078 = !DILocation(line: 338, column: 5, scope: !4069)
!4079 = !DILocation(line: 339, column: 3, scope: !4056)
!4080 = !DILocation(line: 340, column: 22, scope: !4056)
!4081 = !DILocation(line: 340, column: 3, scope: !4056)
!4082 = !DILocation(line: 341, column: 7, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 341, column: 7)
!4084 = !DILocation(line: 341, column: 7, scope: !4056)
!4085 = !DILocation(line: 342, column: 24, scope: !4083)
!4086 = !DILocation(line: 342, column: 5, scope: !4083)
!4087 = !DILocation(line: 343, column: 12, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4083, file: !3, line: 343, column: 12)
!4089 = !DILocation(line: 343, column: 12, scope: !4083)
!4090 = !DILocation(line: 344, column: 24, scope: !4088)
!4091 = !DILocation(line: 344, column: 5, scope: !4088)
!4092 = !DILocation(line: 346, column: 22, scope: !4056)
!4093 = !DILocation(line: 346, column: 42, scope: !4056)
!4094 = !DILocation(line: 346, column: 3, scope: !4056)
!4095 = !DILocation(line: 347, column: 22, scope: !4056)
!4096 = !DILocation(line: 347, column: 3, scope: !4056)
!4097 = !DILocation(line: 348, column: 22, scope: !4056)
!4098 = !DILocation(line: 348, column: 3, scope: !4056)
!4099 = !DILocation(line: 349, column: 22, scope: !4056)
!4100 = !DILocation(line: 349, column: 3, scope: !4056)
!4101 = !DILocation(line: 350, column: 22, scope: !4056)
!4102 = !DILocation(line: 350, column: 3, scope: !4056)
!4103 = !DILocation(line: 351, column: 22, scope: !4056)
!4104 = !DILocation(line: 351, column: 3, scope: !4056)
!4105 = !DILocation(line: 352, column: 22, scope: !4056)
!4106 = !DILocation(line: 352, column: 3, scope: !4056)
!4107 = !DILocation(line: 353, column: 22, scope: !4056)
!4108 = !DILocation(line: 353, column: 3, scope: !4056)
!4109 = !DILocation(line: 354, column: 7, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 354, column: 7)
!4111 = !DILocation(line: 354, column: 7, scope: !4056)
!4112 = !DILocation(line: 355, column: 24, scope: !4110)
!4113 = !DILocation(line: 355, column: 5, scope: !4110)
!4114 = !DILocation(line: 356, column: 7, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 356, column: 7)
!4116 = !DILocation(line: 356, column: 24, scope: !4115)
!4117 = !DILocation(line: 356, column: 7, scope: !4056)
!4118 = !DILocation(line: 357, column: 24, scope: !4115)
!4119 = !DILocation(line: 357, column: 5, scope: !4115)
!4120 = !DILocation(line: 358, column: 1, scope: !4056)
!4121 = distinct !DISubprogram(name: "pack_ts_real_cst_value_fields", scope: !3, file: !3, line: 365, type: !4057, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4122)
!4122 = !{!4123, !4124, !4125, !4126}
!4123 = !DILocalVariable(name: "bp", arg: 1, scope: !4121, file: !3, line: 365, type: !3039)
!4124 = !DILocalVariable(name: "expr", arg: 2, scope: !4121, file: !3, line: 365, type: !811)
!4125 = !DILocalVariable(name: "i", scope: !4121, file: !3, line: 367, type: !7)
!4126 = !DILocalVariable(name: "r", scope: !4121, file: !3, line: 368, type: !873)
!4127 = !DILocation(line: 0, scope: !4121)
!4128 = !DILocation(line: 368, column: 3, scope: !4121)
!4129 = !DILocation(line: 370, column: 7, scope: !4121)
!4130 = !DILocation(line: 371, column: 24, scope: !4121)
!4131 = !DILocation(line: 371, column: 22, scope: !4121)
!4132 = !DILocation(line: 371, column: 3, scope: !4121)
!4133 = !DILocation(line: 372, column: 24, scope: !4121)
!4134 = !DILocation(line: 372, column: 22, scope: !4121)
!4135 = !DILocation(line: 372, column: 3, scope: !4121)
!4136 = !DILocation(line: 373, column: 24, scope: !4121)
!4137 = !DILocation(line: 373, column: 22, scope: !4121)
!4138 = !DILocation(line: 373, column: 3, scope: !4121)
!4139 = !DILocation(line: 374, column: 24, scope: !4121)
!4140 = !DILocation(line: 374, column: 22, scope: !4121)
!4141 = !DILocation(line: 374, column: 3, scope: !4121)
!4142 = !DILocation(line: 375, column: 24, scope: !4121)
!4143 = !DILocation(line: 375, column: 22, scope: !4121)
!4144 = !DILocation(line: 375, column: 3, scope: !4121)
!4145 = !DILocation(line: 376, column: 24, scope: !4121)
!4146 = !DILocation(line: 376, column: 22, scope: !4121)
!4147 = !DILocation(line: 376, column: 3, scope: !4121)
!4148 = !DILocation(line: 377, column: 8, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 377, column: 3)
!4150 = !DILocation(line: 0, scope: !4149)
!4151 = !DILocation(line: 377, column: 17, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 377, column: 3)
!4153 = !DILocation(line: 377, column: 3, scope: !4149)
!4154 = !DILocation(line: 378, column: 24, scope: !4152)
!4155 = !DILocation(line: 378, column: 5, scope: !4152)
!4156 = !DILocation(line: 377, column: 27, scope: !4152)
!4157 = !DILocation(line: 377, column: 3, scope: !4152)
!4158 = distinct !{!4158, !4153, !4159}
!4159 = !DILocation(line: 378, column: 52, scope: !4149)
!4160 = !DILocation(line: 379, column: 1, scope: !4121)
!4161 = distinct !DISubprogram(name: "pack_ts_fixed_cst_value_fields", scope: !3, file: !3, line: 386, type: !4057, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4162)
!4162 = !{!4163, !4164, !4165}
!4163 = !DILocalVariable(name: "bp", arg: 1, scope: !4161, file: !3, line: 386, type: !3039)
!4164 = !DILocalVariable(name: "expr", arg: 2, scope: !4161, file: !3, line: 386, type: !811)
!4165 = !DILocalVariable(name: "fv", scope: !4161, file: !3, line: 388, type: !892)
!4166 = !DILocation(line: 0, scope: !4161)
!4167 = !DILocation(line: 388, column: 3, scope: !4161)
!4168 = !DILocation(line: 388, column: 27, scope: !4161)
!4169 = !DILocation(line: 389, column: 30, scope: !4161)
!4170 = !DILocation(line: 389, column: 3, scope: !4161)
!4171 = !DILocation(line: 390, column: 30, scope: !4161)
!4172 = !DILocation(line: 390, column: 3, scope: !4161)
!4173 = !DILocation(line: 391, column: 1, scope: !4161)
!4174 = distinct !DISubprogram(name: "pack_ts_decl_common_value_fields", scope: !3, file: !3, line: 398, type: !4057, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4175)
!4175 = !{!4176, !4177}
!4176 = !DILocalVariable(name: "bp", arg: 1, scope: !4174, file: !3, line: 398, type: !3039)
!4177 = !DILocalVariable(name: "expr", arg: 2, scope: !4174, file: !3, line: 398, type: !811)
!4178 = !DILocation(line: 0, scope: !4174)
!4179 = !DILocation(line: 400, column: 22, scope: !4174)
!4180 = !DILocation(line: 400, column: 3, scope: !4174)
!4181 = !DILocation(line: 401, column: 22, scope: !4174)
!4182 = !DILocation(line: 401, column: 3, scope: !4174)
!4183 = !DILocation(line: 402, column: 22, scope: !4174)
!4184 = !DILocation(line: 402, column: 3, scope: !4174)
!4185 = !DILocation(line: 403, column: 22, scope: !4174)
!4186 = !DILocation(line: 403, column: 3, scope: !4174)
!4187 = !DILocation(line: 404, column: 22, scope: !4174)
!4188 = !DILocation(line: 404, column: 3, scope: !4174)
!4189 = !DILocation(line: 405, column: 22, scope: !4174)
!4190 = !DILocation(line: 405, column: 3, scope: !4174)
!4191 = !DILocation(line: 406, column: 22, scope: !4174)
!4192 = !DILocation(line: 406, column: 3, scope: !4174)
!4193 = !DILocation(line: 407, column: 22, scope: !4174)
!4194 = !DILocation(line: 407, column: 3, scope: !4174)
!4195 = !DILocation(line: 408, column: 22, scope: !4174)
!4196 = !DILocation(line: 408, column: 3, scope: !4174)
!4197 = !DILocation(line: 409, column: 22, scope: !4174)
!4198 = !DILocation(line: 409, column: 3, scope: !4174)
!4199 = !DILocation(line: 410, column: 22, scope: !4174)
!4200 = !DILocation(line: 410, column: 3, scope: !4174)
!4201 = !DILocation(line: 411, column: 22, scope: !4174)
!4202 = !DILocation(line: 411, column: 3, scope: !4174)
!4203 = !DILocation(line: 413, column: 7, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 413, column: 7)
!4205 = !DILocation(line: 413, column: 24, scope: !4204)
!4206 = !DILocation(line: 413, column: 7, scope: !4174)
!4207 = !DILocation(line: 418, column: 26, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 414, column: 5)
!4209 = !DILocation(line: 418, column: 7, scope: !4208)
!4210 = !DILocation(line: 419, column: 26, scope: !4208)
!4211 = !DILocation(line: 419, column: 7, scope: !4208)
!4212 = !DILocation(line: 422, column: 7, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 422, column: 7)
!4214 = !DILocation(line: 420, column: 5, scope: !4208)
!4215 = !DILocation(line: 422, column: 24, scope: !4213)
!4216 = !DILocation(line: 422, column: 7, scope: !4174)
!4217 = !DILocation(line: 424, column: 26, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 423, column: 5)
!4219 = !DILocation(line: 424, column: 7, scope: !4218)
!4220 = !DILocation(line: 425, column: 26, scope: !4218)
!4221 = !DILocation(line: 425, column: 7, scope: !4218)
!4222 = !DILocation(line: 426, column: 26, scope: !4218)
!4223 = !DILocation(line: 426, column: 7, scope: !4218)
!4224 = !DILocation(line: 429, column: 7, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 429, column: 7)
!4226 = !DILocation(line: 429, column: 24, scope: !4225)
!4227 = !DILocation(line: 427, column: 5, scope: !4218)
!4228 = !DILocation(line: 430, column: 7, scope: !4225)
!4229 = !DILocation(line: 430, column: 27, scope: !4225)
!4230 = !DILocation(line: 431, column: 7, scope: !4225)
!4231 = !DILocation(line: 431, column: 27, scope: !4225)
!4232 = !DILocation(line: 429, column: 7, scope: !4174)
!4233 = !DILocation(line: 433, column: 26, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 432, column: 5)
!4235 = !DILocation(line: 433, column: 7, scope: !4234)
!4236 = !DILocation(line: 434, column: 11, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 434, column: 11)
!4238 = !DILocation(line: 434, column: 28, scope: !4237)
!4239 = !DILocation(line: 435, column: 4, scope: !4237)
!4240 = !DILocation(line: 435, column: 24, scope: !4237)
!4241 = !DILocation(line: 434, column: 11, scope: !4234)
!4242 = !DILocation(line: 436, column: 21, scope: !4237)
!4243 = !DILocation(line: 436, column: 2, scope: !4237)
!4244 = !DILocation(line: 437, column: 26, scope: !4234)
!4245 = !DILocation(line: 437, column: 7, scope: !4234)
!4246 = !DILocation(line: 438, column: 5, scope: !4234)
!4247 = !DILocation(line: 439, column: 1, scope: !4174)
!4248 = distinct !DISubprogram(name: "pack_ts_decl_wrtl_value_fields", scope: !3, file: !3, line: 446, type: !4057, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4249)
!4249 = !{!4250, !4251}
!4250 = !DILocalVariable(name: "bp", arg: 1, scope: !4248, file: !3, line: 446, type: !3039)
!4251 = !DILocalVariable(name: "expr", arg: 2, scope: !4248, file: !3, line: 446, type: !811)
!4252 = !DILocation(line: 0, scope: !4248)
!4253 = !DILocation(line: 448, column: 22, scope: !4248)
!4254 = !DILocation(line: 448, column: 3, scope: !4248)
!4255 = !DILocation(line: 449, column: 1, scope: !4248)
!4256 = distinct !DISubprogram(name: "pack_ts_decl_with_vis_value_fields", scope: !3, file: !3, line: 456, type: !4057, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4257)
!4257 = !{!4258, !4259}
!4258 = !DILocalVariable(name: "bp", arg: 1, scope: !4256, file: !3, line: 456, type: !3039)
!4259 = !DILocalVariable(name: "expr", arg: 2, scope: !4256, file: !3, line: 456, type: !811)
!4260 = !DILocation(line: 0, scope: !4256)
!4261 = !DILocation(line: 458, column: 22, scope: !4256)
!4262 = !DILocation(line: 458, column: 3, scope: !4256)
!4263 = !DILocation(line: 459, column: 22, scope: !4256)
!4264 = !DILocation(line: 459, column: 3, scope: !4256)
!4265 = !DILocation(line: 460, column: 22, scope: !4256)
!4266 = !DILocation(line: 460, column: 3, scope: !4256)
!4267 = !DILocation(line: 461, column: 22, scope: !4256)
!4268 = !DILocation(line: 461, column: 3, scope: !4256)
!4269 = !DILocation(line: 462, column: 22, scope: !4256)
!4270 = !DILocation(line: 462, column: 3, scope: !4256)
!4271 = !DILocation(line: 463, column: 22, scope: !4256)
!4272 = !DILocation(line: 463, column: 3, scope: !4256)
!4273 = !DILocation(line: 464, column: 22, scope: !4256)
!4274 = !DILocation(line: 464, column: 3, scope: !4256)
!4275 = !DILocation(line: 465, column: 22, scope: !4256)
!4276 = !DILocation(line: 465, column: 3, scope: !4256)
!4277 = !DILocation(line: 467, column: 7, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 467, column: 7)
!4279 = !DILocation(line: 467, column: 24, scope: !4278)
!4280 = !DILocation(line: 467, column: 7, scope: !4256)
!4281 = !DILocation(line: 469, column: 26, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 468, column: 5)
!4283 = !DILocation(line: 469, column: 7, scope: !4282)
!4284 = !DILocation(line: 470, column: 26, scope: !4282)
!4285 = !DILocation(line: 470, column: 7, scope: !4282)
!4286 = !DILocation(line: 471, column: 26, scope: !4282)
!4287 = !DILocation(line: 471, column: 7, scope: !4282)
!4288 = !DILocation(line: 474, column: 7, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 474, column: 7)
!4290 = !DILocation(line: 472, column: 5, scope: !4282)
!4291 = !DILocation(line: 474, column: 7, scope: !4256)
!4292 = !DILocation(line: 475, column: 24, scope: !4289)
!4293 = !DILocation(line: 475, column: 5, scope: !4289)
!4294 = !DILocation(line: 476, column: 1, scope: !4256)
!4295 = distinct !DISubprogram(name: "pack_ts_function_decl_value_fields", scope: !3, file: !3, line: 483, type: !4057, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4296)
!4296 = !{!4297, !4298}
!4297 = !DILocalVariable(name: "bp", arg: 1, scope: !4295, file: !3, line: 483, type: !3039)
!4298 = !DILocalVariable(name: "expr", arg: 2, scope: !4295, file: !3, line: 483, type: !811)
!4299 = !DILocation(line: 0, scope: !4295)
!4300 = !DILocation(line: 487, column: 3, scope: !4295)
!4301 = !DILocation(line: 489, column: 22, scope: !4295)
!4302 = !DILocation(line: 489, column: 3, scope: !4295)
!4303 = !DILocation(line: 490, column: 22, scope: !4295)
!4304 = !DILocation(line: 490, column: 3, scope: !4295)
!4305 = !DILocation(line: 491, column: 22, scope: !4295)
!4306 = !DILocation(line: 491, column: 3, scope: !4295)
!4307 = !DILocation(line: 492, column: 22, scope: !4295)
!4308 = !DILocation(line: 492, column: 3, scope: !4295)
!4309 = !DILocation(line: 493, column: 22, scope: !4295)
!4310 = !DILocation(line: 493, column: 3, scope: !4295)
!4311 = !DILocation(line: 494, column: 22, scope: !4295)
!4312 = !DILocation(line: 494, column: 3, scope: !4295)
!4313 = !DILocation(line: 495, column: 22, scope: !4295)
!4314 = !DILocation(line: 495, column: 3, scope: !4295)
!4315 = !DILocation(line: 496, column: 22, scope: !4295)
!4316 = !DILocation(line: 496, column: 3, scope: !4295)
!4317 = !DILocation(line: 497, column: 22, scope: !4295)
!4318 = !DILocation(line: 497, column: 3, scope: !4295)
!4319 = !DILocation(line: 498, column: 22, scope: !4295)
!4320 = !DILocation(line: 498, column: 3, scope: !4295)
!4321 = !DILocation(line: 499, column: 22, scope: !4295)
!4322 = !DILocation(line: 499, column: 3, scope: !4295)
!4323 = !DILocation(line: 500, column: 22, scope: !4295)
!4324 = !DILocation(line: 500, column: 3, scope: !4295)
!4325 = !DILocation(line: 501, column: 22, scope: !4295)
!4326 = !DILocation(line: 501, column: 3, scope: !4295)
!4327 = !DILocation(line: 502, column: 22, scope: !4295)
!4328 = !DILocation(line: 502, column: 3, scope: !4295)
!4329 = !DILocation(line: 503, column: 22, scope: !4295)
!4330 = !DILocation(line: 503, column: 3, scope: !4295)
!4331 = !DILocation(line: 504, column: 22, scope: !4295)
!4332 = !DILocation(line: 504, column: 3, scope: !4295)
!4333 = !DILocation(line: 505, column: 22, scope: !4295)
!4334 = !DILocation(line: 505, column: 3, scope: !4295)
!4335 = !DILocation(line: 506, column: 22, scope: !4295)
!4336 = !DILocation(line: 506, column: 3, scope: !4295)
!4337 = !DILocation(line: 507, column: 1, scope: !4295)
!4338 = distinct !DISubprogram(name: "pack_ts_type_value_fields", scope: !3, file: !3, line: 514, type: !4057, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4339)
!4339 = !{!4340, !4341}
!4340 = !DILocalVariable(name: "bp", arg: 1, scope: !4338, file: !3, line: 514, type: !3039)
!4341 = !DILocalVariable(name: "expr", arg: 2, scope: !4338, file: !3, line: 514, type: !811)
!4342 = !DILocation(line: 0, scope: !4338)
!4343 = !DILocation(line: 516, column: 22, scope: !4338)
!4344 = !DILocation(line: 516, column: 3, scope: !4338)
!4345 = !DILocation(line: 517, column: 22, scope: !4338)
!4346 = !DILocation(line: 517, column: 3, scope: !4338)
!4347 = !DILocation(line: 518, column: 22, scope: !4338)
!4348 = !DILocation(line: 518, column: 3, scope: !4338)
!4349 = !DILocation(line: 519, column: 22, scope: !4338)
!4350 = !DILocation(line: 519, column: 3, scope: !4338)
!4351 = !DILocation(line: 520, column: 22, scope: !4338)
!4352 = !DILocation(line: 520, column: 3, scope: !4338)
!4353 = !DILocation(line: 521, column: 7, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 521, column: 7)
!4355 = !DILocation(line: 521, column: 24, scope: !4354)
!4356 = !DILocation(line: 521, column: 38, scope: !4354)
!4357 = !DILocation(line: 521, column: 58, scope: !4354)
!4358 = !DILocation(line: 521, column: 7, scope: !4338)
!4359 = !DILocation(line: 522, column: 24, scope: !4354)
!4360 = !DILocation(line: 522, column: 5, scope: !4354)
!4361 = !DILocation(line: 523, column: 22, scope: !4338)
!4362 = !DILocation(line: 523, column: 3, scope: !4338)
!4363 = !DILocation(line: 524, column: 22, scope: !4338)
!4364 = !DILocation(line: 524, column: 3, scope: !4338)
!4365 = !DILocation(line: 525, column: 22, scope: !4338)
!4366 = !DILocation(line: 525, column: 3, scope: !4338)
!4367 = !DILocation(line: 526, column: 22, scope: !4338)
!4368 = !DILocation(line: 526, column: 3, scope: !4338)
!4369 = !DILocation(line: 527, column: 22, scope: !4338)
!4370 = !DILocation(line: 527, column: 3, scope: !4338)
!4371 = !DILocation(line: 528, column: 22, scope: !4338)
!4372 = !DILocation(line: 528, column: 3, scope: !4338)
!4373 = !DILocation(line: 529, column: 22, scope: !4338)
!4374 = !DILocation(line: 529, column: 44, scope: !4338)
!4375 = !DILocation(line: 529, column: 3, scope: !4338)
!4376 = !DILocation(line: 530, column: 1, scope: !4338)
!4377 = distinct !DISubprogram(name: "pack_ts_block_value_fields", scope: !3, file: !3, line: 537, type: !4057, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4378)
!4378 = !{!4379, !4380}
!4379 = !DILocalVariable(name: "bp", arg: 1, scope: !4377, file: !3, line: 537, type: !3039)
!4380 = !DILocalVariable(name: "expr", arg: 2, scope: !4377, file: !3, line: 537, type: !811)
!4381 = !DILocation(line: 0, scope: !4377)
!4382 = !DILocation(line: 539, column: 22, scope: !4377)
!4383 = !DILocation(line: 539, column: 3, scope: !4377)
!4384 = !DILocation(line: 540, column: 22, scope: !4377)
!4385 = !DILocation(line: 540, column: 3, scope: !4377)
!4386 = !DILocation(line: 541, column: 1, scope: !4377)
!4387 = distinct !DISubprogram(name: "lto_output_ts_common_tree_pointers", scope: !3, file: !3, line: 789, type: !3106, scopeLine: 791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4388)
!4388 = !{!4389, !4390, !4391}
!4389 = !DILocalVariable(name: "ob", arg: 1, scope: !4387, file: !3, line: 789, type: !732)
!4390 = !DILocalVariable(name: "expr", arg: 2, scope: !4387, file: !3, line: 789, type: !811)
!4391 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4387, file: !3, line: 790, type: !724)
!4392 = !DILocation(line: 0, scope: !4387)
!4393 = !DILocation(line: 792, column: 31, scope: !4387)
!4394 = !DILocation(line: 792, column: 3, scope: !4387)
!4395 = !DILocation(line: 793, column: 1, scope: !4387)
!4396 = distinct !DISubprogram(name: "lto_output_ts_vector_tree_pointers", scope: !3, file: !3, line: 801, type: !3106, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4397)
!4397 = !{!4398, !4399, !4400}
!4398 = !DILocalVariable(name: "ob", arg: 1, scope: !4396, file: !3, line: 801, type: !732)
!4399 = !DILocalVariable(name: "expr", arg: 2, scope: !4396, file: !3, line: 801, type: !811)
!4400 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4396, file: !3, line: 802, type: !724)
!4401 = !DILocation(line: 0, scope: !4396)
!4402 = !DILocation(line: 804, column: 25, scope: !4396)
!4403 = !DILocation(line: 804, column: 3, scope: !4396)
!4404 = !DILocation(line: 805, column: 1, scope: !4396)
!4405 = distinct !DISubprogram(name: "lto_output_ts_complex_tree_pointers", scope: !3, file: !3, line: 813, type: !3106, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4406)
!4406 = !{!4407, !4408, !4409}
!4407 = !DILocalVariable(name: "ob", arg: 1, scope: !4405, file: !3, line: 813, type: !732)
!4408 = !DILocalVariable(name: "expr", arg: 2, scope: !4405, file: !3, line: 813, type: !811)
!4409 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4405, file: !3, line: 814, type: !724)
!4410 = !DILocation(line: 0, scope: !4405)
!4411 = !DILocation(line: 816, column: 31, scope: !4405)
!4412 = !DILocation(line: 816, column: 3, scope: !4405)
!4413 = !DILocation(line: 817, column: 31, scope: !4405)
!4414 = !DILocation(line: 817, column: 3, scope: !4405)
!4415 = !DILocation(line: 818, column: 1, scope: !4405)
!4416 = distinct !DISubprogram(name: "lto_output_ts_decl_minimal_tree_pointers", scope: !3, file: !3, line: 826, type: !3106, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4417)
!4417 = !{!4418, !4419, !4420}
!4418 = !DILocalVariable(name: "ob", arg: 1, scope: !4416, file: !3, line: 826, type: !732)
!4419 = !DILocalVariable(name: "expr", arg: 2, scope: !4416, file: !3, line: 826, type: !811)
!4420 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4416, file: !3, line: 827, type: !724)
!4421 = !DILocation(line: 0, scope: !4416)
!4422 = !DILocation(line: 829, column: 31, scope: !4416)
!4423 = !DILocation(line: 829, column: 3, scope: !4416)
!4424 = !DILocation(line: 830, column: 31, scope: !4416)
!4425 = !DILocation(line: 830, column: 3, scope: !4416)
!4426 = !DILocation(line: 831, column: 28, scope: !4416)
!4427 = !DILocation(line: 831, column: 3, scope: !4416)
!4428 = !DILocation(line: 832, column: 1, scope: !4416)
!4429 = distinct !DISubprogram(name: "lto_output_ts_decl_common_tree_pointers", scope: !3, file: !3, line: 840, type: !3106, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4430)
!4430 = !{!4431, !4432, !4433}
!4431 = !DILocalVariable(name: "ob", arg: 1, scope: !4429, file: !3, line: 840, type: !732)
!4432 = !DILocalVariable(name: "expr", arg: 2, scope: !4429, file: !3, line: 840, type: !811)
!4433 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4429, file: !3, line: 841, type: !724)
!4434 = !DILocation(line: 0, scope: !4429)
!4435 = !DILocation(line: 843, column: 31, scope: !4429)
!4436 = !DILocation(line: 843, column: 3, scope: !4429)
!4437 = !DILocation(line: 844, column: 31, scope: !4429)
!4438 = !DILocation(line: 844, column: 3, scope: !4429)
!4439 = !DILocation(line: 846, column: 7, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 846, column: 7)
!4441 = !DILocation(line: 846, column: 24, scope: !4440)
!4442 = !DILocation(line: 846, column: 7, scope: !4429)
!4443 = !DILocation(line: 847, column: 33, scope: !4440)
!4444 = !DILocation(line: 847, column: 5, scope: !4440)
!4445 = !DILocation(line: 849, column: 31, scope: !4429)
!4446 = !DILocation(line: 849, column: 3, scope: !4429)
!4447 = !DILocation(line: 850, column: 31, scope: !4429)
!4448 = !DILocation(line: 850, column: 3, scope: !4429)
!4449 = !DILocation(line: 852, column: 7, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 852, column: 7)
!4451 = !DILocation(line: 852, column: 24, scope: !4450)
!4452 = !DILocation(line: 852, column: 7, scope: !4429)
!4453 = !DILocation(line: 853, column: 27, scope: !4450)
!4454 = !DILocation(line: 853, column: 5, scope: !4450)
!4455 = !DILocation(line: 855, column: 8, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 855, column: 7)
!4457 = !DILocation(line: 855, column: 25, scope: !4456)
!4458 = !DILocation(line: 856, column: 8, scope: !4456)
!4459 = !DILocation(line: 856, column: 28, scope: !4456)
!4460 = !DILocation(line: 857, column: 7, scope: !4456)
!4461 = !DILocation(line: 857, column: 10, scope: !4456)
!4462 = !DILocation(line: 855, column: 7, scope: !4429)
!4463 = !DILocation(line: 858, column: 33, scope: !4456)
!4464 = !DILocation(line: 858, column: 5, scope: !4456)
!4465 = !DILocation(line: 859, column: 1, scope: !4429)
!4466 = distinct !DISubprogram(name: "lto_output_ts_decl_non_common_tree_pointers", scope: !3, file: !3, line: 867, type: !3106, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4467)
!4467 = !{!4468, !4469, !4470}
!4468 = !DILocalVariable(name: "ob", arg: 1, scope: !4466, file: !3, line: 867, type: !732)
!4469 = !DILocalVariable(name: "expr", arg: 2, scope: !4466, file: !3, line: 868, type: !811)
!4470 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4466, file: !3, line: 868, type: !724)
!4471 = !DILocation(line: 0, scope: !4466)
!4472 = !DILocation(line: 870, column: 7, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 870, column: 7)
!4474 = !DILocation(line: 870, column: 24, scope: !4473)
!4475 = !DILocation(line: 870, column: 7, scope: !4466)
!4476 = !DILocation(line: 876, column: 7, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 871, column: 5)
!4478 = !DILocation(line: 877, column: 35, scope: !4477)
!4479 = !DILocation(line: 877, column: 7, scope: !4477)
!4480 = !DILocation(line: 878, column: 35, scope: !4477)
!4481 = !DILocation(line: 878, column: 7, scope: !4477)
!4482 = !DILocation(line: 879, column: 5, scope: !4477)
!4483 = !DILocation(line: 880, column: 31, scope: !4466)
!4484 = !DILocation(line: 880, column: 3, scope: !4466)
!4485 = !DILocation(line: 881, column: 1, scope: !4466)
!4486 = distinct !DISubprogram(name: "lto_output_ts_decl_with_vis_tree_pointers", scope: !3, file: !3, line: 889, type: !3106, scopeLine: 891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4487)
!4487 = !{!4488, !4489, !4490}
!4488 = !DILocalVariable(name: "ob", arg: 1, scope: !4486, file: !3, line: 889, type: !732)
!4489 = !DILocalVariable(name: "expr", arg: 2, scope: !4486, file: !3, line: 889, type: !811)
!4490 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4486, file: !3, line: 890, type: !724)
!4491 = !DILocation(line: 0, scope: !4486)
!4492 = !DILocation(line: 893, column: 7, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4486, file: !3, line: 893, column: 7)
!4494 = !DILocation(line: 893, column: 7, scope: !4486)
!4495 = !DILocation(line: 894, column: 33, scope: !4493)
!4496 = !DILocation(line: 894, column: 5, scope: !4493)
!4497 = !DILocation(line: 896, column: 5, scope: !4493)
!4498 = !DILocation(line: 898, column: 31, scope: !4486)
!4499 = !DILocation(line: 898, column: 3, scope: !4486)
!4500 = !DILocation(line: 899, column: 31, scope: !4486)
!4501 = !DILocation(line: 899, column: 3, scope: !4486)
!4502 = !DILocation(line: 900, column: 1, scope: !4486)
!4503 = distinct !DISubprogram(name: "lto_output_ts_field_decl_tree_pointers", scope: !3, file: !3, line: 908, type: !3106, scopeLine: 910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4504)
!4504 = !{!4505, !4506, !4507}
!4505 = !DILocalVariable(name: "ob", arg: 1, scope: !4503, file: !3, line: 908, type: !732)
!4506 = !DILocalVariable(name: "expr", arg: 2, scope: !4503, file: !3, line: 908, type: !811)
!4507 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4503, file: !3, line: 909, type: !724)
!4508 = !DILocation(line: 0, scope: !4503)
!4509 = !DILocation(line: 911, column: 31, scope: !4503)
!4510 = !DILocation(line: 911, column: 3, scope: !4503)
!4511 = !DILocation(line: 912, column: 31, scope: !4503)
!4512 = !DILocation(line: 912, column: 3, scope: !4503)
!4513 = !DILocation(line: 913, column: 31, scope: !4503)
!4514 = !DILocation(line: 913, column: 3, scope: !4503)
!4515 = !DILocation(line: 914, column: 31, scope: !4503)
!4516 = !DILocation(line: 914, column: 3, scope: !4503)
!4517 = !DILocation(line: 915, column: 31, scope: !4503)
!4518 = !DILocation(line: 915, column: 3, scope: !4503)
!4519 = !DILocation(line: 916, column: 25, scope: !4503)
!4520 = !DILocation(line: 916, column: 3, scope: !4503)
!4521 = !DILocation(line: 917, column: 1, scope: !4503)
!4522 = distinct !DISubprogram(name: "lto_output_ts_function_decl_tree_pointers", scope: !3, file: !3, line: 925, type: !3106, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4523)
!4523 = !{!4524, !4525, !4526}
!4524 = !DILocalVariable(name: "ob", arg: 1, scope: !4522, file: !3, line: 925, type: !732)
!4525 = !DILocalVariable(name: "expr", arg: 2, scope: !4522, file: !3, line: 925, type: !811)
!4526 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4522, file: !3, line: 926, type: !724)
!4527 = !DILocation(line: 0, scope: !4522)
!4528 = !DILocation(line: 930, column: 31, scope: !4522)
!4529 = !DILocation(line: 930, column: 3, scope: !4522)
!4530 = !DILocation(line: 931, column: 31, scope: !4522)
!4531 = !DILocation(line: 931, column: 3, scope: !4522)
!4532 = !DILocation(line: 932, column: 31, scope: !4522)
!4533 = !DILocation(line: 932, column: 3, scope: !4522)
!4534 = !DILocation(line: 934, column: 1, scope: !4522)
!4535 = distinct !DISubprogram(name: "lto_output_ts_type_tree_pointers", scope: !3, file: !3, line: 942, type: !3106, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4536)
!4536 = !{!4537, !4538, !4539}
!4537 = !DILocalVariable(name: "ob", arg: 1, scope: !4535, file: !3, line: 942, type: !732)
!4538 = !DILocalVariable(name: "expr", arg: 2, scope: !4535, file: !3, line: 942, type: !811)
!4539 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4535, file: !3, line: 943, type: !724)
!4540 = !DILocation(line: 0, scope: !4535)
!4541 = !DILocation(line: 945, column: 7, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 945, column: 7)
!4543 = !DILocation(line: 945, column: 24, scope: !4542)
!4544 = !DILocation(line: 945, column: 7, scope: !4535)
!4545 = !DILocation(line: 946, column: 33, scope: !4542)
!4546 = !DILocation(line: 946, column: 5, scope: !4542)
!4547 = !DILocation(line: 947, column: 29, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 947, column: 12)
!4549 = !DILocation(line: 947, column: 12, scope: !4542)
!4550 = !DILocation(line: 948, column: 33, scope: !4548)
!4551 = !DILocation(line: 948, column: 5, scope: !4548)
!4552 = !DILocation(line: 949, column: 29, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 949, column: 12)
!4554 = !DILocation(line: 949, column: 44, scope: !4553)
!4555 = !DILocation(line: 949, column: 64, scope: !4553)
!4556 = !DILocation(line: 949, column: 12, scope: !4548)
!4557 = !DILocation(line: 950, column: 33, scope: !4553)
!4558 = !DILocation(line: 950, column: 5, scope: !4553)
!4559 = !DILocation(line: 951, column: 29, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 951, column: 12)
!4561 = !DILocation(line: 951, column: 46, scope: !4560)
!4562 = !DILocation(line: 951, column: 66, scope: !4560)
!4563 = !DILocation(line: 951, column: 12, scope: !4553)
!4564 = !DILocation(line: 952, column: 33, scope: !4560)
!4565 = !DILocation(line: 952, column: 5, scope: !4560)
!4566 = !DILocation(line: 953, column: 29, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 953, column: 12)
!4568 = !DILocation(line: 953, column: 12, scope: !4560)
!4569 = !DILocation(line: 954, column: 33, scope: !4567)
!4570 = !DILocation(line: 954, column: 5, scope: !4567)
!4571 = !DILocation(line: 956, column: 31, scope: !4535)
!4572 = !DILocation(line: 956, column: 3, scope: !4535)
!4573 = !DILocation(line: 957, column: 31, scope: !4535)
!4574 = !DILocation(line: 957, column: 3, scope: !4535)
!4575 = !DILocation(line: 958, column: 31, scope: !4535)
!4576 = !DILocation(line: 958, column: 3, scope: !4535)
!4577 = !DILocation(line: 959, column: 31, scope: !4535)
!4578 = !DILocation(line: 959, column: 3, scope: !4535)
!4579 = !DILocation(line: 962, column: 8, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 962, column: 7)
!4581 = !DILocation(line: 962, column: 7, scope: !4535)
!4582 = !DILocation(line: 963, column: 33, scope: !4580)
!4583 = !DILocation(line: 963, column: 5, scope: !4580)
!4584 = !DILocation(line: 964, column: 31, scope: !4535)
!4585 = !DILocation(line: 964, column: 3, scope: !4535)
!4586 = !DILocation(line: 965, column: 31, scope: !4535)
!4587 = !DILocation(line: 965, column: 3, scope: !4535)
!4588 = !DILocation(line: 968, column: 7, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 968, column: 7)
!4590 = !DILocation(line: 968, column: 24, scope: !4589)
!4591 = !DILocation(line: 968, column: 39, scope: !4589)
!4592 = !DILocation(line: 968, column: 59, scope: !4589)
!4593 = !DILocation(line: 968, column: 7, scope: !4535)
!4594 = !DILocation(line: 969, column: 33, scope: !4589)
!4595 = !DILocation(line: 969, column: 5, scope: !4589)
!4596 = !DILocation(line: 970, column: 31, scope: !4535)
!4597 = !DILocation(line: 970, column: 3, scope: !4535)
!4598 = !DILocation(line: 971, column: 31, scope: !4535)
!4599 = !DILocation(line: 971, column: 3, scope: !4535)
!4600 = !DILocation(line: 972, column: 31, scope: !4535)
!4601 = !DILocation(line: 972, column: 3, scope: !4535)
!4602 = !DILocation(line: 973, column: 1, scope: !4535)
!4603 = distinct !DISubprogram(name: "lto_output_ts_list_tree_pointers", scope: !3, file: !3, line: 981, type: !3106, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4604)
!4604 = !{!4605, !4606, !4607}
!4605 = !DILocalVariable(name: "ob", arg: 1, scope: !4603, file: !3, line: 981, type: !732)
!4606 = !DILocalVariable(name: "expr", arg: 2, scope: !4603, file: !3, line: 981, type: !811)
!4607 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4603, file: !3, line: 982, type: !724)
!4608 = !DILocation(line: 0, scope: !4603)
!4609 = !DILocation(line: 984, column: 31, scope: !4603)
!4610 = !DILocation(line: 984, column: 3, scope: !4603)
!4611 = !DILocation(line: 985, column: 31, scope: !4603)
!4612 = !DILocation(line: 985, column: 3, scope: !4603)
!4613 = !DILocation(line: 986, column: 25, scope: !4603)
!4614 = !DILocation(line: 986, column: 3, scope: !4603)
!4615 = !DILocation(line: 987, column: 1, scope: !4603)
!4616 = distinct !DISubprogram(name: "lto_output_ts_vec_tree_pointers", scope: !3, file: !3, line: 995, type: !3106, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4617)
!4617 = !{!4618, !4619, !4620, !4621}
!4618 = !DILocalVariable(name: "ob", arg: 1, scope: !4616, file: !3, line: 995, type: !732)
!4619 = !DILocalVariable(name: "expr", arg: 2, scope: !4616, file: !3, line: 995, type: !811)
!4620 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4616, file: !3, line: 995, type: !724)
!4621 = !DILocalVariable(name: "i", scope: !4616, file: !3, line: 997, type: !725)
!4622 = !DILocation(line: 0, scope: !4616)
!4623 = !DILocation(line: 0, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 1001, column: 3)
!4625 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 1001, column: 3)
!4626 = !DILocation(line: 1001, column: 8, scope: !4625)
!4627 = !DILocation(line: 0, scope: !4625)
!4628 = !DILocation(line: 1001, column: 19, scope: !4624)
!4629 = !DILocation(line: 1001, column: 17, scope: !4624)
!4630 = !DILocation(line: 1001, column: 3, scope: !4625)
!4631 = !DILocation(line: 1002, column: 33, scope: !4624)
!4632 = !DILocation(line: 1002, column: 5, scope: !4624)
!4633 = !DILocation(line: 1001, column: 44, scope: !4624)
!4634 = !DILocation(line: 1001, column: 3, scope: !4624)
!4635 = distinct !{!4635, !4630, !4636}
!4636 = !DILocation(line: 1002, column: 62, scope: !4625)
!4637 = !DILocation(line: 1003, column: 1, scope: !4616)
!4638 = distinct !DISubprogram(name: "lto_output_ts_exp_tree_pointers", scope: !3, file: !3, line: 1011, type: !3106, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4639)
!4639 = !{!4640, !4641, !4642, !4643}
!4640 = !DILocalVariable(name: "ob", arg: 1, scope: !4638, file: !3, line: 1011, type: !732)
!4641 = !DILocalVariable(name: "expr", arg: 2, scope: !4638, file: !3, line: 1011, type: !811)
!4642 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4638, file: !3, line: 1011, type: !724)
!4643 = !DILocalVariable(name: "i", scope: !4638, file: !3, line: 1013, type: !725)
!4644 = !DILocation(line: 0, scope: !4638)
!4645 = !DILocation(line: 1015, column: 23, scope: !4638)
!4646 = !DILocation(line: 1015, column: 3, scope: !4638)
!4647 = !DILocation(line: 0, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 1016, column: 3)
!4649 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1016, column: 3)
!4650 = !DILocation(line: 1016, column: 8, scope: !4649)
!4651 = !DILocation(line: 0, scope: !4649)
!4652 = !DILocation(line: 1016, column: 19, scope: !4648)
!4653 = !DILocation(line: 1016, column: 17, scope: !4648)
!4654 = !DILocation(line: 1016, column: 3, scope: !4649)
!4655 = !DILocation(line: 1017, column: 33, scope: !4648)
!4656 = !DILocation(line: 1017, column: 5, scope: !4648)
!4657 = !DILocation(line: 1016, column: 48, scope: !4648)
!4658 = !DILocation(line: 1016, column: 3, scope: !4648)
!4659 = distinct !{!4659, !4654, !4660}
!4660 = !DILocation(line: 1017, column: 62, scope: !4649)
!4661 = !DILocation(line: 1018, column: 28, scope: !4638)
!4662 = !DILocation(line: 1018, column: 3, scope: !4638)
!4663 = !DILocation(line: 1019, column: 31, scope: !4638)
!4664 = !DILocation(line: 1019, column: 3, scope: !4638)
!4665 = !DILocation(line: 1020, column: 1, scope: !4638)
!4666 = distinct !DISubprogram(name: "lto_output_ts_block_tree_pointers", scope: !3, file: !3, line: 1028, type: !3106, scopeLine: 1030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4667)
!4667 = !{!4668, !4669, !4670, !4671, !4672}
!4668 = !DILocalVariable(name: "ob", arg: 1, scope: !4666, file: !3, line: 1028, type: !732)
!4669 = !DILocalVariable(name: "expr", arg: 2, scope: !4666, file: !3, line: 1028, type: !811)
!4670 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4666, file: !3, line: 1029, type: !724)
!4671 = !DILocalVariable(name: "i", scope: !4666, file: !3, line: 1031, type: !7)
!4672 = !DILocalVariable(name: "t", scope: !4666, file: !3, line: 1032, type: !811)
!4673 = !DILocation(line: 0, scope: !4666)
!4674 = !DILocation(line: 1032, column: 3, scope: !4666)
!4675 = !DILocation(line: 1034, column: 28, scope: !4666)
!4676 = !DILocation(line: 1034, column: 3, scope: !4666)
!4677 = !DILocation(line: 1035, column: 25, scope: !4666)
!4678 = !DILocation(line: 1035, column: 3, scope: !4666)
!4679 = !DILocation(line: 1037, column: 23, scope: !4666)
!4680 = !DILocation(line: 1037, column: 3, scope: !4666)
!4681 = !DILocation(line: 1038, column: 8, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4666, file: !3, line: 1038, column: 3)
!4683 = !DILocation(line: 0, scope: !4682)
!4684 = !DILocation(line: 1038, column: 15, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 1038, column: 3)
!4686 = !DILocation(line: 1038, column: 3, scope: !4682)
!4687 = !DILocation(line: 1039, column: 33, scope: !4685)
!4688 = !DILocation(line: 1039, column: 5, scope: !4685)
!4689 = !DILocation(line: 1038, column: 74, scope: !4685)
!4690 = !DILocation(line: 1038, column: 3, scope: !4685)
!4691 = distinct !{!4691, !4686, !4692}
!4692 = !DILocation(line: 1039, column: 41, scope: !4682)
!4693 = !DILocation(line: 1041, column: 31, scope: !4666)
!4694 = !DILocation(line: 1041, column: 3, scope: !4666)
!4695 = !DILocation(line: 1042, column: 31, scope: !4666)
!4696 = !DILocation(line: 1042, column: 3, scope: !4666)
!4697 = !DILocation(line: 1043, column: 31, scope: !4666)
!4698 = !DILocation(line: 1043, column: 3, scope: !4666)
!4699 = !DILocation(line: 1044, column: 31, scope: !4666)
!4700 = !DILocation(line: 1044, column: 3, scope: !4666)
!4701 = !DILocation(line: 1045, column: 25, scope: !4666)
!4702 = !DILocation(line: 1045, column: 3, scope: !4666)
!4703 = !DILocation(line: 1046, column: 1, scope: !4666)
!4704 = distinct !DISubprogram(name: "lto_output_ts_binfo_tree_pointers", scope: !3, file: !3, line: 1054, type: !3106, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4705)
!4705 = !{!4706, !4707, !4708, !4709, !4710}
!4706 = !DILocalVariable(name: "ob", arg: 1, scope: !4704, file: !3, line: 1054, type: !732)
!4707 = !DILocalVariable(name: "expr", arg: 2, scope: !4704, file: !3, line: 1054, type: !811)
!4708 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4704, file: !3, line: 1055, type: !724)
!4709 = !DILocalVariable(name: "i", scope: !4704, file: !3, line: 1057, type: !7)
!4710 = !DILocalVariable(name: "t", scope: !4704, file: !3, line: 1058, type: !811)
!4711 = !DILocation(line: 0, scope: !4704)
!4712 = !DILocation(line: 1058, column: 3, scope: !4704)
!4713 = !DILocation(line: 0, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 1063, column: 3)
!4715 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 1063, column: 3)
!4716 = !DILocation(line: 1063, column: 8, scope: !4715)
!4717 = !DILocation(line: 0, scope: !4715)
!4718 = !DILocation(line: 1063, column: 15, scope: !4714)
!4719 = !DILocation(line: 1063, column: 3, scope: !4715)
!4720 = !DILocation(line: 1064, column: 33, scope: !4714)
!4721 = !DILocation(line: 1064, column: 5, scope: !4714)
!4722 = !DILocation(line: 1063, column: 68, scope: !4714)
!4723 = !DILocation(line: 1063, column: 3, scope: !4714)
!4724 = distinct !{!4724, !4719, !4725}
!4725 = !DILocation(line: 1064, column: 41, scope: !4715)
!4726 = !DILocation(line: 1065, column: 3, scope: !4704)
!4727 = !DILocation(line: 1067, column: 31, scope: !4704)
!4728 = !DILocation(line: 1067, column: 3, scope: !4704)
!4729 = !DILocation(line: 1068, column: 31, scope: !4704)
!4730 = !DILocation(line: 1068, column: 3, scope: !4704)
!4731 = !DILocation(line: 1069, column: 31, scope: !4704)
!4732 = !DILocation(line: 1069, column: 3, scope: !4704)
!4733 = !DILocation(line: 1070, column: 31, scope: !4704)
!4734 = !DILocation(line: 1070, column: 3, scope: !4704)
!4735 = !DILocation(line: 1072, column: 23, scope: !4704)
!4736 = !DILocation(line: 1072, column: 3, scope: !4704)
!4737 = !DILocation(line: 1073, column: 8, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 1073, column: 3)
!4739 = !DILocation(line: 0, scope: !4738)
!4740 = !DILocation(line: 1073, column: 15, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4738, file: !3, line: 1073, column: 3)
!4742 = !DILocation(line: 1073, column: 3, scope: !4738)
!4743 = !DILocation(line: 1074, column: 33, scope: !4741)
!4744 = !DILocation(line: 1074, column: 5, scope: !4741)
!4745 = !DILocation(line: 1073, column: 70, scope: !4741)
!4746 = !DILocation(line: 1073, column: 3, scope: !4741)
!4747 = distinct !{!4747, !4742, !4748}
!4748 = !DILocation(line: 1074, column: 41, scope: !4738)
!4749 = !DILocation(line: 1076, column: 31, scope: !4704)
!4750 = !DILocation(line: 1076, column: 3, scope: !4704)
!4751 = !DILocation(line: 1077, column: 31, scope: !4704)
!4752 = !DILocation(line: 1077, column: 3, scope: !4704)
!4753 = !DILocation(line: 1078, column: 31, scope: !4704)
!4754 = !DILocation(line: 1078, column: 3, scope: !4704)
!4755 = !DILocation(line: 1079, column: 1, scope: !4704)
!4756 = distinct !DISubprogram(name: "lto_output_ts_constructor_tree_pointers", scope: !3, file: !3, line: 1087, type: !3106, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4757)
!4757 = !{!4758, !4759, !4760, !4761, !4762, !4763}
!4758 = !DILocalVariable(name: "ob", arg: 1, scope: !4756, file: !3, line: 1087, type: !732)
!4759 = !DILocalVariable(name: "expr", arg: 2, scope: !4756, file: !3, line: 1087, type: !811)
!4760 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4756, file: !3, line: 1088, type: !724)
!4761 = !DILocalVariable(name: "i", scope: !4756, file: !3, line: 1090, type: !7)
!4762 = !DILocalVariable(name: "index", scope: !4756, file: !3, line: 1091, type: !811)
!4763 = !DILocalVariable(name: "value", scope: !4756, file: !3, line: 1091, type: !811)
!4764 = !DILocation(line: 0, scope: !4756)
!4765 = !DILocation(line: 1093, column: 23, scope: !4756)
!4766 = !DILocation(line: 1093, column: 3, scope: !4756)
!4767 = !DILocation(line: 1094, column: 3, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 1094, column: 3)
!4769 = !DILocation(line: 0, scope: !4768)
!4770 = !DILocation(line: 1094, column: 3, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 1094, column: 3)
!4772 = !DILocation(line: 1096, column: 7, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4771, file: !3, line: 1095, column: 5)
!4774 = !DILocation(line: 1097, column: 7, scope: !4773)
!4775 = distinct !{!4775, !4767, !4776}
!4776 = !DILocation(line: 1098, column: 5, scope: !4768)
!4777 = !DILocation(line: 1099, column: 1, scope: !4756)
!4778 = distinct !DISubprogram(name: "lto_output_chain", scope: !3, file: !3, line: 761, type: !3106, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4779)
!4779 = !{!4780, !4781, !4782, !4783, !4784, !4785}
!4780 = !DILocalVariable(name: "ob", arg: 1, scope: !4778, file: !3, line: 761, type: !732)
!4781 = !DILocalVariable(name: "t", arg: 2, scope: !4778, file: !3, line: 761, type: !811)
!4782 = !DILocalVariable(name: "ref_p", arg: 3, scope: !4778, file: !3, line: 761, type: !724)
!4783 = !DILocalVariable(name: "i", scope: !4778, file: !3, line: 763, type: !725)
!4784 = !DILocalVariable(name: "count", scope: !4778, file: !3, line: 763, type: !725)
!4785 = !DILocalVariable(name: "saved_chain", scope: !4786, file: !3, line: 769, type: !811)
!4786 = distinct !DILexicalBlock(scope: !4787, file: !3, line: 768, column: 5)
!4787 = distinct !DILexicalBlock(scope: !4788, file: !3, line: 767, column: 3)
!4788 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 767, column: 3)
!4789 = !DILocation(line: 0, scope: !4778)
!4790 = !DILocation(line: 765, column: 11, scope: !4778)
!4791 = !DILocation(line: 766, column: 23, scope: !4778)
!4792 = !DILocation(line: 766, column: 3, scope: !4778)
!4793 = !DILocation(line: 767, column: 8, scope: !4788)
!4794 = !DILocation(line: 0, scope: !4788)
!4795 = !DILocation(line: 767, column: 17, scope: !4787)
!4796 = !DILocation(line: 767, column: 3, scope: !4788)
!4797 = !DILocation(line: 773, column: 21, scope: !4786)
!4798 = !DILocation(line: 774, column: 22, scope: !4786)
!4799 = !DILocation(line: 776, column: 7, scope: !4786)
!4800 = !DILocation(line: 778, column: 22, scope: !4786)
!4801 = !DILocation(line: 779, column: 11, scope: !4786)
!4802 = !DILocation(line: 767, column: 27, scope: !4787)
!4803 = !DILocation(line: 767, column: 3, scope: !4787)
!4804 = distinct !{!4804, !4796, !4805}
!4805 = !DILocation(line: 780, column: 5, scope: !4788)
!4806 = !DILocation(line: 781, column: 1, scope: !4778)
!4807 = distinct !DISubprogram(name: "lto_output_location", scope: !3, file: !3, line: 608, type: !4808, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4810)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{null, !732, !935}
!4810 = !{!4811, !4812, !4813}
!4811 = !DILocalVariable(name: "ob", arg: 1, scope: !4807, file: !3, line: 608, type: !732)
!4812 = !DILocalVariable(name: "loc", arg: 2, scope: !4807, file: !3, line: 608, type: !935)
!4813 = !DILocalVariable(name: "xloc", scope: !4807, file: !3, line: 610, type: !4814)
!4814 = !DIDerivedType(tag: DW_TAG_typedef, name: "expanded_location", file: !936, line: 52, baseType: !4815)
!4815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !936, line: 40, size: 192, elements: !4816)
!4816 = !{!4817, !4818, !4819, !4820}
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4815, file: !936, line: 43, baseType: !730, size: 64)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !4815, file: !936, line: 46, baseType: !725, size: 32, offset: 64)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "column", scope: !4815, file: !936, line: 48, baseType: !725, size: 32, offset: 96)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "sysp", scope: !4815, file: !936, line: 51, baseType: !724, size: 8, offset: 128)
!4821 = !DILocation(line: 0, scope: !4807)
!4822 = !DILocation(line: 610, column: 3, scope: !4807)
!4823 = !DILocation(line: 612, column: 11, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 612, column: 7)
!4825 = !DILocation(line: 612, column: 7, scope: !4807)
!4826 = !DILocation(line: 614, column: 30, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 613, column: 5)
!4828 = !DILocation(line: 614, column: 7, scope: !4827)
!4829 = !DILocation(line: 615, column: 7, scope: !4827)
!4830 = !DILocation(line: 618, column: 10, scope: !4807)
!4831 = !DILocation(line: 620, column: 26, scope: !4807)
!4832 = !DILocation(line: 620, column: 44, scope: !4807)
!4833 = !DILocation(line: 620, column: 3, scope: !4807)
!4834 = !DILocation(line: 621, column: 28, scope: !4807)
!4835 = !DILocation(line: 621, column: 23, scope: !4807)
!4836 = !DILocation(line: 621, column: 3, scope: !4807)
!4837 = !DILocation(line: 622, column: 28, scope: !4807)
!4838 = !DILocation(line: 622, column: 23, scope: !4807)
!4839 = !DILocation(line: 622, column: 3, scope: !4807)
!4840 = !DILocation(line: 623, column: 28, scope: !4807)
!4841 = !DILocation(line: 623, column: 23, scope: !4807)
!4842 = !DILocation(line: 623, column: 3, scope: !4807)
!4843 = !DILocation(line: 625, column: 27, scope: !4807)
!4844 = !DILocation(line: 625, column: 7, scope: !4807)
!4845 = !DILocation(line: 625, column: 20, scope: !4807)
!4846 = !DILocation(line: 626, column: 7, scope: !4807)
!4847 = !DILocation(line: 626, column: 20, scope: !4807)
!4848 = !DILocation(line: 627, column: 7, scope: !4807)
!4849 = !DILocation(line: 627, column: 19, scope: !4807)
!4850 = !DILocation(line: 628, column: 1, scope: !4807)
!4851 = distinct !DISubprogram(name: "tree_operand_length", scope: !149, file: !149, line: 5347, type: !4852, scopeLine: 5348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4857)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{!725, !4854}
!4854 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !812, line: 59, baseType: !4855)
!4855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4856, size: 64)
!4856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !814)
!4857 = !{!4858}
!4858 = !DILocalVariable(name: "node", arg: 1, scope: !4851, file: !149, line: 5347, type: !4854)
!4859 = !DILocation(line: 0, scope: !4851)
!4860 = !DILocation(line: 5349, column: 7, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4851, file: !149, line: 5349, column: 7)
!4862 = !DILocation(line: 5349, column: 7, scope: !4851)
!4863 = !DILocation(line: 5350, column: 12, scope: !4861)
!4864 = !DILocation(line: 5350, column: 5, scope: !4861)
!4865 = !DILocation(line: 5352, column: 12, scope: !4861)
!4866 = !DILocation(line: 5352, column: 5, scope: !4861)
!4867 = !DILocation(line: 0, scope: !4861)
!4868 = !DILocation(line: 5353, column: 1, scope: !4851)
!4869 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !149, file: !149, line: 182, type: !4870, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4872)
!4870 = !DISubroutineType(types: !4871)
!4871 = !{!725, !4041, !7, !1169}
!4872 = !{!4873, !4874, !4875}
!4873 = !DILocalVariable(name: "vec_", arg: 1, scope: !4869, file: !149, line: 182, type: !4041)
!4874 = !DILocalVariable(name: "ix_", arg: 2, scope: !4869, file: !149, line: 182, type: !7)
!4875 = !DILocalVariable(name: "ptr", arg: 3, scope: !4869, file: !149, line: 182, type: !1169)
!4876 = !DILocation(line: 0, scope: !4869)
!4877 = !DILocation(line: 182, column: 1, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4869, file: !149, line: 182, column: 1)
!4879 = !DILocation(line: 182, column: 1, scope: !4869)
!4880 = !DILocation(line: 182, column: 1, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4878, file: !149, line: 182, column: 1)
!4882 = !DILocation(line: 182, column: 1, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4878, file: !149, line: 182, column: 1)
!4884 = !DILocation(line: 0, scope: !4878)
!4885 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !149, file: !149, line: 1537, type: !4886, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4890)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{!7, !4888}
!4888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4889, size: 64)
!4889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1928)
!4890 = !{!4891}
!4891 = !DILocalVariable(name: "vec_", arg: 1, scope: !4885, file: !149, line: 1537, type: !4888)
!4892 = !DILocation(line: 0, scope: !4885)
!4893 = !DILocation(line: 1537, column: 1, scope: !4885)
!4894 = distinct !DISubprogram(name: "VEC_constructor_elt_base_index", scope: !149, file: !149, line: 1537, type: !4895, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4899)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!4897, !4898, !7}
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!4898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!4899 = !{!4900, !4901}
!4900 = !DILocalVariable(name: "vec_", arg: 1, scope: !4894, file: !149, line: 1537, type: !4898)
!4901 = !DILocalVariable(name: "ix_", arg: 2, scope: !4894, file: !149, line: 1537, type: !7)
!4902 = !DILocation(line: 0, scope: !4894)
!4903 = !DILocation(line: 1537, column: 1, scope: !4894)
!4904 = distinct !DISubprogram(name: "lto_writer_init", scope: !3, file: !3, line: 2084, type: !2252, scopeLine: 2085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2495)
!4905 = !DILocation(line: 2086, column: 3, scope: !4904)
!4906 = !DILocation(line: 2087, column: 1, scope: !4904)
!4907 = distinct !DISubprogram(name: "csi_start", scope: !399, file: !399, line: 668, type: !4908, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4910)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{!3397, !3391}
!4910 = !{!4911, !4912}
!4911 = !DILocalVariable(name: "set", arg: 1, scope: !4907, file: !399, line: 668, type: !3391)
!4912 = !DILocalVariable(name: "csi", scope: !4907, file: !399, line: 670, type: !3397)
!4913 = !DILocation(line: 0, scope: !4907)
!4914 = !DILocation(line: 672, column: 7, scope: !4907)
!4915 = !DILocation(line: 672, column: 11, scope: !4907)
!4916 = !DILocation(line: 673, column: 7, scope: !4907)
!4917 = !DILocation(line: 673, column: 13, scope: !4907)
!4918 = !DILocation(line: 674, column: 3, scope: !4907)
!4919 = distinct !DISubprogram(name: "csi_end_p", scope: !399, file: !399, line: 647, type: !4920, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4922)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!724, !3397}
!4922 = !{!4923}
!4923 = !DILocalVariable(name: "csi", arg: 1, scope: !4919, file: !399, line: 647, type: !3397)
!4924 = !DILocation(line: 649, column: 23, scope: !4919)
!4925 = !DILocation(line: 649, column: 20, scope: !4919)
!4926 = !DILocation(line: 649, column: 10, scope: !4919)
!4927 = !DILocation(line: 649, column: 3, scope: !4919)
!4928 = distinct !DISubprogram(name: "csi_node", scope: !399, file: !399, line: 661, type: !4929, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4931)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!2167, !3397}
!4931 = !{!4932}
!4932 = !DILocalVariable(name: "csi", arg: 1, scope: !4928, file: !399, line: 661, type: !3397)
!4933 = !DILocation(line: 663, column: 10, scope: !4928)
!4934 = !DILocation(line: 663, column: 3, scope: !4928)
!4935 = distinct !DISubprogram(name: "output_function", scope: !3, file: !3, line: 1829, type: !2272, scopeLine: 1830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4936)
!4936 = !{!4937, !4938, !4939, !4940, !4941, !4942}
!4937 = !DILocalVariable(name: "node", arg: 1, scope: !4935, file: !3, line: 1829, type: !2167)
!4938 = !DILocalVariable(name: "bp", scope: !4935, file: !3, line: 1831, type: !3039)
!4939 = !DILocalVariable(name: "function", scope: !4935, file: !3, line: 1832, type: !811)
!4940 = !DILocalVariable(name: "fn", scope: !4935, file: !3, line: 1833, type: !1519)
!4941 = !DILocalVariable(name: "bb", scope: !4935, file: !3, line: 1834, type: !1634)
!4942 = !DILocalVariable(name: "ob", scope: !4935, file: !3, line: 1835, type: !732)
!4943 = !DILocation(line: 0, scope: !4935)
!4944 = !DILocation(line: 1837, column: 20, scope: !4935)
!4945 = !DILocation(line: 1838, column: 8, scope: !4935)
!4946 = !DILocation(line: 1839, column: 8, scope: !4935)
!4947 = !DILocation(line: 1841, column: 3, scope: !4935)
!4948 = !DILocation(line: 1842, column: 7, scope: !4935)
!4949 = !DILocation(line: 1842, column: 19, scope: !4935)
!4950 = !DILocation(line: 1844, column: 3, scope: !4935)
!4951 = !DILocation(line: 1847, column: 25, scope: !4935)
!4952 = !DILocation(line: 1848, column: 3, scope: !4935)
!4953 = !DILocation(line: 1851, column: 28, scope: !4935)
!4954 = !DILocation(line: 1851, column: 3, scope: !4935)
!4955 = !DILocation(line: 1853, column: 3, scope: !4935)
!4956 = !DILocation(line: 1856, column: 8, scope: !4935)
!4957 = !DILocation(line: 1857, column: 26, scope: !4935)
!4958 = !DILocation(line: 1857, column: 22, scope: !4935)
!4959 = !DILocation(line: 1857, column: 3, scope: !4935)
!4960 = !DILocation(line: 1858, column: 26, scope: !4935)
!4961 = !DILocation(line: 1858, column: 22, scope: !4935)
!4962 = !DILocation(line: 1858, column: 3, scope: !4935)
!4963 = !DILocation(line: 1859, column: 26, scope: !4935)
!4964 = !DILocation(line: 1859, column: 22, scope: !4935)
!4965 = !DILocation(line: 1859, column: 3, scope: !4935)
!4966 = !DILocation(line: 1860, column: 26, scope: !4935)
!4967 = !DILocation(line: 1860, column: 22, scope: !4935)
!4968 = !DILocation(line: 1860, column: 3, scope: !4935)
!4969 = !DILocation(line: 1861, column: 26, scope: !4935)
!4970 = !DILocation(line: 1861, column: 22, scope: !4935)
!4971 = !DILocation(line: 1861, column: 3, scope: !4935)
!4972 = !DILocation(line: 1862, column: 26, scope: !4935)
!4973 = !DILocation(line: 1862, column: 22, scope: !4935)
!4974 = !DILocation(line: 1862, column: 3, scope: !4935)
!4975 = !DILocation(line: 1863, column: 26, scope: !4935)
!4976 = !DILocation(line: 1863, column: 22, scope: !4935)
!4977 = !DILocation(line: 1863, column: 3, scope: !4935)
!4978 = !DILocation(line: 1864, column: 26, scope: !4935)
!4979 = !DILocation(line: 1864, column: 22, scope: !4935)
!4980 = !DILocation(line: 1864, column: 3, scope: !4935)
!4981 = !DILocation(line: 1865, column: 26, scope: !4935)
!4982 = !DILocation(line: 1865, column: 22, scope: !4935)
!4983 = !DILocation(line: 1865, column: 3, scope: !4935)
!4984 = !DILocation(line: 1866, column: 26, scope: !4935)
!4985 = !DILocation(line: 1866, column: 22, scope: !4935)
!4986 = !DILocation(line: 1866, column: 3, scope: !4935)
!4987 = !DILocation(line: 1867, column: 26, scope: !4935)
!4988 = !DILocation(line: 1867, column: 22, scope: !4935)
!4989 = !DILocation(line: 1867, column: 3, scope: !4935)
!4990 = !DILocation(line: 1868, column: 26, scope: !4935)
!4991 = !DILocation(line: 1868, column: 22, scope: !4935)
!4992 = !DILocation(line: 1868, column: 3, scope: !4935)
!4993 = !DILocation(line: 1869, column: 26, scope: !4935)
!4994 = !DILocation(line: 1869, column: 22, scope: !4935)
!4995 = !DILocation(line: 1869, column: 3, scope: !4935)
!4996 = !DILocation(line: 1870, column: 26, scope: !4935)
!4997 = !DILocation(line: 1870, column: 22, scope: !4935)
!4998 = !DILocation(line: 1870, column: 3, scope: !4935)
!4999 = !DILocation(line: 1871, column: 26, scope: !4935)
!5000 = !DILocation(line: 1871, column: 22, scope: !4935)
!5001 = !DILocation(line: 1871, column: 3, scope: !4935)
!5002 = !DILocation(line: 1872, column: 27, scope: !4935)
!5003 = !DILocation(line: 1872, column: 3, scope: !4935)
!5004 = !DILocation(line: 1873, column: 3, scope: !4935)
!5005 = !DILocation(line: 1876, column: 27, scope: !4935)
!5006 = !DILocation(line: 1876, column: 23, scope: !4935)
!5007 = !DILocation(line: 1876, column: 3, scope: !4935)
!5008 = !DILocation(line: 1879, column: 32, scope: !4935)
!5009 = !DILocation(line: 1879, column: 3, scope: !4935)
!5010 = !DILocation(line: 1880, column: 32, scope: !4935)
!5011 = !DILocation(line: 1880, column: 3, scope: !4935)
!5012 = !DILocation(line: 1883, column: 32, scope: !4935)
!5013 = !DILocation(line: 1883, column: 3, scope: !4935)
!5014 = !DILocation(line: 1886, column: 28, scope: !4935)
!5015 = !DILocation(line: 1886, column: 3, scope: !4935)
!5016 = !DILocation(line: 1889, column: 3, scope: !4935)
!5017 = !DILocation(line: 1892, column: 3, scope: !4935)
!5018 = !DILocation(line: 1896, column: 24, scope: !4935)
!5019 = !DILocation(line: 1896, column: 3, scope: !4935)
!5020 = !DILocation(line: 1902, column: 3, scope: !4935)
!5021 = !DILocation(line: 1905, column: 3, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 1905, column: 3)
!5023 = !DILocation(line: 0, scope: !5022)
!5024 = !DILocation(line: 1906, column: 5, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 1905, column: 3)
!5026 = !DILocation(line: 1905, column: 3, scope: !5025)
!5027 = distinct !{!5027, !5021, !5028}
!5028 = !DILocation(line: 1906, column: 26, scope: !5022)
!5029 = !DILocation(line: 1909, column: 3, scope: !4935)
!5030 = !DILocation(line: 1911, column: 3, scope: !4935)
!5031 = !DILocation(line: 1914, column: 3, scope: !4935)
!5032 = !DILocation(line: 1916, column: 3, scope: !4935)
!5033 = !DILocation(line: 1918, column: 25, scope: !4935)
!5034 = !DILocation(line: 1919, column: 3, scope: !4935)
!5035 = !DILocation(line: 1920, column: 1, scope: !4935)
!5036 = distinct !DISubprogram(name: "copy_function", scope: !3, file: !3, line: 2026, type: !2272, scopeLine: 2027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5037)
!5037 = !{!5038, !5039, !5040, !5041, !5042, !5043, !5044, !5045, !5046, !5047, !5048, !5049, !5050, !5054, !5055}
!5038 = !DILocalVariable(name: "node", arg: 1, scope: !5036, file: !3, line: 2026, type: !2167)
!5039 = !DILocalVariable(name: "function", scope: !5036, file: !3, line: 2028, type: !811)
!5040 = !DILocalVariable(name: "file_data", scope: !5036, file: !3, line: 2029, type: !2307)
!5041 = !DILocalVariable(name: "output_stream", scope: !5036, file: !3, line: 2030, type: !2409)
!5042 = !DILocalVariable(name: "data", scope: !5036, file: !3, line: 2031, type: !730)
!5043 = !DILocalVariable(name: "len", scope: !5036, file: !3, line: 2032, type: !771)
!5044 = !DILocalVariable(name: "name", scope: !5036, file: !3, line: 2033, type: !730)
!5045 = !DILocalVariable(name: "section_name", scope: !5036, file: !3, line: 2034, type: !727)
!5046 = !DILocalVariable(name: "i", scope: !5036, file: !3, line: 2036, type: !771)
!5047 = !DILocalVariable(name: "j", scope: !5036, file: !3, line: 2036, type: !771)
!5048 = !DILocalVariable(name: "in_state", scope: !5036, file: !3, line: 2037, type: !2311)
!5049 = !DILocalVariable(name: "out_state", scope: !5036, file: !3, line: 2038, type: !737)
!5050 = !DILocalVariable(name: "n", scope: !5051, file: !3, line: 2061, type: !771)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 2060, column: 5)
!5052 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 2059, column: 3)
!5053 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 2059, column: 3)
!5054 = !DILocalVariable(name: "trees", scope: !5051, file: !3, line: 2062, type: !1169)
!5055 = !DILocalVariable(name: "encoder", scope: !5051, file: !3, line: 2063, type: !5056)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!5057 = !DILocation(line: 0, scope: !5036)
!5058 = !DILocation(line: 2028, column: 25, scope: !5036)
!5059 = !DILocation(line: 2029, column: 54, scope: !5036)
!5060 = !DILocation(line: 2030, column: 45, scope: !5036)
!5061 = !DILocation(line: 2032, column: 3, scope: !5036)
!5062 = !DILocation(line: 2033, column: 22, scope: !5036)
!5063 = !DILocation(line: 2035, column: 5, scope: !5036)
!5064 = !DILocation(line: 2038, column: 42, scope: !5036)
!5065 = !DILocation(line: 2040, column: 37, scope: !5036)
!5066 = !DILocation(line: 2040, column: 36, scope: !5036)
!5067 = !DILocation(line: 2040, column: 3, scope: !5036)
!5068 = !DILocation(line: 2041, column: 3, scope: !5036)
!5069 = !DILocation(line: 2044, column: 10, scope: !5036)
!5070 = !DILocation(line: 2046, column: 10, scope: !5036)
!5071 = !DILocation(line: 2048, column: 3, scope: !5036)
!5072 = !DILocation(line: 2051, column: 48, scope: !5036)
!5073 = !DILocation(line: 2051, column: 3, scope: !5036)
!5074 = !DILocation(line: 2052, column: 3, scope: !5036)
!5075 = !DILocation(line: 2056, column: 49, scope: !5036)
!5076 = !DILocation(line: 2056, column: 5, scope: !5036)
!5077 = !DILocation(line: 2057, column: 3, scope: !5036)
!5078 = !DILocation(line: 2059, column: 8, scope: !5053)
!5079 = !DILocation(line: 0, scope: !5053)
!5080 = !DILocation(line: 2059, column: 17, scope: !5052)
!5081 = !DILocation(line: 2059, column: 3, scope: !5053)
!5082 = !DILocation(line: 2061, column: 39, scope: !5051)
!5083 = !DILocation(line: 2061, column: 18, scope: !5051)
!5084 = !DILocation(line: 0, scope: !5051)
!5085 = !DILocation(line: 2062, column: 42, scope: !5051)
!5086 = !DILocation(line: 2063, column: 48, scope: !5051)
!5087 = !DILocation(line: 2068, column: 7, scope: !5051)
!5088 = !DILocation(line: 0, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 2069, column: 7)
!5090 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 2069, column: 7)
!5091 = !DILocation(line: 2069, column: 12, scope: !5090)
!5092 = !DILocation(line: 0, scope: !5090)
!5093 = !DILocation(line: 2069, column: 21, scope: !5089)
!5094 = !DILocation(line: 2069, column: 7, scope: !5090)
!5095 = !DILocation(line: 2070, column: 2, scope: !5089)
!5096 = !DILocation(line: 2069, column: 27, scope: !5089)
!5097 = !DILocation(line: 2069, column: 7, scope: !5089)
!5098 = distinct !{!5098, !5094, !5099}
!5099 = !DILocation(line: 2070, column: 2, scope: !5090)
!5100 = !DILocation(line: 2071, column: 16, scope: !5051)
!5101 = !DILocation(line: 2071, column: 27, scope: !5051)
!5102 = !DILocation(line: 2059, column: 40, scope: !5052)
!5103 = !DILocation(line: 2059, column: 3, scope: !5052)
!5104 = distinct !{!5104, !5081, !5105}
!5105 = !DILocation(line: 2072, column: 5, scope: !5053)
!5106 = !DILocation(line: 2075, column: 11, scope: !5036)
!5107 = !DILocation(line: 2074, column: 3, scope: !5036)
!5108 = !DILocation(line: 2076, column: 3, scope: !5036)
!5109 = !DILocation(line: 2077, column: 3, scope: !5036)
!5110 = !DILocation(line: 2078, column: 1, scope: !5036)
!5111 = distinct !DISubprogram(name: "csi_next", scope: !399, file: !399, line: 654, type: !5112, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5115)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{null, !5114}
!5114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!5115 = !{!5116}
!5116 = !DILocalVariable(name: "csi", arg: 1, scope: !5111, file: !399, line: 654, type: !5114)
!5117 = !DILocation(line: 0, scope: !5111)
!5118 = !DILocation(line: 656, column: 8, scope: !5111)
!5119 = !DILocation(line: 656, column: 13, scope: !5111)
!5120 = !DILocation(line: 657, column: 1, scope: !5111)
!5121 = distinct !DISubprogram(name: "VEC_cgraph_node_ptr_base_length", scope: !399, file: !399, line: 270, type: !5122, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5126)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!7, !5124}
!5124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5125, size: 64)
!5125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2159)
!5126 = !{!5127}
!5127 = !DILocalVariable(name: "vec_", arg: 1, scope: !5121, file: !399, line: 270, type: !5124)
!5128 = !DILocation(line: 0, scope: !5121)
!5129 = !DILocation(line: 270, column: 1, scope: !5121)
!5130 = distinct !DISubprogram(name: "VEC_cgraph_node_ptr_base_index", scope: !399, file: !399, line: 270, type: !5131, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5133)
!5131 = !DISubroutineType(types: !5132)
!5132 = !{!2166, !5124, !7}
!5133 = !{!5134, !5135}
!5134 = !DILocalVariable(name: "vec_", arg: 1, scope: !5130, file: !399, line: 270, type: !5124)
!5135 = !DILocalVariable(name: "ix_", arg: 2, scope: !5130, file: !399, line: 270, type: !7)
!5136 = !DILocation(line: 0, scope: !5130)
!5137 = !DILocation(line: 270, column: 1, scope: !5130)
!5138 = distinct !DISubprogram(name: "output_ssa_names", scope: !3, file: !3, line: 1545, type: !5139, scopeLine: 1546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5141)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{null, !732, !1519}
!5141 = !{!5142, !5143, !5144, !5145, !5146}
!5142 = !DILocalVariable(name: "ob", arg: 1, scope: !5138, file: !3, line: 1545, type: !732)
!5143 = !DILocalVariable(name: "fn", arg: 2, scope: !5138, file: !3, line: 1545, type: !1519)
!5144 = !DILocalVariable(name: "i", scope: !5138, file: !3, line: 1547, type: !7)
!5145 = !DILocalVariable(name: "len", scope: !5138, file: !3, line: 1547, type: !7)
!5146 = !DILocalVariable(name: "ptr", scope: !5147, file: !3, line: 1554, type: !811)
!5147 = distinct !DILexicalBlock(scope: !5148, file: !3, line: 1553, column: 5)
!5148 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 1552, column: 3)
!5149 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1552, column: 3)
!5150 = !DILocation(line: 0, scope: !5138)
!5151 = !DILocation(line: 1549, column: 9, scope: !5138)
!5152 = !DILocation(line: 1550, column: 23, scope: !5138)
!5153 = !DILocation(line: 1550, column: 3, scope: !5138)
!5154 = !DILocation(line: 0, scope: !5147)
!5155 = !DILocation(line: 1552, column: 8, scope: !5149)
!5156 = !DILocation(line: 0, scope: !5149)
!5157 = !DILocation(line: 1552, column: 17, scope: !5148)
!5158 = !DILocation(line: 1552, column: 3, scope: !5149)
!5159 = !DILocation(line: 1554, column: 18, scope: !5147)
!5160 = !DILocation(line: 1556, column: 15, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 1556, column: 11)
!5162 = !DILocation(line: 1557, column: 4, scope: !5161)
!5163 = !DILocation(line: 1557, column: 7, scope: !5161)
!5164 = !DILocation(line: 1558, column: 4, scope: !5161)
!5165 = !DILocation(line: 1558, column: 8, scope: !5161)
!5166 = !DILocation(line: 1556, column: 11, scope: !5147)
!5167 = !DILocation(line: 1561, column: 7, scope: !5147)
!5168 = !DILocation(line: 1562, column: 32, scope: !5147)
!5169 = !DILocation(line: 1562, column: 45, scope: !5147)
!5170 = !DILocation(line: 1562, column: 7, scope: !5147)
!5171 = !DILocation(line: 1563, column: 32, scope: !5147)
!5172 = !DILocation(line: 1563, column: 7, scope: !5147)
!5173 = !DILocation(line: 1564, column: 5, scope: !5148)
!5174 = !DILocation(line: 1552, column: 25, scope: !5148)
!5175 = !DILocation(line: 1552, column: 3, scope: !5148)
!5176 = distinct !{!5176, !5158, !5177}
!5177 = !DILocation(line: 1564, column: 5, scope: !5149)
!5178 = !DILocation(line: 1566, column: 3, scope: !5138)
!5179 = !DILocation(line: 1567, column: 1, scope: !5138)
!5180 = distinct !DISubprogram(name: "output_eh_regions", scope: !3, file: !3, line: 1488, type: !5139, scopeLine: 1489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5181)
!5181 = !{!5182, !5183, !5184, !5187, !5188, !5189, !5190, !5193}
!5182 = !DILocalVariable(name: "ob", arg: 1, scope: !5180, file: !3, line: 1488, type: !732)
!5183 = !DILocalVariable(name: "fn", arg: 2, scope: !5180, file: !3, line: 1488, type: !1519)
!5184 = !DILocalVariable(name: "i", scope: !5185, file: !3, line: 1492, type: !7)
!5185 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 1491, column: 5)
!5186 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 1490, column: 7)
!5187 = !DILocalVariable(name: "eh", scope: !5185, file: !3, line: 1493, type: !1528)
!5188 = !DILocalVariable(name: "lp", scope: !5185, file: !3, line: 1494, type: !1602)
!5189 = !DILocalVariable(name: "ttype", scope: !5185, file: !3, line: 1495, type: !811)
!5190 = !DILocalVariable(name: "t", scope: !5191, file: !3, line: 1520, type: !811)
!5191 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 1519, column: 2)
!5192 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 1518, column: 11)
!5193 = !DILocalVariable(name: "c", scope: !5194, file: !3, line: 1529, type: !1628)
!5194 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 1528, column: 2)
!5195 = !DILocation(line: 0, scope: !5180)
!5196 = !DILocation(line: 1490, column: 11, scope: !5186)
!5197 = !DILocation(line: 1490, column: 7, scope: !5186)
!5198 = !DILocation(line: 1490, column: 14, scope: !5186)
!5199 = !DILocation(line: 1490, column: 25, scope: !5186)
!5200 = !DILocation(line: 1490, column: 17, scope: !5186)
!5201 = !DILocation(line: 1490, column: 7, scope: !5180)
!5202 = !DILocation(line: 1493, column: 7, scope: !5185)
!5203 = !DILocation(line: 1494, column: 7, scope: !5185)
!5204 = !DILocation(line: 1495, column: 7, scope: !5185)
!5205 = !DILocation(line: 1497, column: 7, scope: !5185)
!5206 = !DILocation(line: 1500, column: 31, scope: !5185)
!5207 = !DILocation(line: 1500, column: 35, scope: !5185)
!5208 = !DILocation(line: 1500, column: 48, scope: !5185)
!5209 = !DILocation(line: 1500, column: 27, scope: !5185)
!5210 = !DILocation(line: 1500, column: 7, scope: !5185)
!5211 = !DILocation(line: 1503, column: 27, scope: !5185)
!5212 = !DILocation(line: 1503, column: 7, scope: !5185)
!5213 = !DILocation(line: 0, scope: !5185)
!5214 = !DILocation(line: 1504, column: 12, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 1504, column: 7)
!5216 = !DILocation(line: 0, scope: !5215)
!5217 = !DILocation(line: 1504, column: 19, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 1504, column: 7)
!5219 = !DILocation(line: 1504, column: 7, scope: !5215)
!5220 = !DILocation(line: 1505, column: 24, scope: !5218)
!5221 = !DILocation(line: 1505, column: 2, scope: !5218)
!5222 = !DILocation(line: 1504, column: 74, scope: !5218)
!5223 = !DILocation(line: 1504, column: 7, scope: !5218)
!5224 = distinct !{!5224, !5219, !5225}
!5225 = !DILocation(line: 1505, column: 26, scope: !5215)
!5226 = !DILocation(line: 1508, column: 27, scope: !5185)
!5227 = !DILocation(line: 1508, column: 7, scope: !5185)
!5228 = !DILocation(line: 1509, column: 12, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 1509, column: 7)
!5230 = !DILocation(line: 0, scope: !5229)
!5231 = !DILocation(line: 1509, column: 19, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 1509, column: 7)
!5233 = !DILocation(line: 1509, column: 7, scope: !5229)
!5234 = !DILocation(line: 1510, column: 20, scope: !5232)
!5235 = !DILocation(line: 1510, column: 2, scope: !5232)
!5236 = !DILocation(line: 1509, column: 75, scope: !5232)
!5237 = !DILocation(line: 1509, column: 7, scope: !5232)
!5238 = distinct !{!5238, !5233, !5239}
!5239 = !DILocation(line: 1510, column: 22, scope: !5229)
!5240 = !DILocation(line: 1513, column: 27, scope: !5185)
!5241 = !DILocation(line: 1513, column: 7, scope: !5185)
!5242 = !DILocation(line: 1514, column: 12, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 1514, column: 7)
!5244 = !DILocation(line: 0, scope: !5243)
!5245 = !DILocation(line: 1514, column: 19, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5243, file: !3, line: 1514, column: 7)
!5247 = !DILocation(line: 1514, column: 7, scope: !5243)
!5248 = !DILocation(line: 1515, column: 27, scope: !5246)
!5249 = !DILocation(line: 1515, column: 2, scope: !5246)
!5250 = !DILocation(line: 1514, column: 70, scope: !5246)
!5251 = !DILocation(line: 1514, column: 7, scope: !5246)
!5252 = distinct !{!5252, !5247, !5253}
!5253 = !DILocation(line: 1515, column: 32, scope: !5243)
!5254 = !DILocation(line: 1518, column: 19, scope: !5192)
!5255 = !DILocation(line: 1518, column: 11, scope: !5192)
!5256 = !DILocation(line: 1518, column: 11, scope: !5185)
!5257 = !DILocation(line: 1520, column: 4, scope: !5191)
!5258 = !DILocation(line: 1521, column: 24, scope: !5191)
!5259 = !DILocation(line: 1521, column: 4, scope: !5191)
!5260 = !DILocation(line: 1522, column: 9, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 1522, column: 4)
!5262 = !DILocation(line: 0, scope: !5261)
!5263 = !DILocation(line: 1523, column: 9, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 1522, column: 4)
!5265 = !DILocation(line: 0, scope: !5191)
!5266 = !DILocation(line: 1522, column: 4, scope: !5261)
!5267 = !DILocation(line: 1525, column: 31, scope: !5264)
!5268 = !DILocation(line: 1525, column: 6, scope: !5264)
!5269 = !DILocation(line: 1524, column: 10, scope: !5264)
!5270 = !DILocation(line: 1522, column: 4, scope: !5264)
!5271 = distinct !{!5271, !5266, !5272}
!5272 = !DILocation(line: 1525, column: 32, scope: !5261)
!5273 = !DILocation(line: 1526, column: 2, scope: !5192)
!5274 = !DILocation(line: 1526, column: 2, scope: !5191)
!5275 = !DILocation(line: 0, scope: !5194)
!5276 = !DILocation(line: 1529, column: 4, scope: !5194)
!5277 = !DILocation(line: 1530, column: 24, scope: !5194)
!5278 = !DILocation(line: 1530, column: 4, scope: !5194)
!5279 = !DILocation(line: 0, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 1531, column: 4)
!5281 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 1531, column: 4)
!5282 = !DILocation(line: 1531, column: 9, scope: !5281)
!5283 = !DILocation(line: 0, scope: !5281)
!5284 = !DILocation(line: 1531, column: 16, scope: !5280)
!5285 = !DILocation(line: 1531, column: 4, scope: !5281)
!5286 = !DILocation(line: 1532, column: 31, scope: !5280)
!5287 = !DILocation(line: 1532, column: 44, scope: !5280)
!5288 = !DILocation(line: 1532, column: 6, scope: !5280)
!5289 = !DILocation(line: 1531, column: 71, scope: !5280)
!5290 = !DILocation(line: 1531, column: 4, scope: !5280)
!5291 = distinct !{!5291, !5285, !5292}
!5292 = !DILocation(line: 1532, column: 45, scope: !5281)
!5293 = !DILocation(line: 1533, column: 2, scope: !5192)
!5294 = !DILocation(line: 1534, column: 5, scope: !5186)
!5295 = !DILocation(line: 1534, column: 5, scope: !5185)
!5296 = !DILocation(line: 1538, column: 3, scope: !5180)
!5297 = !DILocation(line: 1539, column: 1, scope: !5180)
!5298 = distinct !DISubprogram(name: "output_bb", scope: !3, file: !3, line: 1719, type: !5299, scopeLine: 1720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5301)
!5299 = !DISubroutineType(types: !5300)
!5300 = !{null, !732, !1634, !1519}
!5301 = !{!5302, !5303, !5304, !5305, !5312, !5318, !5319}
!5302 = !DILocalVariable(name: "ob", arg: 1, scope: !5298, file: !3, line: 1719, type: !732)
!5303 = !DILocalVariable(name: "bb", arg: 2, scope: !5298, file: !3, line: 1719, type: !1634)
!5304 = !DILocalVariable(name: "fn", arg: 3, scope: !5298, file: !3, line: 1719, type: !1519)
!5305 = !DILocalVariable(name: "bsi", scope: !5298, file: !3, line: 1721, type: !5306)
!5306 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !634, line: 265, baseType: !5307)
!5307 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !634, line: 254, size: 192, elements: !5308)
!5308 = !{!5309, !5310, !5311}
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5307, file: !634, line: 257, baseType: !1129, size: 64)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !5307, file: !634, line: 263, baseType: !1124, size: 64, offset: 64)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !5307, file: !634, line: 264, baseType: !1634, size: 64, offset: 128)
!5312 = !DILocalVariable(name: "region", scope: !5313, file: !3, line: 1740, type: !725)
!5313 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 1739, column: 2)
!5314 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 1738, column: 7)
!5315 = distinct !DILexicalBlock(scope: !5316, file: !3, line: 1738, column: 7)
!5316 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1735, column: 5)
!5317 = distinct !DILexicalBlock(scope: !5298, file: !3, line: 1734, column: 7)
!5318 = !DILocalVariable(name: "stmt", scope: !5313, file: !3, line: 1741, type: !1134)
!5319 = !DILocalVariable(name: "phi", scope: !5320, file: !3, line: 1760, type: !1134)
!5320 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 1759, column: 2)
!5321 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 1758, column: 7)
!5322 = distinct !DILexicalBlock(scope: !5316, file: !3, line: 1758, column: 7)
!5323 = !DILocation(line: 0, scope: !5298)
!5324 = !DILocation(line: 1721, column: 3, scope: !5298)
!5325 = !DILocation(line: 1721, column: 30, scope: !5298)
!5326 = !DILocation(line: 1724, column: 12, scope: !5298)
!5327 = !DILocation(line: 1724, column: 29, scope: !5298)
!5328 = !DILocation(line: 1724, column: 32, scope: !5298)
!5329 = !DILocation(line: 1723, column: 3, scope: !5298)
!5330 = !DILocation(line: 1728, column: 27, scope: !5298)
!5331 = !DILocation(line: 1728, column: 23, scope: !5298)
!5332 = !DILocation(line: 1728, column: 3, scope: !5298)
!5333 = !DILocation(line: 1729, column: 27, scope: !5298)
!5334 = !DILocation(line: 1729, column: 3, scope: !5298)
!5335 = !DILocation(line: 1730, column: 27, scope: !5298)
!5336 = !DILocation(line: 1730, column: 23, scope: !5298)
!5337 = !DILocation(line: 1730, column: 3, scope: !5298)
!5338 = !DILocation(line: 1731, column: 27, scope: !5298)
!5339 = !DILocation(line: 1731, column: 23, scope: !5298)
!5340 = !DILocation(line: 1731, column: 3, scope: !5298)
!5341 = !DILocation(line: 1732, column: 27, scope: !5298)
!5342 = !DILocation(line: 1732, column: 23, scope: !5298)
!5343 = !DILocation(line: 1732, column: 3, scope: !5298)
!5344 = !DILocation(line: 1734, column: 8, scope: !5317)
!5345 = !DILocation(line: 1734, column: 24, scope: !5317)
!5346 = !DILocation(line: 1734, column: 27, scope: !5317)
!5347 = !DILocation(line: 1734, column: 7, scope: !5298)
!5348 = !DILocation(line: 1738, column: 18, scope: !5315)
!5349 = !DILocation(line: 1738, column: 12, scope: !5315)
!5350 = !DILocation(line: 1738, column: 38, scope: !5314)
!5351 = !DILocation(line: 1738, column: 37, scope: !5314)
!5352 = !DILocation(line: 1738, column: 7, scope: !5315)
!5353 = !DILocation(line: 1741, column: 18, scope: !5313)
!5354 = !DILocation(line: 0, scope: !5313)
!5355 = !DILocation(line: 1743, column: 4, scope: !5313)
!5356 = !DILocation(line: 1746, column: 13, scope: !5313)
!5357 = !DILocation(line: 1747, column: 15, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 1747, column: 8)
!5359 = !DILocation(line: 1747, column: 8, scope: !5313)
!5360 = !DILocation(line: 1749, column: 8, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 1748, column: 6)
!5362 = !DILocation(line: 1750, column: 28, scope: !5361)
!5363 = !DILocation(line: 1750, column: 8, scope: !5361)
!5364 = !DILocation(line: 1751, column: 6, scope: !5361)
!5365 = !DILocation(line: 1753, column: 6, scope: !5358)
!5366 = !DILocation(line: 1738, column: 55, scope: !5314)
!5367 = !DILocation(line: 1738, column: 7, scope: !5314)
!5368 = distinct !{!5368, !5352, !5369}
!5369 = !DILocation(line: 1754, column: 2, scope: !5315)
!5370 = !DILocation(line: 1756, column: 7, scope: !5316)
!5371 = !DILocation(line: 1758, column: 18, scope: !5322)
!5372 = !DILocation(line: 1758, column: 12, scope: !5322)
!5373 = !DILocation(line: 1758, column: 40, scope: !5321)
!5374 = !DILocation(line: 1758, column: 39, scope: !5321)
!5375 = !DILocation(line: 1758, column: 7, scope: !5322)
!5376 = !DILocation(line: 1760, column: 17, scope: !5320)
!5377 = !DILocation(line: 0, scope: !5320)
!5378 = !DILocation(line: 1765, column: 23, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 1765, column: 8)
!5380 = !DILocation(line: 1765, column: 8, scope: !5379)
!5381 = !DILocation(line: 1765, column: 8, scope: !5320)
!5382 = !DILocation(line: 1766, column: 6, scope: !5379)
!5383 = !DILocation(line: 1758, column: 57, scope: !5321)
!5384 = !DILocation(line: 1758, column: 7, scope: !5321)
!5385 = distinct !{!5385, !5375, !5386}
!5386 = !DILocation(line: 1767, column: 2, scope: !5322)
!5387 = !DILocation(line: 1769, column: 7, scope: !5316)
!5388 = !DILocation(line: 1770, column: 5, scope: !5316)
!5389 = !DILocation(line: 1771, column: 1, scope: !5298)
!5390 = distinct !DISubprogram(name: "output_cfg", scope: !3, file: !3, line: 1573, type: !5139, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5391)
!5391 = !{!5392, !5393, !5394, !5395, !5396, !5406}
!5392 = !DILocalVariable(name: "ob", arg: 1, scope: !5390, file: !3, line: 1573, type: !732)
!5393 = !DILocalVariable(name: "fn", arg: 2, scope: !5390, file: !3, line: 1573, type: !1519)
!5394 = !DILocalVariable(name: "tmp_stream", scope: !5390, file: !3, line: 1575, type: !2409)
!5395 = !DILocalVariable(name: "bb", scope: !5390, file: !3, line: 1576, type: !1634)
!5396 = !DILocalVariable(name: "ei", scope: !5397, file: !3, line: 1587, type: !5400)
!5397 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 1586, column: 5)
!5398 = distinct !DILexicalBlock(scope: !5399, file: !3, line: 1585, column: 3)
!5399 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 1585, column: 3)
!5400 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !351, line: 682, baseType: !5401)
!5401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !351, line: 679, size: 128, elements: !5402)
!5402 = !{!5403, !5404}
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5401, file: !351, line: 680, baseType: !7, size: 32)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !5401, file: !351, line: 681, baseType: !5405, size: 64, offset: 64)
!5405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!5406 = !DILocalVariable(name: "e", scope: !5397, file: !3, line: 1588, type: !1114)
!5407 = !DILocation(line: 0, scope: !5390)
!5408 = !DILocation(line: 1575, column: 46, scope: !5390)
!5409 = !DILocation(line: 1578, column: 25, scope: !5390)
!5410 = !DILocation(line: 1578, column: 19, scope: !5390)
!5411 = !DILocation(line: 1580, column: 23, scope: !5390)
!5412 = !DILocation(line: 1580, column: 3, scope: !5390)
!5413 = !DILocation(line: 1583, column: 23, scope: !5390)
!5414 = !DILocation(line: 1583, column: 3, scope: !5390)
!5415 = !DILocation(line: 1585, column: 3, scope: !5399)
!5416 = !DILocation(line: 0, scope: !5397)
!5417 = !DILocation(line: 0, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 1594, column: 7)
!5419 = !DILocation(line: 0, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 1594, column: 7)
!5421 = !DILocation(line: 0, scope: !5399)
!5422 = !DILocation(line: 1587, column: 7, scope: !5397)
!5423 = !DILocation(line: 1588, column: 7, scope: !5397)
!5424 = !DILocation(line: 1590, column: 31, scope: !5397)
!5425 = !DILocation(line: 1590, column: 27, scope: !5397)
!5426 = !DILocation(line: 1590, column: 7, scope: !5397)
!5427 = !DILocation(line: 1593, column: 27, scope: !5397)
!5428 = !DILocation(line: 1593, column: 7, scope: !5397)
!5429 = !DILocation(line: 1594, column: 7, scope: !5418)
!5430 = !DILocation(line: 1594, column: 7, scope: !5420)
!5431 = !DILocation(line: 1596, column: 24, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 1595, column: 2)
!5433 = !DILocation(line: 1596, column: 27, scope: !5432)
!5434 = !DILocation(line: 1596, column: 33, scope: !5432)
!5435 = !DILocation(line: 1596, column: 4, scope: !5432)
!5436 = !DILocation(line: 1597, column: 24, scope: !5432)
!5437 = !DILocation(line: 1597, column: 27, scope: !5432)
!5438 = !DILocation(line: 1597, column: 4, scope: !5432)
!5439 = !DILocation(line: 1598, column: 24, scope: !5432)
!5440 = !DILocation(line: 1598, column: 27, scope: !5432)
!5441 = !DILocation(line: 1598, column: 4, scope: !5432)
!5442 = !DILocation(line: 1599, column: 24, scope: !5432)
!5443 = !DILocation(line: 1599, column: 27, scope: !5432)
!5444 = !DILocation(line: 1599, column: 4, scope: !5432)
!5445 = distinct !{!5445, !5429, !5446}
!5446 = !DILocation(line: 1600, column: 2, scope: !5418)
!5447 = !DILocation(line: 1601, column: 5, scope: !5398)
!5448 = !DILocation(line: 1585, column: 3, scope: !5398)
!5449 = distinct !{!5449, !5415, !5450}
!5450 = !DILocation(line: 1601, column: 5, scope: !5399)
!5451 = !DILocation(line: 1603, column: 3, scope: !5390)
!5452 = !DILocation(line: 1605, column: 8, scope: !5390)
!5453 = !DILocation(line: 1606, column: 3, scope: !5390)
!5454 = !DILocation(line: 1606, column: 14, scope: !5390)
!5455 = !DILocation(line: 1608, column: 40, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 1607, column: 5)
!5457 = !DILocation(line: 1608, column: 27, scope: !5456)
!5458 = !DILocation(line: 1608, column: 7, scope: !5456)
!5459 = distinct !{!5459, !5453, !5460}
!5460 = !DILocation(line: 1610, column: 5, scope: !5390)
!5461 = !DILocation(line: 1612, column: 3, scope: !5390)
!5462 = !DILocation(line: 1614, column: 19, scope: !5390)
!5463 = !DILocation(line: 1615, column: 1, scope: !5390)
!5464 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !149, file: !149, line: 182, type: !5465, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5467)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{!811, !4041, !7}
!5467 = !{!5468, !5469}
!5468 = !DILocalVariable(name: "vec_", arg: 1, scope: !5464, file: !149, line: 182, type: !4041)
!5469 = !DILocalVariable(name: "ix_", arg: 2, scope: !5464, file: !149, line: 182, type: !7)
!5470 = !DILocation(line: 0, scope: !5464)
!5471 = !DILocation(line: 182, column: 1, scope: !5464)
!5472 = distinct !DISubprogram(name: "VEC_eh_region_base_length", scope: !344, file: !344, line: 184, type: !5473, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5477)
!5473 = !DISubroutineType(types: !5474)
!5474 = !{!7, !5475}
!5475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5476, size: 64)
!5476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1582)
!5477 = !{!5478}
!5478 = !DILocalVariable(name: "vec_", arg: 1, scope: !5472, file: !344, line: 184, type: !5475)
!5479 = !DILocation(line: 0, scope: !5472)
!5480 = !DILocation(line: 184, column: 1, scope: !5472)
!5481 = distinct !DISubprogram(name: "VEC_eh_region_base_iterate", scope: !344, file: !344, line: 184, type: !5482, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5485)
!5482 = !DISubroutineType(types: !5483)
!5483 = !{!725, !5475, !7, !5484}
!5484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!5485 = !{!5486, !5487, !5488}
!5486 = !DILocalVariable(name: "vec_", arg: 1, scope: !5481, file: !344, line: 184, type: !5475)
!5487 = !DILocalVariable(name: "ix_", arg: 2, scope: !5481, file: !344, line: 184, type: !7)
!5488 = !DILocalVariable(name: "ptr", arg: 3, scope: !5481, file: !344, line: 184, type: !5484)
!5489 = !DILocation(line: 0, scope: !5481)
!5490 = !DILocation(line: 184, column: 1, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5481, file: !344, line: 184, column: 1)
!5492 = !DILocation(line: 184, column: 1, scope: !5481)
!5493 = !DILocation(line: 184, column: 1, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5491, file: !344, line: 184, column: 1)
!5495 = !DILocation(line: 184, column: 1, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5491, file: !344, line: 184, column: 1)
!5497 = !DILocation(line: 0, scope: !5491)
!5498 = distinct !DISubprogram(name: "output_eh_region", scope: !3, file: !3, line: 1396, type: !5499, scopeLine: 1397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5501)
!5499 = !DISubroutineType(types: !5500)
!5500 = !{null, !732, !1528}
!5501 = !{!5502, !5503, !5504}
!5502 = !DILocalVariable(name: "ob", arg: 1, scope: !5498, file: !3, line: 1396, type: !732)
!5503 = !DILocalVariable(name: "r", arg: 2, scope: !5498, file: !3, line: 1396, type: !1528)
!5504 = !DILocalVariable(name: "tag", scope: !5498, file: !3, line: 1398, type: !604)
!5505 = !DILocation(line: 0, scope: !5498)
!5506 = !DILocation(line: 1400, column: 9, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 1400, column: 7)
!5508 = !DILocation(line: 1400, column: 7, scope: !5498)
!5509 = !DILocation(line: 1402, column: 7, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 1401, column: 5)
!5511 = !DILocation(line: 1403, column: 7, scope: !5510)
!5512 = !DILocation(line: 1406, column: 10, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 1406, column: 7)
!5514 = !DILocation(line: 1406, column: 15, scope: !5513)
!5515 = !DILocation(line: 1406, column: 7, scope: !5498)
!5516 = !DILocation(line: 1408, column: 20, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 1408, column: 12)
!5518 = !DILocation(line: 1408, column: 12, scope: !5513)
!5519 = !DILocation(line: 1410, column: 20, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 1410, column: 12)
!5521 = !DILocation(line: 1410, column: 12, scope: !5517)
!5522 = !DILocation(line: 1412, column: 20, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 1412, column: 12)
!5524 = !DILocation(line: 1412, column: 12, scope: !5520)
!5525 = !DILocation(line: 1415, column: 5, scope: !5523)
!5526 = !DILocation(line: 0, scope: !5513)
!5527 = !DILocation(line: 1417, column: 3, scope: !5498)
!5528 = !DILocation(line: 1418, column: 26, scope: !5498)
!5529 = !DILocation(line: 1418, column: 23, scope: !5498)
!5530 = !DILocation(line: 1418, column: 3, scope: !5498)
!5531 = !DILocation(line: 1420, column: 10, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 1420, column: 7)
!5533 = !DILocation(line: 1420, column: 7, scope: !5532)
!5534 = !DILocation(line: 1420, column: 7, scope: !5498)
!5535 = !DILocation(line: 1421, column: 35, scope: !5532)
!5536 = !DILocation(line: 1421, column: 25, scope: !5532)
!5537 = !DILocation(line: 1421, column: 5, scope: !5532)
!5538 = !DILocation(line: 1423, column: 5, scope: !5532)
!5539 = !DILocation(line: 1425, column: 10, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 1425, column: 7)
!5541 = !DILocation(line: 1425, column: 7, scope: !5540)
!5542 = !DILocation(line: 1425, column: 7, scope: !5498)
!5543 = !DILocation(line: 1426, column: 35, scope: !5540)
!5544 = !DILocation(line: 1426, column: 25, scope: !5540)
!5545 = !DILocation(line: 1426, column: 5, scope: !5540)
!5546 = !DILocation(line: 1428, column: 5, scope: !5540)
!5547 = !DILocation(line: 1430, column: 10, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 1430, column: 7)
!5549 = !DILocation(line: 1430, column: 7, scope: !5548)
!5550 = !DILocation(line: 1430, column: 7, scope: !5498)
!5551 = !DILocation(line: 1431, column: 39, scope: !5548)
!5552 = !DILocation(line: 1431, column: 25, scope: !5548)
!5553 = !DILocation(line: 1431, column: 5, scope: !5548)
!5554 = !DILocation(line: 1433, column: 5, scope: !5548)
!5555 = !DILocation(line: 1435, column: 10, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 1435, column: 7)
!5557 = !DILocation(line: 1435, column: 15, scope: !5556)
!5558 = !DILocation(line: 1435, column: 7, scope: !5498)
!5559 = !DILocation(line: 1437, column: 34, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 1436, column: 5)
!5561 = !DILocation(line: 1437, column: 43, scope: !5560)
!5562 = !DILocation(line: 1437, column: 7, scope: !5560)
!5563 = !DILocation(line: 1438, column: 5, scope: !5560)
!5564 = !DILocation(line: 1439, column: 20, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 1439, column: 12)
!5566 = !DILocation(line: 1439, column: 12, scope: !5556)
!5567 = !DILocation(line: 1441, column: 45, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 1440, column: 5)
!5569 = !DILocation(line: 1441, column: 7, scope: !5568)
!5570 = !DILocation(line: 1442, column: 45, scope: !5568)
!5571 = !DILocation(line: 1442, column: 7, scope: !5568)
!5572 = !DILocation(line: 1443, column: 40, scope: !5568)
!5573 = !DILocation(line: 1443, column: 27, scope: !5568)
!5574 = !DILocation(line: 1443, column: 7, scope: !5568)
!5575 = !DILocation(line: 1444, column: 5, scope: !5568)
!5576 = !DILocation(line: 1445, column: 20, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 1445, column: 12)
!5578 = !DILocation(line: 1445, column: 12, scope: !5565)
!5579 = !DILocation(line: 1447, column: 52, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 1446, column: 5)
!5581 = !DILocation(line: 1447, column: 7, scope: !5580)
!5582 = !DILocation(line: 1448, column: 52, scope: !5580)
!5583 = !DILocation(line: 1448, column: 7, scope: !5580)
!5584 = !DILocation(line: 1449, column: 5, scope: !5580)
!5585 = !DILocation(line: 1451, column: 10, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 1451, column: 7)
!5587 = !DILocation(line: 1451, column: 7, scope: !5586)
!5588 = !DILocation(line: 1451, column: 7, scope: !5498)
!5589 = !DILocation(line: 1452, column: 42, scope: !5586)
!5590 = !DILocation(line: 1452, column: 25, scope: !5586)
!5591 = !DILocation(line: 1452, column: 5, scope: !5586)
!5592 = !DILocation(line: 1454, column: 5, scope: !5586)
!5593 = !DILocation(line: 1455, column: 1, scope: !5498)
!5594 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_length", scope: !344, file: !344, line: 188, type: !5595, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5599)
!5595 = !DISubroutineType(types: !5596)
!5596 = !{!7, !5597}
!5597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5598, size: 64)
!5598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1595)
!5599 = !{!5600}
!5600 = !DILocalVariable(name: "vec_", arg: 1, scope: !5594, file: !344, line: 188, type: !5597)
!5601 = !DILocation(line: 0, scope: !5594)
!5602 = !DILocation(line: 188, column: 1, scope: !5594)
!5603 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_iterate", scope: !344, file: !344, line: 188, type: !5604, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5607)
!5604 = !DISubroutineType(types: !5605)
!5605 = !{!725, !5597, !7, !5606}
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!5607 = !{!5608, !5609, !5610}
!5608 = !DILocalVariable(name: "vec_", arg: 1, scope: !5603, file: !344, line: 188, type: !5597)
!5609 = !DILocalVariable(name: "ix_", arg: 2, scope: !5603, file: !344, line: 188, type: !7)
!5610 = !DILocalVariable(name: "ptr", arg: 3, scope: !5603, file: !344, line: 188, type: !5606)
!5611 = !DILocation(line: 0, scope: !5603)
!5612 = !DILocation(line: 188, column: 1, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5603, file: !344, line: 188, column: 1)
!5614 = !DILocation(line: 188, column: 1, scope: !5603)
!5615 = !DILocation(line: 188, column: 1, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5613, file: !344, line: 188, column: 1)
!5617 = !DILocation(line: 188, column: 1, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5613, file: !344, line: 188, column: 1)
!5619 = !DILocation(line: 0, scope: !5613)
!5620 = distinct !DISubprogram(name: "output_eh_lp", scope: !3, file: !3, line: 1461, type: !5621, scopeLine: 1462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5623)
!5621 = !DISubroutineType(types: !5622)
!5622 = !{null, !732, !1602}
!5623 = !{!5624, !5625}
!5624 = !DILocalVariable(name: "ob", arg: 1, scope: !5620, file: !3, line: 1461, type: !732)
!5625 = !DILocalVariable(name: "lp", arg: 2, scope: !5620, file: !3, line: 1461, type: !1602)
!5626 = !DILocation(line: 0, scope: !5620)
!5627 = !DILocation(line: 1463, column: 10, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 1463, column: 7)
!5629 = !DILocation(line: 1463, column: 7, scope: !5620)
!5630 = !DILocation(line: 1465, column: 7, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1464, column: 5)
!5632 = !DILocation(line: 1466, column: 7, scope: !5631)
!5633 = !DILocation(line: 1469, column: 3, scope: !5620)
!5634 = !DILocation(line: 1470, column: 27, scope: !5620)
!5635 = !DILocation(line: 1470, column: 23, scope: !5620)
!5636 = !DILocation(line: 1470, column: 3, scope: !5620)
!5637 = !DILocation(line: 1471, column: 11, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 1471, column: 7)
!5639 = !DILocation(line: 1471, column: 7, scope: !5638)
!5640 = !DILocation(line: 1471, column: 7, scope: !5620)
!5641 = !DILocation(line: 1472, column: 38, scope: !5638)
!5642 = !DILocation(line: 1472, column: 25, scope: !5638)
!5643 = !DILocation(line: 1472, column: 5, scope: !5638)
!5644 = !DILocation(line: 1474, column: 5, scope: !5638)
!5645 = !DILocation(line: 1476, column: 11, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 1476, column: 7)
!5647 = !DILocation(line: 1476, column: 7, scope: !5646)
!5648 = !DILocation(line: 1476, column: 7, scope: !5620)
!5649 = !DILocation(line: 1477, column: 37, scope: !5646)
!5650 = !DILocation(line: 1477, column: 25, scope: !5646)
!5651 = !DILocation(line: 1477, column: 5, scope: !5646)
!5652 = !DILocation(line: 1479, column: 5, scope: !5646)
!5653 = !DILocation(line: 1481, column: 32, scope: !5620)
!5654 = !DILocation(line: 1481, column: 3, scope: !5620)
!5655 = !DILocation(line: 1482, column: 1, scope: !5620)
!5656 = distinct !DISubprogram(name: "VEC_uchar_base_length", scope: !1617, file: !1617, line: 27, type: !5657, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5661)
!5657 = !DISubroutineType(types: !5658)
!5658 = !{!7, !5659}
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5660, size: 64)
!5660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!5661 = !{!5662}
!5662 = !DILocalVariable(name: "vec_", arg: 1, scope: !5656, file: !1617, line: 27, type: !5659)
!5663 = !DILocation(line: 0, scope: !5656)
!5664 = !DILocation(line: 27, column: 1, scope: !5656)
!5665 = distinct !DISubprogram(name: "VEC_uchar_base_iterate", scope: !1617, file: !1617, line: 27, type: !5666, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5669)
!5666 = !DISubroutineType(types: !5667)
!5667 = !{!725, !5659, !7, !5668}
!5668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!5669 = !{!5670, !5671, !5672}
!5670 = !DILocalVariable(name: "vec_", arg: 1, scope: !5665, file: !1617, line: 27, type: !5659)
!5671 = !DILocalVariable(name: "ix_", arg: 2, scope: !5665, file: !1617, line: 27, type: !7)
!5672 = !DILocalVariable(name: "ptr", arg: 3, scope: !5665, file: !1617, line: 27, type: !5668)
!5673 = !DILocation(line: 0, scope: !5665)
!5674 = !DILocation(line: 27, column: 1, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5665, file: !1617, line: 27, column: 1)
!5676 = !DILocation(line: 27, column: 1, scope: !5665)
!5677 = !DILocation(line: 27, column: 1, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5675, file: !1617, line: 27, column: 1)
!5679 = !DILocation(line: 27, column: 1, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5675, file: !1617, line: 27, column: 1)
!5681 = !DILocation(line: 0, scope: !5675)
!5682 = distinct !DISubprogram(name: "output_eh_try_list", scope: !3, file: !3, line: 1375, type: !5683, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5686)
!5683 = !DISubroutineType(types: !5684)
!5684 = !{null, !732, !5685}
!5685 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_catch", file: !344, line: 181, baseType: !1544)
!5686 = !{!5687, !5688, !5689}
!5687 = !DILocalVariable(name: "ob", arg: 1, scope: !5682, file: !3, line: 1375, type: !732)
!5688 = !DILocalVariable(name: "first", arg: 2, scope: !5682, file: !3, line: 1375, type: !5685)
!5689 = !DILocalVariable(name: "n", scope: !5682, file: !3, line: 1377, type: !5685)
!5690 = !DILocation(line: 0, scope: !5682)
!5691 = !DILocation(line: 1379, column: 8, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 1379, column: 3)
!5693 = !DILocation(line: 0, scope: !5692)
!5694 = !DILocation(line: 1379, column: 3, scope: !5692)
!5695 = !DILocation(line: 1381, column: 7, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 1380, column: 5)
!5697 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 1379, column: 3)
!5698 = !DILocation(line: 1382, column: 35, scope: !5696)
!5699 = !DILocation(line: 1382, column: 7, scope: !5696)
!5700 = !DILocation(line: 1383, column: 35, scope: !5696)
!5701 = !DILocation(line: 1383, column: 7, scope: !5696)
!5702 = !DILocation(line: 1384, column: 35, scope: !5696)
!5703 = !DILocation(line: 1384, column: 7, scope: !5696)
!5704 = !DILocation(line: 1379, column: 29, scope: !5697)
!5705 = !DILocation(line: 1379, column: 3, scope: !5697)
!5706 = distinct !{!5706, !5694, !5707}
!5707 = !DILocation(line: 1385, column: 5, scope: !5692)
!5708 = !DILocation(line: 1387, column: 3, scope: !5682)
!5709 = !DILocation(line: 1388, column: 1, scope: !5682)
!5710 = distinct !DISubprogram(name: "gsi_start_bb", scope: !634, file: !634, line: 4418, type: !5711, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5713)
!5711 = !DISubroutineType(types: !5712)
!5712 = !{!5306, !1634}
!5713 = !{!5714, !5715, !5716}
!5714 = !DILocalVariable(name: "bb", arg: 1, scope: !5710, file: !634, line: 4418, type: !1634)
!5715 = !DILocalVariable(name: "i", scope: !5710, file: !634, line: 4420, type: !5306)
!5716 = !DILocalVariable(name: "seq", scope: !5710, file: !634, line: 4421, type: !1124)
!5717 = !DILocation(line: 0, scope: !5710)
!5718 = !DILocation(line: 4420, column: 24, scope: !5710)
!5719 = !DILocation(line: 4423, column: 9, scope: !5710)
!5720 = !DILocation(line: 4424, column: 11, scope: !5710)
!5721 = !DILocation(line: 4424, column: 5, scope: !5710)
!5722 = !DILocation(line: 4424, column: 9, scope: !5710)
!5723 = !DILocation(line: 4425, column: 5, scope: !5710)
!5724 = !DILocation(line: 4425, column: 9, scope: !5710)
!5725 = !DILocation(line: 4426, column: 5, scope: !5710)
!5726 = !DILocation(line: 4426, column: 8, scope: !5710)
!5727 = !DILocation(line: 4429, column: 1, scope: !5710)
!5728 = distinct !DISubprogram(name: "gsi_end_p", scope: !634, file: !634, line: 4467, type: !5729, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5731)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{!724, !5306}
!5731 = !{!5732}
!5732 = !DILocalVariable(name: "i", arg: 1, scope: !5728, file: !634, line: 4467, type: !5306)
!5733 = !DILocation(line: 4467, column: 33, scope: !5728)
!5734 = !DILocation(line: 4469, column: 12, scope: !5728)
!5735 = !DILocation(line: 4469, column: 16, scope: !5728)
!5736 = !DILocation(line: 4469, column: 10, scope: !5728)
!5737 = !DILocation(line: 4469, column: 3, scope: !5728)
!5738 = distinct !DISubprogram(name: "phi_nodes", scope: !5739, file: !5739, line: 508, type: !5740, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5745)
!5739 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5740 = !DISubroutineType(types: !5741)
!5741 = !{!1124, !5742}
!5742 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !812, line: 112, baseType: !5743)
!5743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5744, size: 64)
!5744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!5745 = !{!5746}
!5746 = !DILocalVariable(name: "bb", arg: 1, scope: !5738, file: !5739, line: 508, type: !5742)
!5747 = !DILocation(line: 0, scope: !5738)
!5748 = !DILocation(line: 510, column: 3, scope: !5738)
!5749 = !DILocation(line: 511, column: 15, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5738, file: !5739, line: 511, column: 7)
!5751 = !DILocation(line: 511, column: 8, scope: !5750)
!5752 = !DILocation(line: 511, column: 7, scope: !5738)
!5753 = !DILocation(line: 513, column: 25, scope: !5738)
!5754 = !DILocation(line: 513, column: 3, scope: !5738)
!5755 = !DILocation(line: 514, column: 1, scope: !5738)
!5756 = distinct !DISubprogram(name: "gsi_stmt", scope: !634, file: !634, line: 4501, type: !5757, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5759)
!5757 = !DISubroutineType(types: !5758)
!5758 = !{!1134, !5306}
!5759 = !{!5760}
!5760 = !DILocalVariable(name: "i", arg: 1, scope: !5756, file: !634, line: 4501, type: !5306)
!5761 = !DILocation(line: 4501, column: 32, scope: !5756)
!5762 = !DILocation(line: 4503, column: 12, scope: !5756)
!5763 = !DILocation(line: 4503, column: 17, scope: !5756)
!5764 = !DILocation(line: 4503, column: 3, scope: !5756)
!5765 = distinct !DISubprogram(name: "output_gimple_stmt", scope: !3, file: !3, line: 1640, type: !5766, scopeLine: 1641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5768)
!5766 = !DISubroutineType(types: !5767)
!5767 = !{null, !732, !1134}
!5768 = !{!5769, !5770, !5771, !5772, !5773, !5774, !5775}
!5769 = !DILocalVariable(name: "ob", arg: 1, scope: !5765, file: !3, line: 1640, type: !732)
!5770 = !DILocalVariable(name: "stmt", arg: 2, scope: !5765, file: !3, line: 1640, type: !1134)
!5771 = !DILocalVariable(name: "i", scope: !5765, file: !3, line: 1642, type: !7)
!5772 = !DILocalVariable(name: "code", scope: !5765, file: !3, line: 1643, type: !633)
!5773 = !DILocalVariable(name: "tag", scope: !5765, file: !3, line: 1644, type: !604)
!5774 = !DILocalVariable(name: "bp", scope: !5765, file: !3, line: 1645, type: !3039)
!5775 = !DILocalVariable(name: "op", scope: !5776, file: !3, line: 1701, type: !811)
!5776 = distinct !DILexicalBlock(scope: !5777, file: !3, line: 1700, column: 2)
!5777 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 1699, column: 7)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 1699, column: 7)
!5779 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 1671, column: 5)
!5780 = !DILocation(line: 0, scope: !5765)
!5781 = !DILocation(line: 1648, column: 10, scope: !5765)
!5782 = !DILocation(line: 1649, column: 9, scope: !5765)
!5783 = !DILocation(line: 1650, column: 3, scope: !5765)
!5784 = !DILocation(line: 1653, column: 8, scope: !5765)
!5785 = !DILocation(line: 1654, column: 22, scope: !5765)
!5786 = !DILocation(line: 1654, column: 3, scope: !5765)
!5787 = !DILocation(line: 1655, column: 22, scope: !5765)
!5788 = !DILocation(line: 1655, column: 3, scope: !5765)
!5789 = !DILocation(line: 1656, column: 7, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 1656, column: 7)
!5791 = !DILocation(line: 1656, column: 7, scope: !5765)
!5792 = !DILocation(line: 1657, column: 24, scope: !5790)
!5793 = !DILocation(line: 1657, column: 5, scope: !5790)
!5794 = !DILocation(line: 1658, column: 22, scope: !5765)
!5795 = !DILocation(line: 1658, column: 3, scope: !5765)
!5796 = !DILocation(line: 1659, column: 35, scope: !5765)
!5797 = !DILocation(line: 1659, column: 22, scope: !5765)
!5798 = !DILocation(line: 1659, column: 3, scope: !5765)
!5799 = !DILocation(line: 1660, column: 27, scope: !5765)
!5800 = !DILocation(line: 1660, column: 3, scope: !5765)
!5801 = !DILocation(line: 1661, column: 3, scope: !5765)
!5802 = !DILocation(line: 1664, column: 28, scope: !5765)
!5803 = !DILocation(line: 1664, column: 3, scope: !5765)
!5804 = !DILocation(line: 1667, column: 24, scope: !5765)
!5805 = !DILocation(line: 1667, column: 3, scope: !5765)
!5806 = !DILocation(line: 1670, column: 11, scope: !5765)
!5807 = !DILocation(line: 1670, column: 3, scope: !5765)
!5808 = !DILocation(line: 1673, column: 27, scope: !5779)
!5809 = !DILocation(line: 1673, column: 7, scope: !5779)
!5810 = !DILocation(line: 1674, column: 7, scope: !5779)
!5811 = !DILocation(line: 1677, column: 32, scope: !5779)
!5812 = !DILocation(line: 1677, column: 7, scope: !5779)
!5813 = !DILocation(line: 1678, column: 7, scope: !5779)
!5814 = !DILocation(line: 1681, column: 27, scope: !5779)
!5815 = !DILocation(line: 1681, column: 7, scope: !5779)
!5816 = !DILocation(line: 1682, column: 7, scope: !5779)
!5817 = !DILocation(line: 1685, column: 38, scope: !5779)
!5818 = !DILocation(line: 1685, column: 51, scope: !5779)
!5819 = !DILocation(line: 1685, column: 7, scope: !5779)
!5820 = !DILocation(line: 1686, column: 38, scope: !5779)
!5821 = !DILocation(line: 1686, column: 51, scope: !5779)
!5822 = !DILocation(line: 1686, column: 7, scope: !5779)
!5823 = !DILocation(line: 1687, column: 38, scope: !5779)
!5824 = !DILocation(line: 1687, column: 51, scope: !5779)
!5825 = !DILocation(line: 1687, column: 7, scope: !5779)
!5826 = !DILocation(line: 1688, column: 30, scope: !5779)
!5827 = !DILocation(line: 1688, column: 43, scope: !5779)
!5828 = !DILocation(line: 1688, column: 7, scope: !5779)
!5829 = !DILocation(line: 1699, column: 12, scope: !5778)
!5830 = !DILocation(line: 0, scope: !5778)
!5831 = !DILocation(line: 1699, column: 23, scope: !5777)
!5832 = !DILocation(line: 1699, column: 21, scope: !5777)
!5833 = !DILocation(line: 1699, column: 7, scope: !5778)
!5834 = !DILocation(line: 1701, column: 14, scope: !5776)
!5835 = !DILocation(line: 0, scope: !5776)
!5836 = !DILocation(line: 1702, column: 4, scope: !5776)
!5837 = !DILocation(line: 1699, column: 47, scope: !5777)
!5838 = !DILocation(line: 1699, column: 7, scope: !5777)
!5839 = distinct !{!5839, !5833, !5840}
!5840 = !DILocation(line: 1703, column: 2, scope: !5778)
!5841 = !DILocation(line: 1711, column: 7, scope: !5779)
!5842 = !DILocation(line: 1712, column: 5, scope: !5779)
!5843 = !DILocation(line: 1713, column: 1, scope: !5765)
!5844 = distinct !DISubprogram(name: "gsi_next", scope: !634, file: !634, line: 4485, type: !5845, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5848)
!5845 = !DISubroutineType(types: !5846)
!5846 = !{null, !5847}
!5847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!5848 = !{!5849}
!5849 = !DILocalVariable(name: "i", arg: 1, scope: !5844, file: !634, line: 4485, type: !5847)
!5850 = !DILocation(line: 0, scope: !5844)
!5851 = !DILocation(line: 4487, column: 15, scope: !5844)
!5852 = !DILocation(line: 4487, column: 20, scope: !5844)
!5853 = !DILocation(line: 4487, column: 10, scope: !5844)
!5854 = !DILocation(line: 4488, column: 1, scope: !5844)
!5855 = distinct !DISubprogram(name: "gimple_phi_result", scope: !634, file: !634, line: 3071, type: !5856, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5859)
!5856 = !DISubroutineType(types: !5857)
!5857 = !{!811, !5858}
!5858 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !812, line: 60, baseType: !2460)
!5859 = !{!5860}
!5860 = !DILocalVariable(name: "gs", arg: 1, scope: !5855, file: !634, line: 3071, type: !5858)
!5861 = !DILocation(line: 0, scope: !5855)
!5862 = !DILocation(line: 3074, column: 25, scope: !5855)
!5863 = !DILocation(line: 3074, column: 3, scope: !5855)
!5864 = distinct !DISubprogram(name: "output_phi", scope: !3, file: !3, line: 1621, type: !5766, scopeLine: 1622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5865)
!5865 = !{!5866, !5867, !5868, !5869}
!5866 = !DILocalVariable(name: "ob", arg: 1, scope: !5864, file: !3, line: 1621, type: !732)
!5867 = !DILocalVariable(name: "phi", arg: 2, scope: !5864, file: !3, line: 1621, type: !1134)
!5868 = !DILocalVariable(name: "i", scope: !5864, file: !3, line: 1623, type: !7)
!5869 = !DILocalVariable(name: "len", scope: !5864, file: !3, line: 1623, type: !7)
!5870 = !DILocation(line: 0, scope: !5864)
!5871 = !DILocation(line: 1623, column: 21, scope: !5864)
!5872 = !DILocation(line: 1625, column: 28, scope: !5864)
!5873 = !DILocation(line: 1625, column: 3, scope: !5864)
!5874 = !DILocation(line: 1626, column: 23, scope: !5864)
!5875 = !DILocation(line: 1626, column: 3, scope: !5864)
!5876 = !DILocation(line: 1628, column: 17, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 1628, column: 3)
!5878 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 1628, column: 3)
!5879 = !DILocation(line: 1628, column: 8, scope: !5878)
!5880 = !DILocation(line: 0, scope: !5878)
!5881 = !DILocation(line: 1628, column: 3, scope: !5878)
!5882 = !DILocation(line: 1630, column: 32, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 1629, column: 5)
!5884 = !DILocation(line: 1630, column: 7, scope: !5883)
!5885 = !DILocation(line: 1631, column: 27, scope: !5883)
!5886 = !DILocation(line: 1631, column: 57, scope: !5883)
!5887 = !DILocation(line: 1631, column: 62, scope: !5883)
!5888 = !DILocation(line: 1631, column: 7, scope: !5883)
!5889 = !DILocation(line: 1632, column: 32, scope: !5883)
!5890 = !DILocation(line: 1632, column: 7, scope: !5883)
!5891 = !DILocation(line: 1628, column: 25, scope: !5877)
!5892 = !DILocation(line: 1628, column: 3, scope: !5877)
!5893 = distinct !{!5893, !5881, !5894}
!5894 = !DILocation(line: 1633, column: 5, scope: !5878)
!5895 = !DILocation(line: 1634, column: 1, scope: !5864)
!5896 = distinct !DISubprogram(name: "bb_seq", scope: !634, file: !634, line: 237, type: !5740, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5897)
!5897 = !{!5898}
!5898 = !DILocalVariable(name: "bb", arg: 1, scope: !5896, file: !634, line: 237, type: !5742)
!5899 = !DILocation(line: 0, scope: !5896)
!5900 = !DILocation(line: 239, column: 17, scope: !5896)
!5901 = !DILocation(line: 239, column: 23, scope: !5896)
!5902 = !DILocation(line: 239, column: 33, scope: !5896)
!5903 = !DILocation(line: 239, column: 43, scope: !5896)
!5904 = !DILocation(line: 239, column: 36, scope: !5896)
!5905 = !DILocation(line: 239, column: 10, scope: !5896)
!5906 = !DILocation(line: 239, column: 68, scope: !5896)
!5907 = !DILocation(line: 239, column: 3, scope: !5896)
!5908 = distinct !DISubprogram(name: "gimple_seq_first", scope: !634, file: !634, line: 159, type: !5909, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5914)
!5909 = !DISubroutineType(types: !5910)
!5910 = !{!1129, !5911}
!5911 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !812, line: 67, baseType: !5912)
!5912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5913, size: 64)
!5913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1126)
!5914 = !{!5915}
!5915 = !DILocalVariable(name: "s", arg: 1, scope: !5908, file: !634, line: 159, type: !5911)
!5916 = !DILocation(line: 0, scope: !5908)
!5917 = !DILocation(line: 161, column: 10, scope: !5908)
!5918 = !DILocation(line: 161, column: 17, scope: !5908)
!5919 = !DILocation(line: 161, column: 3, scope: !5908)
!5920 = distinct !DISubprogram(name: "gimple_code", scope: !634, file: !634, line: 1052, type: !5921, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5923)
!5921 = !DISubroutineType(types: !5922)
!5922 = !{!633, !5858}
!5923 = !{!5924}
!5924 = !DILocalVariable(name: "g", arg: 1, scope: !5920, file: !634, line: 1052, type: !5858)
!5925 = !DILocation(line: 0, scope: !5920)
!5926 = !DILocation(line: 1054, column: 20, scope: !5920)
!5927 = !DILocation(line: 1054, column: 3, scope: !5920)
!5928 = distinct !DISubprogram(name: "lto_gimple_code_to_tag", scope: !6, file: !6, line: 896, type: !5929, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5931)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{!604, !633}
!5931 = !{!5932}
!5932 = !DILocalVariable(name: "code", arg: 1, scope: !5928, file: !6, line: 896, type: !633)
!5933 = !DILocation(line: 0, scope: !5928)
!5934 = !DILocation(line: 898, column: 60, scope: !5928)
!5935 = !DILocation(line: 898, column: 3, scope: !5928)
!5936 = distinct !DISubprogram(name: "gimple_num_ops", scope: !634, file: !634, line: 1596, type: !5937, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5939)
!5937 = !DISubroutineType(types: !5938)
!5938 = !{!7, !5858}
!5939 = !{!5940}
!5940 = !DILocalVariable(name: "gs", arg: 1, scope: !5936, file: !634, line: 1596, type: !5858)
!5941 = !DILocation(line: 0, scope: !5936)
!5942 = !DILocation(line: 1598, column: 21, scope: !5936)
!5943 = !DILocation(line: 1598, column: 3, scope: !5936)
!5944 = distinct !DISubprogram(name: "gimple_no_warning_p", scope: !634, file: !634, line: 1201, type: !5945, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5947)
!5945 = !DISubroutineType(types: !5946)
!5946 = !{!724, !5858}
!5947 = !{!5948}
!5948 = !DILocalVariable(name: "stmt", arg: 1, scope: !5944, file: !634, line: 1201, type: !5858)
!5949 = !DILocation(line: 0, scope: !5944)
!5950 = !DILocation(line: 1203, column: 23, scope: !5944)
!5951 = !DILocation(line: 1203, column: 10, scope: !5944)
!5952 = !DILocation(line: 1203, column: 3, scope: !5944)
!5953 = distinct !DISubprogram(name: "is_gimple_assign", scope: !634, file: !634, line: 1677, type: !5945, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5954)
!5954 = !{!5955}
!5955 = !DILocalVariable(name: "gs", arg: 1, scope: !5953, file: !634, line: 1677, type: !5858)
!5956 = !DILocation(line: 0, scope: !5953)
!5957 = !DILocation(line: 1679, column: 10, scope: !5953)
!5958 = !DILocation(line: 1679, column: 27, scope: !5953)
!5959 = !DILocation(line: 1679, column: 3, scope: !5953)
!5960 = distinct !DISubprogram(name: "gimple_assign_nontemporal_move_p", scope: !634, file: !634, line: 1794, type: !5945, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5961)
!5961 = !{!5962}
!5962 = !DILocalVariable(name: "gs", arg: 1, scope: !5960, file: !634, line: 1794, type: !5858)
!5963 = !DILocation(line: 0, scope: !5960)
!5964 = !DILocation(line: 1797, column: 21, scope: !5960)
!5965 = !DILocation(line: 1797, column: 10, scope: !5960)
!5966 = !DILocation(line: 1797, column: 3, scope: !5960)
!5967 = distinct !DISubprogram(name: "gimple_has_volatile_ops", scope: !634, file: !634, line: 1477, type: !5945, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5968)
!5968 = !{!5969}
!5969 = !DILocalVariable(name: "stmt", arg: 1, scope: !5967, file: !634, line: 1477, type: !5858)
!5970 = !DILocation(line: 0, scope: !5967)
!5971 = !DILocation(line: 1479, column: 7, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5967, file: !634, line: 1479, column: 7)
!5973 = !DILocation(line: 1479, column: 7, scope: !5967)
!5974 = !DILocation(line: 1480, column: 25, scope: !5972)
!5975 = !DILocation(line: 1480, column: 12, scope: !5972)
!5976 = !DILocation(line: 1480, column: 5, scope: !5972)
!5977 = !DILocation(line: 0, scope: !5972)
!5978 = !DILocation(line: 1483, column: 1, scope: !5967)
!5979 = distinct !DISubprogram(name: "gimple_location", scope: !634, file: !634, line: 1139, type: !5980, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5982)
!5980 = !DISubroutineType(types: !5981)
!5981 = !{!935, !5858}
!5982 = !{!5983}
!5983 = !DILocalVariable(name: "g", arg: 1, scope: !5979, file: !634, line: 1139, type: !5858)
!5984 = !DILocation(line: 0, scope: !5979)
!5985 = !DILocation(line: 1141, column: 20, scope: !5979)
!5986 = !DILocation(line: 1141, column: 3, scope: !5979)
!5987 = distinct !DISubprogram(name: "gimple_block", scope: !634, file: !634, line: 1121, type: !5856, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5988)
!5988 = !{!5989}
!5989 = !DILocalVariable(name: "g", arg: 1, scope: !5987, file: !634, line: 1121, type: !5858)
!5990 = !DILocation(line: 0, scope: !5987)
!5991 = !DILocation(line: 1123, column: 20, scope: !5987)
!5992 = !DILocation(line: 1123, column: 3, scope: !5987)
!5993 = distinct !DISubprogram(name: "gimple_resx_region", scope: !634, file: !634, line: 3121, type: !5994, scopeLine: 3122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5996)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{!725, !5858}
!5996 = !{!5997}
!5997 = !DILocalVariable(name: "gs", arg: 1, scope: !5993, file: !634, line: 3121, type: !5858)
!5998 = !DILocation(line: 0, scope: !5993)
!5999 = !DILocation(line: 3124, column: 29, scope: !5993)
!6000 = !DILocation(line: 3124, column: 3, scope: !5993)
!6001 = distinct !DISubprogram(name: "gimple_eh_must_not_throw_fndecl", scope: !634, file: !634, line: 2899, type: !6002, scopeLine: 2900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6004)
!6002 = !DISubroutineType(types: !6003)
!6003 = !{!811, !1134}
!6004 = !{!6005}
!6005 = !DILocalVariable(name: "gs", arg: 1, scope: !6001, file: !634, line: 2899, type: !1134)
!6006 = !DILocation(line: 0, scope: !6001)
!6007 = !DILocation(line: 2902, column: 28, scope: !6001)
!6008 = !DILocation(line: 2902, column: 3, scope: !6001)
!6009 = distinct !DISubprogram(name: "gimple_eh_dispatch_region", scope: !634, file: !634, line: 3139, type: !5994, scopeLine: 3140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6010)
!6010 = !{!6011}
!6011 = !DILocalVariable(name: "gs", arg: 1, scope: !6009, file: !634, line: 3139, type: !5858)
!6012 = !DILocation(line: 0, scope: !6009)
!6013 = !DILocation(line: 3142, column: 29, scope: !6009)
!6014 = !DILocation(line: 3142, column: 3, scope: !6009)
!6015 = distinct !DISubprogram(name: "gimple_asm_ninputs", scope: !634, file: !634, line: 2581, type: !5937, scopeLine: 2582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6016)
!6016 = !{!6017}
!6017 = !DILocalVariable(name: "gs", arg: 1, scope: !6015, file: !634, line: 2581, type: !5858)
!6018 = !DILocation(line: 0, scope: !6015)
!6019 = !DILocation(line: 2584, column: 25, scope: !6015)
!6020 = !DILocation(line: 2584, column: 10, scope: !6015)
!6021 = !DILocation(line: 2584, column: 3, scope: !6015)
!6022 = distinct !DISubprogram(name: "gimple_asm_noutputs", scope: !634, file: !634, line: 2591, type: !5937, scopeLine: 2592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6023)
!6023 = !{!6024}
!6024 = !DILocalVariable(name: "gs", arg: 1, scope: !6022, file: !634, line: 2591, type: !5858)
!6025 = !DILocation(line: 0, scope: !6022)
!6026 = !DILocation(line: 2594, column: 14, scope: !6022)
!6027 = !DILocation(line: 2594, column: 25, scope: !6022)
!6028 = !DILocation(line: 2594, column: 10, scope: !6022)
!6029 = !DILocation(line: 2594, column: 3, scope: !6022)
!6030 = distinct !DISubprogram(name: "gimple_asm_nclobbers", scope: !634, file: !634, line: 2601, type: !5937, scopeLine: 2602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6031)
!6031 = !{!6032}
!6032 = !DILocalVariable(name: "gs", arg: 1, scope: !6030, file: !634, line: 2601, type: !5858)
!6033 = !DILocation(line: 0, scope: !6030)
!6034 = !DILocation(line: 2604, column: 14, scope: !6030)
!6035 = !DILocation(line: 2604, column: 25, scope: !6030)
!6036 = !DILocation(line: 2604, column: 10, scope: !6030)
!6037 = !DILocation(line: 2604, column: 3, scope: !6030)
!6038 = distinct !DISubprogram(name: "gimple_asm_string", scope: !634, file: !634, line: 2729, type: !6039, scopeLine: 2730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6041)
!6039 = !DISubroutineType(types: !6040)
!6040 = !{!730, !5858}
!6041 = !{!6042}
!6042 = !DILocalVariable(name: "gs", arg: 1, scope: !6038, file: !634, line: 2729, type: !5858)
!6043 = !DILocation(line: 0, scope: !6038)
!6044 = !DILocation(line: 2732, column: 25, scope: !6038)
!6045 = !DILocation(line: 2732, column: 3, scope: !6038)
!6046 = distinct !DISubprogram(name: "gimple_op", scope: !634, file: !634, line: 1631, type: !6047, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6049)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{!811, !5858, !7}
!6049 = !{!6050, !6051}
!6050 = !DILocalVariable(name: "gs", arg: 1, scope: !6046, file: !634, line: 1631, type: !5858)
!6051 = !DILocalVariable(name: "i", arg: 2, scope: !6046, file: !634, line: 1631, type: !7)
!6052 = !DILocation(line: 0, scope: !6046)
!6053 = !DILocation(line: 1633, column: 7, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6046, file: !634, line: 1633, column: 7)
!6055 = !DILocation(line: 1633, column: 7, scope: !6046)
!6056 = !DILocation(line: 1638, column: 14, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6054, file: !634, line: 1634, column: 5)
!6058 = !DILocation(line: 1638, column: 7, scope: !6057)
!6059 = !DILocation(line: 0, scope: !6054)
!6060 = !DILocation(line: 1642, column: 1, scope: !6046)
!6061 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !634, file: !634, line: 1283, type: !5945, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6062)
!6062 = !{!6063}
!6063 = !DILocalVariable(name: "g", arg: 1, scope: !6061, file: !634, line: 1283, type: !5858)
!6064 = !DILocation(line: 0, scope: !6061)
!6065 = !DILocation(line: 1285, column: 10, scope: !6061)
!6066 = !DILocation(line: 1285, column: 26, scope: !6061)
!6067 = !DILocation(line: 1285, column: 43, scope: !6061)
!6068 = !DILocation(line: 1285, column: 46, scope: !6061)
!6069 = !DILocation(line: 1285, column: 62, scope: !6061)
!6070 = !DILocation(line: 1285, column: 3, scope: !6061)
!6071 = distinct !DISubprogram(name: "gimple_has_ops", scope: !634, file: !634, line: 1274, type: !5945, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6072)
!6072 = !{!6073}
!6073 = !DILocalVariable(name: "g", arg: 1, scope: !6071, file: !634, line: 1274, type: !5858)
!6074 = !DILocation(line: 0, scope: !6071)
!6075 = !DILocation(line: 1276, column: 10, scope: !6071)
!6076 = !DILocation(line: 1276, column: 26, scope: !6071)
!6077 = !DILocation(line: 1276, column: 41, scope: !6071)
!6078 = !DILocation(line: 1276, column: 44, scope: !6071)
!6079 = !DILocation(line: 1276, column: 60, scope: !6071)
!6080 = !DILocation(line: 1276, column: 3, scope: !6071)
!6081 = distinct !DISubprogram(name: "gimple_ops", scope: !634, file: !634, line: 1614, type: !6082, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6084)
!6082 = !DISubroutineType(types: !6083)
!6083 = !{!1169, !1134}
!6084 = !{!6085, !6086}
!6085 = !DILocalVariable(name: "gs", arg: 1, scope: !6081, file: !634, line: 1614, type: !1134)
!6086 = !DILocalVariable(name: "off", scope: !6081, file: !634, line: 1616, type: !771)
!6087 = !DILocation(line: 0, scope: !6081)
!6088 = !DILocation(line: 1621, column: 28, scope: !6081)
!6089 = !DILocation(line: 1621, column: 9, scope: !6081)
!6090 = !DILocation(line: 1622, column: 3, scope: !6081)
!6091 = !DILocation(line: 1624, column: 20, scope: !6081)
!6092 = !DILocation(line: 1624, column: 32, scope: !6081)
!6093 = !DILocation(line: 1624, column: 10, scope: !6081)
!6094 = !DILocation(line: 1624, column: 3, scope: !6081)
!6095 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !634, file: !634, line: 1073, type: !6096, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6098)
!6096 = !DISubroutineType(types: !6097)
!6097 = !{!672, !1134}
!6098 = !{!6099}
!6099 = !DILocalVariable(name: "gs", arg: 1, scope: !6095, file: !634, line: 1073, type: !1134)
!6100 = !DILocation(line: 0, scope: !6095)
!6101 = !DILocation(line: 1075, column: 24, scope: !6095)
!6102 = !DILocation(line: 1075, column: 10, scope: !6095)
!6103 = !DILocation(line: 1075, column: 3, scope: !6095)
!6104 = distinct !DISubprogram(name: "gss_for_code", scope: !634, file: !634, line: 1061, type: !6105, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6107)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{!672, !633}
!6107 = !{!6108}
!6108 = !DILocalVariable(name: "code", arg: 1, scope: !6104, file: !634, line: 1061, type: !633)
!6109 = !DILocation(line: 0, scope: !6104)
!6110 = !DILocation(line: 1066, column: 10, scope: !6104)
!6111 = !DILocation(line: 1066, column: 3, scope: !6104)
!6112 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !634, file: !634, line: 3061, type: !5937, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6113)
!6113 = !{!6114}
!6114 = !DILocalVariable(name: "gs", arg: 1, scope: !6112, file: !634, line: 3061, type: !5858)
!6115 = !DILocation(line: 0, scope: !6112)
!6116 = !DILocation(line: 3064, column: 25, scope: !6112)
!6117 = !DILocation(line: 3064, column: 3, scope: !6112)
!6118 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !5739, file: !5739, line: 434, type: !6119, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6122)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!811, !6121}
!6121 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !1165, line: 27, baseType: !1169)
!6122 = !{!6123}
!6123 = !DILocalVariable(name: "def", arg: 1, scope: !6118, file: !5739, line: 434, type: !6121)
!6124 = !DILocation(line: 0, scope: !6118)
!6125 = !DILocation(line: 436, column: 10, scope: !6118)
!6126 = !DILocation(line: 436, column: 3, scope: !6118)
!6127 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !634, file: !634, line: 3080, type: !6082, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6128)
!6128 = !{!6129}
!6129 = !DILocalVariable(name: "gs", arg: 1, scope: !6127, file: !634, line: 3080, type: !1134)
!6130 = !DILocation(line: 0, scope: !6127)
!6131 = !DILocation(line: 3083, column: 26, scope: !6127)
!6132 = !DILocation(line: 3083, column: 3, scope: !6127)
!6133 = distinct !DISubprogram(name: "gimple_phi_arg_def", scope: !5739, file: !5739, line: 450, type: !6134, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6136)
!6134 = !DISubroutineType(types: !6135)
!6135 = !{!811, !1134, !771}
!6136 = !{!6137, !6138, !6139}
!6137 = !DILocalVariable(name: "gs", arg: 1, scope: !6133, file: !5739, line: 450, type: !1134)
!6138 = !DILocalVariable(name: "index", arg: 2, scope: !6133, file: !5739, line: 450, type: !771)
!6139 = !DILocalVariable(name: "pd", scope: !6133, file: !5739, line: 452, type: !6140)
!6140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!6141 = !DILocation(line: 0, scope: !6133)
!6142 = !DILocation(line: 452, column: 46, scope: !6133)
!6143 = !DILocation(line: 452, column: 26, scope: !6133)
!6144 = !DILocation(line: 453, column: 33, scope: !6133)
!6145 = !DILocation(line: 453, column: 10, scope: !6133)
!6146 = !DILocation(line: 453, column: 3, scope: !6133)
!6147 = distinct !DISubprogram(name: "gimple_phi_arg_edge", scope: !5739, file: !5739, line: 467, type: !6148, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6150)
!6148 = !DISubroutineType(types: !6149)
!6149 = !{!1114, !1134, !771}
!6150 = !{!6151, !6152}
!6151 = !DILocalVariable(name: "gs", arg: 1, scope: !6147, file: !5739, line: 467, type: !1134)
!6152 = !DILocalVariable(name: "i", arg: 2, scope: !6147, file: !5739, line: 467, type: !771)
!6153 = !DILocation(line: 0, scope: !6147)
!6154 = !DILocation(line: 469, column: 10, scope: !6147)
!6155 = !DILocation(line: 469, column: 3, scope: !6147)
!6156 = distinct !DISubprogram(name: "gimple_phi_arg_location", scope: !5739, file: !5739, line: 475, type: !6157, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6159)
!6157 = !DISubroutineType(types: !6158)
!6158 = !{!937, !1134, !771}
!6159 = !{!6160, !6161}
!6160 = !DILocalVariable(name: "gs", arg: 1, scope: !6156, file: !5739, line: 475, type: !1134)
!6161 = !DILocalVariable(name: "i", arg: 2, scope: !6156, file: !5739, line: 475, type: !771)
!6162 = !DILocation(line: 0, scope: !6156)
!6163 = !DILocation(line: 477, column: 30, scope: !6156)
!6164 = !DILocation(line: 477, column: 10, scope: !6156)
!6165 = !DILocation(line: 477, column: 34, scope: !6156)
!6166 = !DILocation(line: 477, column: 3, scope: !6156)
!6167 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !634, file: !634, line: 3100, type: !6168, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6170)
!6168 = !DISubroutineType(types: !6169)
!6169 = !{!6140, !1134, !7}
!6170 = !{!6171, !6172}
!6171 = !DILocalVariable(name: "gs", arg: 1, scope: !6167, file: !634, line: 3100, type: !1134)
!6172 = !DILocalVariable(name: "index", arg: 2, scope: !6167, file: !634, line: 3100, type: !7)
!6173 = !DILocation(line: 0, scope: !6167)
!6174 = !DILocation(line: 3103, column: 3, scope: !6167)
!6175 = !DILocation(line: 3104, column: 12, scope: !6167)
!6176 = !DILocation(line: 3104, column: 3, scope: !6167)
!6177 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !5739, file: !5739, line: 427, type: !6178, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6183)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{!811, !6180}
!6180 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !1165, line: 30, baseType: !6181)
!6181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6182, size: 64)
!6182 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !149, line: 1893, baseType: !1176)
!6183 = !{!6184}
!6184 = !DILocalVariable(name: "use", arg: 1, scope: !6177, file: !5739, line: 427, type: !6180)
!6185 = !DILocation(line: 0, scope: !6177)
!6186 = !DILocation(line: 429, column: 17, scope: !6177)
!6187 = !DILocation(line: 429, column: 10, scope: !6177)
!6188 = !DILocation(line: 429, column: 3, scope: !6177)
!6189 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !351, file: !351, line: 150, type: !6190, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6194)
!6190 = !DISubroutineType(types: !6191)
!6191 = !{!1114, !6192, !7}
!6192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6193, size: 64)
!6193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!6194 = !{!6195, !6196}
!6195 = !DILocalVariable(name: "vec_", arg: 1, scope: !6189, file: !351, line: 150, type: !6192)
!6196 = !DILocalVariable(name: "ix_", arg: 2, scope: !6189, file: !351, line: 150, type: !7)
!6197 = !DILocation(line: 0, scope: !6189)
!6198 = !DILocation(line: 150, column: 1, scope: !6189)
!6199 = distinct !DISubprogram(name: "gimple_bb", scope: !634, file: !634, line: 1112, type: !6200, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6202)
!6200 = !DISubroutineType(types: !6201)
!6201 = !{!1098, !5858}
!6202 = !{!6203}
!6203 = !DILocalVariable(name: "g", arg: 1, scope: !6199, file: !634, line: 1112, type: !5858)
!6204 = !DILocation(line: 0, scope: !6199)
!6205 = !DILocation(line: 1114, column: 20, scope: !6199)
!6206 = !DILocation(line: 1114, column: 3, scope: !6199)
!6207 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !351, file: !351, line: 150, type: !6208, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6210)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{!7, !6192}
!6210 = !{!6211}
!6211 = !DILocalVariable(name: "vec_", arg: 1, scope: !6207, file: !351, line: 150, type: !6192)
!6212 = !DILocation(line: 0, scope: !6207)
!6213 = !DILocation(line: 150, column: 1, scope: !6207)
!6214 = distinct !DISubprogram(name: "ei_start_1", scope: !351, file: !351, line: 696, type: !6215, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6217)
!6215 = !DISubroutineType(types: !6216)
!6216 = !{!5400, !5405}
!6217 = !{!6218, !6219}
!6218 = !DILocalVariable(name: "ev", arg: 1, scope: !6214, file: !351, line: 696, type: !5405)
!6219 = !DILocalVariable(name: "i", scope: !6214, file: !351, line: 698, type: !5400)
!6220 = !DILocation(line: 0, scope: !6214)
!6221 = !DILocation(line: 700, column: 5, scope: !6214)
!6222 = !DILocation(line: 700, column: 11, scope: !6214)
!6223 = !DILocation(line: 701, column: 5, scope: !6214)
!6224 = !DILocation(line: 701, column: 15, scope: !6214)
!6225 = !DILocation(line: 703, column: 3, scope: !6214)
!6226 = distinct !DISubprogram(name: "ei_cond", scope: !351, file: !351, line: 771, type: !6227, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6230)
!6227 = !DISubroutineType(types: !6228)
!6228 = !{!724, !5400, !6229}
!6229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!6230 = !{!6231, !6232}
!6231 = !DILocalVariable(name: "ei", arg: 1, scope: !6226, file: !351, line: 771, type: !5400)
!6232 = !DILocalVariable(name: "p", arg: 2, scope: !6226, file: !351, line: 771, type: !6229)
!6233 = !DILocation(line: 0, scope: !6226)
!6234 = !DILocation(line: 773, column: 8, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6226, file: !351, line: 773, column: 7)
!6236 = !DILocation(line: 773, column: 7, scope: !6226)
!6237 = !DILocation(line: 775, column: 12, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6235, file: !351, line: 774, column: 5)
!6239 = !DILocation(line: 776, column: 7, scope: !6238)
!6240 = !DILocation(line: 781, column: 7, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6235, file: !351, line: 779, column: 5)
!6242 = !DILocation(line: 0, scope: !6235)
!6243 = !DILocation(line: 783, column: 1, scope: !6226)
!6244 = distinct !DISubprogram(name: "ei_next", scope: !351, file: !351, line: 736, type: !6245, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6248)
!6245 = !DISubroutineType(types: !6246)
!6246 = !{null, !6247}
!6247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5400, size: 64)
!6248 = !{!6249}
!6249 = !DILocalVariable(name: "i", arg: 1, scope: !6244, file: !351, line: 736, type: !6247)
!6250 = !DILocation(line: 0, scope: !6244)
!6251 = !DILocation(line: 738, column: 3, scope: !6244)
!6252 = !DILocation(line: 739, column: 11, scope: !6244)
!6253 = !DILocation(line: 740, column: 1, scope: !6244)
!6254 = distinct !DISubprogram(name: "ei_end_p", scope: !351, file: !351, line: 721, type: !6255, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6257)
!6255 = !DISubroutineType(types: !6256)
!6256 = !{!724, !5400}
!6257 = !{!6258}
!6258 = !DILocalVariable(name: "i", arg: 1, scope: !6254, file: !351, line: 721, type: !5400)
!6259 = !DILocation(line: 723, column: 22, scope: !6254)
!6260 = !DILocation(line: 723, column: 19, scope: !6254)
!6261 = !DILocation(line: 723, column: 10, scope: !6254)
!6262 = !DILocation(line: 723, column: 3, scope: !6254)
!6263 = distinct !DISubprogram(name: "ei_edge", scope: !351, file: !351, line: 752, type: !6264, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6266)
!6264 = !DISubroutineType(types: !6265)
!6265 = !{!1114, !5400}
!6266 = !{!6267}
!6267 = !DILocalVariable(name: "i", arg: 1, scope: !6263, file: !351, line: 752, type: !5400)
!6268 = !DILocation(line: 754, column: 10, scope: !6263)
!6269 = !DILocation(line: 754, column: 3, scope: !6263)
!6270 = distinct !DISubprogram(name: "ei_container", scope: !351, file: !351, line: 685, type: !6271, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6273)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{!1102, !5400}
!6273 = !{!6274}
!6274 = !DILocalVariable(name: "i", arg: 1, scope: !6270, file: !351, line: 685, type: !5400)
!6275 = !DILocation(line: 687, column: 3, scope: !6270)
!6276 = !DILocation(line: 688, column: 10, scope: !6270)
!6277 = !DILocation(line: 688, column: 3, scope: !6270)
!6278 = distinct !DISubprogram(name: "lto_tree_ref_encoder_size", scope: !6, file: !6, line: 986, type: !6279, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6281)
!6279 = !DISubroutineType(types: !6280)
!6280 = !{!7, !5056}
!6281 = !{!6282}
!6282 = !DILocalVariable(name: "encoder", arg: 1, scope: !6278, file: !6, line: 986, type: !5056)
!6283 = !DILocation(line: 0, scope: !6278)
!6284 = !DILocation(line: 988, column: 10, scope: !6278)
!6285 = !DILocation(line: 988, column: 3, scope: !6278)
!6286 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !149, file: !149, line: 184, type: !6287, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6290)
!6287 = !DISubroutineType(types: !6288)
!6288 = !{!1169, !6289, !811}
!6289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!6290 = !{!6291, !6292}
!6291 = !DILocalVariable(name: "vec_", arg: 1, scope: !6286, file: !149, line: 184, type: !6289)
!6292 = !DILocalVariable(name: "obj_", arg: 2, scope: !6286, file: !149, line: 184, type: !811)
!6293 = !DILocation(line: 0, scope: !6286)
!6294 = !DILocation(line: 184, column: 1, scope: !6286)
!6295 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !149, file: !149, line: 184, type: !6296, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6298)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{!725, !6289, !725}
!6298 = !{!6299, !6300, !6301}
!6299 = !DILocalVariable(name: "vec_", arg: 1, scope: !6295, file: !149, line: 184, type: !6289)
!6300 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6295, file: !149, line: 184, type: !725)
!6301 = !DILocalVariable(name: "extend", scope: !6295, file: !149, line: 184, type: !725)
!6302 = !DILocation(line: 0, scope: !6295)
!6303 = !DILocation(line: 184, column: 1, scope: !6295)
!6304 = !DILocation(line: 184, column: 1, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6295, file: !149, line: 184, column: 1)
!6306 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !149, file: !149, line: 182, type: !6307, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6310)
!6307 = !DISubroutineType(types: !6308)
!6308 = !{!1169, !6309, !811}
!6309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!6310 = !{!6311, !6312, !6313}
!6311 = !DILocalVariable(name: "vec_", arg: 1, scope: !6306, file: !149, line: 182, type: !6309)
!6312 = !DILocalVariable(name: "obj_", arg: 2, scope: !6306, file: !149, line: 182, type: !811)
!6313 = !DILocalVariable(name: "slot_", scope: !6306, file: !149, line: 182, type: !1169)
!6314 = !DILocation(line: 0, scope: !6306)
!6315 = !DILocation(line: 182, column: 1, scope: !6306)
!6316 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !149, file: !149, line: 182, type: !6317, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6319)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{!725, !6309, !725}
!6319 = !{!6320, !6321}
!6320 = !DILocalVariable(name: "vec_", arg: 1, scope: !6316, file: !149, line: 182, type: !6309)
!6321 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6316, file: !149, line: 182, type: !725)
!6322 = !DILocation(line: 0, scope: !6316)
!6323 = !DILocation(line: 182, column: 1, scope: !6316)
!6324 = distinct !DISubprogram(name: "output_unreferenced_globals", scope: !3, file: !3, line: 1955, type: !3389, scopeLine: 1956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6325)
!6325 = !{!6326, !6327, !6328, !6335, !6336, !6337, !6341}
!6326 = !DILocalVariable(name: "set", arg: 1, scope: !6324, file: !3, line: 1955, type: !3391)
!6327 = !DILocalVariable(name: "ob", scope: !6324, file: !3, line: 1957, type: !732)
!6328 = !DILocalVariable(name: "p", scope: !6324, file: !3, line: 1958, type: !6329)
!6329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6330, size: 64)
!6330 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_pair", file: !149, line: 194, baseType: !6331)
!6331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alias_pair", file: !149, line: 190, size: 128, elements: !6332)
!6332 = !{!6333, !6334}
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !6331, file: !149, line: 192, baseType: !811, size: 64)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !6331, file: !149, line: 193, baseType: !811, size: 64, offset: 64)
!6335 = !DILocalVariable(name: "i", scope: !6324, file: !3, line: 1959, type: !7)
!6336 = !DILocalVariable(name: "vnode", scope: !6324, file: !3, line: 1960, type: !2288)
!6337 = !DILocalVariable(name: "var", scope: !6338, file: !3, line: 1977, type: !811)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 1976, column: 5)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1975, column: 3)
!6340 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 1975, column: 3)
!6341 = !DILocalVariable(name: "alias", scope: !6342, file: !3, line: 1981, type: !2288)
!6342 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 1980, column: 9)
!6343 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 1979, column: 11)
!6344 = !DILocation(line: 0, scope: !6324)
!6345 = !DILocation(line: 1958, column: 3, scope: !6324)
!6346 = !DILocation(line: 1962, column: 8, scope: !6324)
!6347 = !DILocation(line: 1963, column: 7, scope: !6324)
!6348 = !DILocation(line: 1963, column: 19, scope: !6324)
!6349 = !DILocation(line: 1965, column: 3, scope: !6324)
!6350 = !DILocation(line: 1968, column: 28, scope: !6324)
!6351 = !DILocation(line: 1968, column: 3, scope: !6324)
!6352 = !DILocation(line: 0, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 1993, column: 6)
!6354 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1992, column: 4)
!6355 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 1992, column: 4)
!6356 = !DILocation(line: 1975, column: 3, scope: !6340)
!6357 = !DILocation(line: 0, scope: !6340)
!6358 = !DILocation(line: 1977, column: 25, scope: !6338)
!6359 = !DILocation(line: 0, scope: !6338)
!6360 = !DILocation(line: 1979, column: 11, scope: !6343)
!6361 = !DILocation(line: 1979, column: 27, scope: !6343)
!6362 = !DILocation(line: 1979, column: 11, scope: !6338)
!6363 = !DILocation(line: 1985, column: 11, scope: !6342)
!6364 = !DILocation(line: 1988, column: 15, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 1988, column: 15)
!6366 = !DILocation(line: 1988, column: 15, scope: !6342)
!6367 = !DILocation(line: 1989, column: 13, scope: !6365)
!6368 = !DILocation(line: 1992, column: 24, scope: !6355)
!6369 = !DILocation(line: 1992, column: 9, scope: !6355)
!6370 = !DILocation(line: 0, scope: !6355)
!6371 = !DILocation(line: 0, scope: !6342)
!6372 = !DILocation(line: 1992, column: 4, scope: !6355)
!6373 = !DILocation(line: 1994, column: 36, scope: !6353)
!6374 = !DILocation(line: 1994, column: 8, scope: !6353)
!6375 = !DILocation(line: 1995, column: 8, scope: !6353)
!6376 = !DILocation(line: 1996, column: 39, scope: !6353)
!6377 = !DILocation(line: 1996, column: 55, scope: !6353)
!6378 = !DILocation(line: 1997, column: 14, scope: !6353)
!6379 = !DILocation(line: 1996, column: 8, scope: !6353)
!6380 = !DILocation(line: 1998, column: 39, scope: !6353)
!6381 = !DILocation(line: 1998, column: 55, scope: !6353)
!6382 = !DILocation(line: 1998, column: 8, scope: !6353)
!6383 = !DILocation(line: 1992, column: 58, scope: !6354)
!6384 = !DILocation(line: 1992, column: 4, scope: !6354)
!6385 = distinct !{!6385, !6372, !6386}
!6386 = !DILocation(line: 2000, column: 6, scope: !6355)
!6387 = !DILocation(line: 1975, column: 3, scope: !6339)
!6388 = distinct !{!6388, !6356, !6389}
!6389 = !DILocation(line: 2002, column: 5, scope: !6340)
!6390 = !DILocation(line: 2004, column: 3, scope: !6324)
!6391 = !DILocation(line: 2007, column: 8, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 2007, column: 3)
!6393 = !DILocation(line: 0, scope: !6392)
!6394 = !DILocation(line: 2007, column: 15, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2007, column: 3)
!6396 = !DILocation(line: 2007, column: 3, scope: !6392)
!6397 = !DILocation(line: 2009, column: 32, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 2009, column: 11)
!6399 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 2008, column: 5)
!6400 = !DILocation(line: 2009, column: 11, scope: !6398)
!6401 = !DILocation(line: 2009, column: 11, scope: !6399)
!6402 = !DILocation(line: 2011, column: 29, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2010, column: 2)
!6404 = !DILocation(line: 2011, column: 32, scope: !6403)
!6405 = !DILocation(line: 2011, column: 4, scope: !6403)
!6406 = !DILocation(line: 2012, column: 29, scope: !6403)
!6407 = !DILocation(line: 2012, column: 32, scope: !6403)
!6408 = !DILocation(line: 2012, column: 4, scope: !6403)
!6409 = !DILocation(line: 2013, column: 2, scope: !6403)
!6410 = !DILocation(line: 2007, column: 61, scope: !6395)
!6411 = !DILocation(line: 2007, column: 3, scope: !6395)
!6412 = distinct !{!6412, !6396, !6413}
!6413 = !DILocation(line: 2014, column: 5, scope: !6392)
!6414 = !DILocation(line: 2016, column: 3, scope: !6324)
!6415 = !DILocation(line: 2018, column: 3, scope: !6324)
!6416 = !DILocation(line: 2019, column: 3, scope: !6324)
!6417 = !DILocation(line: 2020, column: 1, scope: !6324)
!6418 = distinct !DISubprogram(name: "VEC_lto_out_decl_state_ptr_base_length", scope: !6, file: !6, line: 533, type: !6419, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6431)
!6419 = !DISubroutineType(types: !6420)
!6420 = !{!7, !6421}
!6421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6422, size: 64)
!6422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6423)
!6423 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lto_out_decl_state_ptr_base", file: !6, line: 533, baseType: !6424)
!6424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lto_out_decl_state_ptr_base", file: !6, line: 533, size: 128, elements: !6425)
!6425 = !{!6426, !6427, !6428}
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6424, file: !6, line: 533, baseType: !7, size: 32)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !6424, file: !6, line: 533, baseType: !7, size: 32, offset: 32)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !6424, file: !6, line: 533, baseType: !6429, size: 64, offset: 64)
!6429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6430, size: 64, elements: !909)
!6430 = !DIDerivedType(tag: DW_TAG_typedef, name: "lto_out_decl_state_ptr", file: !6, line: 531, baseType: !737)
!6431 = !{!6432}
!6432 = !DILocalVariable(name: "vec_", arg: 1, scope: !6418, file: !6, line: 533, type: !6421)
!6433 = !DILocation(line: 0, scope: !6418)
!6434 = !DILocation(line: 533, column: 1, scope: !6418)
!6435 = distinct !DISubprogram(name: "lto_output_decl_state_streams", scope: !3, file: !3, line: 2230, type: !6436, scopeLine: 2232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6438)
!6436 = !DISubroutineType(types: !6437)
!6437 = !{null, !732, !737}
!6438 = !{!6439, !6440, !6441}
!6439 = !DILocalVariable(name: "ob", arg: 1, scope: !6435, file: !3, line: 2230, type: !732)
!6440 = !DILocalVariable(name: "state", arg: 2, scope: !6435, file: !3, line: 2231, type: !737)
!6441 = !DILocalVariable(name: "i", scope: !6435, file: !3, line: 2233, type: !725)
!6442 = !DILocation(line: 0, scope: !6435)
!6443 = !DILocation(line: 2235, column: 8, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 2235, column: 3)
!6445 = !DILocation(line: 0, scope: !6444)
!6446 = !DILocation(line: 2235, column: 18, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 2235, column: 3)
!6448 = !DILocation(line: 2235, column: 3, scope: !6444)
!6449 = !DILocation(line: 2236, column: 31, scope: !6447)
!6450 = !DILocation(line: 2236, column: 5, scope: !6447)
!6451 = !DILocation(line: 2235, column: 41, scope: !6447)
!6452 = !DILocation(line: 2235, column: 3, scope: !6447)
!6453 = distinct !{!6453, !6448, !6454}
!6454 = !DILocation(line: 2236, column: 48, scope: !6444)
!6455 = !DILocation(line: 2237, column: 1, scope: !6435)
!6456 = distinct !DISubprogram(name: "VEC_lto_out_decl_state_ptr_base_index", scope: !6, file: !6, line: 533, type: !6457, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6459)
!6457 = !DISubroutineType(types: !6458)
!6458 = !{!6430, !6421, !7}
!6459 = !{!6460, !6461}
!6460 = !DILocalVariable(name: "vec_", arg: 1, scope: !6456, file: !6, line: 533, type: !6421)
!6461 = !DILocalVariable(name: "ix_", arg: 2, scope: !6456, file: !6, line: 533, type: !7)
!6462 = !DILocation(line: 0, scope: !6456)
!6463 = !DILocation(line: 533, column: 1, scope: !6456)
!6464 = distinct !DISubprogram(name: "lto_out_decl_state_written_size", scope: !3, file: !3, line: 2267, type: !6465, scopeLine: 2268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6467)
!6465 = !DISubroutineType(types: !6466)
!6466 = !{!771, !737}
!6467 = !{!6468, !6469, !6470}
!6468 = !DILocalVariable(name: "state", arg: 1, scope: !6464, file: !3, line: 2267, type: !737)
!6469 = !DILocalVariable(name: "i", scope: !6464, file: !3, line: 2269, type: !725)
!6470 = !DILocalVariable(name: "size", scope: !6464, file: !3, line: 2270, type: !771)
!6471 = !DILocation(line: 0, scope: !6464)
!6472 = !DILocation(line: 2273, column: 8, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 2273, column: 3)
!6474 = !DILocation(line: 0, scope: !6473)
!6475 = !DILocation(line: 2273, column: 17, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 2273, column: 3)
!6477 = !DILocation(line: 2273, column: 3, scope: !6473)
!6478 = !DILocation(line: 2275, column: 12, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 2274, column: 5)
!6480 = !DILocation(line: 2276, column: 44, scope: !6479)
!6481 = !DILocation(line: 2276, column: 16, scope: !6479)
!6482 = !DILocation(line: 2277, column: 9, scope: !6479)
!6483 = !DILocation(line: 2276, column: 12, scope: !6479)
!6484 = !DILocation(line: 2273, column: 40, scope: !6476)
!6485 = !DILocation(line: 2273, column: 3, scope: !6476)
!6486 = distinct !{!6486, !6477, !6487}
!6487 = !DILocation(line: 2278, column: 5, scope: !6473)
!6488 = !DILocation(line: 2279, column: 3, scope: !6464)
!6489 = distinct !DISubprogram(name: "lto_output_decl_state_refs", scope: !3, file: !3, line: 2244, type: !6490, scopeLine: 2247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6492)
!6490 = !DISubroutineType(types: !6491)
!6491 = !{null, !732, !2409, !737}
!6492 = !{!6493, !6494, !6495, !6496, !6497, !6498}
!6493 = !DILocalVariable(name: "ob", arg: 1, scope: !6489, file: !3, line: 2244, type: !732)
!6494 = !DILocalVariable(name: "out_stream", arg: 2, scope: !6489, file: !3, line: 2245, type: !2409)
!6495 = !DILocalVariable(name: "state", arg: 3, scope: !6489, file: !3, line: 2246, type: !737)
!6496 = !DILocalVariable(name: "i", scope: !6489, file: !3, line: 2248, type: !7)
!6497 = !DILocalVariable(name: "ref", scope: !6489, file: !3, line: 2249, type: !3322)
!6498 = !DILocalVariable(name: "decl", scope: !6489, file: !3, line: 2250, type: !811)
!6499 = !DILocation(line: 0, scope: !6489)
!6500 = !DILocation(line: 2249, column: 3, scope: !6489)
!6501 = !DILocation(line: 2254, column: 18, scope: !6489)
!6502 = !DILocation(line: 2254, column: 10, scope: !6489)
!6503 = !DILocation(line: 2255, column: 34, scope: !6489)
!6504 = !DILocation(line: 2255, column: 3, scope: !6489)
!6505 = !DILocation(line: 2256, column: 3, scope: !6489)
!6506 = !DILocation(line: 2257, column: 3, scope: !6489)
!6507 = !DILocation(line: 2259, column: 8, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2259, column: 3)
!6509 = !DILocation(line: 0, scope: !6508)
!6510 = !DILocation(line: 2259, column: 18, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 2259, column: 3)
!6512 = !DILocation(line: 2259, column: 3, scope: !6508)
!6513 = !DILocation(line: 2260, column: 47, scope: !6511)
!6514 = !DILocation(line: 2260, column: 5, scope: !6511)
!6515 = !DILocation(line: 2259, column: 41, scope: !6511)
!6516 = !DILocation(line: 2259, column: 3, scope: !6511)
!6517 = distinct !{!6517, !6512, !6518}
!6518 = !DILocation(line: 2260, column: 64, scope: !6508)
!6519 = !DILocation(line: 2261, column: 1, scope: !6489)
!6520 = distinct !DISubprogram(name: "produce_symtab", scope: !3, file: !3, line: 2421, type: !6521, scopeLine: 2422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6523)
!6521 = !DISubroutineType(types: !6522)
!6522 = !{null, !2431}
!6523 = !{!6524, !6525, !6526}
!6524 = !DILocalVariable(name: "cache", arg: 1, scope: !6520, file: !3, line: 2421, type: !2431)
!6525 = !DILocalVariable(name: "section_name", scope: !6520, file: !3, line: 2423, type: !727)
!6526 = !DILocalVariable(name: "seen", scope: !6520, file: !3, line: 2424, type: !1692)
!6527 = !DILocation(line: 0, scope: !6520)
!6528 = !DILocation(line: 2423, column: 24, scope: !6520)
!6529 = !DILocation(line: 2426, column: 3, scope: !6520)
!6530 = !DILocation(line: 2427, column: 3, scope: !6520)
!6531 = !DILocation(line: 2429, column: 10, scope: !6520)
!6532 = !DILocation(line: 2430, column: 3, scope: !6520)
!6533 = !DILocation(line: 2431, column: 3, scope: !6520)
!6534 = !DILocation(line: 2432, column: 3, scope: !6520)
!6535 = !DILocation(line: 2434, column: 3, scope: !6520)
!6536 = !DILocation(line: 2435, column: 1, scope: !6520)
!6537 = distinct !DISubprogram(name: "VEC_lto_out_decl_state_ptr_heap_free", scope: !6, file: !6, line: 534, type: !6538, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6546)
!6538 = !DISubroutineType(types: !6539)
!6539 = !{null, !6540}
!6540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6541, size: 64)
!6541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6542, size: 64)
!6542 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lto_out_decl_state_ptr_heap", file: !6, line: 534, baseType: !6543)
!6543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lto_out_decl_state_ptr_heap", file: !6, line: 534, size: 128, elements: !6544)
!6544 = !{!6545}
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6543, file: !6, line: 534, baseType: !6423, size: 128)
!6546 = !{!6547}
!6547 = !DILocalVariable(name: "vec_", arg: 1, scope: !6537, file: !6, line: 534, type: !6540)
!6548 = !DILocation(line: 0, scope: !6537)
!6549 = !DILocation(line: 534, column: 1, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6537, file: !6, line: 534, column: 1)
!6551 = !DILocation(line: 534, column: 1, scope: !6537)
!6552 = distinct !DISubprogram(name: "VEC_alias_pair_base_iterate", scope: !149, file: !149, line: 197, type: !6553, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6564)
!6553 = !DISubroutineType(types: !6554)
!6554 = !{!725, !6555, !7, !6563}
!6555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6556, size: 64)
!6556 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_alias_pair_base", file: !149, line: 197, baseType: !6557)
!6557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_alias_pair_base", file: !149, line: 197, size: 192, elements: !6558)
!6558 = !{!6559, !6560, !6561}
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6557, file: !149, line: 197, baseType: !7, size: 32)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !6557, file: !149, line: 197, baseType: !7, size: 32, offset: 32)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !6557, file: !149, line: 197, baseType: !6562, size: 128, offset: 64)
!6562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6330, size: 128, elements: !909)
!6563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6329, size: 64)
!6564 = !{!6565, !6566, !6567}
!6565 = !DILocalVariable(name: "vec_", arg: 1, scope: !6552, file: !149, line: 197, type: !6555)
!6566 = !DILocalVariable(name: "ix_", arg: 2, scope: !6552, file: !149, line: 197, type: !7)
!6567 = !DILocalVariable(name: "ptr", arg: 3, scope: !6552, file: !149, line: 197, type: !6563)
!6568 = !DILocation(line: 0, scope: !6552)
!6569 = !DILocation(line: 197, column: 1, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6552, file: !149, line: 197, column: 1)
!6571 = !DILocation(line: 197, column: 1, scope: !6552)
!6572 = !DILocation(line: 197, column: 1, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6570, file: !149, line: 197, column: 1)
!6574 = !DILocation(line: 197, column: 1, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6570, file: !149, line: 197, column: 1)
!6576 = !DILocation(line: 0, scope: !6570)
!6577 = distinct !DISubprogram(name: "output_alias_pair_p", scope: !3, file: !3, line: 1932, type: !6578, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6580)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{!724, !6329, !3391}
!6580 = !{!6581, !6582, !6583, !6584}
!6581 = !DILocalVariable(name: "p", arg: 1, scope: !6577, file: !3, line: 1932, type: !6329)
!6582 = !DILocalVariable(name: "set", arg: 2, scope: !6577, file: !3, line: 1932, type: !3391)
!6583 = !DILocalVariable(name: "csi", scope: !6577, file: !3, line: 1934, type: !3397)
!6584 = !DILocalVariable(name: "target_node", scope: !6577, file: !3, line: 1935, type: !2167)
!6585 = !DILocation(line: 0, scope: !6577)
!6586 = !DILocation(line: 1934, column: 3, scope: !6577)
!6587 = !DILocation(line: 1940, column: 7, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 1940, column: 7)
!6589 = !DILocation(line: 1940, column: 27, scope: !6588)
!6590 = !DILocation(line: 1940, column: 7, scope: !6577)
!6591 = !DILocation(line: 1944, column: 3, scope: !6577)
!6592 = !DILocation(line: 1945, column: 41, scope: !6577)
!6593 = !DILocation(line: 1945, column: 17, scope: !6577)
!6594 = !DILocation(line: 1946, column: 9, scope: !6577)
!6595 = !DILocation(line: 1947, column: 12, scope: !6577)
!6596 = !DILocation(line: 1947, column: 11, scope: !6577)
!6597 = !DILocation(line: 1947, column: 10, scope: !6577)
!6598 = !DILocation(line: 1947, column: 3, scope: !6577)
!6599 = !DILocation(line: 1948, column: 1, scope: !6577)
!6600 = distinct !DISubprogram(name: "write_global_stream", scope: !3, file: !3, line: 2167, type: !6601, scopeLine: 2169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6603)
!6601 = !DISubroutineType(types: !6602)
!6602 = !{null, !732, !5056}
!6603 = !{!6604, !6605, !6606, !6607, !6608}
!6604 = !DILocalVariable(name: "ob", arg: 1, scope: !6600, file: !3, line: 2167, type: !732)
!6605 = !DILocalVariable(name: "encoder", arg: 2, scope: !6600, file: !3, line: 2168, type: !5056)
!6606 = !DILocalVariable(name: "t", scope: !6600, file: !3, line: 2170, type: !811)
!6607 = !DILocalVariable(name: "index", scope: !6600, file: !3, line: 2171, type: !771)
!6608 = !DILocalVariable(name: "size", scope: !6600, file: !3, line: 2172, type: !6609)
!6609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !771)
!6610 = !DILocation(line: 0, scope: !6600)
!6611 = !DILocation(line: 2172, column: 23, scope: !6600)
!6612 = !DILocation(line: 0, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2177, column: 11)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 2175, column: 5)
!6615 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 2174, column: 3)
!6616 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 2174, column: 3)
!6617 = !DILocation(line: 2174, column: 8, scope: !6616)
!6618 = !DILocation(line: 0, scope: !6616)
!6619 = !DILocation(line: 2174, column: 25, scope: !6615)
!6620 = !DILocation(line: 2174, column: 3, scope: !6616)
!6621 = !DILocation(line: 2176, column: 51, scope: !6614)
!6622 = !DILocation(line: 2176, column: 11, scope: !6614)
!6623 = !DILocation(line: 2177, column: 43, scope: !6613)
!6624 = !DILocation(line: 2177, column: 12, scope: !6613)
!6625 = !DILocation(line: 2177, column: 11, scope: !6614)
!6626 = !DILocation(line: 2178, column: 2, scope: !6613)
!6627 = !DILocation(line: 2180, column: 11, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2180, column: 11)
!6629 = !DILocation(line: 2180, column: 11, scope: !6614)
!6630 = !DILocation(line: 2188, column: 8, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 2188, column: 8)
!6632 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 2181, column: 2)
!6633 = !DILocation(line: 2188, column: 22, scope: !6631)
!6634 = !DILocation(line: 2189, column: 8, scope: !6631)
!6635 = !DILocation(line: 2189, column: 11, scope: !6631)
!6636 = !DILocation(line: 2190, column: 8, scope: !6631)
!6637 = !DILocation(line: 2190, column: 12, scope: !6631)
!6638 = !DILocation(line: 2188, column: 8, scope: !6632)
!6639 = !DILocation(line: 2191, column: 27, scope: !6631)
!6640 = !DILocation(line: 2191, column: 6, scope: !6631)
!6641 = !DILocation(line: 2174, column: 38, scope: !6615)
!6642 = !DILocation(line: 2174, column: 3, scope: !6615)
!6643 = distinct !{!6643, !6620, !6644}
!6644 = !DILocation(line: 2193, column: 5, scope: !6616)
!6645 = !DILocation(line: 2194, column: 1, scope: !6600)
!6646 = distinct !DISubprogram(name: "lto_tree_ref_encoder_get_tree", scope: !6, file: !6, line: 993, type: !6647, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6649)
!6647 = !DISubroutineType(types: !6648)
!6648 = !{!811, !5056, !7}
!6649 = !{!6650, !6651}
!6650 = !DILocalVariable(name: "encoder", arg: 1, scope: !6646, file: !6, line: 993, type: !5056)
!6651 = !DILocalVariable(name: "idx", arg: 2, scope: !6646, file: !6, line: 994, type: !7)
!6652 = !DILocation(line: 0, scope: !6646)
!6653 = !DILocation(line: 996, column: 10, scope: !6646)
!6654 = !DILocation(line: 996, column: 3, scope: !6646)
!6655 = distinct !DISubprogram(name: "write_global_references", scope: !3, file: !3, line: 2203, type: !6656, scopeLine: 2206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6658)
!6656 = !DISubroutineType(types: !6657)
!6657 = !{null, !732, !2409, !5056}
!6658 = !{!6659, !6660, !6661, !6662, !6663, !6664, !6666}
!6659 = !DILocalVariable(name: "ob", arg: 1, scope: !6655, file: !3, line: 2203, type: !732)
!6660 = !DILocalVariable(name: "ref_stream", arg: 2, scope: !6655, file: !3, line: 2204, type: !2409)
!6661 = !DILocalVariable(name: "encoder", arg: 3, scope: !6655, file: !3, line: 2205, type: !5056)
!6662 = !DILocalVariable(name: "t", scope: !6655, file: !3, line: 2207, type: !811)
!6663 = !DILocalVariable(name: "index", scope: !6655, file: !3, line: 2208, type: !3322)
!6664 = !DILocalVariable(name: "size", scope: !6655, file: !3, line: 2209, type: !6665)
!6665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3322)
!6666 = !DILocalVariable(name: "slot_num", scope: !6667, file: !3, line: 2216, type: !3322)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 2215, column: 5)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 2214, column: 3)
!6669 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2214, column: 3)
!6670 = !DILocation(line: 0, scope: !6655)
!6671 = !DILocation(line: 2209, column: 3, scope: !6655)
!6672 = !DILocation(line: 2209, column: 24, scope: !6655)
!6673 = !DILocation(line: 2209, column: 17, scope: !6655)
!6674 = !DILocation(line: 2212, column: 3, scope: !6655)
!6675 = !DILocation(line: 0, scope: !6667)
!6676 = !DILocation(line: 2214, column: 8, scope: !6669)
!6677 = !DILocation(line: 0, scope: !6669)
!6678 = !DILocation(line: 2214, column: 27, scope: !6668)
!6679 = !DILocation(line: 2214, column: 25, scope: !6668)
!6680 = !DILocation(line: 2214, column: 3, scope: !6669)
!6681 = !DILocation(line: 2216, column: 7, scope: !6667)
!6682 = !DILocation(line: 2218, column: 11, scope: !6667)
!6683 = !DILocation(line: 2219, column: 38, scope: !6667)
!6684 = !DILocation(line: 2219, column: 7, scope: !6667)
!6685 = !DILocation(line: 2220, column: 7, scope: !6667)
!6686 = !DILocation(line: 2221, column: 7, scope: !6667)
!6687 = !DILocation(line: 2222, column: 5, scope: !6668)
!6688 = !DILocation(line: 2214, column: 38, scope: !6668)
!6689 = !DILocation(line: 2214, column: 3, scope: !6668)
!6690 = distinct !{!6690, !6680, !6691}
!6691 = !DILocation(line: 2222, column: 5, scope: !6669)
!6692 = !DILocation(line: 2223, column: 1, scope: !6655)
!6693 = distinct !DISubprogram(name: "write_symbols_of_kind", scope: !3, file: !3, line: 2393, type: !6694, scopeLine: 2395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6697)
!6694 = !DISubroutineType(types: !6695)
!6695 = !{null, !6696, !2431, !1692}
!6696 = !DIDerivedType(tag: DW_TAG_typedef, name: "lto_decl_stream_e_t", file: !6, line: 282, baseType: !698)
!6697 = !{!6698, !6699, !6700, !6701, !6702, !6703, !6704}
!6698 = !DILocalVariable(name: "kind", arg: 1, scope: !6693, file: !3, line: 2393, type: !6696)
!6699 = !DILocalVariable(name: "cache", arg: 2, scope: !6693, file: !3, line: 2394, type: !2431)
!6700 = !DILocalVariable(name: "seen", arg: 3, scope: !6693, file: !3, line: 2394, type: !1692)
!6701 = !DILocalVariable(name: "out_state", scope: !6693, file: !3, line: 2396, type: !737)
!6702 = !DILocalVariable(name: "stream", scope: !6693, file: !3, line: 2397, type: !2410)
!6703 = !DILocalVariable(name: "num_fns", scope: !6693, file: !3, line: 2398, type: !7)
!6704 = !DILocalVariable(name: "idx", scope: !6693, file: !3, line: 2400, type: !7)
!6705 = !DILocation(line: 0, scope: !6693)
!6706 = !DILocation(line: 2397, column: 3, scope: !6693)
!6707 = !DILocation(line: 2399, column: 5, scope: !6693)
!6708 = !DILocation(line: 2402, column: 3, scope: !6693)
!6709 = !DILocation(line: 2403, column: 15, scope: !6693)
!6710 = !DILocation(line: 2404, column: 37, scope: !6693)
!6711 = !DILocation(line: 2404, column: 62, scope: !6693)
!6712 = !DILocation(line: 2404, column: 3, scope: !6693)
!6713 = !DILocation(line: 2406, column: 8, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 2406, column: 3)
!6715 = !DILocation(line: 0, scope: !6714)
!6716 = !DILocation(line: 2406, column: 21, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6714, file: !3, line: 2406, column: 3)
!6718 = !DILocation(line: 2406, column: 3, scope: !6714)
!6719 = !DILocation(line: 2409, column: 2, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 2407, column: 5)
!6721 = !DILocation(line: 2410, column: 66, scope: !6720)
!6722 = !DILocation(line: 2410, column: 7, scope: !6720)
!6723 = !DILocation(line: 2406, column: 35, scope: !6717)
!6724 = !DILocation(line: 2406, column: 3, scope: !6717)
!6725 = distinct !{!6725, !6718, !6726}
!6726 = !DILocation(line: 2411, column: 5, scope: !6714)
!6727 = !DILocation(line: 2413, column: 3, scope: !6693)
!6728 = !DILocation(line: 2414, column: 1, scope: !6693)
!6729 = distinct !DISubprogram(name: "write_symbol_vec", scope: !3, file: !3, line: 2289, type: !6730, scopeLine: 2292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6732)
!6730 = !DISubroutineType(types: !6731)
!6731 = !{null, !2431, !2409, !799, !1692}
!6732 = !{!6733, !6734, !6735, !6736, !6737, !6738, !6739, !6743, !6744, !6745, !6746, !6747}
!6733 = !DILocalVariable(name: "cache", arg: 1, scope: !6729, file: !3, line: 2289, type: !2431)
!6734 = !DILocalVariable(name: "stream", arg: 2, scope: !6729, file: !3, line: 2290, type: !2409)
!6735 = !DILocalVariable(name: "v", arg: 3, scope: !6729, file: !3, line: 2291, type: !799)
!6736 = !DILocalVariable(name: "seen", arg: 4, scope: !6729, file: !3, line: 2291, type: !1692)
!6737 = !DILocalVariable(name: "t", scope: !6729, file: !3, line: 2293, type: !811)
!6738 = !DILocalVariable(name: "index", scope: !6729, file: !3, line: 2294, type: !725)
!6739 = !DILocalVariable(name: "name", scope: !6740, file: !3, line: 2298, type: !730)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 2297, column: 5)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 2296, column: 3)
!6742 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 2296, column: 3)
!6743 = !DILocalVariable(name: "kind", scope: !6740, file: !3, line: 2299, type: !708)
!6744 = !DILocalVariable(name: "visibility", scope: !6740, file: !3, line: 2300, type: !716)
!6745 = !DILocalVariable(name: "slot_num", scope: !6740, file: !3, line: 2301, type: !725)
!6746 = !DILocalVariable(name: "size", scope: !6740, file: !3, line: 2302, type: !2462)
!6747 = !DILocalVariable(name: "comdat", scope: !6740, file: !3, line: 2303, type: !730)
!6748 = !DILocation(line: 0, scope: !6729)
!6749 = !DILocation(line: 2293, column: 3, scope: !6729)
!6750 = !DILocation(line: 0, scope: !6741)
!6751 = !DILocation(line: 0, scope: !6740)
!6752 = !DILocation(line: 0, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 2307, column: 11)
!6754 = !DILocation(line: 2296, column: 8, scope: !6742)
!6755 = !DILocation(line: 0, scope: !6742)
!6756 = !DILocation(line: 2296, column: 19, scope: !6741)
!6757 = !DILocation(line: 2296, column: 3, scope: !6742)
!6758 = !DILocation(line: 2299, column: 7, scope: !6740)
!6759 = !DILocation(line: 2300, column: 7, scope: !6740)
!6760 = !DILocation(line: 2301, column: 7, scope: !6740)
!6761 = !DILocation(line: 2302, column: 7, scope: !6740)
!6762 = !DILocation(line: 2307, column: 12, scope: !6753)
!6763 = !DILocation(line: 2308, column: 4, scope: !6753)
!6764 = !DILocation(line: 2308, column: 7, scope: !6753)
!6765 = !DILocation(line: 2309, column: 4, scope: !6753)
!6766 = !DILocation(line: 2309, column: 7, scope: !6753)
!6767 = !DILocation(line: 2310, column: 4, scope: !6753)
!6768 = !DILocation(line: 2310, column: 7, scope: !6753)
!6769 = !DILocation(line: 2310, column: 21, scope: !6753)
!6770 = !DILocation(line: 2307, column: 11, scope: !6740)
!6771 = !DILocation(line: 2313, column: 7, scope: !6740)
!6772 = !DILocation(line: 2316, column: 14, scope: !6740)
!6773 = !DILocation(line: 2321, column: 11, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 2321, column: 11)
!6775 = !DILocation(line: 2321, column: 19, scope: !6774)
!6776 = !DILocation(line: 2322, column: 10, scope: !6774)
!6777 = !DILocation(line: 2321, column: 11, scope: !6740)
!6778 = !DILocation(line: 2324, column: 41, scope: !6740)
!6779 = !DILocation(line: 2324, column: 7, scope: !6740)
!6780 = !DILocation(line: 2325, column: 7, scope: !6740)
!6781 = !DILocation(line: 2328, column: 31, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 2328, column: 11)
!6783 = !DILocation(line: 2328, column: 11, scope: !6782)
!6784 = !DILocation(line: 2328, column: 11, scope: !6740)
!6785 = !DILocation(line: 2331, column: 31, scope: !6782)
!6786 = !DILocation(line: 2331, column: 9, scope: !6782)
!6787 = !DILocation(line: 2333, column: 11, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 2333, column: 11)
!6789 = !DILocation(line: 0, scope: !6788)
!6790 = !DILocation(line: 2333, column: 11, scope: !6740)
!6791 = !DILocation(line: 2335, column: 8, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 2334, column: 2)
!6793 = !DILocation(line: 2336, column: 11, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 2335, column: 8)
!6795 = !DILocation(line: 2336, column: 6, scope: !6794)
!6796 = !DILocation(line: 2338, column: 11, scope: !6794)
!6797 = !DILocation(line: 2342, column: 8, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 2341, column: 2)
!6799 = !DILocation(line: 2343, column: 11, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 2342, column: 8)
!6801 = !DILocation(line: 2343, column: 6, scope: !6800)
!6802 = !DILocation(line: 2344, column: 13, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6800, file: !3, line: 2344, column: 13)
!6804 = !DILocation(line: 2344, column: 13, scope: !6800)
!6805 = !DILocation(line: 2345, column: 11, scope: !6803)
!6806 = !DILocation(line: 2345, column: 6, scope: !6803)
!6807 = !DILocation(line: 2347, column: 11, scope: !6803)
!6808 = !DILocation(line: 2350, column: 15, scope: !6740)
!6809 = !DILocation(line: 2350, column: 7, scope: !6740)
!6810 = !DILocation(line: 2353, column: 15, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 2351, column: 2)
!6812 = !DILocation(line: 2354, column: 4, scope: !6811)
!6813 = !DILocation(line: 2356, column: 15, scope: !6811)
!6814 = !DILocation(line: 2357, column: 4, scope: !6811)
!6815 = !DILocation(line: 2359, column: 15, scope: !6811)
!6816 = !DILocation(line: 2360, column: 4, scope: !6811)
!6817 = !DILocation(line: 2362, column: 15, scope: !6811)
!6818 = !DILocation(line: 2363, column: 4, scope: !6811)
!6819 = !DILocation(line: 2366, column: 16, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 2366, column: 11)
!6821 = !DILocation(line: 2367, column: 4, scope: !6820)
!6822 = !DILocation(line: 2367, column: 7, scope: !6820)
!6823 = !DILocation(line: 2368, column: 4, scope: !6820)
!6824 = !DILocation(line: 2368, column: 7, scope: !6820)
!6825 = !DILocation(line: 2368, column: 33, scope: !6820)
!6826 = !DILocation(line: 2366, column: 11, scope: !6740)
!6827 = !DILocation(line: 2369, column: 22, scope: !6820)
!6828 = !DILocation(line: 2369, column: 57, scope: !6820)
!6829 = !DILocation(line: 2370, column: 6, scope: !6820)
!6830 = !DILocation(line: 2370, column: 4, scope: !6820)
!6831 = !DILocation(line: 2369, column: 2, scope: !6820)
!6832 = !DILocation(line: 0, scope: !6820)
!6833 = !DILocation(line: 2374, column: 11, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 2374, column: 11)
!6835 = !DILocation(line: 2374, column: 11, scope: !6740)
!6836 = !DILocation(line: 2375, column: 11, scope: !6834)
!6837 = !DILocation(line: 2375, column: 2, scope: !6834)
!6838 = !DILocation(line: 0, scope: !6834)
!6839 = !DILocation(line: 2379, column: 45, scope: !6740)
!6840 = !DILocation(line: 2379, column: 59, scope: !6740)
!6841 = !DILocation(line: 2379, column: 7, scope: !6740)
!6842 = !DILocation(line: 2380, column: 47, scope: !6740)
!6843 = !DILocation(line: 2380, column: 63, scope: !6740)
!6844 = !DILocation(line: 2380, column: 7, scope: !6740)
!6845 = !DILocation(line: 2381, column: 7, scope: !6740)
!6846 = !DILocation(line: 2382, column: 7, scope: !6740)
!6847 = !DILocation(line: 2383, column: 7, scope: !6740)
!6848 = !DILocation(line: 2384, column: 7, scope: !6740)
!6849 = !DILocation(line: 2385, column: 5, scope: !6741)
!6850 = !DILocation(line: 2296, column: 56, scope: !6741)
!6851 = !DILocation(line: 2296, column: 3, scope: !6741)
!6852 = distinct !{!6852, !6757, !6853}
!6853 = !DILocation(line: 2385, column: 5, scope: !6742)
!6854 = !DILocation(line: 2386, column: 1, scope: !6729)
