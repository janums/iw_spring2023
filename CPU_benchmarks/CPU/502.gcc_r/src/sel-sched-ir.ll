; ModuleID = 'sel-sched-ir.bc'
source_filename = "sel-sched-ir.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.VEC_sel_global_bb_info_def_heap = type { %struct.VEC_sel_global_bb_info_def_base }
%struct.VEC_sel_global_bb_info_def_base = type { i32, i32, [1 x %struct.sel_global_bb_info_def] }
%struct.sel_global_bb_info_def = type { %struct.bitmap_head_def*, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.VEC_sel_region_bb_info_def_heap = type { %struct.VEC_sel_region_bb_info_def_base }
%struct.VEC_sel_region_bb_info_def_base = type { i32, i32, [1 x %struct.sel_region_bb_info_def] }
%struct.sel_region_bb_info_def = type { %struct.rtx_def*, %struct._list_node*, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct._list_node = type { %struct._list_node*, %union.anon.0 }
%union.anon.0 = type { %struct._fence }
%struct._fence = type { %struct.rtx_def*, i8*, i32, i32, %struct._list_node*, %struct.deps*, i8*, %struct.VEC_rtx_gc*, i32*, i32, %struct.rtx_def*, i32, %struct.rtx_def*, i8 }
%struct.deps = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, %struct.deps_reg*, %struct.bitmap_head_def, %struct.bitmap_head_def, i32, i8 }
%struct.deps_reg = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type opaque
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.spec_info_def = type { i32, %struct._IO_FILE*, i32, i32, i32 }
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.sched_deps_info_def = type { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)*, void (%struct.rtx_def*)*, void ()*, void (%struct.rtx_def*)*, void ()*, void (%struct.rtx_def*)*, void ()*, void (i32)*, void (i32)*, void (i32)*, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, i8 }
%struct.anon = type { %struct.bitmap_head_def**, i32, i32, %struct.bitmap_head_def**, i32, i32, i32 }
%struct.anon.1 = type { %struct.rtx_def**, i32, i32 }
%struct.VEC_sel_insn_data_def_heap = type { %struct.VEC_sel_insn_data_def_base }
%struct.VEC_sel_insn_data_def_base = type { i32, i32, [1 x %struct._sel_insn_data] }
%struct._sel_insn_data = type { %struct._expr, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.htab*, %struct.deps, %struct.rtx_def*, i32, i32, i32, i8 }
%struct._expr = type { %struct.vinsn_def*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.VEC_expr_history_def_heap*, i8, i8 }
%struct.vinsn_def = type { %struct.rtx_def*, %struct.idata_def, i32, i32, i32, i32, i8 }
%struct.idata_def = type { i32, %struct.rtx_def*, %struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_expr_history_def_heap = type { %struct.VEC_expr_history_def_base }
%struct.VEC_expr_history_def_base = type { i32, i32, [1 x %struct.expr_history_def_1] }
%struct.expr_history_def_1 = type { i32, %struct.vinsn_def*, %struct.vinsn_def*, i32, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.VEC_haifa_deps_insn_data_def_heap = type { %struct.VEC_haifa_deps_insn_data_def_base }
%struct.VEC_haifa_deps_insn_data_def_base = type { i32, i32, [1 x %struct._haifa_deps_insn_data] }
%struct._haifa_deps_insn_data = type { i32, i32, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, i8 }
%struct._deps_list = type { %struct._dep_link*, i32 }
%struct._dep_link = type { %struct._dep_node*, %struct._dep_link*, %struct._dep_link** }
%struct._dep_node = type { %struct._dep_link, %struct._dep, %struct._dep_link }
%struct.sched_scan_info_def = type { void ()*, void (%struct.basic_block_def*)*, void ()*, void (%struct.rtx_def*)* }
%struct.anon.2 = type { %struct.deps*, i32, %struct.rtx_def*, %struct.vinsn_def*, [3 x i32] }
%struct.anon.4 = type { %struct.succs_info*, i32, i32, i32 }
%struct.succs_info = type { i16, %struct.VEC_rtx_heap*, %struct.VEC_int_heap*, %struct.VEC_rtx_heap*, i32, i32, i32 }
%struct.VEC_rtx_heap = type { %struct.VEC_rtx_base }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.VEC_basic_block_heap = type { %struct.VEC_basic_block_base }
%struct.cfg_hooks = type { i8*, i32 ()*, void (%struct.basic_block_def*, %struct._IO_FILE*, i32, i32)*, %struct.basic_block_def* (i8*, i8*, %struct.basic_block_def*)*, %struct.edge_def* (%struct.edge_def*, %struct.basic_block_def*)*, %struct.basic_block_def* (%struct.edge_def*, %struct.basic_block_def*)*, i8 (%struct.edge_def*)*, void (%struct.basic_block_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, i8*)*, i8 (%struct.basic_block_def*, %struct.basic_block_def*)*, i8 (%struct.basic_block_def*, %struct.basic_block_def*)*, void (%struct.basic_block_def*, %struct.basic_block_def*)*, void (%struct.edge_def*, i32, i32)*, i8 (%struct.basic_block_def*, i32)*, i8 (%struct.basic_block_def*)*, %struct.basic_block_def* (%struct.basic_block_def*)*, %struct.basic_block_def* (%struct.edge_def*)*, void (%struct.edge_def*)*, void (%struct.edge_def*)*, i8 (%struct.basic_block_def*)*, i8 (%struct.basic_block_def*)*, i32 (%struct.simple_bitmap_def*)*, void (%struct.edge_def*)*, void (%struct.edge_def*)*, i8 (%struct.loop*, %struct.edge_def*, i32, %struct.simple_bitmap_def*, %struct.edge_def*, %struct.VEC_edge_heap**, i32)*, void (%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, i8*)*, void (%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.edge_def*)*, void (%struct.basic_block_def*, %struct.edge_def**, %struct.edge_def**)*, void (%struct.edge_def*)* }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.VEC_edge_heap = type { %struct.VEC_edge_base }
%struct.common_sched_info_def = type { void (i32, i32, i32)*, void (%struct.basic_block_def*, %struct.basic_block_def*)*, i32 (%struct.basic_block_def*)*, i32 (%struct.rtx_def*)*, i32 }
%struct.haifa_sched_info = type { void ()*, i32 (%struct.rtx_def*)*, i32 ()*, i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8* (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8 (%struct.rtx_def*)*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, i32, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, i32 }
%struct.VEC_loop_p_heap = type { %struct.VEC_loop_p_base }
%struct.VEC_haifa_insn_data_def_heap = type { %struct.VEC_haifa_insn_data_def_base }
%struct.VEC_haifa_insn_data_def_base = type { i32, i32, [1 x %struct._haifa_insn_data] }
%struct._haifa_insn_data = type { i32, i32, i32, i32, i32, i16, i8, i8, i32, i32, i32, %struct.basic_block_def*, %struct.rtx_def*, %struct.reg_pressure_data*, i32*, %struct.reg_use_data*, %struct.reg_set_data*, i32 }
%struct.reg_pressure_data = type { i32 }
%struct.reg_use_data = type { i32, %struct.rtx_def*, %struct.reg_use_data*, %struct.reg_use_data* }
%struct.reg_set_data = type { i32, %struct.rtx_def*, %struct.reg_set_data* }
%struct.region = type { i32, i32, i8 }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct._list_iterator = type { %struct._list_node**, i8, i8 }
%struct.flist_tail_def = type { %struct._list_node*, %struct._list_node** }
%struct.succ_iterator = type { i8, %struct.edge_def*, %struct.edge_def*, %struct.edge_iterator, %struct.basic_block_def*, i16, i16, i32, %struct.VEC_edge_heap* }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.df_lr_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.loop_iterator = type { %struct.VEC_int_heap*, i32 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@sel_global_bb_info = dso_local global %struct.VEC_sel_global_bb_info_def_heap* null, align 8, !dbg !0
@sel_region_bb_info = dso_local global %struct.VEC_sel_region_bb_info_def_heap* null, align 8, !dbg !2123
@nop_pattern = dso_local local_unnamed_addr global %struct.rtx_def* null, align 8, !dbg !2125
@exit_insn = dso_local local_unnamed_addr global %struct.rtx_def* null, align 8, !dbg !2127
@preheader_removed = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2129
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@advance_deps_context_sched_deps_info = internal global %struct.sched_deps_info_def { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)* null, void (%struct.rtx_def*)* null, void ()* null, void (%struct.rtx_def*)* null, void ()* null, void (%struct.rtx_def*)* null, void ()* null, void (i32)* @haifa_note_reg_set, void (i32)* @haifa_note_reg_clobber, void (i32)* @haifa_note_reg_use, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* null, void (%struct.rtx_def*, i32)* null, i8 0 }, align 8, !dbg !2382
@sched_deps_info = external dso_local local_unnamed_addr global %struct.sched_deps_info_def*, align 8
@flag_sel_sched_pipelining_outer_loops = external dso_local local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [15 x i8] c"sel-sched-ir.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@fences = external dso_local global %struct._list_node*, align 8
@issue_rate = external dso_local local_unnamed_addr global i32, align 4
@regset_pool = internal unnamed_addr global %struct.anon zeroinitializer, align 8, !dbg !2419
@reg_obstack = external dso_local global %struct.bitmap_obstack, align 8
@nop_pool = internal unnamed_addr global %struct.anon.1 zeroinitializer, align 8, !dbg !2430
@s_i_d = dso_local global %struct.VEC_sel_insn_data_def_heap* null, align 8, !dbg !2131
@sched_luids = external dso_local local_unnamed_addr global %struct.VEC_int_heap*, align 8
@nop_vinsn = internal unnamed_addr global %struct.vinsn_def* null, align 8, !dbg !2437
@init_insn_force_unique_p = internal unnamed_addr global i1 false, align 1, !dbg !2531
@h_d_i_d = external dso_local local_unnamed_addr global %struct.VEC_haifa_deps_insn_data_def_heap*, align 8
@__const.sel_init_global_and_expr.ssi = private unnamed_addr constant %struct.sched_scan_info_def { void ()* null, void (%struct.basic_block_def*)* @init_global_and_expr_for_bb, void ()* @extend_insn_data, void (%struct.rtx_def*)* @init_global_and_expr_for_insn }, align 8
@current_nr_blocks = external dso_local local_unnamed_addr global i32, align 4
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@rgn_bb_table = external dso_local local_unnamed_addr global i32*, align 8
@ebb_head = external dso_local local_unnamed_addr global i32*, align 8
@__const.sel_finish_global_and_expr.ssi = private unnamed_addr constant %struct.sched_scan_info_def { void ()* null, void (%struct.basic_block_def*)* @finish_global_and_expr_for_bb, void ()* null, void (%struct.rtx_def*)* @finish_global_and_expr_insn }, align 8
@has_dependence_data = internal global %struct.anon.2 zeroinitializer, align 8, !dbg !2350
@tick_check_sched_deps_info = internal global %struct.sched_deps_info_def { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)* null, void (%struct.rtx_def*)* null, void ()* null, void (%struct.rtx_def*)* null, void ()* null, void (%struct.rtx_def*)* null, void ()* null, void (i32)* @haifa_note_reg_set, void (i32)* @haifa_note_reg_clobber, void (i32)* @haifa_note_reg_use, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* @tick_check_note_mem_dep, void (%struct.rtx_def*, i32)* @tick_check_note_dep, i8 0 }, align 8, !dbg !2451
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@global_level = external dso_local local_unnamed_addr global i32, align 4
@containing_rgn = external dso_local local_unnamed_addr global i32*, align 8
@__const.sel_init_bbs.ssi = private unnamed_addr constant %struct.sched_scan_info_def { void ()* @extend_bb_info, void (%struct.basic_block_def*)* @init_bb, void ()* null, void (%struct.rtx_def*)* null }, align 8
@current_loop_nest = common dso_local local_unnamed_addr global %struct.loop* null, align 8, !dbg !2179
@succs_info_pool = internal unnamed_addr global %struct.anon.4 zeroinitializer, align 8, !dbg !2370
@block_to_bb = external dso_local local_unnamed_addr global i32*, align 8
@forced_ebb_heads = external dso_local local_unnamed_addr global %struct.bitmap_head_def*, align 8
@bb_note_pool = internal global %struct.VEC_rtx_heap* null, align 8, !dbg !2347
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.2 = private unnamed_addr constant [16 x i8] c"sel-sched-lists\00", align 1
@sched_lists_pool = common dso_local local_unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !2133
@last_added_blocks = internal global %struct.VEC_basic_block_heap* null, align 8, !dbg !2463
@sched_split_block = external dso_local local_unnamed_addr global %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, align 8
@pipelining_p = external dso_local local_unnamed_addr global i8, align 1
@orig_cfg_hooks = internal global %struct.cfg_hooks zeroinitializer, align 8, !dbg !2181
@sel_cfg_hooks = internal global %struct.cfg_hooks zeroinitializer, align 8, !dbg !2378
@sched_init_only_bb = external dso_local local_unnamed_addr global void (%struct.basic_block_def*, %struct.basic_block_def*)*, align 8
@sched_create_empty_bb = external dso_local local_unnamed_addr global %struct.basic_block_def* (%struct.basic_block_def*)*, align 8
@spec_info = external dso_local local_unnamed_addr global %struct.spec_info_def*, align 8
@sel_common_sched_info = internal global %struct.common_sched_info_def zeroinitializer, align 8, !dbg !2158
@common_sched_info = external dso_local local_unnamed_addr global %struct.common_sched_info_def*, align 8
@sched_sel_haifa_sched_info = internal global %struct.haifa_sched_info { void ()* null, i32 (%struct.rtx_def*)* null, i32 ()* null, i32 (%struct.rtx_def*, i32)* null, i32 (%struct.rtx_def*, %struct.rtx_def*)* null, i8* (%struct.rtx_def*, i32)* @sel_print_insn, i32 (%struct.rtx_def*, %struct.rtx_def*)* @contributes_to_priority, i8 (%struct.rtx_def*)* null, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null, i8 0, i32 0, void (%struct.rtx_def*, i32)* null, void (%struct.rtx_def*, %struct.rtx_def*)* null, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)* null, i32 48 }, align 8, !dbg !2479
@current_sched_info = external dso_local local_unnamed_addr global %struct.haifa_sched_info*, align 8
@bbs_in_loop_rgns = internal unnamed_addr global %struct.simple_bitmap_def* null, align 8, !dbg !2523
@loop_nests = internal global %struct.VEC_loop_p_heap* null, align 8, !dbg !2527
@rev_top_order_index = internal unnamed_addr global i32* null, align 8, !dbg !2529
@current_succs = common dso_local local_unnamed_addr global %struct.succs_info zeroinitializer, align 8, !dbg !2156
@.str.3 = private unnamed_addr constant [17 x i8] c"./sel-sched-ir.h\00", align 1
@after_recovery = external dso_local local_unnamed_addr global %struct.basic_block_def*, align 8
@dfa_state_size = external dso_local local_unnamed_addr global i64, align 8
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@flag_non_call_exceptions = external dso_local local_unnamed_addr global i32, align 4
@h_i_d = external dso_local local_unnamed_addr global %struct.VEC_haifa_insn_data_def_heap*, align 8
@has_dependence_sched_deps_info = internal global %struct.sched_deps_info_def zeroinitializer, align 8, !dbg !2446
@const_has_dependence_sched_deps_info = internal constant %struct.sched_deps_info_def { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)* null, void (%struct.rtx_def*)* @has_dependence_start_insn, void ()* @has_dependence_finish_insn, void (%struct.rtx_def*)* @has_dependence_start_lhs, void ()* @has_dependence_finish_lhs, void (%struct.rtx_def*)* @has_dependence_start_rhs, void ()* @has_dependence_finish_rhs, void (i32)* @has_dependence_note_reg_set, void (i32)* @has_dependence_note_reg_clobber, void (i32)* @has_dependence_note_reg_use, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* @has_dependence_note_mem_dep, void (%struct.rtx_def*, i32)* @has_dependence_note_dep, i8 0 }, align 8, !dbg !2448
@.str.4 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@rgn_table = external dso_local local_unnamed_addr global %struct.region*, align 8
@sched_max_luid = external dso_local local_unnamed_addr global i32, align 4
@insn_init_create_new_vinsn_p = internal unnamed_addr global i1 false, align 1, !dbg !2532
@_insn_init_ssid = internal global %struct._sel_insn_data zeroinitializer, align 8, !dbg !2457
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@note_list = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@blocks_to_reschedule = external dso_local local_unnamed_addr global %struct.bitmap_head_def*, align 8
@nr_regions = external dso_local local_unnamed_addr global i32, align 4
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@deps_init_id_sched_deps_info = internal global %struct.sched_deps_info_def zeroinitializer, align 8, !dbg !2475
@const_deps_init_id_sched_deps_info = internal constant %struct.sched_deps_info_def { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)* null, void (%struct.rtx_def*)* @deps_init_id_start_insn, void ()* @deps_init_id_finish_insn, void (%struct.rtx_def*)* @deps_init_id_start_lhs, void ()* @deps_init_id_finish_lhs, void (%struct.rtx_def*)* @deps_init_id_start_rhs, void ()* @deps_init_id_finish_rhs, void (i32)* @deps_init_id_note_reg_set, void (i32)* @deps_init_id_note_reg_clobber, void (i32)* @deps_init_id_note_reg_use, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* null, void (%struct.rtx_def*, i32)* null, i8 0 }, align 8, !dbg !2477
@rev_top_order_index_len = internal unnamed_addr global i32 -1, align 4, !dbg !2525
@tick_check_data.0 = internal unnamed_addr global %struct._expr* null, align 8, !dbg !2533
@tick_check_data.1 = internal unnamed_addr global i32 0, align 8, !dbg !2534
@tick_check_data.2 = internal unnamed_addr global i1 false, align 4, !dbg !2535
@init_global_data.0 = internal unnamed_addr global %struct.rtx_def* null, align 8, !dbg !2441
@deps_init_id_data.0 = internal unnamed_addr global i32 0, align 8, !dbg !2536
@deps_init_id_data.1 = internal unnamed_addr global %struct.idata_def* null, align 8, !dbg !2537
@deps_init_id_data.2 = internal unnamed_addr global i8 0, align 8, !dbg !2538
@deps_init_id_data.3 = internal unnamed_addr global i1 false, align 8, !dbg !2539

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2544 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2557, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2558, metadata !DIExpression()), !dbg !2559
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2560
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2561
  ret i32 %call, !dbg !2562
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2563 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2565
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2566
  ret i32 %call, !dbg !2567
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2568 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2572, metadata !DIExpression()), !dbg !2573
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2574
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2574
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2574
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2574
  %cmp = icmp uge i8* %0, %1, !dbg !2574
  %conv1 = zext i1 %cmp to i64, !dbg !2574
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2574
  %tobool = icmp eq i64 %expval, 0, !dbg !2574
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2574

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2574
  br label %cond.end, !dbg !2574

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2574
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2574
  %2 = load i8, i8* %0, align 1, !dbg !2574
  %conv3 = zext i8 %2 to i32, !dbg !2574
  br label %cond.end, !dbg !2574

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2574
  ret i32 %cond, !dbg !2575
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2576 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2578, metadata !DIExpression()), !dbg !2579
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2580
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2580
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2580
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2580
  %cmp = icmp uge i8* %0, %1, !dbg !2580
  %conv1 = zext i1 %cmp to i64, !dbg !2580
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2580
  %tobool = icmp eq i64 %expval, 0, !dbg !2580
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2580

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2580
  br label %cond.end, !dbg !2580

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2580
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2580
  %2 = load i8, i8* %0, align 1, !dbg !2580
  %conv3 = zext i8 %2 to i32, !dbg !2580
  br label %cond.end, !dbg !2580

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2580
  ret i32 %cond, !dbg !2581
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2582 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2583
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2583
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2583
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2583
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2583
  %cmp = icmp uge i8* %1, %2, !dbg !2583
  %conv1 = zext i1 %cmp to i64, !dbg !2583
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2583
  %tobool = icmp eq i64 %expval, 0, !dbg !2583
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2583

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2583
  br label %cond.end, !dbg !2583

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2583
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2583
  %3 = load i8, i8* %1, align 1, !dbg !2583
  %conv3 = zext i8 %3 to i32, !dbg !2583
  br label %cond.end, !dbg !2583

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2583
  ret i32 %cond, !dbg !2584
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2585 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2589, metadata !DIExpression()), !dbg !2590
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2591
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2592
  ret i32 %call, !dbg !2593
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2594 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2598, metadata !DIExpression()), !dbg !2600
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2599, metadata !DIExpression()), !dbg !2600
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2601
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2601
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2601
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2601
  %cmp = icmp uge i8* %0, %1, !dbg !2601
  %conv1 = zext i1 %cmp to i64, !dbg !2601
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2601
  %tobool = icmp eq i64 %expval, 0, !dbg !2601
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2601

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2601
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2601
  br label %cond.end, !dbg !2601

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2601
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2601
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2601
  store i8 %conv2, i8* %0, align 1, !dbg !2601
  %conv6 = and i32 %__c, 255, !dbg !2601
  br label %cond.end, !dbg !2601

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2601
  ret i32 %cond, !dbg !2602
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2603 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2605, metadata !DIExpression()), !dbg !2607
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2606, metadata !DIExpression()), !dbg !2607
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2608
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2608
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2608
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2608
  %cmp = icmp uge i8* %0, %1, !dbg !2608
  %conv1 = zext i1 %cmp to i64, !dbg !2608
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2608
  %tobool = icmp eq i64 %expval, 0, !dbg !2608
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2608

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2608
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2608
  br label %cond.end, !dbg !2608

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2608
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2608
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2608
  store i8 %conv2, i8* %0, align 1, !dbg !2608
  %conv6 = and i32 %__c, 255, !dbg !2608
  br label %cond.end, !dbg !2608

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2608
  ret i32 %cond, !dbg !2609
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2610 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2612, metadata !DIExpression()), !dbg !2613
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2614
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2614
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2614
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2614
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2614
  %cmp = icmp uge i8* %1, %2, !dbg !2614
  %conv1 = zext i1 %cmp to i64, !dbg !2614
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2614
  %tobool = icmp eq i64 %expval, 0, !dbg !2614
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2614

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2614
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2614
  br label %cond.end, !dbg !2614

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2614
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2614
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2614
  store i8 %conv4, i8* %1, align 1, !dbg !2614
  %conv6 = and i32 %__c, 255, !dbg !2614
  br label %cond.end, !dbg !2614

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2614
  ret i32 %cond, !dbg !2615
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2616 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2622, metadata !DIExpression()), !dbg !2625
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2623, metadata !DIExpression()), !dbg !2625
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2624, metadata !DIExpression()), !dbg !2625
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2626
  ret i64 %call, !dbg !2627
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2628 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2630, metadata !DIExpression()), !dbg !2631
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2632
  %0 = load i32, i32* %_flags, align 8, !dbg !2632
  %and = lshr i32 %0, 4, !dbg !2632
  %and.lobit = and i32 %and, 1, !dbg !2632
  ret i32 %and.lobit, !dbg !2633
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2634 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2636, metadata !DIExpression()), !dbg !2637
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2638
  %0 = load i32, i32* %_flags, align 8, !dbg !2638
  %and = lshr i32 %0, 5, !dbg !2638
  %and.lobit = and i32 %and, 1, !dbg !2638
  ret i32 %and.lobit, !dbg !2639
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2640 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2643, metadata !DIExpression()), !dbg !2644
  %__c.off = add i32 %__c, 128, !dbg !2645
  %0 = icmp ult i32 %__c.off, 384, !dbg !2645
  br i1 %0, label %cond.true, label %cond.end, !dbg !2645

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2646
  %1 = load i32*, i32** %call, align 8, !dbg !2647
  %idxprom = sext i32 %__c to i64, !dbg !2648
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2648
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2648
  br label %cond.end, !dbg !2649

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2649
  ret i32 %cond, !dbg !2650
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2651 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2653, metadata !DIExpression()), !dbg !2654
  %__c.off = add i32 %__c, 128, !dbg !2655
  %0 = icmp ult i32 %__c.off, 384, !dbg !2655
  br i1 %0, label %cond.true, label %cond.end, !dbg !2655

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2656
  %1 = load i32*, i32** %call, align 8, !dbg !2657
  %idxprom = sext i32 %__c to i64, !dbg !2658
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2658
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2658
  br label %cond.end, !dbg !2659

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2659
  ret i32 %cond, !dbg !2660
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2661 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2666, metadata !DIExpression()), !dbg !2667
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2668
  %conv = trunc i64 %call to i32, !dbg !2669
  ret i32 %conv, !dbg !2670
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2671 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2675, metadata !DIExpression()), !dbg !2676
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2677
  ret i64 %call, !dbg !2678
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2679 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2684, metadata !DIExpression()), !dbg !2685
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2686
  ret i64 %call, !dbg !2687
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2688 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2694, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2695, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2696, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2697, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2698, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.value(metadata i64 0, metadata !2699, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2700, metadata !DIExpression()), !dbg !2704
  br label %while.cond, !dbg !2705

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2706
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2704
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2700, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2699, metadata !DIExpression()), !dbg !2704
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2707
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2705

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2708
  %div = lshr i64 %add, 1, !dbg !2710
  call void @llvm.dbg.value(metadata i64 %div, metadata !2701, metadata !DIExpression()), !dbg !2704
  %mul = mul i64 %div, %__size, !dbg !2711
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2712
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2702, metadata !DIExpression()), !dbg !2704
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2713
  call void @llvm.dbg.value(metadata i32 %call, metadata !2703, metadata !DIExpression()), !dbg !2704
  %cmp1 = icmp slt i32 %call, 0, !dbg !2714
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2716

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2717
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2719

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2720
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2699, metadata !DIExpression()), !dbg !2704
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2704
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2704
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2700, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2699, metadata !DIExpression()), !dbg !2704
  br label %while.cond, !dbg !2705, !llvm.loop !2721

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2704
  ret i8* %retval.0, !dbg !2723
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2724 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2730, metadata !DIExpression()), !dbg !2731
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2732
  ret double %call, !dbg !2733
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2734 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2743, metadata !DIExpression()), !dbg !2746
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2744, metadata !DIExpression()), !dbg !2746
  call void @llvm.dbg.value(metadata i32 %base, metadata !2745, metadata !DIExpression()), !dbg !2746
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2747
  ret i64 %call, !dbg !2748
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2749 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2755, metadata !DIExpression()), !dbg !2758
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2756, metadata !DIExpression()), !dbg !2758
  call void @llvm.dbg.value(metadata i32 %base, metadata !2757, metadata !DIExpression()), !dbg !2758
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2759
  ret i64 %call, !dbg !2760
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2761 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2772, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2773, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.value(metadata i32 %base, metadata !2774, metadata !DIExpression()), !dbg !2775
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2776
  ret i64 %call, !dbg !2777
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2778 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2782, metadata !DIExpression()), !dbg !2785
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2783, metadata !DIExpression()), !dbg !2785
  call void @llvm.dbg.value(metadata i32 %base, metadata !2784, metadata !DIExpression()), !dbg !2785
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2786
  ret i64 %call, !dbg !2787
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2788 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2828, metadata !DIExpression()), !dbg !2830
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2829, metadata !DIExpression()), !dbg !2830
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2831
  ret i32 %call, !dbg !2832
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2833 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2835, metadata !DIExpression()), !dbg !2837
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2836, metadata !DIExpression()), !dbg !2837
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2838
  ret i32 %call, !dbg !2839
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2840 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2844, metadata !DIExpression()), !dbg !2846
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2845, metadata !DIExpression()), !dbg !2846
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2847
  ret i32 %call, !dbg !2848
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2849 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2853, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2854, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2855, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2856, metadata !DIExpression()), !dbg !2857
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2858
  ret i32 %call, !dbg !2859
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2860 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2864, metadata !DIExpression()), !dbg !2867
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2865, metadata !DIExpression()), !dbg !2867
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2866, metadata !DIExpression()), !dbg !2867
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2866, metadata !DIExpression(DW_OP_deref)), !dbg !2867
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2868
  ret i32 %call, !dbg !2869
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2870 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2874, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2875, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2876, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2877, metadata !DIExpression()), !dbg !2878
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2877, metadata !DIExpression(DW_OP_deref)), !dbg !2878
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2879
  ret i32 %call, !dbg !2880
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2881 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2905, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2906, metadata !DIExpression()), !dbg !2907
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2908
  ret i32 %call, !dbg !2909
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2910 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2912, metadata !DIExpression()), !dbg !2914
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2913, metadata !DIExpression()), !dbg !2914
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2915
  ret i32 %call, !dbg !2916
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2917 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2921, metadata !DIExpression()), !dbg !2923
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2922, metadata !DIExpression()), !dbg !2923
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2924
  ret i32 %call, !dbg !2925
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2926 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2930, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2931, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2932, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2933, metadata !DIExpression()), !dbg !2934
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2935
  ret i32 %call, !dbg !2936
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct._list_node* @ilist_copy(%struct._list_node* %l) local_unnamed_addr #5 !dbg !2937 {
entry:
  %head = alloca %struct._list_node*, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %l, metadata !2941, metadata !DIExpression()), !dbg !2945
  %0 = bitcast %struct._list_node** %head to i8*, !dbg !2946
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2946
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !2942, metadata !DIExpression()), !dbg !2945
  store %struct._list_node* null, %struct._list_node** %head, align 8, !dbg !2947
  call void @llvm.dbg.value(metadata %struct._list_node** %head, metadata !2943, metadata !DIExpression()), !dbg !2945
  br label %while.cond, !dbg !2948

while.cond:                                       ; preds = %while.body, %entry
  %tailp.0 = phi %struct._list_node** [ %head, %entry ], [ %next, %while.body ], !dbg !2945
  %l.addr.0 = phi %struct._list_node* [ %l, %entry ], [ %3, %while.body ]
  call void @llvm.dbg.value(metadata %struct._list_node* %l.addr.0, metadata !2941, metadata !DIExpression()), !dbg !2945
  call void @llvm.dbg.value(metadata %struct._list_node** %tailp.0, metadata !2943, metadata !DIExpression()), !dbg !2945
  %tobool = icmp eq %struct._list_node* %l.addr.0, null, !dbg !2948
  br i1 %tobool, label %while.end, label %while.body, !dbg !2948

while.body:                                       ; preds = %while.cond
  %x = getelementptr inbounds %struct._list_node, %struct._list_node* %l.addr.0, i64 0, i32 1, i32 0, i32 0, !dbg !2949
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !2949
  call fastcc void @_xlist_add(%struct._list_node** %tailp.0, %struct.rtx_def* %1) #8, !dbg !2949
  %2 = load %struct._list_node*, %struct._list_node** %tailp.0, align 8, !dbg !2951
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %2, i64 0, i32 0, !dbg !2951
  call void @llvm.dbg.value(metadata %struct._list_node** %next, metadata !2943, metadata !DIExpression()), !dbg !2945
  %next1 = getelementptr inbounds %struct._list_node, %struct._list_node* %l.addr.0, i64 0, i32 0, !dbg !2952
  %3 = load %struct._list_node*, %struct._list_node** %next1, align 8, !dbg !2952
  call void @llvm.dbg.value(metadata %struct._list_node* %3, metadata !2941, metadata !DIExpression()), !dbg !2945
  br label %while.cond, !dbg !2948, !llvm.loop !2953

while.end:                                        ; preds = %while.cond
  %4 = load %struct._list_node*, %struct._list_node** %head, align 8, !dbg !2955
  call void @llvm.dbg.value(metadata %struct._list_node* %4, metadata !2942, metadata !DIExpression()), !dbg !2945
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2956
  ret %struct._list_node* %4, !dbg !2957
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_xlist_add(%struct._list_node** %lp, %struct.rtx_def* %x) unnamed_addr #0 !dbg !2958 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !2963, metadata !DIExpression()), !dbg !2965
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2964, metadata !DIExpression()), !dbg !2965
  tail call fastcc void @_list_add(%struct._list_node** %lp) #8, !dbg !2966
  %0 = load %struct._list_node*, %struct._list_node** %lp, align 8, !dbg !2967
  %x1 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 0, !dbg !2967
  store %struct.rtx_def* %x, %struct.rtx_def** %x1, align 8, !dbg !2968
  ret void, !dbg !2969
}

; Function Attrs: nounwind uwtable
define dso_local %struct._list_node* @ilist_invert(%struct._list_node* %l) local_unnamed_addr #5 !dbg !2970 {
entry:
  %res = alloca %struct._list_node*, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %l, metadata !2972, metadata !DIExpression()), !dbg !2974
  %0 = bitcast %struct._list_node** %res to i8*, !dbg !2975
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2975
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !2973, metadata !DIExpression()), !dbg !2974
  store %struct._list_node* null, %struct._list_node** %res, align 8, !dbg !2976
  br label %while.cond, !dbg !2977

while.cond:                                       ; preds = %while.body, %entry
  %l.addr.0 = phi %struct._list_node* [ %l, %entry ], [ %2, %while.body ]
  call void @llvm.dbg.value(metadata %struct._list_node* %l.addr.0, metadata !2972, metadata !DIExpression()), !dbg !2974
  %tobool = icmp eq %struct._list_node* %l.addr.0, null, !dbg !2977
  br i1 %tobool, label %while.end, label %while.body, !dbg !2977

while.body:                                       ; preds = %while.cond
  %x = getelementptr inbounds %struct._list_node, %struct._list_node* %l.addr.0, i64 0, i32 1, i32 0, i32 0, !dbg !2978
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !2978
  call void @llvm.dbg.value(metadata %struct._list_node** %res, metadata !2973, metadata !DIExpression(DW_OP_deref)), !dbg !2974
  call fastcc void @_xlist_add(%struct._list_node** nonnull %res, %struct.rtx_def* %1) #8, !dbg !2978
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %l.addr.0, i64 0, i32 0, !dbg !2980
  %2 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !2980
  call void @llvm.dbg.value(metadata %struct._list_node* %2, metadata !2972, metadata !DIExpression()), !dbg !2974
  br label %while.cond, !dbg !2977, !llvm.loop !2981

while.end:                                        ; preds = %while.cond
  %3 = load %struct._list_node*, %struct._list_node** %res, align 8, !dbg !2983
  call void @llvm.dbg.value(metadata %struct._list_node* %3, metadata !2973, metadata !DIExpression()), !dbg !2974
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2984
  ret %struct._list_node* %3, !dbg !2985
}

; Function Attrs: nounwind uwtable
define dso_local void @blist_add(%struct._list_node** %lp, %struct.rtx_def* %to, %struct._list_node* %ptr, %struct.deps* %dc) local_unnamed_addr #5 !dbg !2986 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !2992, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !2993, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata %struct._list_node* %ptr, metadata !2994, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata %struct.deps* %dc, metadata !2995, metadata !DIExpression()), !dbg !2999
  tail call fastcc void @_list_add(%struct._list_node** %lp) #8, !dbg !3000
  %0 = load %struct._list_node*, %struct._list_node** %lp, align 8, !dbg !3001
  call void @llvm.dbg.value(metadata %struct._list_node* %0, metadata !2996, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !2999
  %to2 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 0, !dbg !3002
  store %struct.rtx_def* %to, %struct.rtx_def** %to2, align 8, !dbg !3003
  %ptr3 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 1, !dbg !3004
  %1 = bitcast i8** %ptr3 to %struct._list_node**, !dbg !3004
  store %struct._list_node* %ptr, %struct._list_node** %1, align 8, !dbg !3005
  %av = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 2, !dbg !3006
  %2 = bitcast i32* %av to %struct._list_node**, !dbg !3006
  store %struct._list_node* null, %struct._list_node** %2, align 8, !dbg !3007
  %3 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 4, !dbg !3008
  store %struct._list_node* null, %struct._list_node** %3, align 8, !dbg !3009
  %4 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 5, !dbg !3010
  store %struct.deps* %dc, %struct.deps** %4, align 8, !dbg !3011
  ret void, !dbg !3012
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_add(%struct._list_node** %lp) unnamed_addr #0 !dbg !3013 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !3018, metadata !DIExpression()), !dbg !3020
  %call = tail call fastcc %struct._list_node* @_list_alloc() #8, !dbg !3021
  call void @llvm.dbg.value(metadata %struct._list_node* %call, metadata !3019, metadata !DIExpression()), !dbg !3020
  %0 = bitcast %struct._list_node** %lp to i64*, !dbg !3022
  %1 = load i64, i64* %0, align 8, !dbg !3022
  %2 = bitcast %struct._list_node* %call to i64*, !dbg !3023
  store i64 %1, i64* %2, align 8, !dbg !3023
  store %struct._list_node* %call, %struct._list_node** %lp, align 8, !dbg !3024
  ret void, !dbg !3025
}

; Function Attrs: nounwind uwtable
define dso_local void @blist_remove(%struct._list_node** %lp) local_unnamed_addr #5 !dbg !3026 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !3030, metadata !DIExpression()), !dbg !3032
  %0 = load %struct._list_node*, %struct._list_node** %lp, align 8, !dbg !3033
  call void @llvm.dbg.value(metadata %struct._list_node* %0, metadata !3031, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !3032
  %av = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 2, !dbg !3034
  %1 = bitcast i32* %av to %struct._list_node**, !dbg !3034
  tail call void @av_set_clear(%struct._list_node** nonnull %1) #8, !dbg !3035
  %2 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 4, !dbg !3036
  tail call void @av_set_clear(%struct._list_node** nonnull %2) #8, !dbg !3037
  %ptr = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 1, !dbg !3038
  %3 = bitcast i8** %ptr to %struct._list_node**, !dbg !3038
  tail call fastcc void @_list_clear(%struct._list_node** nonnull %3) #8, !dbg !3038
  tail call fastcc void @_list_remove(%struct._list_node** %lp) #8, !dbg !3039
  ret void, !dbg !3040
}

; Function Attrs: nounwind uwtable
define dso_local void @av_set_clear(%struct._list_node** %setp) local_unnamed_addr #5 !dbg !3041 {
entry:
  %expr = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._list_node** %setp, metadata !3046, metadata !DIExpression()), !dbg !3056
  %0 = bitcast %struct._expr** %expr to i8*, !dbg !3057
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3057
  %1 = bitcast %struct._list_iterator* %i to i8*, !dbg !3058
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !3058
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !3048, metadata !DIExpression(DW_OP_deref)), !dbg !3056
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** %setp, i8 zeroext 1) #8, !dbg !3059
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !3061
  br label %for.cond, !dbg !3059

for.cond:                                         ; preds = %for.body, %entry
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !3063
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !3063
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !3047, metadata !DIExpression(DW_OP_deref)), !dbg !3056
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #8, !dbg !3063
  %tobool = icmp eq i8 %call, 0, !dbg !3059
  br i1 %tobool, label %for.end, label %for.body, !dbg !3059

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !3048, metadata !DIExpression(DW_OP_deref)), !dbg !3056
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %i) #8, !dbg !3064
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !3048, metadata !DIExpression(DW_OP_deref)), !dbg !3056
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !3063
  br label %for.cond, !dbg !3063, !llvm.loop !3065

for.end:                                          ; preds = %for.cond
  %4 = load %struct._list_node*, %struct._list_node** %setp, align 8, !dbg !3067
  %cmp = icmp eq %struct._list_node* %4, null, !dbg !3067
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3067

cond.true:                                        ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2260, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3067
  br label %cond.end, !dbg !3067

cond.end:                                         ; preds = %for.end, %cond.true
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !3068
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3068
  ret void, !dbg !3068
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_clear(%struct._list_node** %l) unnamed_addr #0 !dbg !3069 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %l, metadata !3071, metadata !DIExpression()), !dbg !3072
  br label %while.cond, !dbg !3073

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct._list_node*, %struct._list_node** %l, align 8, !dbg !3074
  %tobool = icmp eq %struct._list_node* %0, null, !dbg !3073
  br i1 %tobool, label %while.end, label %while.body, !dbg !3073

while.body:                                       ; preds = %while.cond
  tail call fastcc void @_list_remove(%struct._list_node** %l) #8, !dbg !3075
  br label %while.cond, !dbg !3073, !llvm.loop !3076

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3078
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_remove(%struct._list_node** %lp) unnamed_addr #0 !dbg !3079 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !3081, metadata !DIExpression()), !dbg !3083
  %0 = load %struct._list_node*, %struct._list_node** %lp, align 8, !dbg !3084
  call void @llvm.dbg.value(metadata %struct._list_node* %0, metadata !3082, metadata !DIExpression()), !dbg !3083
  %1 = bitcast %struct._list_node* %0 to i64*, !dbg !3085
  %2 = load i64, i64* %1, align 8, !dbg !3085
  %3 = bitcast %struct._list_node** %lp to i64*, !dbg !3086
  store i64 %2, i64* %3, align 8, !dbg !3086
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @sched_lists_pool, align 8, !dbg !3087
  %5 = bitcast %struct._list_node* %0 to i8*, !dbg !3088
  tail call void @pool_free(%struct.alloc_pool_def* %4, i8* %5) #6, !dbg !3089
  ret void, !dbg !3090
}

; Function Attrs: nounwind uwtable
define dso_local void @flist_tail_init(%struct.flist_tail_def* %l) local_unnamed_addr #5 !dbg !3091 {
entry:
  call void @llvm.dbg.value(metadata %struct.flist_tail_def* %l, metadata !3103, metadata !DIExpression()), !dbg !3104
  %head = getelementptr inbounds %struct.flist_tail_def, %struct.flist_tail_def* %l, i64 0, i32 0, !dbg !3105
  store %struct._list_node* null, %struct._list_node** %head, align 8, !dbg !3106
  %tailp = getelementptr inbounds %struct.flist_tail_def, %struct.flist_tail_def* %l, i64 0, i32 1, !dbg !3107
  store %struct._list_node** %head, %struct._list_node*** %tailp, align 8, !dbg !3108
  ret void, !dbg !3109
}

; Function Attrs: nounwind uwtable
define dso_local %struct._fence* @flist_lookup(%struct._list_node* %l, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !3110 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node* %l, metadata !3116, metadata !DIExpression()), !dbg !3118
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3117, metadata !DIExpression()), !dbg !3118
  br label %while.cond, !dbg !3119

while.cond:                                       ; preds = %if.end, %entry
  %l.addr.0 = phi %struct._list_node* [ %l, %entry ], [ %1, %if.end ]
  call void @llvm.dbg.value(metadata %struct._list_node* %l.addr.0, metadata !3116, metadata !DIExpression()), !dbg !3118
  %tobool = icmp eq %struct._list_node* %l.addr.0, null, !dbg !3119
  br i1 %tobool, label %return.loopexit, label %while.body, !dbg !3119

while.body:                                       ; preds = %while.cond
  %insn1 = getelementptr inbounds %struct._list_node, %struct._list_node* %l.addr.0, i64 0, i32 1, i32 0, i32 0, !dbg !3120
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !3120
  %cmp = icmp eq %struct.rtx_def* %0, %insn, !dbg !3123
  br i1 %cmp, label %if.then, label %if.end, !dbg !3124

if.then:                                          ; preds = %while.body
  %l.addr.0.lcssa3 = phi %struct._list_node* [ %l.addr.0, %while.body ]
  call void @llvm.dbg.value(metadata %struct._list_node* %l.addr.0.lcssa3, metadata !3116, metadata !DIExpression()), !dbg !3118
  call void @llvm.dbg.value(metadata %struct._list_node* %l.addr.0.lcssa3, metadata !3116, metadata !DIExpression()), !dbg !3118
  call void @llvm.dbg.value(metadata %struct._list_node* %l.addr.0.lcssa3, metadata !3116, metadata !DIExpression()), !dbg !3118
  %fence3 = getelementptr inbounds %struct._list_node, %struct._list_node* %l.addr.0.lcssa3, i64 0, i32 1, i32 0, !dbg !3125
  br label %return, !dbg !3126

if.end:                                           ; preds = %while.body
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %l.addr.0, i64 0, i32 0, !dbg !3127
  %1 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !3127
  call void @llvm.dbg.value(metadata %struct._list_node* %1, metadata !3116, metadata !DIExpression()), !dbg !3118
  br label %while.cond, !dbg !3119, !llvm.loop !3128

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !3130

return:                                           ; preds = %return.loopexit, %if.then
  %retval.0 = phi %struct._fence* [ %fence3, %if.then ], [ null, %return.loopexit ], !dbg !3118
  ret %struct._fence* %retval.0, !dbg !3130
}

; Function Attrs: nounwind uwtable
define dso_local void @flist_clear(%struct._list_node** %lp) local_unnamed_addr #5 !dbg !3131 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !3135, metadata !DIExpression()), !dbg !3136
  br label %while.cond, !dbg !3137

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct._list_node*, %struct._list_node** %lp, align 8, !dbg !3138
  %tobool = icmp eq %struct._list_node* %0, null, !dbg !3137
  br i1 %tobool, label %while.end, label %while.body, !dbg !3137

while.body:                                       ; preds = %while.cond
  tail call fastcc void @flist_remove(%struct._list_node** %lp) #8, !dbg !3139
  br label %while.cond, !dbg !3137, !llvm.loop !3140

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3142
}

; Function Attrs: nounwind uwtable
define internal fastcc void @flist_remove(%struct._list_node** %lp) unnamed_addr #5 !dbg !3143 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !3145, metadata !DIExpression()), !dbg !3146
  %0 = load %struct._list_node*, %struct._list_node** %lp, align 8, !dbg !3147
  %insn = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 0, !dbg !3147
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3147
  %tobool = icmp eq %struct.rtx_def* %1, null, !dbg !3147
  br i1 %tobool, label %if.end, label %if.then, !dbg !3149

if.then:                                          ; preds = %entry
  %fence2 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, !dbg !3150
  tail call fastcc void @fence_clear(%struct._fence* nonnull %fence2) #8, !dbg !3151
  br label %if.end, !dbg !3151

if.end:                                           ; preds = %entry, %if.then
  tail call fastcc void @_list_remove(%struct._list_node** %lp) #8, !dbg !3152
  ret void, !dbg !3153
}

; Function Attrs: nounwind uwtable
define dso_local void @def_list_add(%struct._list_node** %dl, %struct.rtx_def* %original_insn, i8 zeroext %crosses_call) local_unnamed_addr #5 !dbg !3154 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %dl, metadata !3160, metadata !DIExpression()), !dbg !3166
  call void @llvm.dbg.value(metadata %struct.rtx_def* %original_insn, metadata !3161, metadata !DIExpression()), !dbg !3166
  call void @llvm.dbg.value(metadata i8 %crosses_call, metadata !3162, metadata !DIExpression()), !dbg !3166
  tail call fastcc void @_list_add(%struct._list_node** %dl) #8, !dbg !3167
  %0 = load %struct._list_node*, %struct._list_node** %dl, align 8, !dbg !3168
  call void @llvm.dbg.value(metadata %struct._list_node* %0, metadata !3163, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !3166
  %orig_insn = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 0, !dbg !3169
  store %struct.rtx_def* %original_insn, %struct.rtx_def** %orig_insn, align 8, !dbg !3170
  %crosses_call1 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 1, !dbg !3171
  %1 = bitcast i8** %crosses_call1 to i8*, !dbg !3171
  store i8 %crosses_call, i8* %1, align 8, !dbg !3172
  ret void, !dbg !3173
}

; Function Attrs: nounwind uwtable
define dso_local i8* @create_target_context(i8 zeroext %clean_p) local_unnamed_addr #5 !dbg !3174 {
entry:
  call void @llvm.dbg.value(metadata i8 %clean_p, metadata !3178, metadata !DIExpression()), !dbg !3180
  %call = tail call fastcc i8* @alloc_target_context() #8, !dbg !3181
  call void @llvm.dbg.value(metadata i8* %call, metadata !3179, metadata !DIExpression()), !dbg !3180
  tail call fastcc void @init_target_context(i8* %call, i8 zeroext %clean_p) #8, !dbg !3182
  ret i8* %call, !dbg !3183
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @alloc_target_context() unnamed_addr #5 !dbg !3184 {
entry:
  %0 = load i8* ()*, i8* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 23), align 8, !dbg !3187
  %tobool = icmp eq i8* ()* %0, null, !dbg !3188
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3188

cond.true:                                        ; preds = %entry
  %call = tail call i8* %0() #6, !dbg !3189
  br label %cond.end, !dbg !3188

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3188

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ inttoptr (i64 1 to i8*), %cond.false ], !dbg !3188
  ret i8* %cond, !dbg !3190
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_target_context(i8* %tc, i8 zeroext %clean_p) unnamed_addr #5 !dbg !3191 {
entry:
  call void @llvm.dbg.value(metadata i8* %tc, metadata !3195, metadata !DIExpression()), !dbg !3197
  call void @llvm.dbg.value(metadata i8 %clean_p, metadata !3196, metadata !DIExpression()), !dbg !3197
  %0 = load void (i8*, i8)*, void (i8*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 24), align 8, !dbg !3198
  %tobool = icmp eq void (i8*, i8)* %0, null, !dbg !3200
  br i1 %tobool, label %if.end, label %if.then, !dbg !3201

if.then:                                          ; preds = %entry
  tail call void %0(i8* %tc, i8 zeroext %clean_p) #6, !dbg !3202
  br label %if.end, !dbg !3202

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3203
}

; Function Attrs: nounwind uwtable
define dso_local void @set_target_context(i8* %tc) local_unnamed_addr #5 !dbg !3204 {
entry:
  call void @llvm.dbg.value(metadata i8* %tc, metadata !3208, metadata !DIExpression()), !dbg !3209
  %0 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 25), align 8, !dbg !3210
  %tobool = icmp eq void (i8*)* %0, null, !dbg !3212
  br i1 %tobool, label %if.end, label %if.then, !dbg !3213

if.then:                                          ; preds = %entry
  tail call void %0(i8* %tc) #6, !dbg !3214
  br label %if.end, !dbg !3214

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3215
}

; Function Attrs: nounwind uwtable
define dso_local void @reset_target_context(i8* %tc, i8 zeroext %clean_p) local_unnamed_addr #5 !dbg !3216 {
entry:
  call void @llvm.dbg.value(metadata i8* %tc, metadata !3218, metadata !DIExpression()), !dbg !3220
  call void @llvm.dbg.value(metadata i8 %clean_p, metadata !3219, metadata !DIExpression()), !dbg !3220
  tail call fastcc void @clear_target_context(i8* %tc) #8, !dbg !3221
  tail call fastcc void @init_target_context(i8* %tc, i8 zeroext %clean_p) #8, !dbg !3222
  ret void, !dbg !3223
}

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_target_context(i8* %tc) unnamed_addr #5 !dbg !3224 {
entry:
  call void @llvm.dbg.value(metadata i8* %tc, metadata !3226, metadata !DIExpression()), !dbg !3227
  %0 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 26), align 8, !dbg !3228
  %tobool = icmp eq void (i8*)* %0, null, !dbg !3230
  br i1 %tobool, label %if.end, label %if.then, !dbg !3231

if.then:                                          ; preds = %entry
  tail call void %0(i8* %tc) #6, !dbg !3232
  br label %if.end, !dbg !3232

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3233
}

; Function Attrs: nounwind uwtable
define dso_local void @advance_deps_context(%struct.deps* %dc, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !3234 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %dc, metadata !3238, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3239, metadata !DIExpression()), !dbg !3240
  store %struct.sched_deps_info_def* @advance_deps_context_sched_deps_info, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !3241
  tail call void @deps_analyze_insn(%struct.deps* %dc, %struct.rtx_def* %insn) #6, !dbg !3242
  ret void, !dbg !3243
}

declare dso_local void @deps_analyze_insn(%struct.deps*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @init_fences(%struct.rtx_def* %old_fence) local_unnamed_addr #5 !dbg !3244 {
entry:
  %succ = alloca %struct.rtx_def*, align 8
  %si = alloca %struct.succ_iterator, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_fence, metadata !3248, metadata !DIExpression()), !dbg !3271
  %0 = bitcast %struct.rtx_def** %succ to i8*, !dbg !3272
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3272
  %1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 0, !dbg !3273
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1) #7, !dbg !3273
  call void @llvm.dbg.value(metadata i8 1, metadata !3269, metadata !DIExpression()), !dbg !3271
  %call = tail call i32 @get_max_uid() #6, !dbg !3274
  %add = add nsw i32 %call, 1, !dbg !3275
  call void @llvm.dbg.value(metadata i32 %add, metadata !3270, metadata !DIExpression()), !dbg !3271
  %2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp, i64 0, i32 0, !dbg !3276
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #7, !dbg !3276
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !3249, metadata !DIExpression(DW_OP_deref)), !dbg !3271
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %old_fence, i32 9) #8, !dbg !3276
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 64, i1 false), !dbg !3276
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #7, !dbg !3276
  %conv = sext i32 %add to i64, !dbg !3278
  br label %for.cond, !dbg !3276

for.cond:                                         ; preds = %if.end, %entry
  %first.0 = phi i8 [ 1, %entry ], [ 0, %if.end ], !dbg !3271
  call void @llvm.dbg.value(metadata i8 %first.0, metadata !3269, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !3249, metadata !DIExpression(DW_OP_deref)), !dbg !3271
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !3250, metadata !DIExpression(DW_OP_deref)), !dbg !3271
  %call1 = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %si, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %old_fence, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #8, !dbg !3281
  %tobool = icmp eq i8 %call1, 0, !dbg !3276
  br i1 %tobool, label %for.end, label %for.body, !dbg !3276

for.body:                                         ; preds = %for.cond
  %tobool2 = icmp eq i8 %first.0, 0, !dbg !3282
  br i1 %tobool2, label %if.else, label %if.end, !dbg !3284

if.else:                                          ; preds = %for.body
  %3 = load i32, i32* @flag_sel_sched_pipelining_outer_loops, align 4, !dbg !3285
  %tobool3 = icmp eq i32 %3, 0, !dbg !3285
  br i1 %tobool3, label %cond.true, label %if.end, !dbg !3285

cond.true:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 610, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3285
  br label %if.end, !dbg !3285

if.end:                                           ; preds = %if.else, %for.body, %cond.true
  call void @llvm.dbg.value(metadata i8 0, metadata !3269, metadata !DIExpression()), !dbg !3271
  %4 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !3286
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3249, metadata !DIExpression()), !dbg !3271
  %call4 = call fastcc i8* @state_create() #8, !dbg !3287
  %call5 = call fastcc %struct.deps* @create_deps_context() #8, !dbg !3288
  %call6 = call i8* @create_target_context(i8 zeroext 1) #8, !dbg !3289
  %call7 = call i8* @xcalloc(i64 %conv, i64 4) #6, !dbg !3290
  %5 = bitcast i8* %call7 to i32*, !dbg !3290
  %6 = load i32, i32* @issue_rate, align 4, !dbg !3291
  call fastcc void @flist_add(%struct._list_node** nonnull @fences, %struct.rtx_def* %4, i8* %call4, %struct.deps* %call5, i8* %call6, %struct.rtx_def* null, %struct.VEC_rtx_gc* null, i32* %5, i32 %add, %struct.rtx_def* null, i32 1, i32 0, i32 %6, i8 zeroext 1, i8 zeroext 0) #8, !dbg !3292
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !3250, metadata !DIExpression(DW_OP_deref)), !dbg !3271
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %si) #8, !dbg !3281
  br label %for.cond, !dbg !3281, !llvm.loop !3293

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1) #7, !dbg !3295
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3295
  ret void, !dbg !3295
}

declare dso_local i32 @get_max_uid() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_succ_iter_start(%struct.succ_iterator* noalias sret %agg.result, %struct.rtx_def** %succp, %struct.rtx_def* %insn, i32 %flags) unnamed_addr #0 !dbg !3296 {
entry:
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succp, metadata !3300, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3301, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3302, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.declare(metadata %struct.succ_iterator* %agg.result, metadata !3303, metadata !DIExpression()), !dbg !3306
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !3307
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !3307
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3307
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !3304, metadata !DIExpression()), !dbg !3305
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3308
  %bf.load = load i32, i32* %1, align 8, !dbg !3308
  %bf.clear = and i32 %bf.load, 65535, !dbg !3308
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3308
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !3308

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3308
  br i1 %cmp3, label %cond.end, label %lor.lhs.false4, !dbg !3308

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3308
  br i1 %cmp7, label %cond.end, label %lor.lhs.false8, !dbg !3308

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3308
  br i1 %cmp11, label %cond.end, label %lor.lhs.false12, !dbg !3308

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %cmp15 = icmp eq i32 %bf.clear, 13, !dbg !3308
  br i1 %cmp15, label %land.lhs.true, label %cond.true, !dbg !3308

land.lhs.true:                                    ; preds = %lor.lhs.false12
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3308
  %2 = getelementptr inbounds %union.u, %union.u* %u16, i64 1, i32 0, i32 0, i64 0, !dbg !3308
  %rt_int = bitcast %union.rtunion_def* %2 to i32*, !dbg !3308
  %3 = load i32, i32* %rt_int, align 8, !dbg !3308
  %cmp19 = icmp eq i32 %3, 10, !dbg !3308
  br i1 %cmp19, label %cond.end, label %cond.true, !dbg !3308

cond.true:                                        ; preds = %land.lhs.true, %lor.lhs.false12
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 1206, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3308
  br label %cond.end, !dbg !3308

cond.end:                                         ; preds = %entry, %lor.lhs.false, %lor.lhs.false4, %lor.lhs.false8, %land.lhs.true, %cond.true
  %conv = trunc i32 %flags to i16, !dbg !3309
  %flags20 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 5, !dbg !3310
  store i16 %conv, i16* %flags20, align 8, !dbg !3311
  store %struct.rtx_def* null, %struct.rtx_def** %succp, align 8, !dbg !3312
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 1, !dbg !3313
  store %struct.edge_def* null, %struct.edge_def** %e1, align 8, !dbg !3314
  %e2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 2, !dbg !3315
  store %struct.edge_def* null, %struct.edge_def** %e2, align 8, !dbg !3316
  %bb21 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 4, !dbg !3317
  store %struct.basic_block_def* %0, %struct.basic_block_def** %bb21, align 8, !dbg !3318
  %current_flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 6, !dbg !3319
  store i16 0, i16* %current_flags, align 2, !dbg !3320
  %current_exit = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 7, !dbg !3321
  store i32 -1, i32* %current_exit, align 4, !dbg !3322
  %loop_exits = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 8, !dbg !3323
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !3324
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3325
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !3325
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3325
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !3325
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3325
  %cmp22 = icmp eq %struct.basic_block_def* %0, %6, !dbg !3327
  br i1 %cmp22, label %if.else, label %land.lhs.true24, !dbg !3328

land.lhs.true24:                                  ; preds = %cond.end
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !3329
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3329
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3329
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 1, !dbg !3329
  %8 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3329
  %cmp25 = icmp eq %struct.rtx_def* %8, %insn, !dbg !3330
  br i1 %cmp25, label %if.else, label %if.then, !dbg !3331

if.then:                                          ; preds = %land.lhs.true24
  %bb_end = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 0, !dbg !3332
  store i8 0, i8* %bb_end, align 8, !dbg !3334
  %index = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 3, i32 0, !dbg !3335
  store i32 0, i32* %index, align 8, !dbg !3336
  %container = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 3, i32 1, !dbg !3337
  store %struct.VEC_edge_gc** null, %struct.VEC_edge_gc*** %container, align 8, !dbg !3338
  br label %if.end, !dbg !3339

if.else:                                          ; preds = %land.lhs.true24, %cond.end
  %ei28 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 3, !dbg !3340
  %9 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3342
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7, !dbg !3342
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 1, !dbg !3342
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !3342
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3342
  %11 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !3342
  store i32 %11, i32* %10, align 8, !dbg !3342
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3342
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !3342
  store %struct.VEC_edge_gc** %13, %struct.VEC_edge_gc*** %12, align 8, !dbg !3342
  %14 = bitcast %struct.edge_iterator* %ei28 to i8*, !dbg !3342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %9, i64 16, i1 false), !dbg !3342
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7, !dbg !3342
  %bb_end29 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 0, !dbg !3343
  store i8 1, i8* %bb_end29, align 8, !dbg !3344
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3345
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* %ip, %struct.rtx_def** %succp, %struct.rtx_def* %insn, i8 (%struct.edge_def*, %struct.succ_iterator*)* %check) unnamed_addr #0 !dbg !3346 {
entry:
  %e_tmp = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %ip, metadata !3354, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succp, metadata !3355, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3356, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8 (%struct.edge_def*, %struct.succ_iterator*)* @_eligible_successor_edge_p, metadata !3357, metadata !DIExpression()), !dbg !3367
  %bb_end = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 0, !dbg !3368
  %0 = load i8, i8* %bb_end, align 8, !dbg !3368
  %tobool = icmp eq i8 %0, 0, !dbg !3369
  br i1 %tobool, label %if.then, label %while.body.preheader, !dbg !3370

while.body.preheader:                             ; preds = %entry
  %1 = bitcast %struct.edge_def** %e_tmp to i8*, !dbg !3371
  %loop_exits = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 8, !dbg !3372
  %current_exit = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 7, !dbg !3374
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 1, !dbg !3377
  %2 = bitcast %struct.edge_def** %e1 to i64*, !dbg !3377
  %3 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 3, i32 0, !dbg !3371
  %4 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 3, i32 1, !dbg !3371
  %flags27 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 5, !dbg !3380
  %bb36 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 4, !dbg !3380
  %ei50 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 3, !dbg !3382
  br label %while.body, !dbg !3386

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %succp, align 8, !dbg !3387
  %cmp = icmp eq %struct.rtx_def* %5, null, !dbg !3390
  br i1 %cmp, label %lor.lhs.false, label %return, !dbg !3391

lor.lhs.false:                                    ; preds = %if.then
  %flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 5, !dbg !3392
  %6 = load i16, i16* %flags, align 8, !dbg !3392
  %7 = and i16 %6, 1, !dbg !3393
  %cmp1 = icmp eq i16 %7, 0, !dbg !3394
  br i1 %cmp1, label %return, label %if.end, !dbg !3395

if.end:                                           ; preds = %lor.lhs.false
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3396
  %9 = bitcast %union.rtunion_def* %8 to i64*, !dbg !3396
  %10 = load i64, i64* %9, align 8, !dbg !3396
  %11 = bitcast %struct.rtx_def** %succp to i64*, !dbg !3397
  store i64 %10, i64* %11, align 8, !dbg !3397
  %current_flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 6, !dbg !3398
  store i16 1, i16* %current_flags, align 2, !dbg !3399
  br label %return, !dbg !3400

while.body:                                       ; preds = %while.body.preheader, %cleanup63
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3401
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !3358, metadata !DIExpression()), !dbg !3371
  store %struct.edge_def* null, %struct.edge_def** %e_tmp, align 8, !dbg !3402
  %12 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !3403
  %tobool4 = icmp eq %struct.VEC_edge_heap* %12, null, !dbg !3404
  br i1 %tobool4, label %if.end17, label %do.body.preheader, !dbg !3386

do.body.preheader:                                ; preds = %while.body
  br label %do.body, !dbg !3405

do.body:                                          ; preds = %land.rhs.do.body_crit_edge, %do.body.preheader
  %13 = phi %struct.VEC_edge_heap* [ %.pre, %land.rhs.do.body_crit_edge ], [ %12, %do.body.preheader ], !dbg !3406
  %tobool7 = icmp eq %struct.VEC_edge_heap* %13, null, !dbg !3406
  br i1 %tobool7, label %cond.end, label %cond.true, !dbg !3406

cond.true:                                        ; preds = %do.body
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %13, i64 0, i32 0, !dbg !3406
  br label %cond.end, !dbg !3406

cond.end:                                         ; preds = %do.body, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %do.body ], !dbg !3406
  %14 = load i32, i32* %current_exit, align 4, !dbg !3406
  call void @llvm.dbg.value(metadata %struct.edge_def** %e_tmp, metadata !3358, metadata !DIExpression(DW_OP_deref)), !dbg !3371
  %call = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %cond, i32 %14, %struct.edge_def** nonnull %e_tmp) #8, !dbg !3406
  %15 = load i32, i32* %current_exit, align 4, !dbg !3407
  %inc = add nsw i32 %15, 1, !dbg !3407
  store i32 %inc, i32* %current_exit, align 4, !dbg !3407
  %16 = load %struct.edge_def*, %struct.edge_def** %e_tmp, align 8, !dbg !3408
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !3358, metadata !DIExpression()), !dbg !3371
  %tobool10 = icmp eq %struct.edge_def* %16, null, !dbg !3408
  br i1 %tobool10, label %do.end.loopexit, label %land.rhs, !dbg !3409

land.rhs:                                         ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !3358, metadata !DIExpression()), !dbg !3371
  %call11 = call zeroext i8 @_eligible_successor_edge_p(%struct.edge_def* nonnull %16, %struct.succ_iterator* %ip) #6, !dbg !3410
  %tobool12 = icmp eq i8 %call11, 0, !dbg !3411
  br i1 %tobool12, label %land.rhs.do.body_crit_edge, label %land.rhs.do.end_crit_edge, !dbg !3412, !llvm.loop !3413

land.rhs.do.end_crit_edge:                        ; preds = %land.rhs
  %.pre5 = load %struct.edge_def*, %struct.edge_def** %e_tmp, align 8, !dbg !3415
  br label %do.end, !dbg !3412

land.rhs.do.body_crit_edge:                       ; preds = %land.rhs
  %.pre = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !3406
  br label %do.body, !dbg !3412

do.end.loopexit:                                  ; preds = %cond.end
  %.lcssa = phi %struct.edge_def* [ %16, %cond.end ], !dbg !3408
  br label %do.end, !dbg !3415

do.end:                                           ; preds = %do.end.loopexit, %land.rhs.do.end_crit_edge
  %.in = phi %struct.edge_def* [ %.pre5, %land.rhs.do.end_crit_edge ], [ %.lcssa, %do.end.loopexit ]
  %17 = phi %struct.edge_def* [ %.pre5, %land.rhs.do.end_crit_edge ], [ null, %do.end.loopexit ], !dbg !3415
  %18 = ptrtoint %struct.edge_def* %.in to i64, !dbg !3417
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !3358, metadata !DIExpression()), !dbg !3371
  %tobool13 = icmp eq %struct.edge_def* %17, null, !dbg !3415
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !3418

if.then14:                                        ; preds = %do.end
  call fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** nonnull %loop_exits) #8, !dbg !3419
  %.pre6 = load %struct.edge_def*, %struct.edge_def** %e_tmp, align 8, !dbg !3420
  %19 = ptrtoint %struct.edge_def* %.pre6 to i64, !dbg !3419
  br label %if.end17, !dbg !3419

if.end17:                                         ; preds = %do.end, %while.body, %if.then14
  %20 = phi i64 [ %18, %do.end ], [ 0, %while.body ], [ %19, %if.then14 ]
  %21 = phi %struct.edge_def* [ %17, %do.end ], [ null, %while.body ], [ %.pre6, %if.then14 ], !dbg !3420
  call void @llvm.dbg.value(metadata %struct.edge_def* %21, metadata !3358, metadata !DIExpression()), !dbg !3371
  %tobool18 = icmp eq %struct.edge_def* %21, null, !dbg !3420
  br i1 %tobool18, label %while.cond21.preheader, label %if.then19, !dbg !3421

while.cond21.preheader:                           ; preds = %if.end17
  br label %while.cond21, !dbg !3422

if.then19:                                        ; preds = %if.end17
  store i64 %20, i64* %2, align 8, !dbg !3423
  br label %cleanup63, !dbg !3424

while.cond21:                                     ; preds = %while.cond21.preheader, %cleanup
  %22 = load i32, i32* %3, align 8, !dbg !3425
  %23 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %4, align 8, !dbg !3425
  %call23 = call fastcc zeroext i8 @ei_cond(i32 %22, %struct.VEC_edge_gc** %23, %struct.edge_def** nonnull %e1) #8, !dbg !3425
  %tobool24 = icmp eq i8 %call23, 0, !dbg !3422
  br i1 %tobool24, label %while.end, label %while.body25, !dbg !3422

while.body25:                                     ; preds = %while.cond21
  %24 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !3426
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %24, i64 0, i32 1, !dbg !3427
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3427
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %25, metadata !3362, metadata !DIExpression()), !dbg !3428
  %26 = load i16, i16* %flags27, align 8, !dbg !3429
  %27 = and i16 %26, 8, !dbg !3430
  %tobool30 = icmp ne i16 %27, 0, !dbg !3430
  %28 = load i32, i32* @flag_sel_sched_pipelining_outer_loops, align 4, !dbg !3431
  %tobool31 = icmp ne i32 %28, 0, !dbg !3431
  %or.cond = and i1 %tobool30, %tobool31, !dbg !3432
  br i1 %or.cond, label %land.lhs.true32, label %if.end52, !dbg !3432

land.lhs.true32:                                  ; preds = %while.body25
  %call33 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %25) #8, !dbg !3433
  %tobool34 = icmp eq i8 %call33, 0, !dbg !3433
  br i1 %tobool34, label %if.then43, label %lor.lhs.false35, !dbg !3434

lor.lhs.false35:                                  ; preds = %land.lhs.true32
  %29 = load i32*, i32** @block_to_bb, align 8, !dbg !3435
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %bb36, align 8, !dbg !3435
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i64 0, i32 9, !dbg !3435
  %31 = load i32, i32* %index, align 8, !dbg !3435
  %idxprom = sext i32 %31 to i64, !dbg !3435
  %arrayidx37 = getelementptr inbounds i32, i32* %29, i64 %idxprom, !dbg !3435
  %32 = load i32, i32* %arrayidx37, align 4, !dbg !3435
  %index38 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i64 0, i32 9, !dbg !3436
  %33 = load i32, i32* %index38, align 8, !dbg !3436
  %idxprom39 = sext i32 %33 to i64, !dbg !3436
  %arrayidx40 = getelementptr inbounds i32, i32* %29, i64 %idxprom39, !dbg !3436
  %34 = load i32, i32* %arrayidx40, align 4, !dbg !3436
  %cmp41 = icmp slt i32 %32, %34, !dbg !3437
  br i1 %cmp41, label %if.then43, label %if.end52, !dbg !3438

if.then43:                                        ; preds = %land.lhs.true32, %lor.lhs.false35
  %call44 = call fastcc %struct.VEC_edge_heap* @get_all_loop_exits(%struct.basic_block_def* %25) #8, !dbg !3439
  store %struct.VEC_edge_heap* %call44, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !3440
  %tobool47 = icmp eq %struct.VEC_edge_heap* %call44, null, !dbg !3441
  br i1 %tobool47, label %if.end52, label %if.then48, !dbg !3442

if.then48:                                        ; preds = %if.then43
  store i32 0, i32* %current_exit, align 4, !dbg !3443
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei50) #8, !dbg !3444
  br label %cleanup, !dbg !3445

if.end52:                                         ; preds = %if.then43, %lor.lhs.false35, %while.body25
  %35 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !3446
  %call54 = call zeroext i8 @_eligible_successor_edge_p(%struct.edge_def* %35, %struct.succ_iterator* %ip) #6, !dbg !3448
  %tobool55 = icmp eq i8 %call54, 0, !dbg !3448
  br i1 %tobool55, label %if.end57, label %cleanup, !dbg !3449

if.end57:                                         ; preds = %if.end52
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei50) #8, !dbg !3450
  br label %cleanup, !dbg !3451

cleanup:                                          ; preds = %if.end52, %if.end57, %if.then48
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then48 ], [ true, %if.end57 ], [ false, %if.end52 ]
  br i1 %cleanup.dest.slot.0, label %while.cond21, label %while.end, !llvm.loop !3452

while.end:                                        ; preds = %while.cond21, %cleanup
  %36 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !3453
  %tobool60 = icmp eq %struct.VEC_edge_heap* %36, null, !dbg !3455
  %. = select i1 %tobool60, i32 3, i32 2, !dbg !3371
  br label %cleanup63, !dbg !3371, !llvm.loop !3456

cleanup63:                                        ; preds = %while.end, %if.then19
  %cleanup.dest.slot.1 = phi i32 [ 3, %if.then19 ], [ %., %while.end ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3458
  %switch1 = icmp eq i32 %cleanup.dest.slot.1, 3
  br i1 %switch1, label %while.end65, label %while.body

while.end65:                                      ; preds = %cleanup63
  %37 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !3459
  %tobool67 = icmp eq %struct.edge_def* %37, null, !dbg !3460
  br i1 %tobool67, label %return, label %if.then68, !dbg !3461

if.then68:                                        ; preds = %while.end65
  %e2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 2, !dbg !3462
  %38 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !3462
  %dest70 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i64 0, i32 1, !dbg !3463
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %dest70, align 8, !dbg !3463
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %39, metadata !3364, metadata !DIExpression()), !dbg !3464
  %40 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3465
  %cfg = getelementptr inbounds %struct.function, %struct.function* %40, i64 0, i32 1, !dbg !3465
  %41 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3465
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %41, i64 0, i32 1, !dbg !3465
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3465
  %cmp71 = icmp eq %struct.basic_block_def* %39, %42, !dbg !3467
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** @after_recovery, align 8, !dbg !3468
  %cmp74 = icmp eq %struct.basic_block_def* %39, %43, !dbg !3469
  %or.cond2 = or i1 %cmp71, %cmp74, !dbg !3470
  br i1 %or.cond2, label %if.then76, label %if.else77, !dbg !3470

if.then76:                                        ; preds = %if.then68
  %44 = load i64, i64* bitcast (%struct.rtx_def** @exit_insn to i64*), align 8, !dbg !3471
  %45 = bitcast %struct.rtx_def** %succp to i64*, !dbg !3472
  store i64 %44, i64* %45, align 8, !dbg !3472
  br label %return, !dbg !3473

if.else77:                                        ; preds = %if.then68
  %call78 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %39) #8, !dbg !3474
  store %struct.rtx_def* %call78, %struct.rtx_def** %succp, align 8, !dbg !3476
  %46 = load i16, i16* %flags27, align 8, !dbg !3477
  %cmp81 = icmp eq i16 %46, 1, !dbg !3477
  br i1 %cmp81, label %lor.lhs.false83, label %cond.end93, !dbg !3477

lor.lhs.false83:                                  ; preds = %if.else77
  %call84 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %39) #6, !dbg !3477
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call84, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3477
  %rt_rtx88 = bitcast %union.rtunion_def* %47 to %struct.rtx_def**, !dbg !3477
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx88, align 8, !dbg !3477
  %cmp89 = icmp eq %struct.rtx_def* %call78, %48, !dbg !3477
  br i1 %cmp89, label %cond.end93, label %cond.true91, !dbg !3477

cond.true91:                                      ; preds = %lor.lhs.false83
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 1331, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3477
  br label %cond.end93, !dbg !3477

cond.end93:                                       ; preds = %if.else77, %lor.lhs.false83, %cond.true91
  %49 = load %struct.rtx_def*, %struct.rtx_def** %succp, align 8, !dbg !3478
  %arrayidx97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i64 0, i32 1, i32 0, i32 1, !dbg !3478
  %rt_bb = bitcast %struct.object_block** %arrayidx97 to %struct.basic_block_def**, !dbg !3478
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3478
  %cmp98 = icmp eq %struct.basic_block_def* %50, %39, !dbg !3478
  br i1 %cmp98, label %return, label %cond.true100, !dbg !3478

cond.true100:                                     ; preds = %cond.end93
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 1332, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3478
  br label %return, !dbg !3478

return:                                           ; preds = %while.end65, %if.then, %if.then76, %cond.end93, %cond.true100, %lor.lhs.false, %if.end
  %retval.0 = phi i8 [ 1, %if.end ], [ 0, %lor.lhs.false ], [ 0, %if.then ], [ 1, %cond.true100 ], [ 1, %cond.end93 ], [ 1, %if.then76 ], [ 0, %while.end65 ], !dbg !3479
  ret i8 %retval.0, !dbg !3480
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @_eligible_successor_edge_p(%struct.edge_def* %e1, %struct.succ_iterator* %ip) #0 !dbg !3481 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e1, metadata !3483, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %ip, metadata !3484, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.edge_def* %e1, metadata !3485, metadata !DIExpression()), !dbg !3497
  %flags1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 5, !dbg !3498
  %0 = load i16, i16* %flags1, align 8, !dbg !3498
  %conv = sext i16 %0 to i32, !dbg !3499
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3487, metadata !DIExpression()), !dbg !3497
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 0, !dbg !3500
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3500
  %call = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %1) #8, !dbg !3501
  %tobool = icmp eq i8 %call, 0, !dbg !3502
  call void @llvm.dbg.value(metadata i1 %tobool, metadata !3488, metadata !DIExpression()), !dbg !3497
  %cmp = icmp eq i16 %0, 0, !dbg !3503
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3503

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 1363, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3503
  br label %cond.end, !dbg !3503

cond.end:                                         ; preds = %entry, %cond.true
  br i1 %tobool, label %if.then, label %cond.end.if.end13_crit_edge, !dbg !3504

cond.end.if.end13_crit_edge:                      ; preds = %cond.end
  %.pre = and i32 %conv, 4, !dbg !3505
  br label %if.end13, !dbg !3504

if.then:                                          ; preds = %cond.end
  %and = and i32 %conv, 12, !dbg !3507
  %tobool5 = icmp eq i32 %and, 0, !dbg !3507
  br i1 %tobool5, label %cond.true6, label %cond.end8, !dbg !3507

cond.true6:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 1369, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3507
  br label %cond.end8, !dbg !3507

cond.end8:                                        ; preds = %if.then, %cond.true6
  %and10 = and i32 %conv, 4, !dbg !3510
  %tobool11 = icmp eq i32 %and10, 0, !dbg !3510
  br i1 %tobool11, label %if.end13, label %cleanup128, !dbg !3512

if.end13:                                         ; preds = %cond.end.if.end13_crit_edge, %cond.end8
  %and40.pre-phi = phi i32 [ %.pre, %cond.end.if.end13_crit_edge ], [ %and10, %cond.end8 ], !dbg !3505
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 1, !dbg !3513
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3513
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !3486, metadata !DIExpression()), !dbg !3497
  %tobool41 = icmp eq i32 %and40.pre-phi, 0, !dbg !3505
  br i1 %tobool41, label %if.end13.if.end13.split_crit_edge, label %if.end13.split.us, !dbg !3514

if.end13.if.end13.split_crit_edge:                ; preds = %if.end13
  br label %while.cond, !dbg !3514

if.end13.split.us:                                ; preds = %if.end13
  br label %while.cond.us, !dbg !3514

while.cond.us:                                    ; preds = %while.cond.backedge.us, %if.end13.split.us
  %e2.0.us = phi %struct.edge_def* [ %e1, %if.end13.split.us ], [ %e2.0.be.us, %while.cond.backedge.us ], !dbg !3497
  %bb.0.us = phi %struct.basic_block_def* [ %2, %if.end13.split.us ], [ %bb.0.be.us, %while.cond.backedge.us ], !dbg !3497
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0.us, metadata !3486, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.0.us, metadata !3485, metadata !DIExpression()), !dbg !3497
  %call14.us = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %bb.0.us) #8, !dbg !3515
  %tobool15.us = icmp eq i8 %call14.us, 0, !dbg !3515
  br i1 %tobool15.us, label %if.then16.us, label %if.end36.us, !dbg !3516

if.end36.us:                                      ; preds = %while.cond.us
  %call37.us = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %bb.0.us) #8, !dbg !3517
  %succs44.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0.us, i64 0, i32 1, !dbg !3518
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs44.us, align 8, !dbg !3518
  %tobool45.us = icmp eq %struct.VEC_edge_gc* %3, null, !dbg !3518
  br i1 %tobool45.us, label %cond.end50.us, label %cond.true46.us, !dbg !3518

cond.true46.us:                                   ; preds = %if.end36.us
  %base48.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !3518
  br label %cond.end50.us, !dbg !3518

cond.end50.us:                                    ; preds = %cond.true46.us, %if.end36.us
  %cond51.us = phi %struct.VEC_edge_base* [ %base48.us, %cond.true46.us ], [ null, %if.end36.us ], !dbg !3518
  %call52.us = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond51.us) #8, !dbg !3518
  %cmp53.us = icmp eq i32 %call52.us, 0, !dbg !3520
  br i1 %cmp53.us, label %cleanup128.loopexit.us-lcssa.us, label %if.end56.us, !dbg !3521

if.end56.us:                                      ; preds = %cond.end50.us
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs44.us, align 8, !dbg !3522
  %tobool58.us = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !3522
  br i1 %tobool58.us, label %cond.end63.us, label %cond.true59.us, !dbg !3522

cond.true59.us:                                   ; preds = %if.end56.us
  %base61.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !3522
  br label %cond.end63.us, !dbg !3522

cond.end63.us:                                    ; preds = %cond.true59.us, %if.end56.us
  %cond64.us = phi %struct.VEC_edge_base* [ %base61.us, %cond.true59.us ], [ null, %if.end56.us ], !dbg !3522
  %call65.us = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond64.us, i32 0) #8, !dbg !3522
  call void @llvm.dbg.value(metadata %struct.edge_def* %call65.us, metadata !3485, metadata !DIExpression()), !dbg !3497
  %dest66.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call65.us, i64 0, i32 1, !dbg !3523
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest66.us, align 8, !dbg !3523
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %5, metadata !3486, metadata !DIExpression()), !dbg !3497
  br label %while.cond.backedge.us, !dbg !3514

if.then16.us:                                     ; preds = %while.cond.us
  %call17.us = tail call fastcc zeroext i8 @sel_bb_empty_or_nop_p(%struct.basic_block_def* %bb.0.us) #8, !dbg !3524
  %tobool18.us = icmp eq i8 %call17.us, 0, !dbg !3524
  br i1 %tobool18.us, label %cleanup.us, label %if.end20.us, !dbg !3526

if.end20.us:                                      ; preds = %if.then16.us
  %succs.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0.us, i64 0, i32 1, !dbg !3527
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs.us, align 8, !dbg !3527
  %tobool21.us = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !3527
  br i1 %tobool21.us, label %cond.end25.us, label %cond.true22.us, !dbg !3527

cond.true22.us:                                   ; preds = %if.end20.us
  %base.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !3527
  br label %cond.end25.us, !dbg !3527

cond.end25.us:                                    ; preds = %cond.true22.us, %if.end20.us
  %cond26.us = phi %struct.VEC_edge_base* [ %base.us, %cond.true22.us ], [ null, %if.end20.us ], !dbg !3527
  %call27.us = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond26.us, i32 0) #8, !dbg !3527
  call void @llvm.dbg.value(metadata %struct.edge_def* %call27.us, metadata !3489, metadata !DIExpression()), !dbg !3528
  %dest28.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call27.us, i64 0, i32 1, !dbg !3529
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %dest28.us, align 8, !dbg !3529
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %7, metadata !3493, metadata !DIExpression()), !dbg !3528
  %call29.us = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %7) #8, !dbg !3530
  br label %cleanup.us, !dbg !3532

cleanup.us:                                       ; preds = %cond.end25.us, %if.then16.us
  %e2.1.us = phi %struct.edge_def* [ %e2.0.us, %if.then16.us ], [ %call27.us, %cond.end25.us ], !dbg !3497
  %bb.1.us = phi %struct.basic_block_def* [ %bb.0.us, %if.then16.us ], [ %7, %cond.end25.us ], !dbg !3497
  %cleanup.dest.slot.0.us = phi i1 [ true, %if.then16.us ], [ false, %cond.end25.us ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.us, metadata !3486, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1.us, metadata !3485, metadata !DIExpression()), !dbg !3497
  br i1 %cleanup.dest.slot.0.us, label %while.end.us-lcssa.us, label %while.cond.backedge.us

while.cond.backedge.us:                           ; preds = %cleanup.us, %cond.end63.us
  %e2.0.be.us = phi %struct.edge_def* [ %call65.us, %cond.end63.us ], [ %e2.1.us, %cleanup.us ]
  %bb.0.be.us = phi %struct.basic_block_def* [ %5, %cond.end63.us ], [ %bb.1.us, %cleanup.us ]
  br label %while.cond.us, !dbg !3497, !llvm.loop !3533

cleanup128.loopexit.us-lcssa.us:                  ; preds = %cond.end50.us
  br label %cleanup128.loopexit, !dbg !3535

while.end.us-lcssa.us:                            ; preds = %cleanup.us
  %e2.1.us.lcssa = phi %struct.edge_def* [ %e2.1.us, %cleanup.us ], !dbg !3497
  %bb.1.us.lcssa = phi %struct.basic_block_def* [ %bb.1.us, %cleanup.us ], !dbg !3497
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1.us.lcssa, metadata !3485, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.us.lcssa, metadata !3486, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1.us.lcssa, metadata !3485, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.us.lcssa, metadata !3486, metadata !DIExpression()), !dbg !3497
  br label %while.end, !dbg !3536

while.cond:                                       ; preds = %while.cond.backedge, %if.end13.if.end13.split_crit_edge
  %e2.0 = phi %struct.edge_def* [ %e1, %if.end13.if.end13.split_crit_edge ], [ %e2.0.be, %while.cond.backedge ], !dbg !3497
  %bb.0 = phi %struct.basic_block_def* [ %2, %if.end13.if.end13.split_crit_edge ], [ %bb.0.be, %while.cond.backedge ], !dbg !3497
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3486, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.0, metadata !3485, metadata !DIExpression()), !dbg !3497
  %call14 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %bb.0) #8, !dbg !3515
  %tobool15 = icmp eq i8 %call14, 0, !dbg !3515
  br i1 %tobool15, label %if.then16, label %if.end36, !dbg !3516

if.then16:                                        ; preds = %while.cond
  %call17 = tail call fastcc zeroext i8 @sel_bb_empty_or_nop_p(%struct.basic_block_def* %bb.0) #8, !dbg !3524
  %tobool18 = icmp eq i8 %call17, 0, !dbg !3524
  br i1 %tobool18, label %cleanup, label %if.end20, !dbg !3526

if.end20:                                         ; preds = %if.then16
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !3527
  %8 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3527
  %tobool21 = icmp eq %struct.VEC_edge_gc* %8, null, !dbg !3527
  br i1 %tobool21, label %cond.end25, label %cond.true22, !dbg !3527

cond.true22:                                      ; preds = %if.end20
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %8, i64 0, i32 0, !dbg !3527
  br label %cond.end25, !dbg !3527

cond.end25:                                       ; preds = %if.end20, %cond.true22
  %cond26 = phi %struct.VEC_edge_base* [ %base, %cond.true22 ], [ null, %if.end20 ], !dbg !3527
  %call27 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond26, i32 0) #8, !dbg !3527
  call void @llvm.dbg.value(metadata %struct.edge_def* %call27, metadata !3489, metadata !DIExpression()), !dbg !3528
  %dest28 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call27, i64 0, i32 1, !dbg !3529
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest28, align 8, !dbg !3529
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !3493, metadata !DIExpression()), !dbg !3528
  %call29 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %9) #8, !dbg !3530
  %tobool30 = icmp ne i8 %call29, 0, !dbg !3530
  %spec.select = select i1 %tobool30, %struct.edge_def* %call27, %struct.edge_def* %e2.0, !dbg !3532
  %spec.select3 = select i1 %tobool30, %struct.basic_block_def* %9, %struct.basic_block_def* %bb.0, !dbg !3532
  %spec.select4 = select i1 %tobool30, i32 2, i32 3, !dbg !3532
  br label %cleanup, !dbg !3532

cleanup:                                          ; preds = %if.then16, %cond.end25
  %e2.1 = phi %struct.edge_def* [ %e2.0, %if.then16 ], [ %spec.select, %cond.end25 ], !dbg !3497
  %bb.1 = phi %struct.basic_block_def* [ %bb.0, %if.then16 ], [ %spec.select3, %cond.end25 ], !dbg !3497
  %cleanup.dest.slot.0 = phi i32 [ 3, %if.then16 ], [ %spec.select4, %cond.end25 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !3486, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1, metadata !3485, metadata !DIExpression()), !dbg !3497
  %switch = icmp eq i32 %cleanup.dest.slot.0, 3
  br i1 %switch, label %while.end.us-lcssa, label %while.cond.backedge

if.end36:                                         ; preds = %while.cond
  %call37 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %bb.0) #8, !dbg !3517
  %tobool38 = icmp eq i8 %call37, 0, !dbg !3517
  br i1 %tobool38, label %cleanup128.loopexit.us-lcssa, label %if.end43, !dbg !3537

if.end43:                                         ; preds = %if.end36
  %succs44 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !3518
  %10 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs44, align 8, !dbg !3518
  %tobool45 = icmp eq %struct.VEC_edge_gc* %10, null, !dbg !3518
  br i1 %tobool45, label %cond.end50, label %cond.true46, !dbg !3518

cond.true46:                                      ; preds = %if.end43
  %base48 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %10, i64 0, i32 0, !dbg !3518
  br label %cond.end50, !dbg !3518

cond.end50:                                       ; preds = %if.end43, %cond.true46
  %cond51 = phi %struct.VEC_edge_base* [ %base48, %cond.true46 ], [ null, %if.end43 ], !dbg !3518
  %call52 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond51) #8, !dbg !3518
  %cmp53 = icmp eq i32 %call52, 0, !dbg !3520
  br i1 %cmp53, label %cleanup128.loopexit.us-lcssa, label %if.end56, !dbg !3521

if.end56:                                         ; preds = %cond.end50
  %11 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs44, align 8, !dbg !3522
  %tobool58 = icmp eq %struct.VEC_edge_gc* %11, null, !dbg !3522
  br i1 %tobool58, label %cond.end63, label %cond.true59, !dbg !3522

cond.true59:                                      ; preds = %if.end56
  %base61 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %11, i64 0, i32 0, !dbg !3522
  br label %cond.end63, !dbg !3522

cond.end63:                                       ; preds = %if.end56, %cond.true59
  %cond64 = phi %struct.VEC_edge_base* [ %base61, %cond.true59 ], [ null, %if.end56 ], !dbg !3522
  %call65 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond64, i32 0) #8, !dbg !3522
  call void @llvm.dbg.value(metadata %struct.edge_def* %call65, metadata !3485, metadata !DIExpression()), !dbg !3497
  %dest66 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call65, i64 0, i32 1, !dbg !3523
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest66, align 8, !dbg !3523
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !3486, metadata !DIExpression()), !dbg !3497
  br label %while.cond.backedge, !dbg !3514

while.cond.backedge:                              ; preds = %cond.end63, %cleanup
  %e2.0.be = phi %struct.edge_def* [ %call65, %cond.end63 ], [ %e2.1, %cleanup ]
  %bb.0.be = phi %struct.basic_block_def* [ %12, %cond.end63 ], [ %bb.1, %cleanup ]
  br label %while.cond, !dbg !3497, !llvm.loop !3533

while.end.us-lcssa:                               ; preds = %cleanup
  %e2.1.lcssa8 = phi %struct.edge_def* [ %e2.1, %cleanup ], !dbg !3497
  %bb.1.lcssa7 = phi %struct.basic_block_def* [ %bb.1, %cleanup ], !dbg !3497
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1.lcssa8, metadata !3485, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.lcssa7, metadata !3486, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1.lcssa8, metadata !3485, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.lcssa7, metadata !3486, metadata !DIExpression()), !dbg !3497
  br label %while.end, !dbg !3536

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %e2.1.lcssa = phi %struct.edge_def* [ %e2.1.lcssa8, %while.end.us-lcssa ], [ %e2.1.us.lcssa, %while.end.us-lcssa.us ], !dbg !3497
  %bb.1.lcssa = phi %struct.basic_block_def* [ %bb.1.lcssa7, %while.end.us-lcssa ], [ %bb.1.us.lcssa, %while.end.us-lcssa.us ], !dbg !3497
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1.lcssa, metadata !3485, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.lcssa, metadata !3486, metadata !DIExpression()), !dbg !3497
  %e267 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 2, !dbg !3536
  store %struct.edge_def* %e2.1.lcssa, %struct.edge_def** %e267, align 8, !dbg !3538
  %call68 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %bb.1.lcssa) #8, !dbg !3539
  %tobool69 = icmp eq i8 %call68, 0, !dbg !3539
  br i1 %tobool69, label %if.end119, label %if.then70, !dbg !3540

if.then70:                                        ; preds = %while.end
  %13 = load i32*, i32** @block_to_bb, align 8, !dbg !3541
  %bb71 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 4, !dbg !3541
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %bb71, align 8, !dbg !3541
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i64 0, i32 9, !dbg !3541
  %15 = load i32, i32* %index, align 8, !dbg !3541
  %idxprom = sext i32 %15 to i64, !dbg !3541
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !3541
  %16 = load i32, i32* %arrayidx, align 4, !dbg !3541
  %index72 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1.lcssa, i64 0, i32 9, !dbg !3542
  %17 = load i32, i32* %index72, align 8, !dbg !3542
  %idxprom73 = sext i32 %17 to i64, !dbg !3542
  %arrayidx74 = getelementptr inbounds i32, i32* %13, i64 %idxprom73, !dbg !3542
  %18 = load i32, i32* %arrayidx74, align 4, !dbg !3542
  %cmp75 = icmp slt i32 %16, %18, !dbg !3543
  call void @llvm.dbg.value(metadata i1 %cmp75, metadata !3494, metadata !DIExpression()), !dbg !3544
  %current_flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 6, !dbg !3545
  store i16 1, i16* %current_flags, align 2, !dbg !3546
  br i1 %cmp75, label %if.then79, label %if.end93, !dbg !3547

if.then79:                                        ; preds = %if.then70
  %tobool80 = xor i1 %tobool, true, !dbg !3548
  %19 = load i32, i32* @flag_sel_sched_pipelining_outer_loops, align 4, !dbg !3548
  %tobool81 = icmp ne i32 %19, 0, !dbg !3548
  %or.cond2 = or i1 %tobool81, %tobool80, !dbg !3548
  br i1 %or.cond2, label %cond.end84, label %cond.true82, !dbg !3548

cond.true82:                                      ; preds = %if.then79
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 1431, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3548
  br label %cond.end84, !dbg !3548

cond.end84:                                       ; preds = %if.then79, %cond.true82
  %20 = trunc i16 %0 to i8, !dbg !3551
  %21 = and i8 %20, 1, !dbg !3551
  br label %cleanup128, !dbg !3552

if.end93:                                         ; preds = %if.then70
  %22 = load i8, i8* @pipelining_p, align 1, !dbg !3553
  %tobool95 = icmp eq i8 %22, 0, !dbg !3553
  br i1 %tobool95, label %if.end109, label %land.lhs.true96, !dbg !3555

land.lhs.true96:                                  ; preds = %if.end93
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3556
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 3, !dbg !3557
  %24 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !3557
  %loop_father98 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1.lcssa, i64 0, i32 3, !dbg !3558
  %25 = load %struct.loop*, %struct.loop** %loop_father98, align 8, !dbg !3558
  %cmp99 = icmp eq %struct.loop* %24, %25, !dbg !3559
  br i1 %cmp99, label %if.then101, label %if.end109, !dbg !3560

if.then101:                                       ; preds = %land.lhs.true96
  %26 = trunc i16 %0 to i8, !dbg !3561
  %27 = and i8 %26, 1, !dbg !3561
  br label %cleanup128, !dbg !3562

if.end109:                                        ; preds = %if.end93, %land.lhs.true96
  store i16 2, i16* %current_flags, align 2, !dbg !3563
  %and111 = lshr i32 %conv, 1, !dbg !3564
  %28 = trunc i32 %and111 to i8, !dbg !3564
  %29 = and i8 %28, 1, !dbg !3564
  br label %cleanup128, !dbg !3565

if.end119:                                        ; preds = %while.end
  %current_flags120 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 6, !dbg !3566
  store i16 4, i16* %current_flags120, align 2, !dbg !3567
  %and121 = lshr i32 %conv, 2, !dbg !3568
  %30 = trunc i32 %and121 to i8, !dbg !3568
  %31 = and i8 %30, 1, !dbg !3568
  br label %cleanup128, !dbg !3569

cleanup128.loopexit.us-lcssa:                     ; preds = %if.end36, %cond.end50
  br label %cleanup128.loopexit, !dbg !3535

cleanup128.loopexit:                              ; preds = %cleanup128.loopexit.us-lcssa.us, %cleanup128.loopexit.us-lcssa
  br label %cleanup128, !dbg !3535

cleanup128:                                       ; preds = %cleanup128.loopexit, %cond.end8, %cond.end84, %if.then101, %if.end109, %if.end119
  %retval.1 = phi i8 [ %31, %if.end119 ], [ 0, %cond.end8 ], [ %21, %cond.end84 ], [ %27, %if.then101 ], [ %29, %if.end109 ], [ 0, %cleanup128.loopexit ], !dbg !3497
  ret i8 %retval.1, !dbg !3535
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @flist_add(%struct._list_node** %lp, %struct.rtx_def* %insn, i8* %state, %struct.deps* %dc, i8* %tc, %struct.rtx_def* %last_scheduled_insn, %struct.VEC_rtx_gc* %executing_insns, i32* %ready_ticks, i32 %ready_ticks_size, %struct.rtx_def* %sched_next, i32 %cycle, i32 %cycle_issued_insns, i32 %issue_more, i8 zeroext %starts_cycle_p, i8 zeroext %after_stall_p) unnamed_addr #5 !dbg !3570 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !3574, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3575, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i8* %state, metadata !3576, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata %struct.deps* %dc, metadata !3577, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i8* %tc, metadata !3578, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_scheduled_insn, metadata !3579, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc* %executing_insns, metadata !3580, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i32* %ready_ticks, metadata !3581, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i32 %ready_ticks_size, metadata !3582, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata %struct.rtx_def* %sched_next, metadata !3583, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i32 %cycle, metadata !3584, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i32 %cycle_issued_insns, metadata !3585, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i32 %issue_more, metadata !3586, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i8 %starts_cycle_p, metadata !3587, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i8 %after_stall_p, metadata !3588, metadata !DIExpression()), !dbg !3590
  tail call fastcc void @_list_add(%struct._list_node** %lp) #8, !dbg !3591
  %0 = load %struct._list_node*, %struct._list_node** %lp, align 8, !dbg !3592
  %fence = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, !dbg !3592
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !3589, metadata !DIExpression()), !dbg !3590
  %insn1 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 0, !dbg !3593
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn1, align 8, !dbg !3594
  %cmp = icmp eq i8* %state, null, !dbg !3595
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3595

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 275, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3595
  br label %cond.end, !dbg !3595

cond.end:                                         ; preds = %entry, %cond.true
  %state2 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 1, !dbg !3596
  store i8* %state, i8** %state2, align 8, !dbg !3597
  %cycle3 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 2, !dbg !3598
  store i32 %cycle, i32* %cycle3, align 8, !dbg !3599
  %cycle_issued_insns4 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 3, !dbg !3600
  store i32 %cycle_issued_insns, i32* %cycle_issued_insns4, align 4, !dbg !3601
  %starts_cycle_p5 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 13, !dbg !3602
  %bf.load = load i8, i8* %starts_cycle_p5, align 8, !dbg !3603
  %bf.value = shl i8 %starts_cycle_p, 2, !dbg !3603
  %bf.shl = and i8 %bf.value, 4, !dbg !3603
  %bf.clear = and i8 %bf.load, -13, !dbg !3603
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !3603
  %bf.value9 = shl i8 %after_stall_p, 3, !dbg !3604
  %bf.shl10 = and i8 %bf.value9, 8, !dbg !3604
  %bf.set12 = or i8 %bf.set, %bf.shl10, !dbg !3604
  store i8 %bf.set12, i8* %starts_cycle_p5, align 8, !dbg !3604
  %cmp14 = icmp eq %struct.deps* %dc, null, !dbg !3605
  br i1 %cmp14, label %cond.true16, label %cond.end18, !dbg !3605

cond.true16:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 283, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3605
  br label %cond.end18, !dbg !3605

cond.end18:                                       ; preds = %cond.end, %cond.true16
  %dc20 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 5, !dbg !3606
  store %struct.deps* %dc, %struct.deps** %dc20, align 8, !dbg !3607
  %cmp21 = icmp ne i8* %tc, null, !dbg !3608
  %1 = load i8* ()*, i8* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 23), align 8, !dbg !3608
  %cmp23 = icmp eq i8* ()* %1, null, !dbg !3608
  %or.cond = or i1 %cmp21, %cmp23, !dbg !3608
  br i1 %or.cond, label %cond.end27, label %cond.true25, !dbg !3608

cond.true25:                                      ; preds = %cond.end18
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 286, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3608
  br label %cond.end27, !dbg !3608

cond.end27:                                       ; preds = %cond.end18, %cond.true25
  %tc29 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 6, !dbg !3609
  store i8* %tc, i8** %tc29, align 8, !dbg !3610
  %last_scheduled_insn30 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 10, !dbg !3611
  store %struct.rtx_def* %last_scheduled_insn, %struct.rtx_def** %last_scheduled_insn30, align 8, !dbg !3612
  %issue_more31 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 11, !dbg !3613
  store i32 %issue_more, i32* %issue_more31, align 8, !dbg !3614
  %executing_insns32 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 7, !dbg !3615
  store %struct.VEC_rtx_gc* %executing_insns, %struct.VEC_rtx_gc** %executing_insns32, align 8, !dbg !3616
  %ready_ticks33 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 8, !dbg !3617
  store i32* %ready_ticks, i32** %ready_ticks33, align 8, !dbg !3618
  %ready_ticks_size34 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 9, !dbg !3619
  store i32 %ready_ticks_size, i32* %ready_ticks_size34, align 8, !dbg !3620
  %sched_next35 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 12, !dbg !3621
  store %struct.rtx_def* %sched_next, %struct.rtx_def** %sched_next35, align 8, !dbg !3622
  tail call fastcc void @init_fence_for_scheduling(%struct._fence* nonnull %fence) #8, !dbg !3623
  ret void, !dbg !3624
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @state_create() unnamed_addr #5 !dbg !3625 {
entry:
  %call = tail call fastcc i8* @state_alloc() #8, !dbg !3630
  call void @llvm.dbg.value(metadata i8* %call, metadata !3629, metadata !DIExpression()), !dbg !3631
  tail call void @state_reset(i8* %call) #6, !dbg !3632
  tail call void @advance_state(i8* %call) #6, !dbg !3633
  ret i8* %call, !dbg !3634
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.deps* @create_deps_context() unnamed_addr #5 !dbg !3635 {
entry:
  %call = tail call fastcc %struct.deps* @alloc_deps_context() #8, !dbg !3640
  call void @llvm.dbg.value(metadata %struct.deps* %call, metadata !3639, metadata !DIExpression()), !dbg !3641
  tail call void @init_deps(%struct.deps* %call, i8 zeroext 0) #6, !dbg !3642
  ret %struct.deps* %call, !dbg !3643
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_succ_iter_next(%struct.succ_iterator* %ip) unnamed_addr #0 !dbg !3644 {
entry:
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %ip, metadata !3648, metadata !DIExpression()), !dbg !3649
  %e2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 2, !dbg !3650
  %0 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !3650
  %tobool = icmp eq %struct.edge_def* %0, null, !dbg !3650
  br i1 %tobool, label %cond.end, label %lor.lhs.false, !dbg !3650

lor.lhs.false:                                    ; preds = %entry
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 1, !dbg !3650
  %1 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !3650
  %tobool1 = icmp eq %struct.edge_def* %1, null, !dbg !3650
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !3650

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 1345, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3650
  br label %cond.end, !dbg !3650

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  %bb_end = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 0, !dbg !3651
  %2 = load i8, i8* %bb_end, align 8, !dbg !3651
  %tobool2 = icmp eq i8 %2, 0, !dbg !3653
  br i1 %tobool2, label %if.end, label %land.lhs.true, !dbg !3654

land.lhs.true:                                    ; preds = %cond.end
  %e13 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 1, !dbg !3655
  %3 = load %struct.edge_def*, %struct.edge_def** %e13, align 8, !dbg !3655
  %tobool4 = icmp eq %struct.edge_def* %3, null, !dbg !3656
  br i1 %tobool4, label %if.end, label %land.lhs.true5, !dbg !3657

land.lhs.true5:                                   ; preds = %land.lhs.true
  %loop_exits = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 8, !dbg !3658
  %4 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !3658
  %tobool6 = icmp eq %struct.VEC_edge_heap* %4, null, !dbg !3659
  br i1 %tobool6, label %if.then, label %if.end, !dbg !3660

if.then:                                          ; preds = %land.lhs.true5
  %ei = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 3, !dbg !3661
  tail call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !3662
  br label %if.end, !dbg !3662

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true, %cond.end, %if.then
  ret void, !dbg !3663
}

; Function Attrs: nounwind uwtable
define dso_local void @move_fence_to_fences(%struct._list_node* %old_fences, %struct.flist_tail_def* %new_fences) local_unnamed_addr #5 !dbg !3664 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node* %old_fences, metadata !3668, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata %struct.flist_tail_def* %new_fences, metadata !3669, metadata !DIExpression()), !dbg !3673
  %tailp1 = getelementptr inbounds %struct.flist_tail_def, %struct.flist_tail_def* %new_fences, i64 0, i32 1, !dbg !3674
  %0 = load %struct._list_node**, %struct._list_node*** %tailp1, align 8, !dbg !3674
  call void @llvm.dbg.value(metadata %struct._list_node** %0, metadata !3672, metadata !DIExpression()), !dbg !3673
  %fence = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, !dbg !3675
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !3671, metadata !DIExpression()), !dbg !3673
  %head = getelementptr inbounds %struct.flist_tail_def, %struct.flist_tail_def* %new_fences, i64 0, i32 0, !dbg !3676
  %1 = load %struct._list_node*, %struct._list_node** %head, align 8, !dbg !3676
  %insn = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 0, !dbg !3677
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3677
  %call = tail call %struct._fence* @flist_lookup(%struct._list_node* %1, %struct.rtx_def* %2) #8, !dbg !3678
  call void @llvm.dbg.value(metadata %struct._fence* %call, metadata !3670, metadata !DIExpression()), !dbg !3673
  %tobool = icmp eq %struct._fence* %call, null, !dbg !3679
  br i1 %tobool, label %if.else, label %if.then, !dbg !3681

if.then:                                          ; preds = %entry
  %insn4 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 0, !dbg !3682
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn4, align 8, !dbg !3682
  %state = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 1, !dbg !3684
  %4 = load i8*, i8** %state, align 8, !dbg !3684
  %dc = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 5, !dbg !3685
  %5 = load %struct.deps*, %struct.deps** %dc, align 8, !dbg !3685
  %tc = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 6, !dbg !3686
  %6 = load i8*, i8** %tc, align 8, !dbg !3686
  %last_scheduled_insn = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 10, !dbg !3687
  %7 = load %struct.rtx_def*, %struct.rtx_def** %last_scheduled_insn, align 8, !dbg !3687
  %executing_insns = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 7, !dbg !3688
  %8 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %executing_insns, align 8, !dbg !3688
  %ready_ticks = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 8, !dbg !3689
  %9 = load i32*, i32** %ready_ticks, align 8, !dbg !3689
  %ready_ticks_size = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 9, !dbg !3690
  %10 = load i32, i32* %ready_ticks_size, align 8, !dbg !3690
  %sched_next = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 12, !dbg !3691
  %11 = load %struct.rtx_def*, %struct.rtx_def** %sched_next, align 8, !dbg !3691
  %cycle = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 2, !dbg !3692
  %12 = load i32, i32* %cycle, align 8, !dbg !3692
  %issue_more = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 11, !dbg !3693
  %13 = load i32, i32* %issue_more, align 8, !dbg !3693
  %after_stall_p = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 13, !dbg !3694
  %bf.load = load i8, i8* %after_stall_p, align 8, !dbg !3694
  %bf.lshr = lshr i8 %bf.load, 3, !dbg !3694
  %bf.clear = and i8 %bf.lshr, 1, !dbg !3694
  tail call fastcc void @merge_fences(%struct._fence* nonnull %call, %struct.rtx_def* %3, i8* %4, %struct.deps* %5, i8* %6, %struct.rtx_def* %7, %struct.VEC_rtx_gc* %8, i32* %9, i32 %10, %struct.rtx_def* %11, i32 %12, i32 %13, i8 zeroext %bf.clear) #8, !dbg !3695
  br label %if.end, !dbg !3696

if.else:                                          ; preds = %entry
  tail call fastcc void @_list_add(%struct._list_node** %0) #8, !dbg !3697
  %14 = load %struct._list_node*, %struct._list_node** %0, align 8, !dbg !3699
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %14, i64 0, i32 0, !dbg !3699
  store %struct._list_node** %next, %struct._list_node*** %tailp1, align 8, !dbg !3700
  %15 = load %struct._list_node*, %struct._list_node** %0, align 8, !dbg !3701
  %fence7 = getelementptr inbounds %struct._list_node, %struct._list_node* %15, i64 0, i32 1, i32 0, !dbg !3701
  %16 = bitcast %struct._fence* %fence7 to i8*, !dbg !3702
  %17 = bitcast %struct._fence* %fence to i8*, !dbg !3702
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %17, i64 104, i1 false), !dbg !3702
  %18 = load %struct._list_node*, %struct._list_node** %0, align 8, !dbg !3703
  %fence9 = getelementptr inbounds %struct._list_node, %struct._list_node* %18, i64 0, i32 1, i32 0, !dbg !3703
  tail call fastcc void @init_fence_for_scheduling(%struct._fence* nonnull %fence9) #8, !dbg !3704
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %insn10 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 0, !dbg !3705
  store %struct.rtx_def* null, %struct.rtx_def** %insn10, align 8, !dbg !3706
  ret void, !dbg !3707
}

; Function Attrs: nounwind uwtable
define internal fastcc void @merge_fences(%struct._fence* %f, %struct.rtx_def* %insn, i8* %state, %struct.deps* %dc, i8* %tc, %struct.rtx_def* %last_scheduled_insn, %struct.VEC_rtx_gc* %executing_insns, i32* %ready_ticks, i32 %ready_ticks_size, %struct.rtx_def* %sched_next, i32 %cycle, i32 %issue_more, i8 zeroext %after_stall_p) unnamed_addr #5 !dbg !3708 {
entry:
  %executing_insns.addr = alloca %struct.VEC_rtx_gc*, align 8
  %si = alloca %struct.succ_iterator, align 8
  %succ = alloca %struct.rtx_def*, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  %tmp142 = alloca %struct.succ_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._fence* %f, metadata !3712, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3713, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i8* %state, metadata !3714, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata %struct.deps* %dc, metadata !3715, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i8* %tc, metadata !3716, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_scheduled_insn, metadata !3717, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc* %executing_insns, metadata !3718, metadata !DIExpression()), !dbg !3733
  store %struct.VEC_rtx_gc* %executing_insns, %struct.VEC_rtx_gc** %executing_insns.addr, align 8
  call void @llvm.dbg.value(metadata i32* %ready_ticks, metadata !3719, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i32 %ready_ticks_size, metadata !3720, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata %struct.rtx_def* %sched_next, metadata !3721, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i32 %cycle, metadata !3722, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i32 %issue_more, metadata !3723, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i8 %after_stall_p, metadata !3724, metadata !DIExpression()), !dbg !3733
  %last_scheduled_insn1 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 10, !dbg !3734
  %0 = load %struct.rtx_def*, %struct.rtx_def** %last_scheduled_insn1, align 8, !dbg !3734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !3725, metadata !DIExpression()), !dbg !3733
  %insn2 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 0, !dbg !3735
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn2, align 8, !dbg !3735
  %call = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %1) #8, !dbg !3735
  %tobool = icmp eq i8 %call, 0, !dbg !3735
  %tobool3 = icmp ne %struct.rtx_def* %sched_next, null, !dbg !3735
  %or.cond = or i1 %tobool, %tobool3, !dbg !3735
  br i1 %or.cond, label %cond.true, label %land.lhs.true4, !dbg !3735

land.lhs.true4:                                   ; preds = %entry
  %sched_next5 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 12, !dbg !3735
  %2 = load %struct.rtx_def*, %struct.rtx_def** %sched_next5, align 8, !dbg !3735
  %tobool6 = icmp eq %struct.rtx_def* %2, null, !dbg !3735
  br i1 %tobool6, label %cond.end, label %cond.true, !dbg !3735

cond.true:                                        ; preds = %land.lhs.true4, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 646, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3735
  br label %cond.end, !dbg !3735

cond.end:                                         ; preds = %land.lhs.true4, %cond.true
  %cmp = icmp eq %struct.rtx_def* %last_scheduled_insn, null, !dbg !3736
  %cmp8 = icmp eq %struct.rtx_def* %0, null, !dbg !3737
  %or.cond1 = or i1 %cmp, %cmp8, !dbg !3738
  %cmp11 = icmp eq %struct.rtx_def* %0, %last_scheduled_insn, !dbg !3739
  %or.cond2 = or i1 %or.cond1, %cmp11, !dbg !3738
  br i1 %or.cond2, label %if.then, label %if.else, !dbg !3738

if.then:                                          ; preds = %cond.end
  %state13 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 1, !dbg !3740
  %3 = load i8*, i8** %state13, align 8, !dbg !3740
  tail call void @state_reset(i8* %3) #6, !dbg !3742
  tail call fastcc void @state_free(i8* %state) #8, !dbg !3743
  %dc14 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 5, !dbg !3744
  %4 = load %struct.deps*, %struct.deps** %dc14, align 8, !dbg !3744
  tail call fastcc void @reset_deps_context(%struct.deps* %4) #8, !dbg !3745
  tail call fastcc void @delete_deps_context(%struct.deps* %dc) #8, !dbg !3746
  %tc15 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 6, !dbg !3747
  %5 = load i8*, i8** %tc15, align 8, !dbg !3747
  tail call void @reset_target_context(i8* %5, i8 zeroext 1) #8, !dbg !3748
  tail call fastcc void @delete_target_context(i8* %tc) #8, !dbg !3749
  %cycle16 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 2, !dbg !3750
  %6 = load i32, i32* %cycle16, align 8, !dbg !3750
  %cmp17 = icmp slt i32 %6, %cycle, !dbg !3752
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !3753

if.then19:                                        ; preds = %if.then
  store i32 %cycle, i32* %cycle16, align 8, !dbg !3754
  br label %if.end, !dbg !3755

if.end:                                           ; preds = %if.then19, %if.then
  store %struct.rtx_def* null, %struct.rtx_def** %last_scheduled_insn1, align 8, !dbg !3756
  %7 = load i32, i32* @issue_rate, align 4, !dbg !3757
  %issue_more22 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 11, !dbg !3758
  store i32 %7, i32* %issue_more22, align 8, !dbg !3759
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** %executing_insns.addr, metadata !3718, metadata !DIExpression(DW_OP_deref)), !dbg !3733
  call fastcc void @VEC_rtx_gc_free(%struct.VEC_rtx_gc** nonnull %executing_insns.addr) #8, !dbg !3760
  %8 = bitcast i32* %ready_ticks to i8*, !dbg !3761
  call void @free(i8* %8) #6, !dbg !3762
  %executing_insns23 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 7, !dbg !3763
  %9 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %executing_insns23, align 8, !dbg !3763
  %tobool24 = icmp eq %struct.VEC_rtx_gc* %9, null, !dbg !3763
  br i1 %tobool24, label %if.end42, label %if.then25, !dbg !3765

if.then25:                                        ; preds = %if.end
  br i1 false, label %if.then25.cond.end31_crit_edge, label %cond.true28, !dbg !3766

if.then25.cond.end31_crit_edge:                   ; preds = %if.then25
  br label %cond.end31, !dbg !3766

cond.true28:                                      ; preds = %if.then25
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %9, i64 0, i32 0, !dbg !3766
  br label %cond.end31, !dbg !3766

cond.end31:                                       ; preds = %if.then25.cond.end31_crit_edge, %cond.true28
  %cond32 = phi %struct.VEC_rtx_base* [ %base, %cond.true28 ], [ undef, %if.then25.cond.end31_crit_edge ], !dbg !3766
  br i1 false, label %cond.end31.cond.end39_crit_edge, label %cond.true35, !dbg !3766

cond.end31.cond.end39_crit_edge:                  ; preds = %cond.end31
  br label %cond.end39, !dbg !3766

cond.true35:                                      ; preds = %cond.end31
  %base37 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %9, i64 0, i32 0, !dbg !3766
  br label %cond.end39, !dbg !3766

cond.end39:                                       ; preds = %cond.end31.cond.end39_crit_edge, %cond.true35
  %cond40 = phi %struct.VEC_rtx_base* [ %base37, %cond.true35 ], [ undef, %cond.end31.cond.end39_crit_edge ], !dbg !3766
  %call41 = call fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %cond40) #8, !dbg !3766
  call fastcc void @VEC_rtx_base_block_remove(%struct.VEC_rtx_base* %cond32, i32 0, i32 %call41) #8, !dbg !3766
  br label %if.end42, !dbg !3766

if.end42:                                         ; preds = %if.end, %cond.end39
  %ready_ticks43 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 8, !dbg !3767
  %10 = load i32*, i32** %ready_ticks43, align 8, !dbg !3767
  %tobool44 = icmp eq i32* %10, null, !dbg !3767
  br i1 %tobool44, label %if.end220, label %if.then45, !dbg !3769

if.then45:                                        ; preds = %if.end42
  %11 = bitcast i32* %10 to i8*, !dbg !3769
  %ready_ticks_size47 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 9, !dbg !3770
  %12 = load i32, i32* %ready_ticks_size47, align 8, !dbg !3770
  %conv48 = sext i32 %12 to i64, !dbg !3770
  %call49 = call i8* @memset(i8* nonnull %11, i32 0, i64 %conv48) #6, !dbg !3771
  br label %if.end220, !dbg !3771

if.else:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !3726, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !3729, metadata !DIExpression()), !dbg !3772
  %13 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 0, !dbg !3773
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #7, !dbg !3773
  %14 = bitcast %struct.rtx_def** %succ to i8*, !dbg !3774
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7, !dbg !3774
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !3775
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !3775
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3775
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 5, !dbg !3775
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !3775
  %tobool51 = icmp eq %struct.basic_block_def* %16, null, !dbg !3775
  br i1 %tobool51, label %cond.true52, label %cond.end54, !dbg !3775

cond.true52:                                      ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 688, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3775
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3776
  %prev_bb60.phi.trans.insert = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pre, i64 0, i32 5, !dbg !3772
  %.pre4 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb60.phi.trans.insert, align 8, !dbg !3777
  br label %cond.end54, !dbg !3775

cond.end54:                                       ; preds = %if.else, %cond.true52
  %17 = phi %struct.basic_block_def* [ %16, %if.else ], [ %.pre4, %cond.true52 ], !dbg !3777
  %call61 = tail call %struct.edge_def* @find_fallthru_edge(%struct.basic_block_def* %17) #6, !dbg !3778
  call void @llvm.dbg.value(metadata %struct.edge_def* %call61, metadata !3730, metadata !DIExpression()), !dbg !3772
  %tobool62 = icmp eq %struct.edge_def* %call61, null, !dbg !3779
  br i1 %tobool62, label %if.then78, label %lor.lhs.false63, !dbg !3781

lor.lhs.false63:                                  ; preds = %cond.end54
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call61, i64 0, i32 0, !dbg !3782
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3782
  %arrayidx66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_scheduled_insn, i64 0, i32 1, i32 0, i32 1, !dbg !3783
  %rt_bb67 = bitcast %struct.object_block** %arrayidx66 to %struct.basic_block_def**, !dbg !3783
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb67, align 8, !dbg !3783
  %cmp68 = icmp eq %struct.basic_block_def* %18, %19, !dbg !3784
  br i1 %cmp68, label %if.else83, label %land.lhs.true70, !dbg !3785

land.lhs.true70:                                  ; preds = %lor.lhs.false63
  %arrayidx74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 1, !dbg !3786
  %rt_bb75 = bitcast %struct.object_block** %arrayidx74 to %struct.basic_block_def**, !dbg !3786
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb75, align 8, !dbg !3786
  %cmp76 = icmp eq %struct.basic_block_def* %18, %20, !dbg !3787
  br i1 %cmp76, label %if.else83, label %if.then78, !dbg !3788

if.then78:                                        ; preds = %land.lhs.true70, %cond.end54
  %state79 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 1, !dbg !3789
  %21 = load i8*, i8** %state79, align 8, !dbg !3789
  tail call void @state_reset(i8* %21) #6, !dbg !3791
  tail call fastcc void @state_free(i8* %state) #8, !dbg !3792
  %tc80 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 6, !dbg !3793
  %22 = load i8*, i8** %tc80, align 8, !dbg !3793
  tail call void @reset_target_context(i8* %22, i8 zeroext 1) #8, !dbg !3794
  tail call fastcc void @delete_target_context(i8* %tc) #8, !dbg !3795
  store %struct.rtx_def* null, %struct.rtx_def** %last_scheduled_insn1, align 8, !dbg !3796
  %23 = load i32, i32* @issue_rate, align 4, !dbg !3797
  %issue_more82 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 11, !dbg !3798
  store i32 %23, i32* %issue_more82, align 8, !dbg !3799
  br label %if.end130, !dbg !3800

if.else83:                                        ; preds = %land.lhs.true70, %lor.lhs.false63
  br i1 %cmp68, label %if.then91, label %if.else113, !dbg !3801

if.then91:                                        ; preds = %if.else83
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3802
  %prev_bb96 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i64 0, i32 5, !dbg !3802
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb96, align 8, !dbg !3802
  %arrayidx99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 1, !dbg !3802
  %rt_bb100 = bitcast %struct.object_block** %arrayidx99 to %struct.basic_block_def**, !dbg !3802
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb100, align 8, !dbg !3802
  %cmp101 = icmp eq %struct.basic_block_def* %25, %26, !dbg !3802
  br i1 %cmp101, label %cond.true103, label %cond.end105, !dbg !3802

cond.true103:                                     ; preds = %if.then91
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 711, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3802
  br label %cond.end105, !dbg !3802

cond.end105:                                      ; preds = %if.then91, %cond.true103
  %state107 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 1, !dbg !3805
  %27 = load i8*, i8** %state107, align 8, !dbg !3805
  tail call fastcc void @state_free(i8* %27) #8, !dbg !3806
  store i8* %state, i8** %state107, align 8, !dbg !3807
  %tc109 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 6, !dbg !3808
  %28 = load i8*, i8** %tc109, align 8, !dbg !3808
  tail call fastcc void @delete_target_context(i8* %28) #8, !dbg !3809
  store i8* %tc, i8** %tc109, align 8, !dbg !3810
  store %struct.rtx_def* %last_scheduled_insn, %struct.rtx_def** %last_scheduled_insn1, align 8, !dbg !3811
  %issue_more112 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 11, !dbg !3812
  store i32 %issue_more, i32* %issue_more112, align 8, !dbg !3813
  br label %if.end130, !dbg !3814

if.else113:                                       ; preds = %if.else83
  tail call fastcc void @state_free(i8* %state) #8, !dbg !3815
  tail call fastcc void @delete_target_context(i8* %tc) #8, !dbg !3817
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3818
  %prev_bb118 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i64 0, i32 5, !dbg !3818
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb118, align 8, !dbg !3818
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb67, align 8, !dbg !3818
  %cmp123 = icmp eq %struct.basic_block_def* %30, %31, !dbg !3818
  br i1 %cmp123, label %cond.true125, label %if.end130, !dbg !3818

cond.true125:                                     ; preds = %if.else113
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 729, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3818
  br label %if.end130, !dbg !3818

if.end130:                                        ; preds = %if.else113, %cond.end105, %cond.true125, %if.then78
  %32 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp, i64 0, i32 0, !dbg !3819
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %32) #7, !dbg !3819
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !3732, metadata !DIExpression(DW_OP_deref)), !dbg !3772
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %0, i32 9) #8, !dbg !3819
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %32, i64 64, i1 false), !dbg !3819
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %32) #7, !dbg !3819
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 1, !dbg !3821
  br label %for.cond, !dbg !3819

for.cond:                                         ; preds = %for.inc, %if.end130
  %edge_old.0 = phi %struct.edge_def* [ null, %if.end130 ], [ %edge_old.1, %for.inc ], !dbg !3772
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_old.0, metadata !3726, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !3731, metadata !DIExpression(DW_OP_deref)), !dbg !3772
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !3732, metadata !DIExpression(DW_OP_deref)), !dbg !3772
  %call131 = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %si, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %0, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #8, !dbg !3826
  %tobool132 = icmp eq i8 %call131, 0, !dbg !3819
  br i1 %tobool132, label %for.end, label %for.body, !dbg !3819

for.body:                                         ; preds = %for.cond
  %33 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !3827
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !3732, metadata !DIExpression()), !dbg !3772
  %cmp133 = icmp eq %struct.rtx_def* %33, %insn, !dbg !3828
  br i1 %cmp133, label %if.then135, label %for.inc, !dbg !3829

if.then135:                                       ; preds = %for.body
  %tobool136 = icmp eq %struct.edge_def* %edge_old.0, null, !dbg !3830
  br i1 %tobool136, label %cond.end139, label %cond.true137, !dbg !3830

cond.true137:                                     ; preds = %if.then135
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 739, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3830
  br label %cond.end139, !dbg !3830

cond.end139:                                      ; preds = %if.then135, %cond.true137
  %34 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !3831
  call void @llvm.dbg.value(metadata %struct.edge_def* %34, metadata !3726, metadata !DIExpression()), !dbg !3772
  br label %for.inc, !dbg !3832

for.inc:                                          ; preds = %for.body, %cond.end139
  %edge_old.1 = phi %struct.edge_def* [ %34, %cond.end139 ], [ %edge_old.0, %for.body ], !dbg !3772
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_old.1, metadata !3726, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !3731, metadata !DIExpression(DW_OP_deref)), !dbg !3772
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %si) #8, !dbg !3826
  br label %for.cond, !dbg !3826, !llvm.loop !3833

for.end:                                          ; preds = %for.cond
  %edge_old.0.lcssa = phi %struct.edge_def* [ %edge_old.0, %for.cond ], !dbg !3772
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_old.0.lcssa, metadata !3726, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_old.0.lcssa, metadata !3726, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_old.0.lcssa, metadata !3726, metadata !DIExpression()), !dbg !3772
  %35 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp142, i64 0, i32 0, !dbg !3835
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %35) #7, !dbg !3835
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !3732, metadata !DIExpression(DW_OP_deref)), !dbg !3772
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp142, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %last_scheduled_insn, i32 9) #8, !dbg !3835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %35, i64 64, i1 false), !dbg !3835
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %35) #7, !dbg !3835
  br label %for.cond143, !dbg !3835

for.cond143:                                      ; preds = %for.inc157, %for.end
  %edge_new.0 = phi %struct.edge_def* [ null, %for.end ], [ %edge_new.1, %for.inc157 ], !dbg !3772
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_new.0, metadata !3729, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !3731, metadata !DIExpression(DW_OP_deref)), !dbg !3772
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !3732, metadata !DIExpression(DW_OP_deref)), !dbg !3772
  %call144 = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %si, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %last_scheduled_insn, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #8, !dbg !3837
  %tobool145 = icmp eq i8 %call144, 0, !dbg !3835
  br i1 %tobool145, label %for.end158, label %for.body146, !dbg !3835

for.body146:                                      ; preds = %for.cond143
  %36 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !3839
  call void @llvm.dbg.value(metadata %struct.rtx_def* %36, metadata !3732, metadata !DIExpression()), !dbg !3772
  %cmp147 = icmp eq %struct.rtx_def* %36, %insn, !dbg !3842
  br i1 %cmp147, label %if.then149, label %for.inc157, !dbg !3843

if.then149:                                       ; preds = %for.body146
  %tobool150 = icmp eq %struct.edge_def* %edge_new.0, null, !dbg !3844
  br i1 %tobool150, label %cond.end153, label %cond.true151, !dbg !3844

cond.true151:                                     ; preds = %if.then149
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 750, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3844
  br label %cond.end153, !dbg !3844

cond.end153:                                      ; preds = %if.then149, %cond.true151
  %37 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !3846
  call void @llvm.dbg.value(metadata %struct.edge_def* %37, metadata !3729, metadata !DIExpression()), !dbg !3772
  br label %for.inc157, !dbg !3847

for.inc157:                                       ; preds = %for.body146, %cond.end153
  %edge_new.1 = phi %struct.edge_def* [ %37, %cond.end153 ], [ %edge_new.0, %for.body146 ], !dbg !3772
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_new.1, metadata !3729, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !3731, metadata !DIExpression(DW_OP_deref)), !dbg !3772
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %si) #8, !dbg !3837
  br label %for.cond143, !dbg !3837, !llvm.loop !3848

for.end158:                                       ; preds = %for.cond143
  %edge_new.0.lcssa = phi %struct.edge_def* [ %edge_new.0, %for.cond143 ], !dbg !3772
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_new.0.lcssa, metadata !3729, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_new.0.lcssa, metadata !3729, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_new.0.lcssa, metadata !3729, metadata !DIExpression()), !dbg !3772
  %cmp159 = icmp eq %struct.edge_def* %edge_old.0.lcssa, null, !dbg !3850
  %cmp162 = icmp eq %struct.edge_def* %edge_new.0.lcssa, null, !dbg !3852
  %or.cond3 = or i1 %cmp159, %cmp162, !dbg !3853
  br i1 %or.cond3, label %if.then164, label %if.else204, !dbg !3853

if.then164:                                       ; preds = %for.end158
  %dc165 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 5, !dbg !3854
  %38 = load %struct.deps*, %struct.deps** %dc165, align 8, !dbg !3854
  call fastcc void @reset_deps_context(%struct.deps* %38) #8, !dbg !3856
  call fastcc void @delete_deps_context(%struct.deps* %dc) #8, !dbg !3857
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** %executing_insns.addr, metadata !3718, metadata !DIExpression(DW_OP_deref)), !dbg !3733
  call fastcc void @VEC_rtx_gc_free(%struct.VEC_rtx_gc** nonnull %executing_insns.addr) #8, !dbg !3858
  %39 = bitcast i32* %ready_ticks to i8*, !dbg !3859
  call void @free(i8* %39) #6, !dbg !3860
  %cycle166 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 2, !dbg !3861
  %40 = load i32, i32* %cycle166, align 8, !dbg !3861
  %cmp167 = icmp sgt i32 %40, %cycle, !dbg !3861
  br i1 %cmp167, label %cond.true169, label %cond.end172, !dbg !3861

cond.true169:                                     ; preds = %if.then164
  br label %cond.end172, !dbg !3861

cond.end172:                                      ; preds = %if.then164, %cond.true169
  %cond173 = phi i32 [ %40, %cond.true169 ], [ %cycle, %if.then164 ], !dbg !3861
  store i32 %cond173, i32* %cycle166, align 8, !dbg !3862
  %executing_insns175 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 7, !dbg !3863
  %41 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %executing_insns175, align 8, !dbg !3863
  %tobool176 = icmp eq %struct.VEC_rtx_gc* %41, null, !dbg !3863
  br i1 %tobool176, label %if.end195, label %if.then177, !dbg !3865

if.then177:                                       ; preds = %cond.end172
  br i1 false, label %if.then177.cond.end184_crit_edge, label %cond.true180, !dbg !3866

if.then177.cond.end184_crit_edge:                 ; preds = %if.then177
  br label %cond.end184, !dbg !3866

cond.true180:                                     ; preds = %if.then177
  %base182 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %41, i64 0, i32 0, !dbg !3866
  br label %cond.end184, !dbg !3866

cond.end184:                                      ; preds = %if.then177.cond.end184_crit_edge, %cond.true180
  %cond185 = phi %struct.VEC_rtx_base* [ %base182, %cond.true180 ], [ undef, %if.then177.cond.end184_crit_edge ], !dbg !3866
  br i1 false, label %cond.end184.cond.end192_crit_edge, label %cond.true188, !dbg !3866

cond.end184.cond.end192_crit_edge:                ; preds = %cond.end184
  br label %cond.end192, !dbg !3866

cond.true188:                                     ; preds = %cond.end184
  %base190 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %41, i64 0, i32 0, !dbg !3866
  br label %cond.end192, !dbg !3866

cond.end192:                                      ; preds = %cond.end184.cond.end192_crit_edge, %cond.true188
  %cond193 = phi %struct.VEC_rtx_base* [ %base190, %cond.true188 ], [ undef, %cond.end184.cond.end192_crit_edge ], !dbg !3866
  %call194 = call fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %cond193) #8, !dbg !3866
  call fastcc void @VEC_rtx_base_block_remove(%struct.VEC_rtx_base* %cond185, i32 0, i32 %call194) #8, !dbg !3866
  br label %if.end195, !dbg !3866

if.end195:                                        ; preds = %cond.end172, %cond.end192
  %ready_ticks196 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 8, !dbg !3867
  %42 = load i32*, i32** %ready_ticks196, align 8, !dbg !3867
  %tobool197 = icmp eq i32* %42, null, !dbg !3867
  br i1 %tobool197, label %if.end219, label %if.then198, !dbg !3869

if.then198:                                       ; preds = %if.end195
  %43 = bitcast i32* %42 to i8*, !dbg !3869
  %ready_ticks_size200 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 9, !dbg !3870
  %44 = load i32, i32* %ready_ticks_size200, align 8, !dbg !3870
  %conv201 = sext i32 %44 to i64, !dbg !3870
  %call202 = call i8* @memset(i8* nonnull %43, i32 0, i64 %conv201) #6, !dbg !3871
  br label %if.end219, !dbg !3871

if.else204:                                       ; preds = %for.end158
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_new.0.lcssa, i64 0, i32 8, !dbg !3872
  %45 = load i32, i32* %probability, align 4, !dbg !3872
  %probability205 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_old.0.lcssa, i64 0, i32 8, !dbg !3874
  %46 = load i32, i32* %probability205, align 4, !dbg !3874
  %cmp206 = icmp sgt i32 %45, %46, !dbg !3875
  br i1 %cmp206, label %if.then208, label %if.else217, !dbg !3876

if.then208:                                       ; preds = %if.else204
  %dc209 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 5, !dbg !3877
  %47 = load %struct.deps*, %struct.deps** %dc209, align 8, !dbg !3877
  call fastcc void @delete_deps_context(%struct.deps* %47) #8, !dbg !3879
  store %struct.deps* %dc, %struct.deps** %dc209, align 8, !dbg !3880
  %executing_insns211 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 7, !dbg !3881
  call fastcc void @VEC_rtx_gc_free(%struct.VEC_rtx_gc** nonnull %executing_insns211) #8, !dbg !3881
  %48 = bitcast %struct.VEC_rtx_gc** %executing_insns.addr to i64*, !dbg !3882
  %49 = load i64, i64* %48, align 8, !dbg !3882
  %50 = bitcast %struct.VEC_rtx_gc** %executing_insns211 to i64*, !dbg !3883
  store i64 %49, i64* %50, align 8, !dbg !3883
  %ready_ticks213 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 8, !dbg !3884
  %51 = bitcast i32** %ready_ticks213 to i8**, !dbg !3884
  %52 = load i8*, i8** %51, align 8, !dbg !3884
  call void @free(i8* %52) #6, !dbg !3885
  store i32* %ready_ticks, i32** %ready_ticks213, align 8, !dbg !3886
  %ready_ticks_size215 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 9, !dbg !3887
  store i32 %ready_ticks_size, i32* %ready_ticks_size215, align 8, !dbg !3888
  %cycle216 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 2, !dbg !3889
  store i32 %cycle, i32* %cycle216, align 8, !dbg !3890
  br label %if.end219, !dbg !3891

if.else217:                                       ; preds = %if.else204
  call fastcc void @delete_deps_context(%struct.deps* %dc) #8, !dbg !3892
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** %executing_insns.addr, metadata !3718, metadata !DIExpression(DW_OP_deref)), !dbg !3733
  call fastcc void @VEC_rtx_gc_free(%struct.VEC_rtx_gc** nonnull %executing_insns.addr) #8, !dbg !3894
  %53 = bitcast i32* %ready_ticks to i8*, !dbg !3895
  call void @free(i8* %53) #6, !dbg !3896
  br label %if.end219

if.end219:                                        ; preds = %if.end195, %if.then208, %if.else217, %if.then198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7, !dbg !3897
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #7, !dbg !3897
  br label %if.end220

if.end220:                                        ; preds = %if.end42, %if.then45, %if.end219
  %tobool221 = icmp eq i8 %after_stall_p, 0, !dbg !3898
  br i1 %tobool221, label %if.end220.if.end224_crit_edge, label %if.then222, !dbg !3900

if.end220.if.end224_crit_edge:                    ; preds = %if.end220
  %starts_cycle_p.phi.trans.insert = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 13, !dbg !3733
  %bf.load225.pre = load i8, i8* %starts_cycle_p.phi.trans.insert, align 8, !dbg !3901
  br label %if.end224, !dbg !3900

if.then222:                                       ; preds = %if.end220
  %after_stall_p223 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 13, !dbg !3902
  %bf.load = load i8, i8* %after_stall_p223, align 8, !dbg !3903
  %bf.set = or i8 %bf.load, 8, !dbg !3903
  store i8 %bf.set, i8* %after_stall_p223, align 8, !dbg !3903
  br label %if.end224, !dbg !3902

if.end224:                                        ; preds = %if.end220.if.end224_crit_edge, %if.then222
  %bf.load225 = phi i8 [ %bf.load225.pre, %if.end220.if.end224_crit_edge ], [ %bf.set, %if.then222 ], !dbg !3901
  %cycle_issued_insns = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 3, !dbg !3904
  store i32 0, i32* %cycle_issued_insns, align 4, !dbg !3905
  %starts_cycle_p = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 13, !dbg !3906
  %bf.set227 = or i8 %bf.load225, 4, !dbg !3901
  store i8 %bf.set227, i8* %starts_cycle_p, align 8, !dbg !3901
  %sched_next228 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 12, !dbg !3907
  store %struct.rtx_def* null, %struct.rtx_def** %sched_next228, align 8, !dbg !3908
  ret void, !dbg !3909
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_fence_for_scheduling(%struct._fence* %f) unnamed_addr #5 !dbg !3910 {
entry:
  call void @llvm.dbg.value(metadata %struct._fence* %f, metadata !3914, metadata !DIExpression()), !dbg !3915
  %bnds = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 4, !dbg !3916
  store %struct._list_node* null, %struct._list_node** %bnds, align 8, !dbg !3917
  %processed_p = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 13, !dbg !3918
  %bf.load = load i8, i8* %processed_p, align 8, !dbg !3919
  %bf.clear2 = and i8 %bf.load, -4, !dbg !3920
  store i8 %bf.clear2, i8* %processed_p, align 8, !dbg !3920
  ret void, !dbg !3921
}

; Function Attrs: nounwind uwtable
define dso_local void @add_clean_fence_to_fences(%struct.flist_tail_def* %new_fences, %struct.rtx_def* %succ, %struct._fence* %fence) local_unnamed_addr #5 !dbg !3922 {
entry:
  call void @llvm.dbg.value(metadata %struct.flist_tail_def* %new_fences, metadata !3926, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.value(metadata %struct.rtx_def* %succ, metadata !3927, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !3928, metadata !DIExpression()), !dbg !3930
  %call = tail call i32 @get_max_uid() #6, !dbg !3931
  %add = add nsw i32 %call, 1, !dbg !3932
  call void @llvm.dbg.value(metadata i32 %add, metadata !3929, metadata !DIExpression()), !dbg !3930
  %call1 = tail call fastcc i8* @state_create() #8, !dbg !3933
  %call2 = tail call fastcc %struct.deps* @create_deps_context() #8, !dbg !3934
  %call3 = tail call i8* @create_target_context(i8 zeroext 1) #8, !dbg !3935
  %conv = sext i32 %add to i64, !dbg !3936
  %call4 = tail call i8* @xcalloc(i64 %conv, i64 4) #6, !dbg !3936
  %0 = bitcast i8* %call4 to i32*, !dbg !3936
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !3937
  %1 = load i32, i32* %cycle, align 8, !dbg !3937
  %add5 = add nsw i32 %1, 1, !dbg !3938
  %2 = load i32, i32* @issue_rate, align 4, !dbg !3939
  %after_stall_p = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 13, !dbg !3940
  %bf.load = load i8, i8* %after_stall_p, align 8, !dbg !3940
  %bf.lshr = lshr i8 %bf.load, 3, !dbg !3940
  %bf.clear = and i8 %bf.lshr, 1, !dbg !3940
  tail call fastcc void @add_to_fences(%struct.flist_tail_def* %new_fences, %struct.rtx_def* %succ, i8* %call1, %struct.deps* %call2, i8* %call3, %struct.rtx_def* null, %struct.VEC_rtx_gc* null, i32* %0, i32 %add, %struct.rtx_def* null, i32 %add5, i32 0, i32 %2, i8 zeroext 1, i8 zeroext %bf.clear) #8, !dbg !3941
  ret void, !dbg !3942
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_to_fences(%struct.flist_tail_def* %new_fences, %struct.rtx_def* %insn, i8* %state, %struct.deps* %dc, i8* %tc, %struct.rtx_def* %last_scheduled_insn, %struct.VEC_rtx_gc* %executing_insns, i32* %ready_ticks, i32 %ready_ticks_size, %struct.rtx_def* %sched_next, i32 %cycle, i32 %cycle_issued_insns, i32 %issue_rate, i8 zeroext %starts_cycle_p, i8 zeroext %after_stall_p) unnamed_addr #5 !dbg !3943 {
entry:
  call void @llvm.dbg.value(metadata %struct.flist_tail_def* %new_fences, metadata !3947, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3948, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i8* %state, metadata !3949, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata %struct.deps* %dc, metadata !3950, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i8* %tc, metadata !3951, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_scheduled_insn, metadata !3952, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc* %executing_insns, metadata !3953, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i32* %ready_ticks, metadata !3954, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i32 %ready_ticks_size, metadata !3955, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata %struct.rtx_def* %sched_next, metadata !3956, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i32 %cycle, metadata !3957, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i32 %cycle_issued_insns, metadata !3958, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i32 %issue_rate, metadata !3959, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i8 %starts_cycle_p, metadata !3960, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i8 %after_stall_p, metadata !3961, metadata !DIExpression()), !dbg !3963
  %head = getelementptr inbounds %struct.flist_tail_def, %struct.flist_tail_def* %new_fences, i64 0, i32 0, !dbg !3964
  %0 = load %struct._list_node*, %struct._list_node** %head, align 8, !dbg !3964
  %call = tail call %struct._fence* @flist_lookup(%struct._list_node* %0, %struct.rtx_def* %insn) #8, !dbg !3965
  call void @llvm.dbg.value(metadata %struct._fence* %call, metadata !3962, metadata !DIExpression()), !dbg !3963
  %tobool = icmp eq %struct._fence* %call, null, !dbg !3966
  br i1 %tobool, label %if.then, label %if.else, !dbg !3968

if.then:                                          ; preds = %entry
  %tailp = getelementptr inbounds %struct.flist_tail_def, %struct.flist_tail_def* %new_fences, i64 0, i32 1, !dbg !3969
  %1 = load %struct._list_node**, %struct._list_node*** %tailp, align 8, !dbg !3969
  tail call fastcc void @flist_add(%struct._list_node** %1, %struct.rtx_def* %insn, i8* %state, %struct.deps* %dc, i8* %tc, %struct.rtx_def* %last_scheduled_insn, %struct.VEC_rtx_gc* %executing_insns, i32* %ready_ticks, i32 %ready_ticks_size, %struct.rtx_def* %sched_next, i32 %cycle, i32 %cycle_issued_insns, i32 %issue_rate, i8 zeroext %starts_cycle_p, i8 zeroext %after_stall_p) #8, !dbg !3971
  %2 = load %struct._list_node**, %struct._list_node*** %tailp, align 8, !dbg !3972
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !3972
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %3, i64 0, i32 0, !dbg !3972
  store %struct._list_node** %next, %struct._list_node*** %tailp, align 8, !dbg !3973
  br label %if.end, !dbg !3974

if.else:                                          ; preds = %entry
  tail call fastcc void @merge_fences(%struct._fence* nonnull %call, %struct.rtx_def* %insn, i8* %state, %struct.deps* %dc, i8* %tc, %struct.rtx_def* %last_scheduled_insn, %struct.VEC_rtx_gc* %executing_insns, i32* %ready_ticks, i32 %ready_ticks_size, %struct.rtx_def* %sched_next, i32 %cycle, i32 %issue_rate, i8 zeroext %after_stall_p) #8, !dbg !3975
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3977
}

; Function Attrs: nounwind uwtable
define dso_local void @add_dirty_fence_to_fences(%struct.flist_tail_def* %new_fences, %struct.rtx_def* %succ, %struct._fence* %fence) local_unnamed_addr #5 !dbg !3978 {
entry:
  call void @llvm.dbg.value(metadata %struct.flist_tail_def* %new_fences, metadata !3980, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata %struct.rtx_def* %succ, metadata !3981, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !3982, metadata !DIExpression()), !dbg !3984
  %ready_ticks_size = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 9, !dbg !3985
  %0 = load i32, i32* %ready_ticks_size, align 8, !dbg !3985
  %conv = sext i32 %0 to i64, !dbg !3985
  %mul = shl nsw i64 %conv, 2, !dbg !3985
  %call = tail call i8* @xmalloc(i64 %mul) #6, !dbg !3985
  %1 = bitcast i8* %call to i32*, !dbg !3985
  call void @llvm.dbg.value(metadata i32* %1, metadata !3983, metadata !DIExpression()), !dbg !3984
  %ready_ticks = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 8, !dbg !3986
  %2 = bitcast i32** %ready_ticks to i8**, !dbg !3986
  %3 = load i8*, i8** %2, align 8, !dbg !3986
  %4 = load i32, i32* %ready_ticks_size, align 8, !dbg !3987
  %conv2 = sext i32 %4 to i64, !dbg !3987
  %mul3 = shl nsw i64 %conv2, 2, !dbg !3988
  %call4 = tail call i8* @memcpy(i8* %call, i8* %3, i64 %mul3) #6, !dbg !3989
  %state = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 1, !dbg !3990
  %5 = load i8*, i8** %state, align 8, !dbg !3990
  %call5 = tail call fastcc i8* @state_create_copy(i8* %5) #8, !dbg !3991
  %dc = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 5, !dbg !3992
  %6 = load %struct.deps*, %struct.deps** %dc, align 8, !dbg !3992
  %call6 = tail call fastcc %struct.deps* @create_copy_of_deps_context(%struct.deps* %6) #8, !dbg !3993
  %tc = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 6, !dbg !3994
  %7 = load i8*, i8** %tc, align 8, !dbg !3994
  %call7 = tail call fastcc i8* @create_copy_of_target_context(i8* %7) #8, !dbg !3995
  %last_scheduled_insn = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 10, !dbg !3996
  %8 = load %struct.rtx_def*, %struct.rtx_def** %last_scheduled_insn, align 8, !dbg !3996
  %executing_insns = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 7, !dbg !3997
  %9 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %executing_insns, align 8, !dbg !3997
  %tobool = icmp eq %struct.VEC_rtx_gc* %9, null, !dbg !3997
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3997

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %9, i64 0, i32 0, !dbg !3997
  br label %cond.end, !dbg !3997

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3997
  %call9 = tail call fastcc %struct.VEC_rtx_gc* @VEC_rtx_gc_copy(%struct.VEC_rtx_base* %cond) #8, !dbg !3997
  %10 = load i32, i32* %ready_ticks_size, align 8, !dbg !3998
  %sched_next = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 12, !dbg !3999
  %11 = load %struct.rtx_def*, %struct.rtx_def** %sched_next, align 8, !dbg !3999
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !4000
  %12 = load i32, i32* %cycle, align 8, !dbg !4000
  %cycle_issued_insns = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 3, !dbg !4001
  %13 = load i32, i32* %cycle_issued_insns, align 4, !dbg !4001
  %issue_more = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 11, !dbg !4002
  %14 = load i32, i32* %issue_more, align 8, !dbg !4002
  %starts_cycle_p = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 13, !dbg !4003
  %bf.load = load i8, i8* %starts_cycle_p, align 8, !dbg !4003
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !4003
  %bf.clear = and i8 %bf.lshr, 1, !dbg !4003
  %bf.lshr13 = lshr i8 %bf.load, 3, !dbg !4004
  %bf.clear14 = and i8 %bf.lshr13, 1, !dbg !4004
  tail call fastcc void @add_to_fences(%struct.flist_tail_def* %new_fences, %struct.rtx_def* %succ, i8* %call5, %struct.deps* %call6, i8* %call7, %struct.rtx_def* %8, %struct.VEC_rtx_gc* %call9, i32* %1, i32 %10, %struct.rtx_def* %11, i32 %12, i32 %13, i32 %14, i8 zeroext %bf.clear, i8 zeroext %bf.clear14) #8, !dbg !4005
  ret void, !dbg !4006
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i8* @state_create_copy(i8* %from) unnamed_addr #5 !dbg !4007 {
entry:
  call void @llvm.dbg.value(metadata i8* %from, metadata !4011, metadata !DIExpression()), !dbg !4013
  %call = tail call fastcc i8* @state_alloc() #8, !dbg !4014
  call void @llvm.dbg.value(metadata i8* %call, metadata !4012, metadata !DIExpression()), !dbg !4013
  tail call fastcc void @state_copy(i8* %call, i8* %from) #8, !dbg !4015
  ret i8* %call, !dbg !4016
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.deps* @create_copy_of_deps_context(%struct.deps* %from) unnamed_addr #5 !dbg !4017 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %from, metadata !4021, metadata !DIExpression()), !dbg !4023
  %call = tail call fastcc %struct.deps* @alloc_deps_context() #8, !dbg !4024
  call void @llvm.dbg.value(metadata %struct.deps* %call, metadata !4022, metadata !DIExpression()), !dbg !4023
  tail call fastcc void @copy_deps_context(%struct.deps* %call, %struct.deps* %from) #8, !dbg !4025
  ret %struct.deps* %call, !dbg !4026
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @create_copy_of_target_context(i8* %tc) unnamed_addr #5 !dbg !4027 {
entry:
  call void @llvm.dbg.value(metadata i8* %tc, metadata !4031, metadata !DIExpression()), !dbg !4033
  %call = tail call fastcc i8* @alloc_target_context() #8, !dbg !4034
  call void @llvm.dbg.value(metadata i8* %call, metadata !4032, metadata !DIExpression()), !dbg !4033
  tail call fastcc void @copy_target_context(i8* %call, i8* %tc) #8, !dbg !4035
  ret i8* %call, !dbg !4036
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_rtx_gc* @VEC_rtx_gc_copy(%struct.VEC_rtx_base* %vec_) unnamed_addr #0 !dbg !4037 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !4042, metadata !DIExpression()), !dbg !4045
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !4046
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4046

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !4046
  %0 = load i32, i32* %num, align 8, !dbg !4046
  %phitmp = zext i32 %0 to i64, !dbg !4046
  br label %cond.end, !dbg !4046

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i64 %cond, metadata !4043, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc* null, metadata !4044, metadata !DIExpression()), !dbg !4045
  %tobool1 = icmp eq i64 %cond, 0, !dbg !4047
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4046

if.then:                                          ; preds = %cond.end
  %conv2 = trunc i64 %cond to i32, !dbg !4049
  %call = tail call i8* @vec_gc_p_reserve_exact(i8* null, i32 %conv2) #6, !dbg !4049
  %1 = bitcast i8* %call to %struct.VEC_rtx_gc*, !dbg !4049
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc* %1, metadata !4044, metadata !DIExpression()), !dbg !4045
  %num4 = bitcast i8* %call to i32*, !dbg !4049
  store i32 %conv2, i32* %num4, align 8, !dbg !4049
  %vec = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4049
  %arraydecay7 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 0, !dbg !4049
  %2 = bitcast %struct.rtx_def** %arraydecay7 to i8*, !dbg !4049
  %mul = shl nuw nsw i64 %cond, 3, !dbg !4049
  %call8 = tail call i8* @memcpy(i8* nonnull %vec, i8* nonnull %2, i64 %mul) #6, !dbg !4049
  br label %if.end, !dbg !4049

if.end:                                           ; preds = %cond.end, %if.then
  %new_vec_.0 = phi %struct.VEC_rtx_gc* [ %1, %if.then ], [ null, %cond.end ], !dbg !4045
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc* %new_vec_.0, metadata !4044, metadata !DIExpression()), !dbg !4045
  ret %struct.VEC_rtx_gc* %new_vec_.0, !dbg !4046
}

; Function Attrs: nounwind uwtable
define dso_local %struct.bitmap_head_def* @get_regset_from_pool() local_unnamed_addr #5 !dbg !4051 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 1), align 8, !dbg !4056
  %cmp = icmp eq i32 %0, 0, !dbg !4058
  br i1 %cmp, label %if.else, label %if.then, !dbg !4059

if.then:                                          ; preds = %entry
  %1 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 0), align 8, !dbg !4060
  %dec = add nsw i32 %0, -1, !dbg !4061
  store i32 %dec, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 1), align 8, !dbg !4061
  %idxprom = sext i32 %dec to i64, !dbg !4062
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %1, i64 %idxprom, !dbg !4062
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !4062
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %2, metadata !4055, metadata !DIExpression()), !dbg !4063
  br label %if.end7, !dbg !4064

if.else:                                          ; preds = %entry
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @reg_obstack) #6, !dbg !4065
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !4055, metadata !DIExpression()), !dbg !4063
  %3 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 4), align 8, !dbg !4067
  %4 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 5), align 4, !dbg !4069
  %cmp1 = icmp eq i32 %3, %4, !dbg !4070
  br i1 %cmp1, label %if.then2, label %if.else.if.end_crit_edge, !dbg !4071

if.else.if.end_crit_edge:                         ; preds = %if.else
  %.pre = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 3), align 8, !dbg !4072
  br label %if.end, !dbg !4071

if.then2:                                         ; preds = %if.else
  %5 = load i8*, i8** bitcast (%struct.bitmap_head_def*** getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 3) to i8**), align 8, !dbg !4073
  %mul = shl nsw i32 %3, 1, !dbg !4073
  %add = or i32 %mul, 1, !dbg !4073
  store i32 %add, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 5), align 4, !dbg !4073
  %conv = sext i32 %add to i64, !dbg !4073
  %mul3 = shl nsw i64 %conv, 3, !dbg !4073
  %call4 = tail call i8* @xrealloc(i8* %5, i64 %mul3) #6, !dbg !4073
  store i8* %call4, i8** bitcast (%struct.bitmap_head_def*** getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 3) to i8**), align 8, !dbg !4074
  %6 = bitcast i8* %call4 to %struct.bitmap_head_def**, !dbg !4075
  %.pre1 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 4), align 8, !dbg !4076
  br label %if.end, !dbg !4075

if.end:                                           ; preds = %if.else.if.end_crit_edge, %if.then2
  %7 = phi i32 [ %3, %if.else.if.end_crit_edge ], [ %.pre1, %if.then2 ], !dbg !4076
  %8 = phi %struct.bitmap_head_def** [ %.pre, %if.else.if.end_crit_edge ], [ %6, %if.then2 ], !dbg !4072
  %inc = add nsw i32 %7, 1, !dbg !4076
  store i32 %inc, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 4), align 8, !dbg !4076
  %idxprom5 = sext i32 %7 to i64, !dbg !4077
  %arrayidx6 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %8, i64 %idxprom5, !dbg !4077
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %arrayidx6, align 8, !dbg !4078
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %rs.0 = phi %struct.bitmap_head_def* [ %2, %if.then ], [ %call, %if.end ], !dbg !4079
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %rs.0, metadata !4055, metadata !DIExpression()), !dbg !4063
  %9 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 6), align 8, !dbg !4080
  %inc8 = add nsw i32 %9, 1, !dbg !4080
  store i32 %inc8, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 6), align 8, !dbg !4080
  ret %struct.bitmap_head_def* %rs.0, !dbg !4081
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.bitmap_head_def* @get_clear_regset_from_pool() local_unnamed_addr #5 !dbg !4082 {
entry:
  %call = tail call %struct.bitmap_head_def* @get_regset_from_pool() #8, !dbg !4085
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !4084, metadata !DIExpression()), !dbg !4086
  tail call void @bitmap_clear(%struct.bitmap_head_def* %call) #6, !dbg !4087
  ret %struct.bitmap_head_def* %call, !dbg !4088
}

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @return_regset_to_pool(%struct.bitmap_head_def* %rs) local_unnamed_addr #5 !dbg !4089 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %rs, metadata !4093, metadata !DIExpression()), !dbg !4094
  %0 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 6), align 8, !dbg !4095
  %dec = add nsw i32 %0, -1, !dbg !4095
  store i32 %dec, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 6), align 8, !dbg !4095
  %1 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 1), align 8, !dbg !4096
  %2 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 2), align 4, !dbg !4098
  %cmp = icmp eq i32 %1, %2, !dbg !4099
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge, !dbg !4100

entry.if.end_crit_edge:                           ; preds = %entry
  %.pre = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 0), align 8, !dbg !4101
  br label %if.end, !dbg !4100

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** bitcast (%struct.anon* @regset_pool to i8**), align 8, !dbg !4102
  %mul = shl nsw i32 %1, 1, !dbg !4102
  %add = or i32 %mul, 1, !dbg !4102
  store i32 %add, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 2), align 4, !dbg !4102
  %conv = sext i32 %add to i64, !dbg !4102
  %mul1 = shl nsw i64 %conv, 3, !dbg !4102
  %call = tail call i8* @xrealloc(i8* %3, i64 %mul1) #6, !dbg !4102
  store i8* %call, i8** bitcast (%struct.anon* @regset_pool to i8**), align 8, !dbg !4103
  %4 = bitcast i8* %call to %struct.bitmap_head_def**, !dbg !4104
  %.pre1 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 1), align 8, !dbg !4105
  br label %if.end, !dbg !4104

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %5 = phi i32 [ %1, %entry.if.end_crit_edge ], [ %.pre1, %if.then ], !dbg !4105
  %6 = phi %struct.bitmap_head_def** [ %.pre, %entry.if.end_crit_edge ], [ %4, %if.then ], !dbg !4101
  %inc = add nsw i32 %5, 1, !dbg !4105
  store i32 %inc, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 1), align 8, !dbg !4105
  %idxprom = sext i32 %5 to i64, !dbg !4106
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %6, i64 %idxprom, !dbg !4106
  store %struct.bitmap_head_def* %rs, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !4107
  ret void, !dbg !4108
}

; Function Attrs: nounwind uwtable
define dso_local void @free_regset_pool() local_unnamed_addr #5 !dbg !4109 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 6), align 8, !dbg !4110
  %cmp = icmp eq i32 %0, 0, !dbg !4110
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4110

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1003, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4110
  br label %cond.end, !dbg !4110

cond.end:                                         ; preds = %entry, %cond.true
  br label %while.cond, !dbg !4111

while.cond:                                       ; preds = %while.body, %cond.end
  %1 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 1), align 8, !dbg !4112
  %tobool = icmp eq i32 %1, 0, !dbg !4111
  br i1 %tobool, label %while.end, label %while.body, !dbg !4111

while.body:                                       ; preds = %while.cond
  %dec = add nsw i32 %1, -1, !dbg !4113
  store i32 %dec, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 1), align 8, !dbg !4113
  %2 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 0), align 8, !dbg !4115
  %idxprom = sext i32 %dec to i64, !dbg !4115
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %2, i64 %idxprom, !dbg !4115
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !4115
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %3) #6, !dbg !4115
  %4 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 0), align 8, !dbg !4115
  %5 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 1), align 8, !dbg !4115
  %idxprom1 = sext i32 %5 to i64, !dbg !4115
  %arrayidx2 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %4, i64 %idxprom1, !dbg !4115
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx2, align 8, !dbg !4115
  br label %while.cond, !dbg !4111, !llvm.loop !4116

while.end:                                        ; preds = %while.cond
  %6 = load i8*, i8** bitcast (%struct.anon* @regset_pool to i8**), align 8, !dbg !4118
  tail call void @free(i8* %6) #6, !dbg !4119
  store %struct.bitmap_head_def** null, %struct.bitmap_head_def*** getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 0), align 8, !dbg !4120
  store i32 0, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 2), align 4, !dbg !4121
  %7 = load i8*, i8** bitcast (%struct.bitmap_head_def*** getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 3) to i8**), align 8, !dbg !4122
  tail call void @free(i8* %7) #6, !dbg !4123
  store %struct.bitmap_head_def** null, %struct.bitmap_head_def*** getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 3), align 8, !dbg !4124
  store i32 0, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 4), align 8, !dbg !4125
  store i32 0, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 5), align 4, !dbg !4126
  store i32 0, i32* getelementptr inbounds (%struct.anon, %struct.anon* @regset_pool, i64 0, i32 6), align 8, !dbg !4127
  ret void, !dbg !4128
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_nop_from_pool(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4129 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4133, metadata !DIExpression()), !dbg !4137
  %0 = load i32, i32* getelementptr inbounds (%struct.anon.1, %struct.anon.1* @nop_pool, i64 0, i32 1), align 8, !dbg !4138
  %cmp = icmp ne i32 %0, 0, !dbg !4139
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !4135, metadata !DIExpression()), !dbg !4137
  br i1 %cmp, label %if.then, label %if.else, !dbg !4140

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.anon.1, %struct.anon.1* @nop_pool, i64 0, i32 0), align 8, !dbg !4141
  %dec = add nsw i32 %0, -1, !dbg !4143
  store i32 %dec, i32* getelementptr inbounds (%struct.anon.1, %struct.anon.1* @nop_pool, i64 0, i32 1), align 8, !dbg !4143
  %idxprom = sext i32 %dec to i64, !dbg !4144
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %idxprom, !dbg !4144
  br label %if.end, !dbg !4145

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %nop.0.in = phi %struct.rtx_def** [ %arrayidx, %if.then ], [ @nop_pattern, %if.else ]
  %nop.0 = load %struct.rtx_def*, %struct.rtx_def** %nop.0.in, align 8, !dbg !4146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %nop.0, metadata !4134, metadata !DIExpression()), !dbg !4137
  %call = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %nop.0, %struct.rtx_def* %insn) #6, !dbg !4147
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4134, metadata !DIExpression()), !dbg !4137
  %. = select i1 %cmp, i32 2, i32 3
  call void @llvm.dbg.value(metadata i32 %., metadata !4136, metadata !DIExpression()), !dbg !4137
  %2 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4148
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %2, i64 0, i32 0, !dbg !4148
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4148
  %base9 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i64 0, i32 0, !dbg !4148
  %arrayidx13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4148
  %rt_int = bitcast %union.rtunion_def* %arrayidx13 to i32*, !dbg !4148
  %4 = load i32, i32* %rt_int, align 8, !dbg !4148
  %call14 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base9, i32 %4) #8, !dbg !4148
  %call15 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call14) #8, !dbg !4148
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call15, i64 0, i32 0, !dbg !4148
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** @nop_vinsn, align 8, !dbg !4149
  %6 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4150
  %base18 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %6, i64 0, i32 0, !dbg !4150
  %7 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4150
  %base24 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %7, i64 0, i32 0, !dbg !4150
  %8 = load i32, i32* %rt_int, align 8, !dbg !4150
  %call32 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base24, i32 %8) #8, !dbg !4150
  %call33 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base18, i32 %call32) #8, !dbg !4150
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call33, i64 0, i32 2, !dbg !4150
  %9 = load i32, i32* %seqno, align 4, !dbg !4150
  %call34 = tail call fastcc %struct._expr* @set_insn_init(%struct._expr* %expr, %struct.vinsn_def* %5, i32 %9) #8, !dbg !4151
  tail call fastcc void @sel_init_new_insn(%struct.rtx_def* %call, i32 %.) #8, !dbg !4152
  ret %struct.rtx_def* %call, !dbg !4153
}

declare dso_local %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct._expr* @set_insn_init(%struct._expr* %expr, %struct.vinsn_def* %vi, i32 %seqno) unnamed_addr #5 !dbg !4154 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4158, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !4159, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i32 %seqno, metadata !4160, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata %struct._expr* getelementptr inbounds (%struct._sel_insn_data, %struct._sel_insn_data* @_insn_init_ssid, i64 0, i32 0), metadata !4161, metadata !DIExpression()), !dbg !4162
  tail call void @copy_expr_onside(%struct._expr* getelementptr inbounds (%struct._sel_insn_data, %struct._sel_insn_data* @_insn_init_ssid, i64 0, i32 0), %struct._expr* %expr) #8, !dbg !4163
  %cmp = icmp eq %struct.vinsn_def* %vi, null, !dbg !4164
  br i1 %cmp, label %if.else, label %if.then, !dbg !4166

if.then:                                          ; preds = %entry
  store i1 false, i1* @insn_init_create_new_vinsn_p, align 1, !dbg !4167
  tail call void @change_vinsn_in_expr(%struct._expr* getelementptr inbounds (%struct._sel_insn_data, %struct._sel_insn_data* @_insn_init_ssid, i64 0, i32 0), %struct.vinsn_def* nonnull %vi) #8, !dbg !4169
  br label %if.end, !dbg !4170

if.else:                                          ; preds = %entry
  store i1 true, i1* @insn_init_create_new_vinsn_p, align 1, !dbg !4171
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 %seqno, i32* getelementptr inbounds (%struct._sel_insn_data, %struct._sel_insn_data* @_insn_init_ssid, i64 0, i32 2), align 4, !dbg !4172
  ret %struct._expr* undef, !dbg !4173
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4174 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_insn_data_def_base* %vec_, metadata !4179, metadata !DIExpression()), !dbg !4181
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4180, metadata !DIExpression()), !dbg !4181
  br label %land.end, !dbg !4182

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4182
  %arrayidx = getelementptr inbounds %struct.VEC_sel_insn_data_def_base, %struct.VEC_sel_insn_data_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4182
  ret %struct._sel_insn_data* %arrayidx, !dbg !4182
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4183 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !4189, metadata !DIExpression()), !dbg !4191
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4190, metadata !DIExpression()), !dbg !4191
  br label %land.end, !dbg !4192

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4192
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4192
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4192
  ret i32 %0, !dbg !4192
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_init_new_insn(%struct.rtx_def* %insn, i32 %flags) unnamed_addr #5 !dbg !4193 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4197, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4198, metadata !DIExpression()), !dbg !4199
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4200
  %bf.load = load i32, i32* %0, align 8, !dbg !4200
  %bf.clear = and i32 %bf.load, 65535, !dbg !4200
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4200
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !4200

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4200
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !4200

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !4200
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !4200

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !4200
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !4202

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4203
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4203
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4203
  %tobool = icmp eq %struct.rtx_def* %2, null, !dbg !4203
  br i1 %tobool, label %if.end, label %land.lhs.true12, !dbg !4203

land.lhs.true12:                                  ; preds = %land.lhs.true
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4203
  %rt_rtx16 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !4203
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !4203
  %tobool17 = icmp eq %struct.rtx_def* %4, null, !dbg !4203
  br i1 %tobool17, label %if.end, label %land.lhs.true18, !dbg !4204

land.lhs.true18:                                  ; preds = %land.lhs.true12
  %call = tail call fastcc zeroext i8 @insn_is_the_only_one_in_bb_p(%struct.rtx_def* %insn) #8, !dbg !4205
  %tobool19 = icmp eq i8 %call, 0, !dbg !4205
  br i1 %tobool19, label %if.end, label %if.then, !dbg !4206

if.then:                                          ; preds = %land.lhs.true18
  tail call void @extend_bb_info() #8, !dbg !4207
  %arrayidx22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4209
  %rt_bb = bitcast %struct.object_block** %arrayidx22 to %struct.basic_block_def**, !dbg !4209
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4209
  tail call fastcc void @create_initial_data_sets(%struct.basic_block_def* %5) #8, !dbg !4210
  br label %if.end, !dbg !4211

if.end:                                           ; preds = %land.lhs.true18, %land.lhs.true12, %land.lhs.true, %if.then, %lor.lhs.false8
  %and = and i32 %flags, 1, !dbg !4212
  %tobool23 = icmp eq i32 %and, 0, !dbg !4212
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !4214

if.then24:                                        ; preds = %if.end
  tail call void @sched_init_luids(%struct.VEC_basic_block_heap* null, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* %insn) #6, !dbg !4215
  br label %if.end25, !dbg !4215

if.end25:                                         ; preds = %if.end, %if.then24
  %and26 = and i32 %flags, 2, !dbg !4216
  %tobool27 = icmp eq i32 %and26, 0, !dbg !4216
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !4218

if.then28:                                        ; preds = %if.end25
  tail call void @extend_insn_data() #8, !dbg !4219
  tail call fastcc void @init_insn_data(%struct.rtx_def* %insn) #8, !dbg !4221
  tail call void @clear_expr(%struct._expr* getelementptr inbounds (%struct._sel_insn_data, %struct._sel_insn_data* @_insn_init_ssid, i64 0, i32 0)) #8, !dbg !4222
  br label %if.end29, !dbg !4223

if.end29:                                         ; preds = %if.end25, %if.then28
  %and30 = and i32 %flags, 4, !dbg !4224
  %tobool31 = icmp eq i32 %and30, 0, !dbg !4224
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !4226

if.then32:                                        ; preds = %if.end29
  tail call void @extend_insn_data() #8, !dbg !4227
  tail call fastcc void @init_simplejump_data(%struct.rtx_def* %insn) #8, !dbg !4229
  br label %if.end33, !dbg !4230

if.end33:                                         ; preds = %if.end29, %if.then32
  %6 = load i32*, i32** @containing_rgn, align 8, !dbg !4231
  %arrayidx36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4231
  %rt_bb37 = bitcast %struct.object_block** %arrayidx36 to %struct.basic_block_def**, !dbg !4231
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb37, align 8, !dbg !4231
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i64 0, i32 9, !dbg !4231
  %8 = load i32, i32* %index, align 8, !dbg !4231
  %idxprom = sext i32 %8 to i64, !dbg !4231
  %arrayidx38 = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !4231
  %9 = load i32, i32* %arrayidx38, align 4, !dbg !4231
  %10 = load i32*, i32** @rgn_bb_table, align 8, !dbg !4231
  %11 = load i32*, i32** @ebb_head, align 8, !dbg !4231
  %12 = load i32, i32* %11, align 4, !dbg !4231
  %idxprom40 = sext i32 %12 to i64, !dbg !4231
  %arrayidx41 = getelementptr inbounds i32, i32* %10, i64 %idxprom40, !dbg !4231
  %13 = load i32, i32* %arrayidx41, align 4, !dbg !4231
  %idxprom42 = sext i32 %13 to i64, !dbg !4231
  %arrayidx43 = getelementptr inbounds i32, i32* %6, i64 %idxprom42, !dbg !4231
  %14 = load i32, i32* %arrayidx43, align 4, !dbg !4231
  %cmp44 = icmp eq i32 %9, %14, !dbg !4231
  br i1 %cmp44, label %cond.end, label %cond.true, !dbg !4231

cond.true:                                        ; preds = %if.end33
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4083, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4231
  br label %cond.end, !dbg !4231

cond.end:                                         ; preds = %if.end33, %cond.true
  ret void, !dbg !4232
}

; Function Attrs: nounwind uwtable
define dso_local void @return_nop_to_pool(%struct.rtx_def* %nop, i8 zeroext %full_tidying) local_unnamed_addr #5 !dbg !4233 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %nop, metadata !4237, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata i8 %full_tidying, metadata !4238, metadata !DIExpression()), !dbg !4239
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %nop, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4240
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !4240
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4240
  %tobool = icmp eq %struct.rtx_def* %1, null, !dbg !4240
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !4240

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %nop, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4240
  %rt_rtx4 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !4240
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !4240
  %tobool5 = icmp eq %struct.rtx_def* %3, null, !dbg !4240
  br i1 %tobool5, label %cond.true, label %cond.end, !dbg !4240

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1062, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4240
  br label %cond.end, !dbg !4240

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call = tail call zeroext i8 @sel_remove_insn(%struct.rtx_def* %nop, i8 zeroext 0, i8 zeroext %full_tidying) #8, !dbg !4241
  %4 = load i32, i32* getelementptr inbounds (%struct.anon.1, %struct.anon.1* @nop_pool, i64 0, i32 1), align 8, !dbg !4242
  %5 = load i32, i32* getelementptr inbounds (%struct.anon.1, %struct.anon.1* @nop_pool, i64 0, i32 2), align 4, !dbg !4244
  %cmp = icmp eq i32 %4, %5, !dbg !4245
  br i1 %cmp, label %if.then, label %cond.end.if.end_crit_edge, !dbg !4246

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  %.pre = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.anon.1, %struct.anon.1* @nop_pool, i64 0, i32 0), align 8, !dbg !4247
  br label %if.end, !dbg !4246

if.then:                                          ; preds = %cond.end
  %6 = load i8*, i8** bitcast (%struct.anon.1* @nop_pool to i8**), align 8, !dbg !4248
  %mul = shl nsw i32 %4, 1, !dbg !4248
  %add = or i32 %mul, 1, !dbg !4248
  store i32 %add, i32* getelementptr inbounds (%struct.anon.1, %struct.anon.1* @nop_pool, i64 0, i32 2), align 4, !dbg !4248
  %conv = sext i32 %add to i64, !dbg !4248
  %mul6 = shl nsw i64 %conv, 3, !dbg !4248
  %call7 = tail call i8* @xrealloc(i8* %6, i64 %mul6) #6, !dbg !4248
  store i8* %call7, i8** bitcast (%struct.anon.1* @nop_pool to i8**), align 8, !dbg !4249
  %7 = bitcast i8* %call7 to %struct.rtx_def**, !dbg !4250
  %.pre1 = load i32, i32* getelementptr inbounds (%struct.anon.1, %struct.anon.1* @nop_pool, i64 0, i32 1), align 8, !dbg !4251
  br label %if.end, !dbg !4250

if.end:                                           ; preds = %cond.end.if.end_crit_edge, %if.then
  %8 = phi i32 [ %4, %cond.end.if.end_crit_edge ], [ %.pre1, %if.then ], !dbg !4251
  %9 = phi %struct.rtx_def** [ %.pre, %cond.end.if.end_crit_edge ], [ %7, %if.then ], !dbg !4247
  %inc = add nsw i32 %8, 1, !dbg !4251
  store i32 %inc, i32* getelementptr inbounds (%struct.anon.1, %struct.anon.1* @nop_pool, i64 0, i32 1), align 8, !dbg !4251
  %idxprom = sext i32 %8 to i64, !dbg !4252
  %arrayidx8 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %9, i64 %idxprom, !dbg !4252
  store %struct.rtx_def* %nop, %struct.rtx_def** %arrayidx8, align 8, !dbg !4253
  ret void, !dbg !4254
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sel_remove_insn(%struct.rtx_def* %insn, i8 zeroext %only_disconnect, i8 zeroext %full_tidying) local_unnamed_addr #5 !dbg !4255 {
entry:
  %expr = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4259, metadata !DIExpression()), !dbg !4272
  call void @llvm.dbg.value(metadata i8 %only_disconnect, metadata !4260, metadata !DIExpression()), !dbg !4272
  call void @llvm.dbg.value(metadata i8 %full_tidying, metadata !4261, metadata !DIExpression()), !dbg !4272
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4273
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !4273
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4273
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !4262, metadata !DIExpression()), !dbg !4272
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4274
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4274
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4274
  %tobool = icmp eq %struct.rtx_def* %2, null, !dbg !4274
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !4274

land.lhs.true:                                    ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4274
  %rt_rtx7 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !4274
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !4274
  %tobool8 = icmp eq %struct.rtx_def* %4, null, !dbg !4274
  br i1 %tobool8, label %cond.true, label %cond.end, !dbg !4274

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3736, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4274
  br label %cond.end, !dbg !4274

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4275
  %bf.load = load i32, i32* %5, align 8, !dbg !4275
  %bf.clear = and i32 %bf.load, 65535, !dbg !4275
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !4275
  br i1 %cmp, label %land.lhs.true9, label %if.end28, !dbg !4276

land.lhs.true9:                                   ; preds = %cond.end
  %6 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !4277
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %6, i64 0, i32 0, !dbg !4277
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !4277
  %7 = load i32, i32* %index, align 8, !dbg !4277
  %call = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %7) #8, !dbg !4277
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call, i64 0, i32 2, !dbg !4277
  %8 = load i32, i32* %av_level, align 8, !dbg !4277
  %9 = load i32, i32* @global_level, align 4, !dbg !4277
  %cmp15 = icmp eq i32 %8, %9, !dbg !4277
  br i1 %cmp15, label %if.then, label %if.end28, !dbg !4278

if.then:                                          ; preds = %land.lhs.true9
  %10 = bitcast %struct._expr** %expr to i8*, !dbg !4279
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7, !dbg !4279
  %11 = bitcast %struct._list_iterator* %i to i8*, !dbg !4280
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7, !dbg !4280
  %12 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !4281
  %base18 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %12, i64 0, i32 0, !dbg !4281
  %13 = load i32, i32* %index, align 8, !dbg !4281
  %call23 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base18, i32 %13) #8, !dbg !4281
  %av_set = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call23, i64 0, i32 1, !dbg !4281
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !4266, metadata !DIExpression(DW_OP_deref)), !dbg !4283
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** nonnull %av_set, i8 zeroext 1) #8, !dbg !4281
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !4284
  br label %for.cond, !dbg !4281

for.cond:                                         ; preds = %for.inc, %if.then
  %14 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !4286
  %15 = load %struct._list_node*, %struct._list_node** %14, align 8, !dbg !4286
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !4263, metadata !DIExpression(DW_OP_deref)), !dbg !4283
  %call24 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %15, %struct._expr** nonnull %expr) #8, !dbg !4286
  %tobool25 = icmp eq i8 %call24, 0, !dbg !4281
  br i1 %tobool25, label %for.end.loopexit, label %for.body, !dbg !4281

for.body:                                         ; preds = %for.cond
  %16 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !4287
  call void @llvm.dbg.value(metadata %struct._expr* %16, metadata !4263, metadata !DIExpression()), !dbg !4283
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %16, i64 0, i32 0, !dbg !4287
  %17 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4287
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %17, i64 0, i32 0, !dbg !4287
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4287
  %cmp26 = icmp eq %struct.rtx_def* %18, %insn, !dbg !4289
  br i1 %cmp26, label %if.then27, label %for.inc, !dbg !4290

if.then27:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !4266, metadata !DIExpression(DW_OP_deref)), !dbg !4283
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %i) #8, !dbg !4291
  br label %for.end, !dbg !4293

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !4266, metadata !DIExpression(DW_OP_deref)), !dbg !4283
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !4286
  br label %for.cond, !dbg !4286, !llvm.loop !4294

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !4296

for.end:                                          ; preds = %for.end.loopexit, %if.then27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7, !dbg !4296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7, !dbg !4296
  br label %if.end28, !dbg !4297

if.end28:                                         ; preds = %for.end, %land.lhs.true9, %cond.end
  %tobool29 = icmp eq i8 %only_disconnect, 0, !dbg !4298
  br i1 %tobool29, label %if.else, label %if.then30, !dbg !4299

if.then30:                                        ; preds = %if.end28
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4300
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !4267, metadata !DIExpression()), !dbg !4301
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4302
  %rt_rtx38 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !4302
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !4302
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !4270, metadata !DIExpression()), !dbg !4301
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4303
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %22, metadata !4271, metadata !DIExpression()), !dbg !4301
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4304
  %rt_rtx47 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !4304
  store %struct.rtx_def* %21, %struct.rtx_def** %rt_rtx47, align 8, !dbg !4305
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4306
  %rt_rtx51 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !4306
  store %struct.rtx_def* %19, %struct.rtx_def** %rt_rtx51, align 8, !dbg !4307
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 7, !dbg !4308
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4308
  %25 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4308
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %25, i64 0, i32 0, !dbg !4308
  %26 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !4308
  %cmp52 = icmp eq %struct.rtx_def* %26, %insn, !dbg !4310
  br i1 %cmp52, label %if.then53, label %if.end66, !dbg !4311

if.then53:                                        ; preds = %if.then30
  %arrayidx56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 1, !dbg !4312
  %rt_bb57 = bitcast %struct.object_block** %arrayidx56 to %struct.basic_block_def**, !dbg !4312
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb57, align 8, !dbg !4312
  %cmp58 = icmp eq %struct.basic_block_def* %27, %22, !dbg !4312
  br i1 %cmp58, label %cond.end61, label %cond.true59, !dbg !4312

cond.true59:                                      ; preds = %if.then53
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3764, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4312
  %.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4314
  br label %cond.end61, !dbg !4312

cond.end61:                                       ; preds = %if.then53, %cond.true59
  %28 = phi %struct.rtl_bb_info* [ %25, %if.then53 ], [ %.pre, %cond.true59 ], !dbg !4314
  %head_65 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %28, i64 0, i32 0, !dbg !4314
  store %struct.rtx_def* %19, %struct.rtx_def** %head_65, align 8, !dbg !4315
  %.pre1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4316
  br label %if.end66, !dbg !4318

if.end66:                                         ; preds = %cond.end61, %if.then30
  %29 = phi %struct.rtl_bb_info* [ %.pre1, %cond.end61 ], [ %25, %if.then30 ], !dbg !4316
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %29, i64 0, i32 1, !dbg !4316
  %30 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4316
  %cmp69 = icmp eq %struct.rtx_def* %30, %insn, !dbg !4319
  br i1 %cmp69, label %if.then70, label %if.end93, !dbg !4320

if.then70:                                        ; preds = %if.end66
  store %struct.rtx_def* %19, %struct.rtx_def** %end_, align 8, !dbg !4321
  br label %if.end93, !dbg !4322

if.else:                                          ; preds = %if.end28
  call void @remove_insn(%struct.rtx_def* %insn) #6, !dbg !4323
  %31 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4325
  %base77 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %31, i64 0, i32 0, !dbg !4325
  %32 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4325
  %base83 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %32, i64 0, i32 0, !dbg !4325
  %arrayidx89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4325
  %rt_int = bitcast %union.rtunion_def* %arrayidx89 to i32*, !dbg !4325
  %33 = load i32, i32* %rt_int, align 8, !dbg !4325
  %call90 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base83, i32 %33) #8, !dbg !4325
  %call91 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base77, i32 %call90) #8, !dbg !4325
  %expr92 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call91, i64 0, i32 0, !dbg !4325
  call void @clear_expr(%struct._expr* %expr92) #8, !dbg !4326
  br label %if.end93

if.end93:                                         ; preds = %if.end66, %if.then70, %if.else
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx, align 8, !dbg !4327
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4328
  %rt_rtx101 = bitcast %union.rtunion_def* %34 to %struct.rtx_def**, !dbg !4328
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx101, align 8, !dbg !4329
  %call102 = call zeroext i8 @tidy_control_flow(%struct.basic_block_def* %0, i8 zeroext %full_tidying) #8, !dbg !4330
  ret i8 %call102, !dbg !4331
}

; Function Attrs: nounwind uwtable
define dso_local void @free_nop_pool() local_unnamed_addr #5 !dbg !4332 {
entry:
  store i32 0, i32* getelementptr inbounds (%struct.anon.1, %struct.anon.1* @nop_pool, i64 0, i32 1), align 8, !dbg !4333
  store i32 0, i32* getelementptr inbounds (%struct.anon.1, %struct.anon.1* @nop_pool, i64 0, i32 2), align 4, !dbg !4334
  %0 = load i8*, i8** bitcast (%struct.anon.1* @nop_pool to i8**), align 8, !dbg !4335
  tail call void @free(i8* %0) #6, !dbg !4336
  store %struct.rtx_def** null, %struct.rtx_def*** getelementptr inbounds (%struct.anon.1, %struct.anon.1* @nop_pool, i64 0, i32 0), align 8, !dbg !4337
  ret void, !dbg !4338
}

; Function Attrs: nounwind uwtable
define dso_local void @vinsn_attach(%struct.vinsn_def* %vi) local_unnamed_addr #5 !dbg !4339 {
entry:
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !4343, metadata !DIExpression()), !dbg !4344
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 0, !dbg !4345
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4345
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !4345
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4345

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1219, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4345
  br label %cond.end, !dbg !4345

cond.end:                                         ; preds = %entry, %cond.true
  %count = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 4, !dbg !4346
  %1 = load i32, i32* %count, align 8, !dbg !4347
  %inc = add nsw i32 %1, 1, !dbg !4347
  store i32 %inc, i32* %count, align 8, !dbg !4347
  ret void, !dbg !4348
}

; Function Attrs: nounwind uwtable
define dso_local %struct.vinsn_def* @vinsn_copy(%struct.vinsn_def* %vi, i8 zeroext %reattach_p) local_unnamed_addr #5 !dbg !4349 {
entry:
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !4353, metadata !DIExpression()), !dbg !4358
  call void @llvm.dbg.value(metadata i8 %reattach_p, metadata !4354, metadata !DIExpression()), !dbg !4358
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 1, i32 0, !dbg !4359
  %0 = load i32, i32* %type, align 8, !dbg !4359
  %cmp = icmp eq i32 %0, 23, !dbg !4359
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4359

lor.rhs:                                          ; preds = %entry
  %cmp3 = icmp ne i32 %0, 24, !dbg !4359
  %phitmp = zext i1 %cmp3 to i8, !dbg !4359
  br label %lor.end, !dbg !4359

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i8 [ 0, %entry ], [ %phitmp, %lor.rhs ]
  call void @llvm.dbg.value(metadata i8 %1, metadata !4356, metadata !DIExpression()), !dbg !4358
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 0, !dbg !4360
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4360
  %call = tail call %struct.rtx_def* @create_copy_of_insn_rtx(%struct.rtx_def* %2) #8, !dbg !4361
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4355, metadata !DIExpression()), !dbg !4358
  %call4 = tail call %struct.vinsn_def* @create_vinsn_from_insn_rtx(%struct.rtx_def* %call, i8 zeroext %1) #8, !dbg !4362
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %call4, metadata !4357, metadata !DIExpression()), !dbg !4358
  %tobool = icmp eq i8 %reattach_p, 0, !dbg !4363
  br i1 %tobool, label %if.end, label %if.then, !dbg !4365

if.then:                                          ; preds = %lor.end
  tail call void @vinsn_detach(%struct.vinsn_def* %vi) #8, !dbg !4366
  tail call void @vinsn_attach(%struct.vinsn_def* %call4) #8, !dbg !4368
  br label %if.end, !dbg !4369

if.end:                                           ; preds = %lor.end, %if.then
  ret %struct.vinsn_def* %call4, !dbg !4370
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @create_copy_of_insn_rtx(%struct.rtx_def* %insn_rtx) local_unnamed_addr #5 !dbg !4371 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_rtx, metadata !4375, metadata !DIExpression()), !dbg !4377
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_rtx, i64 0, i32 0, !dbg !4378
  %bf.load = load i32, i32* %0, align 8, !dbg !4378
  %bf.clear = and i32 %bf.load, 65535, !dbg !4378
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !4378
  br i1 %cmp, label %if.then, label %if.end, !dbg !4380

if.then:                                          ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_rtx, i64 0, i32 1, !dbg !4381
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4381
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4381
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4381
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #6, !dbg !4382
  %call1 = tail call %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def* %call, %struct.rtx_def* %insn_rtx) #8, !dbg !4383
  br label %cleanup, !dbg !4384

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq i32 %bf.clear, 8, !dbg !4385
  br i1 %cmp4, label %cond.end, label %cond.true, !dbg !4385

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5563, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4385
  br label %cond.end, !dbg !4385

cond.end:                                         ; preds = %if.end, %cond.true
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_rtx, i64 0, i32 1, !dbg !4386
  %3 = getelementptr inbounds %union.u, %union.u* %u5, i64 1, i32 0, i32 0, i64 0, !dbg !4386
  %rt_rtx8 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !4386
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !4386
  %call9 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %4) #6, !dbg !4387
  %call10 = tail call %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def* %call9, %struct.rtx_def* null) #8, !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !4376, metadata !DIExpression()), !dbg !4377
  br label %cleanup, !dbg !4389

cleanup:                                          ; preds = %cond.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call1, %if.then ], [ %call10, %cond.end ], !dbg !4377
  ret %struct.rtx_def* %retval.0, !dbg !4390
}

; Function Attrs: nounwind uwtable
define dso_local %struct.vinsn_def* @create_vinsn_from_insn_rtx(%struct.rtx_def* %insn_rtx, i8 zeroext %force_unique_p) local_unnamed_addr #5 !dbg !4391 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_rtx, metadata !4395, metadata !DIExpression()), !dbg !4397
  call void @llvm.dbg.value(metadata i8 %force_unique_p, metadata !4396, metadata !DIExpression()), !dbg !4397
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_rtx, i64 0, i32 0, !dbg !4398
  %bf.load = load i32, i32* %0, align 8, !dbg !4398
  %bf.clear = and i32 %bf.load, 65535, !dbg !4398
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4398
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !4398

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4398
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !4398

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !4398
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !4398

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !4398
  br i1 %cmp11, label %land.lhs.true, label %cond.true, !dbg !4398

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_rtx, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4398
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4398
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4398
  %tobool = icmp eq %struct.rtx_def* %2, null, !dbg !4398
  br i1 %tobool, label %cond.end, label %land.lhs.true12, !dbg !4398

land.lhs.true12:                                  ; preds = %land.lhs.true
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_rtx, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4398
  %rt_rtx16 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !4398
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !4398
  %tobool17 = icmp eq %struct.rtx_def* %4, null, !dbg !4398
  br i1 %tobool17, label %cond.end, label %cond.true, !dbg !4398

cond.true:                                        ; preds = %land.lhs.true12, %lor.lhs.false8
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5547, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4398
  br label %cond.end, !dbg !4398

cond.end:                                         ; preds = %land.lhs.true12, %land.lhs.true, %cond.true
  %call = tail call fastcc %struct.vinsn_def* @vinsn_create(%struct.rtx_def* %insn_rtx, i8 zeroext %force_unique_p) #8, !dbg !4399
  ret %struct.vinsn_def* %call, !dbg !4400
}

; Function Attrs: nounwind uwtable
define dso_local void @vinsn_detach(%struct.vinsn_def* %vi) local_unnamed_addr #5 !dbg !4401 {
entry:
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !4403, metadata !DIExpression()), !dbg !4404
  %count = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 4, !dbg !4405
  %0 = load i32, i32* %count, align 8, !dbg !4405
  %cmp = icmp sgt i32 %0, 0, !dbg !4405
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4405

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1273, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4405
  %.pre = load i32, i32* %count, align 8, !dbg !4406
  br label %cond.end, !dbg !4405

cond.end:                                         ; preds = %entry, %cond.true
  %1 = phi i32 [ %0, %entry ], [ %.pre, %cond.true ], !dbg !4406
  %dec = add nsw i32 %1, -1, !dbg !4406
  store i32 %dec, i32* %count, align 8, !dbg !4406
  %cmp2 = icmp eq i32 %dec, 0, !dbg !4408
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4409

if.then:                                          ; preds = %cond.end
  tail call fastcc void @vinsn_delete(%struct.vinsn_def* %vi) #8, !dbg !4410
  br label %if.end, !dbg !4410

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !4411
}

; Function Attrs: nounwind uwtable
define internal fastcc void @vinsn_delete(%struct.vinsn_def* %vi) unnamed_addr #5 !dbg !4412 {
entry:
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !4414, metadata !DIExpression()), !dbg !4415
  %count = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 4, !dbg !4416
  %0 = load i32, i32* %count, align 8, !dbg !4416
  %cmp = icmp eq i32 %0, 0, !dbg !4416
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4416

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1259, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4416
  br label %cond.end, !dbg !4416

cond.end:                                         ; preds = %entry, %cond.true
  %reg_sets = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 1, i32 3, !dbg !4417
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !4417
  tail call void @return_regset_to_pool(%struct.bitmap_head_def* %1) #8, !dbg !4418
  %reg_uses = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 1, i32 5, !dbg !4419
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !4419
  tail call void @return_regset_to_pool(%struct.bitmap_head_def* %2) #8, !dbg !4420
  %reg_clobbers = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 1, i32 4, !dbg !4421
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !4421
  tail call void @return_regset_to_pool(%struct.bitmap_head_def* %3) #8, !dbg !4422
  %4 = bitcast %struct.vinsn_def* %vi to i8*, !dbg !4423
  tail call void @free(i8* %4) #6, !dbg !4424
  ret void, !dbg !4425
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @vinsn_cond_branch_p(%struct.vinsn_def* %vi) local_unnamed_addr #5 !dbg !4426 {
entry:
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !4430, metadata !DIExpression()), !dbg !4432
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 1, i32 0, !dbg !4433
  %0 = load i32, i32* %type, align 8, !dbg !4433
  %cmp = icmp eq i32 %0, 23, !dbg !4433
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !4433

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %0, 24, !dbg !4433
  br i1 %cmp3, label %cleanup, label %if.end, !dbg !4435

if.end:                                           ; preds = %lor.lhs.false
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 0, !dbg !4436
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4431, metadata !DIExpression()), !dbg !4432
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 1, !dbg !4437
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !4437
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4437
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 7, !dbg !4437
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4437
  %3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4437
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 1, !dbg !4437
  %4 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4437
  %cmp4 = icmp eq %struct.rtx_def* %4, %1, !dbg !4439
  br i1 %cmp4, label %if.end6, label %cleanup, !dbg !4440

if.end6:                                          ; preds = %if.end
  %call = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %1) #6, !dbg !4441
  br label %cleanup, !dbg !4442

cleanup:                                          ; preds = %if.end, %entry, %lor.lhs.false, %if.end6
  %retval.0 = phi i8 [ %call, %if.end6 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %if.end ], !dbg !4432
  ret i8 %retval.0, !dbg !4443
}

declare dso_local zeroext i8 @control_flow_insn_p(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @sel_vinsn_cost(%struct.vinsn_def* %vi) local_unnamed_addr #5 !dbg !4444 {
entry:
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !4448, metadata !DIExpression()), !dbg !4450
  %cost1 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 5, !dbg !4451
  %0 = load i32, i32* %cost1, align 4, !dbg !4451
  call void @llvm.dbg.value(metadata i32 %0, metadata !4449, metadata !DIExpression()), !dbg !4450
  %cmp = icmp slt i32 %0, 0, !dbg !4452
  br i1 %cmp, label %if.then, label %if.end, !dbg !4454

if.then:                                          ; preds = %entry
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 0, !dbg !4455
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4455
  %call = tail call fastcc i32 @sel_insn_rtx_cost(%struct.rtx_def* %1) #8, !dbg !4457
  call void @llvm.dbg.value(metadata i32 %call, metadata !4449, metadata !DIExpression()), !dbg !4450
  store i32 %call, i32* %cost1, align 4, !dbg !4458
  br label %if.end, !dbg !4459

if.end:                                           ; preds = %if.then, %entry
  %cost.0 = phi i32 [ %call, %if.then ], [ %0, %entry ], !dbg !4450
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !4449, metadata !DIExpression()), !dbg !4450
  ret i32 %cost.0, !dbg !4460
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @sel_insn_rtx_cost(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !4461 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4463, metadata !DIExpression()), !dbg !4465
  %call = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %insn) #8, !dbg !4466
  %cmp = icmp slt i32 %call, 0, !dbg !4468
  br i1 %cmp, label %if.end4, label %if.else, !dbg !4469

if.else:                                          ; preds = %entry
  %call1 = tail call i32 @insn_default_latency(%struct.rtx_def* %insn) #6, !dbg !4470
  call void @llvm.dbg.value(metadata i32 %call1, metadata !4464, metadata !DIExpression()), !dbg !4465
  %0 = icmp sgt i32 %call1, 0, !dbg !4472
  %spec.select = select i1 %0, i32 %call1, i32 0, !dbg !4472
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4464, metadata !DIExpression()), !dbg !4465
  br label %if.end4

if.end4:                                          ; preds = %entry, %if.else
  %cost.1 = phi i32 [ %spec.select, %if.else ], [ 0, %entry ], !dbg !4473
  call void @llvm.dbg.value(metadata i32 %cost.1, metadata !4464, metadata !DIExpression()), !dbg !4465
  ret i32 %cost.1, !dbg !4474
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @sel_gen_insn_from_rtx_after(%struct.rtx_def* %pattern, %struct._expr* %expr, i32 %seqno, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !4475 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !4479, metadata !DIExpression()), !dbg !4484
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4480, metadata !DIExpression()), !dbg !4484
  call void @llvm.dbg.value(metadata i32 %seqno, metadata !4481, metadata !DIExpression()), !dbg !4484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !4482, metadata !DIExpression()), !dbg !4484
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !4485
  %0 = load i8, i8* %target_available, align 8, !dbg !4485
  %cmp = icmp eq i8 %0, 1, !dbg !4485
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4485

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1344, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4485
  br label %cond.end, !dbg !4485

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %pattern, %struct.rtx_def* %after) #6, !dbg !4486
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4483, metadata !DIExpression()), !dbg !4484
  %call2 = tail call fastcc %struct._expr* @set_insn_init(%struct._expr* %expr, %struct.vinsn_def* null, i32 %seqno) #8, !dbg !4487
  tail call fastcc void @sel_init_new_insn(%struct.rtx_def* %call, i32 3) #8, !dbg !4488
  ret %struct.rtx_def* %call, !dbg !4489
}

declare dso_local %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @sel_gen_recovery_insn_from_rtx_after(%struct.rtx_def* %pattern, %struct._expr* %expr, i32 %seqno, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !4490 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !4492, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4493, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata i32 %seqno, metadata !4494, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !4495, metadata !DIExpression()), !dbg !4497
  %.b = load i1, i1* @init_insn_force_unique_p, align 1, !dbg !4498
  br i1 %.b, label %cond.true, label %cond.end, !dbg !4498

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1364, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4498
  br label %cond.end, !dbg !4498

cond.end:                                         ; preds = %entry, %cond.true
  store i1 true, i1* @init_insn_force_unique_p, align 1, !dbg !4499
  %call = tail call %struct.rtx_def* @sel_gen_insn_from_rtx_after(%struct.rtx_def* %pattern, %struct._expr* %expr, i32 %seqno, %struct.rtx_def* %after) #8, !dbg !4500
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4496, metadata !DIExpression()), !dbg !4497
  %0 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !4501
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %0, i64 0, i32 0, !dbg !4501
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4501
  %base8 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !4501
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4501
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4501
  %2 = load i32, i32* %rt_int, align 8, !dbg !4501
  %call12 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base8, i32 %2) #8, !dbg !4501
  %call13 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base, i32 %call12) #8, !dbg !4501
  %cant_move = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call13, i64 0, i32 7, !dbg !4501
  %bf.load = load i8, i8* %cant_move, align 8, !dbg !4502
  %bf.set = or i8 %bf.load, 1, !dbg !4502
  store i8 %bf.set, i8* %cant_move, align 8, !dbg !4502
  store i1 false, i1* @init_insn_force_unique_p, align 1, !dbg !4503
  ret %struct.rtx_def* %call, !dbg !4504
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4505 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_deps_insn_data_def_base* %vec_, metadata !4556, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4557, metadata !DIExpression()), !dbg !4558
  br label %land.end, !dbg !4559

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4559
  %arrayidx = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4559
  ret %struct._haifa_deps_insn_data* %arrayidx, !dbg !4559
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @sel_gen_insn_from_expr_after(%struct._expr* %expr, %struct.vinsn_def* %vinsn, i32 %seqno, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !4560 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4564, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vinsn, metadata !4565, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata i32 %seqno, metadata !4566, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !4567, metadata !DIExpression()), !dbg !4571
  %tobool = icmp eq %struct.vinsn_def* %vinsn, null, !dbg !4572
  br i1 %tobool, label %cond.false, label %cond.end, !dbg !4572

cond.false:                                       ; preds = %entry
  %vinsn1 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !4573
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !4573
  br label %cond.end, !dbg !4572

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %struct.vinsn_def* [ %0, %cond.false ], [ %vinsn, %entry ], !dbg !4572
  %call = tail call fastcc %struct._expr* @set_insn_init(%struct._expr* %expr, %struct.vinsn_def* %cond, i32 %seqno) #8, !dbg !4574
  call void @llvm.dbg.value(metadata %struct._expr* getelementptr inbounds (%struct._sel_insn_data, %struct._sel_insn_data* @_insn_init_ssid, i64 0, i32 0), metadata !4568, metadata !DIExpression()), !dbg !4571
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** getelementptr inbounds (%struct._sel_insn_data, %struct._sel_insn_data* @_insn_init_ssid, i64 0, i32 0, i32 0), align 8, !dbg !4575
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i64 0, i32 0, !dbg !4575
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4575
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4569, metadata !DIExpression()), !dbg !4571
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 1, !dbg !4576
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !4576
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4576
  tail call void @add_insn_after(%struct.rtx_def* %2, %struct.rtx_def* %after, %struct.basic_block_def* %3) #6, !dbg !4577
  call void @llvm.dbg.value(metadata i32 2, metadata !4570, metadata !DIExpression()), !dbg !4571
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4578
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !4578
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4578
  %rt_int = bitcast %union.rtunion_def* %arrayidx10 to i32*, !dbg !4578
  %5 = load i32, i32* %rt_int, align 8, !dbg !4578
  %call11 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %5) #8, !dbg !4578
  %cmp = icmp eq i32 %call11, 0, !dbg !4580
  %spec.select = select i1 %cmp, i32 3, i32 2, !dbg !4581
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4570, metadata !DIExpression()), !dbg !4571
  tail call fastcc void @sel_init_new_insn(%struct.rtx_def* %2, i32 %spec.select) #8, !dbg !4582
  ret %struct.rtx_def* %2, !dbg !4583
}

declare dso_local void @add_insn_after(%struct.rtx_def*, %struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @sel_move_insn(%struct._expr* %expr, i32 %seqno, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !4584 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4588, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.value(metadata i32 %seqno, metadata !4589, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !4590, metadata !DIExpression()), !dbg !4594
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !4595
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4595
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 0, !dbg !4595
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4595
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4591, metadata !DIExpression()), !dbg !4594
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 1, i32 0, i32 1, !dbg !4596
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !4596
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4596
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !4592, metadata !DIExpression()), !dbg !4594
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4597
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !4597
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4597
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4593, metadata !DIExpression()), !dbg !4594
  %5 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4598
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %5, i64 0, i32 0, !dbg !4598
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4598
  %base6 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !4598
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4598
  %rt_int = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !4598
  %7 = load i32, i32* %rt_int, align 8, !dbg !4598
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base6, i32 %7) #8, !dbg !4598
  %call13 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #8, !dbg !4598
  %vinsn15 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call13, i64 0, i32 0, i32 0, !dbg !4598
  %8 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn15, align 8, !dbg !4598
  %cmp = icmp eq %struct.vinsn_def* %8, null, !dbg !4598
  br i1 %cmp, label %cond.true16, label %cond.end18, !dbg !4598

cond.true16:                                      ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1408, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4598
  br label %cond.end18, !dbg !4598

cond.end18:                                       ; preds = %entry, %cond.true16
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4599
  %rt_rtx23 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !4599
  store %struct.rtx_def* %after, %struct.rtx_def** %rt_rtx23, align 8, !dbg !4600
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4601
  %rt_rtx27 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !4601
  store %struct.rtx_def* %4, %struct.rtx_def** %rt_rtx27, align 8, !dbg !4602
  store %struct.rtx_def* %1, %struct.rtx_def** %rt_rtx, align 8, !dbg !4603
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4604
  %rt_rtx35 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !4604
  store %struct.rtx_def* %1, %struct.rtx_def** %rt_rtx35, align 8, !dbg !4605
  tail call void @df_insn_change_bb(%struct.rtx_def* %1, %struct.basic_block_def* %2) #6, !dbg !4606
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 7, !dbg !4607
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4607
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4607
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 1, !dbg !4607
  %13 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4607
  %cmp36 = icmp eq %struct.rtx_def* %13, %after, !dbg !4609
  br i1 %cmp36, label %if.then, label %if.end, !dbg !4610

if.then:                                          ; preds = %cond.end18
  store %struct.rtx_def* %1, %struct.rtx_def** %end_, align 8, !dbg !4611
  br label %if.end, !dbg !4612

if.end:                                           ; preds = %if.then, %cond.end18
  tail call fastcc void @prepare_insn_expr(%struct.rtx_def* %1, i32 %seqno) #8, !dbg !4613
  ret %struct.rtx_def* %1, !dbg !4614
}

declare dso_local void @df_insn_change_bb(%struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @prepare_insn_expr(%struct.rtx_def* %insn, i32 %seqno) unnamed_addr #5 !dbg !4615 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4617, metadata !DIExpression()), !dbg !4621
  call void @llvm.dbg.value(metadata i32 %seqno, metadata !4618, metadata !DIExpression()), !dbg !4621
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4622
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !4622
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4622
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !4622
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4622
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4622
  %2 = load i32, i32* %rt_int, align 8, !dbg !4622
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #8, !dbg !4622
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #8, !dbg !4622
  call void @llvm.dbg.value(metadata %struct._sel_insn_data* %call7, metadata !4619, metadata !DIExpression()), !dbg !4621
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4623
  %base11 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i64 0, i32 0, !dbg !4623
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4623
  %base17 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !4623
  %5 = load i32, i32* %rt_int, align 8, !dbg !4623
  %call25 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base17, i32 %5) #8, !dbg !4623
  %call26 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base11, i32 %call25) #8, !dbg !4623
  %seqno27 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call26, i64 0, i32 2, !dbg !4623
  store i32 %seqno, i32* %seqno27, align 4, !dbg !4624
  %arrayidx30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4625
  %rt_bb = bitcast %struct.object_block** %arrayidx30 to %struct.basic_block_def**, !dbg !4625
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4625
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 9, !dbg !4625
  %7 = load i32, i32* %index, align 8, !dbg !4625
  %orig_bb_index = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 6, !dbg !4626
  store i32 %7, i32* %orig_bb_index, align 4, !dbg !4627
  %spec = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 1, !dbg !4628
  store i32 0, i32* %spec, align 8, !dbg !4629
  %orig_sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 9, !dbg !4630
  store i32 0, i32* %orig_sched_cycle, align 8, !dbg !4631
  %was_substituted = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 12, !dbg !4632
  %bf.load = load i8, i8* %was_substituted, align 1, !dbg !4633
  %bf.clear32 = and i8 %bf.load, -7, !dbg !4634
  store i8 %bf.clear32, i8* %was_substituted, align 1, !dbg !4634
  %target_available = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 11, !dbg !4635
  store i8 1, i8* %target_available, align 8, !dbg !4636
  %8 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4637
  %base35 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %8, i64 0, i32 0, !dbg !4637
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4637
  %base41 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %9, i64 0, i32 0, !dbg !4637
  %10 = load i32, i32* %rt_int, align 8, !dbg !4637
  %call49 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base41, i32 %10) #8, !dbg !4637
  %call50 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base35, i32 %call49) #8, !dbg !4637
  %live_valid_p = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call50, i64 0, i32 13, !dbg !4637
  %bf.load51 = load i8, i8* %live_valid_p, align 4, !dbg !4638
  %bf.clear52 = and i8 %bf.load51, -2, !dbg !4638
  store i8 %bf.clear52, i8* %live_valid_p, align 4, !dbg !4638
  %spec_done_ds = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 7, !dbg !4639
  %11 = load i32, i32* %spec_done_ds, align 8, !dbg !4639
  call void @llvm.dbg.value(metadata i32 %11, metadata !4620, metadata !DIExpression()), !dbg !4621
  %tobool53 = icmp eq i32 %11, 0, !dbg !4640
  br i1 %tobool53, label %if.end, label %if.then, !dbg !4642

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._sel_insn_data* %call7, metadata !4619, metadata !DIExpression()), !dbg !4621
  %call54 = tail call i32 @ds_get_max_dep_weak(i32 %11) #6, !dbg !4643
  store i32 %call54, i32* %spec_done_ds, align 8, !dbg !4644
  br label %if.end, !dbg !4645

if.end:                                           ; preds = %entry, %if.then
  %history_of_changes = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 10, !dbg !4646
  tail call fastcc void @free_history_vect(%struct.VEC_expr_history_def_heap** nonnull %history_of_changes) #8, !dbg !4647
  ret void, !dbg !4648
}

; Function Attrs: nounwind uwtable
define dso_local i32 @find_in_history_vect(%struct.VEC_expr_history_def_heap* %vect, %struct.rtx_def* %insn, %struct.vinsn_def* %new_vinsn, i8 zeroext %originators_p) local_unnamed_addr #5 !dbg !4649 {
entry:
  %ind = alloca i32, align 4
  %uid = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap* %vect, metadata !4653, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4654, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %new_vinsn, metadata !4655, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i8 %originators_p, metadata !4656, metadata !DIExpression()), !dbg !4669
  %0 = bitcast i32* %ind to i8*, !dbg !4670
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !4670
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4671
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4671
  %1 = load i32, i32* %rt_int, align 8, !dbg !4671
  call void @llvm.dbg.value(metadata i32* %ind, metadata !4657, metadata !DIExpression(DW_OP_deref)), !dbg !4669
  %call = call fastcc zeroext i8 @find_in_history_vect_1(%struct.VEC_expr_history_def_heap* %vect, i32 %1, %struct.vinsn_def* %new_vinsn, i8 zeroext 0, i32* nonnull %ind) #8, !dbg !4673
  %tobool = icmp eq i8 %call, 0, !dbg !4673
  br i1 %tobool, label %if.end, label %if.then, !dbg !4674

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ind, align 4, !dbg !4675
  call void @llvm.dbg.value(metadata i32 %2, metadata !4657, metadata !DIExpression()), !dbg !4669
  br label %cleanup44, !dbg !4676

if.end:                                           ; preds = %entry
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4677
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i64 0, i32 0, !dbg !4677
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4677
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !4677
  %5 = load i32, i32* %rt_int, align 8, !dbg !4677
  %call12 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base4, i32 %5) #8, !dbg !4677
  %call13 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call12) #8, !dbg !4677
  %originators = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call13, i64 0, i32 6, !dbg !4677
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators, align 8, !dbg !4677
  %tobool14 = icmp ne %struct.bitmap_head_def* %6, null, !dbg !4677
  %tobool15 = icmp ne i8 %originators_p, 0, !dbg !4678
  %or.cond = and i1 %tobool14, %tobool15, !dbg !4679
  br i1 %or.cond, label %if.then16, label %if.end43, !dbg !4679

if.then16:                                        ; preds = %if.end
  %7 = bitcast i32* %uid to i8*, !dbg !4680
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7, !dbg !4680
  %8 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4681
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #7, !dbg !4681
  %9 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4682
  %base19 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %9, i64 0, i32 0, !dbg !4682
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4682
  %base25 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !4682
  %11 = load i32, i32* %rt_int, align 8, !dbg !4682
  %call33 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base25, i32 %11) #8, !dbg !4682
  %call34 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base19, i32 %call33) #8, !dbg !4682
  %originators35 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call34, i64 0, i32 6, !dbg !4682
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators35, align 8, !dbg !4682
  call void @llvm.dbg.value(metadata i32* %uid, metadata !4658, metadata !DIExpression(DW_OP_deref)), !dbg !4684
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4661, metadata !DIExpression(DW_OP_deref)), !dbg !4684
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %12, i32 0, i32* nonnull %uid) #8, !dbg !4682
  br label %for.cond, !dbg !4682

for.cond:                                         ; preds = %for.inc, %if.then16
  call void @llvm.dbg.value(metadata i32* %uid, metadata !4658, metadata !DIExpression(DW_OP_deref)), !dbg !4684
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4661, metadata !DIExpression(DW_OP_deref)), !dbg !4684
  %call36 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %uid) #8, !dbg !4685
  %tobool37 = icmp eq i8 %call36, 0, !dbg !4682
  br i1 %tobool37, label %cleanup.loopexit, label %for.body, !dbg !4682

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %uid, align 4, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %13, metadata !4658, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i32* %ind, metadata !4657, metadata !DIExpression(DW_OP_deref)), !dbg !4669
  %call38 = call fastcc zeroext i8 @find_in_history_vect_1(%struct.VEC_expr_history_def_heap* %vect, i32 %13, %struct.vinsn_def* %new_vinsn, i8 zeroext 0, i32* nonnull %ind) #8, !dbg !4689
  %tobool39 = icmp eq i8 %call38, 0, !dbg !4689
  br i1 %tobool39, label %for.inc, label %if.then40, !dbg !4690

if.then40:                                        ; preds = %for.body
  %14 = load i32, i32* %ind, align 4, !dbg !4691
  call void @llvm.dbg.value(metadata i32 %14, metadata !4657, metadata !DIExpression()), !dbg !4669
  br label %cleanup, !dbg !4692

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32* %uid, metadata !4658, metadata !DIExpression(DW_OP_deref)), !dbg !4684
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4661, metadata !DIExpression(DW_OP_deref)), !dbg !4684
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %uid) #8, !dbg !4685
  br label %for.cond, !dbg !4685, !llvm.loop !4693

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4695

cleanup:                                          ; preds = %cleanup.loopexit, %if.then40
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then40 ], [ true, %cleanup.loopexit ]
  %retval.0 = phi i32 [ %14, %if.then40 ], [ undef, %cleanup.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #7, !dbg !4695
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7, !dbg !4695
  br i1 %cleanup.dest.slot.0, label %if.end43, label %cleanup44

if.end43:                                         ; preds = %cleanup, %if.end
  br label %cleanup44, !dbg !4696

cleanup44:                                        ; preds = %cleanup, %if.end43, %if.then
  %retval.1 = phi i32 [ %2, %if.then ], [ %retval.0, %cleanup ], [ -1, %if.end43 ], !dbg !4669
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !4697
  ret i32 %retval.1, !dbg !4697
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @find_in_history_vect_1(%struct.VEC_expr_history_def_heap* %vect, i32 %uid, %struct.vinsn_def* %new_vinsn, i8 zeroext %compare_vinsns, i32* %indp) unnamed_addr #5 !dbg !4698 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap* %vect, metadata !4702, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %uid, metadata !4703, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %new_vinsn, metadata !4704, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8 %compare_vinsns, metadata !4705, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32* %indp, metadata !4706, metadata !DIExpression()), !dbg !4715
  %base = getelementptr inbounds %struct.VEC_expr_history_def_heap, %struct.VEC_expr_history_def_heap* %vect, i64 0, i32 0, !dbg !4716
  %call = tail call fastcc i32 @VEC_expr_history_def_base_length(%struct.VEC_expr_history_def_base* %base) #8, !dbg !4716
  call void @llvm.dbg.value(metadata i32 %call, metadata !4711, metadata !DIExpression()), !dbg !4715
  %cmp = icmp eq i32 %call, 0, !dbg !4717
  br i1 %cmp, label %if.then, label %if.end, !dbg !4719

if.then:                                          ; preds = %entry
  store i32 0, i32* %indp, align 4, !dbg !4720
  br label %cleanup23, !dbg !4722

if.end:                                           ; preds = %entry
  %call7 = tail call fastcc %struct.expr_history_def_1* @VEC_expr_history_def_base_address(%struct.VEC_expr_history_def_base* %base) #8, !dbg !4723
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %call7, metadata !4707, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 0, metadata !4709, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %call, metadata !4710, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4715
  %tobool13 = icmp eq i8 %compare_vinsns, 0, !dbg !4724
  br i1 %tobool13, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !4726

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %while.cond, !dbg !4726

if.end.split.us:                                  ; preds = %if.end
  br label %while.cond.us, !dbg !4726

while.cond.us:                                    ; preds = %cleanup.us, %if.end.split.us
  %i.0.us = phi i32 [ 0, %if.end.split.us ], [ %i.1.us, %cleanup.us ], !dbg !4727
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !4709, metadata !DIExpression()), !dbg !4715
  %cmp8.us = icmp slt i32 %i.0.us, %call, !dbg !4728
  br i1 %cmp8.us, label %while.body.us, label %while.end.us-lcssa.us, !dbg !4726

while.body.us:                                    ; preds = %while.cond.us
  %idxprom.us = sext i32 %i.0.us to i64, !dbg !4729
  %uid9.us = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %call7, i64 %idxprom.us, i32 0, !dbg !4730
  %0 = load i32, i32* %uid9.us, align 8, !dbg !4730
  call void @llvm.dbg.value(metadata i32 %0, metadata !4712, metadata !DIExpression()), !dbg !4731
  call void @llvm.dbg.value(metadata %struct.vinsn_def* undef, metadata !4714, metadata !DIExpression()), !dbg !4731
  %cmp12.us = icmp eq i32 %0, %uid, !dbg !4732
  br i1 %cmp12.us, label %land.lhs.true.us, label %if.else.us, !dbg !4733

land.lhs.true.us:                                 ; preds = %while.body.us
  store i32 %i.0.us, i32* %indp, align 4, !dbg !4734
  br label %cleanup.us, !dbg !4736

if.else.us:                                       ; preds = %while.body.us
  %cmp17.us = icmp ugt i32 %0, %uid, !dbg !4737
  %not.cmp17.us = xor i1 %cmp17.us, true, !dbg !4739
  %inc.us = zext i1 %not.cmp17.us to i32, !dbg !4739
  %spec.select.us = add nsw i32 %i.0.us, %inc.us, !dbg !4739
  %spec.select1.us = select i1 %cmp17.us, i32 3, i32 0, !dbg !4739
  br label %cleanup.us, !dbg !4739

cleanup.us:                                       ; preds = %land.lhs.true.us, %if.else.us
  %i.1.us = phi i32 [ %i.0.us, %land.lhs.true.us ], [ %spec.select.us, %if.else.us ], !dbg !4715
  %cleanup.dest.slot.0.us = phi i32 [ 1, %land.lhs.true.us ], [ %spec.select1.us, %if.else.us ]
  call void @llvm.dbg.value(metadata i32 %i.1.us, metadata !4709, metadata !DIExpression()), !dbg !4715
  switch i32 %cleanup.dest.slot.0.us, label %cleanup23.loopexit.us-lcssa.us [
    i32 0, label %while.cond.us
    i32 3, label %while.end.us-lcssa.us
  ], !llvm.loop !4740

while.end.us-lcssa.us:                            ; preds = %cleanup.us, %while.cond.us
  %i.2.ph.us = phi i32 [ %i.0.us, %while.cond.us ], [ %i.1.us, %cleanup.us ]
  br label %while.end, !dbg !4742

cleanup23.loopexit.us-lcssa.us:                   ; preds = %cleanup.us
  br label %cleanup23.loopexit, !dbg !4743

while.cond:                                       ; preds = %cleanup, %if.end.if.end.split_crit_edge
  %i.0 = phi i32 [ 0, %if.end.if.end.split_crit_edge ], [ %i.1, %cleanup ], !dbg !4727
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4709, metadata !DIExpression()), !dbg !4715
  %cmp8 = icmp slt i32 %i.0, %call, !dbg !4728
  br i1 %cmp8, label %while.body, label %while.end.us-lcssa, !dbg !4726

while.body:                                       ; preds = %while.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !4729
  %uid9 = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %call7, i64 %idxprom, i32 0, !dbg !4730
  %1 = load i32, i32* %uid9, align 8, !dbg !4730
  call void @llvm.dbg.value(metadata i32 %1, metadata !4712, metadata !DIExpression()), !dbg !4731
  call void @llvm.dbg.value(metadata %struct.vinsn_def* undef, metadata !4714, metadata !DIExpression()), !dbg !4731
  %cmp12 = icmp eq i32 %1, %uid, !dbg !4732
  br i1 %cmp12, label %land.lhs.true, label %if.else, !dbg !4733

land.lhs.true:                                    ; preds = %while.body
  %new_expr_vinsn = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %call7, i64 %idxprom, i32 2, !dbg !4744
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %new_expr_vinsn, align 8, !dbg !4744
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %2, metadata !4714, metadata !DIExpression()), !dbg !4731
  %call14 = tail call zeroext i8 @vinsn_equal_p(%struct.vinsn_def* %2, %struct.vinsn_def* %new_vinsn) #8, !dbg !4745
  %tobool15 = icmp eq i8 %call14, 0, !dbg !4745
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !4746

if.then16:                                        ; preds = %land.lhs.true
  store i32 %i.0, i32* %indp, align 4, !dbg !4734
  br label %cleanup, !dbg !4736

if.else:                                          ; preds = %land.lhs.true, %while.body
  %cmp17 = icmp ugt i32 %1, %uid, !dbg !4737
  %not.cmp17 = xor i1 %cmp17, true, !dbg !4739
  %inc = zext i1 %not.cmp17 to i32, !dbg !4739
  %spec.select = add nsw i32 %i.0, %inc, !dbg !4739
  %spec.select1 = select i1 %cmp17, i32 3, i32 0, !dbg !4739
  br label %cleanup, !dbg !4739

cleanup:                                          ; preds = %if.else, %if.then16
  %i.1 = phi i32 [ %i.0, %if.then16 ], [ %spec.select, %if.else ], !dbg !4715
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then16 ], [ %spec.select1, %if.else ]
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4709, metadata !DIExpression()), !dbg !4715
  switch i32 %cleanup.dest.slot.0, label %cleanup23.loopexit.us-lcssa [
    i32 0, label %while.cond
    i32 3, label %while.end.us-lcssa
  ], !llvm.loop !4740

while.end.us-lcssa:                               ; preds = %while.cond, %cleanup
  %i.2.ph = phi i32 [ %i.0, %while.cond ], [ %i.1, %cleanup ]
  br label %while.end, !dbg !4742

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %i.2 = phi i32 [ %i.2.ph, %while.end.us-lcssa ], [ %i.2.ph.us, %while.end.us-lcssa.us ], !dbg !4727
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !4709, metadata !DIExpression()), !dbg !4715
  store i32 %i.2, i32* %indp, align 4, !dbg !4742
  br label %cleanup23, !dbg !4747

cleanup23.loopexit.us-lcssa:                      ; preds = %cleanup
  br label %cleanup23.loopexit, !dbg !4743

cleanup23.loopexit:                               ; preds = %cleanup23.loopexit.us-lcssa.us, %cleanup23.loopexit.us-lcssa
  br label %cleanup23, !dbg !4743

cleanup23:                                        ; preds = %cleanup23.loopexit, %while.end, %if.then
  %retval.2 = phi i8 [ 0, %if.then ], [ 0, %while.end ], [ 1, %cleanup23.loopexit ], !dbg !4715
  ret i8 %retval.2, !dbg !4743
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !4748 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4757, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !4758, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.value(metadata i32 0, metadata !4759, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4760, metadata !DIExpression()), !dbg !4761
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !4762
  %1 = load i64, i64* %0, align 8, !dbg !4762
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4763
  store i64 %1, i64* %2, align 8, !dbg !4763
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !4764
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !4765
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4766
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !4769
  br label %while.body, !dbg !4769

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !4770
  br i1 %tobool, label %if.then, label %if.end, !dbg !4771

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !4772
  br label %while.end, !dbg !4774

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !4775

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !4769, !llvm.loop !4776

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !4778

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !4778
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !4780
  %7 = load i32, i32* %indx9, align 8, !dbg !4780
  %cmp11 = icmp eq i32 %7, 0, !dbg !4781
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !4782

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !4783
  %8 = load i32, i32* %indx14, align 8, !dbg !4783
  %mul = shl i32 %8, 7, !dbg !4784
  call void @llvm.dbg.value(metadata i32 %mul, metadata !4759, metadata !DIExpression()), !dbg !4761
  br label %if.end15, !dbg !4785

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !4759, metadata !DIExpression()), !dbg !4761
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4786
  store i32 0, i32* %word_no, align 8, !dbg !4787
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !4788
  %9 = load i64, i64* %arrayidx, align 8, !dbg !4788
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4789
  store i64 %9, i64* %bits21, align 8, !dbg !4790
  %tobool23 = icmp eq i64 %9, 0, !dbg !4791
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !4791
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !4792
  call void @llvm.dbg.value(metadata i32 %add, metadata !4759, metadata !DIExpression()), !dbg !4761
  store i32 %add, i32* %bit_no, align 4, !dbg !4793
  ret void, !dbg !4794
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4795 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4799, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4800, metadata !DIExpression()), !dbg !4804
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4805
  %0 = load i64, i64* %bits, align 8, !dbg !4805
  %tobool = icmp eq i64 %0, 0, !dbg !4806
  br i1 %tobool, label %if.end, label %next_bit, !dbg !4807

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !4808
  br label %next_bit, !dbg !4811

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !4801), !dbg !4812
  br label %while.cond, !dbg !4811

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !4813
  %and = and i64 %2, 1, !dbg !4814
  %tobool2 = icmp eq i64 %and, 0, !dbg !4815
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !4811

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !4816
  store i64 %shr, i64* %bits, align 8, !dbg !4816
  %3 = load i32, i32* %bit_no, align 4, !dbg !4818
  %add = add i32 %3, 1, !dbg !4818
  store i32 %add, i32* %bit_no, align 4, !dbg !4818
  %.pre = load i64, i64* %bits, align 8, !dbg !4813
  br label %while.cond, !dbg !4811, !llvm.loop !4819

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !4821
  %sub = add i32 %4, 63, !dbg !4822
  %div = and i32 %sub, -64, !dbg !4823
  store i32 %div, i32* %bit_no, align 4, !dbg !4824
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4825
  %5 = load i32, i32* %word_no, align 8, !dbg !4826
  %inc = add i32 %5, 1, !dbg !4826
  store i32 %inc, i32* %word_no, align 8, !dbg !4826
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4827
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4827
  br label %while.body6, !dbg !4828

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !4829

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !4830
  %cmp = icmp eq i32 %8, 2, !dbg !4831
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !4827
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !4829

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !4808
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !4808
  %10 = load i64, i64* %arrayidx, align 8, !dbg !4808
  store i64 %10, i64* %bits, align 8, !dbg !4832
  %tobool14 = icmp eq i64 %10, 0, !dbg !4833
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !4835

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !4836
  %add17 = add i32 %11, 64, !dbg !4836
  store i32 %add17, i32* %bit_no, align 4, !dbg !4836
  %12 = load i32, i32* %word_no, align 8, !dbg !4837
  %inc19 = add i32 %12, 1, !dbg !4837
  store i32 %inc19, i32* %word_no, align 8, !dbg !4837
  br label %while.cond7, !dbg !4829, !llvm.loop !4838

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !4827
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !4840
  %14 = load i64, i64* %13, align 8, !dbg !4840
  store i64 %14, i64* %6, align 8, !dbg !4841
  %tobool24 = icmp eq i64 %14, 0, !dbg !4842
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !4844

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !4844
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !4845
  %16 = load i32, i32* %indx, align 8, !dbg !4845
  %mul28 = shl i32 %16, 7, !dbg !4846
  store i32 %mul28, i32* %bit_no, align 4, !dbg !4847
  store i32 0, i32* %word_no, align 8, !dbg !4848
  br label %while.body6, !dbg !4828, !llvm.loop !4849

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !4851

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !4851

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !4804
  ret i8 %retval.0, !dbg !4851
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4852 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4856, metadata !DIExpression()), !dbg !4858
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4857, metadata !DIExpression()), !dbg !4858
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4859
  %0 = load i64, i64* %bits, align 8, !dbg !4860
  %shr = lshr i64 %0, 1, !dbg !4860
  store i64 %shr, i64* %bits, align 8, !dbg !4860
  %1 = load i32, i32* %bit_no, align 4, !dbg !4861
  %add = add i32 %1, 1, !dbg !4861
  store i32 %add, i32* %bit_no, align 4, !dbg !4861
  ret void, !dbg !4862
}

; Function Attrs: nounwind uwtable
define dso_local void @insert_in_history_vect(%struct.VEC_expr_history_def_heap** %pvect, i32 %uid, i32 %type, %struct.vinsn_def* %old_expr_vinsn, %struct.vinsn_def* %new_expr_vinsn, i32 %spec_ds) local_unnamed_addr #5 !dbg !4863 {
entry:
  %vect = alloca %struct.VEC_expr_history_def_heap*, align 8
  %temp = alloca %struct.expr_history_def_1, align 8
  %ind = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap** %pvect, metadata !4868, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %uid, metadata !4869, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %type, metadata !4870, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %old_expr_vinsn, metadata !4871, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %new_expr_vinsn, metadata !4872, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %spec_ds, metadata !4873, metadata !DIExpression()), !dbg !4881
  %0 = bitcast %struct.VEC_expr_history_def_heap** %vect to i8*, !dbg !4882
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4882
  %1 = bitcast %struct.VEC_expr_history_def_heap** %pvect to i64*, !dbg !4883
  %2 = load i64, i64* %1, align 8, !dbg !4883
  %3 = bitcast %struct.VEC_expr_history_def_heap** %vect to i64*, !dbg !4884
  store i64 %2, i64* %3, align 8, !dbg !4884
  %4 = bitcast %struct.expr_history_def_1* %temp to i8*, !dbg !4885
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #7, !dbg !4885
  %5 = bitcast i32* %ind to i8*, !dbg !4886
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7, !dbg !4886
  %.cast = inttoptr i64 %2 to %struct.VEC_expr_history_def_heap*, !dbg !4887
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap* %.cast, metadata !4874, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32* %ind, metadata !4877, metadata !DIExpression(DW_OP_deref)), !dbg !4881
  %call = call fastcc zeroext i8 @find_in_history_vect_1(%struct.VEC_expr_history_def_heap* %.cast, i32 %uid, %struct.vinsn_def* %new_expr_vinsn, i8 zeroext 1, i32* nonnull %ind) #8, !dbg !4888
  call void @llvm.dbg.value(metadata i8 %call, metadata !4876, metadata !DIExpression()), !dbg !4881
  %tobool = icmp eq i8 %call, 0, !dbg !4889
  br i1 %tobool, label %if.end8, label %if.then, !dbg !4890

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap* %.cast, metadata !4874, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap* %.cast, metadata !4874, metadata !DIExpression()), !dbg !4881
  %base = getelementptr inbounds %struct.VEC_expr_history_def_heap, %struct.VEC_expr_history_def_heap* %.cast, i64 0, i32 0, !dbg !4891
  %6 = load i32, i32* %ind, align 4, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %6, metadata !4877, metadata !DIExpression()), !dbg !4881
  %call2 = call fastcc %struct.expr_history_def_1* @VEC_expr_history_def_base_index(%struct.VEC_expr_history_def_base* %base, i32 %6) #8, !dbg !4891
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %call2, metadata !4878, metadata !DIExpression()), !dbg !4892
  %spec_ds3 = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %call2, i64 0, i32 3, !dbg !4893
  %7 = load i32, i32* %spec_ds3, align 8, !dbg !4893
  %cmp = icmp eq i32 %7, %spec_ds, !dbg !4895
  br i1 %cmp, label %cleanup, label %if.then4, !dbg !4896

if.then4:                                         ; preds = %if.then
  %call6 = call i32 @ds_max_merge(i32 %7, i32 %spec_ds) #6, !dbg !4897
  store i32 %call6, i32* %spec_ds3, align 8, !dbg !4898
  br label %cleanup, !dbg !4899

if.end8:                                          ; preds = %entry
  %uid9 = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %temp, i64 0, i32 0, !dbg !4900
  store i32 %uid, i32* %uid9, align 8, !dbg !4901
  %old_expr_vinsn10 = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %temp, i64 0, i32 1, !dbg !4902
  store %struct.vinsn_def* %old_expr_vinsn, %struct.vinsn_def** %old_expr_vinsn10, align 8, !dbg !4903
  %new_expr_vinsn11 = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %temp, i64 0, i32 2, !dbg !4904
  store %struct.vinsn_def* %new_expr_vinsn, %struct.vinsn_def** %new_expr_vinsn11, align 8, !dbg !4905
  %spec_ds12 = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %temp, i64 0, i32 3, !dbg !4906
  store i32 %spec_ds, i32* %spec_ds12, align 8, !dbg !4907
  %type13 = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %temp, i64 0, i32 4, !dbg !4908
  store i32 %type, i32* %type13, align 4, !dbg !4909
  call void @vinsn_attach(%struct.vinsn_def* %old_expr_vinsn) #8, !dbg !4910
  call void @vinsn_attach(%struct.vinsn_def* %new_expr_vinsn) #8, !dbg !4911
  %8 = load i32, i32* %ind, align 4, !dbg !4912
  call void @llvm.dbg.value(metadata i32 %8, metadata !4877, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap** %vect, metadata !4874, metadata !DIExpression(DW_OP_deref)), !dbg !4881
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %temp, metadata !4875, metadata !DIExpression(DW_OP_deref)), !dbg !4881
  %call14 = call fastcc %struct.expr_history_def_1* @VEC_expr_history_def_heap_safe_insert(%struct.VEC_expr_history_def_heap** nonnull %vect, i32 %8, %struct.expr_history_def_1* nonnull %temp) #8, !dbg !4912
  %9 = load i64, i64* %3, align 8, !dbg !4913
  store i64 %9, i64* %1, align 8, !dbg !4914
  br label %cleanup, !dbg !4915

cleanup:                                          ; preds = %if.then, %if.then4, %if.end8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7, !dbg !4915
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #7, !dbg !4915
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4915
  ret void, !dbg !4915
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.expr_history_def_1* @VEC_expr_history_def_base_index(%struct.VEC_expr_history_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4916 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_base* %vec_, metadata !4921, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4922, metadata !DIExpression()), !dbg !4923
  br label %land.end, !dbg !4924

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4924
  %arrayidx = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4924
  ret %struct.expr_history_def_1* %arrayidx, !dbg !4924
}

declare dso_local i32 @ds_max_merge(i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.expr_history_def_1* @VEC_expr_history_def_heap_safe_insert(%struct.VEC_expr_history_def_heap** %vec_, i32 %ix_, %struct.expr_history_def_1* %obj_) unnamed_addr #0 !dbg !4925 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap** %vec_, metadata !4931, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4932, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %obj_, metadata !4933, metadata !DIExpression()), !dbg !4934
  %call = tail call fastcc i32 @VEC_expr_history_def_heap_reserve(%struct.VEC_expr_history_def_heap** %vec_, i32 1) #8, !dbg !4935
  %0 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %vec_, align 8, !dbg !4935
  %tobool = icmp eq %struct.VEC_expr_history_def_heap* %0, null, !dbg !4935
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4935

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_expr_history_def_heap, %struct.VEC_expr_history_def_heap* %0, i64 0, i32 0, !dbg !4935
  br label %cond.end, !dbg !4935

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_expr_history_def_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4935
  %call1 = tail call fastcc %struct.expr_history_def_1* @VEC_expr_history_def_base_quick_insert(%struct.VEC_expr_history_def_base* %cond, i32 %ix_, %struct.expr_history_def_1* %obj_) #8, !dbg !4935
  ret %struct.expr_history_def_1* %call1, !dbg !4935
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @vinsn_equal_p(%struct.vinsn_def* %x, %struct.vinsn_def* %y) local_unnamed_addr #5 !dbg !4936 {
entry:
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %x, metadata !4940, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %y, metadata !4941, metadata !DIExpression()), !dbg !4948
  %cmp = icmp eq %struct.vinsn_def* %x, %y, !dbg !4949
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4951

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %x, i64 0, i32 1, i32 0, !dbg !4952
  %0 = load i32, i32* %type, align 8, !dbg !4952
  %type2 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %y, i64 0, i32 1, i32 0, !dbg !4954
  %1 = load i32, i32* %type2, align 8, !dbg !4954
  %cmp3 = icmp eq i32 %0, %1, !dbg !4955
  br i1 %cmp3, label %if.end5, label %cleanup, !dbg !4956

if.end5:                                          ; preds = %if.end
  %hash = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %x, i64 0, i32 2, !dbg !4957
  %2 = load i32, i32* %hash, align 8, !dbg !4957
  %hash6 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %y, i64 0, i32 2, !dbg !4959
  %3 = load i32, i32* %hash6, align 8, !dbg !4959
  %cmp7 = icmp eq i32 %2, %3, !dbg !4960
  br i1 %cmp7, label %if.end9, label %cleanup, !dbg !4961

if.end9:                                          ; preds = %if.end5
  %4 = load i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 35), align 8, !dbg !4962
  %tobool = icmp eq i8 (%struct.rtx_def*)* %4, null, !dbg !4963
  %cond = select i1 %tobool, i32 (%struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**)* null, i32 (%struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**)* @skip_unspecs_callback, !dbg !4963
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**)* %cond, metadata !4942, metadata !DIExpression()), !dbg !4948
  %cmp12 = icmp eq i32 %0, 23, !dbg !4964
  br i1 %cmp12, label %if.then13, label %if.end28, !dbg !4966

if.then13:                                        ; preds = %if.end9
  %rhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %x, i64 0, i32 1, i32 2, !dbg !4967
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !4967
  %tobool15 = icmp eq %struct.rtx_def* %5, null, !dbg !4967
  br i1 %tobool15, label %cond.true, label %cond.end, !dbg !4967

cond.true:                                        ; preds = %if.then13
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1583, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4967
  br label %cond.end, !dbg !4967

cond.end:                                         ; preds = %if.then13, %cond.true
  %rhs18 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %y, i64 0, i32 1, i32 2, !dbg !4969
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rhs18, align 8, !dbg !4969
  %tobool19 = icmp eq %struct.rtx_def* %6, null, !dbg !4969
  br i1 %tobool19, label %cond.true20, label %cond.end22, !dbg !4969

cond.true20:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1584, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4969
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rhs18, align 8, !dbg !4970
  br label %cond.end22, !dbg !4969

cond.end22:                                       ; preds = %cond.end, %cond.true20
  %7 = phi %struct.rtx_def* [ %6, %cond.end ], [ %.pre, %cond.true20 ], !dbg !4970
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !4971
  %call = tail call i32 @rtx_equal_p_cb(%struct.rtx_def* %8, %struct.rtx_def* %7, i32 (%struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**)* %cond) #6, !dbg !4972
  %conv = trunc i32 %call to i8, !dbg !4972
  br label %cleanup, !dbg !4973

if.end28:                                         ; preds = %if.end9
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %x, i64 0, i32 0, !dbg !4974
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4974
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, !dbg !4974
  %10 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4974
  %rt_rtx = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !4974
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4974
  %insn_rtx29 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %y, i64 0, i32 0, !dbg !4975
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx29, align 8, !dbg !4975
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, !dbg !4975
  %13 = getelementptr inbounds %union.u, %union.u* %u30, i64 1, i32 0, i32 0, i64 0, !dbg !4975
  %rt_rtx33 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !4975
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !4975
  %call34 = tail call i32 @rtx_equal_p_cb(%struct.rtx_def* %11, %struct.rtx_def* %14, i32 (%struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**)* %cond) #6, !dbg !4976
  %conv35 = trunc i32 %call34 to i8, !dbg !4976
  br label %cleanup, !dbg !4977

cleanup:                                          ; preds = %if.end5, %if.end, %entry, %if.end28, %cond.end22
  %retval.0 = phi i8 [ %conv, %cond.end22 ], [ %conv35, %if.end28 ], [ 1, %entry ], [ 0, %if.end ], [ 0, %if.end5 ], !dbg !4948
  ret i8 %retval.0, !dbg !4978
}

; Function Attrs: nounwind uwtable
define internal i32 @skip_unspecs_callback(%struct.rtx_def** %xx, %struct.rtx_def** %yy, %struct.rtx_def** %nx, %struct.rtx_def** %ny) #5 !dbg !4979 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %xx, metadata !4981, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata %struct.rtx_def** %yy, metadata !4982, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata %struct.rtx_def** %nx, metadata !4983, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata %struct.rtx_def** %ny, metadata !4984, metadata !DIExpression()), !dbg !4987
  %0 = load %struct.rtx_def*, %struct.rtx_def** %xx, align 8, !dbg !4988
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !4985, metadata !DIExpression()), !dbg !4987
  %1 = load %struct.rtx_def*, %struct.rtx_def** %yy, align 8, !dbg !4989
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4986, metadata !DIExpression()), !dbg !4987
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !4990
  %bf.load = load i32, i32* %2, align 8, !dbg !4990
  %bf.clear = and i32 %bf.load, 65535, !dbg !4990
  %cmp = icmp eq i32 %bf.clear, 18, !dbg !4992
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4993

land.lhs.true:                                    ; preds = %entry
  %3 = load i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 35), align 8, !dbg !4994
  %cmp1 = icmp eq i8 (%struct.rtx_def*)* %3, null, !dbg !4995
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !4996

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call = tail call zeroext i8 %3(%struct.rtx_def* %0) #6, !dbg !4997
  %tobool = icmp eq i8 %call, 0, !dbg !4997
  br i1 %tobool, label %if.end, label %if.then, !dbg !4998

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4999
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !4999
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4999
  %arrayidx2 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 1, i64 0, !dbg !4999
  %5 = bitcast %struct.rtx_def** %arrayidx2 to i64*, !dbg !4999
  %6 = load i64, i64* %5, align 8, !dbg !4999
  %7 = bitcast %struct.rtx_def** %nx to i64*, !dbg !5001
  store i64 %6, i64* %7, align 8, !dbg !5001
  store %struct.rtx_def* %1, %struct.rtx_def** %ny, align 8, !dbg !5002
  br label %cleanup, !dbg !5003

if.end:                                           ; preds = %lor.lhs.false, %entry
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5004
  %bf.load3 = load i32, i32* %8, align 8, !dbg !5004
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !5004
  %cmp5 = icmp eq i32 %bf.clear4, 18, !dbg !5006
  br i1 %cmp5, label %land.lhs.true7, label %cleanup, !dbg !5007

land.lhs.true7:                                   ; preds = %if.end
  %9 = load i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 35), align 8, !dbg !5008
  %cmp8 = icmp eq i8 (%struct.rtx_def*)* %9, null, !dbg !5009
  br i1 %cmp8, label %if.then14, label %lor.lhs.false10, !dbg !5010

lor.lhs.false10:                                  ; preds = %land.lhs.true7
  %call11 = tail call zeroext i8 %9(%struct.rtx_def* %1) #6, !dbg !5011
  %tobool13 = icmp eq i8 %call11, 0, !dbg !5011
  br i1 %tobool13, label %cleanup, label %if.then14, !dbg !5012

if.then14:                                        ; preds = %lor.lhs.false10, %land.lhs.true7
  store %struct.rtx_def* %0, %struct.rtx_def** %nx, align 8, !dbg !5013
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5015
  %rt_rtvec18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtvec_def**, !dbg !5015
  %10 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec18, align 8, !dbg !5015
  %arrayidx20 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %10, i64 0, i32 1, i64 0, !dbg !5015
  %11 = bitcast %struct.rtx_def** %arrayidx20 to i64*, !dbg !5015
  %12 = load i64, i64* %11, align 8, !dbg !5015
  %13 = bitcast %struct.rtx_def** %ny to i64*, !dbg !5016
  store i64 %12, i64* %13, align 8, !dbg !5016
  br label %cleanup, !dbg !5017

cleanup:                                          ; preds = %lor.lhs.false10, %if.end, %if.then14, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 1, %if.then14 ], [ 0, %lor.lhs.false10 ], [ 0, %if.end ], !dbg !4987
  ret i32 %retval.0, !dbg !5018
}

declare dso_local i32 @rtx_equal_p_cb(%struct.rtx_def*, %struct.rtx_def*, i32 (%struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @copy_expr(%struct._expr* %to, %struct._expr* %from) local_unnamed_addr #5 !dbg !5019 {
entry:
  %phist = alloca %struct.expr_history_def_1*, align 8
  call void @llvm.dbg.value(metadata %struct._expr* %to, metadata !5023, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata %struct._expr* %from, metadata !5024, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap* null, metadata !5025, metadata !DIExpression()), !dbg !5030
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 10, !dbg !5031
  %0 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %history_of_changes, align 8, !dbg !5031
  %tobool = icmp eq %struct.VEC_expr_history_def_heap* %0, null, !dbg !5031
  br i1 %tobool, label %if.end, label %if.then, !dbg !5032

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.expr_history_def_1** %phist to i8*, !dbg !5033
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !5033
  br i1 false, label %if.then.cond.end_crit_edge, label %cond.true, !dbg !5034

if.then.cond.end_crit_edge:                       ; preds = %if.then
  br label %cond.end, !dbg !5034

cond.true:                                        ; preds = %if.then
  %base = getelementptr inbounds %struct.VEC_expr_history_def_heap, %struct.VEC_expr_history_def_heap* %0, i64 0, i32 0, !dbg !5034
  br label %cond.end, !dbg !5034

cond.end:                                         ; preds = %if.then.cond.end_crit_edge, %cond.true
  %cond = phi %struct.VEC_expr_history_def_base* [ %base, %cond.true ], [ undef, %if.then.cond.end_crit_edge ], !dbg !5034
  %call = tail call fastcc %struct.VEC_expr_history_def_heap* @VEC_expr_history_def_heap_copy(%struct.VEC_expr_history_def_base* %cond) #8, !dbg !5034
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap* %call, metadata !5025, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i32 0, metadata !5026, metadata !DIExpression()), !dbg !5035
  %base6 = getelementptr inbounds %struct.VEC_expr_history_def_heap, %struct.VEC_expr_history_def_heap* %call, i64 0, i32 0, !dbg !5036
  br label %for.cond, !dbg !5039

for.cond:                                         ; preds = %for.body, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.body ], !dbg !5040
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5026, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1** %phist, metadata !5029, metadata !DIExpression(DW_OP_deref)), !dbg !5035
  %call10 = call fastcc i32 @VEC_expr_history_def_base_iterate(%struct.VEC_expr_history_def_base* %base6, i32 %i.0, %struct.expr_history_def_1** nonnull %phist) #8, !dbg !5041
  %tobool11 = icmp eq i32 %call10, 0, !dbg !5042
  br i1 %tobool11, label %for.end, label %for.body, !dbg !5042

for.body:                                         ; preds = %for.cond
  %2 = load %struct.expr_history_def_1*, %struct.expr_history_def_1** %phist, align 8, !dbg !5043
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %2, metadata !5029, metadata !DIExpression()), !dbg !5035
  %old_expr_vinsn = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %2, i64 0, i32 1, !dbg !5045
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %old_expr_vinsn, align 8, !dbg !5045
  call void @vinsn_attach(%struct.vinsn_def* %3) #8, !dbg !5046
  %4 = load %struct.expr_history_def_1*, %struct.expr_history_def_1** %phist, align 8, !dbg !5047
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %4, metadata !5029, metadata !DIExpression()), !dbg !5035
  %new_expr_vinsn = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %4, i64 0, i32 2, !dbg !5048
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %new_expr_vinsn, align 8, !dbg !5048
  call void @vinsn_attach(%struct.vinsn_def* %5) #8, !dbg !5049
  %inc = add i32 %i.0, 1, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5026, metadata !DIExpression()), !dbg !5035
  br label %for.cond, !dbg !5051, !llvm.loop !5052

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !5054
  br label %if.end, !dbg !5055

if.end:                                           ; preds = %entry, %for.end
  %temp.0 = phi %struct.VEC_expr_history_def_heap* [ %call, %for.end ], [ null, %entry ], !dbg !5030
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap* %temp.0, metadata !5025, metadata !DIExpression()), !dbg !5030
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 0, !dbg !5056
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5056
  %spec = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 1, !dbg !5057
  %7 = load i32, i32* %spec, align 8, !dbg !5057
  %usefulness = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 2, !dbg !5058
  %8 = load i32, i32* %usefulness, align 4, !dbg !5058
  %priority = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 3, !dbg !5059
  %9 = load i32, i32* %priority, align 8, !dbg !5059
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 5, !dbg !5060
  %10 = load i32, i32* %sched_times, align 8, !dbg !5060
  %orig_bb_index = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 6, !dbg !5061
  %11 = load i32, i32* %orig_bb_index, align 4, !dbg !5061
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 7, !dbg !5062
  %12 = load i32, i32* %spec_done_ds, align 8, !dbg !5062
  %spec_to_check_ds = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 8, !dbg !5063
  %13 = load i32, i32* %spec_to_check_ds, align 4, !dbg !5063
  %orig_sched_cycle = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 9, !dbg !5064
  %14 = load i32, i32* %orig_sched_cycle, align 8, !dbg !5064
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 11, !dbg !5065
  %15 = load i8, i8* %target_available, align 8, !dbg !5065
  %was_substituted = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 12, !dbg !5066
  %bf.load = load i8, i8* %was_substituted, align 1, !dbg !5066
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !5066
  %bf.clear = and i8 %bf.lshr, 1, !dbg !5066
  %bf.lshr13 = lshr i8 %bf.load, 2, !dbg !5067
  %bf.clear14 = and i8 %bf.lshr13, 1, !dbg !5067
  %bf.clear18 = and i8 %bf.load, 1, !dbg !5068
  %bf.lshr22 = lshr i8 %bf.load, 3, !dbg !5069
  %bf.clear23 = and i8 %bf.lshr22, 1, !dbg !5069
  call fastcc void @init_expr(%struct._expr* %to, %struct.vinsn_def* %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14, %struct.VEC_expr_history_def_heap* %temp.0, i8 zeroext %15, i8 zeroext %bf.clear, i8 zeroext %bf.clear14, i8 zeroext %bf.clear18, i8 zeroext %bf.clear23) #8, !dbg !5070
  ret void, !dbg !5071
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_expr_history_def_heap* @VEC_expr_history_def_heap_copy(%struct.VEC_expr_history_def_base* %vec_) unnamed_addr #0 !dbg !5072 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_base* %vec_, metadata !5076, metadata !DIExpression()), !dbg !5079
  %tobool = icmp eq %struct.VEC_expr_history_def_base* %vec_, null, !dbg !5080
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5080

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 0, !dbg !5080
  %0 = load i32, i32* %num, align 8, !dbg !5080
  %phitmp = zext i32 %0 to i64, !dbg !5080
  br label %cond.end, !dbg !5080

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i64 %cond, metadata !5077, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap* null, metadata !5078, metadata !DIExpression()), !dbg !5079
  %tobool1 = icmp eq i64 %cond, 0, !dbg !5081
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5080

if.then:                                          ; preds = %cond.end
  %conv2 = trunc i64 %cond to i32, !dbg !5083
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %conv2, i64 8, i64 32) #6, !dbg !5083
  %1 = bitcast i8* %call to %struct.VEC_expr_history_def_heap*, !dbg !5083
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap* %1, metadata !5078, metadata !DIExpression()), !dbg !5079
  %num4 = bitcast i8* %call to i32*, !dbg !5083
  store i32 %conv2, i32* %num4, align 8, !dbg !5083
  %vec = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5083
  %arraydecay7 = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 2, i64 0, !dbg !5083
  %2 = bitcast %struct.expr_history_def_1* %arraydecay7 to i8*, !dbg !5083
  %mul = shl nuw nsw i64 %cond, 5, !dbg !5083
  %call8 = tail call i8* @memcpy(i8* nonnull %vec, i8* nonnull %2, i64 %mul) #6, !dbg !5083
  br label %if.end, !dbg !5083

if.end:                                           ; preds = %cond.end, %if.then
  %new_vec_.0 = phi %struct.VEC_expr_history_def_heap* [ %1, %if.then ], [ null, %cond.end ], !dbg !5079
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap* %new_vec_.0, metadata !5078, metadata !DIExpression()), !dbg !5079
  ret %struct.VEC_expr_history_def_heap* %new_vec_.0, !dbg !5080
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_expr_history_def_base_iterate(%struct.VEC_expr_history_def_base* %vec_, i32 %ix_, %struct.expr_history_def_1** %ptr) unnamed_addr #0 !dbg !5085 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_base* %vec_, metadata !5090, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5091, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1** %ptr, metadata !5092, metadata !DIExpression()), !dbg !5093
  %tobool = icmp eq %struct.VEC_expr_history_def_base* %vec_, null, !dbg !5094
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5094

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 0, !dbg !5094
  %0 = load i32, i32* %num, align 8, !dbg !5094
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5094
  br i1 %cmp, label %if.then, label %if.else, !dbg !5096

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5097
  %arrayidx = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5097
  br label %return, !dbg !5097

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5099

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.expr_history_def_1* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !5101
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5101
  store %struct.expr_history_def_1* %storemerge, %struct.expr_history_def_1** %ptr, align 8, !dbg !5101
  ret i32 %retval.0, !dbg !5096
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_expr(%struct._expr* %expr, %struct.vinsn_def* %vi, i32 %spec, i32 %use, i32 %priority, i32 %sched_times, i32 %orig_bb_index, i32 %spec_done_ds, i32 %spec_to_check_ds, i32 %orig_sched_cycle, %struct.VEC_expr_history_def_heap* %history, i8 zeroext %target_available, i8 zeroext %was_substituted, i8 zeroext %was_renamed, i8 zeroext %needs_spec_check_p, i8 zeroext %cant_move) unnamed_addr #5 !dbg !5102 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !5106, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !5107, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i32 %spec, metadata !5108, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i32 %use, metadata !5109, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i32 %priority, metadata !5110, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i32 %sched_times, metadata !5111, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i32 %orig_bb_index, metadata !5112, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i32 %spec_done_ds, metadata !5113, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i32 %spec_to_check_ds, metadata !5114, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i32 %orig_sched_cycle, metadata !5115, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap* %history, metadata !5116, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i8 %target_available, metadata !5117, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i8 %was_substituted, metadata !5118, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i8 %was_renamed, metadata !5119, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i8 %needs_spec_check_p, metadata !5120, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i8 %cant_move, metadata !5121, metadata !DIExpression()), !dbg !5122
  tail call void @vinsn_attach(%struct.vinsn_def* %vi) #8, !dbg !5123
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !5124
  store %struct.vinsn_def* %vi, %struct.vinsn_def** %vinsn, align 8, !dbg !5125
  %spec1 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 1, !dbg !5126
  store i32 %spec, i32* %spec1, align 8, !dbg !5127
  %usefulness = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 2, !dbg !5128
  store i32 %use, i32* %usefulness, align 4, !dbg !5129
  %priority2 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 3, !dbg !5130
  store i32 %priority, i32* %priority2, align 8, !dbg !5131
  %priority_adj = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 4, !dbg !5132
  store i32 0, i32* %priority_adj, align 4, !dbg !5133
  %sched_times3 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 5, !dbg !5134
  store i32 %sched_times, i32* %sched_times3, align 8, !dbg !5135
  %orig_bb_index4 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 6, !dbg !5136
  store i32 %orig_bb_index, i32* %orig_bb_index4, align 4, !dbg !5137
  %orig_sched_cycle5 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 9, !dbg !5138
  store i32 %orig_sched_cycle, i32* %orig_sched_cycle5, align 8, !dbg !5139
  %spec_done_ds6 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 7, !dbg !5140
  store i32 %spec_done_ds, i32* %spec_done_ds6, align 8, !dbg !5141
  %spec_to_check_ds7 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 8, !dbg !5142
  store i32 %spec_to_check_ds, i32* %spec_to_check_ds7, align 4, !dbg !5143
  %tobool = icmp eq %struct.VEC_expr_history_def_heap* %history, null, !dbg !5144
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 10, !dbg !5146
  br i1 %tobool, label %if.else, label %if.then, !dbg !5147

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !5148

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.VEC_expr_history_def_heap* [ null, %if.else ], [ %history, %if.then ], !dbg !5146
  store %struct.VEC_expr_history_def_heap* %storemerge, %struct.VEC_expr_history_def_heap** %history_of_changes, align 8, !dbg !5146
  %target_available9 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !5149
  store i8 %target_available, i8* %target_available9, align 8, !dbg !5150
  %was_substituted10 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 12, !dbg !5151
  %bf.load = load i8, i8* %was_substituted10, align 1, !dbg !5152
  %bf.value = shl i8 %was_substituted, 1, !dbg !5152
  %bf.shl = and i8 %bf.value, 2, !dbg !5152
  %bf.clear = and i8 %bf.load, -16, !dbg !5152
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !5152
  %bf.value14 = shl i8 %was_renamed, 2, !dbg !5153
  %bf.shl15 = and i8 %bf.value14, 4, !dbg !5153
  %bf.value22 = and i8 %needs_spec_check_p, 1, !dbg !5154
  %bf.clear23 = or i8 %bf.set, %bf.shl15, !dbg !5154
  %bf.set24 = or i8 %bf.clear23, %bf.value22, !dbg !5154
  %bf.value29 = shl i8 %cant_move, 3, !dbg !5155
  %bf.shl30 = and i8 %bf.value29, 8, !dbg !5155
  %bf.set32 = or i8 %bf.set24, %bf.shl30, !dbg !5155
  store i8 %bf.set32, i8* %was_substituted10, align 1, !dbg !5155
  ret void, !dbg !5156
}

; Function Attrs: nounwind uwtable
define dso_local void @copy_expr_onside(%struct._expr* %to, %struct._expr* %from) local_unnamed_addr #5 !dbg !5157 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %to, metadata !5159, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.value(metadata %struct._expr* %from, metadata !5160, metadata !DIExpression()), !dbg !5161
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 0, !dbg !5162
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5162
  %spec = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 1, !dbg !5163
  %1 = load i32, i32* %spec, align 8, !dbg !5163
  %usefulness = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 2, !dbg !5164
  %2 = load i32, i32* %usefulness, align 4, !dbg !5164
  %priority = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 3, !dbg !5165
  %3 = load i32, i32* %priority, align 8, !dbg !5165
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 5, !dbg !5166
  %4 = load i32, i32* %sched_times, align 8, !dbg !5166
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 7, !dbg !5167
  %5 = load i32, i32* %spec_done_ds, align 8, !dbg !5167
  %spec_to_check_ds = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 8, !dbg !5168
  %6 = load i32, i32* %spec_to_check_ds, align 4, !dbg !5168
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 11, !dbg !5169
  %7 = load i8, i8* %target_available, align 8, !dbg !5169
  %was_substituted = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 12, !dbg !5170
  %bf.load = load i8, i8* %was_substituted, align 1, !dbg !5170
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !5170
  %bf.clear = and i8 %bf.lshr, 1, !dbg !5170
  %bf.lshr2 = lshr i8 %bf.load, 2, !dbg !5171
  %bf.clear3 = and i8 %bf.lshr2, 1, !dbg !5171
  %bf.clear7 = and i8 %bf.load, 1, !dbg !5172
  %bf.lshr11 = lshr i8 %bf.load, 3, !dbg !5173
  %bf.clear12 = and i8 %bf.lshr11, 1, !dbg !5173
  tail call fastcc void @init_expr(%struct._expr* %to, %struct.vinsn_def* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 0, i32 %5, i32 %6, i32 0, %struct.VEC_expr_history_def_heap* null, i8 zeroext %7, i8 zeroext %bf.clear, i8 zeroext %bf.clear3, i8 zeroext %bf.clear7, i8 zeroext %bf.clear12) #8, !dbg !5174
  ret void, !dbg !5175
}

; Function Attrs: nounwind uwtable
define dso_local void @merge_expr_data(%struct._expr* %to, %struct._expr* %from, %struct.rtx_def* %split_point) local_unnamed_addr #5 !dbg !5176 {
entry:
  %phist = alloca %struct.expr_history_def_1*, align 8
  call void @llvm.dbg.value(metadata %struct._expr* %to, metadata !5180, metadata !DIExpression()), !dbg !5185
  call void @llvm.dbg.value(metadata %struct._expr* %from, metadata !5181, metadata !DIExpression()), !dbg !5185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_point, metadata !5182, metadata !DIExpression()), !dbg !5185
  %0 = bitcast %struct.expr_history_def_1** %phist to i8*, !dbg !5186
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5186
  %spec = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 1, !dbg !5187
  %1 = load i32, i32* %spec, align 8, !dbg !5187
  %spec1 = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 1, !dbg !5189
  %2 = load i32, i32* %spec1, align 8, !dbg !5189
  %cmp = icmp sgt i32 %1, %2, !dbg !5190
  br i1 %cmp, label %if.then, label %if.end, !dbg !5191

if.then:                                          ; preds = %entry
  store i32 %2, i32* %spec, align 8, !dbg !5192
  br label %if.end, !dbg !5193

if.end:                                           ; preds = %if.then, %entry
  %tobool = icmp eq %struct.rtx_def* %split_point, null, !dbg !5194
  br i1 %tobool, label %if.else, label %if.then4, !dbg !5196

if.then4:                                         ; preds = %if.end
  %usefulness = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 2, !dbg !5197
  %3 = load i32, i32* %usefulness, align 4, !dbg !5197
  %usefulness5 = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 2, !dbg !5198
  %4 = load i32, i32* %usefulness5, align 4, !dbg !5199
  %add = add nsw i32 %4, %3, !dbg !5199
  store i32 %add, i32* %usefulness5, align 4, !dbg !5199
  br label %if.end12, !dbg !5198

if.else:                                          ; preds = %if.end
  %usefulness6 = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 2, !dbg !5200
  %5 = load i32, i32* %usefulness6, align 4, !dbg !5200
  %usefulness7 = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 2, !dbg !5200
  %6 = load i32, i32* %usefulness7, align 4, !dbg !5200
  %cmp8 = icmp sgt i32 %5, %6, !dbg !5200
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !5200

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !5200

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !5200

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !5200
  store i32 %cond, i32* %usefulness6, align 4, !dbg !5201
  br label %if.end12

if.end12:                                         ; preds = %cond.end, %if.then4
  %priority = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 3, !dbg !5202
  %7 = load i32, i32* %priority, align 8, !dbg !5202
  %priority13 = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 3, !dbg !5204
  %8 = load i32, i32* %priority13, align 8, !dbg !5204
  %cmp14 = icmp slt i32 %7, %8, !dbg !5205
  br i1 %cmp14, label %if.then15, label %if.end18, !dbg !5206

if.then15:                                        ; preds = %if.end12
  store i32 %8, i32* %priority, align 8, !dbg !5207
  br label %if.end18, !dbg !5208

if.end18:                                         ; preds = %if.then15, %if.end12
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 5, !dbg !5209
  %9 = load i32, i32* %sched_times, align 8, !dbg !5209
  %sched_times19 = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 5, !dbg !5211
  %10 = load i32, i32* %sched_times19, align 8, !dbg !5211
  %cmp20 = icmp sgt i32 %9, %10, !dbg !5212
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !5213

if.then21:                                        ; preds = %if.end18
  store i32 %10, i32* %sched_times, align 8, !dbg !5214
  br label %if.end24, !dbg !5215

if.end24:                                         ; preds = %if.then21, %if.end18
  %orig_bb_index = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 6, !dbg !5216
  %11 = load i32, i32* %orig_bb_index, align 4, !dbg !5216
  %orig_bb_index25 = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 6, !dbg !5218
  %12 = load i32, i32* %orig_bb_index25, align 4, !dbg !5218
  %cmp26 = icmp eq i32 %11, %12, !dbg !5219
  br i1 %cmp26, label %if.end29, label %if.then27, !dbg !5220

if.then27:                                        ; preds = %if.end24
  store i32 0, i32* %orig_bb_index, align 4, !dbg !5221
  br label %if.end29, !dbg !5222

if.end29:                                         ; preds = %if.end24, %if.then27
  %orig_sched_cycle = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 9, !dbg !5223
  %13 = load i32, i32* %orig_sched_cycle, align 8, !dbg !5223
  %orig_sched_cycle30 = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 9, !dbg !5223
  %14 = load i32, i32* %orig_sched_cycle30, align 8, !dbg !5223
  %cmp31 = icmp slt i32 %13, %14, !dbg !5223
  br i1 %cmp31, label %cond.true32, label %cond.false34, !dbg !5223

cond.true32:                                      ; preds = %if.end29
  br label %cond.end36, !dbg !5223

cond.false34:                                     ; preds = %if.end29
  br label %cond.end36, !dbg !5223

cond.end36:                                       ; preds = %cond.false34, %cond.true32
  %cond37 = phi i32 [ %13, %cond.true32 ], [ %14, %cond.false34 ], !dbg !5223
  store i32 %cond37, i32* %orig_sched_cycle, align 8, !dbg !5224
  call void @llvm.dbg.value(metadata i32 0, metadata !5183, metadata !DIExpression()), !dbg !5185
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 10, !dbg !5225
  %history_of_changes46 = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 10, !dbg !5225
  br label %for.cond, !dbg !5228

for.cond:                                         ; preds = %for.body, %cond.end36
  %i.0 = phi i32 [ 0, %cond.end36 ], [ %inc, %for.body ], !dbg !5229
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5183, metadata !DIExpression()), !dbg !5185
  %15 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %history_of_changes, align 8, !dbg !5230
  %tobool39 = icmp eq %struct.VEC_expr_history_def_heap* %15, null, !dbg !5230
  br i1 %tobool39, label %cond.end43, label %cond.true40, !dbg !5230

cond.true40:                                      ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_expr_history_def_heap, %struct.VEC_expr_history_def_heap* %15, i64 0, i32 0, !dbg !5230
  br label %cond.end43, !dbg !5230

cond.end43:                                       ; preds = %for.cond, %cond.true40
  %cond44 = phi %struct.VEC_expr_history_def_base* [ %base, %cond.true40 ], [ null, %for.cond ], !dbg !5230
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1** %phist, metadata !5184, metadata !DIExpression(DW_OP_deref)), !dbg !5185
  %call = call fastcc i32 @VEC_expr_history_def_base_iterate(%struct.VEC_expr_history_def_base* %cond44, i32 %i.0, %struct.expr_history_def_1** nonnull %phist) #8, !dbg !5230
  %tobool45 = icmp eq i32 %call, 0, !dbg !5231
  br i1 %tobool45, label %for.end, label %for.body, !dbg !5231

for.body:                                         ; preds = %cond.end43
  %16 = load %struct.expr_history_def_1*, %struct.expr_history_def_1** %phist, align 8, !dbg !5232
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %16, metadata !5184, metadata !DIExpression()), !dbg !5185
  %uid = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %16, i64 0, i32 0, !dbg !5233
  %17 = load i32, i32* %uid, align 8, !dbg !5233
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %16, metadata !5184, metadata !DIExpression()), !dbg !5185
  %type = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %16, i64 0, i32 4, !dbg !5234
  %18 = load i32, i32* %type, align 4, !dbg !5234
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %16, metadata !5184, metadata !DIExpression()), !dbg !5185
  %old_expr_vinsn = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %16, i64 0, i32 1, !dbg !5235
  %19 = load %struct.vinsn_def*, %struct.vinsn_def** %old_expr_vinsn, align 8, !dbg !5235
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %16, metadata !5184, metadata !DIExpression()), !dbg !5185
  %new_expr_vinsn = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %16, i64 0, i32 2, !dbg !5236
  %20 = load %struct.vinsn_def*, %struct.vinsn_def** %new_expr_vinsn, align 8, !dbg !5236
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %16, metadata !5184, metadata !DIExpression()), !dbg !5185
  %spec_ds = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %16, i64 0, i32 3, !dbg !5237
  %21 = load i32, i32* %spec_ds, align 8, !dbg !5237
  call void @insert_in_history_vect(%struct.VEC_expr_history_def_heap** nonnull %history_of_changes46, i32 %17, i32 %18, %struct.vinsn_def* %19, %struct.vinsn_def* %20, i32 %21) #8, !dbg !5238
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5239
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5183, metadata !DIExpression()), !dbg !5185
  br label %for.cond, !dbg !5240, !llvm.loop !5241

for.end:                                          ; preds = %cond.end43
  %was_substituted = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 12, !dbg !5243
  %bf.load = load i8, i8* %was_substituted, align 1, !dbg !5243
  %was_substituted47 = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 12, !dbg !5244
  %bf.load48 = load i8, i8* %was_substituted47, align 1, !dbg !5245
  %22 = and i8 %bf.load, 2, !dbg !5245
  %bf.set = or i8 %22, %bf.load48, !dbg !5245
  store i8 %bf.set, i8* %was_substituted47, align 1, !dbg !5245
  %bf.load54 = load i8, i8* %was_substituted, align 1, !dbg !5246
  %bf.lshr606 = or i8 %bf.load48, %bf.load54, !dbg !5247
  %or634 = and i8 %bf.lshr606, 4, !dbg !5247
  %bf.clear67 = and i8 %bf.set, -5, !dbg !5247
  %bf.set68 = or i8 %bf.clear67, %or634, !dbg !5247
  store i8 %bf.set68, i8* %was_substituted47, align 1, !dbg !5247
  %bf.load70 = load i8, i8* %was_substituted, align 1, !dbg !5248
  %bf.lshr769 = or i8 %bf.load48, %bf.load70, !dbg !5249
  %or797 = and i8 %bf.lshr769, 8, !dbg !5249
  %bf.clear83 = and i8 %bf.set68, -9, !dbg !5249
  %bf.set84 = or i8 %bf.clear83, %or797, !dbg !5249
  store i8 %bf.set84, i8* %was_substituted47, align 1, !dbg !5249
  call fastcc void @update_target_availability(%struct._expr* %to, %struct._expr* %from, %struct.rtx_def* %split_point) #8, !dbg !5250
  call fastcc void @update_speculative_bits(%struct._expr* %to, %struct._expr* %from, %struct.rtx_def* %split_point) #8, !dbg !5251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5252
  ret void, !dbg !5252
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_target_availability(%struct._expr* %to, %struct._expr* %from, %struct.rtx_def* %split_point) unnamed_addr #5 !dbg !5253 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %to, metadata !5255, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata %struct._expr* %from, metadata !5256, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_point, metadata !5257, metadata !DIExpression()), !dbg !5264
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 11, !dbg !5265
  %0 = load i8, i8* %target_available, align 8, !dbg !5265
  %cmp = icmp slt i8 %0, 0, !dbg !5266
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5267

lor.lhs.false:                                    ; preds = %entry
  %target_available2 = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 11, !dbg !5268
  %1 = load i8, i8* %target_available2, align 8, !dbg !5268
  %cmp4 = icmp slt i8 %1, 0, !dbg !5269
  br i1 %cmp4, label %if.then, label %if.else, !dbg !5270

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 -1, i8* %target_available, align 8, !dbg !5271
  br label %if.end23, !dbg !5272

if.else:                                          ; preds = %lor.lhs.false
  %cmp7 = icmp eq %struct.rtx_def* %split_point, null, !dbg !5273
  br i1 %cmp7, label %if.then9, label %if.else16, !dbg !5274

if.then9:                                         ; preds = %if.else
  %orig_bb_index = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 6, !dbg !5275
  %2 = load i32, i32* %orig_bb_index, align 4, !dbg !5275
  call void @llvm.dbg.value(metadata i32 %2, metadata !5258, metadata !DIExpression()), !dbg !5276
  %orig_bb_index10 = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 6, !dbg !5277
  %3 = load i32, i32* %orig_bb_index10, align 4, !dbg !5277
  call void @llvm.dbg.value(metadata i32 %3, metadata !5263, metadata !DIExpression()), !dbg !5276
  %tobool = icmp ne i32 %2, 0, !dbg !5278
  %cmp11 = icmp eq i32 %2, %3, !dbg !5280
  %or.cond = and i1 %tobool, %cmp11, !dbg !5281
  br i1 %or.cond, label %if.end23, label %if.else14, !dbg !5281

if.else14:                                        ; preds = %if.then9
  store i8 -1, i8* %target_available, align 8, !dbg !5282
  br label %if.end23

if.else16:                                        ; preds = %if.else
  %and1 = and i8 %0, %1, !dbg !5283
  store i8 %and1, i8* %target_available, align 8, !dbg !5283
  br label %if.end23

if.end23:                                         ; preds = %if.else16, %if.then9, %if.else14, %if.then
  ret void, !dbg !5284
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_speculative_bits(%struct._expr* %to, %struct._expr* %from, %struct.rtx_def* %split_point) unnamed_addr #5 !dbg !5285 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %to, metadata !5287, metadata !DIExpression()), !dbg !5300
  call void @llvm.dbg.value(metadata %struct._expr* %from, metadata !5288, metadata !DIExpression()), !dbg !5300
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_point, metadata !5289, metadata !DIExpression()), !dbg !5300
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 7, !dbg !5301
  %0 = load i32, i32* %spec_done_ds, align 8, !dbg !5301
  call void @llvm.dbg.value(metadata i32 %0, metadata !5290, metadata !DIExpression()), !dbg !5300
  %spec_done_ds1 = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 7, !dbg !5302
  %1 = load i32, i32* %spec_done_ds1, align 8, !dbg !5302
  call void @llvm.dbg.value(metadata i32 %1, metadata !5291, metadata !DIExpression()), !dbg !5300
  %call = tail call i32 @ds_max_merge(i32 %0, i32 %1) #6, !dbg !5303
  store i32 %call, i32* %spec_done_ds, align 8, !dbg !5304
  %spec_to_check_ds = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 8, !dbg !5305
  %2 = load i32, i32* %spec_to_check_ds, align 4, !dbg !5305
  %spec_to_check_ds3 = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 8, !dbg !5306
  %3 = load i32, i32* %spec_to_check_ds3, align 4, !dbg !5307
  %or = or i32 %3, %2, !dbg !5307
  store i32 %or, i32* %spec_to_check_ds3, align 4, !dbg !5307
  %needs_spec_check_p = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 12, !dbg !5308
  %bf.load = load i8, i8* %needs_spec_check_p, align 1, !dbg !5308
  %needs_spec_check_p4 = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 12, !dbg !5309
  %bf.load5 = load i8, i8* %needs_spec_check_p4, align 1, !dbg !5310
  %4 = and i8 %bf.load, 1, !dbg !5310
  %bf.set = or i8 %4, %bf.load5, !dbg !5310
  store i8 %bf.set, i8* %needs_spec_check_p4, align 1, !dbg !5310
  %5 = or i32 %0, %1, !dbg !5311
  %6 = and i32 %5, 16777215, !dbg !5311
  %7 = icmp eq i32 %6, 0, !dbg !5311
  br i1 %7, label %if.end36, label %if.then, !dbg !5311

if.then:                                          ; preds = %entry
  %call13 = tail call i32 @ds_get_speculation_types(i32 %0) #6, !dbg !5312
  call void @llvm.dbg.value(metadata i32 %call13, metadata !5290, metadata !DIExpression()), !dbg !5300
  %call14 = tail call i32 @ds_get_speculation_types(i32 %1) #6, !dbg !5313
  call void @llvm.dbg.value(metadata i32 %call14, metadata !5291, metadata !DIExpression()), !dbg !5300
  %cmp = icmp eq i32 %call13, %call14, !dbg !5314
  br i1 %cmp, label %if.end36, label %if.then15, !dbg !5315

if.then15:                                        ; preds = %if.then
  %and16 = and i32 %call13, 16777215, !dbg !5316
  %tobool17 = icmp ne i32 %and16, 0, !dbg !5316
  %and18 = and i32 %call14, 16777215, !dbg !5317
  %tobool19 = icmp ne i32 %and18, 0, !dbg !5317
  %or.cond1 = and i1 %tobool17, %tobool19, !dbg !5318
  br i1 %or.cond1, label %if.then20, label %if.end, !dbg !5318

if.then20:                                        ; preds = %if.then15
  %8 = load i32, i32* %spec_done_ds, align 8, !dbg !5319
  %call22 = tail call i32 @speculate_expr(%struct._expr* %to, i32 %8) #8, !dbg !5320
  call void @llvm.dbg.value(metadata i32 %call22, metadata !5297, metadata !DIExpression()), !dbg !5321
  %cmp23 = icmp sgt i32 %call22, -1, !dbg !5322
  br i1 %cmp23, label %if.end, label %cond.true, !dbg !5322

cond.true:                                        ; preds = %if.then20
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1770, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5322
  br label %if.end, !dbg !5322

if.end:                                           ; preds = %cond.true, %if.then20, %if.then15
  %cmp24 = icmp eq %struct.rtx_def* %split_point, null, !dbg !5323
  br i1 %cmp24, label %if.end36, label %if.then25, !dbg !5325

if.then25:                                        ; preds = %if.end
  %9 = load i32, i32* %spec_done_ds, align 8, !dbg !5326
  %and27 = and i32 %9, 16777215, !dbg !5328
  call void @llvm.dbg.value(metadata i32 %and27, metadata !5292, metadata !DIExpression()), !dbg !5329
  %neg = xor i32 %and16, -1, !dbg !5330
  %and29 = and i32 %and27, %neg, !dbg !5331
  call void @llvm.dbg.value(metadata i32 %and29, metadata !5292, metadata !DIExpression()), !dbg !5329
  %neg31 = xor i32 %and18, -1, !dbg !5332
  %and32 = and i32 %and29, %neg31, !dbg !5333
  call void @llvm.dbg.value(metadata i32 %and32, metadata !5292, metadata !DIExpression()), !dbg !5329
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 10, !dbg !5334
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %split_point, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5335
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5335
  %10 = load i32, i32* %rt_int, align 8, !dbg !5335
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 0, !dbg !5336
  %11 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5336
  %vinsn33 = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 0, !dbg !5337
  %12 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn33, align 8, !dbg !5337
  tail call void @insert_in_history_vect(%struct.VEC_expr_history_def_heap** nonnull %history_of_changes, i32 %10, i32 1, %struct.vinsn_def* %11, %struct.vinsn_def* %12, i32 %and32) #8, !dbg !5338
  br label %if.end36, !dbg !5339

if.end36:                                         ; preds = %if.end, %if.then, %entry, %if.then25
  ret void, !dbg !5340
}

; Function Attrs: nounwind uwtable
define dso_local void @merge_expr(%struct._expr* %to, %struct._expr* %from, %struct.rtx_def* %split_point) local_unnamed_addr #5 !dbg !5341 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %to, metadata !5343, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata %struct._expr* %from, metadata !5344, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_point, metadata !5345, metadata !DIExpression()), !dbg !5348
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 0, !dbg !5349
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5349
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %0, metadata !5346, metadata !DIExpression()), !dbg !5348
  %vinsn1 = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 0, !dbg !5350
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !5350
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %1, metadata !5347, metadata !DIExpression()), !dbg !5348
  %call = tail call zeroext i8 @vinsn_equal_p(%struct.vinsn_def* %0, %struct.vinsn_def* %1) #8, !dbg !5351
  %tobool = icmp eq i8 %call, 0, !dbg !5351
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5351

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1848, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5351
  br label %cond.end, !dbg !5351

cond.end:                                         ; preds = %entry, %cond.true
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 7, !dbg !5352
  %2 = load i32, i32* %spec_done_ds, align 8, !dbg !5352
  %cmp = icmp eq i32 %2, 0, !dbg !5354
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5355

land.lhs.true:                                    ; preds = %cond.end
  %spec_done_ds2 = getelementptr inbounds %struct._expr, %struct._expr* %from, i64 0, i32 7, !dbg !5356
  %3 = load i32, i32* %spec_done_ds2, align 8, !dbg !5356
  %cmp3 = icmp eq i32 %3, 0, !dbg !5357
  br i1 %cmp3, label %if.end, label %if.then, !dbg !5358

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !5359
  tail call void @change_vinsn_in_expr(%struct._expr* %to, %struct.vinsn_def* %4) #8, !dbg !5360
  br label %if.end, !dbg !5360

if.end:                                           ; preds = %land.lhs.true, %if.then, %cond.end
  tail call void @merge_expr_data(%struct._expr* %to, %struct._expr* %from, %struct.rtx_def* %split_point) #8, !dbg !5361
  %usefulness = getelementptr inbounds %struct._expr, %struct._expr* %to, i64 0, i32 2, !dbg !5362
  %5 = load i32, i32* %usefulness, align 4, !dbg !5362
  %cmp5 = icmp slt i32 %5, 10001, !dbg !5362
  br i1 %cmp5, label %cond.end8, label %cond.true6, !dbg !5362

cond.true6:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1858, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5362
  br label %cond.end8, !dbg !5362

cond.end8:                                        ; preds = %if.end, %cond.true6
  ret void, !dbg !5363
}

; Function Attrs: nounwind uwtable
define dso_local void @change_vinsn_in_expr(%struct._expr* %expr, %struct.vinsn_def* %new_vinsn) local_unnamed_addr #5 !dbg !5364 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !5368, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %new_vinsn, metadata !5369, metadata !DIExpression()), !dbg !5370
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !5371
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5371
  tail call void @vinsn_detach(%struct.vinsn_def* %0) #8, !dbg !5372
  store %struct.vinsn_def* %new_vinsn, %struct.vinsn_def** %vinsn, align 8, !dbg !5373
  tail call void @vinsn_attach(%struct.vinsn_def* %new_vinsn) #8, !dbg !5374
  ret void, !dbg !5375
}

; Function Attrs: nounwind uwtable
define dso_local void @clear_expr(%struct._expr* %expr) local_unnamed_addr #5 !dbg !5376 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !5380, metadata !DIExpression()), !dbg !5381
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !5382
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5382
  tail call void @vinsn_detach(%struct.vinsn_def* %0) #8, !dbg !5383
  store %struct.vinsn_def* null, %struct.vinsn_def** %vinsn, align 8, !dbg !5384
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 10, !dbg !5385
  tail call fastcc void @free_history_vect(%struct.VEC_expr_history_def_heap** nonnull %history_of_changes) #8, !dbg !5386
  ret void, !dbg !5387
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_history_vect(%struct.VEC_expr_history_def_heap** %pvect) unnamed_addr #5 !dbg !5388 {
entry:
  %phist = alloca %struct.expr_history_def_1*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap** %pvect, metadata !5392, metadata !DIExpression()), !dbg !5395
  %0 = bitcast %struct.expr_history_def_1** %phist to i8*, !dbg !5396
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5396
  %1 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %pvect, align 8, !dbg !5397
  %tobool = icmp eq %struct.VEC_expr_history_def_heap* %1, null, !dbg !5397
  br i1 %tobool, label %cleanup, label %for.cond.preheader, !dbg !5399

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5400

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %2 = phi %struct.VEC_expr_history_def_heap* [ %.pre, %for.body ], [ %1, %for.cond.preheader ], !dbg !5402
  %i.0 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ], !dbg !5404
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5393, metadata !DIExpression()), !dbg !5395
  %tobool1 = icmp eq %struct.VEC_expr_history_def_heap* %2, null, !dbg !5402
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5402

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_expr_history_def_heap, %struct.VEC_expr_history_def_heap* %2, i64 0, i32 0, !dbg !5402
  br label %cond.end, !dbg !5402

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_expr_history_def_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !5402
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1** %phist, metadata !5394, metadata !DIExpression(DW_OP_deref)), !dbg !5395
  %call = call fastcc i32 @VEC_expr_history_def_base_iterate(%struct.VEC_expr_history_def_base* %cond, i32 %i.0, %struct.expr_history_def_1** nonnull %phist) #8, !dbg !5402
  %tobool2 = icmp eq i32 %call, 0, !dbg !5400
  br i1 %tobool2, label %for.end, label %for.body, !dbg !5400

for.body:                                         ; preds = %cond.end
  %3 = load %struct.expr_history_def_1*, %struct.expr_history_def_1** %phist, align 8, !dbg !5405
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %3, metadata !5394, metadata !DIExpression()), !dbg !5395
  %old_expr_vinsn = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %3, i64 0, i32 1, !dbg !5407
  %4 = load %struct.vinsn_def*, %struct.vinsn_def** %old_expr_vinsn, align 8, !dbg !5407
  call void @vinsn_detach(%struct.vinsn_def* %4) #8, !dbg !5408
  %5 = load %struct.expr_history_def_1*, %struct.expr_history_def_1** %phist, align 8, !dbg !5409
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %5, metadata !5394, metadata !DIExpression()), !dbg !5395
  %new_expr_vinsn = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %5, i64 0, i32 2, !dbg !5410
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %new_expr_vinsn, align 8, !dbg !5410
  call void @vinsn_detach(%struct.vinsn_def* %6) #8, !dbg !5411
  %inc = add i32 %i.0, 1, !dbg !5412
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5393, metadata !DIExpression()), !dbg !5395
  %.pre = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %pvect, align 8, !dbg !5402
  br label %for.cond, !dbg !5413, !llvm.loop !5414

for.end:                                          ; preds = %cond.end
  call fastcc void @VEC_expr_history_def_heap_free(%struct.VEC_expr_history_def_heap** %pvect) #8, !dbg !5416
  store %struct.VEC_expr_history_def_heap* null, %struct.VEC_expr_history_def_heap** %pvect, align 8, !dbg !5417
  br label %cleanup, !dbg !5418

cleanup:                                          ; preds = %entry, %for.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5418
  ret void, !dbg !5418
}

; Function Attrs: nounwind uwtable
define dso_local i32 @speculate_expr(%struct._expr* %expr, i32 %ds) local_unnamed_addr #5 !dbg !5419 {
entry:
  %spec_pat = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !5423, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.value(metadata i32 %ds, metadata !5424, metadata !DIExpression()), !dbg !5434
  %0 = bitcast %struct.rtx_def** %spec_pat to i8*, !dbg !5435
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5435
  %and = and i32 %ds, 16777215, !dbg !5436
  call void @llvm.dbg.value(metadata i32 %and, metadata !5428, metadata !DIExpression()), !dbg !5434
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 7, !dbg !5437
  %1 = load i32, i32* %spec_done_ds, align 8, !dbg !5437
  call void @llvm.dbg.value(metadata i32 %1, metadata !5429, metadata !DIExpression()), !dbg !5434
  %call = tail call i32 @ds_full_merge(i32 %1, i32 %and, %struct.rtx_def* null, %struct.rtx_def* null) #6, !dbg !5438
  call void @llvm.dbg.value(metadata i32 %call, metadata !5424, metadata !DIExpression()), !dbg !5434
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !5439
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5439
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %2, i64 0, i32 0, !dbg !5439
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !5439
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !5426, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.value(metadata %struct.rtx_def** %spec_pat, metadata !5427, metadata !DIExpression(DW_OP_deref)), !dbg !5434
  %call1 = call i32 @sched_speculate_insn(%struct.rtx_def* %3, i32 %call, %struct.rtx_def** nonnull %spec_pat) #6, !dbg !5440
  call void @llvm.dbg.value(metadata i32 %call1, metadata !5425, metadata !DIExpression()), !dbg !5434
  switch i32 %call1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 -1, label %cleanup12
  ], !dbg !5441

sw.bb:                                            ; preds = %entry
  store i32 %call, i32* %spec_done_ds, align 8, !dbg !5442
  %cmp = icmp ne i32 %1, %call, !dbg !5443
  %cond = zext i1 %cmp to i32, !dbg !5444
  br label %cleanup12, !dbg !5445

sw.bb3:                                           ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %spec_pat, align 8, !dbg !5446
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !5427, metadata !DIExpression()), !dbg !5434
  %call4 = call %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def* %4, %struct.rtx_def* null) #8, !dbg !5447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !5430, metadata !DIExpression()), !dbg !5448
  %call5 = call %struct.vinsn_def* @create_vinsn_from_insn_rtx(%struct.rtx_def* %call4, i8 zeroext 0) #8, !dbg !5449
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %call5, metadata !5433, metadata !DIExpression()), !dbg !5448
  call void @change_vinsn_in_expr(%struct._expr* %expr, %struct.vinsn_def* %call5) #8, !dbg !5450
  store i32 %call, i32* %spec_done_ds, align 8, !dbg !5451
  %needs_spec_check_p = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 12, !dbg !5452
  %bf.load = load i8, i8* %needs_spec_check_p, align 1, !dbg !5453
  %bf.set = or i8 %bf.load, 1, !dbg !5453
  store i8 %bf.set, i8* %needs_spec_check_p, align 1, !dbg !5453
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5454
  %reg_uses = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i64 0, i32 1, i32 5, !dbg !5454
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !5454
  %call8 = call i32 @expr_dest_regno(%struct._expr* %expr) #8, !dbg !5456
  %call9 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %call8) #6, !dbg !5457
  %tobool = icmp eq i32 %call9, 0, !dbg !5457
  br i1 %tobool, label %cleanup12, label %if.then, !dbg !5458

if.then:                                          ; preds = %sw.bb3
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !5459
  store i8 0, i8* %target_available, align 8, !dbg !5461
  br label %cleanup12, !dbg !5462

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1981, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5463
  br label %cleanup12, !dbg !5464

cleanup12:                                        ; preds = %sw.bb3, %entry, %if.then, %sw.default, %sw.bb
  %retval.1 = phi i32 [ -1, %sw.default ], [ %cond, %sw.bb ], [ 2, %if.then ], [ 1, %sw.bb3 ], [ -1, %entry ], !dbg !5465
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5466
  ret i32 %retval.1, !dbg !5466
}

declare dso_local i32 @ds_full_merge(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @sched_speculate_insn(%struct.rtx_def*, i32, %struct.rtx_def**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def* %pattern, %struct.rtx_def* %label) local_unnamed_addr #5 !dbg !5467 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !5471, metadata !DIExpression()), !dbg !5474
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label, metadata !5472, metadata !DIExpression()), !dbg !5474
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pattern, i64 0, i32 0, !dbg !5475
  %bf.load = load i32, i32* %0, align 8, !dbg !5475
  %bf.clear = and i32 %bf.load, 65535, !dbg !5475
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5475
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !5475

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !5475
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !5475

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !5475
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !5475

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !5475
  br i1 %cmp11, label %cond.true, label %cond.end, !dbg !5475

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5516, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5475
  br label %cond.end, !dbg !5475

cond.end:                                         ; preds = %lor.lhs.false8, %cond.true
  tail call void @start_sequence() #6, !dbg !5476
  %cmp12 = icmp eq %struct.rtx_def* %label, null, !dbg !5477
  br i1 %cmp12, label %if.then, label %if.else, !dbg !5479

if.then:                                          ; preds = %cond.end
  %call = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %pattern) #6, !dbg !5480
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5473, metadata !DIExpression()), !dbg !5474
  br label %if.end23, !dbg !5481

if.else:                                          ; preds = %cond.end
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %label, i64 0, i32 0, !dbg !5482
  %bf.load13 = load i32, i32* %1, align 8, !dbg !5482
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !5482
  %cmp15 = icmp eq i32 %bf.clear14, 7, !dbg !5482
  br i1 %cmp15, label %if.then16, label %if.else18, !dbg !5484

if.then16:                                        ; preds = %if.else
  %call17 = tail call %struct.rtx_def* @emit_debug_insn(%struct.rtx_def* %pattern) #6, !dbg !5485
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call17, metadata !5473, metadata !DIExpression()), !dbg !5474
  br label %if.end23, !dbg !5486

if.else18:                                        ; preds = %if.else
  %call19 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %pattern) #6, !dbg !5487
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !5473, metadata !DIExpression()), !dbg !5474
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call19, i64 0, i32 1, !dbg !5489
  %arrayidx = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !5489
  %rt_rtx = bitcast %struct.object_block** %arrayidx to %struct.rtx_def**, !dbg !5489
  store %struct.rtx_def* %label, %struct.rtx_def** %rt_rtx, align 8, !dbg !5490
  %arrayidx22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %label, i64 0, i32 1, i32 0, i32 2, !dbg !5491
  %rt_int = bitcast i64* %arrayidx22 to i32*, !dbg !5491
  %2 = load i32, i32* %rt_int, align 8, !dbg !5492
  %inc = add nsw i32 %2, 1, !dbg !5492
  store i32 %inc, i32* %rt_int, align 8, !dbg !5492
  br label %if.end23

if.end23:                                         ; preds = %if.then16, %if.else18, %if.then
  %insn_rtx.1 = phi %struct.rtx_def* [ %call, %if.then ], [ %call17, %if.then16 ], [ %call19, %if.else18 ], !dbg !5493
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_rtx.1, metadata !5473, metadata !DIExpression()), !dbg !5474
  tail call void @end_sequence() #6, !dbg !5494
  tail call void @sched_init_luids(%struct.VEC_basic_block_heap* null, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null) #6, !dbg !5495
  tail call void @sched_extend_target() #6, !dbg !5496
  tail call void @sched_deps_init(i8 zeroext 0) #6, !dbg !5497
  %call24 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %insn_rtx.1) #8, !dbg !5498
  ret %struct.rtx_def* %insn_rtx.1, !dbg !5499
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @expr_dest_regno(%struct._expr* %expr) local_unnamed_addr #5 !dbg !5500 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !5504, metadata !DIExpression()), !dbg !5506
  %call = tail call %struct.rtx_def* @expr_dest_reg(%struct._expr* %expr) #8, !dbg !5507
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5505, metadata !DIExpression()), !dbg !5506
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !5508
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5508

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2004, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5508
  br label %cond.end, !dbg !5508

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %call) #8, !dbg !5509
  ret i32 %call1, !dbg !5510
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expr_dest_reg(%struct._expr* %expr) local_unnamed_addr #5 !dbg !5511 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !5515, metadata !DIExpression()), !dbg !5517
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !5518
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5518
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 1, i32 1, !dbg !5518
  %1 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !5518
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5516, metadata !DIExpression()), !dbg !5517
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5519
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !5521

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5522
  %bf.load = load i32, i32* %2, align 8, !dbg !5522
  %bf.clear = and i32 %bf.load, 65535, !dbg !5522
  %cmp1 = icmp eq i32 %bf.clear, 37, !dbg !5522
  br i1 %cmp1, label %cleanup, label %if.end, !dbg !5523

if.end:                                           ; preds = %entry, %land.lhs.true
  br label %cleanup, !dbg !5524

cleanup:                                          ; preds = %land.lhs.true, %if.end
  %retval.0 = phi %struct.rtx_def* [ null, %if.end ], [ %1, %land.lhs.true ], !dbg !5517
  ret %struct.rtx_def* %retval.0, !dbg !5525
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !5526 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5530, metadata !DIExpression()), !dbg !5531
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5532
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5532
  %0 = load i32, i32* %rt_uint, align 8, !dbg !5532
  ret i32 %0, !dbg !5533
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_unavailable_targets(%struct._list_node* %join_set, %struct._list_node* %av_set, %struct.bitmap_head_def* %lv_set) local_unnamed_addr #5 !dbg !5534 {
entry:
  %join_set.addr = alloca %struct._list_node*, align 8
  %expr = alloca %struct._expr*, align 8
  %avi = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %join_set, metadata !5538, metadata !DIExpression()), !dbg !5543
  store %struct._list_node* %join_set, %struct._list_node** %join_set.addr, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %av_set, metadata !5539, metadata !DIExpression()), !dbg !5543
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %lv_set, metadata !5540, metadata !DIExpression()), !dbg !5543
  %0 = bitcast %struct._expr** %expr to i8*, !dbg !5544
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5544
  %1 = bitcast %struct._list_iterator* %avi to i8*, !dbg !5545
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5545
  call void @llvm.dbg.value(metadata %struct._list_node** %join_set.addr, metadata !5538, metadata !DIExpression(DW_OP_deref)), !dbg !5543
  call void @llvm.dbg.value(metadata %struct._list_iterator* %avi, metadata !5542, metadata !DIExpression(DW_OP_deref)), !dbg !5543
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %avi, %struct._list_node** nonnull %join_set.addr, i8 zeroext 0) #8, !dbg !5546
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %avi, i64 0, i32 0, !dbg !5548
  br label %for.cond, !dbg !5546

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5550
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !5550
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !5541, metadata !DIExpression(DW_OP_deref)), !dbg !5543
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #8, !dbg !5550
  %tobool = icmp eq i8 %call, 0, !dbg !5546
  br i1 %tobool, label %for.end, label %for.body, !dbg !5546

for.body:                                         ; preds = %for.cond
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !5551
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !5541, metadata !DIExpression()), !dbg !5543
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i64 0, i32 0, !dbg !5551
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5551
  %call1 = call %struct._expr* @av_set_lookup(%struct._list_node* %av_set, %struct.vinsn_def* %5) #8, !dbg !5553
  %cmp = icmp eq %struct._expr* %call1, null, !dbg !5554
  br i1 %cmp, label %if.then, label %for.inc, !dbg !5555

if.then:                                          ; preds = %for.body
  %6 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !5556
  call void @llvm.dbg.value(metadata %struct._expr* %6, metadata !5541, metadata !DIExpression()), !dbg !5543
  call fastcc void @set_unavailable_target_for_expr(%struct._expr* %6, %struct.bitmap_head_def* %lv_set) #8, !dbg !5557
  br label %for.inc, !dbg !5557

for.inc:                                          ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata %struct._list_iterator* %avi, metadata !5542, metadata !DIExpression(DW_OP_deref)), !dbg !5543
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %avi) #8, !dbg !5550
  br label %for.cond, !dbg !5550, !llvm.loop !5558

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5560
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5560
  ret void, !dbg !5560
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_iter_start(%struct._list_iterator* %ip, %struct._list_node** %lp, i8 zeroext %can_remove_p) unnamed_addr #0 !dbg !5561 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_iterator* %ip, metadata !5566, metadata !DIExpression()), !dbg !5569
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !5567, metadata !DIExpression()), !dbg !5569
  call void @llvm.dbg.value(metadata i8 %can_remove_p, metadata !5568, metadata !DIExpression()), !dbg !5569
  %lp1 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 0, !dbg !5570
  store %struct._list_node** %lp, %struct._list_node*** %lp1, align 8, !dbg !5571
  %can_remove_p2 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 1, !dbg !5572
  store i8 %can_remove_p, i8* %can_remove_p2, align 8, !dbg !5573
  %removed_p = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 2, !dbg !5574
  store i8 0, i8* %removed_p, align 1, !dbg !5575
  ret void, !dbg !5576
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %av, %struct._expr** %exprp) unnamed_addr #5 !dbg !5577 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node* %av, metadata !5582, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.value(metadata %struct._expr** %exprp, metadata !5583, metadata !DIExpression()), !dbg !5584
  %tobool = icmp eq %struct._list_node* %av, null, !dbg !5585
  br i1 %tobool, label %return, label %if.then, !dbg !5587

if.then:                                          ; preds = %entry
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %av, i64 0, i32 1, !dbg !5588
  %0 = bitcast %struct._expr** %exprp to %union.anon.0**, !dbg !5590
  store %union.anon.0* %u, %union.anon.0** %0, align 8, !dbg !5590
  br label %return, !dbg !5591

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %entry ], !dbg !5584
  ret i8 %retval.0, !dbg !5592
}

; Function Attrs: nounwind uwtable
define dso_local %struct._expr* @av_set_lookup(%struct._list_node* %set, %struct.vinsn_def* %sought_vinsn) local_unnamed_addr #5 !dbg !5593 {
entry:
  %set.addr = alloca %struct._list_node*, align 8
  %expr = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %set, metadata !5597, metadata !DIExpression()), !dbg !5601
  store %struct._list_node* %set, %struct._list_node** %set.addr, align 8
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %sought_vinsn, metadata !5598, metadata !DIExpression()), !dbg !5601
  %0 = bitcast %struct._expr** %expr to i8*, !dbg !5602
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5602
  %1 = bitcast %struct._list_iterator* %i to i8*, !dbg !5603
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5603
  call void @llvm.dbg.value(metadata %struct._list_node** %set.addr, metadata !5597, metadata !DIExpression(DW_OP_deref)), !dbg !5601
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5600, metadata !DIExpression(DW_OP_deref)), !dbg !5601
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** nonnull %set.addr, i8 zeroext 0) #8, !dbg !5604
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !5606
  br label %for.cond, !dbg !5604

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5608
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !5608
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !5599, metadata !DIExpression(DW_OP_deref)), !dbg !5601
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #8, !dbg !5608
  %tobool = icmp eq i8 %call, 0, !dbg !5604
  br i1 %tobool, label %cleanup.loopexit, label %for.body, !dbg !5604

for.body:                                         ; preds = %for.cond
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !5609
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !5599, metadata !DIExpression()), !dbg !5601
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i64 0, i32 0, !dbg !5609
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5609
  %call1 = call zeroext i8 @vinsn_equal_p(%struct.vinsn_def* %5, %struct.vinsn_def* %sought_vinsn) #8, !dbg !5611
  %tobool2 = icmp eq i8 %call1, 0, !dbg !5611
  br i1 %tobool2, label %for.inc, label %if.then, !dbg !5612

if.then:                                          ; preds = %for.body
  %6 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !5613
  call void @llvm.dbg.value(metadata %struct._expr* %6, metadata !5599, metadata !DIExpression()), !dbg !5601
  br label %cleanup, !dbg !5614

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5600, metadata !DIExpression(DW_OP_deref)), !dbg !5601
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !5608
  br label %for.cond, !dbg !5608, !llvm.loop !5615

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !5617

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi %struct._expr* [ %6, %if.then ], [ null, %cleanup.loopexit ], !dbg !5601
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5617
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5617
  ret %struct._expr* %retval.0, !dbg !5617
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_unavailable_target_for_expr(%struct._expr* %expr, %struct.bitmap_head_def* %lv_set) unnamed_addr #5 !dbg !5618 {
entry:
  %regno = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !5622, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %lv_set, metadata !5623, metadata !DIExpression()), !dbg !5629
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !5630
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5630
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 1, i32 0, !dbg !5630
  %1 = load i32, i32* %type, align 8, !dbg !5630
  %cmp = icmp eq i32 %1, 23, !dbg !5630
  br i1 %cmp, label %if.then, label %if.else20, !dbg !5631

if.then:                                          ; preds = %entry
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 1, i32 1, !dbg !5632
  %2 = bitcast %struct.rtx_def** %lhs to i32**, !dbg !5632
  %3 = load i32*, i32** %2, align 8, !dbg !5632
  %bf.load = load i32, i32* %3, align 8, !dbg !5632
  %bf.clear = and i32 %bf.load, 65535, !dbg !5632
  %cmp3 = icmp eq i32 %bf.clear, 37, !dbg !5632
  br i1 %cmp3, label %land.lhs.true, label %if.end43, !dbg !5635

land.lhs.true:                                    ; preds = %if.then
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !5635
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %4) #8, !dbg !5636
  %call7 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %lv_set, i32 %call) #6, !dbg !5637
  %tobool = icmp eq i32 %call7, 0, !dbg !5637
  br i1 %tobool, label %if.end43, label %if.then8, !dbg !5638

if.then8:                                         ; preds = %land.lhs.true
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5639
  %reg_uses = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i64 0, i32 1, i32 5, !dbg !5639
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !5639
  %lhs13 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i64 0, i32 1, i32 1, !dbg !5642
  %7 = load %struct.rtx_def*, %struct.rtx_def** %lhs13, align 8, !dbg !5642
  %call14 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %7) #8, !dbg !5642
  %call15 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %call14) #6, !dbg !5643
  %tobool16 = icmp eq i32 %call15, 0, !dbg !5643
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !5644
  br i1 %tobool16, label %if.else, label %if.then17, !dbg !5645

if.then17:                                        ; preds = %if.then8
  store i8 -1, i8* %target_available, align 8, !dbg !5646
  br label %if.end43, !dbg !5647

if.else:                                          ; preds = %if.then8
  store i8 0, i8* %target_available, align 8, !dbg !5648
  br label %if.end43

if.else20:                                        ; preds = %entry
  %8 = bitcast i32* %regno to i8*, !dbg !5649
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #7, !dbg !5649
  %9 = bitcast %struct.bitmap_iterator* %rsi to i8*, !dbg !5650
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #7, !dbg !5650
  %reg_sets = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 1, i32 3, !dbg !5651
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !5651
  call void @llvm.dbg.value(metadata i32* %regno, metadata !5624, metadata !DIExpression(DW_OP_deref)), !dbg !5653
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !5627, metadata !DIExpression(DW_OP_deref)), !dbg !5653
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* %10, i32 0, i32* nonnull %regno) #8, !dbg !5651
  br label %for.cond, !dbg !5651

for.cond:                                         ; preds = %for.inc, %if.else20
  call void @llvm.dbg.value(metadata i32* %regno, metadata !5624, metadata !DIExpression(DW_OP_deref)), !dbg !5653
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !5627, metadata !DIExpression(DW_OP_deref)), !dbg !5653
  %call23 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %regno) #8, !dbg !5654
  %tobool24 = icmp eq i8 %call23, 0, !dbg !5651
  br i1 %tobool24, label %for.end.loopexit, label %for.body, !dbg !5651

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %regno, align 4, !dbg !5656
  call void @llvm.dbg.value(metadata i32 %11, metadata !5624, metadata !DIExpression()), !dbg !5653
  %call25 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %lv_set, i32 %11) #6, !dbg !5658
  %tobool26 = icmp eq i32 %call25, 0, !dbg !5658
  br i1 %tobool26, label %for.inc, label %if.then27, !dbg !5659

if.then27:                                        ; preds = %for.body
  %target_available28 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !5660
  store i8 0, i8* %target_available28, align 8, !dbg !5662
  br label %for.end, !dbg !5663

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32* %regno, metadata !5624, metadata !DIExpression(DW_OP_deref)), !dbg !5653
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !5627, metadata !DIExpression(DW_OP_deref)), !dbg !5653
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %regno) #8, !dbg !5654
  br label %for.cond, !dbg !5654, !llvm.loop !5664

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !5666

for.end:                                          ; preds = %for.end.loopexit, %if.then27
  %12 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5666
  %reg_clobbers = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %12, i64 0, i32 1, i32 4, !dbg !5666
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !5666
  call void @llvm.dbg.value(metadata i32* %regno, metadata !5624, metadata !DIExpression(DW_OP_deref)), !dbg !5653
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !5627, metadata !DIExpression(DW_OP_deref)), !dbg !5653
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* %13, i32 0, i32* nonnull %regno) #8, !dbg !5666
  br label %for.cond32, !dbg !5666

for.cond32:                                       ; preds = %for.inc41, %for.end
  call void @llvm.dbg.value(metadata i32* %regno, metadata !5624, metadata !DIExpression(DW_OP_deref)), !dbg !5653
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !5627, metadata !DIExpression(DW_OP_deref)), !dbg !5653
  %call33 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %regno) #8, !dbg !5668
  %tobool34 = icmp eq i8 %call33, 0, !dbg !5666
  br i1 %tobool34, label %for.end42.loopexit, label %for.body35, !dbg !5666

for.body35:                                       ; preds = %for.cond32
  %14 = load i32, i32* %regno, align 4, !dbg !5670
  call void @llvm.dbg.value(metadata i32 %14, metadata !5624, metadata !DIExpression()), !dbg !5653
  %call36 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %lv_set, i32 %14) #6, !dbg !5672
  %tobool37 = icmp eq i32 %call36, 0, !dbg !5672
  br i1 %tobool37, label %for.inc41, label %if.then38, !dbg !5673

if.then38:                                        ; preds = %for.body35
  %target_available39 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !5674
  store i8 0, i8* %target_available39, align 8, !dbg !5676
  br label %for.end42, !dbg !5677

for.inc41:                                        ; preds = %for.body35
  call void @llvm.dbg.value(metadata i32* %regno, metadata !5624, metadata !DIExpression(DW_OP_deref)), !dbg !5653
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !5627, metadata !DIExpression(DW_OP_deref)), !dbg !5653
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %regno) #8, !dbg !5668
  br label %for.cond32, !dbg !5668, !llvm.loop !5678

for.end42.loopexit:                               ; preds = %for.cond32
  br label %for.end42, !dbg !5680

for.end42:                                        ; preds = %for.end42.loopexit, %if.then38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #7, !dbg !5680
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #7, !dbg !5680
  br label %if.end43

if.end43:                                         ; preds = %land.lhs.true, %if.then, %if.else, %if.then17, %for.end42
  ret void, !dbg !5681
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_iter_next(%struct._list_iterator* %ip) unnamed_addr #0 !dbg !5682 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_iterator* %ip, metadata !5686, metadata !DIExpression()), !dbg !5687
  %removed_p = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 2, !dbg !5688
  %0 = load i8, i8* %removed_p, align 1, !dbg !5688
  %tobool = icmp eq i8 %0, 0, !dbg !5690
  br i1 %tobool, label %if.then, label %if.else, !dbg !5691

if.then:                                          ; preds = %entry
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 0, !dbg !5692
  %1 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5692
  %2 = load %struct._list_node*, %struct._list_node** %1, align 8, !dbg !5692
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %2, i64 0, i32 0, !dbg !5692
  store %struct._list_node** %next, %struct._list_node*** %lp, align 8, !dbg !5693
  br label %if.end, !dbg !5694

if.else:                                          ; preds = %entry
  store i8 0, i8* %removed_p, align 1, !dbg !5695
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5696
}

; Function Attrs: nounwind uwtable
define dso_local void @av_set_add(%struct._list_node** %setp, %struct._expr* %expr) local_unnamed_addr #5 !dbg !5697 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %setp, metadata !5701, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !5702, metadata !DIExpression()), !dbg !5704
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !5705
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5705
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 0, !dbg !5705
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !5705
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !5705
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5705
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5705
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5705
  %4 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !5705
  %cmp = icmp eq %struct.rtx_def* %3, %4, !dbg !5705
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5705

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2040, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5705
  br label %cond.end, !dbg !5705

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call fastcc %struct._list_node* @av_set_add_element(%struct._list_node** %setp) #8, !dbg !5706
  call void @llvm.dbg.value(metadata %struct._list_node* %call, metadata !5703, metadata !DIExpression()), !dbg !5704
  %u1 = getelementptr inbounds %struct._list_node, %struct._list_node* %call, i64 0, i32 1, !dbg !5707
  %expr2 = bitcast %union.anon.0* %u1 to %struct._expr*, !dbg !5707
  tail call void @copy_expr(%struct._expr* nonnull %expr2, %struct._expr* %expr) #8, !dbg !5708
  ret void, !dbg !5709
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._list_node* @av_set_add_element(%struct._list_node** %setp) unnamed_addr #5 !dbg !5710 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %setp, metadata !5714, metadata !DIExpression()), !dbg !5715
  tail call fastcc void @_list_add(%struct._list_node** %setp) #8, !dbg !5716
  %0 = load %struct._list_node*, %struct._list_node** %setp, align 8, !dbg !5717
  ret %struct._list_node* %0, !dbg !5718
}

; Function Attrs: nounwind uwtable
define dso_local void @av_set_iter_remove(%struct._list_iterator* %ip) local_unnamed_addr #5 !dbg !5719 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_iterator* %ip, metadata !5724, metadata !DIExpression()), !dbg !5725
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 0, !dbg !5726
  %0 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5726
  %1 = load %struct._list_node*, %struct._list_node** %0, align 8, !dbg !5726
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %1, i64 0, i32 1, !dbg !5726
  %expr = bitcast %union.anon.0* %u to %struct._expr*, !dbg !5726
  tail call void @clear_expr(%struct._expr* nonnull %expr) #8, !dbg !5727
  tail call fastcc void @_list_iter_remove(%struct._list_iterator* %ip) #8, !dbg !5728
  ret void, !dbg !5729
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_iter_remove(%struct._list_iterator* %ip) unnamed_addr #0 !dbg !5730 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_iterator* %ip, metadata !5732, metadata !DIExpression()), !dbg !5733
  %removed_p = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 2, !dbg !5734
  %0 = load i8, i8* %removed_p, align 1, !dbg !5734
  %tobool = icmp eq i8 %0, 0, !dbg !5734
  br i1 %tobool, label %land.lhs.true, label %cond.true, !dbg !5734

land.lhs.true:                                    ; preds = %entry
  %can_remove_p = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 1, !dbg !5734
  %1 = load i8, i8* %can_remove_p, align 8, !dbg !5734
  %tobool1 = icmp eq i8 %1, 0, !dbg !5734
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !5734

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 448, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5734
  br label %cond.end, !dbg !5734

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 0, !dbg !5735
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5735
  tail call fastcc void @_list_remove(%struct._list_node** %2) #8, !dbg !5736
  store i8 1, i8* %removed_p, align 1, !dbg !5737
  ret void, !dbg !5738
}

; Function Attrs: nounwind uwtable
define dso_local %struct._expr* @merge_with_other_exprs(%struct._list_node** %avp, %struct._list_iterator* %ip, %struct._expr* %expr) local_unnamed_addr #5 !dbg !5739 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %avp, metadata !5743, metadata !DIExpression()), !dbg !5747
  call void @llvm.dbg.value(metadata %struct._list_iterator* %ip, metadata !5744, metadata !DIExpression()), !dbg !5747
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !5745, metadata !DIExpression()), !dbg !5747
  %0 = load %struct._list_node*, %struct._list_node** %avp, align 8, !dbg !5748
  %call = tail call fastcc %struct._expr* @av_set_lookup_other_equiv_expr(%struct._list_node* %0, %struct._expr* %expr) #8, !dbg !5749
  call void @llvm.dbg.value(metadata %struct._expr* %call, metadata !5746, metadata !DIExpression()), !dbg !5747
  %cmp = icmp eq %struct._expr* %call, null, !dbg !5750
  br i1 %cmp, label %cleanup, label %if.then, !dbg !5752

if.then:                                          ; preds = %entry
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %call, i64 0, i32 11, !dbg !5753
  store i8 -1, i8* %target_available, align 8, !dbg !5755
  %usefulness = getelementptr inbounds %struct._expr, %struct._expr* %call, i64 0, i32 2, !dbg !5756
  store i32 0, i32* %usefulness, align 4, !dbg !5757
  tail call void @merge_expr(%struct._expr* nonnull %call, %struct._expr* %expr, %struct.rtx_def* null) #8, !dbg !5758
  store i32 10000, i32* %usefulness, align 4, !dbg !5759
  tail call void @av_set_iter_remove(%struct._list_iterator* %ip) #8, !dbg !5760
  br label %cleanup, !dbg !5761

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %struct._expr* [ %call, %if.then ], [ %expr, %entry ], !dbg !5747
  ret %struct._expr* %retval.0, !dbg !5762
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._expr* @av_set_lookup_other_equiv_expr(%struct._list_node* %set, %struct._expr* %expr) unnamed_addr #5 !dbg !5763 {
entry:
  %set.addr = alloca %struct._list_node*, align 8
  %cur_expr = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %set, metadata !5767, metadata !DIExpression()), !dbg !5771
  store %struct._list_node* %set, %struct._list_node** %set.addr, align 8
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !5768, metadata !DIExpression()), !dbg !5771
  %0 = bitcast %struct._expr** %cur_expr to i8*, !dbg !5772
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5772
  %1 = bitcast %struct._list_iterator* %i to i8*, !dbg !5773
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5773
  call void @llvm.dbg.value(metadata %struct._list_node** %set.addr, metadata !5767, metadata !DIExpression(DW_OP_deref)), !dbg !5771
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5770, metadata !DIExpression(DW_OP_deref)), !dbg !5771
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** nonnull %set.addr, i8 zeroext 0) #8, !dbg !5774
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !5776
  %vinsn1 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !5778
  br label %for.cond, !dbg !5774

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5781
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !5781
  call void @llvm.dbg.value(metadata %struct._expr** %cur_expr, metadata !5769, metadata !DIExpression(DW_OP_deref)), !dbg !5771
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %cur_expr) #8, !dbg !5781
  %tobool = icmp eq i8 %call, 0, !dbg !5774
  br i1 %tobool, label %cleanup.loopexit, label %for.body, !dbg !5774

for.body:                                         ; preds = %for.cond
  %4 = load %struct._expr*, %struct._expr** %cur_expr, align 8, !dbg !5782
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !5769, metadata !DIExpression()), !dbg !5771
  %cmp = icmp eq %struct._expr* %4, %expr, !dbg !5784
  br i1 %cmp, label %for.inc, label %if.end, !dbg !5785

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !5769, metadata !DIExpression()), !dbg !5771
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i64 0, i32 0, !dbg !5786
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5786
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !5787
  %call2 = call zeroext i8 @vinsn_equal_p(%struct.vinsn_def* %5, %struct.vinsn_def* %6) #8, !dbg !5788
  %tobool3 = icmp eq i8 %call2, 0, !dbg !5788
  br i1 %tobool3, label %for.inc, label %if.then4, !dbg !5789

if.then4:                                         ; preds = %if.end
  %7 = load %struct._expr*, %struct._expr** %cur_expr, align 8, !dbg !5790
  call void @llvm.dbg.value(metadata %struct._expr* %7, metadata !5769, metadata !DIExpression()), !dbg !5771
  br label %cleanup, !dbg !5791

for.inc:                                          ; preds = %if.end, %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5770, metadata !DIExpression(DW_OP_deref)), !dbg !5771
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !5781
  br label %for.cond, !dbg !5781, !llvm.loop !5792

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !5794

cleanup:                                          ; preds = %cleanup.loopexit, %if.then4
  %retval.0 = phi %struct._expr* [ %7, %if.then4 ], [ null, %cleanup.loopexit ], !dbg !5771
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5794
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5794
  ret %struct._expr* %retval.0, !dbg !5794
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @av_set_is_in_p(%struct._list_node* %set, %struct.vinsn_def* %vi) local_unnamed_addr #5 !dbg !5795 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node* %set, metadata !5799, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !5800, metadata !DIExpression()), !dbg !5801
  %call = tail call %struct._expr* @av_set_lookup(%struct._list_node* %set, %struct.vinsn_def* %vi) #8, !dbg !5802
  %cmp = icmp ne %struct._expr* %call, null, !dbg !5803
  %conv1 = zext i1 %cmp to i8, !dbg !5802
  ret i8 %conv1, !dbg !5804
}

; Function Attrs: nounwind uwtable
define dso_local %struct._list_node* @av_set_copy(%struct._list_node* %set) local_unnamed_addr #5 !dbg !5805 {
entry:
  %set.addr = alloca %struct._list_node*, align 8
  %expr = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  %res = alloca %struct._list_node*, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %set, metadata !5809, metadata !DIExpression()), !dbg !5813
  store %struct._list_node* %set, %struct._list_node** %set.addr, align 8
  %0 = bitcast %struct._expr** %expr to i8*, !dbg !5814
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5814
  %1 = bitcast %struct._list_iterator* %i to i8*, !dbg !5815
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5815
  %2 = bitcast %struct._list_node** %res to i8*, !dbg !5816
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !5816
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !5812, metadata !DIExpression()), !dbg !5813
  store %struct._list_node* null, %struct._list_node** %res, align 8, !dbg !5817
  call void @llvm.dbg.value(metadata %struct._list_node** %set.addr, metadata !5809, metadata !DIExpression(DW_OP_deref)), !dbg !5813
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5811, metadata !DIExpression(DW_OP_deref)), !dbg !5813
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** nonnull %set.addr, i8 zeroext 0) #8, !dbg !5818
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !5820
  br label %for.cond, !dbg !5818

for.cond:                                         ; preds = %for.body, %entry
  %3 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5822
  %4 = load %struct._list_node*, %struct._list_node** %3, align 8, !dbg !5822
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !5810, metadata !DIExpression(DW_OP_deref)), !dbg !5813
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %4, %struct._expr** nonnull %expr) #8, !dbg !5822
  %tobool = icmp eq i8 %call, 0, !dbg !5818
  br i1 %tobool, label %for.end, label %for.body, !dbg !5818

for.body:                                         ; preds = %for.cond
  %5 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !5823
  call void @llvm.dbg.value(metadata %struct._expr* %5, metadata !5810, metadata !DIExpression()), !dbg !5813
  call void @llvm.dbg.value(metadata %struct._list_node** %res, metadata !5812, metadata !DIExpression(DW_OP_deref)), !dbg !5813
  call void @av_set_add(%struct._list_node** nonnull %res, %struct._expr* %5) #8, !dbg !5824
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5811, metadata !DIExpression(DW_OP_deref)), !dbg !5813
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !5822
  br label %for.cond, !dbg !5822, !llvm.loop !5825

for.end:                                          ; preds = %for.cond
  %6 = load %struct._list_node*, %struct._list_node** %res, align 8, !dbg !5827
  call void @llvm.dbg.value(metadata %struct._list_node* %6, metadata !5812, metadata !DIExpression()), !dbg !5813
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !5828
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5828
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5828
  ret %struct._list_node* %6, !dbg !5829
}

; Function Attrs: nounwind uwtable
define dso_local void @av_set_union_and_clear(%struct._list_node** %top, %struct._list_node** %fromp, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5830 {
entry:
  %expr1 = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._list_node** %top, metadata !5834, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata %struct._list_node** %fromp, metadata !5835, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5836, metadata !DIExpression()), !dbg !5843
  %0 = bitcast %struct._expr** %expr1 to i8*, !dbg !5844
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5844
  %1 = bitcast %struct._list_iterator* %i to i8*, !dbg !5845
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5845
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5838, metadata !DIExpression(DW_OP_deref)), !dbg !5843
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** %top, i8 zeroext 1) #8, !dbg !5846
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !5847
  br label %for.cond, !dbg !5846

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5848
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !5848
  call void @llvm.dbg.value(metadata %struct._expr** %expr1, metadata !5837, metadata !DIExpression(DW_OP_deref)), !dbg !5843
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr1) #8, !dbg !5848
  %tobool = icmp eq i8 %call, 0, !dbg !5846
  br i1 %tobool, label %for.end, label %for.body, !dbg !5846

for.body:                                         ; preds = %for.cond
  %4 = load %struct._list_node*, %struct._list_node** %fromp, align 8, !dbg !5849
  %5 = load %struct._expr*, %struct._expr** %expr1, align 8, !dbg !5850
  call void @llvm.dbg.value(metadata %struct._expr* %5, metadata !5837, metadata !DIExpression()), !dbg !5843
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %5, i64 0, i32 0, !dbg !5850
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5850
  %call1 = call %struct._expr* @av_set_lookup(%struct._list_node* %4, %struct.vinsn_def* %6) #8, !dbg !5851
  call void @llvm.dbg.value(metadata %struct._expr* %call1, metadata !5839, metadata !DIExpression()), !dbg !5852
  %tobool2 = icmp eq %struct._expr* %call1, null, !dbg !5853
  br i1 %tobool2, label %for.inc, label %if.then, !dbg !5855

if.then:                                          ; preds = %for.body
  %7 = load %struct._expr*, %struct._expr** %expr1, align 8, !dbg !5856
  call void @llvm.dbg.value(metadata %struct._expr* %7, metadata !5837, metadata !DIExpression()), !dbg !5843
  call void @merge_expr(%struct._expr* nonnull %call1, %struct._expr* %7, %struct.rtx_def* %insn) #8, !dbg !5858
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5838, metadata !DIExpression(DW_OP_deref)), !dbg !5843
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %i) #8, !dbg !5859
  br label %for.inc, !dbg !5860

for.inc:                                          ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5838, metadata !DIExpression(DW_OP_deref)), !dbg !5843
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !5848
  br label %for.cond, !dbg !5848, !llvm.loop !5861

for.end:                                          ; preds = %for.cond
  %8 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5863
  call fastcc void @join_distinct_sets(%struct._list_node** %8, %struct._list_node** %fromp) #8, !dbg !5864
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5865
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5865
  ret void, !dbg !5865
}

; Function Attrs: nounwind uwtable
define internal fastcc void @join_distinct_sets(%struct._list_node** %to_tailp, %struct._list_node** %fromp) unnamed_addr #5 !dbg !5866 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %to_tailp, metadata !5870, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.value(metadata %struct._list_node** %fromp, metadata !5871, metadata !DIExpression()), !dbg !5872
  %0 = load %struct._list_node*, %struct._list_node** %to_tailp, align 8, !dbg !5873
  %cmp = icmp eq %struct._list_node* %0, null, !dbg !5873
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5873

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2167, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5873
  br label %cond.end, !dbg !5873

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %struct._list_node** %fromp to i64*, !dbg !5874
  %2 = load i64, i64* %1, align 8, !dbg !5874
  %3 = bitcast %struct._list_node** %to_tailp to i64*, !dbg !5875
  store i64 %2, i64* %3, align 8, !dbg !5875
  store %struct._list_node* null, %struct._list_node** %fromp, align 8, !dbg !5876
  ret void, !dbg !5877
}

; Function Attrs: nounwind uwtable
define dso_local void @av_set_union_and_live(%struct._list_node** %top, %struct._list_node** %fromp, %struct.bitmap_head_def* %to_lv_set, %struct.bitmap_head_def* %from_lv_set, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5878 {
entry:
  %expr1 = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  %in_both_set = alloca %struct._list_node*, align 8
  call void @llvm.dbg.value(metadata %struct._list_node** %top, metadata !5882, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %struct._list_node** %fromp, metadata !5883, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %to_lv_set, metadata !5884, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %from_lv_set, metadata !5885, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5886, metadata !DIExpression()), !dbg !5901
  %0 = bitcast %struct._expr** %expr1 to i8*, !dbg !5902
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5902
  %1 = bitcast %struct._list_iterator* %i to i8*, !dbg !5903
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5903
  %2 = bitcast %struct._list_node** %in_both_set to i8*, !dbg !5904
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !5904
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !5890, metadata !DIExpression()), !dbg !5901
  store %struct._list_node* null, %struct._list_node** %in_both_set, align 8, !dbg !5905
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5888, metadata !DIExpression(DW_OP_deref)), !dbg !5901
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** %top, i8 zeroext 1) #8, !dbg !5906
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !5907
  br label %for.cond, !dbg !5906

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5908
  %4 = load %struct._list_node*, %struct._list_node** %3, align 8, !dbg !5908
  call void @llvm.dbg.value(metadata %struct._expr** %expr1, metadata !5887, metadata !DIExpression(DW_OP_deref)), !dbg !5901
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %4, %struct._expr** nonnull %expr1) #8, !dbg !5908
  %tobool = icmp eq i8 %call, 0, !dbg !5906
  br i1 %tobool, label %for.end, label %for.body, !dbg !5906

for.body:                                         ; preds = %for.cond
  %5 = load %struct._expr*, %struct._expr** %expr1, align 8, !dbg !5909
  call void @llvm.dbg.value(metadata %struct._expr* %5, metadata !5887, metadata !DIExpression()), !dbg !5901
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %5, i64 0, i32 0, !dbg !5909
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5909
  %call1 = call fastcc %struct._expr* @av_set_lookup_and_remove(%struct._list_node** %fromp, %struct.vinsn_def* %6) #8, !dbg !5910
  call void @llvm.dbg.value(metadata %struct._expr* %call1, metadata !5891, metadata !DIExpression()), !dbg !5911
  %tobool2 = icmp eq %struct._expr* %call1, null, !dbg !5912
  %7 = load %struct._expr*, %struct._expr** %expr1, align 8, !dbg !5913
  call void @llvm.dbg.value(metadata %struct._expr* %7, metadata !5887, metadata !DIExpression()), !dbg !5901
  br i1 %tobool2, label %if.else30, label %if.then, !dbg !5914

if.then:                                          ; preds = %for.body
  %vinsn3 = getelementptr inbounds %struct._expr, %struct._expr* %7, i64 0, i32 0, !dbg !5915
  %8 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn3, align 8, !dbg !5915
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %8, i64 0, i32 1, i32 0, !dbg !5915
  %9 = load i32, i32* %type, align 8, !dbg !5915
  %cmp = icmp eq i32 %9, 23, !dbg !5915
  call void @llvm.dbg.value(metadata %struct._expr* %7, metadata !5887, metadata !DIExpression()), !dbg !5901
  br i1 %cmp, label %if.then4, label %if.else, !dbg !5916

if.then4:                                         ; preds = %if.then
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %8, i64 0, i32 1, i32 1, !dbg !5917
  %10 = bitcast %struct.rtx_def** %lhs to i32**, !dbg !5917
  %11 = load i32*, i32** %10, align 8, !dbg !5917
  %bf.load = load i32, i32* %11, align 8, !dbg !5917
  %bf.clear = and i32 %bf.load, 65535, !dbg !5917
  %cmp7 = icmp eq i32 %bf.clear, 37, !dbg !5917
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !5917

cond.true:                                        ; preds = %if.then4
  call void @llvm.dbg.value(metadata %struct._expr* %7, metadata !5887, metadata !DIExpression()), !dbg !5901
  %call8 = call i32 @expr_dest_regno(%struct._expr* %7) #8, !dbg !5918
  br label %cond.end, !dbg !5917

cond.end:                                         ; preds = %if.then4, %cond.true
  %cond = phi i32 [ %call8, %cond.true ], [ -1, %if.then4 ], !dbg !5917
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5895, metadata !DIExpression()), !dbg !5919
  %vinsn9 = getelementptr inbounds %struct._expr, %struct._expr* %call1, i64 0, i32 0, !dbg !5920
  %12 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn9, align 8, !dbg !5920
  %lhs11 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %12, i64 0, i32 1, i32 1, !dbg !5920
  %13 = bitcast %struct.rtx_def** %lhs11 to i32**, !dbg !5920
  %14 = load i32*, i32** %13, align 8, !dbg !5920
  %bf.load12 = load i32, i32* %14, align 8, !dbg !5920
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !5920
  %cmp14 = icmp eq i32 %bf.clear13, 37, !dbg !5920
  br i1 %cmp14, label %cond.true15, label %cond.end18, !dbg !5920

cond.true15:                                      ; preds = %cond.end
  %call16 = call i32 @expr_dest_regno(%struct._expr* nonnull %call1) #8, !dbg !5921
  br label %cond.end18, !dbg !5920

cond.end18:                                       ; preds = %cond.end, %cond.true15
  %cond19 = phi i32 [ %call16, %cond.true15 ], [ -1, %cond.end ], !dbg !5920
  call void @llvm.dbg.value(metadata i32 %cond19, metadata !5900, metadata !DIExpression()), !dbg !5919
  %cmp20 = icmp eq i32 %cond, %cond19, !dbg !5922
  br i1 %cmp20, label %if.end29, label %if.then21, !dbg !5924

if.then21:                                        ; preds = %cond.end18
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %call1, i64 0, i32 11, !dbg !5925
  store i8 -1, i8* %target_available, align 8, !dbg !5926
  br label %if.end29, !dbg !5925

if.else:                                          ; preds = %if.then
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %8, i64 0, i32 0, !dbg !5927
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !5927
  %vinsn23 = getelementptr inbounds %struct._expr, %struct._expr* %call1, i64 0, i32 0, !dbg !5929
  %16 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn23, align 8, !dbg !5929
  %insn_rtx24 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %16, i64 0, i32 0, !dbg !5929
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx24, align 8, !dbg !5929
  %cmp25 = icmp eq %struct.rtx_def* %15, %17, !dbg !5930
  br i1 %cmp25, label %if.end29, label %if.then26, !dbg !5931

if.then26:                                        ; preds = %if.else
  %target_available27 = getelementptr inbounds %struct._expr, %struct._expr* %call1, i64 0, i32 11, !dbg !5932
  store i8 -1, i8* %target_available27, align 8, !dbg !5933
  br label %if.end29, !dbg !5932

if.end29:                                         ; preds = %cond.end18, %if.else, %if.then26, %if.then21
  %18 = load %struct._expr*, %struct._expr** %expr1, align 8, !dbg !5934
  call void @llvm.dbg.value(metadata %struct._expr* %18, metadata !5887, metadata !DIExpression()), !dbg !5901
  call void @merge_expr(%struct._expr* nonnull %call1, %struct._expr* %18, %struct.rtx_def* %insn) #8, !dbg !5935
  call void @llvm.dbg.value(metadata %struct._list_node** %in_both_set, metadata !5890, metadata !DIExpression(DW_OP_deref)), !dbg !5901
  call fastcc void @av_set_add_nocopy(%struct._list_node** nonnull %in_both_set, %struct._expr* nonnull %call1) #8, !dbg !5936
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5888, metadata !DIExpression(DW_OP_deref)), !dbg !5901
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %i) #8, !dbg !5937
  br label %for.inc, !dbg !5938

if.else30:                                        ; preds = %for.body
  call fastcc void @set_unavailable_target_for_expr(%struct._expr* %7, %struct.bitmap_head_def* %from_lv_set) #8, !dbg !5939
  br label %for.inc

for.inc:                                          ; preds = %if.end29, %if.else30
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5888, metadata !DIExpression(DW_OP_deref)), !dbg !5901
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !5908
  br label %for.cond, !dbg !5908, !llvm.loop !5940

for.end:                                          ; preds = %for.cond
  %19 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5942
  call void @llvm.dbg.value(metadata %struct._list_node** %19, metadata !5889, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5888, metadata !DIExpression(DW_OP_deref)), !dbg !5901
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** %fromp, i8 zeroext 0) #8, !dbg !5943
  br label %for.cond33, !dbg !5943

for.cond33:                                       ; preds = %for.body37, %for.end
  %20 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5945
  %21 = load %struct._list_node*, %struct._list_node** %20, align 8, !dbg !5945
  call void @llvm.dbg.value(metadata %struct._expr** %expr1, metadata !5887, metadata !DIExpression(DW_OP_deref)), !dbg !5901
  %call35 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %21, %struct._expr** nonnull %expr1) #8, !dbg !5945
  %tobool36 = icmp eq i8 %call35, 0, !dbg !5943
  br i1 %tobool36, label %for.end39, label %for.body37, !dbg !5943

for.body37:                                       ; preds = %for.cond33
  %22 = load %struct._expr*, %struct._expr** %expr1, align 8, !dbg !5947
  call void @llvm.dbg.value(metadata %struct._expr* %22, metadata !5887, metadata !DIExpression()), !dbg !5901
  call fastcc void @set_unavailable_target_for_expr(%struct._expr* %22, %struct.bitmap_head_def* %to_lv_set) #8, !dbg !5948
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5888, metadata !DIExpression(DW_OP_deref)), !dbg !5901
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !5945
  br label %for.cond33, !dbg !5945, !llvm.loop !5949

for.end39:                                        ; preds = %for.cond33
  %23 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5951
  call void @llvm.dbg.value(metadata %struct._list_node** %in_both_set, metadata !5890, metadata !DIExpression(DW_OP_deref)), !dbg !5901
  call fastcc void @join_distinct_sets(%struct._list_node** %23, %struct._list_node** nonnull %in_both_set) #8, !dbg !5952
  call fastcc void @join_distinct_sets(%struct._list_node** %19, %struct._list_node** %fromp) #8, !dbg !5953
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !5954
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5954
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5954
  ret void, !dbg !5954
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._expr* @av_set_lookup_and_remove(%struct._list_node** %setp, %struct.vinsn_def* %sought_vinsn) unnamed_addr #5 !dbg !5955 {
entry:
  %expr = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._list_node** %setp, metadata !5959, metadata !DIExpression()), !dbg !5963
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %sought_vinsn, metadata !5960, metadata !DIExpression()), !dbg !5963
  %0 = bitcast %struct._expr** %expr to i8*, !dbg !5964
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5964
  %1 = bitcast %struct._list_iterator* %i to i8*, !dbg !5965
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5965
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5962, metadata !DIExpression(DW_OP_deref)), !dbg !5963
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** %setp, i8 zeroext 1) #8, !dbg !5966
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !5968
  br label %for.cond, !dbg !5966

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5970
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !5970
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !5961, metadata !DIExpression(DW_OP_deref)), !dbg !5963
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #8, !dbg !5970
  %tobool = icmp eq i8 %call, 0, !dbg !5966
  br i1 %tobool, label %cleanup.loopexit, label %for.body, !dbg !5966

for.body:                                         ; preds = %for.cond
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !5971
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !5961, metadata !DIExpression()), !dbg !5963
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i64 0, i32 0, !dbg !5971
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5971
  %call1 = call zeroext i8 @vinsn_equal_p(%struct.vinsn_def* %5, %struct.vinsn_def* %sought_vinsn) #8, !dbg !5973
  %tobool2 = icmp eq i8 %call1, 0, !dbg !5973
  br i1 %tobool2, label %for.inc, label %if.then, !dbg !5974

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5962, metadata !DIExpression(DW_OP_deref)), !dbg !5963
  call fastcc void @_list_iter_remove_nofree(%struct._list_iterator* nonnull %i) #8, !dbg !5975
  %6 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !5977
  call void @llvm.dbg.value(metadata %struct._expr* %6, metadata !5961, metadata !DIExpression()), !dbg !5963
  br label %cleanup, !dbg !5978

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5962, metadata !DIExpression(DW_OP_deref)), !dbg !5963
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !5970
  br label %for.cond, !dbg !5970, !llvm.loop !5979

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !5981

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi %struct._expr* [ %6, %if.then ], [ null, %cleanup.loopexit ], !dbg !5963
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5981
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5981
  ret %struct._expr* %retval.0, !dbg !5981
}

; Function Attrs: nounwind uwtable
define internal fastcc void @av_set_add_nocopy(%struct._list_node** %setp, %struct._expr* %expr) unnamed_addr #5 !dbg !5982 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %setp, metadata !5984, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !5985, metadata !DIExpression()), !dbg !5987
  %call = tail call fastcc %struct._list_node* @av_set_add_element(%struct._list_node** %setp) #8, !dbg !5988
  call void @llvm.dbg.value(metadata %struct._list_node* %call, metadata !5986, metadata !DIExpression()), !dbg !5987
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %call, i64 0, i32 1, !dbg !5989
  %0 = bitcast %union.anon.0* %u to i8*, !dbg !5990
  %1 = bitcast %struct._expr* %expr to i8*, !dbg !5990
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %1, i64 64, i1 false), !dbg !5990
  ret void, !dbg !5991
}

; Function Attrs: nounwind uwtable
define dso_local void @av_set_leave_one_nonspec(%struct._list_node** %setp) local_unnamed_addr #5 !dbg !5992 {
entry:
  %expr = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._list_node** %setp, metadata !5994, metadata !DIExpression()), !dbg !5998
  %0 = bitcast %struct._expr** %expr to i8*, !dbg !5999
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5999
  %1 = bitcast %struct._list_iterator* %i to i8*, !dbg !6000
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !6000
  call void @llvm.dbg.value(metadata i8 0, metadata !5997, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5996, metadata !DIExpression(DW_OP_deref)), !dbg !5998
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** %setp, i8 zeroext 1) #8, !dbg !6001
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !6003
  br label %for.cond, !dbg !6001

for.cond:                                         ; preds = %for.inc, %entry
  %has_one_nonspec.0 = phi i8 [ 0, %entry ], [ %has_one_nonspec.2, %for.inc ], !dbg !6005
  call void @llvm.dbg.value(metadata i8 %has_one_nonspec.0, metadata !5997, metadata !DIExpression()), !dbg !5998
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !6006
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !6006
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !5995, metadata !DIExpression(DW_OP_deref)), !dbg !5998
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #8, !dbg !6006
  %tobool = icmp eq i8 %call, 0, !dbg !6001
  br i1 %tobool, label %for.end, label %for.body, !dbg !6001

for.body:                                         ; preds = %for.cond
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !6007
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !5995, metadata !DIExpression()), !dbg !5998
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %4, i64 0, i32 7, !dbg !6007
  %5 = load i32, i32* %spec_done_ds, align 8, !dbg !6007
  %tobool1 = icmp eq i32 %5, 0, !dbg !6007
  br i1 %tobool1, label %if.then, label %for.inc, !dbg !6010

if.then:                                          ; preds = %for.body
  %tobool2 = icmp eq i8 %has_one_nonspec.0, 0, !dbg !6011
  br i1 %tobool2, label %for.inc, label %if.then3, !dbg !6014

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5996, metadata !DIExpression(DW_OP_deref)), !dbg !5998
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %i) #8, !dbg !6015
  br label %for.inc, !dbg !6015

for.inc:                                          ; preds = %if.then, %for.body, %if.then3
  %has_one_nonspec.2 = phi i8 [ %has_one_nonspec.0, %for.body ], [ %has_one_nonspec.0, %if.then3 ], [ 1, %if.then ], !dbg !6005
  call void @llvm.dbg.value(metadata i8 %has_one_nonspec.2, metadata !5997, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5996, metadata !DIExpression(DW_OP_deref)), !dbg !5998
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !6006
  br label %for.cond, !dbg !6006, !llvm.loop !6016

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !6018
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6018
  ret void, !dbg !6018
}

; Function Attrs: nounwind uwtable
define dso_local %struct._expr* @av_set_element(%struct._list_node* %set, i32 %n) local_unnamed_addr #5 !dbg !6019 {
entry:
  %set.addr = alloca %struct._list_node*, align 8
  %expr = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %set, metadata !6023, metadata !DIExpression()), !dbg !6027
  store %struct._list_node* %set, %struct._list_node** %set.addr, align 8
  call void @llvm.dbg.value(metadata i32 %n, metadata !6024, metadata !DIExpression()), !dbg !6027
  %0 = bitcast %struct._expr** %expr to i8*, !dbg !6028
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6028
  %1 = bitcast %struct._list_iterator* %i to i8*, !dbg !6029
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !6029
  call void @llvm.dbg.value(metadata %struct._list_node** %set.addr, metadata !6023, metadata !DIExpression(DW_OP_deref)), !dbg !6027
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6026, metadata !DIExpression(DW_OP_deref)), !dbg !6027
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** nonnull %set.addr, i8 zeroext 0) #8, !dbg !6030
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !6032
  br label %for.cond, !dbg !6030

for.cond:                                         ; preds = %for.inc, %entry
  %n.addr.0 = phi i32 [ %n, %entry ], [ %dec, %for.inc ]
  call void @llvm.dbg.value(metadata i32 %n.addr.0, metadata !6024, metadata !DIExpression()), !dbg !6027
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !6034
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !6034
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !6025, metadata !DIExpression(DW_OP_deref)), !dbg !6027
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #8, !dbg !6034
  %tobool = icmp eq i8 %call, 0, !dbg !6030
  br i1 %tobool, label %for.end, label %for.body, !dbg !6030

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 %n.addr.0, metadata !6024, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6027
  %cmp = icmp eq i32 %n.addr.0, 0, !dbg !6035
  br i1 %cmp, label %if.then, label %for.inc, !dbg !6037

if.then:                                          ; preds = %for.body
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !6038
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !6025, metadata !DIExpression()), !dbg !6027
  br label %cleanup, !dbg !6039

for.inc:                                          ; preds = %for.body
  %dec = add nsw i32 %n.addr.0, -1, !dbg !6040
  call void @llvm.dbg.value(metadata i32 %dec, metadata !6024, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6026, metadata !DIExpression(DW_OP_deref)), !dbg !6027
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !6034
  br label %for.cond, !dbg !6034, !llvm.loop !6041

for.end:                                          ; preds = %for.cond
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2296, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6043
  br label %cleanup, !dbg !6044

cleanup:                                          ; preds = %for.end, %if.then
  %retval.0 = phi %struct._expr* [ %4, %if.then ], [ null, %for.end ], !dbg !6027
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !6045
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6045
  ret %struct._expr* %retval.0, !dbg !6045
}

; Function Attrs: nounwind uwtable
define dso_local void @av_set_substract_cond_branches(%struct._list_node** %avp) local_unnamed_addr #5 !dbg !6046 {
entry:
  %i = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  call void @llvm.dbg.value(metadata %struct._list_node** %avp, metadata !6048, metadata !DIExpression()), !dbg !6051
  %0 = bitcast %struct._list_iterator* %i to i8*, !dbg !6052
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !6052
  %1 = bitcast %struct._expr** %expr to i8*, !dbg !6053
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !6053
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6049, metadata !DIExpression(DW_OP_deref)), !dbg !6051
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** %avp, i8 zeroext 1) #8, !dbg !6054
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !6056
  br label %for.cond, !dbg !6054

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !6058
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !6058
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !6050, metadata !DIExpression(DW_OP_deref)), !dbg !6051
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #8, !dbg !6058
  %tobool = icmp eq i8 %call, 0, !dbg !6054
  br i1 %tobool, label %for.end, label %for.body, !dbg !6054

for.body:                                         ; preds = %for.cond
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !6059
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !6050, metadata !DIExpression()), !dbg !6051
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i64 0, i32 0, !dbg !6059
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !6059
  %call1 = call zeroext i8 @vinsn_cond_branch_p(%struct.vinsn_def* %5) #8, !dbg !6061
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6061
  br i1 %tobool2, label %for.inc, label %if.then, !dbg !6062

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6049, metadata !DIExpression(DW_OP_deref)), !dbg !6051
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %i) #8, !dbg !6063
  br label %for.inc, !dbg !6063

for.inc:                                          ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6049, metadata !DIExpression(DW_OP_deref)), !dbg !6051
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !6058
  br label %for.cond, !dbg !6058, !llvm.loop !6064

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !6066
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !6066
  ret void, !dbg !6066
}

; Function Attrs: nounwind uwtable
define dso_local void @av_set_split_usefulness(%struct._list_node* %av, i32 %prob, i32 %all_prob) local_unnamed_addr #5 !dbg !6067 {
entry:
  %av.addr = alloca %struct._list_node*, align 8
  %i = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %av, metadata !6071, metadata !DIExpression()), !dbg !6076
  store %struct._list_node* %av, %struct._list_node** %av.addr, align 8
  call void @llvm.dbg.value(metadata i32 %prob, metadata !6072, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.value(metadata i32 %all_prob, metadata !6073, metadata !DIExpression()), !dbg !6076
  %0 = bitcast %struct._list_iterator* %i to i8*, !dbg !6077
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !6077
  %1 = bitcast %struct._expr** %expr to i8*, !dbg !6078
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !6078
  call void @llvm.dbg.value(metadata %struct._list_node** %av.addr, metadata !6071, metadata !DIExpression(DW_OP_deref)), !dbg !6076
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6074, metadata !DIExpression(DW_OP_deref)), !dbg !6076
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** nonnull %av.addr, i8 zeroext 0) #8, !dbg !6079
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !6081
  %tobool1 = icmp eq i32 %all_prob, 0, !dbg !6081
  br i1 %tobool1, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !6079

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !6079

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !6079

for.cond.us:                                      ; preds = %for.body.us, %entry.split.us
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !6083
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !6083
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !6075, metadata !DIExpression(DW_OP_deref)), !dbg !6076
  %call.us = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #8, !dbg !6083
  %tobool.us = icmp eq i8 %call.us, 0, !dbg !6079
  br i1 %tobool.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !6079

for.body.us:                                      ; preds = %for.cond.us
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !6084
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !6075, metadata !DIExpression()), !dbg !6076
  %usefulness2.us = getelementptr inbounds %struct._expr, %struct._expr* %4, i64 0, i32 2, !dbg !6084
  store i32 0, i32* %usefulness2.us, align 4, !dbg !6085
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6074, metadata !DIExpression(DW_OP_deref)), !dbg !6076
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !6083
  br label %for.cond.us, !dbg !6083, !llvm.loop !6086

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !6088

for.cond:                                         ; preds = %for.body, %entry.entry.split_crit_edge
  %5 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !6083
  %6 = load %struct._list_node*, %struct._list_node** %5, align 8, !dbg !6083
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !6075, metadata !DIExpression(DW_OP_deref)), !dbg !6076
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %6, %struct._expr** nonnull %expr) #8, !dbg !6083
  %tobool = icmp eq i8 %call, 0, !dbg !6079
  br i1 %tobool, label %for.end.us-lcssa, label %for.body, !dbg !6079

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct._expr* undef, metadata !6075, metadata !DIExpression()), !dbg !6076
  %7 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !6089
  call void @llvm.dbg.value(metadata %struct._expr* %7, metadata !6075, metadata !DIExpression()), !dbg !6076
  %usefulness = getelementptr inbounds %struct._expr, %struct._expr* %7, i64 0, i32 2, !dbg !6089
  %8 = load i32, i32* %usefulness, align 4, !dbg !6089
  %mul = mul nsw i32 %8, %prob, !dbg !6090
  %div = sdiv i32 %mul, %all_prob, !dbg !6091
  call void @llvm.dbg.value(metadata %struct._expr* %7, metadata !6075, metadata !DIExpression()), !dbg !6076
  store i32 %div, i32* %usefulness, align 4, !dbg !6085
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6074, metadata !DIExpression(DW_OP_deref)), !dbg !6076
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !6083
  br label %for.cond, !dbg !6083, !llvm.loop !6086

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !6088

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !6088
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !6088
  ret void, !dbg !6088
}

; Function Attrs: nounwind uwtable
define dso_local void @av_set_intersect(%struct._list_node** %avp, %struct._list_node* %av) local_unnamed_addr #5 !dbg !6092 {
entry:
  %i = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  call void @llvm.dbg.value(metadata %struct._list_node** %avp, metadata !6096, metadata !DIExpression()), !dbg !6100
  call void @llvm.dbg.value(metadata %struct._list_node* %av, metadata !6097, metadata !DIExpression()), !dbg !6100
  %0 = bitcast %struct._list_iterator* %i to i8*, !dbg !6101
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !6101
  %1 = bitcast %struct._expr** %expr to i8*, !dbg !6102
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !6102
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6098, metadata !DIExpression(DW_OP_deref)), !dbg !6100
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** %avp, i8 zeroext 1) #8, !dbg !6103
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !6105
  br label %for.cond, !dbg !6103

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !6107
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !6107
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !6099, metadata !DIExpression(DW_OP_deref)), !dbg !6100
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #8, !dbg !6107
  %tobool = icmp eq i8 %call, 0, !dbg !6103
  br i1 %tobool, label %for.end, label %for.body, !dbg !6103

for.body:                                         ; preds = %for.cond
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !6108
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !6099, metadata !DIExpression()), !dbg !6100
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i64 0, i32 0, !dbg !6108
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !6108
  %call1 = call %struct._expr* @av_set_lookup(%struct._list_node* %av, %struct.vinsn_def* %5) #8, !dbg !6110
  %cmp = icmp eq %struct._expr* %call1, null, !dbg !6111
  br i1 %cmp, label %if.then, label %for.inc, !dbg !6112

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6098, metadata !DIExpression(DW_OP_deref)), !dbg !6100
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %i) #8, !dbg !6113
  br label %for.inc, !dbg !6113

for.inc:                                          ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6098, metadata !DIExpression(DW_OP_deref)), !dbg !6100
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #8, !dbg !6107
  br label %for.cond, !dbg !6107, !llvm.loop !6114

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !6116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !6116
  ret void, !dbg !6116
}

; Function Attrs: nounwind uwtable
define dso_local void @free_data_for_scheduled_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !6117 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6119, metadata !DIExpression()), !dbg !6120
  %call = tail call fastcc zeroext i8 @first_time_insn_init(%struct.rtx_def* %insn) #8, !dbg !6121
  %tobool = icmp eq i8 %call, 0, !dbg !6121
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6121

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2778, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6121
  br label %cond.end, !dbg !6121

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6122
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !6122
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6122
  %base8 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !6122
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6122
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6122
  %2 = load i32, i32* %rt_int, align 8, !dbg !6122
  %call12 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base8, i32 %2) #8, !dbg !6122
  %call13 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call12) #8, !dbg !6122
  %analyzed_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call13, i64 0, i32 4, !dbg !6122
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %analyzed_deps, align 8, !dbg !6122
  %tobool14 = icmp eq %struct.bitmap_head_def* %3, null, !dbg !6122
  br i1 %tobool14, label %return, label %if.end, !dbg !6124

if.end:                                           ; preds = %cond.end
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6125
  %base17 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i64 0, i32 0, !dbg !6125
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6125
  %base23 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !6125
  %6 = load i32, i32* %rt_int, align 8, !dbg !6125
  %call31 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base23, i32 %6) #8, !dbg !6125
  %call32 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base17, i32 %call31) #8, !dbg !6125
  %analyzed_deps33 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call32, i64 0, i32 4, !dbg !6125
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %analyzed_deps33, align 8, !dbg !6125
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %7) #6, !dbg !6125
  %8 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6125
  %base36 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %8, i64 0, i32 0, !dbg !6125
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6125
  %base42 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %9, i64 0, i32 0, !dbg !6125
  %10 = load i32, i32* %rt_int, align 8, !dbg !6125
  %call50 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base42, i32 %10) #8, !dbg !6125
  %call51 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base36, i32 %call50) #8, !dbg !6125
  %analyzed_deps52 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call51, i64 0, i32 4, !dbg !6125
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %analyzed_deps52, align 8, !dbg !6125
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6126
  %base55 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %11, i64 0, i32 0, !dbg !6126
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6126
  %base61 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %12, i64 0, i32 0, !dbg !6126
  %13 = load i32, i32* %rt_int, align 8, !dbg !6126
  %call69 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base61, i32 %13) #8, !dbg !6126
  %call70 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base55, i32 %call69) #8, !dbg !6126
  %found_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call70, i64 0, i32 5, !dbg !6126
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %found_deps, align 8, !dbg !6126
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %14) #6, !dbg !6126
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6126
  %base73 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i64 0, i32 0, !dbg !6126
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6126
  %base79 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i64 0, i32 0, !dbg !6126
  %17 = load i32, i32* %rt_int, align 8, !dbg !6126
  %call87 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base79, i32 %17) #8, !dbg !6126
  %call88 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base73, i32 %call87) #8, !dbg !6126
  %found_deps89 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call88, i64 0, i32 5, !dbg !6126
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %found_deps89, align 8, !dbg !6126
  %18 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6127
  %base92 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %18, i64 0, i32 0, !dbg !6127
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6127
  %base98 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %19, i64 0, i32 0, !dbg !6127
  %20 = load i32, i32* %rt_int, align 8, !dbg !6127
  %call106 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base98, i32 %20) #8, !dbg !6127
  %call107 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base92, i32 %call106) #8, !dbg !6127
  %transformed_insns = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call107, i64 0, i32 7, !dbg !6127
  %21 = load %struct.htab*, %struct.htab** %transformed_insns, align 8, !dbg !6127
  tail call void @htab_delete(%struct.htab* %21) #6, !dbg !6128
  %22 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6129
  %base110 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %22, i64 0, i32 0, !dbg !6129
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6129
  %base116 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i64 0, i32 0, !dbg !6129
  %24 = load i32, i32* %rt_int, align 8, !dbg !6129
  %call124 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base116, i32 %24) #8, !dbg !6129
  %call125 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base110, i32 %call124) #8, !dbg !6129
  %originators = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call125, i64 0, i32 6, !dbg !6129
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators, align 8, !dbg !6129
  %tobool126 = icmp eq %struct.bitmap_head_def* %25, null, !dbg !6129
  br i1 %tobool126, label %if.end166, label %if.then127, !dbg !6131

if.then127:                                       ; preds = %if.end
  %26 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6132
  %base130 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %26, i64 0, i32 0, !dbg !6132
  %27 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6132
  %base136 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %27, i64 0, i32 0, !dbg !6132
  %28 = load i32, i32* %rt_int, align 8, !dbg !6132
  %call144 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base136, i32 %28) #8, !dbg !6132
  %call145 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base130, i32 %call144) #8, !dbg !6132
  %originators146 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call145, i64 0, i32 6, !dbg !6132
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators146, align 8, !dbg !6132
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %29) #6, !dbg !6132
  %30 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6132
  %base149 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %30, i64 0, i32 0, !dbg !6132
  %31 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6132
  %base155 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %31, i64 0, i32 0, !dbg !6132
  %32 = load i32, i32* %rt_int, align 8, !dbg !6132
  %call163 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base155, i32 %32) #8, !dbg !6132
  %call164 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base149, i32 %call163) #8, !dbg !6132
  %originators165 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call164, i64 0, i32 6, !dbg !6132
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %originators165, align 8, !dbg !6132
  br label %if.end166, !dbg !6132

if.end166:                                        ; preds = %if.end, %if.then127
  %33 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6133
  %base169 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %33, i64 0, i32 0, !dbg !6133
  %34 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6133
  %base175 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %34, i64 0, i32 0, !dbg !6133
  %35 = load i32, i32* %rt_int, align 8, !dbg !6133
  %call183 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base175, i32 %35) #8, !dbg !6133
  %call184 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base169, i32 %call183) #8, !dbg !6133
  %deps_context = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call184, i64 0, i32 8, !dbg !6133
  tail call void @free_deps(%struct.deps* nonnull %deps_context) #6, !dbg !6134
  %36 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6135
  %base187 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %36, i64 0, i32 0, !dbg !6135
  %37 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6135
  %base193 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %37, i64 0, i32 0, !dbg !6135
  %38 = load i32, i32* %rt_int, align 8, !dbg !6135
  %call201 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base193, i32 %38) #8, !dbg !6135
  %call202 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base187, i32 %call201) #8, !dbg !6135
  %analyzed_deps203 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call202, i64 0, i32 4, !dbg !6135
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %analyzed_deps203, align 8, !dbg !6136
  %39 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6137
  %base206 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %39, i64 0, i32 0, !dbg !6137
  %40 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6137
  %base212 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %40, i64 0, i32 0, !dbg !6137
  %41 = load i32, i32* %rt_int, align 8, !dbg !6137
  %call220 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base212, i32 %41) #8, !dbg !6137
  %call221 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base206, i32 %call220) #8, !dbg !6137
  %readonly = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call221, i64 0, i32 8, i32 18, !dbg !6138
  %bf.load = load i8, i8* %readonly, align 4, !dbg !6139
  %bf.clear = and i8 %bf.load, -2, !dbg !6139
  store i8 %bf.clear, i8* %readonly, align 4, !dbg !6139
  br label %return, !dbg !6140

return:                                           ; preds = %cond.end, %if.end166
  ret void, !dbg !6140
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @first_time_insn_init(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !6141 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6145, metadata !DIExpression()), !dbg !6146
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6147
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !6147
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6147
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !6147
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6147
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6147
  %2 = load i32, i32* %rt_int, align 8, !dbg !6147
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #8, !dbg !6147
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #8, !dbg !6147
  %live = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 3, !dbg !6147
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !6147
  %cmp = icmp eq %struct.bitmap_head_def* %3, null, !dbg !6148
  %conv8 = zext i1 %cmp to i8, !dbg !6147
  ret i8 %conv8, !dbg !6149
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

declare dso_local void @free_deps(%struct.deps*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sel_init_global_and_expr(%struct.VEC_basic_block_heap* %bbs) local_unnamed_addr #5 !dbg !6150 {
entry:
  %ssi = alloca %struct.sched_scan_info_def, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %bbs, metadata !6155, metadata !DIExpression()), !dbg !6164
  %0 = bitcast %struct.sched_scan_info_def* %ssi to i8*, !dbg !6165
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #7, !dbg !6165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 bitcast (%struct.sched_scan_info_def* @__const.sel_init_global_and_expr.ssi to i8*), i64 32, i1 false), !dbg !6166
  call void @llvm.dbg.value(metadata %struct.sched_scan_info_def* %ssi, metadata !6156, metadata !DIExpression(DW_OP_deref)), !dbg !6164
  call void @sched_scan(%struct.sched_scan_info_def* nonnull %ssi, %struct.VEC_basic_block_heap* %bbs, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null) #6, !dbg !6167
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #7, !dbg !6168
  ret void, !dbg !6168
}

; Function Attrs: nounwind uwtable
define internal void @init_global_and_expr_for_bb(%struct.basic_block_def* %bb) #5 !dbg !6169 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6171, metadata !DIExpression()), !dbg !6172
  %call = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %bb) #8, !dbg !6173
  %tobool = icmp eq i8 %call, 0, !dbg !6173
  br i1 %tobool, label %if.end, label %return, !dbg !6175

if.end:                                           ; preds = %entry
  tail call fastcc void @invalidate_av_set(%struct.basic_block_def* %bb) #8, !dbg !6176
  br label %return, !dbg !6177

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !6177
}

; Function Attrs: nounwind uwtable
define internal void @extend_insn_data() #5 !dbg !6178 {
entry:
  tail call void @sched_extend_target() #6, !dbg !6184
  tail call void @sched_deps_init(i8 zeroext 0) #6, !dbg !6185
  %0 = load i32, i32* @sched_max_luid, align 4, !dbg !6186
  %add = add nsw i32 %0, 1, !dbg !6187
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6188
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i64 0, i32 0, !dbg !6188
  %call = tail call fastcc i32 @VEC_sel_insn_data_def_base_length(%struct.VEC_sel_insn_data_def_base* %base) #8, !dbg !6188
  %sub = sub i32 %add, %call, !dbg !6189
  call void @llvm.dbg.value(metadata i32 %sub, metadata !6180, metadata !DIExpression()), !dbg !6190
  %cmp = icmp sgt i32 %sub, 0, !dbg !6191
  br i1 %cmp, label %land.lhs.true, label %if.end13, !dbg !6192

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6193
  %base3 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %2, i64 0, i32 0, !dbg !6193
  %call7 = tail call fastcc i32 @VEC_sel_insn_data_def_base_space(%struct.VEC_sel_insn_data_def_base* %base3, i32 %sub) #8, !dbg !6193
  %tobool8 = icmp eq i32 %call7, 0, !dbg !6193
  br i1 %tobool8, label %if.then, label %if.end13, !dbg !6194

if.then:                                          ; preds = %land.lhs.true
  %3 = load i32, i32* @sched_max_luid, align 4, !dbg !6195
  %cmp9 = icmp sgt i32 %3, 2049, !dbg !6197
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !6198

if.then10:                                        ; preds = %if.then
  %add11 = add nsw i32 %3, 1024, !dbg !6199
  call void @llvm.dbg.value(metadata i32 %add11, metadata !6181, metadata !DIExpression()), !dbg !6200
  br label %if.end, !dbg !6201

if.else:                                          ; preds = %if.then
  %mul = mul nsw i32 %3, 3, !dbg !6202
  %div12 = sdiv i32 %mul, 2, !dbg !6203
  call void @llvm.dbg.value(metadata i32 %div12, metadata !6181, metadata !DIExpression()), !dbg !6200
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  %size.0 = phi i32 [ %add11, %if.then10 ], [ %div12, %if.else ], !dbg !6204
  call void @llvm.dbg.value(metadata i32 %size.0, metadata !6181, metadata !DIExpression()), !dbg !6200
  tail call fastcc void @VEC_sel_insn_data_def_heap_safe_grow_cleared(%struct.VEC_sel_insn_data_def_heap** nonnull @s_i_d, i32 %size.0) #8, !dbg !6205
  br label %if.end13, !dbg !6206

if.end13:                                         ; preds = %land.lhs.true, %if.end, %entry
  ret void, !dbg !6207
}

; Function Attrs: nounwind uwtable
define internal void @init_global_and_expr_for_insn(%struct.rtx_def* %insn) #5 !dbg !6208 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6210, metadata !DIExpression()), !dbg !6217
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6218
  %bf.load = load i32, i32* %0, align 8, !dbg !6218
  %bf.clear = and i32 %bf.load, 65535, !dbg !6218
  %cmp = icmp eq i32 %bf.clear, 12, !dbg !6218
  br i1 %cmp, label %return, label %if.end, !dbg !6220

if.end:                                           ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 13, !dbg !6221
  br i1 %cmp3, label %land.lhs.true, label %if.end6, !dbg !6221

land.lhs.true:                                    ; preds = %if.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6221
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6221
  %rt_int = bitcast %union.rtunion_def* %1 to i32*, !dbg !6221
  %2 = load i32, i32* %rt_int, align 8, !dbg !6221
  %cmp4 = icmp eq i32 %2, 10, !dbg !6221
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !6223

if.then5:                                         ; preds = %land.lhs.true
  store %struct.rtx_def* null, %struct.rtx_def** @init_global_data.0, align 8, !dbg !6224
  br label %return, !dbg !6226

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %cmp9 = icmp eq i32 %bf.clear, 8, !dbg !6227
  br i1 %cmp9, label %cond.end, label %lor.lhs.false, !dbg !6227

lor.lhs.false:                                    ; preds = %if.end6
  %cmp12 = icmp eq i32 %bf.clear, 7, !dbg !6227
  br i1 %cmp12, label %cond.end, label %lor.lhs.false13, !dbg !6227

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %cmp16 = icmp eq i32 %bf.clear, 9, !dbg !6227
  br i1 %cmp16, label %cond.end, label %lor.lhs.false17, !dbg !6227

lor.lhs.false17:                                  ; preds = %lor.lhs.false13
  %cmp20 = icmp eq i32 %bf.clear, 10, !dbg !6227
  br i1 %cmp20, label %cond.end, label %cond.true, !dbg !6227

cond.true:                                        ; preds = %lor.lhs.false17
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2843, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6227
  %bf.load21.pre = load i32, i32* %0, align 8, !dbg !6228
  br label %cond.end, !dbg !6227

cond.end:                                         ; preds = %if.end6, %lor.lhs.false, %lor.lhs.false13, %lor.lhs.false17, %cond.true
  %bf.load21 = phi i32 [ %bf.load, %if.end6 ], [ %bf.load, %lor.lhs.false ], [ %bf.load, %lor.lhs.false13 ], [ %bf.load, %lor.lhs.false17 ], [ %bf.load21.pre, %cond.true ], !dbg !6228
  %bf.clear22 = and i32 %bf.load21, 268435456, !dbg !6228
  %tobool = icmp eq i32 %bf.clear22, 0, !dbg !6228
  br i1 %tobool, label %if.else, label %if.then23, !dbg !6229

if.then23:                                        ; preds = %cond.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** @init_global_data.0, align 8, !dbg !6230
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !6211, metadata !DIExpression()), !dbg !6231
  %tobool24 = icmp eq %struct.rtx_def* %3, null, !dbg !6232
  br i1 %tobool24, label %if.end42, label %if.then25, !dbg !6234

if.then25:                                        ; preds = %if.then23
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6235
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i64 0, i32 0, !dbg !6235
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6235
  %base33 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !6235
  %arrayidx39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6235
  %rt_int40 = bitcast %union.rtunion_def* %arrayidx39 to i32*, !dbg !6235
  %6 = load i32, i32* %rt_int40, align 8, !dbg !6235
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base33, i32 %6) #8, !dbg !6235
  %call41 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #8, !dbg !6235
  %sched_next = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call41, i64 0, i32 9, !dbg !6235
  store %struct.rtx_def* %insn, %struct.rtx_def** %sched_next, align 8, !dbg !6236
  br label %if.end42, !dbg !6235

if.end42:                                         ; preds = %if.then23, %if.then25
  br label %if.end43, !dbg !6237

if.else:                                          ; preds = %cond.end
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.end42
  %storemerge = phi %struct.rtx_def* [ null, %if.else ], [ %insn, %if.end42 ], !dbg !6238
  store %struct.rtx_def* %storemerge, %struct.rtx_def** @init_global_data.0, align 8, !dbg !6238
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6239
  %7 = getelementptr inbounds %union.u, %union.u* %u44, i64 1, i32 0, i32 0, i64 0, !dbg !6239
  %8 = bitcast %union.rtunion_def* %7 to i32**, !dbg !6239
  %9 = load i32*, i32** %8, align 8, !dbg !6239
  %bf.load47 = load i32, i32* %9, align 8, !dbg !6239
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !6239
  %cmp49 = icmp eq i32 %bf.clear48, 16, !dbg !6241
  br i1 %cmp49, label %if.then57, label %lor.lhs.false50, !dbg !6242

lor.lhs.false50:                                  ; preds = %if.end43
  %10 = bitcast i32* %9 to %struct.rtx_def*, !dbg !6242
  %call55 = tail call i32 @asm_noperands(%struct.rtx_def* %10) #6, !dbg !6243
  %cmp56 = icmp sgt i32 %call55, -1, !dbg !6244
  br i1 %cmp56, label %if.then57, label %lor.lhs.false50.if.end78_crit_edge, !dbg !6245

lor.lhs.false50.if.end78_crit_edge:               ; preds = %lor.lhs.false50
  br label %if.end78, !dbg !6245

if.then57:                                        ; preds = %lor.lhs.false50, %if.end43
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6246
  %base60 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %11, i64 0, i32 0, !dbg !6246
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6246
  %base66 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %12, i64 0, i32 0, !dbg !6246
  %arrayidx72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6246
  %rt_int73 = bitcast %union.rtunion_def* %arrayidx72 to i32*, !dbg !6246
  %13 = load i32, i32* %rt_int73, align 8, !dbg !6246
  %call74 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base66, i32 %13) #8, !dbg !6246
  %call75 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base60, i32 %call74) #8, !dbg !6246
  %asm_p = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call75, i64 0, i32 13, !dbg !6246
  %bf.load76 = load i8, i8* %asm_p, align 4, !dbg !6247
  %bf.set = or i8 %bf.load76, 2, !dbg !6247
  store i8 %bf.set, i8* %asm_p, align 4, !dbg !6247
  br label %if.end78, !dbg !6246

if.end78:                                         ; preds = %lor.lhs.false50.if.end78_crit_edge, %if.then57
  %14 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6248
  %base81 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %14, i64 0, i32 0, !dbg !6248
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6248
  %base87 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %15, i64 0, i32 0, !dbg !6248
  %arrayidx93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6248
  %rt_int94 = bitcast %union.rtunion_def* %arrayidx93 to i32*, !dbg !6248
  %16 = load i32, i32* %rt_int94, align 8, !dbg !6248
  %call95 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base87, i32 %16) #8, !dbg !6248
  %call96 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base81, i32 %call95) #8, !dbg !6248
  %cant_move = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call96, i64 0, i32 7, !dbg !6248
  %bf.load97 = load i8, i8* %cant_move, align 8, !dbg !6248
  %bf.clear98 = and i8 %bf.load97, 1, !dbg !6248
  %tobool99 = icmp eq i8 %bf.clear98, 0, !dbg !6248
  br i1 %tobool99, label %lor.lhs.false100, label %if.end144, !dbg !6250

lor.lhs.false100:                                 ; preds = %if.end78
  %17 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6251
  %base103 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %17, i64 0, i32 0, !dbg !6251
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6251
  %base109 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i64 0, i32 0, !dbg !6251
  %19 = load i32, i32* %rt_int94, align 8, !dbg !6251
  %call117 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base109, i32 %19) #8, !dbg !6251
  %call118 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base103, i32 %call117) #8, !dbg !6251
  %asm_p119 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call118, i64 0, i32 13, !dbg !6251
  %bf.load120 = load i8, i8* %asm_p119, align 4, !dbg !6251
  %bf.clear122 = and i8 %bf.load120, 2, !dbg !6251
  %tobool124 = icmp eq i8 %bf.clear122, 0, !dbg !6251
  br i1 %tobool124, label %lor.lhs.false125, label %if.end144, !dbg !6252

lor.lhs.false125:                                 ; preds = %lor.lhs.false100
  %bf.load126 = load i32, i32* %0, align 8, !dbg !6253
  %bf.clear128 = and i32 %bf.load126, 268435456, !dbg !6253
  %tobool129 = icmp eq i32 %bf.clear128, 0, !dbg !6253
  br i1 %tobool129, label %lor.lhs.false130, label %if.end144, !dbg !6254

lor.lhs.false130:                                 ; preds = %lor.lhs.false125
  %call131 = tail call i32 @prologue_epilogue_contains(%struct.rtx_def* %insn) #6, !dbg !6255
  %tobool132 = icmp eq i32 %call131, 0, !dbg !6255
  br i1 %tobool132, label %lor.lhs.false133, label %if.end144, !dbg !6256

lor.lhs.false133:                                 ; preds = %lor.lhs.false130
  %20 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !6257
  %tobool134 = icmp eq i32 %20, 0, !dbg !6257
  br i1 %tobool134, label %lor.lhs.false138, label %land.lhs.true135, !dbg !6258

land.lhs.true135:                                 ; preds = %lor.lhs.false133
  %call136 = tail call zeroext i8 @can_throw_internal(%struct.rtx_def* %insn) #6, !dbg !6259
  %tobool137 = icmp eq i8 %call136, 0, !dbg !6259
  br i1 %tobool137, label %lor.lhs.false138, label %if.end144, !dbg !6260

lor.lhs.false138:                                 ; preds = %land.lhs.true135, %lor.lhs.false133
  %call139 = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %insn) #6, !dbg !6261
  %tobool141 = icmp ne i8 %call139, 0, !dbg !6261
  %spec.select = zext i1 %tobool141 to i8, !dbg !6262
  br label %if.end144, !dbg !6262

if.end144:                                        ; preds = %land.lhs.true135, %lor.lhs.false130, %lor.lhs.false125, %lor.lhs.false100, %if.end78, %lor.lhs.false138
  %force_unique_p.0 = phi i8 [ 1, %land.lhs.true135 ], [ 1, %lor.lhs.false130 ], [ 1, %lor.lhs.false125 ], [ 1, %lor.lhs.false100 ], [ 1, %if.end78 ], [ %spec.select, %lor.lhs.false138 ], !dbg !6263
  call void @llvm.dbg.value(metadata i8 %force_unique_p.0, metadata !6214, metadata !DIExpression()), !dbg !6264
  %21 = load i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 33), align 8, !dbg !6265
  %tobool145 = icmp eq i32 (%struct.rtx_def*)* %21, null, !dbg !6267
  br i1 %tobool145, label %if.end150, label %if.then146, !dbg !6268

if.then146:                                       ; preds = %if.end144
  %call147 = tail call i32 %21(%struct.rtx_def* %insn) #6, !dbg !6269
  call void @llvm.dbg.value(metadata i32 %call147, metadata !6216, metadata !DIExpression()), !dbg !6264
  %call148 = tail call i32 @ds_get_max_dep_weak(i32 %call147) #6, !dbg !6271
  call void @llvm.dbg.value(metadata i32 %call148, metadata !6216, metadata !DIExpression()), !dbg !6264
  br label %if.end150, !dbg !6272

if.end150:                                        ; preds = %if.end144, %if.then146
  %spec_done_ds.0 = phi i32 [ %call148, %if.then146 ], [ 0, %if.end144 ], !dbg !6273
  call void @llvm.dbg.value(metadata i32 %spec_done_ds.0, metadata !6216, metadata !DIExpression()), !dbg !6264
  %22 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6274
  %base153 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %22, i64 0, i32 0, !dbg !6274
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6274
  %base159 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i64 0, i32 0, !dbg !6274
  %24 = load i32, i32* %rt_int94, align 8, !dbg !6274
  %call167 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base159, i32 %24) #8, !dbg !6274
  %call168 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base153, i32 %call167) #8, !dbg !6274
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call168, i64 0, i32 0, !dbg !6274
  %call169 = tail call fastcc %struct.vinsn_def* @vinsn_create(%struct.rtx_def* %insn, i8 zeroext %force_unique_p.0) #8, !dbg !6275
  %25 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6276
  %base172 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %25, i64 0, i32 0, !dbg !6276
  %26 = load i32, i32* %rt_int94, align 8, !dbg !6276
  %call180 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base172, i32 %26) #8, !dbg !6276
  %priority = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call180, i64 0, i32 1, !dbg !6276
  %27 = load i32, i32* %priority, align 4, !dbg !6276
  %arrayidx183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6277
  %rt_bb = bitcast %struct.object_block** %arrayidx183 to %struct.basic_block_def**, !dbg !6277
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6277
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %28, i64 0, i32 9, !dbg !6277
  %29 = load i32, i32* %index, align 8, !dbg !6277
  %30 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6278
  %base186 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %30, i64 0, i32 0, !dbg !6278
  %31 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6278
  %base192 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %31, i64 0, i32 0, !dbg !6278
  %32 = load i32, i32* %rt_int94, align 8, !dbg !6278
  %call200 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base192, i32 %32) #8, !dbg !6278
  %call201 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base186, i32 %call200) #8, !dbg !6278
  %cant_move202 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call201, i64 0, i32 7, !dbg !6278
  %bf.load203 = load i8, i8* %cant_move202, align 8, !dbg !6278
  %bf.clear204 = and i8 %bf.load203, 1, !dbg !6278
  tail call fastcc void @init_expr(%struct._expr* %expr, %struct.vinsn_def* %call169, i32 0, i32 10000, i32 %27, i32 0, i32 %29, i32 %spec_done_ds.0, i32 0, i32 0, %struct.VEC_expr_history_def_heap* null, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, i8 zeroext %bf.clear204) #8, !dbg !6279
  tail call fastcc void @init_first_time_insn_data(%struct.rtx_def* %insn) #8, !dbg !6280
  br label %return, !dbg !6281

return:                                           ; preds = %entry, %if.end150, %if.then5
  ret void, !dbg !6281
}

declare dso_local void @sched_scan(%struct.sched_scan_info_def*, %struct.VEC_basic_block_heap*, %struct.basic_block_def*, %struct.VEC_rtx_heap*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sel_finish_global_and_expr() local_unnamed_addr #5 !dbg !6282 {
entry:
  %bbs = alloca %struct.VEC_basic_block_heap*, align 8
  %ssi = alloca %struct.sched_scan_info_def, align 8
  %0 = bitcast %struct.VEC_basic_block_heap** %bbs to i8*, !dbg !6289
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6289
  %1 = load i32, i32* @current_nr_blocks, align 4, !dbg !6290
  %call = tail call fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %1) #8, !dbg !6290
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !6284, metadata !DIExpression()), !dbg !6291
  store %struct.VEC_basic_block_heap* %call, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !6292
  call void @llvm.dbg.value(metadata i32 0, metadata !6286, metadata !DIExpression()), !dbg !6291
  br label %for.cond, !dbg !6293

for.cond:                                         ; preds = %cond.end8, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end8 ], [ 0, %entry ], !dbg !6295
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6286, metadata !DIExpression()), !dbg !6291
  %2 = load i32, i32* @current_nr_blocks, align 4, !dbg !6296
  %3 = sext i32 %2 to i64, !dbg !6298
  %cmp = icmp slt i64 %indvars.iv, %3, !dbg !6298
  br i1 %cmp, label %for.body, label %for.end, !dbg !6299

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !6284, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !6284, metadata !DIExpression()), !dbg !6291
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %call, i64 0, i32 0, !dbg !6300
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6300
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !6300
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6300
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 2, !dbg !6300
  %6 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !6300
  %tobool1 = icmp eq %struct.VEC_basic_block_gc* %6, null, !dbg !6300
  br i1 %tobool1, label %cond.end8, label %cond.true2, !dbg !6300

cond.true2:                                       ; preds = %for.body
  %base6 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %6, i64 0, i32 0, !dbg !6300
  br label %cond.end8, !dbg !6300

cond.end8:                                        ; preds = %for.body, %cond.true2
  %cond9 = phi %struct.VEC_basic_block_base* [ %base6, %cond.true2 ], [ null, %for.body ], !dbg !6300
  %7 = load i32*, i32** @rgn_bb_table, align 8, !dbg !6300
  %8 = load i32*, i32** @ebb_head, align 8, !dbg !6300
  %arrayidx = getelementptr inbounds i32, i32* %8, i64 %indvars.iv, !dbg !6300
  %9 = load i32, i32* %arrayidx, align 4, !dbg !6300
  %idxprom10 = sext i32 %9 to i64, !dbg !6300
  %arrayidx11 = getelementptr inbounds i32, i32* %7, i64 %idxprom10, !dbg !6300
  %10 = load i32, i32* %arrayidx11, align 4, !dbg !6300
  %call12 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond9, i32 %10) #8, !dbg !6300
  %call13 = tail call fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %base, %struct.basic_block_def* %call12) #8, !dbg !6300
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6301
  call void @llvm.dbg.value(metadata i32 undef, metadata !6286, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6291
  br label %for.cond, !dbg !6302, !llvm.loop !6303

for.end:                                          ; preds = %for.cond
  %11 = bitcast %struct.sched_scan_info_def* %ssi to i8*, !dbg !6305
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #7, !dbg !6305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast (%struct.sched_scan_info_def* @__const.sel_finish_global_and_expr.ssi to i8*), i64 32, i1 false), !dbg !6306
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !6284, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.value(metadata %struct.sched_scan_info_def* %ssi, metadata !6287, metadata !DIExpression(DW_OP_deref)), !dbg !6307
  call void @sched_scan(%struct.sched_scan_info_def* nonnull %ssi, %struct.VEC_basic_block_heap* %call, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null) #6, !dbg !6308
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #7, !dbg !6309
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %bbs, metadata !6284, metadata !DIExpression(DW_OP_deref)), !dbg !6291
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %bbs) #8, !dbg !6310
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6311
  call fastcc void @finish_insns() #8, !dbg !6312
  ret void, !dbg !6313
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !6314 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6318, metadata !DIExpression()), !dbg !6319
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !6320
  %0 = bitcast i8* %call to %struct.VEC_basic_block_heap*, !dbg !6320
  ret %struct.VEC_basic_block_heap* %0, !dbg !6320
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %vec_, %struct.basic_block_def* %obj_) unnamed_addr #0 !dbg !6321 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6327, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %obj_, metadata !6328, metadata !DIExpression()), !dbg !6330
  %num1 = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !6331
  %0 = load i32, i32* %num1, align 8, !dbg !6331
  %inc = add i32 %0, 1, !dbg !6331
  store i32 %inc, i32* %num1, align 8, !dbg !6331
  %idxprom = zext i32 %0 to i64, !dbg !6331
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6331
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %arrayidx, metadata !6329, metadata !DIExpression()), !dbg !6330
  store %struct.basic_block_def* %obj_, %struct.basic_block_def** %arrayidx, align 8, !dbg !6331
  ret %struct.basic_block_def** %arrayidx, !dbg !6331
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6332 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6338, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6339, metadata !DIExpression()), !dbg !6340
  br label %land.end, !dbg !6341

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6341
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6341
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !6341
  ret %struct.basic_block_def* %0, !dbg !6341
}

; Function Attrs: nounwind uwtable
define internal void @finish_global_and_expr_for_bb(%struct.basic_block_def* %bb) #5 !dbg !6342 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6344, metadata !DIExpression()), !dbg !6345
  %0 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6346
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %0, i64 0, i32 0, !dbg !6346
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6346
  %1 = load i32, i32* %index, align 8, !dbg !6346
  %call = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %1) #8, !dbg !6346
  %av_set = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call, i64 0, i32 1, !dbg !6346
  tail call void @av_set_clear(%struct._list_node** nonnull %av_set) #8, !dbg !6347
  %2 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6348
  %base3 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %2, i64 0, i32 0, !dbg !6348
  %3 = load i32, i32* %index, align 8, !dbg !6348
  %call8 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base3, i32 %3) #8, !dbg !6348
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call8, i64 0, i32 2, !dbg !6348
  store i32 0, i32* %av_level, align 8, !dbg !6349
  ret void, !dbg !6350
}

; Function Attrs: nounwind uwtable
define internal void @finish_global_and_expr_insn(%struct.rtx_def* %insn) #5 !dbg !6351 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6353, metadata !DIExpression()), !dbg !6354
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6355
  %bf.load = load i32, i32* %0, align 8, !dbg !6355
  %bf.clear = and i32 %bf.load, 65535, !dbg !6355
  %cmp = icmp eq i32 %bf.clear, 12, !dbg !6355
  br i1 %cmp, label %if.end86, label %lor.lhs.false, !dbg !6357

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 13, !dbg !6358
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !6358

land.lhs.true:                                    ; preds = %lor.lhs.false
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6358
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6358
  %rt_int = bitcast %union.rtunion_def* %1 to i32*, !dbg !6358
  %2 = load i32, i32* %rt_int, align 8, !dbg !6358
  %cmp4 = icmp eq i32 %2, 10, !dbg !6358
  br i1 %cmp4, label %if.end86, label %if.end, !dbg !6359

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 8, !dbg !6360
  br i1 %cmp7, label %cond.end, label %lor.lhs.false8, !dbg !6360

lor.lhs.false8:                                   ; preds = %if.end
  %cmp11 = icmp eq i32 %bf.clear, 7, !dbg !6360
  br i1 %cmp11, label %cond.end, label %lor.lhs.false12, !dbg !6360

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %cmp15 = icmp eq i32 %bf.clear, 9, !dbg !6360
  br i1 %cmp15, label %cond.end, label %lor.lhs.false16, !dbg !6360

lor.lhs.false16:                                  ; preds = %lor.lhs.false12
  %cmp19 = icmp eq i32 %bf.clear, 10, !dbg !6360
  br i1 %cmp19, label %cond.end, label %cond.true, !dbg !6360

cond.true:                                        ; preds = %lor.lhs.false16
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2929, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6360
  br label %cond.end, !dbg !6360

cond.end:                                         ; preds = %if.end, %lor.lhs.false8, %lor.lhs.false12, %lor.lhs.false16, %cond.true
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6361
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i64 0, i32 0, !dbg !6361
  %arrayidx26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6361
  %rt_int27 = bitcast %union.rtunion_def* %arrayidx26 to i32*, !dbg !6361
  %4 = load i32, i32* %rt_int27, align 8, !dbg !6361
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %4) #8, !dbg !6361
  %cmp28 = icmp sgt i32 %call, 0, !dbg !6363
  br i1 %cmp28, label %if.then29, label %if.end86, !dbg !6364

if.then29:                                        ; preds = %cond.end
  tail call fastcc void @free_first_time_insn_data(%struct.rtx_def* %insn) #8, !dbg !6365
  %5 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6367
  %base32 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %5, i64 0, i32 0, !dbg !6367
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6367
  %base38 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !6367
  %7 = load i32, i32* %rt_int27, align 8, !dbg !6367
  %call46 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base38, i32 %7) #8, !dbg !6367
  %call47 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base32, i32 %call46) #8, !dbg !6367
  %ws_level = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call47, i64 0, i32 1, !dbg !6367
  store i32 0, i32* %ws_level, align 8, !dbg !6368
  %8 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6369
  %base50 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %8, i64 0, i32 0, !dbg !6369
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6369
  %base56 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %9, i64 0, i32 0, !dbg !6369
  %10 = load i32, i32* %rt_int27, align 8, !dbg !6369
  %call64 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base56, i32 %10) #8, !dbg !6369
  %call65 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base50, i32 %call64) #8, !dbg !6369
  %cant_move = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call65, i64 0, i32 7, !dbg !6369
  %bf.load66 = load i8, i8* %cant_move, align 8, !dbg !6370
  %bf.clear67 = and i8 %bf.load66, -2, !dbg !6370
  store i8 %bf.clear67, i8* %cant_move, align 8, !dbg !6370
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6371
  %base70 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %11, i64 0, i32 0, !dbg !6371
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6371
  %base76 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %12, i64 0, i32 0, !dbg !6371
  %13 = load i32, i32* %rt_int27, align 8, !dbg !6371
  %call84 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base76, i32 %13) #8, !dbg !6371
  %call85 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base70, i32 %call84) #8, !dbg !6371
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call85, i64 0, i32 0, !dbg !6371
  tail call void @clear_expr(%struct._expr* %expr) #8, !dbg !6372
  br label %if.end86, !dbg !6373

if.end86:                                         ; preds = %entry, %land.lhs.true, %if.then29, %cond.end
  ret void, !dbg !6374
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** %vec_) unnamed_addr #0 !dbg !6375 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !6380, metadata !DIExpression()), !dbg !6381
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !6382
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !6382
  br i1 %tobool, label %if.end, label %if.then, !dbg !6384

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_basic_block_heap* %0 to i8*, !dbg !6384
  tail call void @free(i8* nonnull %1) #6, !dbg !6382
  br label %if.end, !dbg !6382

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !6384
  ret void, !dbg !6384
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finish_insns() unnamed_addr #5 !dbg !6385 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !6387, metadata !DIExpression()), !dbg !6392
  br label %for.cond, !dbg !6393

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6394
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6387, metadata !DIExpression()), !dbg !6392
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6395
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !6395
  %call = tail call fastcc i32 @VEC_sel_insn_data_def_base_length(%struct.VEC_sel_insn_data_def_base* %base) #8, !dbg !6395
  %cmp = icmp ult i32 %i.0, %call, !dbg !6396
  br i1 %cmp, label %for.body, label %for.end, !dbg !6397

for.body:                                         ; preds = %for.cond
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6398
  %base3 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i64 0, i32 0, !dbg !6398
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base3, i32 %i.0) #8, !dbg !6398
  call void @llvm.dbg.value(metadata %struct._sel_insn_data* %call7, metadata !6388, metadata !DIExpression()), !dbg !6399
  %live = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 3, !dbg !6400
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !6400
  %tobool8 = icmp eq %struct.bitmap_head_def* %2, null, !dbg !6402
  br i1 %tobool8, label %if.end, label %if.then, !dbg !6403

if.then:                                          ; preds = %for.body
  tail call void @return_regset_to_pool(%struct.bitmap_head_def* nonnull %2) #8, !dbg !6404
  br label %if.end, !dbg !6404

if.end:                                           ; preds = %for.body, %if.then
  %analyzed_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 4, !dbg !6405
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %analyzed_deps, align 8, !dbg !6405
  %tobool10 = icmp eq %struct.bitmap_head_def* %3, null, !dbg !6407
  br i1 %tobool10, label %if.end15, label %if.then11, !dbg !6408

if.then11:                                        ; preds = %if.end
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %3) #6, !dbg !6409
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %analyzed_deps, align 8, !dbg !6409
  %found_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 5, !dbg !6411
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %found_deps, align 8, !dbg !6411
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %4) #6, !dbg !6411
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %found_deps, align 8, !dbg !6411
  %transformed_insns = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 7, !dbg !6412
  %5 = load %struct.htab*, %struct.htab** %transformed_insns, align 8, !dbg !6412
  tail call void @htab_delete(%struct.htab* %5) #6, !dbg !6413
  %deps_context = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 8, !dbg !6414
  tail call void @free_deps(%struct.deps* nonnull %deps_context) #6, !dbg !6415
  br label %if.end15, !dbg !6416

if.end15:                                         ; preds = %if.end, %if.then11
  %vinsn = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 0, !dbg !6417
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !6417
  %tobool16 = icmp eq %struct.vinsn_def* %6, null, !dbg !6417
  br i1 %tobool16, label %for.inc, label %if.then17, !dbg !6419

if.then17:                                        ; preds = %if.end15
  %expr18 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, !dbg !6420
  tail call void @clear_expr(%struct._expr* %expr18) #8, !dbg !6422
  %7 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6423
  %base21 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %7, i64 0, i32 0, !dbg !6423
  %call25 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base21, i32 %i.0) #8, !dbg !6423
  %cant_move = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call25, i64 0, i32 7, !dbg !6423
  %bf.load = load i8, i8* %cant_move, align 8, !dbg !6424
  %bf.clear = and i8 %bf.load, -2, !dbg !6424
  store i8 %bf.clear, i8* %cant_move, align 8, !dbg !6424
  br label %for.inc, !dbg !6425

for.inc:                                          ; preds = %if.end15, %if.then17
  %inc = add i32 %i.0, 1, !dbg !6426
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6387, metadata !DIExpression()), !dbg !6392
  br label %for.cond, !dbg !6427, !llvm.loop !6428

for.end:                                          ; preds = %for.cond
  tail call fastcc void @VEC_sel_insn_data_def_heap_free(%struct.VEC_sel_insn_data_def_heap** nonnull @s_i_d) #8, !dbg !6430
  ret void, !dbg !6431
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_mark_hard_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !6432 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6434, metadata !DIExpression()), !dbg !6436
  %0 = load %struct.deps*, %struct.deps** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 0), align 8, !dbg !6437
  %tobool = icmp ne %struct.deps* %0, null, !dbg !6439
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 2), align 8, !dbg !6440
  %tobool1 = icmp ne %struct.rtx_def* %1, null, !dbg !6441
  %or.cond = and i1 %tobool, %tobool1, !dbg !6442
  br i1 %or.cond, label %if.end, label %cleanup.cont, !dbg !6442

if.end:                                           ; preds = %entry
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 3), align 8, !dbg !6443
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %2, i64 0, i32 0, !dbg !6443
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !6443
  %cmp = icmp eq %struct.rtx_def* %3, %insn, !dbg !6443
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6443

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3173, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6443
  br label %cond.end, !dbg !6443

cond.end:                                         ; preds = %if.end, %cond.true
  %4 = load i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !6444
  %cmp2 = icmp eq i32 %4, 0, !dbg !6444
  br i1 %cmp2, label %cond.end5, label %cond.true3, !dbg !6444

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3174, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6444
  br label %cond.end5, !dbg !6444

cond.end5:                                        ; preds = %cond.end, %cond.true3
  call void @llvm.dbg.value(metadata i32 0, metadata !6435, metadata !DIExpression()), !dbg !6436
  br label %for.cond, !dbg !6445

for.cond:                                         ; preds = %for.body, %cond.end5
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end5 ], !dbg !6447
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6435, metadata !DIExpression()), !dbg !6436
  %exitcond = icmp eq i64 %indvars.iv, 3, !dbg !6448
  br i1 %exitcond, label %cleanup.cont.loopexit, label %for.body, !dbg !6450

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 4, i64 %indvars.iv, !dbg !6451
  %5 = load i32, i32* %arrayidx, align 4, !dbg !6452
  %and = and i32 %5, -16777216, !dbg !6452
  store i32 %and, i32* %arrayidx, align 4, !dbg !6452
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6453
  call void @llvm.dbg.value(metadata i32 undef, metadata !6435, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6436
  br label %for.cond, !dbg !6454, !llvm.loop !6455

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !6457

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !6457
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_clear_has_dependence() local_unnamed_addr #5 !dbg !6458 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !6460, metadata !DIExpression()), !dbg !6461
  br label %for.cond, !dbg !6462

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !6464
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6460, metadata !DIExpression()), !dbg !6461
  %exitcond = icmp eq i64 %indvars.iv, 3, !dbg !6465
  br i1 %exitcond, label %for.end, label %for.body, !dbg !6467

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 4, i64 %indvars.iv, !dbg !6468
  store i32 0, i32* %arrayidx, align 4, !dbg !6469
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6470
  call void @llvm.dbg.value(metadata i32 undef, metadata !6460, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6461
  br label %for.cond, !dbg !6471, !llvm.loop !6472

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6474
}

; Function Attrs: nounwind uwtable
define dso_local i32 @has_dependence_p(%struct._expr* %expr, %struct.rtx_def* %pred, i32** %has_dep_pp) local_unnamed_addr #5 !dbg !6475 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !6481, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pred, metadata !6482, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32** %has_dep_pp, metadata !6483, metadata !DIExpression()), !dbg !6487
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6488
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !6488
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6488
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !6488
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pred, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6488
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6488
  %2 = load i32, i32* %rt_int, align 8, !dbg !6488
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #8, !dbg !6488
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #8, !dbg !6488
  %vinsn = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 0, !dbg !6488
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !6488
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i64 0, i32 1, i32 0, !dbg !6488
  %4 = load i32, i32* %type, align 8, !dbg !6488
  %cmp = icmp eq i32 %4, 36, !dbg !6488
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6490

if.end:                                           ; preds = %entry
  %5 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6491
  %base11 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %5, i64 0, i32 0, !dbg !6491
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6491
  %base17 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !6491
  %7 = load i32, i32* %rt_int, align 8, !dbg !6491
  %call25 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base17, i32 %7) #8, !dbg !6491
  %call26 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base11, i32 %call25) #8, !dbg !6491
  %deps_context = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call26, i64 0, i32 8, !dbg !6491
  call void @llvm.dbg.value(metadata %struct.deps* %deps_context, metadata !6486, metadata !DIExpression()), !dbg !6487
  %reg_last = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call26, i64 0, i32 8, i32 14, !dbg !6492
  %8 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6492
  %cmp27 = icmp eq %struct.deps_reg* %8, null, !dbg !6494
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !6495

if.then28:                                        ; preds = %if.end
  tail call void @init_deps_reg_last(%struct.deps* nonnull %deps_context) #6, !dbg !6496
  br label %if.end29, !dbg !6496

if.end29:                                         ; preds = %if.then28, %if.end
  %readonly = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call26, i64 0, i32 8, i32 18, !dbg !6497
  %bf.load = load i8, i8* %readonly, align 4, !dbg !6497
  %bf.clear = and i8 %bf.load, 1, !dbg !6497
  %tobool30 = icmp eq i8 %bf.clear, 0, !dbg !6499
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !6500

if.then31:                                        ; preds = %if.end29
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 2), align 8, !dbg !6501
  tail call void @advance_deps_context(%struct.deps* nonnull %deps_context, %struct.rtx_def* %pred) #8, !dbg !6503
  %bf.load33 = load i8, i8* %readonly, align 4, !dbg !6504
  %bf.set = or i8 %bf.load33, 1, !dbg !6504
  store i8 %bf.set, i8* %readonly, align 4, !dbg !6504
  br label %if.end35, !dbg !6505

if.end35:                                         ; preds = %if.end29, %if.then31
  store i32 3, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !6506
  store %struct.rtx_def* %pred, %struct.rtx_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 2), align 8, !dbg !6507
  %9 = bitcast %struct._expr* %expr to i64*, !dbg !6508
  %10 = load i64, i64* %9, align 8, !dbg !6508
  store i64 %10, i64* bitcast (%struct.vinsn_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 3) to i64*), align 8, !dbg !6509
  store %struct.deps* %deps_context, %struct.deps** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 0), align 8, !dbg !6510
  tail call void @sel_clear_has_dependence() #8, !dbg !6511
  tail call fastcc void @setup_has_dependence_sched_deps_info() #8, !dbg !6512
  %vinsn37 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !6513
  %11 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn37, align 8, !dbg !6513
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %11, i64 0, i32 0, !dbg !6513
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !6513
  tail call void @deps_analyze_insn(%struct.deps* nonnull %deps_context, %struct.rtx_def* %12) #6, !dbg !6514
  store %struct.deps* null, %struct.deps** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 0), align 8, !dbg !6515
  %last_reg_pending_barrier = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call26, i64 0, i32 8, i32 17, !dbg !6516
  %13 = load i32, i32* %last_reg_pending_barrier, align 8, !dbg !6516
  %cmp38 = icmp eq i32 %13, 2, !dbg !6518
  br i1 %cmp38, label %if.then39, label %if.else, !dbg !6519

if.then39:                                        ; preds = %if.end35
  store i32 16777216, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 4, i64 0), align 8, !dbg !6520
  br label %if.end44, !dbg !6521

if.else:                                          ; preds = %if.end35
  %cmp41 = icmp eq i32 %13, 1, !dbg !6522
  br i1 %cmp41, label %if.then42, label %if.end44, !dbg !6524

if.then42:                                        ; preds = %if.else
  store i32 67108864, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 4, i64 0), align 8, !dbg !6525
  br label %if.end44, !dbg !6526

if.end44:                                         ; preds = %if.else, %if.then42, %if.then39
  %14 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn37, align 8, !dbg !6527
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %14, i64 0, i32 1, i32 1, !dbg !6527
  %15 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !6527
  %tobool47 = icmp eq %struct.rtx_def* %15, null, !dbg !6527
  br i1 %tobool47, label %if.end58, label %land.lhs.true, !dbg !6529

land.lhs.true:                                    ; preds = %if.end44
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 0, !dbg !6529
  %bf.load51 = load i32, i32* %16, align 8, !dbg !6530
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !6530
  %cmp53 = icmp eq i32 %bf.clear52, 43, !dbg !6530
  br i1 %cmp53, label %land.lhs.true54, label %if.end58, !dbg !6531

land.lhs.true54:                                  ; preds = %land.lhs.true
  %call55 = tail call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %pred) #8, !dbg !6532
  %tobool56 = icmp eq i8 %call55, 0, !dbg !6532
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !6533

if.then57:                                        ; preds = %land.lhs.true54
  store i32 67108864, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 4, i64 0), align 8, !dbg !6534
  br label %if.end58, !dbg !6535

if.end58:                                         ; preds = %land.lhs.true54, %if.end44, %if.then57, %land.lhs.true
  store i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 4, i64 0), i32** %has_dep_pp, align 8, !dbg !6536
  call void @llvm.dbg.value(metadata i32 0, metadata !6485, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32 0, metadata !6484, metadata !DIExpression()), !dbg !6487
  br label %for.cond, !dbg !6537

for.cond:                                         ; preds = %for.body, %if.end58
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end58 ], !dbg !6539
  %ds.0 = phi i32 [ %call62, %for.body ], [ 0, %if.end58 ], !dbg !6487
  call void @llvm.dbg.value(metadata i32 %ds.0, metadata !6485, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6484, metadata !DIExpression()), !dbg !6487
  %exitcond = icmp eq i64 %indvars.iv, 3, !dbg !6540
  br i1 %exitcond, label %cleanup.loopexit, label %for.body, !dbg !6542

for.body:                                         ; preds = %for.cond
  %arrayidx61 = getelementptr inbounds %struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 4, i64 %indvars.iv, !dbg !6543
  %17 = load i32, i32* %arrayidx61, align 4, !dbg !6543
  %call62 = tail call i32 @ds_full_merge(i32 %ds.0, i32 %17, %struct.rtx_def* null, %struct.rtx_def* null) #6, !dbg !6544
  call void @llvm.dbg.value(metadata i32 %call62, metadata !6485, metadata !DIExpression()), !dbg !6487
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6545
  call void @llvm.dbg.value(metadata i32 undef, metadata !6484, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6487
  br label %for.cond, !dbg !6546, !llvm.loop !6547

cleanup.loopexit:                                 ; preds = %for.cond
  %ds.0.lcssa = phi i32 [ %ds.0, %for.cond ], !dbg !6487
  call void @llvm.dbg.value(metadata i32 %ds.0.lcssa, metadata !6485, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32 %ds.0.lcssa, metadata !6485, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32 %ds.0.lcssa, metadata !6485, metadata !DIExpression()), !dbg !6487
  br label %cleanup, !dbg !6549

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %ds.0.lcssa, %cleanup.loopexit ], !dbg !6487
  ret i32 %retval.0, !dbg !6549
}

declare dso_local void @init_deps_reg_last(%struct.deps*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_has_dependence_sched_deps_info() unnamed_addr #5 !dbg !6550 {
entry:
  %call = tail call i8* @memcpy(i8* bitcast (%struct.sched_deps_info_def* @has_dependence_sched_deps_info to i8*), i8* bitcast (%struct.sched_deps_info_def* @const_has_dependence_sched_deps_info to i8*), i64 104) #6, !dbg !6551
  %0 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6552
  %cmp = icmp eq %struct.spec_info_def* %0, null, !dbg !6554
  br i1 %cmp, label %if.end, label %if.then, !dbg !6555

if.then:                                          ; preds = %entry
  %bf.load = load i8, i8* getelementptr inbounds (%struct.sched_deps_info_def, %struct.sched_deps_info_def* @has_dependence_sched_deps_info, i64 0, i32 12), align 8, !dbg !6556
  %bf.set = or i8 %bf.load, 4, !dbg !6556
  store i8 %bf.set, i8* getelementptr inbounds (%struct.sched_deps_info_def, %struct.sched_deps_info_def* @has_dependence_sched_deps_info, i64 0, i32 12), align 8, !dbg !6556
  br label %if.end, !dbg !6557

if.end:                                           ; preds = %entry, %if.then
  store %struct.sched_deps_info_def* @has_dependence_sched_deps_info, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6558
  ret void, !dbg !6559
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !6560 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6562, metadata !DIExpression()), !dbg !6563
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6564
  %tobool = icmp eq %struct.VEC_sel_insn_data_def_heap* %0, null, !dbg !6564
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6565

land.rhs:                                         ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !6566
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6566
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !6566
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6566
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6566
  %2 = load i32, i32* %rt_int, align 8, !dbg !6566
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base4, i32 %2) #8, !dbg !6566
  %call8 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* nonnull %base, i32 %call) #8, !dbg !6566
  %spec_checked_ds = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call8, i64 0, i32 12, !dbg !6566
  %3 = load i32, i32* %spec_checked_ds, align 8, !dbg !6566
  %tobool9 = icmp ne i32 %3, 0, !dbg !6567
  %phitmp = zext i1 %tobool9 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %4 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %4, !dbg !6568
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tick_check_p(%struct._expr* %expr, %struct.deps* %dc, %struct._fence* %fence) local_unnamed_addr #5 !dbg !6569 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !6573, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.value(metadata %struct.deps* %dc, metadata !6574, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !6575, metadata !DIExpression()), !dbg !6577
  store %struct._expr* %expr, %struct._expr** @tick_check_data.0, align 8, !dbg !6578
  store i32 0, i32* @tick_check_data.1, align 8, !dbg !6579
  store i1 false, i1* @tick_check_data.2, align 4, !dbg !6580
  store %struct.sched_deps_info_def* @tick_check_sched_deps_info, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6581
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %dc, i64 0, i32 18, !dbg !6582
  %bf.load = load i8, i8* %readonly, align 4, !dbg !6582
  %bf.clear = and i8 %bf.load, 1, !dbg !6582
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !6582
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6582

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3409, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6582
  %bf.load2.pre = load i8, i8* %readonly, align 4, !dbg !6583
  br label %cond.end, !dbg !6582

cond.end:                                         ; preds = %entry, %cond.true
  %bf.load2 = phi i8 [ %bf.load, %entry ], [ %bf.load2.pre, %cond.true ], !dbg !6583
  %bf.set = or i8 %bf.load2, 1, !dbg !6583
  store i8 %bf.set, i8* %readonly, align 4, !dbg !6583
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !6584
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !6584
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 0, !dbg !6584
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !6584
  tail call void @deps_analyze_insn(%struct.deps* %dc, %struct.rtx_def* %1) #6, !dbg !6585
  %bf.load5 = load i8, i8* %readonly, align 4, !dbg !6586
  %bf.clear6 = and i8 %bf.load5, -2, !dbg !6586
  store i8 %bf.clear6, i8* %readonly, align 4, !dbg !6586
  %2 = load i32, i32* @tick_check_data.1, align 8, !dbg !6587
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !6588
  %3 = load i32, i32* %cycle, align 8, !dbg !6588
  %sub = sub nsw i32 %2, %3, !dbg !6589
  call void @llvm.dbg.value(metadata i32 %sub, metadata !6576, metadata !DIExpression()), !dbg !6577
  %4 = icmp sgt i32 %sub, 0, !dbg !6590
  %sub. = select i1 %4, i32 %sub, i32 0, !dbg !6590
  ret i32 %sub., !dbg !6591
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @lhs_of_insn_equals_to_dest_p(%struct.rtx_def* %insn, %struct.rtx_def* %dest) local_unnamed_addr #5 !dbg !6592 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6596, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !6597, metadata !DIExpression()), !dbg !6599
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6600
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !6600
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6600
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !6600
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6600
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6600
  %2 = load i32, i32* %rt_int, align 8, !dbg !6600
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #8, !dbg !6600
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #8, !dbg !6600
  %vinsn = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 0, !dbg !6600
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !6600
  %lhs8 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i64 0, i32 1, i32 1, !dbg !6600
  %4 = load %struct.rtx_def*, %struct.rtx_def** %lhs8, align 8, !dbg !6600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6598, metadata !DIExpression()), !dbg !6599
  %cmp = icmp eq %struct.rtx_def* %4, null, !dbg !6601
  %cmp9 = icmp eq %struct.rtx_def* %dest, null, !dbg !6603
  %or.cond = or i1 %cmp, %cmp9, !dbg !6604
  br i1 %or.cond, label %cleanup, label %if.end, !dbg !6604

if.end:                                           ; preds = %entry
  %call10 = tail call i32 @rtx_equal_p(%struct.rtx_def* %4, %struct.rtx_def* %dest) #6, !dbg !6605
  %conv = trunc i32 %call10 to i8, !dbg !6605
  br label %cleanup, !dbg !6606

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i8 [ %conv, %if.end ], [ 0, %entry ], !dbg !6599
  ret i8 %retval.0, !dbg !6607
}

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @insn_sid(%struct._sel_insn_data* noalias sret %agg.result, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !6608 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6612, metadata !DIExpression()), !dbg !6613
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6614
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !6614
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6614
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !6614
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6614
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6614
  %2 = load i32, i32* %rt_int, align 8, !dbg !6614
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #8, !dbg !6614
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #8, !dbg !6614
  %3 = bitcast %struct._sel_insn_data* %agg.result to i8*, !dbg !6615
  %4 = bitcast %struct._sel_insn_data* %call7 to i8*, !dbg !6615
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 320, i1 false), !dbg !6615
  ret void, !dbg !6616
}

; Function Attrs: nounwind uwtable
define dso_local void @get_dest_and_mode(%struct.rtx_def* %insn, %struct.rtx_def** %dst_loc, i32* %mode) local_unnamed_addr #5 !dbg !6617 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6622, metadata !DIExpression()), !dbg !6626
  call void @llvm.dbg.value(metadata %struct.rtx_def** %dst_loc, metadata !6623, metadata !DIExpression()), !dbg !6626
  call void @llvm.dbg.value(metadata i32* %mode, metadata !6624, metadata !DIExpression()), !dbg !6626
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6627
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6627
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !6627
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6627
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !6625, metadata !DIExpression()), !dbg !6626
  %tobool = icmp eq %struct.rtx_def** %dst_loc, null, !dbg !6628
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6628

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3458, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6628
  br label %cond.end, !dbg !6628

cond.end:                                         ; preds = %entry, %cond.true
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !6629
  %bf.load = load i32, i32* %2, align 8, !dbg !6629
  %bf.clear = and i32 %bf.load, 65535, !dbg !6629
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !6629
  br i1 %cmp, label %cond.end3, label %cond.true1, !dbg !6629

cond.true1:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3459, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6629
  br label %cond.end3, !dbg !6629

cond.end3:                                        ; preds = %cond.end, %cond.true1
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6630
  %3 = bitcast %union.rtunion_def* %arrayidx7 to i64*, !dbg !6630
  %4 = load i64, i64* %3, align 8, !dbg !6630
  %5 = bitcast %struct.rtx_def** %dst_loc to i64*, !dbg !6631
  store i64 %4, i64* %5, align 8, !dbg !6631
  %tobool9 = icmp eq i64 %4, 0, !dbg !6632
  %6 = inttoptr i64 %4 to i32*, !dbg !6632
  br i1 %tobool9, label %cond.true10, label %cond.end3.cond.end12_crit_edge, !dbg !6632

cond.end3.cond.end12_crit_edge:                   ; preds = %cond.end3
  %.pre1 = bitcast %struct.rtx_def** %dst_loc to i32**, !dbg !6633
  br label %cond.end12, !dbg !6632

cond.true10:                                      ; preds = %cond.end3
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3463, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6632
  %.phi.trans.insert = bitcast %struct.rtx_def** %dst_loc to i32**, !dbg !6626
  %.pre = load i32*, i32** %.phi.trans.insert, align 8, !dbg !6633
  br label %cond.end12, !dbg !6632

cond.end12:                                       ; preds = %cond.end3.cond.end12_crit_edge, %cond.true10
  %.pre-phi = phi i32** [ %.pre1, %cond.end3.cond.end12_crit_edge ], [ %.phi.trans.insert, %cond.true10 ], !dbg !6633
  %7 = phi i32* [ %6, %cond.end3.cond.end12_crit_edge ], [ %.pre, %cond.true10 ]
  %8 = phi i32* [ %6, %cond.end3.cond.end12_crit_edge ], [ %.pre, %cond.true10 ], !dbg !6633
  %bf.load14 = load i32, i32* %8, align 8, !dbg !6633
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !6633
  %cmp16 = icmp eq i32 %bf.clear15, 43, !dbg !6633
  br i1 %cmp16, label %cond.end22, label %lor.lhs.false, !dbg !6633

lor.lhs.false:                                    ; preds = %cond.end12
  %bf.load17 = load i32, i32* %7, align 8, !dbg !6633
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !6633
  %cmp19 = icmp eq i32 %bf.clear18, 37, !dbg !6633
  br i1 %cmp19, label %cond.end22, label %cond.true20, !dbg !6633

cond.true20:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3464, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6633
  br label %cond.end22, !dbg !6633

cond.end22:                                       ; preds = %cond.end12, %lor.lhs.false, %cond.true20
  %tobool24 = icmp eq i32* %mode, null, !dbg !6634
  br i1 %tobool24, label %if.end, label %if.then, !dbg !6636

if.then:                                          ; preds = %cond.end22
  %9 = load i32*, i32** %.pre-phi, align 8, !dbg !6637
  %bf.load25 = load i32, i32* %9, align 8, !dbg !6637
  %bf.lshr = lshr i32 %bf.load25, 16, !dbg !6637
  %bf.clear26 = and i32 %bf.lshr, 255, !dbg !6637
  store i32 %bf.clear26, i32* %mode, align 4, !dbg !6638
  br label %if.end, !dbg !6639

if.end:                                           ; preds = %cond.end22, %if.then
  ret void, !dbg !6640
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @bookkeeping_can_be_created_if_moved_through_p(%struct.rtx_def* %jump) local_unnamed_addr #5 !dbg !6641 {
entry:
  %succ = alloca %struct.rtx_def*, align 8
  %si = alloca %struct.succ_iterator, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump, metadata !6643, metadata !DIExpression()), !dbg !6646
  %0 = bitcast %struct.rtx_def** %succ to i8*, !dbg !6647
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6647
  %1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 0, !dbg !6648
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1) #7, !dbg !6648
  %2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp, i64 0, i32 0, !dbg !6649
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #7, !dbg !6649
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !6644, metadata !DIExpression(DW_OP_deref)), !dbg !6646
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %jump, i32 1) #8, !dbg !6649
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 64, i1 false), !dbg !6649
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #7, !dbg !6649
  br label %for.cond, !dbg !6649

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !6644, metadata !DIExpression(DW_OP_deref)), !dbg !6646
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !6645, metadata !DIExpression(DW_OP_deref)), !dbg !6646
  %call = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %si, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %jump, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #8, !dbg !6651
  %tobool = icmp eq i8 %call, 0, !dbg !6649
  br i1 %tobool, label %cleanup, label %for.body, !dbg !6649

for.body:                                         ; preds = %for.cond
  %3 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !6653
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !6644, metadata !DIExpression()), !dbg !6646
  %call1 = call zeroext i8 @sel_num_cfg_preds_gt_1(%struct.rtx_def* %3) #8, !dbg !6655
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6655
  br i1 %tobool2, label %for.inc, label %cleanup, !dbg !6656

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !6645, metadata !DIExpression(DW_OP_deref)), !dbg !6646
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %si) #8, !dbg !6651
  br label %for.cond, !dbg !6651, !llvm.loop !6657

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 1, %for.body ], [ 0, %for.cond ], !dbg !6646
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1) #7, !dbg !6659
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6659
  ret i8 %retval.0, !dbg !6659
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sel_num_cfg_preds_gt_1(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !6660 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6662, metadata !DIExpression()), !dbg !6664
  %call = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) #8, !dbg !6665
  %tobool = icmp eq i8 %call, 0, !dbg !6665
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !6667

lor.lhs.false:                                    ; preds = %entry
  %0 = load i32*, i32** @block_to_bb, align 8, !dbg !6668
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6668
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6668
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6668
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !6668
  %2 = load i32, i32* %index, align 8, !dbg !6668
  %idxprom = sext i32 %2 to i64, !dbg !6668
  %arrayidx1 = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !6668
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !6668
  %cmp = icmp eq i32 %3, 0, !dbg !6669
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6670

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !6663, metadata !DIExpression()), !dbg !6664
  br label %while.cond, !dbg !6671

while.cond:                                       ; preds = %cond.end32, %if.end
  %bb.0 = phi %struct.basic_block_def* [ %1, %if.end ], [ %8, %cond.end32 ], !dbg !6664
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !6663, metadata !DIExpression()), !dbg !6664
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 0, !dbg !6672
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6672
  %tobool6 = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !6672
  br i1 %tobool6, label %cond.end, label %cond.true, !dbg !6672

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !6672
  br label %cond.end, !dbg !6672

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !6672
  %call8 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !6672
  %cmp9 = icmp ugt i32 %call8, 1, !dbg !6675
  br i1 %cmp9, label %cleanup.loopexit, label %if.end11, !dbg !6676

if.end11:                                         ; preds = %cond.end
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6677
  %tobool13 = icmp eq %struct.VEC_edge_gc* %5, null, !dbg !6677
  br i1 %tobool13, label %cond.end18, label %cond.true14, !dbg !6677

cond.true14:                                      ; preds = %if.end11
  %base16 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !6677
  br label %cond.end18, !dbg !6677

cond.end18:                                       ; preds = %if.end11, %cond.true14
  %cond19 = phi %struct.VEC_edge_base* [ %base16, %cond.true14 ], [ null, %if.end11 ], !dbg !6677
  %call20 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond19, i32 0) #8, !dbg !6677
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call20, i64 0, i32 1, !dbg !6677
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6677
  %cmp21 = icmp eq %struct.basic_block_def* %6, %bb.0, !dbg !6677
  br i1 %cmp21, label %cond.end24, label %cond.true22, !dbg !6677

cond.true22:                                      ; preds = %cond.end18
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4632, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6677
  br label %cond.end24, !dbg !6677

cond.end24:                                       ; preds = %cond.end18, %cond.true22
  %7 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6678
  %tobool27 = icmp eq %struct.VEC_edge_gc* %7, null, !dbg !6678
  br i1 %tobool27, label %cond.end32, label %cond.true28, !dbg !6678

cond.true28:                                      ; preds = %cond.end24
  %base30 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !6678
  br label %cond.end32, !dbg !6678

cond.end32:                                       ; preds = %cond.end24, %cond.true28
  %cond33 = phi %struct.VEC_edge_base* [ %base30, %cond.true28 ], [ null, %cond.end24 ], !dbg !6678
  %call34 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond33, i32 0) #8, !dbg !6678
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call34, i64 0, i32 0, !dbg !6679
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6679
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %8, metadata !6663, metadata !DIExpression()), !dbg !6664
  %call35 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %8) #8, !dbg !6680
  %tobool36 = icmp eq i8 %call35, 0, !dbg !6680
  br i1 %tobool36, label %cleanup.loopexit, label %while.cond, !dbg !6682, !llvm.loop !6683

cleanup.loopexit:                                 ; preds = %cond.end, %cond.end32
  %retval.0.ph = phi i8 [ 0, %cond.end32 ], [ 1, %cond.end ]
  br label %cleanup, !dbg !6685

cleanup:                                          ; preds = %cleanup.loopexit, %entry, %lor.lhs.false
  %retval.0 = phi i8 [ 0, %lor.lhs.false ], [ 0, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !6664
  ret i8 %retval.0, !dbg !6685
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @tidy_control_flow(%struct.basic_block_def* %xbb, i8 zeroext %full_tidying) local_unnamed_addr #5 !dbg !6686 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %xbb, metadata !6690, metadata !DIExpression()), !dbg !6698
  call void @llvm.dbg.value(metadata i8 %full_tidying, metadata !6691, metadata !DIExpression()), !dbg !6698
  call void @llvm.dbg.value(metadata i8 1, metadata !6692, metadata !DIExpression()), !dbg !6698
  %call = tail call fastcc zeroext i8 @maybe_tidy_empty_bb(%struct.basic_block_def* %xbb, i8 zeroext 0) #8, !dbg !6699
  call void @llvm.dbg.value(metadata i8 %call, metadata !6692, metadata !DIExpression()), !dbg !6698
  %tobool = icmp eq i8 %call, 0, !dbg !6700
  %tobool1 = icmp ne i8 %full_tidying, 0, !dbg !6702
  %or.cond = and i1 %tobool, %tobool1, !dbg !6703
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !6703

if.end:                                           ; preds = %entry
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %xbb, i64 0, i32 7, !dbg !6704
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6704
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6704
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !6704
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6704
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %xbb, i64 0, i32 6, !dbg !6706
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !6706
  %call2 = tail call zeroext i8 @jump_leads_only_to_bb_p(%struct.rtx_def* %1, %struct.basic_block_def* %2) #8, !dbg !6707
  %tobool4 = icmp eq i8 %call2, 0, !dbg !6707
  br i1 %tobool4, label %if.end41, label %land.lhs.true, !dbg !6708

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6709
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i64 0, i32 0, !dbg !6709
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6709
  %base8 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !6709
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6709
  %end_14 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 1, !dbg !6709
  %6 = load %struct.rtx_def*, %struct.rtx_def** %end_14, align 8, !dbg !6709
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6709
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6709
  %7 = load i32, i32* %rt_int, align 8, !dbg !6709
  %call15 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base8, i32 %7) #8, !dbg !6709
  %call16 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call15) #8, !dbg !6709
  %sched_times = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call16, i64 0, i32 0, i32 5, !dbg !6709
  %8 = load i32, i32* %sched_times, align 8, !dbg !6709
  %cmp = icmp eq i32 %8, 0, !dbg !6710
  br i1 %cmp, label %land.lhs.true18, label %if.end41, !dbg !6711

land.lhs.true18:                                  ; preds = %land.lhs.true
  %9 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !6712
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6712
  %end_21 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 1, !dbg !6712
  %11 = load %struct.rtx_def*, %struct.rtx_def** %end_21, align 8, !dbg !6712
  %call22 = tail call %struct._fence* @flist_lookup(%struct._list_node* %9, %struct.rtx_def* %11) #8, !dbg !6712
  %cmp23 = icmp eq %struct._fence* %call22, null, !dbg !6712
  br i1 %cmp23, label %if.then25, label %if.end41, !dbg !6713

if.then25:                                        ; preds = %land.lhs.true18
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6714
  %end_28 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 1, !dbg !6714
  %13 = load %struct.rtx_def*, %struct.rtx_def** %end_28, align 8, !dbg !6714
  %call29 = tail call zeroext i8 @sel_remove_insn(%struct.rtx_def* %13, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6717
  %tobool30 = icmp eq i8 %call29, 0, !dbg !6717
  br i1 %tobool30, label %if.end32, label %cleanup, !dbg !6718

if.end32:                                         ; preds = %if.then25
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %xbb, i64 0, i32 1, !dbg !6719
  %14 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6719
  %tobool33 = icmp eq %struct.VEC_edge_gc* %14, null, !dbg !6719
  br i1 %tobool33, label %cond.end38, label %cond.true34, !dbg !6719

cond.true34:                                      ; preds = %if.end32
  %base36 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %14, i64 0, i32 0, !dbg !6719
  br label %cond.end38, !dbg !6719

cond.end38:                                       ; preds = %if.end32, %cond.true34
  %cond39 = phi %struct.VEC_edge_base* [ %base36, %cond.true34 ], [ null, %if.end32 ], !dbg !6719
  %call40 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond39, i32 0) #8, !dbg !6719
  tail call void @tidy_fallthru_edge(%struct.edge_def* %call40) #6, !dbg !6720
  br label %if.end41, !dbg !6721

if.end41:                                         ; preds = %land.lhs.true18, %if.end, %cond.end38, %land.lhs.true
  %call42 = tail call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %xbb) #8, !dbg !6722
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call42, metadata !6693, metadata !DIExpression()), !dbg !6698
  %call43 = tail call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %xbb) #8, !dbg !6723
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call43, metadata !6694, metadata !DIExpression()), !dbg !6698
  %15 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !6724
  %tobool44 = icmp eq i32 %15, 0, !dbg !6724
  br i1 %tobool44, label %if.end96, label %if.then45, !dbg !6726

if.then45:                                        ; preds = %if.end41
  %cmp46 = icmp eq %struct.rtx_def* %call42, %call43, !dbg !6727
  br i1 %cmp46, label %if.end65, label %land.lhs.true48, !dbg !6730

land.lhs.true48:                                  ; preds = %if.then45
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call42, i64 0, i32 0, !dbg !6731
  %bf.load = load i32, i32* %16, align 8, !dbg !6731
  %bf.clear = and i32 %bf.load, 65535, !dbg !6731
  %cmp49 = icmp eq i32 %bf.clear, 7, !dbg !6731
  br i1 %cmp49, label %do.body.preheader, label %if.end65, !dbg !6732

do.body.preheader:                                ; preds = %land.lhs.true48
  br label %do.body, !dbg !6733

do.body:                                          ; preds = %do.body.backedge, %do.body.preheader
  %first.0 = phi %struct.rtx_def* [ %call42, %do.body.preheader ], [ %18, %do.body.backedge ], !dbg !6698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.0, metadata !6693, metadata !DIExpression()), !dbg !6698
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6734
  %rt_rtx = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !6734
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !6693, metadata !DIExpression()), !dbg !6698
  %cmp55 = icmp eq %struct.rtx_def* %18, %call43, !dbg !6735
  br i1 %cmp55, label %if.end65.loopexit, label %land.rhs, !dbg !6733

land.rhs:                                         ; preds = %do.body
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 0, !dbg !6736
  %bf.load57 = load i32, i32* %19, align 8, !dbg !6736
  %bf.clear58 = and i32 %bf.load57, 65535, !dbg !6736
  %cmp59 = icmp eq i32 %bf.clear58, 7, !dbg !6736
  %cmp63 = icmp eq i32 %bf.clear58, 13, !dbg !6737
  %or.cond4 = or i1 %cmp59, %cmp63, !dbg !6738
  br i1 %or.cond4, label %do.body.backedge, label %if.end65.loopexit, !dbg !6738

do.body.backedge:                                 ; preds = %land.rhs
  br label %do.body, !dbg !6698, !llvm.loop !6739

if.end65.loopexit:                                ; preds = %land.rhs, %do.body
  %.lcssa6 = phi %struct.rtx_def* [ %18, %land.rhs ], [ %18, %do.body ], !dbg !6734
  br label %if.end65, !dbg !6742

if.end65:                                         ; preds = %if.end65.loopexit, %if.then45, %land.lhs.true48
  %first.1 = phi %struct.rtx_def* [ %call42, %land.lhs.true48 ], [ %call42, %if.then45 ], [ %.lcssa6, %if.end65.loopexit ], !dbg !6698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.1, metadata !6693, metadata !DIExpression()), !dbg !6698
  %cmp66 = icmp eq %struct.rtx_def* %first.1, %call43, !dbg !6742
  br i1 %cmp66, label %if.end96, label %land.lhs.true68, !dbg !6744

land.lhs.true68:                                  ; preds = %if.end65
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call43, i64 0, i32 0, !dbg !6745
  %bf.load69 = load i32, i32* %20, align 8, !dbg !6745
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !6745
  %cmp71 = icmp eq i32 %bf.clear70, 7, !dbg !6745
  br i1 %cmp71, label %do.body74.preheader, label %if.end96, !dbg !6746

do.body74.preheader:                              ; preds = %land.lhs.true68
  br label %do.body74, !dbg !6747

do.body74:                                        ; preds = %do.body74.backedge, %do.body74.preheader
  %last.0 = phi %struct.rtx_def* [ %call43, %do.body74.preheader ], [ %22, %do.body74.backedge ], !dbg !6698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !6694, metadata !DIExpression()), !dbg !6698
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6748
  %rt_rtx78 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !6748
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !6748
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !6694, metadata !DIExpression()), !dbg !6698
  %cmp80 = icmp eq %struct.rtx_def* %first.1, %22, !dbg !6749
  br i1 %cmp80, label %if.end96.loopexit, label %land.rhs82, !dbg !6747

land.rhs82:                                       ; preds = %do.body74
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 0, !dbg !6750
  %bf.load83 = load i32, i32* %23, align 8, !dbg !6750
  %bf.clear84 = and i32 %bf.load83, 65535, !dbg !6750
  %cmp85 = icmp eq i32 %bf.clear84, 7, !dbg !6750
  %cmp90 = icmp eq i32 %bf.clear84, 13, !dbg !6751
  %or.cond3 = or i1 %cmp85, %cmp90, !dbg !6752
  br i1 %or.cond3, label %do.body74.backedge, label %if.end96.loopexit, !dbg !6752

do.body74.backedge:                               ; preds = %land.rhs82
  br label %do.body74, !dbg !6698, !llvm.loop !6753

if.end96.loopexit:                                ; preds = %land.rhs82, %do.body74
  %.lcssa = phi %struct.rtx_def* [ %22, %land.rhs82 ], [ %22, %do.body74 ], !dbg !6748
  br label %if.end96, !dbg !6756

if.end96:                                         ; preds = %if.end96.loopexit, %if.end65, %if.end41, %land.lhs.true68
  %first.2 = phi %struct.rtx_def* [ %call42, %if.end41 ], [ %first.1, %land.lhs.true68 ], [ %call43, %if.end65 ], [ %first.1, %if.end96.loopexit ], !dbg !6698
  %last.2 = phi %struct.rtx_def* [ %call43, %if.end41 ], [ %call43, %land.lhs.true68 ], [ %call43, %if.end65 ], [ %.lcssa, %if.end96.loopexit ], !dbg !6698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.2, metadata !6694, metadata !DIExpression()), !dbg !6698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.2, metadata !6693, metadata !DIExpression()), !dbg !6698
  %cmp97 = icmp eq %struct.rtx_def* %first.2, %last.2, !dbg !6756
  br i1 %cmp97, label %land.lhs.true99, label %cleanup, !dbg !6757

land.lhs.true99:                                  ; preds = %if.end96
  %call100 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %xbb) #8, !dbg !6758
  %tobool101 = icmp eq i8 %call100, 0, !dbg !6758
  br i1 %tobool101, label %land.lhs.true102, label %cleanup, !dbg !6759

land.lhs.true102:                                 ; preds = %land.lhs.true99
  %u103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first.2, i64 0, i32 1, !dbg !6760
  %24 = getelementptr inbounds %union.u, %union.u* %u103, i64 1, i32 0, i32 0, i64 0, !dbg !6760
  %rt_rtx106 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !6760
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx106, align 8, !dbg !6760
  %26 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !6760
  %cmp107 = icmp eq %struct.rtx_def* %25, %26, !dbg !6760
  br i1 %cmp107, label %land.lhs.true109, label %cleanup, !dbg !6761

land.lhs.true109:                                 ; preds = %land.lhs.true102
  %succs110 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %xbb, i64 0, i32 1, !dbg !6762
  %27 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs110, align 8, !dbg !6762
  %tobool111 = icmp eq %struct.VEC_edge_gc* %27, null, !dbg !6762
  br i1 %tobool111, label %cond.end116, label %cond.true112, !dbg !6762

cond.true112:                                     ; preds = %land.lhs.true109
  %base114 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %27, i64 0, i32 0, !dbg !6762
  br label %cond.end116, !dbg !6762

cond.end116:                                      ; preds = %land.lhs.true109, %cond.true112
  %cond117 = phi %struct.VEC_edge_base* [ %base114, %cond.true112 ], [ null, %land.lhs.true109 ], !dbg !6762
  %call118 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond117) #8, !dbg !6762
  %cmp119 = icmp eq i32 %call118, 1, !dbg !6763
  br i1 %cmp119, label %land.lhs.true121, label %cleanup, !dbg !6764

land.lhs.true121:                                 ; preds = %cond.end116
  %28 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs110, align 8, !dbg !6765
  %tobool123 = icmp eq %struct.VEC_edge_gc* %28, null, !dbg !6765
  br i1 %tobool123, label %cond.end128, label %cond.true124, !dbg !6765

cond.true124:                                     ; preds = %land.lhs.true121
  %base126 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %28, i64 0, i32 0, !dbg !6765
  br label %cond.end128, !dbg !6765

cond.end128:                                      ; preds = %land.lhs.true121, %cond.true124
  %cond129 = phi %struct.VEC_edge_base* [ %base126, %cond.true124 ], [ null, %land.lhs.true121 ], !dbg !6765
  %call130 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond129, i32 0) #8, !dbg !6765
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call130, i64 0, i32 7, !dbg !6766
  %29 = load i32, i32* %flags, align 8, !dbg !6766
  %and = and i32 %29, 1, !dbg !6767
  %tobool131 = icmp eq i32 %and, 0, !dbg !6767
  br i1 %tobool131, label %cleanup, label %land.lhs.true132, !dbg !6768

land.lhs.true132:                                 ; preds = %cond.end128
  %call133 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %xbb) #8, !dbg !6769
  %30 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6770
  %cfg = getelementptr inbounds %struct.function, %struct.function* %30, i64 0, i32 1, !dbg !6770
  %31 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6770
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %31, i64 0, i32 1, !dbg !6770
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6770
  %cmp134 = icmp eq %struct.basic_block_def* %call133, %32, !dbg !6771
  br i1 %cmp134, label %cleanup, label %land.lhs.true136, !dbg !6772

land.lhs.true136:                                 ; preds = %land.lhs.true132
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %xbb, i64 0, i32 5, !dbg !6773
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6773
  %call137 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %33) #8, !dbg !6774
  %tobool139 = icmp eq i8 %call137, 0, !dbg !6774
  br i1 %tobool139, label %cleanup, label %land.lhs.true140, !dbg !6775

land.lhs.true140:                                 ; preds = %land.lhs.true136
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6776
  %il142 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %34, i64 0, i32 7, !dbg !6776
  %rtl143 = bitcast %union.basic_block_il_dependent* %il142 to %struct.rtl_bb_info**, !dbg !6776
  %35 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl143, align 8, !dbg !6776
  %end_144 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %35, i64 0, i32 1, !dbg !6776
  %36 = load %struct.rtx_def*, %struct.rtx_def** %end_144, align 8, !dbg !6776
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !6777
  %call146 = tail call zeroext i8 @jump_leads_only_to_bb_p(%struct.rtx_def* %36, %struct.basic_block_def* %37) #8, !dbg !6778
  %tobool148 = icmp eq i8 %call146, 0, !dbg !6778
  br i1 %tobool148, label %cleanup, label %land.lhs.true149, !dbg !6779

land.lhs.true149:                                 ; preds = %land.lhs.true140
  %38 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6780
  %base152 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %38, i64 0, i32 0, !dbg !6780
  %39 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6780
  %base158 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %39, i64 0, i32 0, !dbg !6780
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6780
  %il163 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i64 0, i32 7, !dbg !6780
  %rtl164 = bitcast %union.basic_block_il_dependent* %il163 to %struct.rtl_bb_info**, !dbg !6780
  %41 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl164, align 8, !dbg !6780
  %end_165 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %41, i64 0, i32 1, !dbg !6780
  %42 = load %struct.rtx_def*, %struct.rtx_def** %end_165, align 8, !dbg !6780
  %arrayidx168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6780
  %rt_int169 = bitcast %union.rtunion_def* %arrayidx168 to i32*, !dbg !6780
  %43 = load i32, i32* %rt_int169, align 8, !dbg !6780
  %call170 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base158, i32 %43) #8, !dbg !6780
  %call171 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base152, i32 %call170) #8, !dbg !6780
  %sched_times173 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call171, i64 0, i32 0, i32 5, !dbg !6780
  %44 = load i32, i32* %sched_times173, align 8, !dbg !6780
  %cmp174 = icmp eq i32 %44, 0, !dbg !6781
  br i1 %cmp174, label %land.lhs.true176, label %cleanup, !dbg !6782

land.lhs.true176:                                 ; preds = %land.lhs.true149
  %45 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !6783
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6783
  %il178 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %46, i64 0, i32 7, !dbg !6783
  %rtl179 = bitcast %union.basic_block_il_dependent* %il178 to %struct.rtl_bb_info**, !dbg !6783
  %47 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl179, align 8, !dbg !6783
  %end_180 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %47, i64 0, i32 1, !dbg !6783
  %48 = load %struct.rtx_def*, %struct.rtx_def** %end_180, align 8, !dbg !6783
  %call181 = tail call %struct._fence* @flist_lookup(%struct._list_node* %45, %struct.rtx_def* %48) #8, !dbg !6783
  %cmp182 = icmp eq %struct._fence* %call181, null, !dbg !6783
  br i1 %cmp182, label %if.then184, label %cleanup, !dbg !6784

if.then184:                                       ; preds = %land.lhs.true176
  %49 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6785
  %base187 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %49, i64 0, i32 0, !dbg !6785
  %50 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6785
  %base193 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %50, i64 0, i32 0, !dbg !6785
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6785
  %il198 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %51, i64 0, i32 7, !dbg !6785
  %rtl199 = bitcast %union.basic_block_il_dependent* %il198 to %struct.rtl_bb_info**, !dbg !6785
  %52 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl199, align 8, !dbg !6785
  %end_200 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %52, i64 0, i32 1, !dbg !6785
  %53 = load %struct.rtx_def*, %struct.rtx_def** %end_200, align 8, !dbg !6785
  %arrayidx203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6785
  %rt_int204 = bitcast %union.rtunion_def* %arrayidx203 to i32*, !dbg !6785
  %54 = load i32, i32* %rt_int204, align 8, !dbg !6785
  %call205 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base193, i32 %54) #8, !dbg !6785
  %call206 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base187, i32 %call205) #8, !dbg !6785
  %expr207 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call206, i64 0, i32 0, !dbg !6785
  tail call void @clear_expr(%struct._expr* %expr207) #8, !dbg !6786
  %55 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6787
  %succs209 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %55, i64 0, i32 1, !dbg !6787
  %56 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs209, align 8, !dbg !6787
  %tobool210 = icmp eq %struct.VEC_edge_gc* %56, null, !dbg !6787
  br i1 %tobool210, label %cond.end216, label %cond.true211, !dbg !6787

cond.true211:                                     ; preds = %if.then184
  %base214 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %56, i64 0, i32 0, !dbg !6787
  br label %cond.end216, !dbg !6787

cond.end216:                                      ; preds = %if.then184, %cond.true211
  %cond217 = phi %struct.VEC_edge_base* [ %base214, %cond.true211 ], [ null, %if.then184 ], !dbg !6787
  %call218 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond217, i32 0) #8, !dbg !6787
  %call219 = tail call zeroext i8 @sel_redirect_edge_and_branch(%struct.edge_def* %call218, %struct.basic_block_def* %xbb) #8, !dbg !6788
  call void @llvm.dbg.value(metadata i8 %call219, metadata !6695, metadata !DIExpression()), !dbg !6789
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6790
  %succs221 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %57, i64 0, i32 1, !dbg !6790
  %58 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs221, align 8, !dbg !6790
  %tobool222 = icmp eq %struct.VEC_edge_gc* %58, null, !dbg !6790
  br i1 %tobool222, label %cond.end228, label %cond.true223, !dbg !6790

cond.true223:                                     ; preds = %cond.end216
  %base226 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %58, i64 0, i32 0, !dbg !6790
  br label %cond.end228, !dbg !6790

cond.end228:                                      ; preds = %cond.end216, %cond.true223
  %cond229 = phi %struct.VEC_edge_base* [ %base226, %cond.true223 ], [ null, %cond.end216 ], !dbg !6790
  %call230 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond229, i32 0) #8, !dbg !6790
  %flags231 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call230, i64 0, i32 7, !dbg !6790
  %59 = load i32, i32* %flags231, align 8, !dbg !6790
  %and232 = and i32 %59, 1, !dbg !6790
  %tobool233 = icmp eq i32 %and232, 0, !dbg !6790
  br i1 %tobool233, label %cond.true234, label %cond.end236, !dbg !6790

cond.true234:                                     ; preds = %cond.end228
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3696, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6790
  br label %cond.end236, !dbg !6790

cond.end236:                                      ; preds = %cond.end228, %cond.true234
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6791
  %call239 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %60) #8, !dbg !6793
  %tobool240 = icmp eq i8 %call239, 0, !dbg !6793
  br i1 %tobool240, label %if.else, label %if.then241, !dbg !6794

if.then241:                                       ; preds = %cond.end236
  %61 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6795
  %call243 = tail call fastcc zeroext i8 @maybe_tidy_empty_bb(%struct.basic_block_def* %61, i8 zeroext %call219) #8, !dbg !6796
  call void @llvm.dbg.value(metadata i8 %call243, metadata !6692, metadata !DIExpression()), !dbg !6698
  br label %cleanup, !dbg !6797

if.else:                                          ; preds = %cond.end236
  %tobool244 = icmp eq i8 %call219, 0, !dbg !6798
  br i1 %tobool244, label %cleanup, label %if.then245, !dbg !6800

if.then245:                                       ; preds = %if.else
  tail call fastcc void @sel_recompute_toporder() #8, !dbg !6801
  br label %cleanup, !dbg !6801

cleanup:                                          ; preds = %if.then25, %if.else, %land.lhs.true176, %land.lhs.true140, %land.lhs.true136, %land.lhs.true132, %cond.end128, %land.lhs.true99, %if.end96, %land.lhs.true102, %cond.end116, %land.lhs.true149, %if.then245, %if.then241, %entry
  %retval.0 = phi i8 [ %call, %entry ], [ 1, %if.then25 ], [ 0, %land.lhs.true99 ], [ 0, %land.lhs.true176 ], [ 0, %land.lhs.true149 ], [ 0, %land.lhs.true140 ], [ 0, %land.lhs.true136 ], [ 0, %land.lhs.true132 ], [ 0, %cond.end128 ], [ 0, %cond.end116 ], [ 0, %land.lhs.true102 ], [ 0, %if.end96 ], [ %call243, %if.then241 ], [ 0, %if.then245 ], [ 0, %if.else ], !dbg !6698
  ret i8 %retval.0, !dbg !6802
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @maybe_tidy_empty_bb(%struct.basic_block_def* %bb, i8 zeroext %recompute_toporder_p) unnamed_addr #5 !dbg !6803 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp50 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6805, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8 %recompute_toporder_p, metadata !6806, metadata !DIExpression()), !dbg !6812
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !6813
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6813
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6814
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !6814
  %call = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %bb) #8, !dbg !6815
  %tobool = icmp eq i8 %call, 0, !dbg !6815
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !6817

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #8, !dbg !6818
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6818
  br i1 %tobool2, label %lor.lhs.false11, label %land.lhs.true, !dbg !6819

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call3 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) #8, !dbg !6820
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6821
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !6821
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6821
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !6821
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6821
  %cmp = icmp eq %struct.basic_block_def* %call3, %4, !dbg !6822
  br i1 %cmp, label %land.lhs.true5, label %lor.lhs.false11, !dbg !6823

land.lhs.true5:                                   ; preds = %land.lhs.true
  %call6 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #8, !dbg !6824
  %tobool7 = icmp eq i8 %call6, 0, !dbg !6824
  br i1 %tobool7, label %cleanup, label %lor.lhs.false8, !dbg !6825

lor.lhs.false8:                                   ; preds = %land.lhs.true5
  %call9 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) #8, !dbg !6826
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call9, i64 0, i32 7, !dbg !6827
  %5 = load i32, i32* %flags, align 8, !dbg !6827
  %and = and i32 %5, 1, !dbg !6828
  %tobool10 = icmp eq i32 %and, 0, !dbg !6828
  br i1 %tobool10, label %cleanup, label %lor.lhs.false11, !dbg !6829

lor.lhs.false11:                                  ; preds = %lor.lhs.false8, %lor.lhs.false, %land.lhs.true
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !6830
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6830
  %tobool12 = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !6830
  br i1 %tobool12, label %cond.end, label %cond.true, !dbg !6830

cond.true:                                        ; preds = %lor.lhs.false11
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !6830
  br label %cond.end, !dbg !6830

cond.end:                                         ; preds = %lor.lhs.false11, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %lor.lhs.false11 ], !dbg !6830
  %call14 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !6830
  %cmp15 = icmp eq i32 %call14, 0, !dbg !6831
  br i1 %cmp15, label %cleanup, label %lor.lhs.false17, !dbg !6832

lor.lhs.false17:                                  ; preds = %cond.end
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6833
  %7 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6833
  %tobool18 = icmp eq %struct.VEC_edge_gc* %7, null, !dbg !6833
  br i1 %tobool18, label %cond.end23, label %cond.true19, !dbg !6833

cond.true19:                                      ; preds = %lor.lhs.false17
  %base21 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !6833
  br label %cond.end23, !dbg !6833

cond.end23:                                       ; preds = %lor.lhs.false17, %cond.true19
  %cond24 = phi %struct.VEC_edge_base* [ %base21, %cond.true19 ], [ null, %lor.lhs.false17 ], !dbg !6833
  %call25 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond24) #8, !dbg !6833
  %cmp26 = icmp eq i32 %call25, 0, !dbg !6834
  br i1 %cmp26, label %cleanup, label %if.end, !dbg !6835

if.end:                                           ; preds = %cond.end23
  %8 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6836
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7, !dbg !6836
  %call29 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !6836
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6836
  %10 = extractvalue { i32, %struct.VEC_edge_gc** } %call29, 0, !dbg !6836
  store i32 %10, i32* %9, align 8, !dbg !6836
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6836
  %12 = extractvalue { i32, %struct.VEC_edge_gc** } %call29, 1, !dbg !6836
  store %struct.VEC_edge_gc** %12, %struct.VEC_edge_gc*** %11, align 8, !dbg !6836
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !6836
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7, !dbg !6836
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6838
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6838
  br label %for.cond, !dbg !6836

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %13, align 8, !dbg !6840
  %16 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %14, align 8, !dbg !6840
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6809, metadata !DIExpression(DW_OP_deref)), !dbg !6812
  %call30 = call fastcc zeroext i8 @ei_cond(i32 %15, %struct.VEC_edge_gc** %16, %struct.edge_def** nonnull %e) #8, !dbg !6840
  %tobool31 = icmp eq i8 %call30, 0, !dbg !6836
  br i1 %tobool31, label %for.end, label %for.body, !dbg !6836

for.body:                                         ; preds = %for.cond
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6841
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !6809, metadata !DIExpression()), !dbg !6812
  %flags32 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i64 0, i32 7, !dbg !6843
  %18 = load i32, i32* %flags32, align 8, !dbg !6843
  %and33 = and i32 %18, 14, !dbg !6844
  %tobool34 = icmp eq i32 %and33, 0, !dbg !6844
  br i1 %tobool34, label %for.inc, label %cleanup.loopexit, !dbg !6845

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6810, metadata !DIExpression(DW_OP_deref)), !dbg !6812
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !6840
  br label %for.cond, !dbg !6840, !llvm.loop !6846

for.end:                                          ; preds = %for.cond
  call void @free_data_sets(%struct.basic_block_def* %bb) #8, !dbg !6848
  %call37 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #8, !dbg !6849
  %tobool38 = icmp eq i8 %call37, 0, !dbg !6849
  br i1 %tobool38, label %if.then39, label %if.end47, !dbg !6851

if.then39:                                        ; preds = %for.end
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 5, !dbg !6852
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6852
  %call40 = call zeroext i8 @can_merge_blocks_p(%struct.basic_block_def* %19, %struct.basic_block_def* %bb) #6, !dbg !6852
  %tobool41 = icmp eq i8 %call40, 0, !dbg !6852
  br i1 %tobool41, label %cond.true42, label %cond.end44, !dbg !6852

cond.true42:                                      ; preds = %if.then39
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3577, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6852
  br label %cond.end44, !dbg !6852

cond.end44:                                       ; preds = %if.then39, %cond.true42
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6854
  call void @sel_merge_blocks(%struct.basic_block_def* %20, %struct.basic_block_def* %bb) #8, !dbg !6855
  br label %cleanup, !dbg !6856

if.end47:                                         ; preds = %for.end
  %call48 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) #8, !dbg !6857
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call48, metadata !6807, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8 1, metadata !6811, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !6808, metadata !DIExpression()), !dbg !6812
  %21 = bitcast %struct.edge_iterator* %tmp50 to i8*, !dbg !6858
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp50, i64 0, i32 0, !dbg !6858
  %23 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp50, i64 0, i32 1, !dbg !6858
  br label %while.cond, !dbg !6861

while.cond:                                       ; preds = %for.end67, %if.end47
  %pred_bb.0 = phi %struct.basic_block_def* [ null, %if.end47 ], [ %pred_bb.2, %for.end67 ], !dbg !6812
  %rescan_p.0 = phi i8 [ 1, %if.end47 ], [ %rescan_p.1, %for.end67 ], !dbg !6812
  %recompute_toporder_p.addr.0 = phi i8 [ %recompute_toporder_p, %if.end47 ], [ %recompute_toporder_p.addr.1, %for.end67 ]
  call void @llvm.dbg.value(metadata i8 %recompute_toporder_p.addr.0, metadata !6806, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8 %rescan_p.0, metadata !6811, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred_bb.0, metadata !6808, metadata !DIExpression()), !dbg !6812
  %tobool49 = icmp eq i8 %rescan_p.0, 0, !dbg !6861
  br i1 %tobool49, label %while.end, label %while.body, !dbg !6861

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !6811, metadata !DIExpression()), !dbg !6812
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #7, !dbg !6862
  %call52 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !6862
  %24 = extractvalue { i32, %struct.VEC_edge_gc** } %call52, 0, !dbg !6862
  store i32 %24, i32* %22, align 8, !dbg !6862
  %25 = extractvalue { i32, %struct.VEC_edge_gc** } %call52, 1, !dbg !6862
  store %struct.VEC_edge_gc** %25, %struct.VEC_edge_gc*** %23, align 8, !dbg !6862
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %21, i64 16, i1 false), !dbg !6862
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #7, !dbg !6862
  br label %for.cond53, !dbg !6862

for.cond53:                                       ; preds = %for.inc66, %while.body
  %pred_bb.1 = phi %struct.basic_block_def* [ %pred_bb.0, %while.body ], [ %29, %for.inc66 ], !dbg !6812
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred_bb.1, metadata !6808, metadata !DIExpression()), !dbg !6812
  %26 = load i32, i32* %13, align 8, !dbg !6863
  %27 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %14, align 8, !dbg !6863
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6809, metadata !DIExpression(DW_OP_deref)), !dbg !6812
  %call54 = call fastcc zeroext i8 @ei_cond(i32 %26, %struct.VEC_edge_gc** %27, %struct.edge_def** nonnull %e) #8, !dbg !6863
  %tobool55 = icmp eq i8 %call54, 0, !dbg !6862
  br i1 %tobool55, label %for.end67.loopexit, label %for.body56, !dbg !6862

for.body56:                                       ; preds = %for.cond53
  %28 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6865
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !6809, metadata !DIExpression()), !dbg !6812
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i64 0, i32 0, !dbg !6867
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6867
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %29, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !6809, metadata !DIExpression()), !dbg !6812
  %flags57 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i64 0, i32 7, !dbg !6868
  %30 = load i32, i32* %flags57, align 8, !dbg !6868
  %and58 = and i32 %30, 1, !dbg !6870
  %tobool59 = icmp eq i32 %and58, 0, !dbg !6870
  br i1 %tobool59, label %if.then60, label %for.inc66, !dbg !6871

if.then60:                                        ; preds = %for.body56
  %.lcssa6 = phi %struct.edge_def* [ %28, %for.body56 ], !dbg !6865
  %.lcssa = phi %struct.basic_block_def* [ %29, %for.body56 ], !dbg !6867
  call void @llvm.dbg.value(metadata %struct.edge_def* %.lcssa6, metadata !6809, metadata !DIExpression()), !dbg !6812
  %call61 = call zeroext i8 @sel_redirect_edge_and_branch(%struct.edge_def* %.lcssa6, %struct.basic_block_def* %call48) #8, !dbg !6872
  %or1 = or i8 %recompute_toporder_p.addr.0, %call61, !dbg !6874
  call void @llvm.dbg.value(metadata i8 %or1, metadata !6806, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8 1, metadata !6811, metadata !DIExpression()), !dbg !6812
  br label %for.end67, !dbg !6875

for.inc66:                                        ; preds = %for.body56
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6810, metadata !DIExpression(DW_OP_deref)), !dbg !6812
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !6863
  br label %for.cond53, !dbg !6863, !llvm.loop !6876

for.end67.loopexit:                               ; preds = %for.cond53
  %pred_bb.1.lcssa = phi %struct.basic_block_def* [ %pred_bb.1, %for.cond53 ], !dbg !6812
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred_bb.1.lcssa, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred_bb.1.lcssa, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred_bb.1.lcssa, metadata !6808, metadata !DIExpression()), !dbg !6812
  br label %for.end67, !dbg !6861

for.end67:                                        ; preds = %for.end67.loopexit, %if.then60
  %pred_bb.2 = phi %struct.basic_block_def* [ %.lcssa, %if.then60 ], [ %pred_bb.1.lcssa, %for.end67.loopexit ], !dbg !6812
  %rescan_p.1 = phi i8 [ 1, %if.then60 ], [ 0, %for.end67.loopexit ], !dbg !6878
  %recompute_toporder_p.addr.1 = phi i8 [ %or1, %if.then60 ], [ %recompute_toporder_p.addr.0, %for.end67.loopexit ]
  call void @llvm.dbg.value(metadata i8 %recompute_toporder_p.addr.1, metadata !6806, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8 %rescan_p.1, metadata !6811, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred_bb.2, metadata !6808, metadata !DIExpression()), !dbg !6812
  br label %while.cond, !dbg !6861, !llvm.loop !6879

while.end:                                        ; preds = %while.cond
  %pred_bb.0.lcssa = phi %struct.basic_block_def* [ %pred_bb.0, %while.cond ], !dbg !6812
  %recompute_toporder_p.addr.0.lcssa = phi i8 [ %recompute_toporder_p.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred_bb.0.lcssa, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8 %recompute_toporder_p.addr.0.lcssa, metadata !6806, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred_bb.0.lcssa, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8 %recompute_toporder_p.addr.0.lcssa, metadata !6806, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred_bb.0.lcssa, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8 %recompute_toporder_p.addr.0.lcssa, metadata !6806, metadata !DIExpression()), !dbg !6812
  %prev_bb68 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 5, !dbg !6881
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb68, align 8, !dbg !6881
  %call69 = call zeroext i8 @can_merge_blocks_p(%struct.basic_block_def* %31, %struct.basic_block_def* %bb) #6, !dbg !6883
  %tobool70 = icmp eq i8 %call69, 0, !dbg !6883
  br i1 %tobool70, label %if.else, label %if.then71, !dbg !6884

if.then71:                                        ; preds = %while.end
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb68, align 8, !dbg !6885
  call void @sel_merge_blocks(%struct.basic_block_def* %32, %struct.basic_block_def* %bb) #8, !dbg !6886
  br label %if.end83, !dbg !6886

if.else:                                          ; preds = %while.end
  %cmp73 = icmp eq %struct.basic_block_def* %pred_bb.0.lcssa, null, !dbg !6887
  br i1 %cmp73, label %cond.true75, label %cond.end77, !dbg !6887

cond.true75:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3611, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6887
  br label %cond.end77, !dbg !6887

cond.end77:                                       ; preds = %if.else, %cond.true75
  %call79 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %pred_bb.0.lcssa) #8, !dbg !6889
  %tobool80 = icmp eq i8 %call79, 0, !dbg !6889
  br i1 %tobool80, label %if.end82, label %if.then81, !dbg !6891

if.then81:                                        ; preds = %cond.end77
  call fastcc void @move_bb_info(%struct.basic_block_def* %pred_bb.0.lcssa, %struct.basic_block_def* %bb) #8, !dbg !6892
  br label %if.end82, !dbg !6892

if.end82:                                         ; preds = %cond.end77, %if.then81
  call fastcc void @remove_empty_bb(%struct.basic_block_def* %bb, i8 zeroext 1) #8, !dbg !6893
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then71
  %tobool84 = icmp eq i8 %recompute_toporder_p.addr.0.lcssa, 0, !dbg !6894
  br i1 %tobool84, label %cleanup, label %if.then85, !dbg !6896

if.then85:                                        ; preds = %if.end83
  call fastcc void @sel_recompute_toporder() #8, !dbg !6897
  br label %cleanup, !dbg !6897

cleanup.loopexit:                                 ; preds = %for.body
  br label %cleanup, !dbg !6898

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false8, %land.lhs.true5, %if.end83, %entry, %if.then85, %cond.end, %cond.end23, %cond.end44
  %retval.0 = phi i8 [ 1, %cond.end44 ], [ 0, %cond.end23 ], [ 0, %cond.end ], [ 0, %lor.lhs.false8 ], [ 0, %land.lhs.true5 ], [ 0, %entry ], [ 1, %if.then85 ], [ 1, %if.end83 ], [ 0, %cleanup.loopexit ], !dbg !6812
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !6898
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6898
  ret i8 %retval.0, !dbg !6898
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @jump_leads_only_to_bb_p(%struct.rtx_def* %jump, %struct.basic_block_def* %dest_bb) local_unnamed_addr #5 !dbg !6899 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump, metadata !6903, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dest_bb, metadata !6904, metadata !DIExpression()), !dbg !6906
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, i32 0, i32 1, !dbg !6907
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6907
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6907
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !6905, metadata !DIExpression()), !dbg !6906
  %call = tail call i32 @onlyjump_p(%struct.rtx_def* %jump) #6, !dbg !6908
  %tobool = icmp eq i32 %call, 0, !dbg !6908
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !6910

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @any_uncondjump_p(%struct.rtx_def* %jump) #6, !dbg !6911
  %tobool2 = icmp eq i32 %call1, 0, !dbg !6911
  br i1 %tobool2, label %cleanup, label %if.end, !dbg !6912

if.end:                                           ; preds = %lor.lhs.false
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 1, !dbg !6913
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6913
  %tobool3 = icmp eq %struct.VEC_edge_gc* %1, null, !dbg !6913
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !6913

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !6913
  br label %cond.end, !dbg !6913

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !6913
  %call5 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !6913
  %cmp = icmp eq i32 %call5, 1, !dbg !6915
  br i1 %cmp, label %lor.lhs.false6, label %cleanup, !dbg !6916

lor.lhs.false6:                                   ; preds = %cond.end
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6917
  %tobool8 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !6917
  br i1 %tobool8, label %cond.end13, label %cond.true9, !dbg !6917

cond.true9:                                       ; preds = %lor.lhs.false6
  %base11 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !6917
  br label %cond.end13, !dbg !6917

cond.end13:                                       ; preds = %lor.lhs.false6, %cond.true9
  %cond14 = phi %struct.VEC_edge_base* [ %base11, %cond.true9 ], [ null, %lor.lhs.false6 ], !dbg !6917
  %call15 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond14, i32 0) #8, !dbg !6917
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call15, i64 0, i32 7, !dbg !6918
  %3 = load i32, i32* %flags, align 8, !dbg !6918
  %and = and i32 %3, 2, !dbg !6919
  %tobool16 = icmp eq i32 %and, 0, !dbg !6919
  br i1 %tobool16, label %lor.lhs.false17, label %cleanup, !dbg !6920

lor.lhs.false17:                                  ; preds = %cond.end13
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6921
  %tobool19 = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !6921
  br i1 %tobool19, label %cond.end24, label %cond.true20, !dbg !6921

cond.true20:                                      ; preds = %lor.lhs.false17
  %base22 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !6921
  br label %cond.end24, !dbg !6921

cond.end24:                                       ; preds = %lor.lhs.false17, %cond.true20
  %cond25 = phi %struct.VEC_edge_base* [ %base22, %cond.true20 ], [ null, %lor.lhs.false17 ], !dbg !6921
  %call26 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond25, i32 0) #8, !dbg !6921
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call26, i64 0, i32 1, !dbg !6922
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6922
  %cmp27 = icmp eq %struct.basic_block_def* %5, %dest_bb, !dbg !6923
  %spec.select = zext i1 %cmp27 to i8, !dbg !6924
  ret i8 %spec.select, !dbg !6924

cleanup:                                          ; preds = %cond.end13, %cond.end, %lor.lhs.false, %entry
  ret i8 0, !dbg !6925
}

declare dso_local void @tidy_fallthru_edge(%struct.edge_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6926 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6932, metadata !DIExpression()), !dbg !6934
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6933, metadata !DIExpression()), !dbg !6934
  br label %land.end, !dbg !6935

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6935
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6935
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6935
  ret %struct.edge_def* %0, !dbg !6935
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !6936 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6940, metadata !DIExpression()), !dbg !6945
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6946
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !6946
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6946
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !6946
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6946
  %cmp = icmp eq %struct.basic_block_def* %2, %bb, !dbg !6947
  br i1 %cmp, label %if.then, label %if.else, !dbg !6948

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** @exit_insn, align 8, !dbg !6949
  %cmp1 = icmp eq %struct.rtx_def* %3, null, !dbg !6949
  br i1 %cmp1, label %cond.true, label %cond.end, !dbg !6949

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4322, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6949
  %.pre = load %struct.rtx_def*, %struct.rtx_def** @exit_insn, align 8, !dbg !6951
  br label %cond.end, !dbg !6949

cond.end:                                         ; preds = %if.then, %cond.true
  %4 = phi %struct.rtx_def* [ %3, %if.then ], [ %.pre, %cond.true ], !dbg !6951
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6941, metadata !DIExpression()), !dbg !6945
  br label %if.end5, !dbg !6952

if.else:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @bb_note(%struct.basic_block_def* %bb) #6, !dbg !6953
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6942, metadata !DIExpression()), !dbg !6954
  %call2 = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %call) #6, !dbg !6955
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !6941, metadata !DIExpression()), !dbg !6945
  %tobool = icmp eq %struct.rtx_def* %call2, null, !dbg !6956
  br i1 %tobool, label %if.end5, label %land.lhs.true, !dbg !6958

land.lhs.true:                                    ; preds = %if.else
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2, i64 0, i32 1, i32 0, i32 1, !dbg !6959
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6959
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6959
  %cmp3 = icmp eq %struct.basic_block_def* %5, %bb, !dbg !6960
  %spec.select = select i1 %cmp3, %struct.rtx_def* %call2, %struct.rtx_def* null, !dbg !6961
  ret %struct.rtx_def* %spec.select, !dbg !6961

if.end5:                                          ; preds = %if.else, %cond.end
  %head.1 = phi %struct.rtx_def* [ %4, %cond.end ], [ null, %if.else ], !dbg !6962
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.1, metadata !6941, metadata !DIExpression()), !dbg !6945
  ret %struct.rtx_def* %head.1, !dbg !6963
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !6964 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6966, metadata !DIExpression()), !dbg !6967
  %call = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %bb) #8, !dbg !6968
  %tobool = icmp eq i8 %call, 0, !dbg !6968
  br i1 %tobool, label %if.end, label %return, !dbg !6970

if.end:                                           ; preds = %entry
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6971
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !6971
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6971
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !6971
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6971
  %cmp = icmp eq %struct.basic_block_def* %2, %bb, !dbg !6971
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6971

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4353, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6971
  br label %cond.end, !dbg !6971

cond.end:                                         ; preds = %if.end, %cond.true
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !6972
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6972
  %3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6972
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 1, !dbg !6972
  %4 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6972
  br label %return, !dbg !6973

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi %struct.rtx_def* [ %4, %cond.end ], [ null, %entry ], !dbg !6967
  ret %struct.rtx_def* %retval.0, !dbg !6974
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !6975 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6977, metadata !DIExpression()), !dbg !6978
  %call = tail call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %bb) #8, !dbg !6979
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !6980
  %conv1 = zext i1 %cmp to i8, !dbg !6979
  ret i8 %conv1, !dbg !6981
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6982 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6986, metadata !DIExpression()), !dbg !6987
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6988
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6988

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6988
  %0 = load i32, i32* %num, align 8, !dbg !6988
  br label %cond.end, !dbg !6988

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6988
  ret i32 %cond, !dbg !6988
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6989 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6993, metadata !DIExpression()), !dbg !6994
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #8, !dbg !6995
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !6996
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6996
  ret %struct.basic_block_def* %0, !dbg !6997
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @in_current_region_p(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !6998 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7000, metadata !DIExpression()), !dbg !7001
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !7002
  %0 = load i32, i32* %index, align 8, !dbg !7002
  %cmp = icmp slt i32 %0, 2, !dbg !7004
  br i1 %cmp, label %return, label %if.end, !dbg !7005

if.end:                                           ; preds = %entry
  %1 = load i32*, i32** @containing_rgn, align 8, !dbg !7006
  %idxprom = sext i32 %0 to i64, !dbg !7006
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !7006
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7006
  %3 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7007
  %4 = load i32*, i32** @ebb_head, align 8, !dbg !7007
  %5 = load i32, i32* %4, align 4, !dbg !7007
  %idxprom3 = sext i32 %5 to i64, !dbg !7007
  %arrayidx4 = getelementptr inbounds i32, i32* %3, i64 %idxprom3, !dbg !7007
  %6 = load i32, i32* %arrayidx4, align 4, !dbg !7007
  %idxprom5 = sext i32 %6 to i64, !dbg !7007
  %arrayidx6 = getelementptr inbounds i32, i32* %1, i64 %idxprom5, !dbg !7007
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !7007
  %cmp7 = icmp eq i32 %2, %7, !dbg !7008
  %conv8 = zext i1 %cmp7 to i8, !dbg !7006
  br label %return, !dbg !7009

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i8 [ %conv8, %if.end ], [ 0, %entry ], !dbg !7001
  ret i8 %retval.0, !dbg !7010
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sel_redirect_edge_and_branch(%struct.edge_def* %e, %struct.basic_block_def* %to) local_unnamed_addr #5 !dbg !7011 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !7015, metadata !DIExpression()), !dbg !7023
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %to, metadata !7016, metadata !DIExpression()), !dbg !7023
  call void @llvm.dbg.value(metadata i8 0, metadata !7022, metadata !DIExpression()), !dbg !7023
  %0 = load i8, i8* @pipelining_p, align 1, !dbg !7024
  %tobool = icmp ne i8 %0, 0, !dbg !7024
  %1 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7025
  %tobool1 = icmp ne %struct.loop* %1, null, !dbg !7025
  %or.cond = and i1 %tobool, %tobool1, !dbg !7026
  br i1 %or.cond, label %land.rhs, label %land.end, !dbg !7026

land.rhs:                                         ; preds = %entry
  %call = tail call %struct.edge_def* @loop_latch_edge(%struct.loop* nonnull %1) #6, !dbg !7027
  %cmp = icmp eq %struct.edge_def* %call, %e, !dbg !7028
  %phitmp = zext i1 %cmp to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %2, metadata !7017, metadata !DIExpression()), !dbg !7023
  %src4 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !7029
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src4, align 8, !dbg !7029
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !7018, metadata !DIExpression()), !dbg !7023
  %call5 = tail call i32 @get_max_uid() #6, !dbg !7030
  call void @llvm.dbg.value(metadata i32 %call5, metadata !7019, metadata !DIExpression()), !dbg !7023
  %call6 = tail call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* %e, %struct.basic_block_def* %to) #6, !dbg !7031
  call void @llvm.dbg.value(metadata %struct.edge_def* %call6, metadata !7021, metadata !DIExpression()), !dbg !7023
  %tobool7 = icmp ne %struct.edge_def* %call6, null, !dbg !7032
  %4 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** @last_added_blocks, align 8, !dbg !7032
  %cmp9 = icmp eq %struct.VEC_basic_block_heap* %4, null, !dbg !7032
  %or.cond1 = and i1 %tobool7, %cmp9, !dbg !7032
  br i1 %or.cond1, label %cond.end, label %cond.true, !dbg !7032

cond.true:                                        ; preds = %land.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5453, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7032
  br label %cond.end, !dbg !7032

cond.end:                                         ; preds = %land.end, %cond.true
  %tobool11 = icmp eq i8 %2, 0, !dbg !7033
  br i1 %tobool11, label %if.end, label %if.then, !dbg !7035

if.then:                                          ; preds = %cond.end
  %5 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7036
  %header = getelementptr inbounds %struct.loop, %struct.loop* %5, i64 0, i32 2, !dbg !7038
  store %struct.basic_block_def* %to, %struct.basic_block_def** %header, align 8, !dbg !7039
  %call12 = tail call %struct.edge_def* @loop_latch_edge(%struct.loop* %5) #6, !dbg !7040
  %tobool13 = icmp eq %struct.edge_def* %call12, null, !dbg !7040
  br i1 %tobool13, label %cond.true14, label %if.end, !dbg !7040

cond.true14:                                      ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5459, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7040
  br label %if.end, !dbg !7040

if.end:                                           ; preds = %if.then, %cond.end, %cond.true14
  %6 = load i32*, i32** @containing_rgn, align 8, !dbg !7041
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %src4, align 8, !dbg !7041
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i64 0, i32 9, !dbg !7041
  %8 = load i32, i32* %index, align 8, !dbg !7041
  %idxprom = sext i32 %8 to i64, !dbg !7041
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !7041
  %9 = load i32, i32* %arrayidx, align 4, !dbg !7041
  %index19 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %to, i64 0, i32 9, !dbg !7043
  %10 = load i32, i32* %index19, align 8, !dbg !7043
  %idxprom20 = sext i32 %10 to i64, !dbg !7043
  %arrayidx21 = getelementptr inbounds i32, i32* %6, i64 %idxprom20, !dbg !7043
  %11 = load i32, i32* %arrayidx21, align 4, !dbg !7043
  %cmp22 = icmp eq i32 %9, %11, !dbg !7044
  br i1 %cmp22, label %land.lhs.true24, label %if.end35, !dbg !7045

land.lhs.true24:                                  ; preds = %if.end
  %12 = load i32*, i32** @block_to_bb, align 8, !dbg !7046
  %arrayidx28 = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !7046
  %13 = load i32, i32* %arrayidx28, align 4, !dbg !7046
  %arrayidx31 = getelementptr inbounds i32, i32* %12, i64 %idxprom20, !dbg !7047
  %14 = load i32, i32* %arrayidx31, align 4, !dbg !7047
  %cmp32 = icmp sgt i32 %13, %14, !dbg !7048
  %spec.select = zext i1 %cmp32 to i8, !dbg !7049
  br label %if.end35, !dbg !7049

if.end35:                                         ; preds = %land.lhs.true24, %if.end
  %recompute_toporder_p.0 = phi i8 [ 0, %if.end ], [ %spec.select, %land.lhs.true24 ], !dbg !7023
  call void @llvm.dbg.value(metadata i8 %recompute_toporder_p.0, metadata !7022, metadata !DIExpression()), !dbg !7023
  %call36 = tail call fastcc %struct.rtx_def* @find_new_jump(%struct.basic_block_def* %3, %struct.basic_block_def* null, i32 %call5) #8, !dbg !7050
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call36, metadata !7020, metadata !DIExpression()), !dbg !7023
  %tobool37 = icmp eq %struct.rtx_def* %call36, null, !dbg !7051
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !7053

if.then38:                                        ; preds = %if.end35
  tail call fastcc void @sel_init_new_insn(%struct.rtx_def* nonnull %call36, i32 5) #8, !dbg !7054
  br label %if.end39, !dbg !7054

if.end39:                                         ; preds = %if.end35, %if.then38
  ret i8 %recompute_toporder_p.0, !dbg !7055
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_recompute_toporder() unnamed_addr #5 !dbg !7056 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7063
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7063
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7063
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !7063
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !7063
  %conv = sext i32 %2 to i64, !dbg !7063
  %3 = alloca i32, i64 %conv, align 16, !dbg !7063
  call void @llvm.dbg.value(metadata i32* %3, metadata !7061, metadata !DIExpression()), !dbg !7064
  %call = call i32 @post_order_compute(i32* nonnull %3, i8 zeroext 0, i8 zeroext 0) #6, !dbg !7065
  call void @llvm.dbg.value(metadata i32 %call, metadata !7062, metadata !DIExpression()), !dbg !7064
  %4 = load i32*, i32** @containing_rgn, align 8, !dbg !7066
  %5 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7066
  %6 = load i32*, i32** @ebb_head, align 8, !dbg !7066
  %7 = load i32, i32* %6, align 4, !dbg !7066
  %idxprom = sext i32 %7 to i64, !dbg !7066
  %arrayidx1 = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !7066
  %8 = load i32, i32* %arrayidx1, align 4, !dbg !7066
  %idxprom2 = sext i32 %8 to i64, !dbg !7066
  %arrayidx3 = getelementptr inbounds i32, i32* %4, i64 %idxprom2, !dbg !7066
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !7066
  call void @llvm.dbg.value(metadata i32 %9, metadata !7060, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i32 0, metadata !7059, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i32 %call, metadata !7058, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7064
  %10 = sext i32 %call to i64, !dbg !7067
  br label %for.cond, !dbg !7067

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %10, %entry ], !dbg !7069
  %n.0 = phi i32 [ %n.1, %for.inc ], [ 0, %entry ], !dbg !7069
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !7069
  call void @llvm.dbg.value(metadata i32 undef, metadata !7058, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7064
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !7059, metadata !DIExpression()), !dbg !7064
  %cmp = icmp sgt i64 %indvars.iv, 0, !dbg !7070
  br i1 %cmp, label %for.body, label %for.end, !dbg !7072

for.body:                                         ; preds = %for.cond
  %11 = load i32*, i32** @containing_rgn, align 8, !dbg !7073
  %arrayidx6 = getelementptr inbounds i32, i32* %3, i64 %indvars.iv.next, !dbg !7073
  %12 = load i32, i32* %arrayidx6, align 4, !dbg !7073
  %idxprom7 = sext i32 %12 to i64, !dbg !7073
  %arrayidx8 = getelementptr inbounds i32, i32* %11, i64 %idxprom7, !dbg !7073
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !7073
  %cmp9 = icmp eq i32 %13, %9, !dbg !7075
  br i1 %cmp9, label %if.then, label %for.inc, !dbg !7076

if.then:                                          ; preds = %for.body
  %14 = load i32*, i32** @block_to_bb, align 8, !dbg !7077
  %arrayidx14 = getelementptr inbounds i32, i32* %14, i64 %idxprom7, !dbg !7077
  store i32 %n.0, i32* %arrayidx14, align 4, !dbg !7079
  %15 = load i32, i32* %arrayidx6, align 4, !dbg !7080
  %16 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7081
  %17 = load i32*, i32** @ebb_head, align 8, !dbg !7081
  %idxprom17 = sext i32 %n.0 to i64, !dbg !7081
  %arrayidx18 = getelementptr inbounds i32, i32* %17, i64 %idxprom17, !dbg !7081
  %18 = load i32, i32* %arrayidx18, align 4, !dbg !7081
  %idxprom19 = sext i32 %18 to i64, !dbg !7081
  %arrayidx20 = getelementptr inbounds i32, i32* %16, i64 %idxprom19, !dbg !7081
  store i32 %15, i32* %arrayidx20, align 4, !dbg !7082
  %inc = add nsw i32 %n.0, 1, !dbg !7083
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7059, metadata !DIExpression()), !dbg !7064
  br label %for.inc, !dbg !7084

for.inc:                                          ; preds = %for.body, %if.then
  %n.1 = phi i32 [ %inc, %if.then ], [ %n.0, %for.body ], !dbg !7069
  call void @llvm.dbg.value(metadata i32 %n.1, metadata !7059, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i32 undef, metadata !7058, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7064
  br label %for.cond, !dbg !7085, !llvm.loop !7086

for.end:                                          ; preds = %for.cond
  %n.0.lcssa = phi i32 [ %n.0, %for.cond ], !dbg !7069
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !7059, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !7059, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !7059, metadata !DIExpression()), !dbg !7064
  %19 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !7088
  %idxprom21 = sext i32 %9 to i64, !dbg !7088
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %19, i64 %idxprom21, i32 0, !dbg !7088
  %20 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !7088
  %cmp23 = icmp eq i32 %n.0.lcssa, %20, !dbg !7088
  br i1 %cmp23, label %cond.end, label %cond.true, !dbg !7088

cond.true:                                        ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3542, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7088
  br label %cond.end, !dbg !7088

cond.end:                                         ; preds = %for.end, %cond.true
  ret void, !dbg !7089
}

; Function Attrs: nounwind uwtable
define dso_local void @purge_empty_blocks() local_unnamed_addr #5 !dbg !7090 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7095
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7095
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7095
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 2, !dbg !7095
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7095
  %tobool = icmp eq %struct.VEC_basic_block_gc* %2, null, !dbg !7095
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7095

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %2, i64 0, i32 0, !dbg !7095
  br label %cond.end, !dbg !7095

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7095
  %3 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7095
  %4 = load i32*, i32** @ebb_head, align 8, !dbg !7095
  %5 = load i32, i32* %4, align 4, !dbg !7095
  %idxprom = sext i32 %5 to i64, !dbg !7095
  %arrayidx4 = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !7095
  %6 = load i32, i32* %arrayidx4, align 4, !dbg !7095
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %6) #8, !dbg !7095
  %call5 = tail call zeroext i8 @sel_is_loop_preheader_p(%struct.basic_block_def* %call) #8, !dbg !7096
  %tobool6 = icmp ne i8 %call5, 0, !dbg !7096
  %cond7 = zext i1 %tobool6 to i32, !dbg !7096
  call void @llvm.dbg.value(metadata i32 %cond7, metadata !7092, metadata !DIExpression()), !dbg !7097
  br label %while.cond, !dbg !7098

while.cond:                                       ; preds = %cond.end19, %cond.end
  %i.0 = phi i32 [ %cond7, %cond.end ], [ %i.1, %cond.end19 ], !dbg !7099
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7092, metadata !DIExpression()), !dbg !7097
  %7 = load i32, i32* @current_nr_blocks, align 4, !dbg !7100
  %cmp = icmp slt i32 %i.0, %7, !dbg !7101
  br i1 %cmp, label %while.body, label %while.end, !dbg !7098

while.body:                                       ; preds = %while.cond
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7102
  %cfg10 = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 1, !dbg !7102
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg10, align 8, !dbg !7102
  %x_basic_block_info11 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 2, !dbg !7102
  %10 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info11, align 8, !dbg !7102
  %tobool12 = icmp eq %struct.VEC_basic_block_gc* %10, null, !dbg !7102
  br i1 %tobool12, label %cond.end19, label %cond.true13, !dbg !7102

cond.true13:                                      ; preds = %while.body
  %base17 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %10, i64 0, i32 0, !dbg !7102
  br label %cond.end19, !dbg !7102

cond.end19:                                       ; preds = %while.body, %cond.true13
  %cond20 = phi %struct.VEC_basic_block_base* [ %base17, %cond.true13 ], [ null, %while.body ], !dbg !7102
  %11 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7102
  %12 = load i32*, i32** @ebb_head, align 8, !dbg !7102
  %idxprom21 = zext i32 %i.0 to i64, !dbg !7102
  %arrayidx22 = getelementptr inbounds i32, i32* %12, i64 %idxprom21, !dbg !7102
  %13 = load i32, i32* %arrayidx22, align 4, !dbg !7102
  %idxprom23 = sext i32 %13 to i64, !dbg !7102
  %arrayidx24 = getelementptr inbounds i32, i32* %11, i64 %idxprom23, !dbg !7102
  %14 = load i32, i32* %arrayidx24, align 4, !dbg !7102
  %call25 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond20, i32 %14) #8, !dbg !7102
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call25, metadata !7093, metadata !DIExpression()), !dbg !7103
  %call26 = tail call fastcc zeroext i8 @maybe_tidy_empty_bb(%struct.basic_block_def* %call25, i8 zeroext 0) #8, !dbg !7104
  %tobool27 = icmp eq i8 %call26, 0, !dbg !7104
  %inc = zext i1 %tobool27 to i32, !dbg !7106
  %i.1 = add nuw nsw i32 %i.0, %inc, !dbg !7106
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !7092, metadata !DIExpression()), !dbg !7097
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7107
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sel_is_loop_preheader_p(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !7108 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7110, metadata !DIExpression()), !dbg !7114
  %0 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7115
  %tobool = icmp eq %struct.loop* %0, null, !dbg !7115
  br i1 %tobool, label %if.end25, label %if.then, !dbg !7116

if.then:                                          ; preds = %entry
  %1 = load i8, i8* @preheader_removed, align 1, !dbg !7117
  %tobool1 = icmp eq i8 %1, 0, !dbg !7117
  br i1 %tobool1, label %if.end, label %cleanup, !dbg !7119

if.end:                                           ; preds = %if.then
  %2 = load i32*, i32** @block_to_bb, align 8, !dbg !7120
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !7120
  %3 = load i32, i32* %index, align 8, !dbg !7120
  %idxprom = sext i32 %3 to i64, !dbg !7120
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !7120
  %4 = load i32, i32* %arrayidx, align 4, !dbg !7120
  %cmp = icmp eq i32 %4, 0, !dbg !7122
  br i1 %cmp, label %cleanup, label %if.end4, !dbg !7123

if.end4:                                          ; preds = %if.end
  %header = getelementptr inbounds %struct.loop, %struct.loop* %0, i64 0, i32 2, !dbg !7124
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !7124
  %call = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %5) #8, !dbg !7126
  %tobool5 = icmp eq i8 %call, 0, !dbg !7126
  br i1 %tobool5, label %if.end15, label %if.then6, !dbg !7127

if.then6:                                         ; preds = %if.end4
  %6 = load i32*, i32** @block_to_bb, align 8, !dbg !7128
  %7 = load i32, i32* %index, align 8, !dbg !7128
  %idxprom8 = sext i32 %7 to i64, !dbg !7128
  %arrayidx9 = getelementptr inbounds i32, i32* %6, i64 %idxprom8, !dbg !7128
  %8 = load i32, i32* %arrayidx9, align 4, !dbg !7128
  %9 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7128
  %header10 = getelementptr inbounds %struct.loop, %struct.loop* %9, i64 0, i32 2, !dbg !7128
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %header10, align 8, !dbg !7128
  %index11 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i64 0, i32 9, !dbg !7128
  %11 = load i32, i32* %index11, align 8, !dbg !7128
  %idxprom12 = sext i32 %11 to i64, !dbg !7128
  %arrayidx13 = getelementptr inbounds i32, i32* %6, i64 %idxprom12, !dbg !7128
  %12 = load i32, i32* %arrayidx13, align 4, !dbg !7128
  %cmp14 = icmp slt i32 %8, %12, !dbg !7128
  br i1 %cmp14, label %cond.true, label %if.end15, !dbg !7128

cond.true:                                        ; preds = %if.then6
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 6087, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7128
  br label %if.end15, !dbg !7128

if.end15:                                         ; preds = %if.end4, %cond.true, %if.then6
  %13 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7129
  %call16 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %13) #8, !dbg !7131
  call void @llvm.dbg.value(metadata %struct.loop* %call16, metadata !7111, metadata !DIExpression()), !dbg !7132
  br label %for.cond, !dbg !7133

for.cond:                                         ; preds = %for.inc, %if.end15
  %outer.0 = phi %struct.loop* [ %call16, %if.end15 ], [ %call24, %for.inc ], !dbg !7134
  call void @llvm.dbg.value(metadata %struct.loop* %outer.0, metadata !7111, metadata !DIExpression()), !dbg !7132
  %tobool17 = icmp eq %struct.loop* %outer.0, null, !dbg !7135
  br i1 %tobool17, label %cleanup.loopexit, label %for.body, !dbg !7135

for.body:                                         ; preds = %for.cond
  %call18 = tail call zeroext i8 @considered_for_pipelining_p(%struct.loop* nonnull %outer.0) #8, !dbg !7136
  %tobool19 = icmp eq i8 %call18, 0, !dbg !7136
  br i1 %tobool19, label %for.inc, label %land.lhs.true, !dbg !7139

land.lhs.true:                                    ; preds = %for.body
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %outer.0, i64 0, i32 3, !dbg !7140
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !7140
  %cmp20 = icmp eq %struct.basic_block_def* %14, %bb, !dbg !7141
  br i1 %cmp20, label %if.then22, label %for.inc, !dbg !7142

if.then22:                                        ; preds = %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 6095, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7143
  br label %for.inc, !dbg !7143

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then22
  %call24 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* nonnull %outer.0) #8, !dbg !7144
  call void @llvm.dbg.value(metadata %struct.loop* %call24, metadata !7111, metadata !DIExpression()), !dbg !7132
  br label %for.cond, !dbg !7145, !llvm.loop !7146

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.then, %if.end
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ false, %if.end ], [ true, %cleanup.loopexit ]
  %retval.0 = phi i8 [ 0, %if.then ], [ 1, %if.end ], [ undef, %cleanup.loopexit ]
  br i1 %cleanup.dest.slot.0, label %if.end25, label %return

if.end25:                                         ; preds = %entry, %cleanup
  br label %return, !dbg !7148

return:                                           ; preds = %cleanup, %if.end25
  %retval.1 = phi i8 [ %retval.0, %cleanup ], [ 0, %if.end25 ], !dbg !7114
  ret i8 %retval.1, !dbg !7149
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !7150 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_region_bb_info_def_base* %vec_, metadata !7156, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7157, metadata !DIExpression()), !dbg !7158
  br label %land.end, !dbg !7159

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !7159
  %arrayidx = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_base, %struct.VEC_sel_region_bb_info_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7159
  ret %struct.sel_region_bb_info_def* %arrayidx, !dbg !7159
}

declare dso_local void @remove_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @get_seqno_by_preds(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !7160 {
entry:
  %preds = alloca %struct.rtx_def**, align 8
  %n = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7162, metadata !DIExpression()), !dbg !7170
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !7171
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !7171
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7171
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !7163, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7164, metadata !DIExpression()), !dbg !7170
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !7172
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7172
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7172
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 0, !dbg !7172
  %2 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !7172
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7165, metadata !DIExpression()), !dbg !7170
  %3 = bitcast %struct.rtx_def*** %preds to i8*, !dbg !7173
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !7173
  %4 = bitcast i32* %n to i8*, !dbg !7174
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7, !dbg !7174
  br label %while.cond, !dbg !7175

while.cond:                                       ; preds = %if.else, %entry
  %tmp.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %11, %if.else ], !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0, metadata !7164, metadata !DIExpression()), !dbg !7170
  %cmp = icmp eq %struct.rtx_def* %tmp.0, %2, !dbg !7176
  br i1 %cmp, label %while.end, label %while.body, !dbg !7175

while.body:                                       ; preds = %while.cond
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp.0, i64 0, i32 0, !dbg !7177
  %bf.load = load i32, i32* %5, align 8, !dbg !7177
  %bf.clear = and i32 %bf.load, 65535, !dbg !7177
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !7177
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !7177

lor.lhs.false:                                    ; preds = %while.body
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !7177
  br i1 %cmp4, label %if.then, label %lor.lhs.false5, !dbg !7177

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !7177
  br i1 %cmp8, label %if.then, label %lor.lhs.false9, !dbg !7177

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 10, !dbg !7177
  br i1 %cmp12, label %if.then, label %if.else, !dbg !7179

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %while.body
  %tmp.0.lcssa3 = phi %struct.rtx_def* [ %tmp.0, %lor.lhs.false9 ], [ %tmp.0, %lor.lhs.false5 ], [ %tmp.0, %lor.lhs.false ], [ %tmp.0, %while.body ], !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0.lcssa3, metadata !7164, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0.lcssa3, metadata !7164, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0.lcssa3, metadata !7164, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0.lcssa3, metadata !7164, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0.lcssa3, metadata !7164, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0.lcssa3, metadata !7164, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0.lcssa3, metadata !7164, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0.lcssa3, metadata !7164, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0.lcssa3, metadata !7164, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0.lcssa3, metadata !7164, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0.lcssa3, metadata !7164, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0.lcssa3, metadata !7164, metadata !DIExpression()), !dbg !7170
  %6 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7180
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %6, i64 0, i32 0, !dbg !7180
  %7 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7180
  %base15 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %7, i64 0, i32 0, !dbg !7180
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp.0.lcssa3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7180
  %rt_int = bitcast %union.rtunion_def* %arrayidx21 to i32*, !dbg !7180
  %8 = load i32, i32* %rt_int, align 8, !dbg !7180
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base15, i32 %8) #8, !dbg !7180
  %call22 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #8, !dbg !7180
  %seqno23 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call22, i64 0, i32 2, !dbg !7180
  %9 = load i32, i32* %seqno23, align 4, !dbg !7180
  br label %cleanup, !dbg !7181

if.else:                                          ; preds = %lor.lhs.false9
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7182
  %rt_rtx = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !7182
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7182
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !7164, metadata !DIExpression()), !dbg !7170
  br label %while.cond, !dbg !7175, !llvm.loop !7183

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def*** %preds, metadata !7166, metadata !DIExpression(DW_OP_deref)), !dbg !7170
  call void @llvm.dbg.value(metadata i32* %n, metadata !7167, metadata !DIExpression(DW_OP_deref)), !dbg !7170
  call fastcc void @cfg_preds(%struct.basic_block_def* %0, %struct.rtx_def*** nonnull %preds, i32* nonnull %n) #8, !dbg !7185
  call void @llvm.dbg.value(metadata i32 0, metadata !7168, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i32 -1, metadata !7169, metadata !DIExpression()), !dbg !7170
  br label %for.cond, !dbg !7186

for.cond:                                         ; preds = %for.inc, %while.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %while.end ], !dbg !7188
  %seqno.0 = phi i32 [ %cond73, %for.inc ], [ -1, %while.end ], !dbg !7188
  call void @llvm.dbg.value(metadata i32 %seqno.0, metadata !7169, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7168, metadata !DIExpression()), !dbg !7170
  %12 = load i32, i32* %n, align 4, !dbg !7189
  call void @llvm.dbg.value(metadata i32 %12, metadata !7167, metadata !DIExpression()), !dbg !7170
  %13 = sext i32 %12 to i64, !dbg !7191
  %cmp27 = icmp slt i64 %indvars.iv, %13, !dbg !7191
  br i1 %cmp27, label %for.body, label %cleanup.loopexit, !dbg !7192

for.body:                                         ; preds = %for.cond
  %14 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7193
  %base30 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %14, i64 0, i32 0, !dbg !7193
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7193
  %base36 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %15, i64 0, i32 0, !dbg !7193
  %16 = load %struct.rtx_def**, %struct.rtx_def*** %preds, align 8, !dbg !7193
  call void @llvm.dbg.value(metadata %struct.rtx_def** %16, metadata !7166, metadata !DIExpression()), !dbg !7170
  %arrayidx40 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %16, i64 %indvars.iv, !dbg !7193
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx40, align 8, !dbg !7193
  %arrayidx43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7193
  %rt_int44 = bitcast %union.rtunion_def* %arrayidx43 to i32*, !dbg !7193
  %18 = load i32, i32* %rt_int44, align 8, !dbg !7193
  %call45 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base36, i32 %18) #8, !dbg !7193
  %call46 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base30, i32 %call45) #8, !dbg !7193
  %seqno47 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call46, i64 0, i32 2, !dbg !7193
  %19 = load i32, i32* %seqno47, align 4, !dbg !7193
  %cmp48 = icmp sgt i32 %seqno.0, %19, !dbg !7193
  br i1 %cmp48, label %for.inc, label %cond.false50, !dbg !7193

cond.false50:                                     ; preds = %for.body
  %20 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7193
  %base53 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %20, i64 0, i32 0, !dbg !7193
  %21 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7193
  %base59 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %21, i64 0, i32 0, !dbg !7193
  %22 = load %struct.rtx_def**, %struct.rtx_def*** %preds, align 8, !dbg !7193
  call void @llvm.dbg.value(metadata %struct.rtx_def** %22, metadata !7166, metadata !DIExpression()), !dbg !7170
  %arrayidx64 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %22, i64 %indvars.iv, !dbg !7193
  %23 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx64, align 8, !dbg !7193
  %arrayidx67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7193
  %rt_int68 = bitcast %union.rtunion_def* %arrayidx67 to i32*, !dbg !7193
  %24 = load i32, i32* %rt_int68, align 8, !dbg !7193
  %call69 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base59, i32 %24) #8, !dbg !7193
  %call70 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base53, i32 %call69) #8, !dbg !7193
  %seqno71 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call70, i64 0, i32 2, !dbg !7193
  %25 = load i32, i32* %seqno71, align 4, !dbg !7193
  br label %for.inc, !dbg !7193

for.inc:                                          ; preds = %cond.false50, %for.body
  %cond73 = phi i32 [ %25, %cond.false50 ], [ %seqno.0, %for.body ], !dbg !7193
  call void @llvm.dbg.value(metadata i32 %cond73, metadata !7169, metadata !DIExpression()), !dbg !7170
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7194
  call void @llvm.dbg.value(metadata i32 undef, metadata !7168, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7170
  br label %for.cond, !dbg !7195, !llvm.loop !7196

cleanup.loopexit:                                 ; preds = %for.cond
  %seqno.0.lcssa = phi i32 [ %seqno.0, %for.cond ], !dbg !7188
  call void @llvm.dbg.value(metadata i32 %seqno.0.lcssa, metadata !7169, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i32 %seqno.0.lcssa, metadata !7169, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i32 %seqno.0.lcssa, metadata !7169, metadata !DIExpression()), !dbg !7170
  br label %cleanup, !dbg !7198

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi i32 [ %9, %if.then ], [ %seqno.0.lcssa, %cleanup.loopexit ], !dbg !7170
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7, !dbg !7198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !7198
  ret i32 %retval.0, !dbg !7198
}

; Function Attrs: nounwind uwtable
define internal fastcc void @cfg_preds(%struct.basic_block_def* %bb, %struct.rtx_def*** %preds, i32* %n) unnamed_addr #5 !dbg !7199 {
entry:
  %size = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7204, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata %struct.rtx_def*** %preds, metadata !7205, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i32* %n, metadata !7206, metadata !DIExpression()), !dbg !7208
  %0 = bitcast i32* %size to i8*, !dbg !7209
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !7209
  call void @llvm.dbg.value(metadata i32 0, metadata !7207, metadata !DIExpression()), !dbg !7208
  store i32 0, i32* %size, align 4, !dbg !7210
  store %struct.rtx_def** null, %struct.rtx_def*** %preds, align 8, !dbg !7211
  store i32 0, i32* %n, align 4, !dbg !7212
  call void @llvm.dbg.value(metadata i32* %size, metadata !7207, metadata !DIExpression(DW_OP_deref)), !dbg !7208
  call fastcc void @cfg_preds_1(%struct.basic_block_def* %bb, %struct.rtx_def*** %preds, i32* %n, i32* nonnull %size) #8, !dbg !7213
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !7214
  ret void, !dbg !7214
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_extend_global_bb_info() local_unnamed_addr #5 !dbg !7215 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7216
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7216
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7216
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !7216
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !7216
  tail call fastcc void @VEC_sel_global_bb_info_def_heap_safe_grow_cleared(%struct.VEC_sel_global_bb_info_def_heap** nonnull @sel_global_bb_info, i32 %2) #8, !dbg !7216
  ret void, !dbg !7217
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_sel_global_bb_info_def_heap_safe_grow_cleared(%struct.VEC_sel_global_bb_info_def_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !7218 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, metadata !7223, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata i32 %size_, metadata !7224, metadata !DIExpression()), !dbg !7226
  %0 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7227
  %tobool = icmp eq %struct.VEC_sel_global_bb_info_def_heap* %0, null, !dbg !7227
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7227

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %0, i64 0, i32 0, !dbg !7227
  br label %cond.end, !dbg !7227

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_sel_global_bb_info_def_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7227
  %call = tail call fastcc i32 @VEC_sel_global_bb_info_def_base_length(%struct.VEC_sel_global_bb_info_def_base* %cond) #8, !dbg !7227
  call void @llvm.dbg.value(metadata i32 %call, metadata !7225, metadata !DIExpression()), !dbg !7226
  tail call fastcc void @VEC_sel_global_bb_info_def_heap_safe_grow(%struct.VEC_sel_global_bb_info_def_heap** nonnull @sel_global_bb_info, i32 %size_) #8, !dbg !7227
  %1 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7227
  %tobool1 = icmp eq %struct.VEC_sel_global_bb_info_def_heap* %1, null, !dbg !7227
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !7227

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %1, i64 0, i32 0, !dbg !7227
  br label %cond.end5, !dbg !7227

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !7227
  %call7 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_address(%struct.VEC_sel_global_bb_info_def_base* %cond6) #8, !dbg !7227
  %idxprom = sext i32 %call to i64, !dbg !7227
  %arrayidx = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call7, i64 %idxprom, !dbg !7227
  %2 = bitcast %struct.sel_global_bb_info_def* %arrayidx to i8*, !dbg !7227
  %sub = sub nsw i32 %size_, %call, !dbg !7227
  %conv = sext i32 %sub to i64, !dbg !7227
  %mul = shl nsw i64 %conv, 4, !dbg !7227
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !7227
  ret void, !dbg !7227
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_finish_global_bb_info() local_unnamed_addr #5 !dbg !7228 {
entry:
  tail call fastcc void @VEC_sel_global_bb_info_def_heap_free(%struct.VEC_sel_global_bb_info_def_heap** nonnull @sel_global_bb_info) #8, !dbg !7229
  ret void, !dbg !7230
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_sel_global_bb_info_def_heap_free(%struct.VEC_sel_global_bb_info_def_heap** %vec_) unnamed_addr #0 !dbg !7231 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, metadata !7235, metadata !DIExpression()), !dbg !7236
  %0 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7237
  %tobool = icmp eq %struct.VEC_sel_global_bb_info_def_heap* %0, null, !dbg !7237
  br i1 %tobool, label %if.end, label %if.then, !dbg !7239

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_sel_global_bb_info_def_heap* %0 to i8*, !dbg !7239
  tail call void @free(i8* nonnull %1) #6, !dbg !7237
  br label %if.end, !dbg !7237

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_sel_global_bb_info_def_heap* null, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7239
  ret void, !dbg !7239
}

; Function Attrs: nounwind uwtable
define dso_local void @init_lv_sets() local_unnamed_addr #5 !dbg !7240 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7243
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7243
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7243
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !7243
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7243
  br label %for.cond, !dbg !7243

for.cond:                                         ; preds = %for.body, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.body ], !dbg !7245
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.body ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !7247
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !7247
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !7242, metadata !DIExpression()), !dbg !7248
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !7245
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7245
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !7245
  br i1 %cmp, label %for.end, label %for.body, !dbg !7243

for.body:                                         ; preds = %for.cond
  tail call fastcc void @init_lv_set(%struct.basic_block_def* %bb.0) #8, !dbg !7249
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7245
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !7250
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !7245
  br label %for.cond, !dbg !7245, !llvm.loop !7251

for.end:                                          ; preds = %for.cond
  %bb.0.lcssa = phi %struct.basic_block_def* [ %bb.0, %for.cond ], !dbg !7247
  tail call fastcc void @init_lv_set(%struct.basic_block_def* %bb.0.lcssa) #8, !dbg !7253
  ret void, !dbg !7254
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_lv_set(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !7255 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7257, metadata !DIExpression()), !dbg !7258
  %0 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7259
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %0, i64 0, i32 0, !dbg !7259
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !7259
  %1 = load i32, i32* %index, align 8, !dbg !7259
  %call = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base, i32 %1) #8, !dbg !7259
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call, i64 0, i32 1, !dbg !7259
  %2 = load i8, i8* %lv_set_valid_p, align 8, !dbg !7259
  %tobool1 = icmp eq i8 %2, 0, !dbg !7259
  br i1 %tobool1, label %cond.end4, label %cond.true2, !dbg !7259

cond.true2:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4093, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7259
  br label %cond.end4, !dbg !7259

cond.end4:                                        ; preds = %entry, %cond.true2
  %call6 = tail call %struct.bitmap_head_def* @get_regset_from_pool() #8, !dbg !7260
  %3 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7261
  %base9 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %3, i64 0, i32 0, !dbg !7261
  %4 = load i32, i32* %index, align 8, !dbg !7261
  %call14 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base9, i32 %4) #8, !dbg !7261
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call14, i64 0, i32 0, !dbg !7261
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** %lv_set, align 8, !dbg !7262
  %5 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7263
  %base17 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %5, i64 0, i32 0, !dbg !7263
  %6 = load i32, i32* %index, align 8, !dbg !7263
  %call22 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base17, i32 %6) #8, !dbg !7263
  %lv_set23 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call22, i64 0, i32 0, !dbg !7263
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set23, align 8, !dbg !7263
  %8 = load i32, i32* %index, align 8, !dbg !7263
  %call25 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %8) #8, !dbg !7263
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call25, i64 0, i32 2, !dbg !7263
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7263
  tail call void @bitmap_copy(%struct.bitmap_head_def* %7, %struct.bitmap_head_def* %9) #6, !dbg !7263
  %10 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7264
  %base28 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %10, i64 0, i32 0, !dbg !7264
  %11 = load i32, i32* %index, align 8, !dbg !7264
  %call33 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base28, i32 %11) #8, !dbg !7264
  %lv_set_valid_p34 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call33, i64 0, i32 1, !dbg !7264
  store i8 1, i8* %lv_set_valid_p34, align 8, !dbg !7265
  ret void, !dbg !7266
}

; Function Attrs: nounwind uwtable
define dso_local void @free_lv_sets() local_unnamed_addr #5 !dbg !7267 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7270
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7270
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7270
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !7270
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7270
  tail call fastcc void @free_lv_set(%struct.basic_block_def* %2) #8, !dbg !7271
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7272
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !7272
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !7272
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !7272
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7272
  br label %for.cond, !dbg !7272

for.cond:                                         ; preds = %for.inc, %entry
  %6 = phi %struct.control_flow_graph* [ %4, %entry ], [ %.pre1, %for.inc ], !dbg !7274
  %.pn = phi %struct.basic_block_def* [ %5, %entry ], [ %bb.0, %for.inc ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !7276
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !7276
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !7269, metadata !DIExpression()), !dbg !7277
  %x_exit_block_ptr5 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 1, !dbg !7274
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr5, align 8, !dbg !7274
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %7, !dbg !7274
  br i1 %cmp, label %for.end, label %for.body, !dbg !7272

for.body:                                         ; preds = %for.cond
  %8 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7278
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %8, i64 0, i32 0, !dbg !7278
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !7278
  %9 = load i32, i32* %index, align 8, !dbg !7278
  %call = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base, i32 %9) #8, !dbg !7278
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call, i64 0, i32 0, !dbg !7278
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !7278
  %tobool6 = icmp eq %struct.bitmap_head_def* %10, null, !dbg !7278
  br i1 %tobool6, label %for.inc, label %if.then, !dbg !7280

if.then:                                          ; preds = %for.body
  tail call fastcc void @free_lv_set(%struct.basic_block_def* %bb.0) #8, !dbg !7281
  br label %for.inc, !dbg !7281

for.inc:                                          ; preds = %for.body, %if.then
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7274
  %cfg4.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !7282
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4.phi.trans.insert, align 8, !dbg !7274
  br label %for.cond, !dbg !7274, !llvm.loop !7283

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7285
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_lv_set(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !7286 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7288, metadata !DIExpression()), !dbg !7289
  %0 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7290
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %0, i64 0, i32 0, !dbg !7290
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !7290
  %1 = load i32, i32* %index, align 8, !dbg !7290
  %call = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base, i32 %1) #8, !dbg !7290
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call, i64 0, i32 0, !dbg !7290
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !7290
  %cmp = icmp eq %struct.bitmap_head_def* %2, null, !dbg !7290
  br i1 %cmp, label %cond.true1, label %cond.end3, !dbg !7290

cond.true1:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4128, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7290
  br label %cond.end3, !dbg !7290

cond.end3:                                        ; preds = %entry, %cond.true1
  %3 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7291
  %base7 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %3, i64 0, i32 0, !dbg !7291
  %4 = load i32, i32* %index, align 8, !dbg !7291
  %call12 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base7, i32 %4) #8, !dbg !7291
  %lv_set13 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call12, i64 0, i32 0, !dbg !7291
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set13, align 8, !dbg !7291
  tail call void @return_regset_to_pool(%struct.bitmap_head_def* %5) #8, !dbg !7292
  %6 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7293
  %base16 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %6, i64 0, i32 0, !dbg !7293
  %7 = load i32, i32* %index, align 8, !dbg !7293
  %call21 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base16, i32 %7) #8, !dbg !7293
  %lv_set22 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call21, i64 0, i32 0, !dbg !7293
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %lv_set22, align 8, !dbg !7294
  %8 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7295
  %base25 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %8, i64 0, i32 0, !dbg !7295
  %9 = load i32, i32* %index, align 8, !dbg !7295
  %call30 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base25, i32 %9) #8, !dbg !7295
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call30, i64 0, i32 1, !dbg !7295
  store i8 0, i8* %lv_set_valid_p, align 8, !dbg !7296
  ret void, !dbg !7297
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !7298 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_global_bb_info_def_base* %vec_, metadata !7304, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7305, metadata !DIExpression()), !dbg !7306
  br label %land.end, !dbg !7307

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !7307
  %arrayidx = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_base, %struct.VEC_sel_global_bb_info_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7307
  ret %struct.sel_global_bb_info_def* %arrayidx, !dbg !7307
}

; Function Attrs: nounwind uwtable
define dso_local void @free_data_sets(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !7308 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7310, metadata !DIExpression()), !dbg !7311
  tail call fastcc void @free_lv_set(%struct.basic_block_def* %bb) #8, !dbg !7312
  tail call fastcc void @free_av_set(%struct.basic_block_def* %bb) #8, !dbg !7313
  ret void, !dbg !7314
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_av_set(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !7315 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7317, metadata !DIExpression()), !dbg !7318
  %0 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7319
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %0, i64 0, i32 0, !dbg !7319
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !7319
  %1 = load i32, i32* %index, align 8, !dbg !7319
  %call = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %1) #8, !dbg !7319
  %av_set = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call, i64 0, i32 1, !dbg !7319
  tail call void @av_set_clear(%struct._list_node** nonnull %av_set) #8, !dbg !7320
  %2 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7321
  %base3 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %2, i64 0, i32 0, !dbg !7321
  %3 = load i32, i32* %index, align 8, !dbg !7321
  %call8 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base3, i32 %3) #8, !dbg !7321
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call8, i64 0, i32 2, !dbg !7321
  store i32 0, i32* %av_level, align 8, !dbg !7322
  ret void, !dbg !7323
}

; Function Attrs: nounwind uwtable
define dso_local void @exchange_data_sets(%struct.basic_block_def* %to, %struct.basic_block_def* %from) local_unnamed_addr #5 !dbg !7324 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %to, metadata !7326, metadata !DIExpression()), !dbg !7328
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %from, metadata !7327, metadata !DIExpression()), !dbg !7328
  tail call fastcc void @exchange_lv_sets(%struct.basic_block_def* %to, %struct.basic_block_def* %from) #8, !dbg !7329
  tail call fastcc void @exchange_av_sets(%struct.basic_block_def* %to, %struct.basic_block_def* %from) #8, !dbg !7330
  ret void, !dbg !7331
}

; Function Attrs: nounwind uwtable
define internal fastcc void @exchange_lv_sets(%struct.basic_block_def* %to, %struct.basic_block_def* %from) unnamed_addr #5 !dbg !7332 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %to, metadata !7334, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %from, metadata !7335, metadata !DIExpression()), !dbg !7340
  %0 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7341
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %0, i64 0, i32 0, !dbg !7341
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %to, i64 0, i32 9, !dbg !7341
  %1 = load i32, i32* %index, align 8, !dbg !7341
  %call = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base, i32 %1) #8, !dbg !7341
  %2 = bitcast %struct.sel_global_bb_info_def* %call to i64*, !dbg !7341
  %3 = load i64, i64* %2, align 8, !dbg !7341
  %4 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7342
  %base3 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %4, i64 0, i32 0, !dbg !7342
  %index7 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %from, i64 0, i32 9, !dbg !7342
  %5 = load i32, i32* %index7, align 8, !dbg !7342
  %call8 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base3, i32 %5) #8, !dbg !7342
  %6 = bitcast %struct.sel_global_bb_info_def* %call8 to i64*, !dbg !7342
  %7 = load i64, i64* %6, align 8, !dbg !7342
  %8 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7343
  %base12 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %8, i64 0, i32 0, !dbg !7343
  %9 = load i32, i32* %index, align 8, !dbg !7343
  %call17 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base12, i32 %9) #8, !dbg !7343
  %10 = bitcast %struct.sel_global_bb_info_def* %call17 to i64*, !dbg !7344
  store i64 %7, i64* %10, align 8, !dbg !7344
  %11 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7345
  %base21 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %11, i64 0, i32 0, !dbg !7345
  %12 = load i32, i32* %index7, align 8, !dbg !7345
  %call26 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base21, i32 %12) #8, !dbg !7345
  %13 = bitcast %struct.sel_global_bb_info_def* %call26 to i64*, !dbg !7346
  store i64 %3, i64* %13, align 8, !dbg !7346
  %14 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7347
  %base30 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %14, i64 0, i32 0, !dbg !7347
  %15 = load i32, i32* %index, align 8, !dbg !7347
  %call35 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base30, i32 %15) #8, !dbg !7347
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call35, i64 0, i32 1, !dbg !7347
  %16 = load i8, i8* %lv_set_valid_p, align 8, !dbg !7347
  call void @llvm.dbg.value(metadata i8 %16, metadata !7338, metadata !DIExpression()), !dbg !7348
  %17 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7349
  %base38 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %17, i64 0, i32 0, !dbg !7349
  %18 = load i32, i32* %index7, align 8, !dbg !7349
  %call43 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base38, i32 %18) #8, !dbg !7349
  %lv_set_valid_p44 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call43, i64 0, i32 1, !dbg !7349
  %19 = load i8, i8* %lv_set_valid_p44, align 8, !dbg !7349
  %20 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7350
  %base47 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %20, i64 0, i32 0, !dbg !7350
  %21 = load i32, i32* %index, align 8, !dbg !7350
  %call52 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base47, i32 %21) #8, !dbg !7350
  %lv_set_valid_p53 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call52, i64 0, i32 1, !dbg !7350
  store i8 %19, i8* %lv_set_valid_p53, align 8, !dbg !7351
  %22 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7352
  %base56 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %22, i64 0, i32 0, !dbg !7352
  %23 = load i32, i32* %index7, align 8, !dbg !7352
  %call61 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base56, i32 %23) #8, !dbg !7352
  %lv_set_valid_p62 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call61, i64 0, i32 1, !dbg !7352
  store i8 %16, i8* %lv_set_valid_p62, align 8, !dbg !7353
  ret void, !dbg !7354
}

; Function Attrs: nounwind uwtable
define internal fastcc void @exchange_av_sets(%struct.basic_block_def* %to, %struct.basic_block_def* %from) unnamed_addr #5 !dbg !7355 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %to, metadata !7357, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %from, metadata !7358, metadata !DIExpression()), !dbg !7363
  %0 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7364
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %0, i64 0, i32 0, !dbg !7364
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %to, i64 0, i32 9, !dbg !7364
  %1 = load i32, i32* %index, align 8, !dbg !7364
  %call = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %1) #8, !dbg !7364
  %av_set = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call, i64 0, i32 1, !dbg !7364
  %2 = bitcast %struct._list_node** %av_set to i64*, !dbg !7364
  %3 = load i64, i64* %2, align 8, !dbg !7364
  %4 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7365
  %base3 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %4, i64 0, i32 0, !dbg !7365
  %index7 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %from, i64 0, i32 9, !dbg !7365
  %5 = load i32, i32* %index7, align 8, !dbg !7365
  %call8 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base3, i32 %5) #8, !dbg !7365
  %av_set9 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call8, i64 0, i32 1, !dbg !7365
  %6 = bitcast %struct._list_node** %av_set9 to i64*, !dbg !7365
  %7 = load i64, i64* %6, align 8, !dbg !7365
  %8 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7366
  %base12 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %8, i64 0, i32 0, !dbg !7366
  %9 = load i32, i32* %index, align 8, !dbg !7366
  %call17 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base12, i32 %9) #8, !dbg !7366
  %av_set18 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call17, i64 0, i32 1, !dbg !7366
  %10 = bitcast %struct._list_node** %av_set18 to i64*, !dbg !7367
  store i64 %7, i64* %10, align 8, !dbg !7367
  %11 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7368
  %base21 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %11, i64 0, i32 0, !dbg !7368
  %12 = load i32, i32* %index7, align 8, !dbg !7368
  %call26 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base21, i32 %12) #8, !dbg !7368
  %av_set27 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call26, i64 0, i32 1, !dbg !7368
  %13 = bitcast %struct._list_node** %av_set27 to i64*, !dbg !7369
  store i64 %3, i64* %13, align 8, !dbg !7369
  %14 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7370
  %base30 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %14, i64 0, i32 0, !dbg !7370
  %15 = load i32, i32* %index, align 8, !dbg !7370
  %call35 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base30, i32 %15) #8, !dbg !7370
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call35, i64 0, i32 2, !dbg !7370
  %16 = load i32, i32* %av_level, align 8, !dbg !7370
  call void @llvm.dbg.value(metadata i32 %16, metadata !7361, metadata !DIExpression()), !dbg !7371
  %17 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7372
  %base38 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %17, i64 0, i32 0, !dbg !7372
  %18 = load i32, i32* %index7, align 8, !dbg !7372
  %call43 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base38, i32 %18) #8, !dbg !7372
  %av_level44 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call43, i64 0, i32 2, !dbg !7372
  %19 = load i32, i32* %av_level44, align 8, !dbg !7372
  %20 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7373
  %base47 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %20, i64 0, i32 0, !dbg !7373
  %21 = load i32, i32* %index, align 8, !dbg !7373
  %call52 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base47, i32 %21) #8, !dbg !7373
  %av_level53 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call52, i64 0, i32 2, !dbg !7373
  store i32 %19, i32* %av_level53, align 8, !dbg !7374
  %22 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7375
  %base56 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %22, i64 0, i32 0, !dbg !7375
  %23 = load i32, i32* %index7, align 8, !dbg !7375
  %call61 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base56, i32 %23) #8, !dbg !7375
  %av_level62 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call61, i64 0, i32 2, !dbg !7375
  store i32 %16, i32* %av_level62, align 8, !dbg !7376
  ret void, !dbg !7377
}

; Function Attrs: nounwind uwtable
define dso_local void @copy_data_sets(%struct.basic_block_def* %to, %struct.basic_block_def* %from) local_unnamed_addr #5 !dbg !7378 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %to, metadata !7380, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %from, metadata !7381, metadata !DIExpression()), !dbg !7382
  %0 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7383
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %0, i64 0, i32 0, !dbg !7383
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %to, i64 0, i32 9, !dbg !7383
  %1 = load i32, i32* %index, align 8, !dbg !7383
  %call = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base, i32 %1) #8, !dbg !7383
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call, i64 0, i32 1, !dbg !7383
  %2 = load i8, i8* %lv_set_valid_p, align 8, !dbg !7383
  %tobool1 = icmp eq i8 %2, 0, !dbg !7383
  br i1 %tobool1, label %land.lhs.true, label %cond.true10, !dbg !7383

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7383
  %base4 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %3, i64 0, i32 0, !dbg !7383
  %4 = load i32, i32* %index, align 8, !dbg !7383
  %call9 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base4, i32 %4) #8, !dbg !7383
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call9, i64 0, i32 2, !dbg !7383
  %5 = load i32, i32* %av_level, align 8, !dbg !7383
  %6 = load i32, i32* @global_level, align 4, !dbg !7383
  %cmp = icmp eq i32 %5, %6, !dbg !7383
  br i1 %cmp, label %cond.true10, label %cond.end12, !dbg !7383

cond.true10:                                      ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4239, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7383
  br label %cond.end12, !dbg !7383

cond.end12:                                       ; preds = %land.lhs.true, %cond.true10
  %7 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7384
  %base16 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %7, i64 0, i32 0, !dbg !7384
  %8 = load i32, i32* %index, align 8, !dbg !7384
  %call21 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base16, i32 %8) #8, !dbg !7384
  %av_set = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call21, i64 0, i32 1, !dbg !7384
  %9 = load %struct._list_node*, %struct._list_node** %av_set, align 8, !dbg !7384
  %cmp22 = icmp eq %struct._list_node* %9, null, !dbg !7384
  br i1 %cmp22, label %cond.end25, label %cond.true23, !dbg !7384

cond.true23:                                      ; preds = %cond.end12
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4240, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7384
  br label %cond.end25, !dbg !7384

cond.end25:                                       ; preds = %cond.end12, %cond.true23
  %10 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7385
  %base29 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %10, i64 0, i32 0, !dbg !7385
  %index33 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %from, i64 0, i32 9, !dbg !7385
  %11 = load i32, i32* %index33, align 8, !dbg !7385
  %call34 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base29, i32 %11) #8, !dbg !7385
  %av_level35 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call34, i64 0, i32 2, !dbg !7385
  %12 = load i32, i32* %av_level35, align 8, !dbg !7385
  %13 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7386
  %base38 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %13, i64 0, i32 0, !dbg !7386
  %14 = load i32, i32* %index, align 8, !dbg !7386
  %call43 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base38, i32 %14) #8, !dbg !7386
  %av_level44 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call43, i64 0, i32 2, !dbg !7386
  store i32 %12, i32* %av_level44, align 8, !dbg !7387
  %15 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7388
  %base47 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %15, i64 0, i32 0, !dbg !7388
  %16 = load i32, i32* %index33, align 8, !dbg !7388
  %call52 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base47, i32 %16) #8, !dbg !7388
  %lv_set_valid_p53 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call52, i64 0, i32 1, !dbg !7388
  %17 = load i8, i8* %lv_set_valid_p53, align 8, !dbg !7388
  %18 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7389
  %base56 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %18, i64 0, i32 0, !dbg !7389
  %19 = load i32, i32* %index, align 8, !dbg !7389
  %call61 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base56, i32 %19) #8, !dbg !7389
  %lv_set_valid_p62 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call61, i64 0, i32 1, !dbg !7389
  store i8 %17, i8* %lv_set_valid_p62, align 8, !dbg !7390
  %20 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7391
  %base65 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %20, i64 0, i32 0, !dbg !7391
  %21 = load i32, i32* %index33, align 8, !dbg !7391
  %call70 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base65, i32 %21) #8, !dbg !7391
  %av_level71 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call70, i64 0, i32 2, !dbg !7391
  %22 = load i32, i32* %av_level71, align 8, !dbg !7391
  %23 = load i32, i32* @global_level, align 4, !dbg !7391
  %cmp72 = icmp eq i32 %22, %23, !dbg !7391
  br i1 %cmp72, label %if.then, label %if.end, !dbg !7393

if.then:                                          ; preds = %cond.end25
  %24 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7394
  %base75 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %24, i64 0, i32 0, !dbg !7394
  %25 = load i32, i32* %index33, align 8, !dbg !7394
  %call80 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base75, i32 %25) #8, !dbg !7394
  %av_set81 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call80, i64 0, i32 1, !dbg !7394
  %26 = load %struct._list_node*, %struct._list_node** %av_set81, align 8, !dbg !7394
  %call82 = tail call %struct._list_node* @av_set_copy(%struct._list_node* %26) #8, !dbg !7396
  %27 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7397
  %base85 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %27, i64 0, i32 0, !dbg !7397
  %28 = load i32, i32* %index, align 8, !dbg !7397
  %call90 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base85, i32 %28) #8, !dbg !7397
  %av_set91 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call90, i64 0, i32 1, !dbg !7397
  store %struct._list_node* %call82, %struct._list_node** %av_set91, align 8, !dbg !7398
  br label %if.end, !dbg !7399

if.end:                                           ; preds = %if.then, %cond.end25
  %29 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7400
  %base94 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %29, i64 0, i32 0, !dbg !7400
  %30 = load i32, i32* %index33, align 8, !dbg !7400
  %call99 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base94, i32 %30) #8, !dbg !7400
  %lv_set_valid_p100 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call99, i64 0, i32 1, !dbg !7400
  %31 = load i8, i8* %lv_set_valid_p100, align 8, !dbg !7400
  %tobool101 = icmp eq i8 %31, 0, !dbg !7400
  br i1 %tobool101, label %if.end134, label %if.then102, !dbg !7402

if.then102:                                       ; preds = %if.end
  %32 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7403
  %base105 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %32, i64 0, i32 0, !dbg !7403
  %33 = load i32, i32* %index, align 8, !dbg !7403
  %call110 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base105, i32 %33) #8, !dbg !7403
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call110, i64 0, i32 0, !dbg !7403
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !7403
  %cmp111 = icmp eq %struct.bitmap_head_def* %34, null, !dbg !7403
  br i1 %cmp111, label %cond.true112, label %cond.end114, !dbg !7403

cond.true112:                                     ; preds = %if.then102
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4251, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7403
  br label %cond.end114, !dbg !7403

cond.end114:                                      ; preds = %if.then102, %cond.true112
  %35 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7405
  %base118 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %35, i64 0, i32 0, !dbg !7405
  %36 = load i32, i32* %index, align 8, !dbg !7405
  %call123 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base118, i32 %36) #8, !dbg !7405
  %lv_set124 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call123, i64 0, i32 0, !dbg !7405
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set124, align 8, !dbg !7405
  %38 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !7405
  %base127 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %38, i64 0, i32 0, !dbg !7405
  %39 = load i32, i32* %index33, align 8, !dbg !7405
  %call132 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base127, i32 %39) #8, !dbg !7405
  %lv_set133 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call132, i64 0, i32 0, !dbg !7405
  %40 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set133, align 8, !dbg !7405
  tail call void @bitmap_copy(%struct.bitmap_head_def* %37, %struct.bitmap_head_def* %40) #6, !dbg !7405
  br label %if.end134, !dbg !7406

if.end134:                                        ; preds = %if.end, %cond.end114
  ret void, !dbg !7407
}

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct._list_node* @get_av_set(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !7408 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7412, metadata !DIExpression()), !dbg !7414
  %call = tail call i32 @get_av_level(%struct.rtx_def* %insn) #8, !dbg !7415
  %0 = load i32, i32* @global_level, align 4, !dbg !7415
  %cmp = icmp eq i32 %call, %0, !dbg !7415
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7415

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4262, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7415
  br label %cond.end, !dbg !7415

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) #8, !dbg !7416
  %tobool = icmp eq i8 %call1, 0, !dbg !7416
  br i1 %tobool, label %if.end, label %if.then, !dbg !7418

if.then:                                          ; preds = %cond.end
  %1 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7419
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %1, i64 0, i32 0, !dbg !7419
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !7419
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !7419
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7419
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 9, !dbg !7419
  %3 = load i32, i32* %index, align 8, !dbg !7419
  %call7 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %3) #8, !dbg !7419
  %av_set8 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call7, i64 0, i32 1, !dbg !7419
  %4 = load %struct._list_node*, %struct._list_node** %av_set8, align 8, !dbg !7419
  call void @llvm.dbg.value(metadata %struct._list_node* %4, metadata !7413, metadata !DIExpression()), !dbg !7414
  br label %if.end, !dbg !7420

if.end:                                           ; preds = %cond.end, %if.then
  %av_set.0 = phi %struct._list_node* [ %4, %if.then ], [ null, %cond.end ], !dbg !7421
  call void @llvm.dbg.value(metadata %struct._list_node* %av_set.0, metadata !7413, metadata !DIExpression()), !dbg !7414
  ret %struct._list_node* %av_set.0, !dbg !7422
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_av_level(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !7423 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7427, metadata !DIExpression()), !dbg !7429
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !7430
  %bf.load = load i32, i32* %0, align 8, !dbg !7430
  %bf.clear = and i32 %bf.load, 65535, !dbg !7430
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !7430
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !7430

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !7430
  br i1 %cmp3, label %cond.end, label %lor.lhs.false4, !dbg !7430

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !7430
  br i1 %cmp7, label %cond.end, label %lor.lhs.false8, !dbg !7430

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !7430
  br i1 %cmp11, label %cond.end, label %cond.true, !dbg !7430

cond.true:                                        ; preds = %lor.lhs.false8
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4278, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7430
  br label %cond.end, !dbg !7430

cond.end:                                         ; preds = %entry, %lor.lhs.false, %lor.lhs.false4, %lor.lhs.false8, %cond.true
  %call = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) #8, !dbg !7431
  %tobool = icmp eq i8 %call, 0, !dbg !7431
  br i1 %tobool, label %if.else, label %if.then, !dbg !7433

if.then:                                          ; preds = %cond.end
  %1 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7434
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %1, i64 0, i32 0, !dbg !7434
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !7434
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !7434
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7434
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 9, !dbg !7434
  %3 = load i32, i32* %index, align 8, !dbg !7434
  %call17 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %3) #8, !dbg !7434
  %av_level18 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call17, i64 0, i32 2, !dbg !7434
  br label %if.end, !dbg !7435

if.else:                                          ; preds = %cond.end
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7436
  %base21 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i64 0, i32 0, !dbg !7436
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7436
  %base27 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !7436
  %arrayidx33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7436
  %rt_int = bitcast %union.rtunion_def* %arrayidx33 to i32*, !dbg !7436
  %6 = load i32, i32* %rt_int, align 8, !dbg !7436
  %call34 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base27, i32 %6) #8, !dbg !7436
  %call35 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base21, i32 %call34) #8, !dbg !7436
  %ws_level = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call35, i64 0, i32 1, !dbg !7436
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %av_level.0.in = phi i32* [ %av_level18, %if.then ], [ %ws_level, %if.else ]
  %av_level.0 = load i32, i32* %av_level.0.in, align 8, !dbg !7437
  call void @llvm.dbg.value(metadata i32 %av_level.0, metadata !7428, metadata !DIExpression()), !dbg !7429
  ret i32 %av_level.0, !dbg !7438
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !7439 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7441, metadata !DIExpression()), !dbg !7442
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !7443
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !7443
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7443
  %call = tail call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %0) #8, !dbg !7444
  %cmp = icmp eq %struct.rtx_def* %call, %insn, !dbg !7445
  %conv1 = zext i1 %cmp to i8, !dbg !7444
  ret i8 %conv1, !dbg !7446
}

declare dso_local %struct.rtx_def* @bb_note(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sel_bb_end_p(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !7447 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7449, metadata !DIExpression()), !dbg !7450
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !7451
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !7451
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7451
  %call = tail call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %0) #8, !dbg !7452
  %cmp = icmp eq %struct.rtx_def* %call, %insn, !dbg !7453
  %conv1 = zext i1 %cmp to i8, !dbg !7454
  ret i8 %conv1, !dbg !7455
}

; Function Attrs: nounwind uwtable
define dso_local %struct.basic_block_def* @fallthru_bb_of_jump(%struct.rtx_def* %jump) local_unnamed_addr #5 !dbg !7456 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump, metadata !7460, metadata !DIExpression()), !dbg !7461
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 0, !dbg !7462
  %bf.load = load i32, i32* %0, align 8, !dbg !7462
  %bf.clear = and i32 %bf.load, 65535, !dbg !7462
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !7462
  br i1 %cmp, label %if.end, label %return, !dbg !7464

if.end:                                           ; preds = %entry
  %call = tail call i32 @any_uncondjump_p(%struct.rtx_def* %jump) #6, !dbg !7465
  %tobool = icmp eq i32 %call, 0, !dbg !7465
  br i1 %tobool, label %if.end3, label %if.then1, !dbg !7467

if.then1:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, i32 0, i32 1, !dbg !7468
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !7468
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7468
  %call2 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %1) #8, !dbg !7469
  br label %return, !dbg !7470

if.end3:                                          ; preds = %if.end
  %call4 = tail call i32 @any_condjump_p(%struct.rtx_def* %jump) #6, !dbg !7471
  %tobool5 = icmp eq i32 %call4, 0, !dbg !7471
  br i1 %tobool5, label %return, label %if.end7, !dbg !7473

if.end7:                                          ; preds = %if.end3
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, i32 0, i32 1, !dbg !7474
  %rt_bb11 = bitcast %struct.object_block** %arrayidx10 to %struct.basic_block_def**, !dbg !7474
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb11, align 8, !dbg !7474
  %call12 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %2) #8, !dbg !7476
  %tobool13 = icmp eq i8 %call12, 0, !dbg !7476
  br i1 %tobool13, label %if.end15, label %return, !dbg !7477

if.end15:                                         ; preds = %if.end7
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb11, align 8, !dbg !7478
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 1, !dbg !7478
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7478
  %tobool20 = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !7478
  br i1 %tobool20, label %cond.end, label %cond.true, !dbg !7478

cond.true:                                        ; preds = %if.end15
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !7478
  br label %cond.end, !dbg !7478

cond.end:                                         ; preds = %if.end15, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end15 ], !dbg !7478
  %call26 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #8, !dbg !7478
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call26, i64 0, i32 7, !dbg !7478
  %5 = load i32, i32* %flags, align 8, !dbg !7478
  %and = and i32 %5, 1, !dbg !7478
  %tobool27 = icmp eq i32 %and, 0, !dbg !7478
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb11, align 8, !dbg !7478
  %succs33 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 1, !dbg !7478
  %7 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs33, align 8, !dbg !7478
  %tobool34 = icmp ne %struct.VEC_edge_gc* %7, null, !dbg !7478
  br i1 %tobool27, label %cond.false46, label %cond.true28, !dbg !7478

cond.true28:                                      ; preds = %cond.end
  br i1 %tobool34, label %cond.true35, label %cond.end43, !dbg !7478

cond.true35:                                      ; preds = %cond.true28
  %base41 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !7478
  br label %cond.end43, !dbg !7478

cond.end43:                                       ; preds = %cond.true28, %cond.true35
  %cond44 = phi %struct.VEC_edge_base* [ %base41, %cond.true35 ], [ null, %cond.true28 ], !dbg !7478
  %call45 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond44, i32 0) #8, !dbg !7478
  br label %cond.end64, !dbg !7478

cond.false46:                                     ; preds = %cond.end
  br i1 %tobool34, label %cond.true53, label %cond.end61, !dbg !7478

cond.true53:                                      ; preds = %cond.false46
  %base59 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !7478
  br label %cond.end61, !dbg !7478

cond.end61:                                       ; preds = %cond.false46, %cond.true53
  %cond62 = phi %struct.VEC_edge_base* [ %base59, %cond.true53 ], [ null, %cond.false46 ], !dbg !7478
  %call63 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond62, i32 1) #8, !dbg !7478
  br label %cond.end64, !dbg !7478

cond.end64:                                       ; preds = %cond.end61, %cond.end43
  %cond65 = phi %struct.edge_def* [ %call45, %cond.end43 ], [ %call63, %cond.end61 ], !dbg !7478
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond65, i64 0, i32 1, !dbg !7479
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7479
  br label %return, !dbg !7480

return:                                           ; preds = %if.end7, %if.end3, %entry, %cond.end64, %if.then1
  %retval.0 = phi %struct.basic_block_def* [ %call2, %if.then1 ], [ %8, %cond.end64 ], [ null, %entry ], [ null, %if.end3 ], [ null, %if.end7 ], !dbg !7461
  ret %struct.basic_block_def* %retval.0, !dbg !7481
}

declare dso_local i32 @any_uncondjump_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7482 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7484, metadata !DIExpression()), !dbg !7485
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7486
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7486
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7486
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7486

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7486
  br label %cond.end, !dbg !7486

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7486
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !7486
  %cmp = icmp eq i32 %call, 1, !dbg !7487
  %conv2 = zext i1 %cmp to i8, !dbg !7486
  ret i8 %conv2, !dbg !7488
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_init_bbs(%struct.VEC_basic_block_heap* %bbs, %struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !7489 {
entry:
  %ssi = alloca %struct.sched_scan_info_def, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %bbs, metadata !7493, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7494, metadata !DIExpression()), !dbg !7496
  %0 = bitcast %struct.sched_scan_info_def* %ssi to i8*, !dbg !7497
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #7, !dbg !7497
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 bitcast (%struct.sched_scan_info_def* @__const.sel_init_bbs.ssi to i8*), i64 32, i1 false), !dbg !7498
  call void @llvm.dbg.value(metadata %struct.sched_scan_info_def* %ssi, metadata !7495, metadata !DIExpression(DW_OP_deref)), !dbg !7496
  call void @sched_scan(%struct.sched_scan_info_def* nonnull %ssi, %struct.VEC_basic_block_heap* %bbs, %struct.basic_block_def* %bb, %struct.VEC_rtx_heap* null, %struct.rtx_def* null) #6, !dbg !7499
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #7, !dbg !7500
  ret void, !dbg !7500
}

; Function Attrs: nounwind uwtable
define internal void @extend_bb_info() #5 !dbg !7501 {
entry:
  tail call void @sel_extend_global_bb_info() #8, !dbg !7502
  tail call fastcc void @extend_region_bb_info() #8, !dbg !7503
  ret void, !dbg !7504
}

; Function Attrs: nounwind uwtable
define internal void @init_bb(%struct.basic_block_def* %bb) #5 !dbg !7505 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7507, metadata !DIExpression()), !dbg !7508
  %call = tail call %struct.rtx_def* @bb_note(%struct.basic_block_def* %bb) #6, !dbg !7509
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !7510
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7510
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7510
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !7510
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7510
  tail call void @remove_notes(%struct.rtx_def* %call, %struct.rtx_def* %1) #6, !dbg !7511
  %2 = load i64, i64* bitcast (%struct.rtx_def** @note_list to i64*), align 8, !dbg !7512
  %3 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7513
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %3, i64 0, i32 0, !dbg !7513
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !7513
  %4 = load i32, i32* %index, align 8, !dbg !7513
  %call1 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %4) #8, !dbg !7513
  %5 = bitcast %struct.sel_region_bb_info_def* %call1 to i64*, !dbg !7514
  store i64 %2, i64* %5, align 8, !dbg !7514
  ret void, !dbg !7515
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_finish_bbs() local_unnamed_addr #5 !dbg !7516 {
entry:
  tail call fastcc void @sel_restore_notes() #8, !dbg !7517
  %0 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7518
  %tobool = icmp eq %struct.loop* %0, null, !dbg !7518
  br i1 %tobool, label %if.end, label %if.then, !dbg !7520

if.then:                                          ; preds = %entry
  tail call fastcc void @sel_remove_loop_preheader() #8, !dbg !7521
  br label %if.end, !dbg !7521

if.end:                                           ; preds = %entry, %if.then
  tail call fastcc void @finish_region_bb_info() #8, !dbg !7522
  ret void, !dbg !7523
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_restore_notes() unnamed_addr #5 !dbg !7524 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !7526, metadata !DIExpression()), !dbg !7533
  br label %for.cond, !dbg !7534

for.cond:                                         ; preds = %for.inc68, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc68 ], [ 0, %entry ], !dbg !7535
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7526, metadata !DIExpression()), !dbg !7533
  %0 = load i32, i32* @current_nr_blocks, align 4, !dbg !7536
  %1 = sext i32 %0 to i64, !dbg !7537
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !7537
  br i1 %cmp, label %for.body, label %for.end69, !dbg !7538

for.body:                                         ; preds = %for.cond
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7539
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !7539
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7539
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 2, !dbg !7539
  %4 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7539
  %tobool = icmp eq %struct.VEC_basic_block_gc* %4, null, !dbg !7539
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7539

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %4, i64 0, i32 0, !dbg !7539
  br label %cond.end, !dbg !7539

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !7539
  %5 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7539
  %6 = load i32*, i32** @ebb_head, align 8, !dbg !7539
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %indvars.iv, !dbg !7539
  %7 = load i32, i32* %arrayidx, align 4, !dbg !7539
  %idxprom4 = sext i32 %7 to i64, !dbg !7539
  %arrayidx5 = getelementptr inbounds i32, i32* %5, i64 %idxprom4, !dbg !7539
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !7539
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %8) #8, !dbg !7539
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !7528, metadata !DIExpression()), !dbg !7540
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7541
  %cfg7 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !7541
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7, align 8, !dbg !7541
  %x_basic_block_info8 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 2, !dbg !7541
  %11 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info8, align 8, !dbg !7541
  %tobool9 = icmp eq %struct.VEC_basic_block_gc* %11, null, !dbg !7541
  br i1 %tobool9, label %cond.end16, label %cond.true10, !dbg !7541

cond.true10:                                      ; preds = %cond.end
  %base14 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %11, i64 0, i32 0, !dbg !7541
  br label %cond.end16, !dbg !7541

cond.end16:                                       ; preds = %cond.end, %cond.true10
  %cond17 = phi %struct.VEC_basic_block_base* [ %base14, %cond.true10 ], [ null, %cond.end ], !dbg !7541
  %12 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7541
  %13 = load i32*, i32** @ebb_head, align 8, !dbg !7541
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7541
  %arrayidx19 = getelementptr inbounds i32, i32* %13, i64 %indvars.iv.next, !dbg !7541
  %14 = load i32, i32* %arrayidx19, align 4, !dbg !7541
  %sub = add nsw i32 %14, -1, !dbg !7541
  %idxprom20 = sext i32 %sub to i64, !dbg !7541
  %arrayidx21 = getelementptr inbounds i32, i32* %12, i64 %idxprom20, !dbg !7541
  %15 = load i32, i32* %arrayidx21, align 4, !dbg !7541
  %call22 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond17, i32 %15) #8, !dbg !7541
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call22, i64 0, i32 6, !dbg !7542
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !7542
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %16, metadata !7532, metadata !DIExpression()), !dbg !7540
  br label %do.body, !dbg !7543

do.body:                                          ; preds = %for.end, %cond.end16
  %first.0 = phi %struct.basic_block_def* [ %call, %cond.end16 ], [ %30, %for.end ], !dbg !7540
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first.0, metadata !7528, metadata !DIExpression()), !dbg !7540
  %17 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7544
  %base25 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %17, i64 0, i32 0, !dbg !7544
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %first.0, i64 0, i32 9, !dbg !7544
  %18 = load i32, i32* %index, align 8, !dbg !7544
  %call29 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base25, i32 %18) #8, !dbg !7544
  %19 = bitcast %struct.sel_region_bb_info_def* %call29 to i64*, !dbg !7544
  %20 = load i64, i64* %19, align 8, !dbg !7544
  store i64 %20, i64* bitcast (%struct.rtx_def** @note_list to i64*), align 8, !dbg !7546
  %call30 = tail call %struct.rtx_def* @restore_other_notes(%struct.rtx_def* null, %struct.basic_block_def* %first.0) #6, !dbg !7547
  %21 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7548
  %base33 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %21, i64 0, i32 0, !dbg !7548
  %22 = load i32, i32* %index, align 8, !dbg !7548
  %call38 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base33, i32 %22) #8, !dbg !7548
  %note_list39 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call38, i64 0, i32 0, !dbg !7548
  store %struct.rtx_def* null, %struct.rtx_def** %note_list39, align 8, !dbg !7549
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %first.0, i64 0, i32 7, !dbg !7550
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7550
  %23 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7550
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %23, i64 0, i32 0, !dbg !7550
  br label %for.cond40, !dbg !7550

for.cond40:                                       ; preds = %for.inc, %do.body
  %insn.0.in = phi %struct.rtx_def** [ %head_, %do.body ], [ %rt_rtx65, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !7552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7527, metadata !DIExpression()), !dbg !7533
  %tobool41 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !7553
  br i1 %tobool41, label %for.end, label %land.rhs, !dbg !7553

land.rhs:                                         ; preds = %for.cond40
  %24 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7553
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %24, i64 0, i32 1, !dbg !7553
  %25 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7553
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7553
  %rt_rtx = bitcast %union.rtunion_def* %26 to %struct.rtx_def**, !dbg !7553
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7553
  %cmp45 = icmp eq %struct.rtx_def* %insn.0, %27, !dbg !7553
  br i1 %cmp45, label %for.end, label %for.body46, !dbg !7550

for.body46:                                       ; preds = %land.rhs
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !7555
  %bf.load = load i32, i32* %28, align 8, !dbg !7555
  %bf.clear = and i32 %bf.load, 65535, !dbg !7555
  %cmp47 = icmp eq i32 %bf.clear, 8, !dbg !7555
  br i1 %cmp47, label %land.lhs.true, label %lor.lhs.false, !dbg !7555

lor.lhs.false:                                    ; preds = %for.body46
  %cmp50 = icmp eq i32 %bf.clear, 7, !dbg !7555
  br i1 %cmp50, label %land.lhs.true, label %lor.lhs.false51, !dbg !7555

lor.lhs.false51:                                  ; preds = %lor.lhs.false
  %cmp54 = icmp eq i32 %bf.clear, 9, !dbg !7555
  br i1 %cmp54, label %land.lhs.true, label %lor.lhs.false55, !dbg !7555

lor.lhs.false55:                                  ; preds = %lor.lhs.false51
  %cmp58 = icmp eq i32 %bf.clear, 10, !dbg !7555
  br i1 %cmp58, label %land.lhs.true, label %for.inc, !dbg !7555

land.lhs.true:                                    ; preds = %lor.lhs.false55, %lor.lhs.false51, %lor.lhs.false, %for.body46
  %cmp61 = icmp eq i32 %bf.clear, 7, !dbg !7555
  br i1 %cmp61, label %for.inc, label %if.then, !dbg !7557

if.then:                                          ; preds = %land.lhs.true
  tail call void @reemit_notes(%struct.rtx_def* nonnull %insn.0) #6, !dbg !7558
  br label %for.inc, !dbg !7558

for.inc:                                          ; preds = %lor.lhs.false55, %land.lhs.true, %if.then
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7553
  %rt_rtx65 = bitcast %union.rtunion_def* %29 to %struct.rtx_def**, !dbg !7553
  br label %for.cond40, !dbg !7553, !llvm.loop !7559

for.end:                                          ; preds = %land.rhs, %for.cond40
  %next_bb66 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %first.0, i64 0, i32 6, !dbg !7561
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb66, align 8, !dbg !7561
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %30, metadata !7528, metadata !DIExpression()), !dbg !7540
  %cmp67 = icmp eq %struct.basic_block_def* %30, %16, !dbg !7562
  br i1 %cmp67, label %for.inc68, label %do.body, !dbg !7563, !llvm.loop !7564

for.inc68:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata i32 undef, metadata !7526, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7533
  br label %for.cond, !dbg !7566, !llvm.loop !7567

for.end69:                                        ; preds = %for.cond
  ret void, !dbg !7569
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_remove_loop_preheader() unnamed_addr #5 !dbg !7570 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  %preheader_blocks = alloca %struct.VEC_basic_block_heap*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %0 = load i32*, i32** @containing_rgn, align 8, !dbg !7589
  %1 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7589
  %2 = load i32*, i32** @ebb_head, align 8, !dbg !7589
  %3 = load i32, i32* %2, align 4, !dbg !7589
  %idxprom = sext i32 %3 to i64, !dbg !7589
  %arrayidx1 = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !7589
  %4 = load i32, i32* %arrayidx1, align 4, !dbg !7589
  %idxprom2 = sext i32 %4 to i64, !dbg !7589
  %arrayidx3 = getelementptr inbounds i32, i32* %0, i64 %idxprom2, !dbg !7589
  %5 = load i32, i32* %arrayidx3, align 4, !dbg !7589
  call void @llvm.dbg.value(metadata i32 %5, metadata !7574, metadata !DIExpression()), !dbg !7590
  %6 = bitcast %struct.basic_block_def** %bb to i8*, !dbg !7591
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7, !dbg !7591
  call void @llvm.dbg.value(metadata i8 1, metadata !7576, metadata !DIExpression()), !dbg !7590
  %7 = bitcast %struct.VEC_basic_block_heap** %preheader_blocks to i8*, !dbg !7592
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7, !dbg !7592
  %8 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7593
  %call = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %8) #8, !dbg !7593
  %aux = getelementptr inbounds %struct.loop, %struct.loop* %call, i64 0, i32 10, !dbg !7593
  %9 = bitcast i8** %aux to i64*, !dbg !7593
  %10 = load i64, i64* %9, align 8, !dbg !7593
  %cmp = icmp eq i64 %10, 1, !dbg !7593
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !7593

cond.false:                                       ; preds = %entry
  %11 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7593
  %call4 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %11) #8, !dbg !7593
  %aux5 = getelementptr inbounds %struct.loop, %struct.loop* %call4, i64 0, i32 10, !dbg !7593
  %12 = bitcast i8** %aux5 to %struct.VEC_basic_block_heap**, !dbg !7593
  %13 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %12, align 8, !dbg !7593
  br label %cond.end, !dbg !7593

cond.end:                                         ; preds = %entry, %cond.false
  %14 = phi %struct.VEC_basic_block_heap* [ %13, %cond.false ], [ null, %entry ], !dbg !7593
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %14, metadata !7577, metadata !DIExpression()), !dbg !7590
  store %struct.VEC_basic_block_heap* %14, %struct.VEC_basic_block_heap** %preheader_blocks, align 8, !dbg !7594
  %15 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7595
  %tobool = icmp eq %struct.loop* %15, null, !dbg !7595
  br i1 %tobool, label %cond.true6, label %cond.end8, !dbg !7595

cond.true6:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 6137, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7595
  br label %cond.end8, !dbg !7595

cond.end8:                                        ; preds = %cond.end, %cond.true6
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %14, metadata !7577, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %14, metadata !7577, metadata !DIExpression()), !dbg !7590
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %14, i64 0, i32 0, !dbg !7596
  %call15 = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %base) #8, !dbg !7596
  call void @llvm.dbg.value(metadata i32 %call15, metadata !7573, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i32 0, metadata !7572, metadata !DIExpression()), !dbg !7590
  %idxprom16 = sext i32 %5 to i64, !dbg !7597
  br label %for.cond, !dbg !7600

for.cond:                                         ; preds = %for.inc, %cond.end8
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %cond.end8 ], !dbg !7590
  %all_empty_p.0 = phi i8 [ %all_empty_p.2, %for.inc ], [ 1, %cond.end8 ], !dbg !7590
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7572, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8 %all_empty_p.0, metadata !7576, metadata !DIExpression()), !dbg !7590
  %16 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !7601
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %16, i64 %idxprom16, i32 0, !dbg !7601
  %17 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !7601
  %18 = sext i32 %17 to i64, !dbg !7602
  %cmp18 = icmp slt i64 %indvars.iv, %18, !dbg !7602
  br i1 %cmp18, label %for.body, label %for.end, !dbg !7603

for.body:                                         ; preds = %for.cond
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7604
  %cfg = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 1, !dbg !7604
  %20 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7604
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i64 0, i32 2, !dbg !7604
  %21 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7604
  %tobool19 = icmp eq %struct.VEC_basic_block_gc* %21, null, !dbg !7604
  br i1 %tobool19, label %cond.end26, label %cond.true20, !dbg !7604

cond.true20:                                      ; preds = %for.body
  %base24 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %21, i64 0, i32 0, !dbg !7604
  br label %cond.end26, !dbg !7604

cond.end26:                                       ; preds = %for.body, %cond.true20
  %cond27 = phi %struct.VEC_basic_block_base* [ %base24, %cond.true20 ], [ null, %for.body ], !dbg !7604
  %22 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7604
  %23 = load i32*, i32** @ebb_head, align 8, !dbg !7604
  %arrayidx29 = getelementptr inbounds i32, i32* %23, i64 %indvars.iv, !dbg !7604
  %24 = load i32, i32* %arrayidx29, align 4, !dbg !7604
  %idxprom30 = sext i32 %24 to i64, !dbg !7604
  %arrayidx31 = getelementptr inbounds i32, i32* %22, i64 %idxprom30, !dbg !7604
  %25 = load i32, i32* %arrayidx31, align 4, !dbg !7604
  %call32 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond27, i32 %25) #8, !dbg !7604
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call32, metadata !7575, metadata !DIExpression()), !dbg !7590
  store %struct.basic_block_def* %call32, %struct.basic_block_def** %bb, align 8, !dbg !7606
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call32, metadata !7575, metadata !DIExpression()), !dbg !7590
  %call33 = call zeroext i8 @sel_is_loop_preheader_p(%struct.basic_block_def* %call32) #8, !dbg !7607
  %tobool34 = icmp eq i8 %call33, 0, !dbg !7607
  br i1 %tobool34, label %for.inc, label %if.then, !dbg !7609

if.then:                                          ; preds = %cond.end26
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7610
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %26, metadata !7575, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %preheader_blocks, metadata !7577, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  %call35 = call fastcc %struct.basic_block_def** @VEC_basic_block_heap_safe_push(%struct.VEC_basic_block_heap** nonnull %preheader_blocks, %struct.basic_block_def* %26) #8, !dbg !7610
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7612
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %27, metadata !7575, metadata !DIExpression()), !dbg !7590
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i64 0, i32 7, !dbg !7612
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7612
  %28 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7612
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %28, i64 0, i32 1, !dbg !7612
  %29 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7612
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %27, metadata !7575, metadata !DIExpression()), !dbg !7590
  %call36 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %27) #6, !dbg !7614
  %cmp37 = icmp eq %struct.rtx_def* %29, %call36, !dbg !7615
  %spec.select = select i1 %cmp37, i8 %all_empty_p.0, i8 0, !dbg !7616
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !7576, metadata !DIExpression()), !dbg !7590
  br label %for.inc, !dbg !7617

for.inc:                                          ; preds = %cond.end26, %if.then
  %all_empty_p.2 = phi i8 [ %spec.select, %if.then ], [ %all_empty_p.0, %cond.end26 ], !dbg !7590
  call void @llvm.dbg.value(metadata i8 %all_empty_p.2, metadata !7576, metadata !DIExpression()), !dbg !7590
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7618
  call void @llvm.dbg.value(metadata i32 undef, metadata !7572, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7590
  br label %for.cond, !dbg !7619, !llvm.loop !7620

for.end:                                          ; preds = %for.cond
  %all_empty_p.0.lcssa = phi i8 [ %all_empty_p.0, %for.cond ], !dbg !7590
  call void @llvm.dbg.value(metadata i8 %all_empty_p.0.lcssa, metadata !7576, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8 %all_empty_p.0.lcssa, metadata !7576, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8 %all_empty_p.0.lcssa, metadata !7576, metadata !DIExpression()), !dbg !7590
  %30 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %preheader_blocks, align 8, !dbg !7622
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %30, metadata !7577, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %30, metadata !7577, metadata !DIExpression()), !dbg !7590
  %base42 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %30, i64 0, i32 0, !dbg !7622
  %call46 = call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %base42) #8, !dbg !7622
  call void @llvm.dbg.value(metadata i32 %call46, metadata !7572, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7590
  br label %for.cond47, !dbg !7624

for.cond47:                                       ; preds = %for.body49, %for.end
  %i.1.in = phi i32 [ %call46, %for.end ], [ %i.1, %for.body49 ]
  %i.1 = add i32 %i.1.in, -1, !dbg !7625
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !7572, metadata !DIExpression()), !dbg !7590
  %cmp48 = icmp slt i32 %i.1, %call15, !dbg !7626
  br i1 %cmp48, label %for.end58, label %for.body49, !dbg !7628

for.body49:                                       ; preds = %for.cond47
  %31 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %preheader_blocks, align 8, !dbg !7629
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %31, metadata !7577, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %31, metadata !7577, metadata !DIExpression()), !dbg !7590
  %base52 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %31, i64 0, i32 0, !dbg !7629
  %call56 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %base52, i32 %i.1) #8, !dbg !7629
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call56, metadata !7575, metadata !DIExpression()), !dbg !7590
  store %struct.basic_block_def* %call56, %struct.basic_block_def** %bb, align 8, !dbg !7631
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call56, metadata !7575, metadata !DIExpression()), !dbg !7590
  call fastcc void @sel_remove_bb(%struct.basic_block_def* %call56, i8 zeroext 0) #8, !dbg !7632
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !7572, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7590
  br label %for.cond47, !dbg !7633, !llvm.loop !7634

for.end58:                                        ; preds = %for.cond47
  %32 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7636
  %call59 = call fastcc %struct.loop* @loop_outer(%struct.loop* %32) #8, !dbg !7637
  %call60 = call zeroext i8 @considered_for_pipelining_p(%struct.loop* %call59) #8, !dbg !7638
  %tobool61 = icmp eq i8 %call60, 0, !dbg !7638
  br i1 %tobool61, label %if.then62, label %if.else136, !dbg !7639

if.then62:                                        ; preds = %for.end58
  %tobool63 = icmp eq i8 %all_empty_p.0.lcssa, 0, !dbg !7640
  br i1 %tobool63, label %if.then64, label %for.cond65.preheader, !dbg !7641

for.cond65.preheader:                             ; preds = %if.then62
  %33 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7642
  %34 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7643
  %35 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7643
  %36 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7643
  %37 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7645
  %38 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7645
  br label %for.cond65, !dbg !7647

if.then64:                                        ; preds = %if.then62
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %preheader_blocks, metadata !7577, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call void @make_region_from_loop_preheader(%struct.VEC_basic_block_heap** nonnull %preheader_blocks) #8, !dbg !7648
  br label %if.end135, !dbg !7648

for.cond65:                                       ; preds = %for.cond65.preheader, %if.end131
  %i.2 = phi i32 [ %inc133, %if.end131 ], [ 0, %for.cond65.preheader ], !dbg !7649
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !7572, metadata !DIExpression()), !dbg !7590
  %39 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %preheader_blocks, align 8, !dbg !7650
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %39, metadata !7577, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %39, metadata !7577, metadata !DIExpression()), !dbg !7590
  %base68 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %39, i64 0, i32 0, !dbg !7650
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb, metadata !7575, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  %call72 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base68, i32 %i.2, %struct.basic_block_def** nonnull %bb) #8, !dbg !7650
  %tobool73 = icmp eq i32 %call72, 0, !dbg !7647
  br i1 %tobool73, label %if.end135.loopexit, label %for.body74, !dbg !7647

for.body74:                                       ; preds = %for.cond65
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #7, !dbg !7651
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7652
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %40, metadata !7575, metadata !DIExpression()), !dbg !7590
  %prev_bb75 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i64 0, i32 5, !dbg !7653
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb75, align 8, !dbg !7653
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %41, metadata !7587, metadata !DIExpression()), !dbg !7642
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %40, metadata !7575, metadata !DIExpression()), !dbg !7590
  %next_bb76 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i64 0, i32 6, !dbg !7654
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb76, align 8, !dbg !7654
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %42, metadata !7588, metadata !DIExpression()), !dbg !7642
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #7, !dbg !7655
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %40, metadata !7575, metadata !DIExpression()), !dbg !7590
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i64 0, i32 0, !dbg !7655
  %call77 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !7655
  %43 = extractvalue { i32, %struct.VEC_edge_gc** } %call77, 0, !dbg !7655
  store i32 %43, i32* %35, align 8, !dbg !7655
  %44 = extractvalue { i32, %struct.VEC_edge_gc** } %call77, 1, !dbg !7655
  store %struct.VEC_edge_gc** %44, %struct.VEC_edge_gc*** %36, align 8, !dbg !7655
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* nonnull align 8 %34, i64 16, i1 false), !dbg !7655
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #7, !dbg !7655
  %45 = load i32, i32* %37, align 8, !dbg !7645
  %46 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %38, align 8, !dbg !7645
  br label %for.cond78, !dbg !7656

for.cond78:                                       ; preds = %if.end88, %for.body74
  %call79 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %45, %struct.VEC_edge_gc** %46) #8, !dbg !7657
  call void @llvm.dbg.value(metadata %struct.edge_def* %call79, metadata !7578, metadata !DIExpression()), !dbg !7642
  %tobool80 = icmp eq %struct.edge_def* %call79, null, !dbg !7658
  br i1 %tobool80, label %for.end89, label %for.body81, !dbg !7658

for.body81:                                       ; preds = %for.cond78
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call79, i64 0, i32 7, !dbg !7659
  %47 = load i32, i32* %flags, align 8, !dbg !7659
  %and = and i32 %47, 1, !dbg !7662
  %tobool82 = icmp eq i32 %and, 0, !dbg !7662
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7663
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %48, metadata !7575, metadata !DIExpression()), !dbg !7590
  %next_bb87 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %48, i64 0, i32 6, !dbg !7663
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb87, align 8, !dbg !7663
  br i1 %tobool82, label %if.then83, label %if.else86, !dbg !7664

if.then83:                                        ; preds = %for.body81
  %call85 = call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* nonnull %call79, %struct.basic_block_def* %49) #6, !dbg !7665
  br label %if.end88, !dbg !7665

if.else86:                                        ; preds = %for.body81
  call void @redirect_edge_succ(%struct.edge_def* nonnull %call79, %struct.basic_block_def* %49) #6, !dbg !7666
  br label %if.end88

if.end88:                                         ; preds = %if.else86, %if.then83
  br label %for.cond78, !dbg !7667, !llvm.loop !7668

for.end89:                                        ; preds = %for.cond78
  %50 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !7670
  %base92 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %50, i64 0, i32 0, !dbg !7670
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7670
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %51, metadata !7575, metadata !DIExpression()), !dbg !7590
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %51, i64 0, i32 9, !dbg !7670
  %52 = load i32, i32* %index, align 8, !dbg !7670
  %call96 = call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base92, i32 %52) #8, !dbg !7670
  %note_list = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call96, i64 0, i32 0, !dbg !7670
  %53 = load %struct.rtx_def*, %struct.rtx_def** %note_list, align 8, !dbg !7670
  %cmp97 = icmp eq %struct.rtx_def* %53, null, !dbg !7670
  br i1 %cmp97, label %cond.end100, label %cond.true98, !dbg !7670

cond.true98:                                      ; preds = %for.end89
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 6187, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7670
  br label %cond.end100, !dbg !7670

cond.end100:                                      ; preds = %for.end89, %cond.true98
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7671
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %54, metadata !7575, metadata !DIExpression()), !dbg !7590
  call fastcc void @delete_and_free_basic_block(%struct.basic_block_def* %54) #8, !dbg !7672
  %prev_bb102 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %42, i64 0, i32 5, !dbg !7673
  %55 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb102, align 8, !dbg !7673
  %cmp103 = icmp eq %struct.basic_block_def* %55, %41, !dbg !7675
  br i1 %cmp103, label %land.lhs.true, label %if.end131, !dbg !7676

land.lhs.true:                                    ; preds = %cond.end100
  %56 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7677
  %cfg105 = getelementptr inbounds %struct.function, %struct.function* %56, i64 0, i32 1, !dbg !7677
  %57 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg105, align 8, !dbg !7677
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %57, i64 0, i32 0, !dbg !7677
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7677
  %cmp106 = icmp eq %struct.basic_block_def* %41, %58, !dbg !7678
  br i1 %cmp106, label %if.end131, label %land.lhs.true107, !dbg !7679

land.lhs.true107:                                 ; preds = %land.lhs.true
  %il108 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i64 0, i32 7, !dbg !7680
  %rtl109 = bitcast %union.basic_block_il_dependent* %il108 to %struct.rtl_bb_info**, !dbg !7680
  %59 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl109, align 8, !dbg !7680
  %end_110 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %59, i64 0, i32 1, !dbg !7680
  %60 = load %struct.rtx_def*, %struct.rtx_def** %end_110, align 8, !dbg !7680
  %call111 = call zeroext i8 @jump_leads_only_to_bb_p(%struct.rtx_def* %60, %struct.basic_block_def* %42) #8, !dbg !7681
  %tobool112 = icmp eq i8 %call111, 0, !dbg !7681
  br i1 %tobool112, label %if.end131, label %if.then113, !dbg !7682

if.then113:                                       ; preds = %land.lhs.true107
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i64 0, i32 1, !dbg !7683
  %61 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7683
  %tobool114 = icmp eq %struct.VEC_edge_gc* %61, null, !dbg !7683
  br i1 %tobool114, label %cond.end119, label %cond.true115, !dbg !7683

cond.true115:                                     ; preds = %if.then113
  %base117 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %61, i64 0, i32 0, !dbg !7683
  br label %cond.end119, !dbg !7683

cond.end119:                                      ; preds = %if.then113, %cond.true115
  %cond120 = phi %struct.VEC_edge_base* [ %base117, %cond.true115 ], [ null, %if.then113 ], !dbg !7683
  %call121 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond120, i32 0) #8, !dbg !7683
  %call122 = call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* %call121, %struct.basic_block_def* %42) #6, !dbg !7685
  %62 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl109, align 8, !dbg !7686
  %end_125 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %62, i64 0, i32 1, !dbg !7686
  %63 = load %struct.rtx_def*, %struct.rtx_def** %end_125, align 8, !dbg !7686
  %call126 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %41) #6, !dbg !7688
  %cmp127 = icmp eq %struct.rtx_def* %63, %call126, !dbg !7689
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !7690

if.then129:                                       ; preds = %cond.end119
  call void @free_data_sets(%struct.basic_block_def* %41) #8, !dbg !7691
  br label %if.end131, !dbg !7691

if.end131:                                        ; preds = %land.lhs.true107, %land.lhs.true, %cond.end119, %if.then129, %cond.end100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #7, !dbg !7692
  %inc133 = add nuw nsw i32 %i.2, 1, !dbg !7693
  call void @llvm.dbg.value(metadata i32 %inc133, metadata !7572, metadata !DIExpression()), !dbg !7590
  br label %for.cond65, !dbg !7694, !llvm.loop !7695

if.end135.loopexit:                               ; preds = %for.cond65
  br label %if.end135, !dbg !7697

if.end135:                                        ; preds = %if.end135.loopexit, %if.then64
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %preheader_blocks, metadata !7577, metadata !DIExpression(DW_OP_deref)), !dbg !7590
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %preheader_blocks) #8, !dbg !7697
  br label %if.end147, !dbg !7698

if.else136:                                       ; preds = %for.end58
  %64 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %preheader_blocks, align 8, !dbg !7699
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %64, metadata !7577, metadata !DIExpression()), !dbg !7590
  %cmp137 = icmp eq %struct.VEC_basic_block_heap* %64, null, !dbg !7699
  br i1 %cmp137, label %cond.false140, label %cond.true139, !dbg !7699

cond.true139:                                     ; preds = %if.else136
  %65 = bitcast %struct.VEC_basic_block_heap** %preheader_blocks to i8**, !dbg !7699
  br label %cond.end143, !dbg !7699

cond.false140:                                    ; preds = %if.else136
  %66 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7699
  %call141 = call fastcc %struct.loop* @loop_outer(%struct.loop* %66) #8, !dbg !7699
  %aux142 = getelementptr inbounds %struct.loop, %struct.loop* %call141, i64 0, i32 10, !dbg !7699
  br label %cond.end143, !dbg !7699

cond.end143:                                      ; preds = %cond.false140, %cond.true139
  %cond144.in = phi i8** [ %65, %cond.true139 ], [ %aux142, %cond.false140 ]
  %67 = bitcast i8** %cond144.in to i64*, !dbg !7699
  %cond1441 = load i64, i64* %67, align 8, !dbg !7699
  %68 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7699
  %call145 = call fastcc %struct.loop* @loop_outer(%struct.loop* %68) #8, !dbg !7699
  %aux146 = getelementptr inbounds %struct.loop, %struct.loop* %call145, i64 0, i32 10, !dbg !7699
  %69 = bitcast i8** %aux146 to i64*, !dbg !7699
  store i64 %cond1441, i64* %69, align 8, !dbg !7699
  br label %if.end147

if.end147:                                        ; preds = %cond.end143, %if.end135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7, !dbg !7700
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !7700
  ret void, !dbg !7700
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finish_region_bb_info() unnamed_addr #5 !dbg !7701 {
entry:
  tail call fastcc void @VEC_sel_region_bb_info_def_heap_free(%struct.VEC_sel_region_bb_info_def_heap** nonnull @sel_region_bb_info) #8, !dbg !7702
  ret void, !dbg !7703
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @sel_insn_has_single_succ_p(%struct.rtx_def* %insn, i32 %flags) local_unnamed_addr #5 !dbg !7704 {
entry:
  %succ = alloca %struct.rtx_def*, align 8
  %si = alloca %struct.succ_iterator, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7708, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7709, metadata !DIExpression()), !dbg !7713
  %0 = bitcast %struct.rtx_def** %succ to i8*, !dbg !7714
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7714
  %1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 0, !dbg !7715
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1) #7, !dbg !7715
  call void @llvm.dbg.value(metadata i8 1, metadata !7712, metadata !DIExpression()), !dbg !7713
  %2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp, i64 0, i32 0, !dbg !7716
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #7, !dbg !7716
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !7710, metadata !DIExpression(DW_OP_deref)), !dbg !7713
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %insn, i32 %flags) #8, !dbg !7716
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 64, i1 false), !dbg !7716
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #7, !dbg !7716
  br label %for.cond, !dbg !7716

for.cond:                                         ; preds = %for.inc, %entry
  %first_p.0 = phi i8 [ 1, %entry ], [ 0, %for.inc ], !dbg !7713
  call void @llvm.dbg.value(metadata i8 %first_p.0, metadata !7712, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !7710, metadata !DIExpression(DW_OP_deref)), !dbg !7713
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !7711, metadata !DIExpression(DW_OP_deref)), !dbg !7713
  %call = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %si, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %insn, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #8, !dbg !7718
  %tobool = icmp eq i8 %call, 0, !dbg !7716
  br i1 %tobool, label %cleanup, label %for.body, !dbg !7716

for.body:                                         ; preds = %for.cond
  %tobool1 = icmp eq i8 %first_p.0, 0, !dbg !7720
  br i1 %tobool1, label %cleanup, label %for.inc, !dbg !7723

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i8 0, metadata !7712, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !7711, metadata !DIExpression(DW_OP_deref)), !dbg !7713
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %si) #8, !dbg !7718
  br label %for.cond, !dbg !7718, !llvm.loop !7724

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %for.cond ], !dbg !7713
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1) #7, !dbg !7726
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7726
  ret i8 %retval.0, !dbg !7726
}

; Function Attrs: nounwind uwtable
define dso_local void @free_succs_info(%struct.succs_info* %sinfo) local_unnamed_addr #5 !dbg !7727 {
entry:
  call void @llvm.dbg.value(metadata %struct.succs_info* %sinfo, metadata !7731, metadata !DIExpression()), !dbg !7732
  %0 = load i32, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 2), align 4, !dbg !7733
  %cmp = icmp sgt i32 %0, -1, !dbg !7733
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !7733

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.succs_info*, %struct.succs_info** getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 0), align 8, !dbg !7733
  %idxprom = sext i32 %0 to i64, !dbg !7733
  %arrayidx = getelementptr inbounds %struct.succs_info, %struct.succs_info* %1, i64 %idxprom, !dbg !7733
  %cmp1 = icmp eq %struct.succs_info* %arrayidx, %sinfo, !dbg !7733
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !7733

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4514, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7733
  %.pre = load i32, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 2), align 4, !dbg !7734
  br label %cond.end, !dbg !7733

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %2 = phi i32 [ %0, %land.lhs.true ], [ %.pre, %cond.true ], !dbg !7734
  %dec = add nsw i32 %2, -1, !dbg !7734
  store i32 %dec, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 2), align 4, !dbg !7734
  %succs_ok = getelementptr inbounds %struct.succs_info, %struct.succs_info* %sinfo, i64 0, i32 1, !dbg !7735
  %3 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_ok, align 8, !dbg !7735
  %tobool = icmp eq %struct.VEC_rtx_heap* %3, null, !dbg !7735
  br i1 %tobool, label %cond.end5, label %cond.true2, !dbg !7735

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %3, i64 0, i32 0, !dbg !7735
  br label %cond.end5, !dbg !7735

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_rtx_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !7735
  br i1 %tobool, label %cond.end13, label %cond.true9, !dbg !7735

cond.true9:                                       ; preds = %cond.end5
  %base11 = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %3, i64 0, i32 0, !dbg !7735
  br label %cond.end13, !dbg !7735

cond.end13:                                       ; preds = %cond.end5, %cond.true9
  %cond14 = phi %struct.VEC_rtx_base* [ %base11, %cond.true9 ], [ null, %cond.end5 ], !dbg !7735
  %call = tail call fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %cond14) #8, !dbg !7735
  tail call fastcc void @VEC_rtx_base_block_remove(%struct.VEC_rtx_base* %cond6, i32 0, i32 %call) #8, !dbg !7735
  %succs_other = getelementptr inbounds %struct.succs_info, %struct.succs_info* %sinfo, i64 0, i32 3, !dbg !7736
  %4 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_other, align 8, !dbg !7736
  %tobool15 = icmp eq %struct.VEC_rtx_heap* %4, null, !dbg !7736
  br i1 %tobool15, label %cond.end20, label %cond.true16, !dbg !7736

cond.true16:                                      ; preds = %cond.end13
  %base18 = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %4, i64 0, i32 0, !dbg !7736
  br label %cond.end20, !dbg !7736

cond.end20:                                       ; preds = %cond.end13, %cond.true16
  %cond21 = phi %struct.VEC_rtx_base* [ %base18, %cond.true16 ], [ null, %cond.end13 ], !dbg !7736
  br i1 %tobool15, label %cond.end28, label %cond.true24, !dbg !7736

cond.true24:                                      ; preds = %cond.end20
  %base26 = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %4, i64 0, i32 0, !dbg !7736
  br label %cond.end28, !dbg !7736

cond.end28:                                       ; preds = %cond.end20, %cond.true24
  %cond29 = phi %struct.VEC_rtx_base* [ %base26, %cond.true24 ], [ null, %cond.end20 ], !dbg !7736
  %call30 = tail call fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %cond29) #8, !dbg !7736
  tail call fastcc void @VEC_rtx_base_block_remove(%struct.VEC_rtx_base* %cond21, i32 0, i32 %call30) #8, !dbg !7736
  %probs_ok = getelementptr inbounds %struct.succs_info, %struct.succs_info* %sinfo, i64 0, i32 2, !dbg !7737
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %probs_ok, align 8, !dbg !7737
  %tobool31 = icmp eq %struct.VEC_int_heap* %5, null, !dbg !7737
  br i1 %tobool31, label %cond.end36, label %cond.true32, !dbg !7737

cond.true32:                                      ; preds = %cond.end28
  %base34 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !7737
  br label %cond.end36, !dbg !7737

cond.end36:                                       ; preds = %cond.end28, %cond.true32
  %cond37 = phi %struct.VEC_int_base* [ %base34, %cond.true32 ], [ null, %cond.end28 ], !dbg !7737
  br i1 %tobool31, label %cond.end44, label %cond.true40, !dbg !7737

cond.true40:                                      ; preds = %cond.end36
  %base42 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !7737
  br label %cond.end44, !dbg !7737

cond.end44:                                       ; preds = %cond.end36, %cond.true40
  %cond45 = phi %struct.VEC_int_base* [ %base42, %cond.true40 ], [ null, %cond.end36 ], !dbg !7737
  %call46 = tail call fastcc i32 @VEC_int_base_length(%struct.VEC_int_base* %cond45) #8, !dbg !7737
  tail call fastcc void @VEC_int_base_block_remove(%struct.VEC_int_base* %cond37, i32 0, i32 %call46) #8, !dbg !7737
  %all_prob = getelementptr inbounds %struct.succs_info, %struct.succs_info* %sinfo, i64 0, i32 4, !dbg !7738
  store i32 0, i32* %all_prob, align 8, !dbg !7739
  %succs_ok_n = getelementptr inbounds %struct.succs_info, %struct.succs_info* %sinfo, i64 0, i32 6, !dbg !7740
  store i32 0, i32* %succs_ok_n, align 8, !dbg !7741
  %all_succs_n = getelementptr inbounds %struct.succs_info, %struct.succs_info* %sinfo, i64 0, i32 5, !dbg !7742
  store i32 0, i32* %all_succs_n, align 4, !dbg !7743
  ret void, !dbg !7744
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_rtx_base_block_remove(%struct.VEC_rtx_base* %vec_, i32 %ix_, i32 %len_) unnamed_addr #0 !dbg !7745 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !7749, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i32 0, metadata !7750, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i32 %len_, metadata !7751, metadata !DIExpression()), !dbg !7753
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 0, !dbg !7754
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx, metadata !7752, metadata !DIExpression()), !dbg !7753
  %num1 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !7754
  %0 = load i32, i32* %num1, align 8, !dbg !7754
  %sub = sub i32 %0, %len_, !dbg !7754
  store i32 %sub, i32* %num1, align 8, !dbg !7754
  %1 = bitcast %struct.rtx_def** %arrayidx to i8*, !dbg !7754
  %idx.ext = zext i32 %len_ to i64, !dbg !7754
  %add.ptr = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idx.ext, !dbg !7754
  %2 = bitcast %struct.rtx_def** %add.ptr to i8*, !dbg !7754
  %conv4 = zext i32 %sub to i64, !dbg !7754
  %mul = shl nuw nsw i64 %conv4, 3, !dbg !7754
  %call = tail call i8* @memmove(i8* nonnull %1, i8* nonnull %2, i64 %mul) #6, !dbg !7754
  ret void, !dbg !7754
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %vec_) unnamed_addr #0 !dbg !7755 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !7761, metadata !DIExpression()), !dbg !7762
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !7763
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7763

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !7763
  %0 = load i32, i32* %num, align 8, !dbg !7763
  br label %cond.end, !dbg !7763

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !7763
  ret i32 %cond, !dbg !7763
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_base_block_remove(%struct.VEC_int_base* %vec_, i32 %ix_, i32 %len_) unnamed_addr #0 !dbg !7764 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !7769, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i32 0, metadata !7770, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i32 %len_, metadata !7771, metadata !DIExpression()), !dbg !7773
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 0, !dbg !7774
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !7772, metadata !DIExpression()), !dbg !7773
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !7774
  %0 = load i32, i32* %num1, align 4, !dbg !7774
  %sub = sub i32 %0, %len_, !dbg !7774
  store i32 %sub, i32* %num1, align 4, !dbg !7774
  %1 = bitcast i32* %arrayidx to i8*, !dbg !7774
  %idx.ext = zext i32 %len_ to i64, !dbg !7774
  %add.ptr = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idx.ext, !dbg !7774
  %2 = bitcast i32* %add.ptr to i8*, !dbg !7774
  %conv4 = zext i32 %sub to i64, !dbg !7774
  %mul = shl nuw nsw i64 %conv4, 2, !dbg !7774
  %call = tail call i8* @memmove(i8* nonnull %1, i8* nonnull %2, i64 %mul) #6, !dbg !7774
  ret void, !dbg !7774
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_length(%struct.VEC_int_base* %vec_) unnamed_addr #0 !dbg !7775 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !7779, metadata !DIExpression()), !dbg !7780
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !7781
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7781

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !7781
  %0 = load i32, i32* %num, align 4, !dbg !7781
  br label %cond.end, !dbg !7781

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !7781
  ret i32 %cond, !dbg !7781
}

; Function Attrs: nounwind uwtable
define dso_local %struct.succs_info* @compute_succs_info(%struct.rtx_def* %insn, i16 signext %flags) local_unnamed_addr #5 !dbg !7782 {
entry:
  %si = alloca %struct.succ_iterator, align 8
  %succ = alloca %struct.rtx_def*, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7786, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.value(metadata i16 %flags, metadata !7787, metadata !DIExpression()), !dbg !7795
  %0 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 0, !dbg !7796
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #7, !dbg !7796
  %1 = bitcast %struct.rtx_def** %succ to i8*, !dbg !7797
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !7797
  %call = tail call fastcc %struct.succs_info* @alloc_succs_info() #8, !dbg !7798
  call void @llvm.dbg.value(metadata %struct.succs_info* %call, metadata !7790, metadata !DIExpression()), !dbg !7795
  %2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp, i64 0, i32 0, !dbg !7799
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #7, !dbg !7799
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !7789, metadata !DIExpression(DW_OP_deref)), !dbg !7795
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %insn, i32 7) #8, !dbg !7799
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 64, i1 false), !dbg !7799
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #7, !dbg !7799
  %current_flags2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 6, !dbg !7800
  %succs_ok = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call, i64 0, i32 1, !dbg !7801
  %probs_ok = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call, i64 0, i32 2, !dbg !7801
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 1, !dbg !7801
  %succs_ok_n = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call, i64 0, i32 6, !dbg !7801
  %succs_other = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call, i64 0, i32 3, !dbg !7804
  %all_prob19 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call, i64 0, i32 4, !dbg !7805
  %all_succs_n = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call, i64 0, i32 5, !dbg !7800
  br label %for.cond, !dbg !7799

for.cond:                                         ; preds = %if.end20, %entry
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !7788, metadata !DIExpression(DW_OP_deref)), !dbg !7795
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !7789, metadata !DIExpression(DW_OP_deref)), !dbg !7795
  %call1 = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %si, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %insn, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #8, !dbg !7807
  %tobool = icmp eq i8 %call1, 0, !dbg !7799
  br i1 %tobool, label %for.end, label %for.body, !dbg !7799

for.body:                                         ; preds = %for.cond
  %3 = load i16, i16* %current_flags2, align 2, !dbg !7808
  %4 = and i16 %3, -9, !dbg !7809
  call void @llvm.dbg.value(metadata i16 %4, metadata !7791, metadata !DIExpression()), !dbg !7800
  %and61 = and i16 %4, %flags, !dbg !7810
  %tobool7 = icmp eq i16 %and61, 0, !dbg !7810
  br i1 %tobool7, label %if.else, label %if.then, !dbg !7811

if.then:                                          ; preds = %for.body
  %5 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !7812
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !7789, metadata !DIExpression()), !dbg !7795
  %call8 = call fastcc %struct.rtx_def** @VEC_rtx_heap_safe_push(%struct.VEC_rtx_heap** nonnull %succs_ok, %struct.rtx_def* %5) #8, !dbg !7812
  %6 = load i8, i8* %0, align 8, !dbg !7813
  %tobool10 = icmp eq i8 %6, 0, !dbg !7813
  br i1 %tobool10, label %cond.end, label %cond.true, !dbg !7813

cond.true:                                        ; preds = %if.then
  %7 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !7813
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %7, i64 0, i32 8, !dbg !7813
  %8 = load i32, i32* %probability, align 4, !dbg !7813
  br label %cond.end, !dbg !7813

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 10000, %if.then ], !dbg !7813
  %call11 = call fastcc i32* @VEC_int_heap_safe_push(%struct.VEC_int_heap** nonnull %probs_ok, i32 %cond) #8, !dbg !7813
  %9 = load i32, i32* %succs_ok_n, align 8, !dbg !7814
  %inc = add nsw i32 %9, 1, !dbg !7814
  store i32 %inc, i32* %succs_ok_n, align 8, !dbg !7814
  br label %if.end, !dbg !7815

if.else:                                          ; preds = %for.body
  %10 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !7816
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !7789, metadata !DIExpression()), !dbg !7795
  %call12 = call fastcc %struct.rtx_def** @VEC_rtx_heap_safe_push(%struct.VEC_rtx_heap** nonnull %succs_other, %struct.rtx_def* %10) #8, !dbg !7816
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %11 = load i8, i8* %0, align 8, !dbg !7817
  %tobool14 = icmp eq i8 %11, 0, !dbg !7818
  br i1 %tobool14, label %if.then15, label %if.else16, !dbg !7819

if.then15:                                        ; preds = %if.end
  br label %if.end20, !dbg !7820

if.else16:                                        ; preds = %if.end
  %12 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !7821
  %probability18 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %12, i64 0, i32 8, !dbg !7822
  %13 = load i32, i32* %probability18, align 4, !dbg !7822
  %14 = load i32, i32* %all_prob19, align 8, !dbg !7823
  %add = add nsw i32 %14, %13, !dbg !7823
  br label %if.end20

if.end20:                                         ; preds = %if.else16, %if.then15
  %storemerge = phi i32 [ %add, %if.else16 ], [ 10000, %if.then15 ], !dbg !7805
  store i32 %storemerge, i32* %all_prob19, align 8, !dbg !7805
  %15 = load i32, i32* %all_succs_n, align 4, !dbg !7824
  %inc21 = add nsw i32 %15, 1, !dbg !7824
  store i32 %inc21, i32* %all_succs_n, align 4, !dbg !7824
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !7788, metadata !DIExpression(DW_OP_deref)), !dbg !7795
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %si) #8, !dbg !7807
  br label %for.cond, !dbg !7807, !llvm.loop !7825

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !7827
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #7, !dbg !7827
  ret %struct.succs_info* %call, !dbg !7828
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.succs_info* @alloc_succs_info() unnamed_addr #5 !dbg !7829 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 2), align 4, !dbg !7836
  %1 = load i32, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 3), align 8, !dbg !7837
  %cmp = icmp eq i32 %0, %1, !dbg !7838
  br i1 %cmp, label %if.then, label %if.else, !dbg !7839

if.then:                                          ; preds = %entry
  %inc = add nsw i32 %0, 1, !dbg !7840
  store i32 %inc, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 3), align 8, !dbg !7840
  %2 = load i32, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 1), align 8, !dbg !7842
  %cmp1 = icmp slt i32 %inc, %2, !dbg !7843
  br i1 %cmp1, label %if.end, label %if.then2, !dbg !7844

if.then2:                                         ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4496, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7845
  %.pre = load i32, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 2), align 4, !dbg !7846
  %.pre2 = add nsw i32 %.pre, 1, !dbg !7846
  br label %if.end, !dbg !7845

if.end:                                           ; preds = %if.then, %if.then2
  %inc3.pre-phi = phi i32 [ %inc, %if.then ], [ %.pre2, %if.then2 ], !dbg !7846
  store i32 %inc3.pre-phi, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 2), align 4, !dbg !7846
  call void @llvm.dbg.value(metadata i32 %inc3.pre-phi, metadata !7833, metadata !DIExpression()), !dbg !7847
  %call = tail call fastcc %struct.VEC_rtx_heap* @VEC_rtx_heap_alloc(i32 10) #8, !dbg !7848
  %3 = load %struct.succs_info*, %struct.succs_info** getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 0), align 8, !dbg !7849
  %idxprom = sext i32 %inc3.pre-phi to i64, !dbg !7850
  %succs_ok = getelementptr inbounds %struct.succs_info, %struct.succs_info* %3, i64 %idxprom, i32 1, !dbg !7851
  store %struct.VEC_rtx_heap* %call, %struct.VEC_rtx_heap** %succs_ok, align 8, !dbg !7852
  %call4 = tail call fastcc %struct.VEC_rtx_heap* @VEC_rtx_heap_alloc(i32 10) #8, !dbg !7853
  %4 = load %struct.succs_info*, %struct.succs_info** getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 0), align 8, !dbg !7854
  %succs_other = getelementptr inbounds %struct.succs_info, %struct.succs_info* %4, i64 %idxprom, i32 3, !dbg !7855
  store %struct.VEC_rtx_heap* %call4, %struct.VEC_rtx_heap** %succs_other, align 8, !dbg !7856
  %call7 = tail call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 10) #8, !dbg !7857
  %5 = load %struct.succs_info*, %struct.succs_info** getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 0), align 8, !dbg !7858
  %probs_ok = getelementptr inbounds %struct.succs_info, %struct.succs_info* %5, i64 %idxprom, i32 2, !dbg !7859
  store %struct.VEC_int_heap* %call7, %struct.VEC_int_heap** %probs_ok, align 8, !dbg !7860
  %.pre1 = load i32, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 2), align 4, !dbg !7861
  br label %if.end11, !dbg !7862

if.else:                                          ; preds = %entry
  %inc10 = add nsw i32 %0, 1, !dbg !7863
  store i32 %inc10, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 2), align 4, !dbg !7863
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.end
  %6 = phi i32 [ %inc10, %if.else ], [ %.pre1, %if.end ], !dbg !7861
  %7 = load %struct.succs_info*, %struct.succs_info** getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 0), align 8, !dbg !7864
  %idxprom12 = sext i32 %6 to i64, !dbg !7865
  %arrayidx13 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %7, i64 %idxprom12, !dbg !7865
  ret %struct.succs_info* %arrayidx13, !dbg !7866
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_rtx_heap_safe_push(%struct.VEC_rtx_heap** %vec_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !7867 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap** %vec_, metadata !7872, metadata !DIExpression()), !dbg !7874
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !7873, metadata !DIExpression()), !dbg !7874
  %call = tail call fastcc i32 @VEC_rtx_heap_reserve(%struct.VEC_rtx_heap** %vec_, i32 1) #8, !dbg !7875
  %0 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %vec_, align 8, !dbg !7875
  %tobool = icmp eq %struct.VEC_rtx_heap* %0, null, !dbg !7875
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7875

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %0, i64 0, i32 0, !dbg !7875
  br label %cond.end, !dbg !7875

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7875
  %call1 = tail call fastcc %struct.rtx_def** @VEC_rtx_base_quick_push(%struct.VEC_rtx_base* %cond, %struct.rtx_def* %obj_) #8, !dbg !7875
  ret %struct.rtx_def** %call1, !dbg !7875
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_heap_safe_push(%struct.VEC_int_heap** %vec_, i32 %obj_) unnamed_addr #0 !dbg !7876 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !7882, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !7883, metadata !DIExpression()), !dbg !7884
  %call = tail call fastcc i32 @VEC_int_heap_reserve(%struct.VEC_int_heap** %vec_, i32 1) #8, !dbg !7885
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !7885
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !7885
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7885

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !7885
  br label %cond.end, !dbg !7885

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7885
  %call1 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond, i32 %obj_) #8, !dbg !7885
  ret i32* %call1, !dbg !7885
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @bb_ends_ebb_p(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !7886 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7888, metadata !DIExpression()), !dbg !7892
  %call = tail call fastcc %struct.basic_block_def* @bb_next_bb(%struct.basic_block_def* %bb) #8, !dbg !7893
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !7889, metadata !DIExpression()), !dbg !7892
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !7894
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7894
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7895
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !7895
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7896
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !7896
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7896
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !7896
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7896
  %cmp = icmp eq %struct.basic_block_def* %call, %4, !dbg !7898
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !7899

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @forced_ebb_heads, align 8, !dbg !7900
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !7901
  %6 = load i32, i32* %index, align 8, !dbg !7901
  %call1 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %5, i32 %6) #6, !dbg !7902
  %tobool = icmp eq i32 %call1, 0, !dbg !7902
  br i1 %tobool, label %lor.lhs.false2, label %cleanup, !dbg !7903

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, !dbg !7904
  %7 = bitcast %union.basic_block_il_dependent* %il to i32***, !dbg !7904
  %8 = load i32**, i32*** %7, align 8, !dbg !7904
  %9 = load i32*, i32** %8, align 8, !dbg !7904
  %bf.load = load i32, i32* %9, align 8, !dbg !7904
  %bf.clear = and i32 %bf.load, 65535, !dbg !7904
  %cmp3 = icmp eq i32 %bf.clear, 12, !dbg !7904
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !7905

land.lhs.true:                                    ; preds = %lor.lhs.false2
  %call4 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %call) #8, !dbg !7906
  %tobool5 = icmp eq i8 %call4, 0, !dbg !7906
  br i1 %tobool5, label %cleanup, label %if.end, !dbg !7907

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false2
  %call6 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %call) #8, !dbg !7908
  %tobool7 = icmp eq i8 %call6, 0, !dbg !7908
  br i1 %tobool7, label %cleanup, label %if.end9, !dbg !7910

if.end9:                                          ; preds = %if.end
  %10 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7911
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #7, !dbg !7911
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7911
  %call10 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !7911
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7911
  %12 = extractvalue { i32, %struct.VEC_edge_gc** } %call10, 0, !dbg !7911
  store i32 %12, i32* %11, align 8, !dbg !7911
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7911
  %14 = extractvalue { i32, %struct.VEC_edge_gc** } %call10, 1, !dbg !7911
  store %struct.VEC_edge_gc** %14, %struct.VEC_edge_gc*** %13, align 8, !dbg !7911
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %10, i64 16, i1 false), !dbg !7911
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #7, !dbg !7911
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7913
  %16 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7913
  br label %for.cond, !dbg !7911

for.cond:                                         ; preds = %for.inc, %if.end9
  %17 = load i32, i32* %15, align 8, !dbg !7915
  %18 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %16, align 8, !dbg !7915
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !7890, metadata !DIExpression(DW_OP_deref)), !dbg !7892
  %call11 = call fastcc zeroext i8 @ei_cond(i32 %17, %struct.VEC_edge_gc** %18, %struct.edge_def** nonnull %e) #8, !dbg !7915
  %tobool12 = icmp eq i8 %call11, 0, !dbg !7911
  br i1 %tobool12, label %cleanup.loopexit, label %for.body, !dbg !7911

for.body:                                         ; preds = %for.cond
  %19 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7916
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !7890, metadata !DIExpression()), !dbg !7892
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %19, i64 0, i32 7, !dbg !7918
  %20 = load i32, i32* %flags, align 8, !dbg !7918
  %and = and i32 %20, 1, !dbg !7919
  %cmp13 = icmp eq i32 %and, 0, !dbg !7920
  br i1 %cmp13, label %for.inc, label %if.then14, !dbg !7921

if.then14:                                        ; preds = %for.body
  %.lcssa = phi %struct.edge_def* [ %19, %for.body ], !dbg !7916
  call void @llvm.dbg.value(metadata %struct.edge_def* %.lcssa, metadata !7890, metadata !DIExpression()), !dbg !7892
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %.lcssa, i64 0, i32 1, !dbg !7922
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7922
  %cmp15 = icmp eq %struct.basic_block_def* %21, %call, !dbg !7922
  br i1 %cmp15, label %cleanup, label %cond.true, !dbg !7922

cond.true:                                        ; preds = %if.then14
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7922
  br label %cleanup, !dbg !7922

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7891, metadata !DIExpression(DW_OP_deref)), !dbg !7892
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !7915
  br label %for.cond, !dbg !7915, !llvm.loop !7924

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !7926

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true, %if.end, %lor.lhs.false, %cond.true, %if.then14, %entry
  %retval.0 = phi i8 [ 1, %land.lhs.true ], [ 1, %lor.lhs.false ], [ 1, %entry ], [ 1, %if.end ], [ 0, %if.then14 ], [ 0, %cond.true ], [ 1, %cleanup.loopexit ], !dbg !7892
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !7926
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7926
  ret i8 %retval.0, !dbg !7926
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @bb_next_bb(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7927 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7929, metadata !DIExpression()), !dbg !7930
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7931
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7931
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7931
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7931

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7931
  br label %cond.end, !dbg !7931

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7931
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !7931
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb4
  ], !dbg !7932

sw.bb:                                            ; preds = %cond.end
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 6, !dbg !7933
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !7933
  br label %return, !dbg !7935

sw.bb2:                                           ; preds = %cond.end
  %call3 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) #8, !dbg !7936
  br label %return, !dbg !7937

sw.bb4:                                           ; preds = %cond.end
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7938
  %tobool6 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !7938
  br i1 %tobool6, label %cond.end11, label %cond.true7, !dbg !7938

cond.true7:                                       ; preds = %sw.bb4
  %base9 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !7938
  br label %cond.end11, !dbg !7938

cond.end11:                                       ; preds = %sw.bb4, %cond.true7
  %cond12 = phi %struct.VEC_edge_base* [ %base9, %cond.true7 ], [ null, %sw.bb4 ], !dbg !7938
  %call13 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond12, i32 0) #8, !dbg !7938
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call13, i64 0, i32 7, !dbg !7938
  %3 = load i32, i32* %flags, align 8, !dbg !7938
  %and = and i32 %3, 1, !dbg !7938
  %tobool14 = icmp eq i32 %and, 0, !dbg !7938
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7938
  %tobool17 = icmp ne %struct.VEC_edge_gc* %4, null, !dbg !7938
  br i1 %tobool14, label %cond.false25, label %cond.true15, !dbg !7938

cond.true15:                                      ; preds = %cond.end11
  br i1 %tobool17, label %cond.true18, label %cond.end22, !dbg !7938

cond.true18:                                      ; preds = %cond.true15
  %base20 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !7938
  br label %cond.end22, !dbg !7938

cond.end22:                                       ; preds = %cond.true15, %cond.true18
  %cond23 = phi %struct.VEC_edge_base* [ %base20, %cond.true18 ], [ null, %cond.true15 ], !dbg !7938
  %call24 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond23, i32 0) #8, !dbg !7938
  br label %cond.end35, !dbg !7938

cond.false25:                                     ; preds = %cond.end11
  br i1 %tobool17, label %cond.true28, label %cond.end32, !dbg !7938

cond.true28:                                      ; preds = %cond.false25
  %base30 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !7938
  br label %cond.end32, !dbg !7938

cond.end32:                                       ; preds = %cond.false25, %cond.true28
  %cond33 = phi %struct.VEC_edge_base* [ %base30, %cond.true28 ], [ null, %cond.false25 ], !dbg !7938
  %call34 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond33, i32 1) #8, !dbg !7938
  br label %cond.end35, !dbg !7938

cond.end35:                                       ; preds = %cond.end32, %cond.end22
  %cond36 = phi %struct.edge_def* [ %call24, %cond.end22 ], [ %call34, %cond.end32 ], !dbg !7938
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond36, i64 0, i32 1, !dbg !7939
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7939
  br label %return, !dbg !7940

sw.default:                                       ; preds = %cond.end
  %next_bb37 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 6, !dbg !7941
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb37, align 8, !dbg !7941
  br label %return, !dbg !7942

return:                                           ; preds = %sw.default, %cond.end35, %sw.bb2, %sw.bb
  %retval.0 = phi %struct.basic_block_def* [ %6, %sw.default ], [ %5, %cond.end35 ], [ %call3, %sw.bb2 ], [ %1, %sw.bb ], !dbg !7943
  ret %struct.basic_block_def* %retval.0, !dbg !7944
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7945 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7947, metadata !DIExpression()), !dbg !7948
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !7949
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !7949
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7949
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7949

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7949
  br label %cond.end, !dbg !7949

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7949
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !7949
  %cmp = icmp eq i32 %call, 1, !dbg !7950
  %conv2 = zext i1 %cmp to i8, !dbg !7949
  ret i8 %conv2, !dbg !7951
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !7952 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !7956, metadata !DIExpression()), !dbg !7958
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !7959
  store i32 0, i32* %index, align 8, !dbg !7960
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !7961
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !7962
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !7963
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !7963
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !7963
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !7964 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !7969, metadata !DIExpression()), !dbg !7970
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !7971
  %tobool = icmp eq i8 %call, 0, !dbg !7971
  br i1 %tobool, label %if.then, label %if.else, !dbg !7973

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !7974
  br label %return, !dbg !7976

if.else:                                          ; preds = %entry
  br label %return, !dbg !7977

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !7979
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !7979
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !7979
  ret i8 %retval.0, !dbg !7980
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !7981 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !7986, metadata !DIExpression()), !dbg !7987
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !7988
  %0 = load i32, i32* %index, align 8, !dbg !7988
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !7988
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !7988
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #8, !dbg !7988
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !7988
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7988

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !7988
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !7988
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #8, !dbg !7988
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !7988
  br label %cond.end, !dbg !7988

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7988
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !7988
  %cmp = icmp ult i32 %0, %call2, !dbg !7988
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !7988

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7988
  br label %cond.end5, !dbg !7988

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !7989
  %inc = add i32 %5, 1, !dbg !7989
  store i32 %inc, i32* %index, align 8, !dbg !7989
  ret void, !dbg !7990
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @in_same_ebb_p(%struct.rtx_def* %insn, %struct.rtx_def* %succ) local_unnamed_addr #5 !dbg !7991 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7995, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %succ, metadata !7996, metadata !DIExpression()), !dbg !7998
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !7999
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !7999
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7999
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !7997, metadata !DIExpression()), !dbg !7998
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %succ, i64 0, i32 1, i32 0, i32 1, !dbg !8000
  %rt_bb4 = bitcast %struct.object_block** %arrayidx3 to %struct.basic_block_def**, !dbg !8000
  br label %for.cond, !dbg !8005

for.cond:                                         ; preds = %if.end6, %entry
  %ptr.0 = phi %struct.basic_block_def* [ %0, %entry ], [ %call7, %if.end6 ], !dbg !7998
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %ptr.0, metadata !7997, metadata !DIExpression()), !dbg !7998
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb4, align 8, !dbg !8006
  %cmp = icmp eq %struct.basic_block_def* %ptr.0, %1, !dbg !8007
  br i1 %cmp, label %cleanup, label %if.end, !dbg !8008

if.end:                                           ; preds = %for.cond
  %call = tail call zeroext i8 @bb_ends_ebb_p(%struct.basic_block_def* %ptr.0) #8, !dbg !8009
  %tobool = icmp eq i8 %call, 0, !dbg !8009
  br i1 %tobool, label %if.end6, label %cleanup, !dbg !8011

if.end6:                                          ; preds = %if.end
  %call7 = tail call fastcc %struct.basic_block_def* @bb_next_bb(%struct.basic_block_def* %ptr.0) #8, !dbg !8012
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call7, metadata !7997, metadata !DIExpression()), !dbg !7998
  br label %for.cond, !dbg !8013, !llvm.loop !8014

cleanup:                                          ; preds = %if.end, %for.cond
  %retval.0 = phi i8 [ 1, %for.cond ], [ 0, %if.end ], !dbg !8017
  ret i8 %retval.0, !dbg !8018
}

; Function Attrs: nounwind uwtable
define dso_local void @clear_outdated_rtx_info(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !8019 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8021, metadata !DIExpression()), !dbg !8023
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !8024
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8024
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8024
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !8024
  br label %for.cond, !dbg !8024

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0.in = phi %struct.rtx_def** [ %head_, %entry ], [ %rt_rtx88, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !8026
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !8022, metadata !DIExpression()), !dbg !8023
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !8027
  br i1 %tobool, label %for.end, label %land.rhs, !dbg !8027

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8027
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !8027
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8027
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8027
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !8027
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8027
  %cmp = icmp eq %struct.rtx_def* %insn.0, %4, !dbg !8027
  br i1 %cmp, label %for.end, label %for.body, !dbg !8024

for.body:                                         ; preds = %land.rhs
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !8029
  %bf.load = load i32, i32* %5, align 8, !dbg !8029
  %bf.clear = and i32 %bf.load, 65535, !dbg !8029
  %cmp3 = icmp eq i32 %bf.clear, 8, !dbg !8029
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !8029

lor.lhs.false:                                    ; preds = %for.body
  %cmp6 = icmp eq i32 %bf.clear, 7, !dbg !8029
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !8029

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp10 = icmp eq i32 %bf.clear, 9, !dbg !8029
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !8029

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %cmp14 = icmp eq i32 %bf.clear, 10, !dbg !8029
  br i1 %cmp14, label %if.then, label %for.inc, !dbg !8031

if.then:                                          ; preds = %lor.lhs.false11, %lor.lhs.false7, %lor.lhs.false, %for.body
  %bf.clear16 = and i32 %bf.load, -268435457, !dbg !8032
  store i32 %bf.clear16, i32* %5, align 8, !dbg !8032
  %6 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8034
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %6, i64 0, i32 0, !dbg !8034
  %7 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8034
  %base20 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %7, i64 0, i32 0, !dbg !8034
  %arrayidx26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8034
  %rt_int = bitcast %union.rtunion_def* %arrayidx26 to i32*, !dbg !8034
  %8 = load i32, i32* %rt_int, align 8, !dbg !8034
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base20, i32 %8) #8, !dbg !8034
  %call27 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #8, !dbg !8034
  %after_stall_p = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call27, i64 0, i32 13, !dbg !8034
  %bf.load28 = load i8, i8* %after_stall_p, align 4, !dbg !8035
  %bf.clear29 = and i8 %bf.load28, -5, !dbg !8035
  store i8 %bf.clear29, i8* %after_stall_p, align 4, !dbg !8035
  %9 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8036
  %base32 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %9, i64 0, i32 0, !dbg !8036
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8036
  %base38 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !8036
  %11 = load i32, i32* %rt_int, align 8, !dbg !8036
  %call46 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base38, i32 %11) #8, !dbg !8036
  %call47 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base32, i32 %call46) #8, !dbg !8036
  %sched_times = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call47, i64 0, i32 0, i32 5, !dbg !8036
  store i32 0, i32* %sched_times, align 8, !dbg !8037
  %12 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8038
  %base50 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %12, i64 0, i32 0, !dbg !8038
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8038
  %base56 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i64 0, i32 0, !dbg !8038
  %14 = load i32, i32* %rt_int, align 8, !dbg !8038
  %call64 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base56, i32 %14) #8, !dbg !8038
  %call65 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base50, i32 %call64) #8, !dbg !8038
  %priority_adj = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call65, i64 0, i32 0, i32 4, !dbg !8038
  store i32 0, i32* %priority_adj, align 4, !dbg !8039
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8040
  %base69 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i64 0, i32 0, !dbg !8040
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8040
  %base75 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i64 0, i32 0, !dbg !8040
  %17 = load i32, i32* %rt_int, align 8, !dbg !8040
  %call83 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base75, i32 %17) #8, !dbg !8040
  %call84 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base69, i32 %call83) #8, !dbg !8040
  %transformed_insns = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call84, i64 0, i32 7, !dbg !8040
  %18 = load %struct.htab*, %struct.htab** %transformed_insns, align 8, !dbg !8040
  tail call void @htab_empty(%struct.htab* %18) #6, !dbg !8041
  br label %for.inc, !dbg !8042

for.inc:                                          ; preds = %lor.lhs.false11, %if.then
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8027
  %rt_rtx88 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !8027
  br label %for.cond, !dbg !8027, !llvm.loop !8043

for.end:                                          ; preds = %land.rhs, %for.cond
  ret void, !dbg !8045
}

declare dso_local void @htab_empty(%struct.htab*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @free_bb_note_pool() local_unnamed_addr #5 !dbg !8046 {
entry:
  tail call fastcc void @VEC_rtx_heap_free(%struct.VEC_rtx_heap** nonnull @bb_note_pool) #8, !dbg !8047
  ret void, !dbg !8048
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_rtx_heap_free(%struct.VEC_rtx_heap** %vec_) unnamed_addr #0 !dbg !8049 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap** %vec_, metadata !8053, metadata !DIExpression()), !dbg !8054
  %0 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %vec_, align 8, !dbg !8055
  %tobool = icmp eq %struct.VEC_rtx_heap* %0, null, !dbg !8055
  br i1 %tobool, label %if.end, label %if.then, !dbg !8057

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_rtx_heap* %0 to i8*, !dbg !8057
  tail call void @free(i8* nonnull %1) #6, !dbg !8055
  br label %if.end, !dbg !8055

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_rtx_heap* null, %struct.VEC_rtx_heap** %vec_, align 8, !dbg !8057
  ret void, !dbg !8057
}

; Function Attrs: nounwind uwtable
define dso_local void @alloc_sched_pools() local_unnamed_addr #5 !dbg !8058 {
entry:
  %0 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !8061
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %0, i64 85, i32 1, !dbg !8061
  %1 = load i32, i32* %value, align 8, !dbg !8061
  %add = add nsw i32 %1, 1, !dbg !8062
  call void @llvm.dbg.value(metadata i32 %add, metadata !8060, metadata !DIExpression()), !dbg !8063
  %conv = sext i32 %add to i64, !dbg !8064
  %call = tail call i8* @xcalloc(i64 %conv, i64 48) #6, !dbg !8064
  store i8* %call, i8** bitcast (%struct.anon.4* @succs_info_pool to i8**), align 8, !dbg !8065
  store i32 %add, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 1), align 8, !dbg !8066
  store i32 -1, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 2), align 4, !dbg !8067
  store i32 -1, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 3), align 8, !dbg !8068
  %call1 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 112, i64 500) #6, !dbg !8069
  store %struct.alloc_pool_def* %call1, %struct.alloc_pool_def** @sched_lists_pool, align 8, !dbg !8070
  ret void, !dbg !8071
}

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @free_sched_pools() local_unnamed_addr #5 !dbg !8072 {
entry:
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @sched_lists_pool, align 8, !dbg !8075
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %0) #6, !dbg !8076
  %1 = load i32, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 2), align 4, !dbg !8077
  %cmp = icmp eq i32 %1, -1, !dbg !8077
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8077

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4809, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8077
  br label %cond.end, !dbg !8077

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata i32 0, metadata !8074, metadata !DIExpression()), !dbg !8078
  br label %for.cond, !dbg !8079

for.cond:                                         ; preds = %for.body, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end ], !dbg !8081
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8074, metadata !DIExpression()), !dbg !8078
  %2 = load i32, i32* getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 3), align 8, !dbg !8082
  %3 = sext i32 %2 to i64, !dbg !8084
  %cmp1 = icmp slt i64 %indvars.iv, %3, !dbg !8084
  %4 = load %struct.succs_info*, %struct.succs_info** getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 0), align 8, !dbg !8078
  br i1 %cmp1, label %for.body, label %for.end, !dbg !8085

for.body:                                         ; preds = %for.cond
  %succs_ok = getelementptr inbounds %struct.succs_info, %struct.succs_info* %4, i64 %indvars.iv, i32 1, !dbg !8086
  tail call fastcc void @VEC_rtx_heap_free(%struct.VEC_rtx_heap** nonnull %succs_ok) #8, !dbg !8086
  %5 = load %struct.succs_info*, %struct.succs_info** getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 0), align 8, !dbg !8088
  %succs_other = getelementptr inbounds %struct.succs_info, %struct.succs_info* %5, i64 %indvars.iv, i32 3, !dbg !8088
  tail call fastcc void @VEC_rtx_heap_free(%struct.VEC_rtx_heap** nonnull %succs_other) #8, !dbg !8088
  %6 = load %struct.succs_info*, %struct.succs_info** getelementptr inbounds (%struct.anon.4, %struct.anon.4* @succs_info_pool, i64 0, i32 0), align 8, !dbg !8089
  %probs_ok = getelementptr inbounds %struct.succs_info, %struct.succs_info* %6, i64 %indvars.iv, i32 2, !dbg !8089
  tail call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %probs_ok) #8, !dbg !8089
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8090
  call void @llvm.dbg.value(metadata i32 undef, metadata !8074, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8078
  br label %for.cond, !dbg !8091, !llvm.loop !8092

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.succs_info* [ %4, %for.cond ], !dbg !8078
  %7 = bitcast %struct.succs_info* %.lcssa to i8*, !dbg !8094
  tail call void @free(i8* %7) #6, !dbg !8095
  ret void, !dbg !8096
}

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !8097 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !8101, metadata !DIExpression()), !dbg !8102
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !8103
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !8103
  br i1 %tobool, label %if.end, label %if.then, !dbg !8105

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !8105
  tail call void @free(i8* nonnull %1) #6, !dbg !8103
  br label %if.end, !dbg !8103

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !8105
  ret void, !dbg !8105
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_remove_empty_bb(%struct.basic_block_def* %empty_bb, i8 zeroext %merge_up_p, i8 zeroext %remove_from_cfg_p) local_unnamed_addr #5 !dbg !8106 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %empty_bb, metadata !8110, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8 %merge_up_p, metadata !8111, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8 %remove_from_cfg_p, metadata !8112, metadata !DIExpression()), !dbg !8118
  %call = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %empty_bb) #8, !dbg !8119
  %tobool = icmp eq i8 %call, 0, !dbg !8119
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8119

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5060, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8119
  br label %cond.end, !dbg !8119

cond.end:                                         ; preds = %entry, %cond.true
  %tobool1 = icmp eq i8 %merge_up_p, 0, !dbg !8120
  br i1 %tobool1, label %if.else, label %if.then, !dbg !8121

if.then:                                          ; preds = %cond.end
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %empty_bb, i64 0, i32 5, !dbg !8122
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !8122
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !8113, metadata !DIExpression()), !dbg !8118
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %empty_bb, i64 0, i32 0, !dbg !8124
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !8124
  %tobool2 = icmp eq %struct.VEC_edge_gc* %1, null, !dbg !8124
  br i1 %tobool2, label %cond.end6, label %cond.true3, !dbg !8124

cond.true3:                                       ; preds = %if.then
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !8124
  br label %cond.end6, !dbg !8124

cond.end6:                                        ; preds = %if.then, %cond.true3
  %cond7 = phi %struct.VEC_edge_base* [ %base, %cond.true3 ], [ null, %if.then ], !dbg !8124
  %call8 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond7) #8, !dbg !8124
  %cmp = icmp eq i32 %call8, 1, !dbg !8124
  br i1 %cmp, label %land.lhs.true, label %cond.true19, !dbg !8124

land.lhs.true:                                    ; preds = %cond.end6
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !8124
  %tobool10 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !8124
  br i1 %tobool10, label %cond.end15, label %cond.true11, !dbg !8124

cond.true11:                                      ; preds = %land.lhs.true
  %base13 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !8124
  br label %cond.end15, !dbg !8124

cond.end15:                                       ; preds = %land.lhs.true, %cond.true11
  %cond16 = phi %struct.VEC_edge_base* [ %base13, %cond.true11 ], [ null, %land.lhs.true ], !dbg !8124
  %call17 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond16, i32 0) #8, !dbg !8124
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call17, i64 0, i32 0, !dbg !8124
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !8124
  %cmp18 = icmp eq %struct.basic_block_def* %3, %0, !dbg !8124
  br i1 %cmp18, label %if.end56, label %cond.true19, !dbg !8124

cond.true19:                                      ; preds = %cond.end15, %cond.end6
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5066, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8124
  br label %if.end56, !dbg !8124

if.else:                                          ; preds = %cond.end
  %4 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !8125
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #7, !dbg !8125
  %call23 = tail call fastcc %struct.basic_block_def* @bb_next_bb(%struct.basic_block_def* %empty_bb) #8, !dbg !8126
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call23, metadata !8113, metadata !DIExpression()), !dbg !8118
  %5 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !8127
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7, !dbg !8127
  %preds24 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %empty_bb, i64 0, i32 0, !dbg !8127
  %call25 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds24) #8, !dbg !8127
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !8127
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call25, 0, !dbg !8127
  store i32 %7, i32* %6, align 8, !dbg !8127
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !8127
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call25, 1, !dbg !8127
  store %struct.VEC_edge_gc** %9, %struct.VEC_edge_gc*** %8, align 8, !dbg !8127
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %5, i64 16, i1 false), !dbg !8127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7, !dbg !8127
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !8129
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !8129
  br label %for.cond, !dbg !8131

for.cond:                                         ; preds = %if.end, %if.else
  %12 = load i32, i32* %10, align 8, !dbg !8132
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !8132
  %call26 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %12, %struct.VEC_edge_gc** %13) #8, !dbg !8132
  call void @llvm.dbg.value(metadata %struct.edge_def* %call26, metadata !8114, metadata !DIExpression()), !dbg !8133
  %tobool27 = icmp eq %struct.edge_def* %call26, null, !dbg !8134
  br i1 %tobool27, label %for.end, label %for.body, !dbg !8134

for.body:                                         ; preds = %for.cond
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call26, i64 0, i32 7, !dbg !8135
  %14 = load i32, i32* %flags, align 8, !dbg !8135
  %and = and i32 %14, 1, !dbg !8138
  %tobool28 = icmp eq i32 %and, 0, !dbg !8138
  br i1 %tobool28, label %if.then29, label %if.else31, !dbg !8139

if.then29:                                        ; preds = %for.body
  %call30 = call zeroext i8 @sel_redirect_edge_and_branch(%struct.edge_def* nonnull %call26, %struct.basic_block_def* %call23) #8, !dbg !8140
  br label %if.end, !dbg !8140

if.else31:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8117, metadata !DIExpression(DW_OP_deref)), !dbg !8133
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !8141
  br label %if.end

if.end:                                           ; preds = %if.else31, %if.then29
  br label %for.cond, !dbg !8142, !llvm.loop !8143

for.end:                                          ; preds = %for.cond
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %empty_bb, i64 0, i32 1, !dbg !8145
  %15 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8145
  %tobool32 = icmp eq %struct.VEC_edge_gc* %15, null, !dbg !8145
  br i1 %tobool32, label %cond.end37, label %cond.true33, !dbg !8145

cond.true33:                                      ; preds = %for.end
  %base35 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %15, i64 0, i32 0, !dbg !8145
  br label %cond.end37, !dbg !8145

cond.end37:                                       ; preds = %for.end, %cond.true33
  %cond38 = phi %struct.VEC_edge_base* [ %base35, %cond.true33 ], [ null, %for.end ], !dbg !8145
  %call39 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond38) #8, !dbg !8145
  %cmp40 = icmp eq i32 %call39, 1, !dbg !8145
  br i1 %cmp40, label %land.lhs.true41, label %cond.true52, !dbg !8145

land.lhs.true41:                                  ; preds = %cond.end37
  %16 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8145
  %tobool43 = icmp eq %struct.VEC_edge_gc* %16, null, !dbg !8145
  br i1 %tobool43, label %cond.end48, label %cond.true44, !dbg !8145

cond.true44:                                      ; preds = %land.lhs.true41
  %base46 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %16, i64 0, i32 0, !dbg !8145
  br label %cond.end48, !dbg !8145

cond.end48:                                       ; preds = %land.lhs.true41, %cond.true44
  %cond49 = phi %struct.VEC_edge_base* [ %base46, %cond.true44 ], [ null, %land.lhs.true41 ], !dbg !8145
  %call50 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond49, i32 0) #8, !dbg !8145
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call50, i64 0, i32 1, !dbg !8145
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8145
  %cmp51 = icmp eq %struct.basic_block_def* %17, %call23, !dbg !8145
  br i1 %cmp51, label %cond.end54, label %cond.true52, !dbg !8145

cond.true52:                                      ; preds = %cond.end48, %cond.end37
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5087, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8145
  br label %cond.end54, !dbg !8145

cond.end54:                                       ; preds = %cond.end48, %cond.true52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #7, !dbg !8146
  br label %if.end56

if.end56:                                         ; preds = %cond.true19, %cond.end15, %cond.end54
  %merge_bb.0 = phi %struct.basic_block_def* [ %call23, %cond.end54 ], [ %0, %cond.end15 ], [ %0, %cond.true19 ], !dbg !8147
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %merge_bb.0, metadata !8113, metadata !DIExpression()), !dbg !8118
  call fastcc void @move_bb_info(%struct.basic_block_def* %merge_bb.0, %struct.basic_block_def* %empty_bb) #8, !dbg !8148
  call fastcc void @remove_empty_bb(%struct.basic_block_def* %empty_bb, i8 zeroext %remove_from_cfg_p) #8, !dbg !8149
  ret void, !dbg !8150
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_safe_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !8151 {
entry:
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !8156
  %tobool = icmp eq i8 %call, 0, !dbg !8156
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8157

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !8158
  br label %cond.end, !dbg !8157

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.edge_def* [ %call1, %cond.true ], [ null, %entry ], !dbg !8157
  ret %struct.edge_def* %cond, !dbg !8159
}

; Function Attrs: nounwind uwtable
define internal fastcc void @move_bb_info(%struct.basic_block_def* %merge_bb, %struct.basic_block_def* %empty_bb) unnamed_addr #5 !dbg !8160 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %merge_bb, metadata !8162, metadata !DIExpression()), !dbg !8164
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %empty_bb, metadata !8163, metadata !DIExpression()), !dbg !8164
  %call = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %merge_bb) #8, !dbg !8165
  %tobool = icmp eq i8 %call, 0, !dbg !8165
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8165

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5042, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8165
  br label %cond.end, !dbg !8165

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !8166
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %0, i64 0, i32 0, !dbg !8166
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %empty_bb, i64 0, i32 9, !dbg !8166
  %1 = load i32, i32* %index, align 8, !dbg !8166
  %call6 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %1) #8, !dbg !8166
  %note_list = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call6, i64 0, i32 0, !dbg !8166
  %2 = load %struct.rtx_def*, %struct.rtx_def** %note_list, align 8, !dbg !8166
  %3 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !8167
  %base9 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %3, i64 0, i32 0, !dbg !8167
  %index13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %merge_bb, i64 0, i32 9, !dbg !8167
  %4 = load i32, i32* %index13, align 8, !dbg !8167
  %call14 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base9, i32 %4) #8, !dbg !8167
  %note_list15 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call14, i64 0, i32 0, !dbg !8167
  tail call void @concat_note_lists(%struct.rtx_def* %2, %struct.rtx_def** %note_list15) #6, !dbg !8168
  %5 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !8169
  %base18 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %5, i64 0, i32 0, !dbg !8169
  %6 = load i32, i32* %index, align 8, !dbg !8169
  %call23 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base18, i32 %6) #8, !dbg !8169
  %note_list24 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call23, i64 0, i32 0, !dbg !8169
  store %struct.rtx_def* null, %struct.rtx_def** %note_list24, align 8, !dbg !8170
  ret void, !dbg !8171
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_empty_bb(%struct.basic_block_def* %empty_bb, i8 zeroext %remove_from_cfg_p) unnamed_addr #5 !dbg !8172 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %empty_bb, metadata !8176, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i8 %remove_from_cfg_p, metadata !8177, metadata !DIExpression()), !dbg !8191
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %empty_bb, i64 0, i32 7, !dbg !8192
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8192
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8192
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !8192
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !8192
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !8192
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8192
  %cmp = icmp eq %struct.rtx_def* %1, %2, !dbg !8192
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !8192

lor.lhs.false:                                    ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !8192
  %bf.load = load i32, i32* %3, align 8, !dbg !8192
  %bf.clear = and i32 %bf.load, 65535, !dbg !8192
  %cmp6 = icmp eq i32 %bf.clear, 12, !dbg !8192
  br i1 %cmp6, label %cond.end, label %cond.true, !dbg !8192

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5102, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8192
  br label %cond.end, !dbg !8192

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %tobool = icmp eq i8 %remove_from_cfg_p, 0, !dbg !8193
  br i1 %tobool, label %if.end184, label %land.lhs.true, !dbg !8194

land.lhs.true:                                    ; preds = %cond.end
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %empty_bb, i64 0, i32 0, !dbg !8195
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !8195
  %tobool7 = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !8195
  br i1 %tobool7, label %cond.end11, label %cond.true8, !dbg !8195

cond.true8:                                       ; preds = %land.lhs.true
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !8195
  br label %cond.end11, !dbg !8195

cond.end11:                                       ; preds = %land.lhs.true, %cond.true8
  %cond12 = phi %struct.VEC_edge_base* [ %base, %cond.true8 ], [ null, %land.lhs.true ], !dbg !8195
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond12) #8, !dbg !8195
  %cmp13 = icmp eq i32 %call, 0, !dbg !8196
  br i1 %cmp13, label %lor.lhs.false15, label %if.then, !dbg !8197

lor.lhs.false15:                                  ; preds = %cond.end11
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %empty_bb, i64 0, i32 1, !dbg !8198
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8198
  %tobool16 = icmp eq %struct.VEC_edge_gc* %5, null, !dbg !8198
  br i1 %tobool16, label %cond.end21, label %cond.true17, !dbg !8198

cond.true17:                                      ; preds = %lor.lhs.false15
  %base19 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !8198
  br label %cond.end21, !dbg !8198

cond.end21:                                       ; preds = %lor.lhs.false15, %cond.true17
  %cond22 = phi %struct.VEC_edge_base* [ %base19, %cond.true17 ], [ null, %lor.lhs.false15 ], !dbg !8198
  %call23 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond22) #8, !dbg !8198
  %cmp24 = icmp eq i32 %call23, 0, !dbg !8199
  br i1 %cmp24, label %if.end184, label %if.then, !dbg !8200

if.then:                                          ; preds = %cond.end21, %cond.end11
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !8201
  %tobool27 = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !8201
  br i1 %tobool27, label %cond.end32, label %cond.true28, !dbg !8201

cond.true28:                                      ; preds = %if.then
  %base30 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !8201
  br label %cond.end32, !dbg !8201

cond.end32:                                       ; preds = %if.then, %cond.true28
  %cond33 = phi %struct.VEC_edge_base* [ %base30, %cond.true28 ], [ null, %if.then ], !dbg !8201
  %call34 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond33) #8, !dbg !8201
  %cmp35 = icmp eq i32 %call34, 0, !dbg !8202
  br i1 %cmp35, label %if.end, label %if.then37, !dbg !8203

if.then37:                                        ; preds = %cond.end32
  %7 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !8204
  %tobool39 = icmp eq %struct.VEC_edge_gc* %7, null, !dbg !8204
  br i1 %tobool39, label %cond.end44, label %cond.true40, !dbg !8204

cond.true40:                                      ; preds = %if.then37
  %base42 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !8204
  br label %cond.end44, !dbg !8204

cond.end44:                                       ; preds = %if.then37, %cond.true40
  %cond45 = phi %struct.VEC_edge_base* [ %base42, %cond.true40 ], [ null, %if.then37 ], !dbg !8204
  %call46 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond45) #8, !dbg !8204
  %cmp47 = icmp eq i32 %call46, 1, !dbg !8204
  br i1 %cmp47, label %cond.end51, label %cond.true49, !dbg !8204

cond.true49:                                      ; preds = %cond.end44
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5117, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8204
  br label %cond.end51, !dbg !8204

cond.end51:                                       ; preds = %cond.end44, %cond.true49
  %8 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !8205
  %tobool54 = icmp eq %struct.VEC_edge_gc* %8, null, !dbg !8205
  br i1 %tobool54, label %cond.end59, label %cond.true55, !dbg !8205

cond.true55:                                      ; preds = %cond.end51
  %base57 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %8, i64 0, i32 0, !dbg !8205
  br label %cond.end59, !dbg !8205

cond.end59:                                       ; preds = %cond.end51, %cond.true55
  %cond60 = phi %struct.VEC_edge_base* [ %base57, %cond.true55 ], [ null, %cond.end51 ], !dbg !8205
  %call61 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond60, i32 0) #8, !dbg !8205
  call void @llvm.dbg.value(metadata %struct.edge_def* %call61, metadata !8182, metadata !DIExpression()), !dbg !8206
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call61, i64 0, i32 0, !dbg !8207
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !8207
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %empty_bb, i64 0, i32 5, !dbg !8207
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !8207
  %cmp62 = icmp eq %struct.basic_block_def* %9, %10, !dbg !8207
  br i1 %cmp62, label %land.lhs.true64, label %cond.true66, !dbg !8207

land.lhs.true64:                                  ; preds = %cond.end59
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call61, i64 0, i32 7, !dbg !8207
  %11 = load i32, i32* %flags, align 8, !dbg !8207
  %and = and i32 %11, 1, !dbg !8207
  %tobool65 = icmp eq i32 %and, 0, !dbg !8207
  br i1 %tobool65, label %cond.true66, label %cond.end68, !dbg !8207

cond.true66:                                      ; preds = %land.lhs.true64, %cond.end59
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8207
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !8208
  br label %cond.end68, !dbg !8207

cond.end68:                                       ; preds = %land.lhs.true64, %cond.true66
  %12 = phi %struct.basic_block_def* [ %9, %land.lhs.true64 ], [ %.pre, %cond.true66 ], !dbg !8208
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !8178, metadata !DIExpression()), !dbg !8209
  br label %if.end, !dbg !8210

if.end:                                           ; preds = %cond.end32, %cond.end68
  %pred.0 = phi %struct.basic_block_def* [ %12, %cond.end68 ], [ null, %cond.end32 ], !dbg !8211
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred.0, metadata !8178, metadata !DIExpression()), !dbg !8209
  %succs71 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %empty_bb, i64 0, i32 1, !dbg !8212
  %13 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs71, align 8, !dbg !8212
  %tobool72 = icmp eq %struct.VEC_edge_gc* %13, null, !dbg !8212
  br i1 %tobool72, label %cond.end77, label %cond.true73, !dbg !8212

cond.true73:                                      ; preds = %if.end
  %base75 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %13, i64 0, i32 0, !dbg !8212
  br label %cond.end77, !dbg !8212

cond.end77:                                       ; preds = %if.end, %cond.true73
  %cond78 = phi %struct.VEC_edge_base* [ %base75, %cond.true73 ], [ null, %if.end ], !dbg !8212
  %call79 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond78) #8, !dbg !8212
  %cmp80 = icmp eq i32 %call79, 0, !dbg !8214
  br i1 %cmp80, label %if.end108, label %if.then82, !dbg !8215

if.then82:                                        ; preds = %cond.end77
  %14 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs71, align 8, !dbg !8216
  %tobool84 = icmp eq %struct.VEC_edge_gc* %14, null, !dbg !8216
  br i1 %tobool84, label %cond.end89, label %cond.true85, !dbg !8216

cond.true85:                                      ; preds = %if.then82
  %base87 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %14, i64 0, i32 0, !dbg !8216
  br label %cond.end89, !dbg !8216

cond.end89:                                       ; preds = %if.then82, %cond.true85
  %cond90 = phi %struct.VEC_edge_base* [ %base87, %cond.true85 ], [ null, %if.then82 ], !dbg !8216
  %call91 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond90) #8, !dbg !8216
  %cmp92 = icmp eq i32 %call91, 1, !dbg !8216
  br i1 %cmp92, label %cond.end96, label %cond.true94, !dbg !8216

cond.true94:                                      ; preds = %cond.end89
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5132, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8216
  br label %cond.end96, !dbg !8216

cond.end96:                                       ; preds = %cond.end89, %cond.true94
  %15 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs71, align 8, !dbg !8218
  %tobool99 = icmp eq %struct.VEC_edge_gc* %15, null, !dbg !8218
  br i1 %tobool99, label %cond.end104, label %cond.true100, !dbg !8218

cond.true100:                                     ; preds = %cond.end96
  %base102 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %15, i64 0, i32 0, !dbg !8218
  br label %cond.end104, !dbg !8218

cond.end104:                                      ; preds = %cond.end96, %cond.true100
  %cond105 = phi %struct.VEC_edge_base* [ %base102, %cond.true100 ], [ null, %cond.end96 ], !dbg !8218
  %call106 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond105, i32 0) #8, !dbg !8218
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call106, i64 0, i32 1, !dbg !8219
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8219
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %16, metadata !8181, metadata !DIExpression()), !dbg !8209
  br label %if.end108, !dbg !8220

if.end108:                                        ; preds = %cond.end77, %cond.end104
  %succ.0 = phi %struct.basic_block_def* [ %16, %cond.end104 ], [ null, %cond.end77 ], !dbg !8221
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %succ.0, metadata !8181, metadata !DIExpression()), !dbg !8209
  %17 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !8222
  %tobool110 = icmp eq %struct.VEC_edge_gc* %17, null, !dbg !8222
  br i1 %tobool110, label %cond.end115, label %cond.true111, !dbg !8222

cond.true111:                                     ; preds = %if.end108
  %base113 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %17, i64 0, i32 0, !dbg !8222
  br label %cond.end115, !dbg !8222

cond.end115:                                      ; preds = %if.end108, %cond.true111
  %cond116 = phi %struct.VEC_edge_base* [ %base113, %cond.true111 ], [ null, %if.end108 ], !dbg !8222
  %call117 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond116) #8, !dbg !8222
  %cmp118 = icmp ne i32 %call117, 0, !dbg !8223
  %cmp121 = icmp ne %struct.basic_block_def* %succ.0, null, !dbg !8224
  %or.cond = and i1 %cmp118, %cmp121, !dbg !8225
  br i1 %or.cond, label %if.then123, label %if.end151, !dbg !8225

if.then123:                                       ; preds = %cond.end115
  %18 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !8226
  %tobool126 = icmp eq %struct.VEC_edge_gc* %18, null, !dbg !8226
  br i1 %tobool126, label %cond.end131, label %cond.true127, !dbg !8226

cond.true127:                                     ; preds = %if.then123
  %base129 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %18, i64 0, i32 0, !dbg !8226
  br label %cond.end131, !dbg !8226

cond.end131:                                      ; preds = %if.then123, %cond.true127
  %cond132 = phi %struct.VEC_edge_base* [ %base129, %cond.true127 ], [ null, %if.then123 ], !dbg !8226
  %call133 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond132, i32 0) #8, !dbg !8226
  call void @llvm.dbg.value(metadata %struct.edge_def* %call133, metadata !8185, metadata !DIExpression()), !dbg !8227
  %flags134 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call133, i64 0, i32 7, !dbg !8228
  %19 = load i32, i32* %flags134, align 8, !dbg !8228
  %and135 = and i32 %19, 1, !dbg !8230
  %tobool136 = icmp eq i32 %and135, 0, !dbg !8230
  br i1 %tobool136, label %if.else139, label %if.then137, !dbg !8231

if.then137:                                       ; preds = %cond.end131
  %call138 = tail call %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def* %call133, %struct.basic_block_def* nonnull %succ.0) #6, !dbg !8232
  br label %if.end151, !dbg !8232

if.else139:                                       ; preds = %cond.end131
  %20 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !8233
  %tobool141 = icmp eq %struct.VEC_edge_gc* %20, null, !dbg !8233
  br i1 %tobool141, label %cond.end146, label %cond.true142, !dbg !8233

cond.true142:                                     ; preds = %if.else139
  %base144 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %20, i64 0, i32 0, !dbg !8233
  br label %cond.end146, !dbg !8233

cond.end146:                                      ; preds = %if.else139, %cond.true142
  %cond147 = phi %struct.VEC_edge_base* [ %base144, %cond.true142 ], [ null, %if.else139 ], !dbg !8233
  %call148 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond147, i32 0) #8, !dbg !8233
  %call149 = tail call zeroext i8 @sel_redirect_edge_and_branch(%struct.edge_def* %call148, %struct.basic_block_def* nonnull %succ.0) #8, !dbg !8234
  br label %if.end151

if.end151:                                        ; preds = %if.then137, %cond.end146, %cond.end115
  %21 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs71, align 8, !dbg !8235
  %tobool153 = icmp eq %struct.VEC_edge_gc* %21, null, !dbg !8235
  br i1 %tobool153, label %cond.end158, label %cond.true154, !dbg !8235

cond.true154:                                     ; preds = %if.end151
  %base156 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %21, i64 0, i32 0, !dbg !8235
  br label %cond.end158, !dbg !8235

cond.end158:                                      ; preds = %if.end151, %cond.true154
  %cond159 = phi %struct.VEC_edge_base* [ %base156, %cond.true154 ], [ null, %if.end151 ], !dbg !8235
  %call160 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond159) #8, !dbg !8235
  %cmp161 = icmp ne i32 %call160, 0, !dbg !8236
  %cmp164 = icmp ne %struct.basic_block_def* %pred.0, null, !dbg !8237
  %or.cond1 = and i1 %cmp161, %cmp164, !dbg !8238
  br i1 %or.cond1, label %if.then166, label %if.end184, !dbg !8238

if.then166:                                       ; preds = %cond.end158
  %22 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs71, align 8, !dbg !8239
  %tobool169 = icmp eq %struct.VEC_edge_gc* %22, null, !dbg !8239
  br i1 %tobool169, label %cond.end174, label %cond.true170, !dbg !8239

cond.true170:                                     ; preds = %if.then166
  %base172 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %22, i64 0, i32 0, !dbg !8239
  br label %cond.end174, !dbg !8239

cond.end174:                                      ; preds = %if.then166, %cond.true170
  %cond175 = phi %struct.VEC_edge_base* [ %base172, %cond.true170 ], [ null, %if.then166 ], !dbg !8239
  %call176 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond175, i32 0) #8, !dbg !8239
  call void @llvm.dbg.value(metadata %struct.edge_def* %call176, metadata !8188, metadata !DIExpression()), !dbg !8240
  %dest177 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call176, i64 0, i32 1, !dbg !8241
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %dest177, align 8, !dbg !8241
  %call178 = tail call %struct.edge_def* @find_edge(%struct.basic_block_def* nonnull %pred.0, %struct.basic_block_def* %23) #6, !dbg !8243
  %cmp179 = icmp eq %struct.edge_def* %call178, null, !dbg !8244
  br i1 %cmp179, label %if.then181, label %if.end184, !dbg !8245

if.then181:                                       ; preds = %cond.end174
  tail call void @redirect_edge_pred(%struct.edge_def* %call176, %struct.basic_block_def* nonnull %pred.0) #6, !dbg !8246
  br label %if.end184, !dbg !8246

if.end184:                                        ; preds = %cond.end21, %cond.end, %cond.end158, %if.then181, %cond.end174
  tail call fastcc void @sel_remove_bb(%struct.basic_block_def* %empty_bb, i8 zeroext %remove_from_cfg_p) #8, !dbg !8247
  ret void, !dbg !8248
}

; Function Attrs: nounwind uwtable
define dso_local %struct.basic_block_def* @sel_split_edge(%struct.edge_def* %e) local_unnamed_addr #5 !dbg !8249 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !8251, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !8254, metadata !DIExpression()), !dbg !8261
  %src1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !8262
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !8262
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !8253, metadata !DIExpression()), !dbg !8261
  %call = tail call i32 @get_max_uid() #6, !dbg !8263
  call void @llvm.dbg.value(metadata i32 %call, metadata !8255, metadata !DIExpression()), !dbg !8261
  %call2 = tail call %struct.basic_block_def* @split_edge(%struct.edge_def* %e) #6, !dbg !8264
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !8252, metadata !DIExpression()), !dbg !8261
  %1 = load i32, i32* @flag_sel_sched_pipelining_outer_loops, align 4, !dbg !8265
  %tobool = icmp ne i32 %1, 0, !dbg !8265
  %2 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !8266
  %tobool3 = icmp ne %struct.loop* %2, null, !dbg !8266
  %or.cond = and i1 %tobool, %tobool3, !dbg !8267
  br i1 %or.cond, label %if.then, label %if.end17, !dbg !8267

if.then:                                          ; preds = %entry
  %3 = bitcast %struct.basic_block_def** %bb to i8*, !dbg !8268
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !8268
  call void @llvm.dbg.value(metadata i32 0, metadata !8257, metadata !DIExpression()), !dbg !8269
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !8270
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 9, !dbg !8270
  br label %for.cond, !dbg !8275

for.cond:                                         ; preds = %for.inc, %if.then
  %other_bb.0 = phi %struct.basic_block_def* [ null, %if.then ], [ %other_bb.1, %for.inc ], !dbg !8276
  %i.0 = phi i32 [ 0, %if.then ], [ %inc, %for.inc ], !dbg !8277
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8257, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %other_bb.0, metadata !8254, metadata !DIExpression()), !dbg !8261
  %4 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** @last_added_blocks, align 8, !dbg !8278
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %4, i64 0, i32 0, !dbg !8278
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb, metadata !8260, metadata !DIExpression(DW_OP_deref)), !dbg !8269
  %call5 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base, i32 %i.0, %struct.basic_block_def** nonnull %bb) #8, !dbg !8278
  %tobool6 = icmp eq i32 %call5, 0, !dbg !8279
  br i1 %tobool6, label %for.end, label %for.body, !dbg !8279

for.body:                                         ; preds = %for.cond
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8280
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %5, metadata !8260, metadata !DIExpression()), !dbg !8269
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 3, !dbg !8281
  %6 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !8281
  %tobool7 = icmp eq %struct.loop* %6, null, !dbg !8280
  br i1 %tobool7, label %if.then8, label %for.inc, !dbg !8282

if.then8:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %5, metadata !8260, metadata !DIExpression()), !dbg !8269
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8283
  %loop_father9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i64 0, i32 3, !dbg !8284
  %8 = load %struct.loop*, %struct.loop** %loop_father9, align 8, !dbg !8284
  call void @add_bb_to_loop(%struct.basic_block_def* %5, %struct.loop* %8) #6, !dbg !8285
  %tobool10 = icmp eq %struct.basic_block_def* %other_bb.0, null, !dbg !8286
  br i1 %tobool10, label %land.lhs.true11, label %cond.true13, !dbg !8286

land.lhs.true11:                                  ; preds = %if.then8
  %9 = load i32, i32* %index, align 8, !dbg !8286
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8286
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %10, metadata !8260, metadata !DIExpression()), !dbg !8269
  %index12 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i64 0, i32 9, !dbg !8286
  %11 = load i32, i32* %index12, align 8, !dbg !8286
  %cmp = icmp eq i32 %9, %11, !dbg !8286
  br i1 %cmp, label %cond.true13, label %cond.end15, !dbg !8286

cond.true13:                                      ; preds = %land.lhs.true11, %if.then8
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5319, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8286
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8287
  br label %cond.end15, !dbg !8286

cond.end15:                                       ; preds = %land.lhs.true11, %cond.true13
  %12 = phi %struct.basic_block_def* [ %10, %land.lhs.true11 ], [ %.pre, %cond.true13 ], !dbg !8287
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !8260, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !8254, metadata !DIExpression()), !dbg !8261
  br label %for.inc, !dbg !8288

for.inc:                                          ; preds = %for.body, %cond.end15
  %other_bb.1 = phi %struct.basic_block_def* [ %other_bb.0, %for.body ], [ %12, %cond.end15 ], !dbg !8261
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %other_bb.1, metadata !8254, metadata !DIExpression()), !dbg !8261
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8289
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8257, metadata !DIExpression()), !dbg !8269
  br label %for.cond, !dbg !8290, !llvm.loop !8291

for.end:                                          ; preds = %for.cond
  %other_bb.0.lcssa = phi %struct.basic_block_def* [ %other_bb.0, %for.cond ], !dbg !8276
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %other_bb.0.lcssa, metadata !8254, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %other_bb.0.lcssa, metadata !8254, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %other_bb.0.lcssa, metadata !8254, metadata !DIExpression()), !dbg !8261
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !8293
  br label %if.end17, !dbg !8294

if.end17:                                         ; preds = %for.end, %entry
  %other_bb.2 = phi %struct.basic_block_def* [ %other_bb.0.lcssa, %for.end ], [ null, %entry ], !dbg !8276
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %other_bb.2, metadata !8254, metadata !DIExpression()), !dbg !8261
  call fastcc void @sel_add_bb(%struct.basic_block_def* null) #8, !dbg !8295
  %call18 = call fastcc %struct.rtx_def* @find_new_jump(%struct.basic_block_def* %0, %struct.basic_block_def* %call2, i32 %call) #8, !dbg !8296
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call18, metadata !8256, metadata !DIExpression()), !dbg !8261
  %tobool19 = icmp eq %struct.rtx_def* %call18, null, !dbg !8297
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !8299

if.then20:                                        ; preds = %if.end17
  call fastcc void @sel_init_new_insn(%struct.rtx_def* nonnull %call18, i32 5) #8, !dbg !8300
  br label %if.end21, !dbg !8300

if.end21:                                         ; preds = %if.end17, %if.then20
  %tobool22 = icmp eq %struct.basic_block_def* %other_bb.2, null, !dbg !8301
  br i1 %tobool22, label %if.end29, label %land.lhs.true23, !dbg !8303

land.lhs.true23:                                  ; preds = %if.end21
  %call24 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* nonnull %other_bb.2) #8, !dbg !8304
  %tobool25 = icmp eq i8 %call24, 0, !dbg !8304
  br i1 %tobool25, label %if.then26, label %if.end29, !dbg !8305

if.then26:                                        ; preds = %land.lhs.true23
  %call27 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* nonnull %other_bb.2) #8, !dbg !8306
  %call28 = call %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %call27) #6, !dbg !8307
  br label %if.end29, !dbg !8307

if.end29:                                         ; preds = %land.lhs.true23, %if.end21, %if.then26
  ret %struct.basic_block_def* %call2, !dbg !8308
}

declare dso_local %struct.basic_block_def* @split_edge(%struct.edge_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %vec_, i32 %ix_, %struct.basic_block_def** %ptr) unnamed_addr #0 !dbg !8309 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !8313, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8314, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %ptr, metadata !8315, metadata !DIExpression()), !dbg !8316
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !8317
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !8317

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !8317
  %0 = load i32, i32* %num, align 8, !dbg !8317
  %cmp = icmp ugt i32 %0, %ix_, !dbg !8317
  br i1 %cmp, label %if.then, label %if.else, !dbg !8319

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !8320
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8320
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !8320
  br label %return, !dbg !8320

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !8322

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.basic_block_def* [ null, %if.else ], [ %1, %if.then ], !dbg !8324
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !8324
  store %struct.basic_block_def* %storemerge, %struct.basic_block_def** %ptr, align 8, !dbg !8324
  ret i32 %retval.0, !dbg !8319
}

declare dso_local void @add_bb_to_loop(%struct.basic_block_def*, %struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_add_bb(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !8325 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8327, metadata !DIExpression()), !dbg !8332
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  tail call void @sched_init_luids(%struct.VEC_basic_block_heap* null, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null) #6, !dbg !8333
  tail call void @sched_init_bbs() #6, !dbg !8334
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** @last_added_blocks, align 8, !dbg !8335
  tail call void @sel_init_bbs(%struct.VEC_basic_block_heap* %0, %struct.basic_block_def* null) #8, !dbg !8336
  %1 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** @last_added_blocks, align 8, !dbg !8337
  %cmp = icmp eq %struct.VEC_basic_block_heap* %1, null, !dbg !8337
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !8337

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4981, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8337
  br label %cond.end, !dbg !8337

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8327, metadata !DIExpression()), !dbg !8332
  %cmp1 = icmp eq %struct.basic_block_def* %bb, null, !dbg !8338
  br i1 %cmp1, label %for.cond.preheader, label %if.then, !dbg !8339

for.cond.preheader:                               ; preds = %cond.end
  br label %for.cond, !dbg !8340

if.then:                                          ; preds = %cond.end
  %2 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** @last_added_blocks, align 8, !dbg !8342
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %2, i64 0, i32 0, !dbg !8342
  %call = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %base) #8, !dbg !8342
  %cmp6 = icmp eq i32 %call, 1, !dbg !8342
  br i1 %cmp6, label %land.lhs.true, label %cond.true15, !dbg !8342

land.lhs.true:                                    ; preds = %if.then
  %3 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** @last_added_blocks, align 8, !dbg !8342
  %base9 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %3, i64 0, i32 0, !dbg !8342
  %call13 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %base9, i32 0) #8, !dbg !8342
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8327, metadata !DIExpression()), !dbg !8332
  %cmp14 = icmp eq %struct.basic_block_def* %call13, %bb, !dbg !8342
  br i1 %cmp14, label %cond.end17, label %cond.true15, !dbg !8342

cond.true15:                                      ; preds = %land.lhs.true, %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4987, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8342
  br label %cond.end17, !dbg !8342

cond.end17:                                       ; preds = %land.lhs.true, %cond.true15
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8327, metadata !DIExpression()), !dbg !8332
  tail call fastcc void @add_block_to_current_region(%struct.basic_block_def* nonnull %bb) #8, !dbg !8344
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8327, metadata !DIExpression()), !dbg !8332
  %call19 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* nonnull %bb) #8, !dbg !8345
  %tobool20 = icmp eq i8 %call19, 0, !dbg !8345
  br i1 %tobool20, label %land.lhs.true21, label %if.end, !dbg !8347

land.lhs.true21:                                  ; preds = %cond.end17
  %4 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !8348
  %base24 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %4, i64 0, i32 0, !dbg !8348
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8327, metadata !DIExpression()), !dbg !8332
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !8348
  %5 = load i32, i32* %index, align 8, !dbg !8348
  %call28 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base24, i32 %5) #8, !dbg !8348
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call28, i64 0, i32 0, !dbg !8348
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !8348
  %cmp29 = icmp eq %struct.bitmap_head_def* %6, null, !dbg !8349
  br i1 %cmp29, label %if.then30, label %if.end, !dbg !8350

if.then30:                                        ; preds = %land.lhs.true21
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8327, metadata !DIExpression()), !dbg !8332
  tail call fastcc void @create_initial_data_sets(%struct.basic_block_def* nonnull %bb) #8, !dbg !8351
  br label %if.end, !dbg !8351

if.end:                                           ; preds = %cond.end17, %if.then30, %land.lhs.true21
  tail call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull @last_added_blocks) #8, !dbg !8352
  br label %if.end44, !dbg !8353

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %temp_bb.0 = phi %struct.basic_block_def* [ %9, %for.body ], [ null, %for.cond.preheader ], !dbg !8354
  %i.0 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ], !dbg !8355
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8328, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %temp_bb.0, metadata !8331, metadata !DIExpression()), !dbg !8354
  %7 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** @last_added_blocks, align 8, !dbg !8356
  %base33 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %7, i64 0, i32 0, !dbg !8356
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb.addr, metadata !8327, metadata !DIExpression(DW_OP_deref)), !dbg !8332
  %call37 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base33, i32 %i.0, %struct.basic_block_def** nonnull %bb.addr) #8, !dbg !8356
  %tobool38 = icmp eq i32 %call37, 0, !dbg !8340
  br i1 %tobool38, label %for.end, label %for.body, !dbg !8340

for.body:                                         ; preds = %for.cond
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8358
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %8, metadata !8327, metadata !DIExpression()), !dbg !8332
  call fastcc void @add_block_to_current_region(%struct.basic_block_def* %8) #8, !dbg !8360
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8361
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !8327, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !8331, metadata !DIExpression()), !dbg !8354
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8362
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8328, metadata !DIExpression()), !dbg !8354
  br label %for.cond, !dbg !8363, !llvm.loop !8364

for.end:                                          ; preds = %for.cond
  %temp_bb.0.lcssa = phi %struct.basic_block_def* [ %temp_bb.0, %for.cond ], !dbg !8354
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %temp_bb.0.lcssa, metadata !8331, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %temp_bb.0.lcssa, metadata !8331, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %temp_bb.0.lcssa, metadata !8331, metadata !DIExpression()), !dbg !8354
  %cmp39 = icmp eq %struct.basic_block_def* %temp_bb.0.lcssa, null, !dbg !8366
  br i1 %cmp39, label %cond.true40, label %cond.end42, !dbg !8366

cond.true40:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5012, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8366
  br label %cond.end42, !dbg !8366

cond.end42:                                       ; preds = %for.end, %cond.true40
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %temp_bb.0.lcssa, metadata !8327, metadata !DIExpression()), !dbg !8332
  store %struct.basic_block_def* %temp_bb.0.lcssa, %struct.basic_block_def** %bb.addr, align 8, !dbg !8367
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull @last_added_blocks) #8, !dbg !8368
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8369
  br label %if.end44

if.end44:                                         ; preds = %cond.end42, %if.end
  %10 = phi %struct.basic_block_def* [ %.pre, %cond.end42 ], [ %bb, %if.end ], !dbg !8369
  %11 = load i32*, i32** @containing_rgn, align 8, !dbg !8369
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %10, metadata !8327, metadata !DIExpression()), !dbg !8332
  %index45 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i64 0, i32 9, !dbg !8369
  %12 = load i32, i32* %index45, align 8, !dbg !8369
  %idxprom = sext i32 %12 to i64, !dbg !8369
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom, !dbg !8369
  %13 = load i32, i32* %arrayidx, align 4, !dbg !8369
  call void @rgn_setup_region(i32 %13) #6, !dbg !8370
  ret void, !dbg !8371
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @find_new_jump(%struct.basic_block_def* %from, %struct.basic_block_def* %jump_bb, i32 %prev_max_uid) unnamed_addr #5 !dbg !8372 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %from, metadata !8376, metadata !DIExpression()), !dbg !8380
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %jump_bb, metadata !8377, metadata !DIExpression()), !dbg !8380
  call void @llvm.dbg.value(metadata i32 %prev_max_uid, metadata !8378, metadata !DIExpression()), !dbg !8380
  %call = tail call i32 @get_max_uid() #6, !dbg !8381
  %cmp = icmp eq i32 %call, %prev_max_uid, !dbg !8383
  br i1 %cmp, label %cleanup, label %if.end, !dbg !8384

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %struct.rtx_def* @check_for_new_jump(%struct.basic_block_def* %from, i32 %prev_max_uid) #8, !dbg !8385
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !8379, metadata !DIExpression()), !dbg !8380
  %tobool = icmp eq %struct.rtx_def* %call1, null, !dbg !8387
  br i1 %tobool, label %if.end3, label %cleanup, !dbg !8388

if.end3:                                          ; preds = %if.end
  %cmp4 = icmp eq %struct.basic_block_def* %jump_bb, null, !dbg !8389
  br i1 %cmp4, label %if.end8, label %land.lhs.true, !dbg !8391

land.lhs.true:                                    ; preds = %if.end3
  %call5 = tail call fastcc %struct.rtx_def* @check_for_new_jump(%struct.basic_block_def* nonnull %jump_bb, i32 %prev_max_uid) #8, !dbg !8392
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !8379, metadata !DIExpression()), !dbg !8380
  %tobool6 = icmp eq %struct.rtx_def* %call5, null, !dbg !8393
  br i1 %tobool6, label %if.end8, label %cleanup, !dbg !8394

if.end8:                                          ; preds = %land.lhs.true, %if.end3
  br label %cleanup, !dbg !8395

cleanup:                                          ; preds = %land.lhs.true, %if.end, %entry, %if.end8
  %retval.0 = phi %struct.rtx_def* [ null, %if.end8 ], [ null, %entry ], [ %call1, %if.end ], [ %call5, %land.lhs.true ], !dbg !8380
  ret %struct.rtx_def* %retval.0, !dbg !8396
}

declare dso_local %struct.bitmap_head_def* @compute_live(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.basic_block_def* @sel_create_recovery_block(%struct.rtx_def* %orig_insn) local_unnamed_addr #5 !dbg !8397 {
entry:
  %before_recovery = alloca %struct.basic_block_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orig_insn, metadata !8401, metadata !DIExpression()), !dbg !8407
  %0 = bitcast %struct.basic_block_def** %before_recovery to i8*, !dbg !8408
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !8408
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !8405, metadata !DIExpression()), !dbg !8407
  store %struct.basic_block_def* null, %struct.basic_block_def** %before_recovery, align 8, !dbg !8409
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig_insn, i64 0, i32 1, i32 0, i32 1, !dbg !8410
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !8410
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !8410
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !8402, metadata !DIExpression()), !dbg !8407
  %call = tail call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %orig_insn) #8, !dbg !8411
  %tobool = icmp eq i8 %call, 0, !dbg !8411
  br i1 %tobool, label %if.else, label %if.then, !dbg !8413

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %1) #8, !dbg !8414
  %tobool2 = icmp eq i8 %call1, 0, !dbg !8414
  br i1 %tobool2, label %cond.true, label %cond.end, !dbg !8414

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5368, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8414
  br label %cond.end, !dbg !8414

cond.end:                                         ; preds = %if.then, %cond.true
  %call3 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %1) #8, !dbg !8416
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !8403, metadata !DIExpression()), !dbg !8407
  br label %if.end, !dbg !8417

if.else:                                          ; preds = %entry
  %2 = load %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** @sched_split_block, align 8, !dbg !8418
  %call4 = tail call %struct.basic_block_def* %2(%struct.basic_block_def* %1, %struct.rtx_def* %orig_insn) #6, !dbg !8418
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call4, metadata !8403, metadata !DIExpression()), !dbg !8407
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %second_bb.0 = phi %struct.basic_block_def* [ %call3, %cond.end ], [ %call4, %if.else ], !dbg !8419
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %second_bb.0, metadata !8403, metadata !DIExpression()), !dbg !8407
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %before_recovery, metadata !8405, metadata !DIExpression(DW_OP_deref)), !dbg !8407
  %call5 = call %struct.basic_block_def* @sched_create_recovery_block(%struct.basic_block_def** nonnull %before_recovery) #6, !dbg !8420
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call5, metadata !8404, metadata !DIExpression()), !dbg !8407
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %before_recovery, align 8, !dbg !8421
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !8405, metadata !DIExpression()), !dbg !8407
  %tobool6 = icmp eq %struct.basic_block_def* %3, null, !dbg !8421
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !8423

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !8405, metadata !DIExpression()), !dbg !8407
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8424
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !8424
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8424
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !8424
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !8424
  call fastcc void @copy_lv_set_from(%struct.basic_block_def* nonnull %3, %struct.basic_block_def* %6) #8, !dbg !8425
  br label %if.end8, !dbg !8425

if.end8:                                          ; preds = %if.end, %if.then7
  %call9 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %call5) #8, !dbg !8426
  %tobool10 = icmp eq i8 %call9, 0, !dbg !8426
  br i1 %tobool10, label %cond.true11, label %cond.end13, !dbg !8426

cond.true11:                                      ; preds = %if.end8
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5378, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8426
  br label %cond.end13, !dbg !8426

cond.end13:                                       ; preds = %if.end8, %cond.true11
  call void @sched_create_recovery_edges(%struct.basic_block_def* %1, %struct.basic_block_def* %call5, %struct.basic_block_def* %second_bb.0) #6, !dbg !8427
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8428
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 4, !dbg !8428
  %8 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !8428
  %cmp = icmp eq %struct.loops* %8, null, !dbg !8430
  br i1 %cmp, label %if.end17, label %if.then16, !dbg !8431

if.then16:                                        ; preds = %cond.end13
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 3, !dbg !8432
  %9 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !8432
  call void @add_bb_to_loop(%struct.basic_block_def* %call5, %struct.loop* %9) #6, !dbg !8433
  br label %if.end17, !dbg !8433

if.end17:                                         ; preds = %cond.end13, %if.then16
  call fastcc void @sel_add_bb(%struct.basic_block_def* %call5) #8, !dbg !8434
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call5, i64 0, i32 7, !dbg !8435
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8435
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8435
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 1, !dbg !8435
  %11 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8435
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !8406, metadata !DIExpression()), !dbg !8407
  %call18 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %call5) #8, !dbg !8436
  %cmp19 = icmp eq %struct.rtx_def* %call18, %11, !dbg !8436
  br i1 %cmp19, label %cond.end22, label %cond.true20, !dbg !8436

cond.true20:                                      ; preds = %if.end17
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5386, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8436
  br label %cond.end22, !dbg !8436

cond.end22:                                       ; preds = %if.end17, %cond.true20
  call fastcc void @sel_init_new_insn(%struct.rtx_def* %11, i32 5) #8, !dbg !8437
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !8438
  ret %struct.basic_block_def* %call5, !dbg !8439
}

declare dso_local %struct.basic_block_def* @sched_create_recovery_block(%struct.basic_block_def**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @copy_lv_set_from(%struct.basic_block_def* %bb, %struct.basic_block_def* %from_bb) unnamed_addr #5 !dbg !8440 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8442, metadata !DIExpression()), !dbg !8444
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %from_bb, metadata !8443, metadata !DIExpression()), !dbg !8444
  %0 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !8445
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %0, i64 0, i32 0, !dbg !8445
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !8445
  %1 = load i32, i32* %index, align 8, !dbg !8445
  %call = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base, i32 %1) #8, !dbg !8445
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call, i64 0, i32 1, !dbg !8445
  %2 = load i8, i8* %lv_set_valid_p, align 8, !dbg !8445
  %tobool1 = icmp eq i8 %2, 0, !dbg !8445
  br i1 %tobool1, label %cond.end4, label %cond.true2, !dbg !8445

cond.true2:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4104, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8445
  br label %cond.end4, !dbg !8445

cond.end4:                                        ; preds = %entry, %cond.true2
  %3 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !8446
  %base8 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %3, i64 0, i32 0, !dbg !8446
  %4 = load i32, i32* %index, align 8, !dbg !8446
  %call13 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base8, i32 %4) #8, !dbg !8446
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call13, i64 0, i32 0, !dbg !8446
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !8446
  %6 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !8446
  %base16 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %6, i64 0, i32 0, !dbg !8446
  %index20 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %from_bb, i64 0, i32 9, !dbg !8446
  %7 = load i32, i32* %index20, align 8, !dbg !8446
  %call21 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base16, i32 %7) #8, !dbg !8446
  %lv_set22 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call21, i64 0, i32 0, !dbg !8446
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set22, align 8, !dbg !8446
  tail call void @bitmap_copy(%struct.bitmap_head_def* %5, %struct.bitmap_head_def* %8) #6, !dbg !8446
  %9 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !8447
  %base25 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %9, i64 0, i32 0, !dbg !8447
  %10 = load i32, i32* %index, align 8, !dbg !8447
  %call30 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base25, i32 %10) #8, !dbg !8447
  %lv_set_valid_p31 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call30, i64 0, i32 1, !dbg !8447
  store i8 1, i8* %lv_set_valid_p31, align 8, !dbg !8448
  ret void, !dbg !8449
}

declare dso_local void @sched_create_recovery_edges(%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sel_merge_blocks(%struct.basic_block_def* %a, %struct.basic_block_def* %b) local_unnamed_addr #5 !dbg !8450 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %a, metadata !8452, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !8453, metadata !DIExpression()), !dbg !8454
  tail call void @sel_remove_empty_bb(%struct.basic_block_def* %b, i8 zeroext 1, i8 zeroext 0) #8, !dbg !8455
  tail call void @merge_blocks(%struct.basic_block_def* %a, %struct.basic_block_def* %b) #6, !dbg !8456
  tail call fastcc void @change_loops_latches(%struct.basic_block_def* %b, %struct.basic_block_def* %a) #8, !dbg !8457
  ret void, !dbg !8458
}

declare dso_local void @merge_blocks(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @change_loops_latches(%struct.basic_block_def* %from, %struct.basic_block_def* %to) unnamed_addr #5 !dbg !8459 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %from, metadata !8461, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %to, metadata !8462, metadata !DIExpression()), !dbg !8466
  %cmp = icmp eq %struct.basic_block_def* %from, %to, !dbg !8467
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !8467

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5203, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8467
  br label %cond.end, !dbg !8467

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !8468
  %tobool = icmp eq %struct.loop* %0, null, !dbg !8468
  br i1 %tobool, label %if.end20, label %if.then, !dbg !8469

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !8463, metadata !DIExpression()), !dbg !8470
  br label %for.cond, !dbg !8471

for.cond:                                         ; preds = %for.inc, %if.then
  %loop.0 = phi %struct.loop* [ %0, %if.then ], [ %call19, %for.inc ], !dbg !8473
  call void @llvm.dbg.value(metadata %struct.loop* %loop.0, metadata !8463, metadata !DIExpression()), !dbg !8470
  %tobool1 = icmp eq %struct.loop* %loop.0, null, !dbg !8474
  br i1 %tobool1, label %if.end20.loopexit, label %for.body, !dbg !8474

for.body:                                         ; preds = %for.cond
  %call = tail call zeroext i8 @considered_for_pipelining_p(%struct.loop* nonnull %loop.0) #8, !dbg !8475
  %tobool2 = icmp eq i8 %call, 0, !dbg !8475
  br i1 %tobool2, label %for.inc, label %land.lhs.true, !dbg !8478

land.lhs.true:                                    ; preds = %for.body
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop.0, i64 0, i32 3, !dbg !8479
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !8479
  %cmp3 = icmp eq %struct.basic_block_def* %1, %from, !dbg !8480
  br i1 %cmp3, label %if.then5, label %for.inc, !dbg !8481

if.then5:                                         ; preds = %land.lhs.true
  %2 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !8482
  %cmp6 = icmp eq %struct.loop* %loop.0, %2, !dbg !8482
  br i1 %cmp6, label %cond.end10, label %cond.true8, !dbg !8482

cond.true8:                                       ; preds = %if.then5
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8482
  br label %cond.end10, !dbg !8482

cond.end10:                                       ; preds = %if.then5, %cond.true8
  store %struct.basic_block_def* %to, %struct.basic_block_def** %latch, align 8, !dbg !8484
  %call13 = tail call %struct.edge_def* @loop_latch_edge(%struct.loop* nonnull %loop.0) #6, !dbg !8485
  %tobool14 = icmp eq %struct.edge_def* %call13, null, !dbg !8485
  br i1 %tobool14, label %cond.true15, label %for.inc, !dbg !8485

cond.true15:                                      ; preds = %cond.end10
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5214, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8485
  br label %for.inc, !dbg !8485

for.inc:                                          ; preds = %cond.end10, %for.body, %land.lhs.true, %cond.true15
  %call19 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* nonnull %loop.0) #8, !dbg !8486
  call void @llvm.dbg.value(metadata %struct.loop* %call19, metadata !8463, metadata !DIExpression()), !dbg !8470
  br label %for.cond, !dbg !8487, !llvm.loop !8488

if.end20.loopexit:                                ; preds = %for.cond
  br label %if.end20, !dbg !8490

if.end20:                                         ; preds = %if.end20.loopexit, %cond.end
  ret void, !dbg !8490
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_redirect_edge_and_branch_force(%struct.edge_def* %e, %struct.basic_block_def* %to) local_unnamed_addr #5 !dbg !8491 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !8495, metadata !DIExpression()), !dbg !8501
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %to, metadata !8496, metadata !DIExpression()), !dbg !8501
  %src1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !8502
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !8502
  %call = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %0) #8, !dbg !8502
  %tobool = icmp eq i8 %call, 0, !dbg !8502
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8502

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5412, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8502
  br label %cond.end, !dbg !8502

cond.end:                                         ; preds = %entry, %cond.true
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !8503
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !8498, metadata !DIExpression()), !dbg !8501
  %call3 = tail call i32 @get_max_uid() #6, !dbg !8504
  call void @llvm.dbg.value(metadata i32 %call3, metadata !8499, metadata !DIExpression()), !dbg !8501
  %call4 = tail call %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def* %e, %struct.basic_block_def* %to) #6, !dbg !8505
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call4, metadata !8497, metadata !DIExpression()), !dbg !8501
  %cmp = icmp eq %struct.basic_block_def* %call4, null, !dbg !8506
  br i1 %cmp, label %if.end, label %if.then, !dbg !8508

if.then:                                          ; preds = %cond.end
  tail call fastcc void @sel_add_bb(%struct.basic_block_def* nonnull %call4) #8, !dbg !8509
  br label %if.end, !dbg !8509

if.end:                                           ; preds = %cond.end, %if.then
  %2 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !8510
  %tobool5 = icmp eq %struct.loop* %2, null, !dbg !8510
  br i1 %tobool5, label %if.end14, label %land.lhs.true, !dbg !8512

land.lhs.true:                                    ; preds = %if.end
  %3 = load i8, i8* @pipelining_p, align 1, !dbg !8513
  %tobool6 = icmp eq i8 %3, 0, !dbg !8513
  br i1 %tobool6, label %if.end14, label %if.then7, !dbg !8514

if.then7:                                         ; preds = %land.lhs.true
  %call8 = tail call %struct.edge_def* @loop_latch_edge(%struct.loop* nonnull %2) #6, !dbg !8515
  %tobool9 = icmp eq %struct.edge_def* %call8, null, !dbg !8515
  br i1 %tobool9, label %cond.true10, label %if.end14, !dbg !8515

cond.true10:                                      ; preds = %if.then7
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5425, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8515
  br label %if.end14, !dbg !8515

if.end14:                                         ; preds = %if.then7, %land.lhs.true, %if.end, %cond.true10
  %call15 = tail call fastcc %struct.rtx_def* @find_new_jump(%struct.basic_block_def* %1, %struct.basic_block_def* %call4, i32 %call3) #8, !dbg !8516
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15, metadata !8500, metadata !DIExpression()), !dbg !8501
  %tobool16 = icmp eq %struct.rtx_def* %call15, null, !dbg !8517
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !8519

if.then17:                                        ; preds = %if.end14
  tail call fastcc void @sel_init_new_insn(%struct.rtx_def* nonnull %call15, i32 5) #8, !dbg !8520
  br label %if.end18, !dbg !8520

if.end18:                                         ; preds = %if.end14, %if.then17
  ret void, !dbg !8521
}

declare dso_local %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @loop_latch_edge(%struct.loop*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sel_register_cfg_hooks() local_unnamed_addr #5 !dbg !8522 {
entry:
  %tmp = alloca %struct.cfg_hooks, align 8
  store %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)* @sel_split_block, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** @sched_split_block, align 8, !dbg !8523
  %0 = bitcast %struct.cfg_hooks* %tmp to i8*, !dbg !8524
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %0) #7, !dbg !8524
  call void @get_cfg_hooks(%struct.cfg_hooks* nonnull sret %tmp) #6, !dbg !8524
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.cfg_hooks* @orig_cfg_hooks to i8*), i8* nonnull align 8 %0, i64 232, i1 false), !dbg !8524
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %0) #7, !dbg !8524
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.cfg_hooks* @sel_cfg_hooks to i8*), i8* align 8 bitcast (%struct.cfg_hooks* @orig_cfg_hooks to i8*), i64 232, i1 false), !dbg !8525
  store %struct.basic_block_def* (i8*, i8*, %struct.basic_block_def*)* @sel_create_basic_block, %struct.basic_block_def* (i8*, i8*, %struct.basic_block_def*)** getelementptr inbounds (%struct.cfg_hooks, %struct.cfg_hooks* @sel_cfg_hooks, i64 0, i32 3), align 8, !dbg !8526
  call void @set_cfg_hooks(%struct.cfg_hooks* nonnull byval(%struct.cfg_hooks) align 8 @sel_cfg_hooks) #6, !dbg !8527
  store void (%struct.basic_block_def*, %struct.basic_block_def*)* @sel_init_only_bb, void (%struct.basic_block_def*, %struct.basic_block_def*)** @sched_init_only_bb, align 8, !dbg !8528
  store %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)* @sel_split_block, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** @sched_split_block, align 8, !dbg !8529
  store %struct.basic_block_def* (%struct.basic_block_def*)* @sel_create_empty_bb, %struct.basic_block_def* (%struct.basic_block_def*)** @sched_create_empty_bb, align 8, !dbg !8530
  ret void, !dbg !8531
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @sel_split_block(%struct.basic_block_def* %bb, %struct.rtx_def* %after) #5 !dbg !8532 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8534, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !8535, metadata !DIExpression()), !dbg !8538
  %call = tail call %struct.basic_block_def* @sched_split_block_1(%struct.basic_block_def* %bb, %struct.rtx_def* %after) #6, !dbg !8539
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !8536, metadata !DIExpression()), !dbg !8538
  tail call fastcc void @sel_add_bb(%struct.basic_block_def* %call) #8, !dbg !8540
  tail call fastcc void @change_loops_latches(%struct.basic_block_def* %bb, %struct.basic_block_def* %call) #8, !dbg !8541
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, !dbg !8542
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8542
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8542
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !8542
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !8544
  br label %for.cond, !dbg !8542

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0.in = phi %struct.rtx_def** [ %head_, %entry ], [ %rt_rtx30, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !8547
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !8537, metadata !DIExpression()), !dbg !8538
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !8548
  br i1 %tobool, label %for.end, label %land.rhs, !dbg !8548

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8548
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !8548
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8548
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8548
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !8548
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8548
  %cmp = icmp eq %struct.rtx_def* %insn.0, %4, !dbg !8548
  br i1 %cmp, label %for.end, label %for.body, !dbg !8542

for.body:                                         ; preds = %land.rhs
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !8549
  %bf.load = load i32, i32* %5, align 8, !dbg !8549
  %bf.clear = and i32 %bf.load, 65535, !dbg !8549
  %cmp3 = icmp eq i32 %bf.clear, 8, !dbg !8549
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !8549

lor.lhs.false:                                    ; preds = %for.body
  %cmp6 = icmp eq i32 %bf.clear, 7, !dbg !8549
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !8549

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp10 = icmp eq i32 %bf.clear, 9, !dbg !8549
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !8549

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %cmp14 = icmp eq i32 %bf.clear, 10, !dbg !8549
  br i1 %cmp14, label %if.then, label %for.inc, !dbg !8550

if.then:                                          ; preds = %lor.lhs.false11, %lor.lhs.false7, %lor.lhs.false, %for.body
  %6 = load i32, i32* %index, align 8, !dbg !8551
  %7 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8552
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %7, i64 0, i32 0, !dbg !8552
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8552
  %base18 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i64 0, i32 0, !dbg !8552
  %arrayidx24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8552
  %rt_int = bitcast %union.rtunion_def* %arrayidx24 to i32*, !dbg !8552
  %9 = load i32, i32* %rt_int, align 8, !dbg !8552
  %call25 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base18, i32 %9) #8, !dbg !8552
  %call26 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call25) #8, !dbg !8552
  %orig_bb_index = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call26, i64 0, i32 0, i32 6, !dbg !8552
  store i32 %6, i32* %orig_bb_index, align 4, !dbg !8553
  br label %for.inc, !dbg !8552

for.inc:                                          ; preds = %lor.lhs.false11, %if.then
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8548
  %rt_rtx30 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !8548
  br label %for.cond, !dbg !8548, !llvm.loop !8554

for.end:                                          ; preds = %land.rhs, %for.cond
  %call31 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %bb) #8, !dbg !8556
  %tobool32 = icmp eq i8 %call31, 0, !dbg !8556
  br i1 %tobool32, label %if.end40, label %if.then33, !dbg !8558

if.then33:                                        ; preds = %for.end
  %call34 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %call) #8, !dbg !8559
  %tobool35 = icmp eq i8 %call34, 0, !dbg !8559
  br i1 %tobool35, label %cond.end38, label %cond.true36, !dbg !8559

cond.true36:                                      ; preds = %if.then33
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5242, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8559
  br label %cond.end38, !dbg !8559

cond.end38:                                       ; preds = %if.then33, %cond.true36
  tail call void @exchange_data_sets(%struct.basic_block_def* %call, %struct.basic_block_def* %bb) #8, !dbg !8561
  tail call void @free_data_sets(%struct.basic_block_def* %bb) #8, !dbg !8562
  br label %if.end40, !dbg !8563

if.end40:                                         ; preds = %for.end, %cond.end38
  %call41 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %call) #8, !dbg !8564
  %tobool42 = icmp eq i8 %call41, 0, !dbg !8564
  br i1 %tobool42, label %land.lhs.true, label %if.end49, !dbg !8566

land.lhs.true:                                    ; preds = %if.end40
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !8567
  %index43 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !8568
  %12 = load i32, i32* %index43, align 8, !dbg !8568
  %call44 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %11, i32 %12) #6, !dbg !8569
  %tobool45 = icmp eq i32 %call44, 0, !dbg !8569
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !8570

if.then46:                                        ; preds = %land.lhs.true
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !8571
  %14 = load i32, i32* %index, align 8, !dbg !8572
  %call48 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %13, i32 %14) #6, !dbg !8573
  br label %if.end49, !dbg !8573

if.end49:                                         ; preds = %land.lhs.true, %if.end40, %if.then46
  ret %struct.basic_block_def* %call, !dbg !8574
}

declare dso_local void @get_cfg_hooks(%struct.cfg_hooks* sret) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @sel_create_basic_block(i8* %headp, i8* %endp, %struct.basic_block_def* %after) #5 !dbg !8575 {
entry:
  call void @llvm.dbg.value(metadata i8* %headp, metadata !8577, metadata !DIExpression()), !dbg !8582
  call void @llvm.dbg.value(metadata i8* %endp, metadata !8578, metadata !DIExpression()), !dbg !8582
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !8579, metadata !DIExpression()), !dbg !8582
  %0 = load i32, i32* @flag_sel_sched_pipelining_outer_loops, align 4, !dbg !8583
  %tobool = icmp ne i32 %0, 0, !dbg !8583
  %1 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** @last_added_blocks, align 8, !dbg !8583
  %cmp = icmp eq %struct.VEC_basic_block_heap* %1, null, !dbg !8583
  %or.cond = or i1 %tobool, %cmp, !dbg !8583
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !8583

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5170, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8583
  br label %cond.end, !dbg !8583

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call fastcc %struct.rtx_def* @get_bb_note_from_pool() #8, !dbg !8584
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !8581, metadata !DIExpression()), !dbg !8582
  %cmp1 = icmp eq %struct.rtx_def* %call, null, !dbg !8585
  br i1 %cmp1, label %if.then, label %if.else, !dbg !8587

if.then:                                          ; preds = %cond.end
  %2 = load %struct.basic_block_def* (i8*, i8*, %struct.basic_block_def*)*, %struct.basic_block_def* (i8*, i8*, %struct.basic_block_def*)** getelementptr inbounds (%struct.cfg_hooks, %struct.cfg_hooks* @orig_cfg_hooks, i64 0, i32 3), align 8, !dbg !8588
  %call2 = tail call %struct.basic_block_def* %2(i8* %headp, i8* %endp, %struct.basic_block_def* %after) #6, !dbg !8589
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !8580, metadata !DIExpression()), !dbg !8582
  br label %if.end, !dbg !8590

if.else:                                          ; preds = %cond.end
  %3 = bitcast i8* %headp to %struct.rtx_def*, !dbg !8591
  %4 = bitcast i8* %endp to %struct.rtx_def*, !dbg !8593
  %call3 = tail call %struct.basic_block_def* @create_basic_block_structure(%struct.rtx_def* %3, %struct.rtx_def* %4, %struct.rtx_def* nonnull %call, %struct.basic_block_def* %after) #6, !dbg !8594
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !8580, metadata !DIExpression()), !dbg !8582
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call3, i64 0, i32 2, !dbg !8595
  store i8* null, i8** %aux, align 8, !dbg !8596
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %new_bb.0 = phi %struct.basic_block_def* [ %call2, %if.then ], [ %call3, %if.else ], !dbg !8597
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.0, metadata !8580, metadata !DIExpression()), !dbg !8582
  %call4 = tail call fastcc %struct.basic_block_def** @VEC_basic_block_heap_safe_push(%struct.VEC_basic_block_heap** nonnull @last_added_blocks, %struct.basic_block_def* %new_bb.0) #8, !dbg !8598
  ret %struct.basic_block_def* %new_bb.0, !dbg !8599
}

declare dso_local void @set_cfg_hooks(%struct.cfg_hooks* byval(%struct.cfg_hooks) align 8) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @sel_init_only_bb(%struct.basic_block_def* %bb, %struct.basic_block_def* %after) #5 !dbg !8600 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8602, metadata !DIExpression()), !dbg !8604
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !8603, metadata !DIExpression()), !dbg !8604
  %cmp = icmp eq %struct.basic_block_def* %after, null, !dbg !8605
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8605

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5192, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8605
  br label %cond.end, !dbg !8605

cond.end:                                         ; preds = %entry, %cond.true
  tail call void @extend_regions() #6, !dbg !8606
  tail call void @rgn_make_new_region_out_of_new_block(%struct.basic_block_def* %bb) #6, !dbg !8607
  ret void, !dbg !8608
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @sel_create_empty_bb(%struct.basic_block_def* %after) #5 !dbg !8609 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !8611, metadata !DIExpression()), !dbg !8613
  %call = tail call %struct.basic_block_def* @sched_create_empty_bb_1(%struct.basic_block_def* %after) #6, !dbg !8614
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !8612, metadata !DIExpression()), !dbg !8613
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** @last_added_blocks, align 8, !dbg !8615
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %0, i64 0, i32 0, !dbg !8615
  %call1 = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %base) #8, !dbg !8615
  %cmp = icmp eq i32 %call1, 1, !dbg !8615
  br i1 %cmp, label %land.lhs.true, label %cond.true10, !dbg !8615

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** @last_added_blocks, align 8, !dbg !8615
  %base4 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %1, i64 0, i32 0, !dbg !8615
  %call8 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %base4, i32 0) #8, !dbg !8615
  %cmp9 = icmp eq %struct.basic_block_def* %call8, %call, !dbg !8615
  br i1 %cmp9, label %cond.end12, label %cond.true10, !dbg !8615

cond.true10:                                      ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5349, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8615
  br label %cond.end12, !dbg !8615

cond.end12:                                       ; preds = %land.lhs.true, %cond.true10
  tail call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull @last_added_blocks) #8, !dbg !8616
  ret %struct.basic_block_def* %call, !dbg !8617
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_unregister_cfg_hooks() local_unnamed_addr #5 !dbg !8618 {
entry:
  store %struct.basic_block_def* (%struct.basic_block_def*)* null, %struct.basic_block_def* (%struct.basic_block_def*)** @sched_create_empty_bb, align 8, !dbg !8619
  store %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)* null, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** @sched_split_block, align 8, !dbg !8620
  store void (%struct.basic_block_def*, %struct.basic_block_def*)* null, void (%struct.basic_block_def*, %struct.basic_block_def*)** @sched_init_only_bb, align 8, !dbg !8621
  tail call void @set_cfg_hooks(%struct.cfg_hooks* nonnull byval(%struct.cfg_hooks) align 8 @orig_cfg_hooks) #6, !dbg !8622
  ret void, !dbg !8623
}

declare dso_local void @start_sequence() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_debug_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @end_sequence() local_unnamed_addr #2

declare dso_local void @sched_init_luids(%struct.VEC_basic_block_heap*, %struct.basic_block_def*, %struct.VEC_rtx_heap*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @sched_extend_target() local_unnamed_addr #2

declare dso_local void @sched_deps_init(i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @recog_memoized(%struct.rtx_def* %insn) unnamed_addr #0 !dbg !8624 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8627, metadata !DIExpression()), !dbg !8628
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !8629
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !8629
  %rt_int = bitcast %union.rtunion_def* %0 to i32*, !dbg !8629
  %1 = load i32, i32* %rt_int, align 8, !dbg !8629
  %cmp = icmp slt i32 %1, 0, !dbg !8631
  br i1 %cmp, label %if.then, label %if.end, !dbg !8632

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !8633
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !8633
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8633
  %call = tail call i32 @recog(%struct.rtx_def* %3, %struct.rtx_def* %insn, i32* null) #6, !dbg !8634
  store i32 %call, i32* %rt_int, align 8, !dbg !8635
  br label %if.end, !dbg !8636

if.end:                                           ; preds = %if.then, %entry
  %4 = phi i32 [ %call, %if.then ], [ %1, %entry ], !dbg !8637
  ret i32 %4, !dbg !8638
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.vinsn_def* @vinsn_create(%struct.rtx_def* %insn, i8 zeroext %force_unique_p) unnamed_addr #5 !dbg !8639 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8643, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8 %force_unique_p, metadata !8644, metadata !DIExpression()), !dbg !8646
  %call = tail call i8* @xcalloc(i64 1, i64 80) #6, !dbg !8647
  %0 = bitcast i8* %call to %struct.vinsn_def*, !dbg !8647
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %0, metadata !8645, metadata !DIExpression()), !dbg !8646
  tail call fastcc void @vinsn_init(%struct.vinsn_def* %0, %struct.rtx_def* %insn, i8 zeroext %force_unique_p) #8, !dbg !8648
  ret %struct.vinsn_def* %0, !dbg !8649
}

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @setup_nop_and_exit_insns() local_unnamed_addr #5 !dbg !8650 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !8651
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !8651
  %1 = load %struct.rtx_def*, %struct.rtx_def** @exit_insn, align 8, !dbg !8651
  %cmp1 = icmp eq %struct.rtx_def* %1, null, !dbg !8651
  %or.cond = and i1 %cmp, %cmp1, !dbg !8651
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !8651

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5609, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8651
  br label %cond.end, !dbg !8651

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call %struct.rtx_def* @gen_nop() #6, !dbg !8652
  store %struct.rtx_def* %call, %struct.rtx_def** @nop_pattern, align 8, !dbg !8653
  tail call void @start_sequence() #6, !dbg !8654
  %2 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !8655
  %call2 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %2) #6, !dbg !8656
  %call3 = tail call %struct.rtx_def* @get_insns() #6, !dbg !8657
  store %struct.rtx_def* %call3, %struct.rtx_def** @exit_insn, align 8, !dbg !8658
  tail call void @end_sequence() #6, !dbg !8659
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8660
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !8660
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8660
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !8660
  %5 = bitcast %struct.basic_block_def** %x_exit_block_ptr to i64*, !dbg !8660
  %6 = load i64, i64* %5, align 8, !dbg !8660
  %7 = load %struct.rtx_def*, %struct.rtx_def** @exit_insn, align 8, !dbg !8660
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 1, !dbg !8660
  %8 = bitcast %struct.object_block** %arrayidx to i64*, !dbg !8660
  store i64 %6, i64* %8, align 8, !dbg !8660
  ret void, !dbg !8661
}

declare dso_local %struct.rtx_def* @gen_nop() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @free_nop_and_exit_insns() local_unnamed_addr #5 !dbg !8662 {
entry:
  store %struct.rtx_def* null, %struct.rtx_def** @exit_insn, align 8, !dbg !8663
  store %struct.rtx_def* null, %struct.rtx_def** @nop_pattern, align 8, !dbg !8664
  ret void, !dbg !8665
}

; Function Attrs: nounwind uwtable
define dso_local void @setup_nop_vinsn() local_unnamed_addr #5 !dbg !8666 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** @exit_insn, align 8, !dbg !8667
  %call = tail call fastcc %struct.vinsn_def* @vinsn_create(%struct.rtx_def* %0, i8 zeroext 0) #8, !dbg !8668
  store %struct.vinsn_def* %call, %struct.vinsn_def** @nop_vinsn, align 8, !dbg !8669
  tail call void @vinsn_attach(%struct.vinsn_def* %call) #8, !dbg !8670
  ret void, !dbg !8671
}

; Function Attrs: nounwind uwtable
define dso_local void @free_nop_vinsn() local_unnamed_addr #5 !dbg !8672 {
entry:
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** @nop_vinsn, align 8, !dbg !8673
  %count = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 4, !dbg !8673
  %1 = load i32, i32* %count, align 8, !dbg !8673
  %cmp = icmp eq i32 %1, 1, !dbg !8673
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8673

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5640, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8673
  %.pre = load %struct.vinsn_def*, %struct.vinsn_def** @nop_vinsn, align 8, !dbg !8674
  br label %cond.end, !dbg !8673

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi %struct.vinsn_def* [ %0, %entry ], [ %.pre, %cond.true ], !dbg !8674
  tail call void @vinsn_detach(%struct.vinsn_def* %2) #8, !dbg !8675
  store %struct.vinsn_def* null, %struct.vinsn_def** @nop_vinsn, align 8, !dbg !8676
  ret void, !dbg !8677
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_set_sched_flags() local_unnamed_addr #5 !dbg !8678 {
entry:
  %0 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !8679
  %tobool = icmp ne %struct.spec_info_def* %0, null, !dbg !8679
  %1 = load void (%struct.spec_info_def*)*, void (%struct.spec_info_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 32), align 8, !dbg !8681
  %tobool1 = icmp ne void (%struct.spec_info_def*)* %1, null, !dbg !8682
  %or.cond = and i1 %tobool, %tobool1, !dbg !8683
  br i1 %or.cond, label %if.then, label %if.end, !dbg !8683

if.then:                                          ; preds = %entry
  tail call void %1(%struct.spec_info_def* nonnull %0) #6, !dbg !8684
  br label %if.end, !dbg !8684

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8685
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_setup_sched_infos() local_unnamed_addr #5 !dbg !8686 {
entry:
  tail call void @rgn_setup_common_sched_info() #6, !dbg !8687
  %0 = load i8*, i8** bitcast (%struct.common_sched_info_def** @common_sched_info to i8**), align 8, !dbg !8688
  %call = tail call i8* @memcpy(i8* bitcast (%struct.common_sched_info_def* @sel_common_sched_info to i8*), i8* %0, i64 40) #6, !dbg !8689
  store void (i32, i32, i32)* null, void (i32, i32, i32)** getelementptr inbounds (%struct.common_sched_info_def, %struct.common_sched_info_def* @sel_common_sched_info, i64 0, i32 0), align 8, !dbg !8690
  store void (%struct.basic_block_def*, %struct.basic_block_def*)* null, void (%struct.basic_block_def*, %struct.basic_block_def*)** getelementptr inbounds (%struct.common_sched_info_def, %struct.common_sched_info_def* @sel_common_sched_info, i64 0, i32 1), align 8, !dbg !8691
  store i32 (%struct.basic_block_def*)* @sel_estimate_number_of_insns, i32 (%struct.basic_block_def*)** getelementptr inbounds (%struct.common_sched_info_def, %struct.common_sched_info_def* @sel_common_sched_info, i64 0, i32 2), align 8, !dbg !8692
  store i32 (%struct.rtx_def*)* @sel_luid_for_non_insn, i32 (%struct.rtx_def*)** getelementptr inbounds (%struct.common_sched_info_def, %struct.common_sched_info_def* @sel_common_sched_info, i64 0, i32 3), align 8, !dbg !8693
  store i32 4, i32* getelementptr inbounds (%struct.common_sched_info_def, %struct.common_sched_info_def* @sel_common_sched_info, i64 0, i32 4), align 8, !dbg !8694
  store %struct.common_sched_info_def* @sel_common_sched_info, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !8695
  store %struct.haifa_sched_info* @sched_sel_haifa_sched_info, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !8696
  %call1 = tail call i32 @get_rgn_sched_max_insns_priority() #6, !dbg !8697
  %1 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !8698
  %sched_max_insns_priority = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %1, i64 0, i32 13, !dbg !8699
  store i32 %call1, i32* %sched_max_insns_priority, align 4, !dbg !8700
  tail call void @sel_set_sched_flags() #8, !dbg !8701
  ret void, !dbg !8702
}

declare dso_local void @rgn_setup_common_sched_info() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @sel_estimate_number_of_insns(%struct.basic_block_def* %bb) #5 !dbg !8703 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8705, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32 0, metadata !8706, metadata !DIExpression()), !dbg !8709
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !8710
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8710
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8710
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !8710
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !8710
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !8711
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8711
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8711
  %rt_rtx6 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !8711
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !8711
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !8708, metadata !DIExpression()), !dbg !8709
  br label %for.cond, !dbg !8712

for.cond:                                         ; preds = %for.inc, %entry
  %res.0 = phi i32 [ 0, %entry ], [ %res.1, %for.inc ], !dbg !8713
  %.pn = phi %struct.rtx_def* [ %1, %entry ], [ %insn.0, %for.inc ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8709
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !8709
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !8709
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !8707, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32 %res.0, metadata !8706, metadata !DIExpression()), !dbg !8709
  %cmp = icmp eq %struct.rtx_def* %insn.0, %4, !dbg !8714
  br i1 %cmp, label %for.end, label %for.body, !dbg !8717

for.body:                                         ; preds = %for.cond
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !8718
  %bf.load = load i32, i32* %5, align 8, !dbg !8718
  %bf.clear = and i32 %bf.load, 65535, !dbg !8718
  %cmp7 = icmp eq i32 %bf.clear, 8, !dbg !8718
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false, !dbg !8718

lor.lhs.false:                                    ; preds = %for.body
  %cmp10 = icmp eq i32 %bf.clear, 7, !dbg !8718
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false11, !dbg !8718

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %cmp14 = icmp eq i32 %bf.clear, 9, !dbg !8718
  br i1 %cmp14, label %land.lhs.true, label %lor.lhs.false15, !dbg !8718

lor.lhs.false15:                                  ; preds = %lor.lhs.false11
  %cmp18 = icmp eq i32 %bf.clear, 10, !dbg !8718
  br i1 %cmp18, label %land.lhs.true, label %for.inc, !dbg !8718

land.lhs.true:                                    ; preds = %lor.lhs.false15, %lor.lhs.false11, %lor.lhs.false, %for.body
  %cmp21 = icmp ne i32 %bf.clear, 7, !dbg !8718
  %inc = zext i1 %cmp21 to i32, !dbg !8720
  %spec.select = add nsw i32 %res.0, %inc, !dbg !8720
  br label %for.inc, !dbg !8720

for.inc:                                          ; preds = %land.lhs.true, %lor.lhs.false15
  %res.1 = phi i32 [ %res.0, %lor.lhs.false15 ], [ %spec.select, %land.lhs.true ], !dbg !8709
  call void @llvm.dbg.value(metadata i32 %res.1, metadata !8706, metadata !DIExpression()), !dbg !8709
  br label %for.cond, !dbg !8721, !llvm.loop !8722

for.end:                                          ; preds = %for.cond
  %res.0.lcssa = phi i32 [ %res.0, %for.cond ], !dbg !8713
  call void @llvm.dbg.value(metadata i32 %res.0.lcssa, metadata !8706, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32 %res.0.lcssa, metadata !8706, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32 %res.0.lcssa, metadata !8706, metadata !DIExpression()), !dbg !8709
  ret i32 %res.0.lcssa, !dbg !8724
}

; Function Attrs: nounwind uwtable
define internal i32 @sel_luid_for_non_insn(%struct.rtx_def* %x) #5 !dbg !8725 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !8727, metadata !DIExpression()), !dbg !8728
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !8729
  %bf.load = load i32, i32* %0, align 8, !dbg !8729
  %bf.clear = and i32 %bf.load, 65535, !dbg !8729
  %cmp = icmp eq i32 %bf.clear, 13, !dbg !8729
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !8729

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 12, !dbg !8729
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !8729

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3801, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8729
  br label %cond.end, !dbg !8729

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  ret i32 -1, !dbg !8730
}

declare dso_local i32 @get_rgn_sched_max_insns_priority() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @make_region_from_loop_preheader(%struct.VEC_basic_block_heap** %loop_blocks) local_unnamed_addr #5 !dbg !8731 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  %bb_ord_index = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %loop_blocks, metadata !8733, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32 -1, metadata !8735, metadata !DIExpression()), !dbg !8738
  %0 = bitcast %struct.basic_block_def** %bb to i8*, !dbg !8739
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !8739
  %1 = bitcast i32* %bb_ord_index to i8*, !dbg !8740
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #7, !dbg !8740
  call void @llvm.dbg.value(metadata i32 0, metadata !8737, metadata !DIExpression()), !dbg !8738
  store i32 0, i32* %bb_ord_index, align 4, !dbg !8741
  %call = tail call fastcc i32 @sel_create_new_region() #8, !dbg !8742
  call void @llvm.dbg.value(metadata i32 %call, metadata !8735, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32 0, metadata !8734, metadata !DIExpression()), !dbg !8738
  %cmp = icmp sgt i32 %call, -1, !dbg !8743
  br i1 %cmp, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !8747

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !8747

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !8747

for.cond.us:                                      ; preds = %for.body.us, %entry.split.us
  %i.0.us = phi i32 [ 0, %entry.split.us ], [ %inc.us, %for.body.us ], !dbg !8748
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !8734, metadata !DIExpression()), !dbg !8738
  %2 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %loop_blocks, align 8, !dbg !8749
  %tobool.us = icmp eq %struct.VEC_basic_block_heap* %2, null, !dbg !8749
  br i1 %tobool.us, label %cond.end.us, label %cond.true.us, !dbg !8749

cond.true.us:                                     ; preds = %for.cond.us
  %base.us = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %2, i64 0, i32 0, !dbg !8749
  br label %cond.end.us, !dbg !8749

cond.end.us:                                      ; preds = %cond.true.us, %for.cond.us
  %cond.us = phi %struct.VEC_basic_block_base* [ %base.us, %cond.true.us ], [ null, %for.cond.us ], !dbg !8749
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb, metadata !8736, metadata !DIExpression(DW_OP_deref)), !dbg !8738
  %call1.us = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %cond.us, i32 %i.0.us, %struct.basic_block_def** nonnull %bb) #8, !dbg !8749
  %tobool2.us = icmp eq i32 %call1.us, 0, !dbg !8750
  br i1 %tobool2.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !8750

for.body.us:                                      ; preds = %cond.end.us
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8751
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !8736, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32* %bb_ord_index, metadata !8737, metadata !DIExpression(DW_OP_deref)), !dbg !8738
  call fastcc void @sel_add_block_to_region(%struct.basic_block_def* %3, i32* nonnull %bb_ord_index, i32 %call) #8, !dbg !8752
  %inc.us = add i32 %i.0.us, 1, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !8734, metadata !DIExpression()), !dbg !8738
  br label %for.cond.us, !dbg !8754, !llvm.loop !8755

for.end.us-lcssa.us:                              ; preds = %cond.end.us
  br label %for.end, !dbg !8757

for.cond:                                         ; preds = %for.body, %entry.entry.split_crit_edge
  %i.0 = phi i32 [ 0, %entry.entry.split_crit_edge ], [ %inc, %for.body ], !dbg !8748
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8734, metadata !DIExpression()), !dbg !8738
  %4 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %loop_blocks, align 8, !dbg !8749
  %tobool = icmp eq %struct.VEC_basic_block_heap* %4, null, !dbg !8749
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8749

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %4, i64 0, i32 0, !dbg !8749
  br label %cond.end, !dbg !8749

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !8749
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb, metadata !8736, metadata !DIExpression(DW_OP_deref)), !dbg !8738
  %call1 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %cond, i32 %i.0, %struct.basic_block_def** nonnull %bb) #8, !dbg !8749
  %tobool2 = icmp eq i32 %call1, 0, !dbg !8750
  br i1 %tobool2, label %for.end.us-lcssa, label %for.body, !dbg !8750

for.body:                                         ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5830, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8758
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8751
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %5, metadata !8736, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32* %bb_ord_index, metadata !8737, metadata !DIExpression(DW_OP_deref)), !dbg !8738
  call fastcc void @sel_add_block_to_region(%struct.basic_block_def* %5, i32* nonnull %bb_ord_index, i32 %call) #8, !dbg !8752
  %inc = add i32 %i.0, 1, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8734, metadata !DIExpression()), !dbg !8738
  br label %for.cond, !dbg !8754, !llvm.loop !8755

for.end.us-lcssa:                                 ; preds = %cond.end
  br label %for.end, !dbg !8757

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** %loop_blocks) #8, !dbg !8757
  %6 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %loop_blocks, align 8, !dbg !8759
  %cmp7 = icmp eq %struct.VEC_basic_block_heap* %6, null, !dbg !8759
  br i1 %cmp7, label %cond.end10, label %cond.true8, !dbg !8759

cond.true8:                                       ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5836, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8759
  br label %cond.end10, !dbg !8759

cond.end10:                                       ; preds = %for.end, %cond.true8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #7, !dbg !8760
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !8760
  ret void, !dbg !8760
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @sel_create_new_region() unnamed_addr #5 !dbg !8761 {
entry:
  %0 = load i32, i32* @nr_regions, align 4, !dbg !8764
  call void @llvm.dbg.value(metadata i32 %0, metadata !8763, metadata !DIExpression()), !dbg !8765
  %1 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !8766
  %idxprom = sext i32 %0 to i64, !dbg !8766
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %1, i64 %idxprom, i32 0, !dbg !8766
  store i32 0, i32* %rgn_nr_blocks, align 4, !dbg !8767
  %cmp = icmp eq i32 %0, 0, !dbg !8768
  %2 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !8770
  br i1 %cmp, label %if.else, label %if.then, !dbg !8771

if.then:                                          ; preds = %entry
  %sub = add nsw i32 %0, -1, !dbg !8772
  %idxprom1 = sext i32 %sub to i64, !dbg !8772
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %2, i64 %idxprom1, i32 1, !dbg !8772
  %3 = load i32, i32* %rgn_blocks, align 4, !dbg !8772
  %rgn_nr_blocks6 = getelementptr inbounds %struct.region, %struct.region* %2, i64 %idxprom1, i32 0, !dbg !8773
  %4 = load i32, i32* %rgn_nr_blocks6, align 4, !dbg !8773
  %add = add nsw i32 %3, %4, !dbg !8774
  %rgn_blocks9 = getelementptr inbounds %struct.region, %struct.region* %2, i64 %idxprom, i32 1, !dbg !8775
  store i32 %add, i32* %rgn_blocks9, align 4, !dbg !8776
  br label %if.end, !dbg !8775

if.else:                                          ; preds = %entry
  %rgn_blocks12 = getelementptr inbounds %struct.region, %struct.region* %2, i64 0, i32 1, !dbg !8777
  store i32 0, i32* %rgn_blocks12, align 4, !dbg !8778
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !8779
  %rgn_blocks15 = getelementptr inbounds %struct.region, %struct.region* %5, i64 %idxprom, i32 1, !dbg !8779
  %6 = load i32, i32* %rgn_blocks15, align 4, !dbg !8779
  %rgn_nr_blocks18 = getelementptr inbounds %struct.region, %struct.region* %5, i64 %idxprom, i32 0, !dbg !8780
  %7 = load i32, i32* %rgn_nr_blocks18, align 4, !dbg !8780
  %add19 = add nsw i32 %6, %7, !dbg !8781
  %add20 = add nsw i32 %0, 1, !dbg !8782
  %idxprom21 = sext i32 %add20 to i64, !dbg !8782
  %rgn_blocks23 = getelementptr inbounds %struct.region, %struct.region* %5, i64 %idxprom21, i32 1, !dbg !8782
  store i32 %add19, i32* %rgn_blocks23, align 4, !dbg !8783
  %8 = load i32, i32* @nr_regions, align 4, !dbg !8784
  %inc = add nsw i32 %8, 1, !dbg !8784
  store i32 %inc, i32* @nr_regions, align 4, !dbg !8784
  ret i32 %0, !dbg !8785
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_add_block_to_region(%struct.basic_block_def* %bb, i32* %bb_ord_index, i32 %rgn) unnamed_addr #5 !dbg !8786 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8790, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.value(metadata i32* %bb_ord_index, metadata !8791, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !8792, metadata !DIExpression()), !dbg !8793
  %0 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !8794
  %idxprom = sext i32 %rgn to i64, !dbg !8794
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %0, i64 %idxprom, i32 0, !dbg !8794
  %1 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !8795
  %add = add nsw i32 %1, 1, !dbg !8795
  store i32 %add, i32* %rgn_nr_blocks, align 4, !dbg !8795
  %2 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !8796
  %dont_calc_deps = getelementptr inbounds %struct.region, %struct.region* %2, i64 %idxprom, i32 2, !dbg !8796
  %bf.load = load i8, i8* %dont_calc_deps, align 4, !dbg !8797
  %bf.clear = and i8 %bf.load, -2, !dbg !8797
  store i8 %bf.clear, i8* %dont_calc_deps, align 4, !dbg !8797
  %3 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !8798
  %has_real_ebb = getelementptr inbounds %struct.region, %struct.region* %3, i64 %idxprom, i32 2, !dbg !8798
  %bf.load5 = load i8, i8* %has_real_ebb, align 4, !dbg !8799
  %bf.clear6 = and i8 %bf.load5, -3, !dbg !8799
  store i8 %bf.clear6, i8* %has_real_ebb, align 4, !dbg !8799
  %4 = load i32*, i32** @containing_rgn, align 8, !dbg !8800
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !8800
  %5 = load i32, i32* %index, align 8, !dbg !8800
  %idxprom7 = sext i32 %5 to i64, !dbg !8800
  %arrayidx8 = getelementptr inbounds i32, i32* %4, i64 %idxprom7, !dbg !8800
  store i32 %rgn, i32* %arrayidx8, align 4, !dbg !8801
  %6 = load i32, i32* %bb_ord_index, align 4, !dbg !8802
  %7 = load i32*, i32** @block_to_bb, align 8, !dbg !8803
  %8 = load i32, i32* %index, align 8, !dbg !8803
  %idxprom10 = sext i32 %8 to i64, !dbg !8803
  %arrayidx11 = getelementptr inbounds i32, i32* %7, i64 %idxprom10, !dbg !8803
  store i32 %6, i32* %arrayidx11, align 4, !dbg !8804
  %9 = load i32, i32* %index, align 8, !dbg !8805
  %10 = load i32*, i32** @rgn_bb_table, align 8, !dbg !8806
  %11 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !8807
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %11, i64 %idxprom, i32 1, !dbg !8807
  %12 = load i32, i32* %rgn_blocks, align 4, !dbg !8807
  %13 = load i32, i32* %bb_ord_index, align 4, !dbg !8808
  %add15 = add nsw i32 %12, %13, !dbg !8809
  %idxprom16 = sext i32 %add15 to i64, !dbg !8806
  %arrayidx17 = getelementptr inbounds i32, i32* %10, i64 %idxprom16, !dbg !8806
  store i32 %9, i32* %arrayidx17, align 4, !dbg !8810
  %14 = load i32, i32* %bb_ord_index, align 4, !dbg !8811
  %inc = add nsw i32 %14, 1, !dbg !8811
  store i32 %inc, i32* %bb_ord_index, align 4, !dbg !8811
  %15 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !8812
  %rgn_blocks20 = getelementptr inbounds %struct.region, %struct.region* %15, i64 %idxprom, i32 1, !dbg !8812
  %16 = load i32, i32* %rgn_blocks20, align 4, !dbg !8812
  %rgn_nr_blocks23 = getelementptr inbounds %struct.region, %struct.region* %15, i64 %idxprom, i32 0, !dbg !8813
  %17 = load i32, i32* %rgn_nr_blocks23, align 4, !dbg !8813
  %add24 = add nsw i32 %16, %17, !dbg !8814
  %add25 = add nsw i32 %rgn, 1, !dbg !8815
  %idxprom26 = sext i32 %add25 to i64, !dbg !8815
  %rgn_blocks28 = getelementptr inbounds %struct.region, %struct.region* %15, i64 %idxprom26, i32 1, !dbg !8815
  store i32 %add24, i32* %rgn_blocks28, align 4, !dbg !8816
  ret void, !dbg !8817
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_init_pipelining() local_unnamed_addr #5 !dbg !8818 {
entry:
  tail call void @loop_optimizer_init(i32 141) #6, !dbg !8819
  store %struct.loop* null, %struct.loop** @current_loop_nest, align 8, !dbg !8820
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8821
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !8821
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8821
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !8821
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !8821
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %2) #6, !dbg !8822
  store %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def** @bbs_in_loop_rgns, align 8, !dbg !8823
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !8824
  tail call fastcc void @recompute_rev_top_order() #8, !dbg !8825
  ret void, !dbg !8826
}

declare dso_local void @loop_optimizer_init(i32) local_unnamed_addr #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @recompute_rev_top_order() unnamed_addr #5 !dbg !8827 {
entry:
  %0 = load i32*, i32** @rev_top_order_index, align 8, !dbg !8832
  %tobool = icmp eq i32* %0, null, !dbg !8832
  %1 = bitcast i32* %0 to i8*, !dbg !8834
  br i1 %tobool, label %entry.if.then_crit_edge, label %lor.lhs.false, !dbg !8834

entry.if.then_crit_edge:                          ; preds = %entry
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8835
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !8837
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !8835
  %x_last_basic_block3.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre1, i64 0, i32 5, !dbg !8837
  %.pre2 = load i32, i32* %x_last_basic_block3.phi.trans.insert, align 8, !dbg !8835
  br label %if.then, !dbg !8834

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* @rev_top_order_index_len, align 4, !dbg !8838
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8839
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !8839
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8839
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 5, !dbg !8839
  %5 = load i32, i32* %x_last_basic_block, align 8, !dbg !8839
  %cmp = icmp slt i32 %2, %5, !dbg !8840
  br i1 %cmp, label %if.then, label %if.end, !dbg !8841

if.then:                                          ; preds = %entry.if.then_crit_edge, %lor.lhs.false
  %6 = phi i32 [ %.pre2, %entry.if.then_crit_edge ], [ %5, %lor.lhs.false ], !dbg !8835
  store i32 %6, i32* @rev_top_order_index_len, align 4, !dbg !8842
  %conv = sext i32 %6 to i64, !dbg !8843
  %mul = shl nsw i64 %conv, 2, !dbg !8843
  %call = tail call i8* @xrealloc(i8* %1, i64 %mul) #6, !dbg !8843
  store i8* %call, i8** bitcast (i32** @rev_top_order_index to i8**), align 8, !dbg !8844
  %.pre3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8845
  %cfg5.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre3, i64 0, i32 1, !dbg !8846
  %.pre4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5.phi.trans.insert, align 8, !dbg !8845
  br label %if.end, !dbg !8847

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %7 = phi %struct.control_flow_graph* [ %.pre4, %if.then ], [ %4, %lor.lhs.false ], !dbg !8845
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 3, !dbg !8845
  %8 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !8845
  %conv6 = sext i32 %8 to i64, !dbg !8845
  %mul7 = shl nsw i64 %conv6, 2, !dbg !8845
  %call8 = tail call i8* @xmalloc(i64 %mul7) #6, !dbg !8845
  %9 = bitcast i8* %call8 to i32*, !dbg !8845
  call void @llvm.dbg.value(metadata i32* %9, metadata !8829, metadata !DIExpression()), !dbg !8846
  %call9 = tail call i32 @post_order_compute(i32* %9, i8 zeroext 1, i8 zeroext 0) #6, !dbg !8848
  call void @llvm.dbg.value(metadata i32 %call9, metadata !8830, metadata !DIExpression()), !dbg !8846
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8849
  %cfg11 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 1, !dbg !8849
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg11, align 8, !dbg !8849
  %x_n_basic_blocks12 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 3, !dbg !8849
  %12 = load i32, i32* %x_n_basic_blocks12, align 8, !dbg !8849
  %cmp13 = icmp eq i32 %12, %call9, !dbg !8849
  br i1 %cmp13, label %cond.end, label %cond.true, !dbg !8849

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4714, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8849
  br label %cond.end, !dbg !8849

cond.end:                                         ; preds = %if.end, %cond.true
  call void @llvm.dbg.value(metadata i32 0, metadata !8831, metadata !DIExpression()), !dbg !8846
  %13 = sext i32 %call9 to i64, !dbg !8850
  br label %for.cond, !dbg !8850

for.cond:                                         ; preds = %cond.end21, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end21 ], [ 0, %cond.end ], !dbg !8852
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8831, metadata !DIExpression()), !dbg !8846
  %cmp15 = icmp slt i64 %indvars.iv, %13, !dbg !8853
  br i1 %cmp15, label %for.body, label %for.end, !dbg !8855

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %indvars.iv, !dbg !8856
  %14 = load i32, i32* %arrayidx, align 4, !dbg !8856
  %15 = load i32, i32* @rev_top_order_index_len, align 4, !dbg !8856
  %cmp17 = icmp slt i32 %14, %15, !dbg !8856
  br i1 %cmp17, label %cond.end21, label %cond.true19, !dbg !8856

cond.true19:                                      ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4720, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8856
  %.pre5 = load i32, i32* %arrayidx, align 4, !dbg !8858
  br label %cond.end21, !dbg !8856

cond.end21:                                       ; preds = %for.body, %cond.true19
  %16 = phi i32 [ %14, %for.body ], [ %.pre5, %cond.true19 ], !dbg !8858
  %17 = load i32*, i32** @rev_top_order_index, align 8, !dbg !8859
  %idxprom25 = sext i32 %16 to i64, !dbg !8859
  %arrayidx26 = getelementptr inbounds i32, i32* %17, i64 %idxprom25, !dbg !8859
  %18 = trunc i64 %indvars.iv to i32, !dbg !8860
  store i32 %18, i32* %arrayidx26, align 4, !dbg !8860
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8861
  call void @llvm.dbg.value(metadata i32 undef, metadata !8831, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8846
  br label %for.cond, !dbg !8862, !llvm.loop !8863

for.end:                                          ; preds = %for.cond
  tail call void @free(i8* %call8) #6, !dbg !8865
  ret void, !dbg !8866
}

; Function Attrs: nounwind uwtable
define dso_local %struct.loop* @get_loop_nest_for_rgn(i32 %rgn) local_unnamed_addr #5 !dbg !8867 {
entry:
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !8871, metadata !DIExpression()), !dbg !8872
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** @loop_nests, align 8, !dbg !8873
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %0, i64 0, i32 0, !dbg !8873
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %base) #8, !dbg !8873
  %cmp = icmp ugt i32 %call, %rgn, !dbg !8875
  br i1 %cmp, label %if.then, label %return, !dbg !8876

if.then:                                          ; preds = %entry
  %1 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** @loop_nests, align 8, !dbg !8877
  %base3 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %1, i64 0, i32 0, !dbg !8877
  %call7 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %base3, i32 %rgn) #8, !dbg !8877
  br label %return, !dbg !8878

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.loop* [ %call7, %if.then ], [ null, %entry ], !dbg !8879
  ret %struct.loop* %retval.0, !dbg !8880
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !8881 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !8887, metadata !DIExpression()), !dbg !8888
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !8889
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8889

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !8889
  %0 = load i32, i32* %num, align 8, !dbg !8889
  br label %cond.end, !dbg !8889

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !8889
  ret i32 %cond, !dbg !8889
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !8890 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !8894, metadata !DIExpression()), !dbg !8896
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8895, metadata !DIExpression()), !dbg !8896
  br label %land.end, !dbg !8897

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !8897
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8897
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !8897
  ret %struct.loop* %0, !dbg !8897
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @considered_for_pipelining_p(%struct.loop* %loop) local_unnamed_addr #5 !dbg !8898 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !8902, metadata !DIExpression()), !dbg !8906
  %call = tail call fastcc i32 @loop_depth(%struct.loop* %loop) #8, !dbg !8907
  %cmp = icmp eq i32 %call, 0, !dbg !8909
  br i1 %cmp, label %return, label %if.end, !dbg !8910

if.end:                                           ; preds = %entry
  %aux = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 10, !dbg !8911
  %0 = bitcast i8** %aux to i64*, !dbg !8911
  %1 = load i64, i64* %0, align 8, !dbg !8911
  %tobool = icmp eq i64 %1, 0, !dbg !8911
  br i1 %tobool, label %return, label %if.then1, !dbg !8912

if.then1:                                         ; preds = %if.end
  %2 = load i32*, i32** @containing_rgn, align 8, !dbg !8913
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !8913
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !8913
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 9, !dbg !8913
  %4 = load i32, i32* %index, align 8, !dbg !8913
  %idxprom = sext i32 %4 to i64, !dbg !8913
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !8913
  %5 = load i32, i32* %arrayidx, align 4, !dbg !8913
  call void @llvm.dbg.value(metadata i32 %5, metadata !8903, metadata !DIExpression()), !dbg !8914
  %6 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** @loop_nests, align 8, !dbg !8915
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %6, i64 0, i32 0, !dbg !8915
  %call3 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %base) #8, !dbg !8915
  %cmp4 = icmp ult i32 %5, %call3, !dbg !8915
  br i1 %cmp4, label %return, label %cond.true5, !dbg !8915

cond.true5:                                       ; preds = %if.then1
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5911, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8915
  br label %return, !dbg !8915

return:                                           ; preds = %if.end, %cond.true5, %if.then1, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %if.then1 ], [ 1, %cond.true5 ], [ 0, %if.end ], !dbg !8906
  ret i8 %retval.0, !dbg !8916
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @loop_depth(%struct.loop* %loop) unnamed_addr #0 !dbg !8917 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !8923, metadata !DIExpression()), !dbg !8924
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !8925
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !8925
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !8925
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8925

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !8925
  br label %cond.end, !dbg !8925

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8925
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !8925
  ret i32 %call, !dbg !8926
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_finish_pipelining() local_unnamed_addr #5 !dbg !8927 {
entry:
  %li = alloca %struct.loop_iterator, align 8
  %loop = alloca %struct.loop*, align 8
  %0 = bitcast %struct.loop_iterator* %li to i8*, !dbg !8936
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !8936
  %1 = bitcast %struct.loop** %loop to i8*, !dbg !8937
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !8937
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !8929, metadata !DIExpression(DW_OP_deref)), !dbg !8938
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !8935, metadata !DIExpression(DW_OP_deref)), !dbg !8938
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 0) #8, !dbg !8939
  br label %for.cond, !dbg !8939

for.cond:                                         ; preds = %for.body, %entry
  %2 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !8941
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !8935, metadata !DIExpression()), !dbg !8938
  %tobool = icmp eq %struct.loop* %2, null, !dbg !8939
  br i1 %tobool, label %for.end, label %for.body, !dbg !8939

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !8935, metadata !DIExpression()), !dbg !8938
  %aux = getelementptr inbounds %struct.loop, %struct.loop* %2, i64 0, i32 10, !dbg !8943
  store i8* null, i8** %aux, align 8, !dbg !8944
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !8929, metadata !DIExpression(DW_OP_deref)), !dbg !8938
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !8935, metadata !DIExpression(DW_OP_deref)), !dbg !8938
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #8, !dbg !8941
  br label %for.cond, !dbg !8941, !llvm.loop !8945

for.end:                                          ; preds = %for.cond
  call void @loop_optimizer_finalize() #6, !dbg !8947
  call fastcc void @VEC_loop_p_heap_free(%struct.VEC_loop_p_heap** nonnull @loop_nests) #8, !dbg !8948
  %3 = load i8*, i8** bitcast (i32** @rev_top_order_index to i8**), align 8, !dbg !8949
  call void @free(i8* %3) #6, !dbg !8950
  store i32* null, i32** @rev_top_order_index, align 8, !dbg !8951
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !8952
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !8952
  ret void, !dbg !8952
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_init(%struct.loop_iterator* %li, %struct.loop** %loop, i32 %flags) unnamed_addr #0 !dbg !8953 {
entry:
  %aloop = alloca %struct.loop*, align 8
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !8959, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !8960, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.value(metadata i32 %flags, metadata !8961, metadata !DIExpression()), !dbg !8965
  %0 = bitcast %struct.loop** %aloop to i8*, !dbg !8966
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !8966
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !8967
  store i32 0, i32* %idx, align 8, !dbg !8968
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8969
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 4, !dbg !8969
  %2 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !8969
  %tobool = icmp eq %struct.loops* %2, null, !dbg !8969
  br i1 %tobool, label %if.then, label %if.end, !dbg !8971

if.then:                                          ; preds = %entry
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !8972
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %to_visit, align 8, !dbg !8974
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !8975
  br label %cleanup, !dbg !8976

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @number_of_loops() #8, !dbg !8977
  %call1 = tail call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %call) #8, !dbg !8977
  %to_visit2 = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !8978
  store %struct.VEC_int_heap* %call1, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !8979
  %and = and i32 %flags, 1, !dbg !8980
  %3 = xor i32 %and, 1, !dbg !8981
  call void @llvm.dbg.value(metadata i32 %3, metadata !8964, metadata !DIExpression()), !dbg !8965
  %and4 = and i32 %flags, 4, !dbg !8982
  %tobool5 = icmp eq i32 %and4, 0, !dbg !8982
  br i1 %tobool5, label %if.else, label %for.cond.preheader, !dbg !8984

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !8985

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !8988
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8963, metadata !DIExpression()), !dbg !8965
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8989
  %x_current_loops8 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 4, !dbg !8989
  %5 = load %struct.loops*, %struct.loops** %x_current_loops8, align 8, !dbg !8989
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %5, i64 0, i32 1, !dbg !8989
  %6 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !8989
  %tobool9 = icmp eq %struct.VEC_loop_p_gc* %6, null, !dbg !8989
  br i1 %tobool9, label %cond.end, label %cond.true, !dbg !8989

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %6, i64 0, i32 0, !dbg !8989
  br label %cond.end, !dbg !8989

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond13 = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !8989
  call void @llvm.dbg.value(metadata %struct.loop** %aloop, metadata !8962, metadata !DIExpression(DW_OP_deref)), !dbg !8965
  %call14 = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %cond13, i32 %i.0, %struct.loop** nonnull %aloop) #8, !dbg !8989
  %tobool15 = icmp eq i32 %call14, 0, !dbg !8985
  br i1 %tobool15, label %if.end114.loopexit2, label %for.body, !dbg !8985

for.body:                                         ; preds = %cond.end
  %7 = load %struct.loop*, %struct.loop** %aloop, align 8, !dbg !8991
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !8962, metadata !DIExpression()), !dbg !8965
  %cmp = icmp eq %struct.loop* %7, null, !dbg !8993
  br i1 %cmp, label %for.inc, label %land.lhs.true, !dbg !8994

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !8962, metadata !DIExpression()), !dbg !8965
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %7, i64 0, i32 8, !dbg !8995
  %8 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !8995
  %cmp16 = icmp eq %struct.loop* %8, null, !dbg !8996
  br i1 %cmp16, label %land.lhs.true17, label %for.inc, !dbg !8997

land.lhs.true17:                                  ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !8962, metadata !DIExpression()), !dbg !8965
  %num = getelementptr inbounds %struct.loop, %struct.loop* %7, i64 0, i32 0, !dbg !8998
  %9 = load i32, i32* %num, align 8, !dbg !8998
  %cmp18 = icmp slt i32 %9, %3, !dbg !8999
  br i1 %cmp18, label %for.inc, label %if.then19, !dbg !9000

if.then19:                                        ; preds = %land.lhs.true17
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !9001
  %tobool21 = icmp eq %struct.VEC_int_heap* %10, null, !dbg !9001
  br i1 %tobool21, label %cond.end26, label %cond.true22, !dbg !9001

cond.true22:                                      ; preds = %if.then19
  %base24 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !9001
  br label %cond.end26, !dbg !9001

cond.end26:                                       ; preds = %if.then19, %cond.true22
  %cond27 = phi %struct.VEC_int_base* [ %base24, %cond.true22 ], [ null, %if.then19 ], !dbg !9001
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !8962, metadata !DIExpression()), !dbg !8965
  %call29 = call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond27, i32 %9) #8, !dbg !9001
  br label %for.inc, !dbg !9001

for.inc:                                          ; preds = %land.lhs.true17, %for.body, %land.lhs.true, %cond.end26
  %inc = add i32 %i.0, 1, !dbg !9002
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8963, metadata !DIExpression()), !dbg !8965
  br label %for.cond, !dbg !9003, !llvm.loop !9004

if.else:                                          ; preds = %if.end
  %and31 = and i32 %flags, 2, !dbg !9006
  %tobool32 = icmp eq i32 %and31, 0, !dbg !9006
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9008
  %x_current_loops35 = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 4, !dbg !9008
  %12 = load %struct.loops*, %struct.loops** %x_current_loops35, align 8, !dbg !9008
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %12, i64 0, i32 3, !dbg !9008
  %13 = bitcast %struct.loop** %tree_root to i64*, !dbg !9008
  %14 = load i64, i64* %13, align 8, !dbg !9008
  %15 = bitcast %struct.loop** %aloop to i64*, !dbg !9008
  store i64 %14, i64* %15, align 8, !dbg !9008
  %16 = inttoptr i64 %14 to %struct.loop*, !dbg !9009
  br i1 %tobool32, label %while.cond79.preheader, label %for.cond36.preheader, !dbg !9009

for.cond36.preheader:                             ; preds = %if.else
  br label %for.cond36, !dbg !9010

while.cond79.preheader:                           ; preds = %if.else
  br label %while.cond79, !dbg !9013

for.cond36:                                       ; preds = %for.cond36.preheader, %for.inc40
  %17 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %18 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %19 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %20 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %21 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %22 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ], !dbg !9015
  call void @llvm.dbg.value(metadata %struct.loop* %22, metadata !8962, metadata !DIExpression()), !dbg !8965
  %inner37 = getelementptr inbounds %struct.loop, %struct.loop* %22, i64 0, i32 8, !dbg !9017
  %23 = load %struct.loop*, %struct.loop** %inner37, align 8, !dbg !9017
  %cmp38 = icmp eq %struct.loop* %23, null, !dbg !9018
  br i1 %cmp38, label %while.cond.preheader, label %for.inc40, !dbg !9010

while.cond.preheader:                             ; preds = %for.cond36
  %.lcssa16 = phi %struct.loop* [ %17, %for.cond36 ]
  %.lcssa15 = phi %struct.loop* [ %18, %for.cond36 ]
  %.lcssa14 = phi %struct.loop* [ %19, %for.cond36 ]
  %.lcssa13 = phi %struct.loop* [ %20, %for.cond36 ]
  br label %while.cond, !dbg !9019

for.inc40:                                        ; preds = %for.cond36
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !8962, metadata !DIExpression()), !dbg !8965
  %inner41 = getelementptr inbounds %struct.loop, %struct.loop* %21, i64 0, i32 8, !dbg !9020
  %24 = bitcast %struct.loop** %inner41 to i64*, !dbg !9020
  %25 = load i64, i64* %24, align 8, !dbg !9020
  store i64 %25, i64* %15, align 8, !dbg !9021
  %26 = inttoptr i64 %25 to %struct.loop*, !dbg !9022
  br label %for.cond36, !dbg !9022, !llvm.loop !9023

while.cond:                                       ; preds = %while.cond.preheader, %if.end74
  %27 = phi %struct.loop* [ %.lcssa16, %while.cond.preheader ], [ %43, %if.end74 ]
  %28 = phi %struct.loop* [ %.lcssa15, %while.cond.preheader ], [ %44, %if.end74 ]
  %29 = phi %struct.loop* [ %.lcssa14, %while.cond.preheader ], [ %44, %if.end74 ]
  %30 = phi %struct.loop* [ %.lcssa13, %while.cond.preheader ], [ %44, %if.end74 ], !dbg !9025
  call void @llvm.dbg.value(metadata %struct.loop* %30, metadata !8962, metadata !DIExpression()), !dbg !8965
  %num43 = getelementptr inbounds %struct.loop, %struct.loop* %30, i64 0, i32 0, !dbg !9028
  %31 = load i32, i32* %num43, align 8, !dbg !9028
  %cmp44 = icmp slt i32 %31, %3, !dbg !9029
  br i1 %cmp44, label %if.end56, label %if.then45, !dbg !9030

if.then45:                                        ; preds = %while.cond
  %32 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !9031
  %tobool47 = icmp eq %struct.VEC_int_heap* %32, null, !dbg !9031
  br i1 %tobool47, label %cond.end52, label %cond.true48, !dbg !9031

cond.true48:                                      ; preds = %if.then45
  %base50 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %32, i64 0, i32 0, !dbg !9031
  br label %cond.end52, !dbg !9031

cond.end52:                                       ; preds = %if.then45, %cond.true48
  %cond53 = phi %struct.VEC_int_base* [ %base50, %cond.true48 ], [ null, %if.then45 ], !dbg !9031
  call void @llvm.dbg.value(metadata %struct.loop* %29, metadata !8962, metadata !DIExpression()), !dbg !8965
  %num54 = getelementptr inbounds %struct.loop, %struct.loop* %29, i64 0, i32 0, !dbg !9031
  %33 = load i32, i32* %num54, align 8, !dbg !9031
  %call55 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond53, i32 %33) #8, !dbg !9031
  br label %if.end56, !dbg !9031

if.end56:                                         ; preds = %while.cond, %cond.end52
  call void @llvm.dbg.value(metadata %struct.loop* %28, metadata !8962, metadata !DIExpression()), !dbg !8965
  %next = getelementptr inbounds %struct.loop, %struct.loop* %28, i64 0, i32 9, !dbg !9032
  %34 = load %struct.loop*, %struct.loop** %next, align 8, !dbg !9032
  %tobool57 = icmp eq %struct.loop* %34, null, !dbg !9034
  call void @llvm.dbg.value(metadata %struct.loop* %28, metadata !8962, metadata !DIExpression()), !dbg !8965
  br i1 %tobool57, label %if.else67, label %if.then58, !dbg !9035

if.then58:                                        ; preds = %if.end56
  %35 = ptrtoint %struct.loop* %34 to i64, !dbg !9035
  store i64 %35, i64* %15, align 8, !dbg !9036
  br label %for.cond60, !dbg !9039

for.cond60:                                       ; preds = %for.inc64, %if.then58
  %36 = phi %struct.loop* [ %42, %for.inc64 ], [ %34, %if.then58 ]
  %37 = phi %struct.loop* [ %42, %for.inc64 ], [ %34, %if.then58 ]
  %38 = phi %struct.loop* [ %42, %for.inc64 ], [ %34, %if.then58 ], !dbg !9040
  call void @llvm.dbg.value(metadata %struct.loop* %38, metadata !8962, metadata !DIExpression()), !dbg !8965
  %inner61 = getelementptr inbounds %struct.loop, %struct.loop* %38, i64 0, i32 8, !dbg !9042
  %39 = load %struct.loop*, %struct.loop** %inner61, align 8, !dbg !9042
  %cmp62 = icmp eq %struct.loop* %39, null, !dbg !9043
  br i1 %cmp62, label %if.end74.loopexit, label %for.inc64, !dbg !9044

for.inc64:                                        ; preds = %for.cond60
  call void @llvm.dbg.value(metadata %struct.loop* %37, metadata !8962, metadata !DIExpression()), !dbg !8965
  %inner65 = getelementptr inbounds %struct.loop, %struct.loop* %37, i64 0, i32 8, !dbg !9045
  %40 = bitcast %struct.loop** %inner65 to i64*, !dbg !9045
  %41 = load i64, i64* %40, align 8, !dbg !9045
  store i64 %41, i64* %15, align 8, !dbg !9046
  %42 = inttoptr i64 %41 to %struct.loop*, !dbg !9047
  br label %for.cond60, !dbg !9047, !llvm.loop !9048

if.else67:                                        ; preds = %if.end56
  %call68 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %28) #8, !dbg !9050
  %tobool69 = icmp eq %struct.loop* %call68, null, !dbg !9050
  br i1 %tobool69, label %if.end114.loopexit1, label %if.else71, !dbg !9052

if.else71:                                        ; preds = %if.else67
  call void @llvm.dbg.value(metadata %struct.loop* %27, metadata !8962, metadata !DIExpression()), !dbg !8965
  %call72 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %27) #8, !dbg !9053
  call void @llvm.dbg.value(metadata %struct.loop* %call72, metadata !8962, metadata !DIExpression()), !dbg !8965
  store %struct.loop* %call72, %struct.loop** %aloop, align 8, !dbg !9054
  br label %if.end74

if.end74.loopexit:                                ; preds = %for.cond60
  %.lcssa12 = phi %struct.loop* [ %36, %for.cond60 ]
  %.lcssa11 = phi %struct.loop* [ %38, %for.cond60 ], !dbg !9040
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa11, metadata !8962, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa11, metadata !8962, metadata !DIExpression()), !dbg !8965
  br label %if.end74, !dbg !9019

if.end74:                                         ; preds = %if.end74.loopexit, %if.else71
  %43 = phi %struct.loop* [ %.lcssa12, %if.end74.loopexit ], [ %call72, %if.else71 ]
  %44 = phi %struct.loop* [ %.lcssa11, %if.end74.loopexit ], [ %call72, %if.else71 ]
  br label %while.cond, !dbg !9019, !llvm.loop !9055

while.cond79:                                     ; preds = %while.cond79.preheader, %if.end111
  %45 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %69, %if.end111 ]
  %46 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %70, %if.end111 ]
  %47 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %71, %if.end111 ]
  %48 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %72, %if.end111 ]
  %49 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %73, %if.end111 ]
  %50 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %74, %if.end111 ]
  %51 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %75, %if.end111 ]
  %52 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %76, %if.end111 ], !dbg !9057
  call void @llvm.dbg.value(metadata %struct.loop* %52, metadata !8962, metadata !DIExpression()), !dbg !8965
  %num81 = getelementptr inbounds %struct.loop, %struct.loop* %52, i64 0, i32 0, !dbg !9060
  %53 = load i32, i32* %num81, align 8, !dbg !9060
  %cmp82 = icmp slt i32 %53, %3, !dbg !9061
  br i1 %cmp82, label %if.end94, label %if.then83, !dbg !9062

if.then83:                                        ; preds = %while.cond79
  %54 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !9063
  %tobool85 = icmp eq %struct.VEC_int_heap* %54, null, !dbg !9063
  br i1 %tobool85, label %cond.end90, label %cond.true86, !dbg !9063

cond.true86:                                      ; preds = %if.then83
  %base88 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %54, i64 0, i32 0, !dbg !9063
  br label %cond.end90, !dbg !9063

cond.end90:                                       ; preds = %if.then83, %cond.true86
  %cond91 = phi %struct.VEC_int_base* [ %base88, %cond.true86 ], [ null, %if.then83 ], !dbg !9063
  call void @llvm.dbg.value(metadata %struct.loop* %51, metadata !8962, metadata !DIExpression()), !dbg !8965
  %num92 = getelementptr inbounds %struct.loop, %struct.loop* %51, i64 0, i32 0, !dbg !9063
  %55 = load i32, i32* %num92, align 8, !dbg !9063
  %call93 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond91, i32 %55) #8, !dbg !9063
  br label %if.end94, !dbg !9063

if.end94:                                         ; preds = %while.cond79, %cond.end90
  call void @llvm.dbg.value(metadata %struct.loop* %50, metadata !8962, metadata !DIExpression()), !dbg !8965
  %inner95 = getelementptr inbounds %struct.loop, %struct.loop* %50, i64 0, i32 8, !dbg !9064
  %56 = load %struct.loop*, %struct.loop** %inner95, align 8, !dbg !9064
  %cmp96 = icmp eq %struct.loop* %56, null, !dbg !9066
  br i1 %cmp96, label %while.cond100.preheader, label %if.then97, !dbg !9067

while.cond100.preheader:                          ; preds = %if.end94
  br label %while.cond100, !dbg !9068

if.then97:                                        ; preds = %if.end94
  call void @llvm.dbg.value(metadata %struct.loop* %49, metadata !8962, metadata !DIExpression()), !dbg !8965
  %inner98 = getelementptr inbounds %struct.loop, %struct.loop* %49, i64 0, i32 8, !dbg !9070
  %57 = bitcast %struct.loop** %inner98 to i64*, !dbg !9070
  %58 = load i64, i64* %57, align 8, !dbg !9070
  store i64 %58, i64* %15, align 8, !dbg !9071
  %59 = inttoptr i64 %58 to %struct.loop*, !dbg !9072
  br label %if.end111, !dbg !9072

while.cond100:                                    ; preds = %while.cond100.preheader, %while.body104
  %60 = phi %struct.loop* [ %45, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %61 = phi %struct.loop* [ %46, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %62 = phi %struct.loop* [ %47, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %63 = phi %struct.loop* [ %48, %while.cond100.preheader ], [ %call105, %while.body104 ], !dbg !9073
  call void @llvm.dbg.value(metadata %struct.loop* %63, metadata !8962, metadata !DIExpression()), !dbg !8965
  %cmp101 = icmp eq %struct.loop* %63, null, !dbg !9074
  br i1 %cmp101, label %land.end, label %land.rhs, !dbg !9075

land.rhs:                                         ; preds = %while.cond100
  call void @llvm.dbg.value(metadata %struct.loop* %62, metadata !8962, metadata !DIExpression()), !dbg !8965
  %next102 = getelementptr inbounds %struct.loop, %struct.loop* %62, i64 0, i32 9, !dbg !9076
  %64 = load %struct.loop*, %struct.loop** %next102, align 8, !dbg !9076
  %cmp103 = icmp eq %struct.loop* %64, null, !dbg !9077
  br label %land.end

land.end:                                         ; preds = %while.cond100, %land.rhs
  %65 = phi i1 [ false, %while.cond100 ], [ %cmp103, %land.rhs ], !dbg !9078
  call void @llvm.dbg.value(metadata %struct.loop* %61, metadata !8962, metadata !DIExpression()), !dbg !8965
  br i1 %65, label %while.body104, label %while.end106, !dbg !9068

while.body104:                                    ; preds = %land.end
  %call105 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %61) #8, !dbg !9079
  call void @llvm.dbg.value(metadata %struct.loop* %call105, metadata !8962, metadata !DIExpression()), !dbg !8965
  store %struct.loop* %call105, %struct.loop** %aloop, align 8, !dbg !9080
  br label %while.cond100, !dbg !9068, !llvm.loop !9081

while.end106:                                     ; preds = %land.end
  %.lcssa10 = phi %struct.loop* [ %60, %land.end ]
  %.lcssa = phi %struct.loop* [ %61, %land.end ]
  %cmp107 = icmp eq %struct.loop* %.lcssa, null, !dbg !9083
  br i1 %cmp107, label %if.end114.loopexit, label %if.end109, !dbg !9085

if.end109:                                        ; preds = %while.end106
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa10, metadata !8962, metadata !DIExpression()), !dbg !8965
  %next110 = getelementptr inbounds %struct.loop, %struct.loop* %.lcssa10, i64 0, i32 9, !dbg !9086
  %66 = bitcast %struct.loop** %next110 to i64*, !dbg !9086
  %67 = load i64, i64* %66, align 8, !dbg !9086
  store i64 %67, i64* %15, align 8, !dbg !9087
  %68 = inttoptr i64 %67 to %struct.loop*
  br label %if.end111

if.end111:                                        ; preds = %if.end109, %if.then97
  %69 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %70 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %71 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %72 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %73 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %74 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %75 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %76 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  br label %while.cond79, !dbg !9013, !llvm.loop !9088

if.end114.loopexit:                               ; preds = %while.end106
  br label %if.end114, !dbg !9090

if.end114.loopexit1:                              ; preds = %if.else67
  br label %if.end114, !dbg !9090

if.end114.loopexit2:                              ; preds = %cond.end
  br label %if.end114, !dbg !9090

if.end114:                                        ; preds = %if.end114.loopexit2, %if.end114.loopexit1, %if.end114.loopexit
  call fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) #8, !dbg !9090
  br label %cleanup, !dbg !9091

cleanup:                                          ; preds = %if.end114, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !9091
  ret void, !dbg !9091
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) unnamed_addr #0 !dbg !9092 {
entry:
  %anum = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !9096, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !9097, metadata !DIExpression()), !dbg !9099
  %0 = bitcast i32* %anum to i8*, !dbg !9100
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !9100
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !9099
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !9099
  br label %while.cond, !dbg !9101

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit, align 8, !dbg !9102
  %tobool = icmp eq %struct.VEC_int_heap* %1, null, !dbg !9102
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9102

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !9102
  br label %cond.end, !dbg !9102

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !9102
  %2 = load i32, i32* %idx, align 8, !dbg !9102
  call void @llvm.dbg.value(metadata i32* %anum, metadata !9098, metadata !DIExpression(DW_OP_deref)), !dbg !9099
  %call = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %cond, i32 %2, i32* nonnull %anum) #8, !dbg !9102
  %tobool2 = icmp eq i32 %call, 0, !dbg !9101
  br i1 %tobool2, label %while.end, label %while.body, !dbg !9101

while.body:                                       ; preds = %cond.end
  %3 = load i32, i32* %idx, align 8, !dbg !9103
  %inc = add i32 %3, 1, !dbg !9103
  store i32 %inc, i32* %idx, align 8, !dbg !9103
  %4 = load i32, i32* %anum, align 4, !dbg !9105
  call void @llvm.dbg.value(metadata i32 %4, metadata !9098, metadata !DIExpression()), !dbg !9099
  %call4 = call fastcc %struct.loop* @get_loop(i32 %4) #8, !dbg !9106
  store %struct.loop* %call4, %struct.loop** %loop, align 8, !dbg !9107
  %tobool5 = icmp eq %struct.loop* %call4, null, !dbg !9108
  br i1 %tobool5, label %while.cond, label %cleanup.loopexit, !dbg !9110, !llvm.loop !9111

while.end:                                        ; preds = %cond.end
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %to_visit) #8, !dbg !9113
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !9114
  br label %cleanup, !dbg !9115

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !9115

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !9115
  ret void, !dbg !9115
}

declare dso_local void @loop_optimizer_finalize() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_loop_p_heap_free(%struct.VEC_loop_p_heap** %vec_) unnamed_addr #0 !dbg !9116 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** @loop_nests, metadata !9121, metadata !DIExpression()), !dbg !9122
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** @loop_nests, align 8, !dbg !9123
  %tobool = icmp eq %struct.VEC_loop_p_heap* %0, null, !dbg !9123
  br i1 %tobool, label %if.end, label %if.then, !dbg !9125

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_loop_p_heap* %0 to i8*, !dbg !9125
  tail call void @free(i8* nonnull %1) #6, !dbg !9123
  br label %if.end, !dbg !9123

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_loop_p_heap* null, %struct.VEC_loop_p_heap** @loop_nests, align 8, !dbg !9125
  ret void, !dbg !9125
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_find_rgns() local_unnamed_addr #5 !dbg !9126 {
entry:
  %loop = alloca %struct.loop*, align 8
  %li = alloca %struct.loop_iterator, align 8
  tail call void @sel_init_pipelining() #8, !dbg !9132
  tail call void @extend_regions() #6, !dbg !9133
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9134
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !9134
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !9134
  %tobool = icmp eq %struct.loops* %1, null, !dbg !9134
  br i1 %tobool, label %if.end, label %if.then, !dbg !9135

if.then:                                          ; preds = %entry
  %2 = bitcast %struct.loop** %loop to i8*, !dbg !9136
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !9136
  %3 = bitcast %struct.loop_iterator* %li to i8*, !dbg !9137
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #7, !dbg !9137
  %4 = load i32, i32* @flag_sel_sched_pipelining_outer_loops, align 4, !dbg !9138
  %tobool1 = icmp eq i32 %4, 0, !dbg !9138
  %cond = select i1 %tobool1, i32 4, i32 2, !dbg !9138
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !9128, metadata !DIExpression(DW_OP_deref)), !dbg !9140
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !9131, metadata !DIExpression(DW_OP_deref)), !dbg !9140
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 %cond) #8, !dbg !9138
  br label %for.cond, !dbg !9138

for.cond:                                         ; preds = %for.body, %if.then
  %5 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !9141
  call void @llvm.dbg.value(metadata %struct.loop* %5, metadata !9128, metadata !DIExpression()), !dbg !9140
  %tobool2 = icmp eq %struct.loop* %5, null, !dbg !9138
  br i1 %tobool2, label %for.end, label %for.body, !dbg !9138

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.loop* %5, metadata !9128, metadata !DIExpression()), !dbg !9140
  %call = call fastcc zeroext i8 @make_regions_from_loop_nest(%struct.loop* nonnull %5) #8, !dbg !9143
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !9128, metadata !DIExpression(DW_OP_deref)), !dbg !9140
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !9131, metadata !DIExpression(DW_OP_deref)), !dbg !9140
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #8, !dbg !9141
  br label %for.cond, !dbg !9141, !llvm.loop !9144

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #7, !dbg !9146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !9146
  br label %if.end, !dbg !9147

if.end:                                           ; preds = %entry, %for.end
  call fastcc void @make_regions_from_the_rest() #8, !dbg !9148
  %6 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @bbs_in_loop_rgns, align 8, !dbg !9149
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %6, i64 0, i32 0, !dbg !9149
  %7 = load i8*, i8** %popcount, align 8, !dbg !9149
  call void @free(i8* %7) #6, !dbg !9149
  %8 = load i8*, i8** bitcast (%struct.simple_bitmap_def** @bbs_in_loop_rgns to i8**), align 8, !dbg !9149
  call void @free(i8* %8) #6, !dbg !9149
  store %struct.simple_bitmap_def* null, %struct.simple_bitmap_def** @bbs_in_loop_rgns, align 8, !dbg !9150
  ret void, !dbg !9151
}

declare dso_local void @extend_regions() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @make_regions_from_loop_nest(%struct.loop* %loop) unnamed_addr #5 !dbg !9152 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !9154, metadata !DIExpression()), !dbg !9157
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !9158
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @bbs_in_loop_rgns, align 8, !dbg !9160
  br label %for.cond, !dbg !9163

for.cond:                                         ; preds = %for.inc, %entry
  %cur_loop.0.in = phi %struct.loop** [ %inner, %entry ], [ %next, %for.inc ]
  %cur_loop.0 = load %struct.loop*, %struct.loop** %cur_loop.0.in, align 8, !dbg !9164
  call void @llvm.dbg.value(metadata %struct.loop* %cur_loop.0, metadata !9155, metadata !DIExpression()), !dbg !9157
  %tobool = icmp eq %struct.loop* %cur_loop.0, null, !dbg !9165
  br i1 %tobool, label %for.end, label %for.body, !dbg !9165

for.body:                                         ; preds = %for.cond
  %header = getelementptr inbounds %struct.loop, %struct.loop* %cur_loop.0, i64 0, i32 2, !dbg !9166
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !9166
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !9166
  %2 = load i32, i32* %index, align 8, !dbg !9166
  %div = lshr i32 %2, 6, !dbg !9166
  %idxprom = zext i32 %div to i64, !dbg !9166
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %0, i64 0, i32 3, i64 %idxprom, !dbg !9166
  %3 = load i64, i64* %arrayidx, align 8, !dbg !9166
  %rem = and i32 %2, 63, !dbg !9166
  %sh_prom = zext i32 %rem to i64, !dbg !9166
  %4 = shl i64 1, %sh_prom, !dbg !9166
  %5 = and i64 %3, %4, !dbg !9166
  %tobool3 = icmp eq i64 %5, 0, !dbg !9166
  br i1 %tobool3, label %cleanup.loopexit, label %for.inc, !dbg !9167

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.loop, %struct.loop* %cur_loop.0, i64 0, i32 9, !dbg !9168
  br label %for.cond, !dbg !9169, !llvm.loop !9170

for.end:                                          ; preds = %for.cond
  %call = tail call fastcc i32 @make_region_from_loop(%struct.loop* %loop) #8, !dbg !9172
  call void @llvm.dbg.value(metadata i32 %call, metadata !9156, metadata !DIExpression()), !dbg !9157
  %cmp = icmp slt i32 %call, 0, !dbg !9173
  br i1 %cmp, label %cleanup, label %if.end5, !dbg !9175

if.end5:                                          ; preds = %for.end
  %call6 = tail call fastcc %struct.loop** @VEC_loop_p_heap_safe_push(%struct.VEC_loop_p_heap** nonnull @loop_nests, %struct.loop* %loop) #8, !dbg !9176
  br label %cleanup, !dbg !9177

cleanup.loopexit:                                 ; preds = %for.body
  br label %cleanup, !dbg !9178

cleanup:                                          ; preds = %cleanup.loopexit, %for.end, %if.end5
  %retval.0 = phi i8 [ 1, %if.end5 ], [ 0, %for.end ], [ 0, %cleanup.loopexit ], !dbg !9157
  ret i8 %retval.0, !dbg !9178
}

; Function Attrs: nounwind uwtable
define internal fastcc void @make_regions_from_the_rest() unnamed_addr #5 !dbg !9179 {
entry:
  %cur_rgn_blocks = alloca i32, align 4
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %0 = bitcast i32* %cur_rgn_blocks to i8*, !dbg !9188
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !9188
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !9189
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !9189
  %2 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !9190
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #7, !dbg !9190
  %3 = load i32, i32* @nr_regions, align 4, !dbg !9191
  %tobool = icmp eq i32 %3, 0, !dbg !9191
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9191

cond.true:                                        ; preds = %entry
  %4 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !9192
  %idxprom = sext i32 %3 to i64, !dbg !9192
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %4, i64 %idxprom, i32 1, !dbg !9192
  %5 = load i32, i32* %rgn_blocks, align 4, !dbg !9192
  br label %cond.end, !dbg !9191

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %entry ], !dbg !9191
  call void @llvm.dbg.value(metadata i32 %cond, metadata !9181, metadata !DIExpression()), !dbg !9193
  store i32 %cond, i32* %cur_rgn_blocks, align 4, !dbg !9194
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9195
  %cfg = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !9195
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9195
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 5, !dbg !9195
  %8 = load i32, i32* %x_last_basic_block, align 8, !dbg !9195
  %conv = sext i32 %8 to i64, !dbg !9195
  %mul = shl nsw i64 %conv, 2, !dbg !9195
  %call = tail call i8* @xmalloc(i64 %mul) #6, !dbg !9195
  %9 = bitcast i8* %call to i32*, !dbg !9195
  call void @llvm.dbg.value(metadata i32* %9, metadata !9182, metadata !DIExpression()), !dbg !9193
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9196
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 1, !dbg !9196
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !9196
  %x_last_basic_block3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 5, !dbg !9196
  %12 = load i32, i32* %x_last_basic_block3, align 8, !dbg !9196
  %conv4 = sext i32 %12 to i64, !dbg !9196
  %call5 = tail call i8* @xcalloc(i64 %conv4, i64 4) #6, !dbg !9196
  call void @llvm.dbg.value(metadata i32* %24, metadata !9187, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.value(metadata i32 0, metadata !9183, metadata !DIExpression()), !dbg !9193
  br label %for.cond, !dbg !9197

for.cond:                                         ; preds = %for.body, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end ], !dbg !9199
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9183, metadata !DIExpression()), !dbg !9193
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9200
  %cfg7 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !9200
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7, align 8, !dbg !9200
  %x_last_basic_block8 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 5, !dbg !9200
  %15 = load i32, i32* %x_last_basic_block8, align 8, !dbg !9200
  %16 = sext i32 %15 to i64, !dbg !9202
  %cmp = icmp slt i64 %indvars.iv, %16, !dbg !9202
  br i1 %cmp, label %for.body, label %for.end, !dbg !9203

for.body:                                         ; preds = %for.cond
  %arrayidx11 = getelementptr inbounds i32, i32* %9, i64 %indvars.iv, !dbg !9204
  store i32 -1, i32* %arrayidx11, align 4, !dbg !9205
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9206
  call void @llvm.dbg.value(metadata i32 undef, metadata !9183, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9193
  br label %for.cond, !dbg !9207, !llvm.loop !9208

for.end:                                          ; preds = %for.cond
  %.lcssa16 = phi %struct.control_flow_graph* [ %14, %for.cond ], !dbg !9200
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.lcssa16, i64 0, i32 0, !dbg !9210
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !9210
  br label %for.cond14, !dbg !9210

for.cond14:                                       ; preds = %for.inc31, %for.end
  %.pre313 = phi %struct.control_flow_graph* [ %.lcssa16, %for.end ], [ %.pre3, %for.inc31 ]
  %18 = phi %struct.control_flow_graph* [ %.lcssa16, %for.end ], [ %.pre3, %for.inc31 ], !dbg !9212
  %.pn = phi %struct.basic_block_def* [ %17, %for.end ], [ %bb.0, %for.inc31 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !9214
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !9214
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !9184, metadata !DIExpression()), !dbg !9193
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 1, !dbg !9212
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !9212
  %cmp17 = icmp eq %struct.basic_block_def* %bb.0, %19, !dbg !9212
  br i1 %cmp17, label %for.end33, label %for.body19, !dbg !9210

for.body19:                                       ; preds = %for.cond14
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 3, !dbg !9215
  %20 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !9215
  %tobool20 = icmp eq %struct.loop* %20, null, !dbg !9218
  br i1 %tobool20, label %for.inc31, label %land.lhs.true, !dbg !9219

land.lhs.true:                                    ; preds = %for.body19
  %num = getelementptr inbounds %struct.loop, %struct.loop* %20, i64 0, i32 0, !dbg !9220
  %21 = load i32, i32* %num, align 8, !dbg !9220
  %tobool22 = icmp eq i32 %21, 0, !dbg !9221
  br i1 %tobool22, label %for.inc31, label %land.lhs.true25, !dbg !9222

land.lhs.true25:                                  ; preds = %land.lhs.true
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 13, !dbg !9223
  %22 = load i32, i32* %flags, align 8, !dbg !9223
  %and = and i32 %22, 4, !dbg !9224
  %tobool26 = icmp eq i32 %and, 0, !dbg !9224
  br i1 %tobool26, label %if.then, label %for.inc31, !dbg !9225

if.then:                                          ; preds = %land.lhs.true25
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !9226
  %23 = load i32, i32* %index, align 8, !dbg !9226
  %idxprom29 = sext i32 %23 to i64, !dbg !9227
  %arrayidx30 = getelementptr inbounds i32, i32* %9, i64 %idxprom29, !dbg !9227
  store i32 %21, i32* %arrayidx30, align 4, !dbg !9228
  %.pre.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9212
  %cfg16.phi.trans.insert.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre.pre, i64 0, i32 1, !dbg !9229
  %.pre3.pre = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg16.phi.trans.insert.phi.trans.insert, align 8, !dbg !9212
  br label %for.inc31, !dbg !9227

for.inc31:                                        ; preds = %land.lhs.true25, %land.lhs.true, %for.body19, %if.then
  %.pre3 = phi %struct.control_flow_graph* [ %.pre313, %land.lhs.true25 ], [ %.pre313, %land.lhs.true ], [ %.pre313, %for.body19 ], [ %.pre3.pre, %if.then ], !dbg !9212
  br label %for.cond14, !dbg !9212, !llvm.loop !9230

for.end33:                                        ; preds = %for.cond14
  %.lcssa = phi %struct.control_flow_graph* [ %18, %for.cond14 ], !dbg !9212
  %bb.0.lcssa = phi %struct.basic_block_def* [ %bb.0, %for.cond14 ], !dbg !9214
  %24 = bitcast i8* %call5 to i32*, !dbg !9196
  %x_entry_block_ptr36 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.lcssa, i64 0, i32 0, !dbg !9232
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr36, align 8, !dbg !9232
  %26 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !9234
  %27 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !9234
  %28 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !9234
  %29 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !9240
  %30 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !9240
  br label %for.cond38, !dbg !9232

for.cond38:                                       ; preds = %for.inc84, %for.end33
  %31 = phi %struct.basic_block_def* [ %bb.0.lcssa, %for.end33 ], [ %.pre8, %for.inc84 ], !dbg !9242
  %.pn1 = phi %struct.basic_block_def* [ %25, %for.end33 ], [ %bb.1, %for.inc84 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn1, i64 0, i32 6, !dbg !9243
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !9243
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !9184, metadata !DIExpression()), !dbg !9193
  %cmp42 = icmp eq %struct.basic_block_def* %bb.1, %31, !dbg !9242
  br i1 %cmp42, label %for.end86, label %for.body44, !dbg !9232

for.body44:                                       ; preds = %for.cond38
  %index45 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !9244
  %32 = load i32, i32* %index45, align 8, !dbg !9244
  %idxprom46 = sext i32 %32 to i64, !dbg !9245
  %arrayidx47 = getelementptr inbounds i32, i32* %24, i64 %idxprom46, !dbg !9245
  store i32 0, i32* %arrayidx47, align 4, !dbg !9246
  %33 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @bbs_in_loop_rgns, align 8, !dbg !9247
  %34 = load i32, i32* %index45, align 8, !dbg !9247
  %div = lshr i32 %34, 6, !dbg !9247
  %idxprom49 = zext i32 %div to i64, !dbg !9247
  %arrayidx50 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %33, i64 0, i32 3, i64 %idxprom49, !dbg !9247
  %35 = load i64, i64* %arrayidx50, align 8, !dbg !9247
  %rem = and i32 %34, 63, !dbg !9247
  %sh_prom = zext i32 %rem to i64, !dbg !9247
  %36 = shl i64 1, %sh_prom, !dbg !9247
  %37 = and i64 %35, %36, !dbg !9247
  %tobool53 = icmp eq i64 %37, 0, !dbg !9247
  br i1 %tobool53, label %if.then54, label %if.else, !dbg !9248

if.then54:                                        ; preds = %for.body44
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #7, !dbg !9249
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 0, !dbg !9249
  %call55 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !9249
  %38 = extractvalue { i32, %struct.VEC_edge_gc** } %call55, 0, !dbg !9249
  store i32 %38, i32* %27, align 8, !dbg !9249
  %39 = extractvalue { i32, %struct.VEC_edge_gc** } %call55, 1, !dbg !9249
  store %struct.VEC_edge_gc** %39, %struct.VEC_edge_gc*** %28, align 8, !dbg !9249
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %26, i64 16, i1 false), !dbg !9249
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7, !dbg !9249
  br label %for.cond56, !dbg !9249

for.cond56:                                       ; preds = %for.inc78, %if.then54
  %40 = load i32, i32* %29, align 8, !dbg !9250
  %41 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %30, align 8, !dbg !9250
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !9185, metadata !DIExpression(DW_OP_deref)), !dbg !9193
  %call57 = call fastcc zeroext i8 @ei_cond(i32 %40, %struct.VEC_edge_gc** %41, %struct.edge_def** nonnull %e) #8, !dbg !9250
  %tobool58 = icmp eq i8 %call57, 0, !dbg !9249
  br i1 %tobool58, label %for.inc84.loopexit, label %for.body59, !dbg !9249

for.body59:                                       ; preds = %for.cond56
  %42 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @bbs_in_loop_rgns, align 8, !dbg !9251
  %43 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9251
  call void @llvm.dbg.value(metadata %struct.edge_def* %43, metadata !9185, metadata !DIExpression()), !dbg !9193
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %43, i64 0, i32 0, !dbg !9251
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !9251
  %index61 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %44, i64 0, i32 9, !dbg !9251
  %45 = load i32, i32* %index61, align 8, !dbg !9251
  %div62 = lshr i32 %45, 6, !dbg !9251
  %idxprom63 = zext i32 %div62 to i64, !dbg !9251
  %arrayidx64 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %42, i64 0, i32 3, i64 %idxprom63, !dbg !9251
  %46 = load i64, i64* %arrayidx64, align 8, !dbg !9251
  call void @llvm.dbg.value(metadata %struct.edge_def* %43, metadata !9185, metadata !DIExpression()), !dbg !9193
  %rem67 = and i32 %45, 63, !dbg !9251
  %sh_prom68 = zext i32 %rem67 to i64, !dbg !9251
  %47 = shl i64 1, %sh_prom68, !dbg !9251
  %48 = and i64 %46, %47, !dbg !9251
  %tobool71 = icmp eq i64 %48, 0, !dbg !9251
  br i1 %tobool71, label %if.then72, label %for.inc78, !dbg !9253

if.then72:                                        ; preds = %for.body59
  %49 = load i32, i32* %index45, align 8, !dbg !9254
  %idxprom74 = sext i32 %49 to i64, !dbg !9255
  %arrayidx75 = getelementptr inbounds i32, i32* %24, i64 %idxprom74, !dbg !9255
  %50 = load i32, i32* %arrayidx75, align 4, !dbg !9256
  %inc76 = add nsw i32 %50, 1, !dbg !9256
  store i32 %inc76, i32* %arrayidx75, align 4, !dbg !9256
  br label %for.inc78, !dbg !9255

for.inc78:                                        ; preds = %for.body59, %if.then72
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !9186, metadata !DIExpression(DW_OP_deref)), !dbg !9193
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !9250
  br label %for.cond56, !dbg !9250, !llvm.loop !9257

if.else:                                          ; preds = %for.body44
  %idxprom81 = sext i32 %34 to i64, !dbg !9259
  %arrayidx82 = getelementptr inbounds i32, i32* %24, i64 %idxprom81, !dbg !9259
  store i32 -1, i32* %arrayidx82, align 4, !dbg !9260
  br label %for.inc84

for.inc84.loopexit:                               ; preds = %for.cond56
  br label %for.inc84, !dbg !9242

for.inc84:                                        ; preds = %for.inc84.loopexit, %if.else
  %.pre6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9242
  %cfg40.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre6, i64 0, i32 1, !dbg !9261
  %.pre7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg40.phi.trans.insert, align 8, !dbg !9242
  %x_exit_block_ptr41.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre7, i64 0, i32 1, !dbg !9261
  %.pre8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr41.phi.trans.insert, align 8, !dbg !9242
  br label %for.cond38, !dbg !9242, !llvm.loop !9262

for.end86:                                        ; preds = %for.cond38
  %51 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @bbs_in_loop_rgns, align 8, !dbg !9264
  call void @llvm.dbg.value(metadata i32* %cur_rgn_blocks, metadata !9181, metadata !DIExpression(DW_OP_deref)), !dbg !9193
  call void @extend_rgns(i32* %24, i32* nonnull %cur_rgn_blocks, %struct.simple_bitmap_def* %51, i32* %9) #6, !dbg !9265
  %52 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9266
  %cfg88 = getelementptr inbounds %struct.function, %struct.function* %52, i64 0, i32 1, !dbg !9266
  %53 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg88, align 8, !dbg !9266
  %x_entry_block_ptr89 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %53, i64 0, i32 0, !dbg !9266
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr89, align 8, !dbg !9266
  br label %for.cond91, !dbg !9266

for.cond91:                                       ; preds = %for.inc127, %for.end86
  %.pre911 = phi %struct.function* [ %52, %for.end86 ], [ %.pre9, %for.inc127 ]
  %55 = phi %struct.control_flow_graph* [ %53, %for.end86 ], [ %.pre10, %for.inc127 ], !dbg !9268
  %.pn2 = phi %struct.basic_block_def* [ %54, %for.end86 ], [ %bb.2, %for.inc127 ]
  %bb.2.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn2, i64 0, i32 6, !dbg !9270
  %bb.2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.2.in, align 8, !dbg !9270
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.2, metadata !9184, metadata !DIExpression()), !dbg !9193
  %x_exit_block_ptr94 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %55, i64 0, i32 1, !dbg !9268
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr94, align 8, !dbg !9268
  %cmp95 = icmp eq %struct.basic_block_def* %bb.2, %56, !dbg !9268
  br i1 %cmp95, label %for.end129, label %for.body97, !dbg !9266

for.body97:                                       ; preds = %for.cond91
  %index98 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.2, i64 0, i32 9, !dbg !9271
  %57 = load i32, i32* %index98, align 8, !dbg !9271
  %idxprom99 = sext i32 %57 to i64, !dbg !9273
  %arrayidx100 = getelementptr inbounds i32, i32* %24, i64 %idxprom99, !dbg !9273
  %58 = load i32, i32* %arrayidx100, align 4, !dbg !9273
  %cmp101 = icmp sgt i32 %58, -1, !dbg !9274
  br i1 %cmp101, label %if.then103, label %for.inc127, !dbg !9275

if.then103:                                       ; preds = %for.body97
  %59 = load i32*, i32** @rgn_bb_table, align 8, !dbg !9276
  %60 = load i32, i32* %cur_rgn_blocks, align 4, !dbg !9278
  call void @llvm.dbg.value(metadata i32 %60, metadata !9181, metadata !DIExpression()), !dbg !9193
  %idxprom105 = sext i32 %60 to i64, !dbg !9276
  %arrayidx106 = getelementptr inbounds i32, i32* %59, i64 %idxprom105, !dbg !9276
  store i32 %57, i32* %arrayidx106, align 4, !dbg !9279
  %61 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !9280
  %62 = load i32, i32* @nr_regions, align 4, !dbg !9280
  %idxprom107 = sext i32 %62 to i64, !dbg !9280
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %61, i64 %idxprom107, i32 0, !dbg !9280
  store i32 1, i32* %rgn_nr_blocks, align 4, !dbg !9281
  %63 = load i32, i32* %cur_rgn_blocks, align 4, !dbg !9282
  call void @llvm.dbg.value(metadata i32 %63, metadata !9181, metadata !DIExpression()), !dbg !9193
  %inc109 = add nsw i32 %63, 1, !dbg !9282
  call void @llvm.dbg.value(metadata i32 %inc109, metadata !9181, metadata !DIExpression()), !dbg !9193
  store i32 %inc109, i32* %cur_rgn_blocks, align 4, !dbg !9282
  %64 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !9283
  %65 = load i32, i32* @nr_regions, align 4, !dbg !9283
  %idxprom110 = sext i32 %65 to i64, !dbg !9283
  %rgn_blocks112 = getelementptr inbounds %struct.region, %struct.region* %64, i64 %idxprom110, i32 1, !dbg !9283
  store i32 %63, i32* %rgn_blocks112, align 4, !dbg !9284
  %66 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !9285
  %67 = load i32, i32* @nr_regions, align 4, !dbg !9285
  %idxprom113 = sext i32 %67 to i64, !dbg !9285
  %dont_calc_deps = getelementptr inbounds %struct.region, %struct.region* %66, i64 %idxprom113, i32 2, !dbg !9285
  %bf.load = load i8, i8* %dont_calc_deps, align 4, !dbg !9286
  %bf.clear = and i8 %bf.load, -2, !dbg !9286
  store i8 %bf.clear, i8* %dont_calc_deps, align 4, !dbg !9286
  %68 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !9287
  %69 = load i32, i32* @nr_regions, align 4, !dbg !9287
  %idxprom115 = sext i32 %69 to i64, !dbg !9287
  %has_real_ebb = getelementptr inbounds %struct.region, %struct.region* %68, i64 %idxprom115, i32 2, !dbg !9287
  %bf.load117 = load i8, i8* %has_real_ebb, align 4, !dbg !9288
  %bf.clear118 = and i8 %bf.load117, -3, !dbg !9288
  store i8 %bf.clear118, i8* %has_real_ebb, align 4, !dbg !9288
  %70 = load i32, i32* @nr_regions, align 4, !dbg !9289
  %inc119 = add nsw i32 %70, 1, !dbg !9289
  store i32 %inc119, i32* @nr_regions, align 4, !dbg !9289
  %71 = load i32*, i32** @containing_rgn, align 8, !dbg !9290
  %72 = load i32, i32* %index98, align 8, !dbg !9290
  %idxprom121 = sext i32 %72 to i64, !dbg !9290
  %arrayidx122 = getelementptr inbounds i32, i32* %71, i64 %idxprom121, !dbg !9290
  store i32 %70, i32* %arrayidx122, align 4, !dbg !9291
  %73 = load i32*, i32** @block_to_bb, align 8, !dbg !9292
  %74 = load i32, i32* %index98, align 8, !dbg !9292
  %idxprom124 = sext i32 %74 to i64, !dbg !9292
  %arrayidx125 = getelementptr inbounds i32, i32* %73, i64 %idxprom124, !dbg !9292
  store i32 0, i32* %arrayidx125, align 4, !dbg !9293
  %.pre9.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9268
  br label %for.inc127, !dbg !9294

for.inc127:                                       ; preds = %for.body97, %if.then103
  %.pre9 = phi %struct.function* [ %.pre911, %for.body97 ], [ %.pre9.pre, %if.then103 ], !dbg !9268
  %cfg93.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre9, i64 0, i32 1, !dbg !9295
  %.pre10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg93.phi.trans.insert, align 8, !dbg !9268
  br label %for.cond91, !dbg !9268, !llvm.loop !9296

for.end129:                                       ; preds = %for.cond91
  call void @free(i8* %call5) #6, !dbg !9298
  call void @free(i8* %call) #6, !dbg !9299
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #7, !dbg !9300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !9300
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !9300
  ret void, !dbg !9300
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_add_loop_preheaders() local_unnamed_addr #5 !dbg !9301 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  %preheader_blocks = alloca %struct.VEC_basic_block_heap*, align 8
  %0 = bitcast %struct.basic_block_def** %bb to i8*, !dbg !9306
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !9306
  %1 = bitcast %struct.VEC_basic_block_heap** %preheader_blocks to i8*, !dbg !9307
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !9307
  %2 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !9308
  %aux = getelementptr inbounds %struct.loop, %struct.loop* %2, i64 0, i32 10, !dbg !9308
  %3 = bitcast i8** %aux to i64*, !dbg !9308
  %4 = load i64, i64* %3, align 8, !dbg !9308
  %cmp = icmp eq i64 %4, 1, !dbg !9308
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !9308

cond.false:                                       ; preds = %entry
  %5 = inttoptr i64 %4 to %struct.VEC_basic_block_heap*, !dbg !9308
  br label %cond.end, !dbg !9308

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %struct.VEC_basic_block_heap* [ %5, %cond.false ], [ null, %entry ], !dbg !9308
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %cond, metadata !9305, metadata !DIExpression()), !dbg !9309
  store %struct.VEC_basic_block_heap* %cond, %struct.VEC_basic_block_heap** %preheader_blocks, align 8, !dbg !9310
  call void @llvm.dbg.value(metadata i32 0, metadata !9303, metadata !DIExpression()), !dbg !9309
  br label %for.cond, !dbg !9311

for.cond:                                         ; preds = %for.body, %cond.end
  %6 = phi %struct.VEC_basic_block_heap* [ %cond, %cond.end ], [ %.pre, %for.body ], !dbg !9313
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.body ], !dbg !9315
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9303, metadata !DIExpression()), !dbg !9309
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %6, metadata !9305, metadata !DIExpression()), !dbg !9309
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %6, metadata !9305, metadata !DIExpression()), !dbg !9309
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %6, i64 0, i32 0, !dbg !9313
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb, metadata !9304, metadata !DIExpression(DW_OP_deref)), !dbg !9309
  %call = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base, i32 %i.0, %struct.basic_block_def** nonnull %bb) #8, !dbg !9313
  %tobool6 = icmp eq i32 %call, 0, !dbg !9316
  br i1 %tobool6, label %for.end, label %for.body, !dbg !9316

for.body:                                         ; preds = %for.cond
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !9317
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %7, metadata !9304, metadata !DIExpression()), !dbg !9309
  %call7 = call fastcc %struct.basic_block_def** @VEC_basic_block_heap_safe_push(%struct.VEC_basic_block_heap** nonnull @last_added_blocks, %struct.basic_block_def* %7) #8, !dbg !9317
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !9319
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %8, metadata !9304, metadata !DIExpression()), !dbg !9309
  call fastcc void @sel_add_bb(%struct.basic_block_def* %8) #8, !dbg !9320
  %inc = add nuw nsw i32 %i.0, 1, !dbg !9321
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9303, metadata !DIExpression()), !dbg !9309
  %.pre = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %preheader_blocks, align 8, !dbg !9313
  br label %for.cond, !dbg !9322, !llvm.loop !9323

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %preheader_blocks, metadata !9305, metadata !DIExpression(DW_OP_deref)), !dbg !9309
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %preheader_blocks) #8, !dbg !9325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !9326
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !9326
  ret void, !dbg !9326
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def** @VEC_basic_block_heap_safe_push(%struct.VEC_basic_block_heap** %vec_, %struct.basic_block_def* %obj_) unnamed_addr #0 !dbg !9327 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !9331, metadata !DIExpression()), !dbg !9333
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %obj_, metadata !9332, metadata !DIExpression()), !dbg !9333
  %call = tail call fastcc i32 @VEC_basic_block_heap_reserve(%struct.VEC_basic_block_heap** %vec_, i32 1) #8, !dbg !9334
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !9334
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !9334
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9334

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %0, i64 0, i32 0, !dbg !9334
  br label %cond.end, !dbg !9334

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9334
  %call1 = tail call fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %cond, %struct.basic_block_def* %obj_) #8, !dbg !9334
  ret %struct.basic_block_def** %call1, !dbg !9334
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !9335 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !9339, metadata !DIExpression()), !dbg !9341
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !9342
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !9342
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !9342
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9342

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !9342
  br label %cond.end, !dbg !9342

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9342
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !9342
  call void @llvm.dbg.value(metadata i32 %call, metadata !9340, metadata !DIExpression()), !dbg !9341
  %cmp = icmp eq i32 %call, 0, !dbg !9343
  br i1 %cmp, label %cleanup, label %if.end, !dbg !9345

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !9346
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !9346
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !9346

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !9346
  br label %cond.end8, !dbg !9346

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !9346
  %sub = add i32 %call, -1, !dbg !9346
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #8, !dbg !9346
  br label %cleanup, !dbg !9347

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !9341
  ret %struct.loop* %retval.0, !dbg !9348
}

declare dso_local i32 @onlyjump_p(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._list_node* @_list_alloc() unnamed_addr #0 !dbg !9349 {
entry:
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @sched_lists_pool, align 8, !dbg !9352
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %0) #6, !dbg !9353
  %1 = bitcast i8* %call to %struct._list_node*, !dbg !9354
  ret %struct._list_node* %1, !dbg !9355
}

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fence_clear(%struct._fence* %f) unnamed_addr #5 !dbg !9356 {
entry:
  call void @llvm.dbg.value(metadata %struct._fence* %f, metadata !9358, metadata !DIExpression()), !dbg !9362
  %state = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 1, !dbg !9363
  %0 = load i8*, i8** %state, align 8, !dbg !9363
  call void @llvm.dbg.value(metadata i8* %0, metadata !9359, metadata !DIExpression()), !dbg !9362
  %dc1 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 5, !dbg !9364
  %1 = load %struct.deps*, %struct.deps** %dc1, align 8, !dbg !9364
  call void @llvm.dbg.value(metadata %struct.deps* %1, metadata !9360, metadata !DIExpression()), !dbg !9362
  %tc2 = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 6, !dbg !9365
  %2 = load i8*, i8** %tc2, align 8, !dbg !9365
  call void @llvm.dbg.value(metadata i8* %2, metadata !9361, metadata !DIExpression()), !dbg !9362
  %bnds = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 4, !dbg !9366
  tail call fastcc void @_list_clear(%struct._list_node** nonnull %bnds) #8, !dbg !9366
  %cmp = icmp ne i8* %0, null, !dbg !9367
  %cmp3 = icmp ne %struct.deps* %1, null, !dbg !9367
  %or.cond = and i1 %cmp, %cmp3, !dbg !9367
  %cmp5 = icmp ne i8* %2, null, !dbg !9367
  %or.cond1 = and i1 %or.cond, %cmp5, !dbg !9367
  br i1 %or.cond1, label %cond.end, label %lor.lhs.false, !dbg !9367

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i8* %0, null, !dbg !9367
  %cmp8 = icmp eq %struct.deps* %1, null, !dbg !9367
  %or.cond2 = and i1 %cmp6, %cmp8, !dbg !9367
  %cmp10 = icmp eq i8* %2, null, !dbg !9367
  %or.cond3 = and i1 %or.cond2, %cmp10, !dbg !9367
  br i1 %or.cond3, label %cond.end, label %cond.true, !dbg !9367

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 579, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9367
  br label %cond.end, !dbg !9367

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %cmp11 = icmp eq i8* %0, null, !dbg !9368
  br i1 %cmp11, label %if.end, label %if.then, !dbg !9370

if.then:                                          ; preds = %cond.end
  tail call void @free(i8* nonnull %0) #6, !dbg !9371
  br label %if.end, !dbg !9371

if.end:                                           ; preds = %cond.end, %if.then
  %cmp12 = icmp eq %struct.deps* %1, null, !dbg !9372
  br i1 %cmp12, label %if.end14, label %if.then13, !dbg !9374

if.then13:                                        ; preds = %if.end
  tail call fastcc void @delete_deps_context(%struct.deps* nonnull %1) #8, !dbg !9375
  br label %if.end14, !dbg !9375

if.end14:                                         ; preds = %if.end, %if.then13
  %cmp15 = icmp eq i8* %2, null, !dbg !9376
  br i1 %cmp15, label %if.end17, label %if.then16, !dbg !9378

if.then16:                                        ; preds = %if.end14
  tail call fastcc void @delete_target_context(i8* nonnull %2) #8, !dbg !9379
  br label %if.end17, !dbg !9379

if.end17:                                         ; preds = %if.end14, %if.then16
  %executing_insns = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 7, !dbg !9380
  tail call fastcc void @VEC_rtx_gc_free(%struct.VEC_rtx_gc** nonnull %executing_insns) #8, !dbg !9380
  %ready_ticks = getelementptr inbounds %struct._fence, %struct._fence* %f, i64 0, i32 8, !dbg !9381
  %3 = bitcast i32** %ready_ticks to i8**, !dbg !9381
  %4 = load i8*, i8** %3, align 8, !dbg !9381
  tail call void @free(i8* %4) #6, !dbg !9382
  store i32* null, i32** %ready_ticks, align 8, !dbg !9383
  ret void, !dbg !9384
}

; Function Attrs: nounwind uwtable
define internal fastcc void @delete_deps_context(%struct.deps* %dc) unnamed_addr #5 !dbg !9385 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %dc, metadata !9389, metadata !DIExpression()), !dbg !9390
  tail call fastcc void @clear_deps_context(%struct.deps* %dc) #8, !dbg !9391
  %0 = bitcast %struct.deps* %dc to i8*, !dbg !9392
  tail call void @free(i8* %0) #6, !dbg !9393
  ret void, !dbg !9394
}

; Function Attrs: nounwind uwtable
define internal fastcc void @delete_target_context(i8* %tc) unnamed_addr #5 !dbg !9395 {
entry:
  call void @llvm.dbg.value(metadata i8* %tc, metadata !9397, metadata !DIExpression()), !dbg !9398
  tail call fastcc void @clear_target_context(i8* %tc) #8, !dbg !9399
  %0 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 27), align 8, !dbg !9400
  %tobool = icmp eq void (i8*)* %0, null, !dbg !9402
  br i1 %tobool, label %if.end, label %if.then, !dbg !9403

if.then:                                          ; preds = %entry
  tail call void %0(i8* %tc) #6, !dbg !9404
  br label %if.end, !dbg !9404

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !9405
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_rtx_gc_free(%struct.VEC_rtx_gc** %vec_) unnamed_addr #0 !dbg !9406 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** %vec_, metadata !9411, metadata !DIExpression()), !dbg !9412
  %0 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %vec_, align 8, !dbg !9413
  %tobool = icmp eq %struct.VEC_rtx_gc* %0, null, !dbg !9413
  br i1 %tobool, label %if.end, label %if.then, !dbg !9415

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_rtx_gc* %0 to i8*, !dbg !9415
  tail call void @ggc_free(i8* nonnull %1) #6, !dbg !9413
  br label %if.end, !dbg !9413

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_rtx_gc* null, %struct.VEC_rtx_gc** %vec_, align 8, !dbg !9415
  ret void, !dbg !9415
}

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_deps_context(%struct.deps* %dc) unnamed_addr #5 !dbg !9416 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %dc, metadata !9418, metadata !DIExpression()), !dbg !9419
  tail call void @free_deps(%struct.deps* %dc) #6, !dbg !9420
  ret void, !dbg !9421
}

declare dso_local void @ggc_free(i8*) local_unnamed_addr #2

declare dso_local void @haifa_note_reg_set(i32) #2

declare dso_local void @haifa_note_reg_clobber(i32) #2

declare dso_local void @haifa_note_reg_use(i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %vec_, i32 %ix_, %struct.edge_def** %ptr) unnamed_addr #0 !dbg !9422 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !9426, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9427, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.value(metadata %struct.edge_def** %ptr, metadata !9428, metadata !DIExpression()), !dbg !9429
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !9430
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !9430

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !9430
  %0 = load i32, i32* %num, align 8, !dbg !9430
  %cmp = icmp ugt i32 %0, %ix_, !dbg !9430
  br i1 %cmp, label %if.then, label %if.else, !dbg !9432

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !9433
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9433
  %1 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !9433
  br label %return, !dbg !9433

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !9435

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ null, %if.else ], [ %1, %if.then ], !dbg !9437
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !9437
  store %struct.edge_def* %storemerge, %struct.edge_def** %ptr, align 8, !dbg !9437
  ret i32 %retval.0, !dbg !9432
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** %vec_) unnamed_addr #0 !dbg !9438 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %vec_, metadata !9442, metadata !DIExpression()), !dbg !9443
  %0 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %vec_, align 8, !dbg !9444
  %tobool = icmp eq %struct.VEC_edge_heap* %0, null, !dbg !9444
  br i1 %tobool, label %if.end, label %if.then, !dbg !9446

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_edge_heap* %0 to i8*, !dbg !9446
  tail call void @free(i8* nonnull %1) #6, !dbg !9444
  br label %if.end, !dbg !9444

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %vec_, align 8, !dbg !9446
  ret void, !dbg !9446
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_heap* @get_all_loop_exits(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !9447 {
entry:
  %exits = alloca %struct.VEC_edge_heap*, align 8
  %e = alloca %struct.edge_def*, align 8
  %ne = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !9451, metadata !DIExpression()), !dbg !9468
  %0 = bitcast %struct.VEC_edge_heap** %exits to i8*, !dbg !9469
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !9469
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* null, metadata !9452, metadata !DIExpression()), !dbg !9468
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %exits, align 8, !dbg !9470
  br label %while.cond, !dbg !9471

while.cond:                                       ; preds = %cond.end, %entry
  %bb.addr.0 = phi %struct.basic_block_def* [ %bb, %entry ], [ %call4, %cond.end ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0, metadata !9451, metadata !DIExpression()), !dbg !9468
  %call = tail call fastcc zeroext i8 @sel_bb_empty_or_nop_p(%struct.basic_block_def* %bb.addr.0) #8, !dbg !9472
  %tobool = icmp eq i8 %call, 0, !dbg !9472
  br i1 %tobool, label %while.end, label %land.rhs, !dbg !9473

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %bb.addr.0) #8, !dbg !9474
  %tobool3 = icmp eq i8 %call1, 0, !dbg !9473
  br i1 %tobool3, label %while.end, label %while.body, !dbg !9471

while.body:                                       ; preds = %land.rhs
  %call4 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb.addr.0) #8, !dbg !9475
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call4, metadata !9451, metadata !DIExpression()), !dbg !9468
  %call5 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %call4) #8, !dbg !9477
  %tobool6 = icmp eq i8 %call5, 0, !dbg !9477
  br i1 %tobool6, label %cond.end, label %cond.true, !dbg !9477

cond.true:                                        ; preds = %while.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 1127, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9477
  br label %cond.end, !dbg !9477

cond.end:                                         ; preds = %while.body, %cond.true
  br label %while.cond, !dbg !9471, !llvm.loop !9478

while.end:                                        ; preds = %land.rhs, %while.cond
  %bb.addr.0.lcssa = phi %struct.basic_block_def* [ %bb.addr.0, %land.rhs ], [ %bb.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !9451, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !9451, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !9451, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !9451, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !9451, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !9451, metadata !DIExpression()), !dbg !9468
  %call7 = tail call fastcc zeroext i8 @inner_loop_header_p(%struct.basic_block_def* %bb.addr.0.lcssa) #8, !dbg !9480
  %tobool8 = icmp eq i8 %call7, 0, !dbg !9480
  br i1 %tobool8, label %if.end66, label %if.then, !dbg !9481

if.then:                                          ; preds = %while.end
  call void @llvm.dbg.value(metadata %struct.loop* null, metadata !9456, metadata !DIExpression()), !dbg !9482
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !9483
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !9483
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.addr.0.lcssa, i64 0, i32 3, !dbg !9484
  %2 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !9484
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !9453, metadata !DIExpression()), !dbg !9482
  br label %for.cond, !dbg !9486

for.cond:                                         ; preds = %for.inc, %if.then
  %pred_loop.0 = phi %struct.loop* [ null, %if.then ], [ %this_loop.0, %for.inc ], !dbg !9482
  %this_loop.0 = phi %struct.loop* [ %2, %if.then ], [ %call13, %for.inc ], !dbg !9487
  call void @llvm.dbg.value(metadata %struct.loop* %this_loop.0, metadata !9453, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata %struct.loop* %pred_loop.0, metadata !9456, metadata !DIExpression()), !dbg !9482
  %tobool9 = icmp ne %struct.loop* %this_loop.0, null, !dbg !9488
  %3 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !9490
  %cmp = icmp ne %struct.loop* %this_loop.0, %3, !dbg !9490
  %4 = and i1 %cmp, %tobool9, !dbg !9490
  br i1 %4, label %for.inc, label %for.end, !dbg !9491

for.inc:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.loop* %this_loop.0, metadata !9456, metadata !DIExpression()), !dbg !9482
  %call13 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* nonnull %this_loop.0) #8, !dbg !9492
  call void @llvm.dbg.value(metadata %struct.loop* %call13, metadata !9453, metadata !DIExpression()), !dbg !9482
  br label %for.cond, !dbg !9493, !llvm.loop !9494

for.end:                                          ; preds = %for.cond
  %pred_loop.0.lcssa = phi %struct.loop* [ %pred_loop.0, %for.cond ], !dbg !9482
  call void @llvm.dbg.value(metadata %struct.loop* %pred_loop.0.lcssa, metadata !9456, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata %struct.loop* %pred_loop.0.lcssa, metadata !9456, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata %struct.loop* %pred_loop.0.lcssa, metadata !9456, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata %struct.loop* %pred_loop.0.lcssa, metadata !9453, metadata !DIExpression()), !dbg !9482
  %cmp14 = icmp eq %struct.loop* %pred_loop.0.lcssa, null, !dbg !9496
  br i1 %cmp14, label %cond.true16, label %cond.end18, !dbg !9496

cond.true16:                                      ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 1144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9496
  br label %cond.end18, !dbg !9496

cond.end18:                                       ; preds = %for.end, %cond.true16
  %call20 = tail call fastcc %struct.VEC_edge_heap* @get_loop_exit_edges_unique_dests(%struct.loop* %pred_loop.0.lcssa) #8, !dbg !9497
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call20, metadata !9452, metadata !DIExpression()), !dbg !9468
  store %struct.VEC_edge_heap* %call20, %struct.VEC_edge_heap** %exits, align 8, !dbg !9498
  call void @llvm.dbg.value(metadata i32 0, metadata !9457, metadata !DIExpression()), !dbg !9482
  %5 = bitcast %struct.edge_def** %ne to i8*, !dbg !9499
  br label %for.cond21, !dbg !9500

for.cond21:                                       ; preds = %for.inc63, %cond.end18
  %6 = phi %struct.VEC_edge_heap* [ %call20, %cond.end18 ], [ %.pre, %for.inc63 ], !dbg !9501
  %i.0 = phi i32 [ 0, %cond.end18 ], [ %inc64, %for.inc63 ], !dbg !9502
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9457, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %6, metadata !9452, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %6, metadata !9452, metadata !DIExpression()), !dbg !9468
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %6, i64 0, i32 0, !dbg !9501
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !9458, metadata !DIExpression(DW_OP_deref)), !dbg !9482
  %call27 = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base, i32 %i.0, %struct.edge_def** nonnull %e) #8, !dbg !9501
  %tobool28 = icmp eq i32 %call27, 0, !dbg !9503
  br i1 %tobool28, label %for.end65, label %for.body29, !dbg !9503

for.body29:                                       ; preds = %for.cond21
  %7 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9504
  call void @llvm.dbg.value(metadata %struct.edge_def* %7, metadata !9458, metadata !DIExpression()), !dbg !9482
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %7, i64 0, i32 1, !dbg !9505
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !9505
  %call30 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %8) #8, !dbg !9506
  %tobool32 = icmp eq i8 %call30, 0, !dbg !9506
  br i1 %tobool32, label %lor.lhs.false, label %if.then37, !dbg !9507

lor.lhs.false:                                    ; preds = %for.body29
  %9 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9508
  call void @llvm.dbg.value(metadata %struct.edge_def* %9, metadata !9458, metadata !DIExpression()), !dbg !9482
  %dest33 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %9, i64 0, i32 1, !dbg !9509
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %dest33, align 8, !dbg !9509
  %call34 = call fastcc zeroext i8 @inner_loop_header_p(%struct.basic_block_def* %10) #8, !dbg !9510
  %tobool36 = icmp eq i8 %call34, 0, !dbg !9510
  br i1 %tobool36, label %for.inc63, label %if.then37, !dbg !9511

if.then37:                                        ; preds = %lor.lhs.false, %for.body29
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9512
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !9458, metadata !DIExpression()), !dbg !9482
  %dest38 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 1, !dbg !9513
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest38, align 8, !dbg !9513
  %call39 = call fastcc %struct.VEC_edge_heap* @get_all_loop_exits(%struct.basic_block_def* %12) #8, !dbg !9514
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call39, metadata !9459, metadata !DIExpression()), !dbg !9515
  %tobool40 = icmp eq %struct.VEC_edge_heap* %call39, null, !dbg !9516
  br i1 %tobool40, label %for.inc63, label %if.then41, !dbg !9517

if.then41:                                        ; preds = %if.then37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !9518
  call void @llvm.dbg.value(metadata i32 0, metadata !9464, metadata !DIExpression()), !dbg !9499
  %base45 = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %call39, i64 0, i32 0, !dbg !9519
  br label %for.cond42, !dbg !9522

for.cond42:                                       ; preds = %for.body51, %if.then41
  %j.0 = phi i32 [ 0, %if.then41 ], [ %inc, %for.body51 ], !dbg !9523
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !9464, metadata !DIExpression()), !dbg !9499
  call void @llvm.dbg.value(metadata %struct.edge_def** %ne, metadata !9467, metadata !DIExpression(DW_OP_deref)), !dbg !9499
  %call49 = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* nonnull %base45, i32 %j.0, %struct.edge_def** nonnull %ne) #8, !dbg !9524
  %tobool50 = icmp eq i32 %call49, 0, !dbg !9525
  br i1 %tobool50, label %for.end54, label %for.body51, !dbg !9525

for.body51:                                       ; preds = %for.cond42
  %13 = load %struct.edge_def*, %struct.edge_def** %ne, align 8, !dbg !9526
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !9467, metadata !DIExpression()), !dbg !9499
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %exits, metadata !9452, metadata !DIExpression(DW_OP_deref)), !dbg !9468
  %call52 = call fastcc %struct.edge_def** @VEC_edge_heap_safe_push(%struct.VEC_edge_heap** nonnull %exits, %struct.edge_def* %13) #8, !dbg !9526
  %inc = add nuw nsw i32 %j.0, 1, !dbg !9527
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9464, metadata !DIExpression()), !dbg !9499
  br label %for.cond42, !dbg !9528, !llvm.loop !9529

for.end54:                                        ; preds = %for.cond42
  %14 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !9531
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %14, metadata !9452, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %14, metadata !9452, metadata !DIExpression()), !dbg !9468
  %base57 = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %14, i64 0, i32 0, !dbg !9531
  %call61 = call fastcc %struct.edge_def* @VEC_edge_base_ordered_remove(%struct.VEC_edge_base* %base57, i32 %i.0) #8, !dbg !9531
  %dec = add nsw i32 %i.0, -1, !dbg !9532
  call void @llvm.dbg.value(metadata i32 %dec, metadata !9457, metadata !DIExpression()), !dbg !9482
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !9533
  br label %for.inc63

for.inc63:                                        ; preds = %if.then37, %lor.lhs.false, %for.end54
  %i.3 = phi i32 [ %i.0, %lor.lhs.false ], [ %dec, %for.end54 ], [ %i.0, %if.then37 ], !dbg !9532
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !9457, metadata !DIExpression()), !dbg !9482
  %inc64 = add nsw i32 %i.3, 1, !dbg !9534
  call void @llvm.dbg.value(metadata i32 %inc64, metadata !9457, metadata !DIExpression()), !dbg !9482
  %.pre = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !9501
  br label %for.cond21, !dbg !9535, !llvm.loop !9536

for.end65:                                        ; preds = %for.cond21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !9538
  %.pre1 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !9539
  br label %if.end66, !dbg !9540

if.end66:                                         ; preds = %while.end, %for.end65
  %15 = phi %struct.VEC_edge_heap* [ null, %while.end ], [ %.pre1, %for.end65 ], !dbg !9539
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %15, metadata !9452, metadata !DIExpression()), !dbg !9468
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !9541
  ret %struct.VEC_edge_heap* %15, !dbg !9542
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @sel_bb_empty_or_nop_p(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !9543 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !9545, metadata !DIExpression()), !dbg !9548
  %call = tail call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %bb) #8, !dbg !9549
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !9546, metadata !DIExpression()), !dbg !9548
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !9550
  br i1 %cmp, label %cleanup, label %if.end, !dbg !9552

if.end:                                           ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !9553
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !9553
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !9553
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9553
  %2 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !9553
  %cmp1 = icmp eq %struct.rtx_def* %1, %2, !dbg !9553
  br i1 %cmp1, label %if.end3, label %cleanup, !dbg !9555

if.end3:                                          ; preds = %if.end
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9556
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !9556
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9556
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !9556
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !9556
  %cmp4 = icmp eq %struct.basic_block_def* %5, %bb, !dbg !9558
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !9559

if.end6:                                          ; preds = %if.end3
  %call7 = tail call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %bb) #8, !dbg !9560
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !9547, metadata !DIExpression()), !dbg !9548
  %cmp8 = icmp eq %struct.rtx_def* %call, %call7, !dbg !9561
  %. = zext i1 %cmp8 to i8, !dbg !9548
  br label %cleanup, !dbg !9548

cleanup:                                          ; preds = %if.end6, %if.end3, %if.end, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ 0, %if.end ], [ 0, %if.end3 ], [ %., %if.end6 ], !dbg !9548
  ret i8 %retval.0, !dbg !9563
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @inner_loop_header_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !9564 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !9566, metadata !DIExpression()), !dbg !9568
  %0 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !9569
  %tobool = icmp eq %struct.loop* %0, null, !dbg !9569
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9571

if.end:                                           ; preds = %entry
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9572
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !9572
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9572
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 1, !dbg !9572
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !9572
  %cmp = icmp eq %struct.basic_block_def* %3, %bb, !dbg !9574
  br i1 %cmp, label %cleanup, label %if.end2, !dbg !9575

if.end2:                                          ; preds = %if.end
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 3, !dbg !9576
  %4 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !9576
  call void @llvm.dbg.value(metadata %struct.loop* %4, metadata !9567, metadata !DIExpression()), !dbg !9568
  %cmp3 = icmp eq %struct.loop* %4, %0, !dbg !9577
  br i1 %cmp3, label %cleanup, label %if.end5, !dbg !9579

if.end5:                                          ; preds = %if.end2
  %header = getelementptr inbounds %struct.loop, %struct.loop* %4, i64 0, i32 2, !dbg !9580
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !9580
  %cmp6 = icmp eq %struct.basic_block_def* %5, %bb, !dbg !9582
  br i1 %cmp6, label %land.lhs.true, label %cleanup, !dbg !9583

land.lhs.true:                                    ; preds = %if.end5
  %call = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* nonnull %0, %struct.basic_block_def* %bb) #6, !dbg !9584
  %tobool7 = icmp eq i8 %call, 0, !dbg !9584
  br i1 %tobool7, label %cleanup, label %if.then8, !dbg !9585

if.then8:                                         ; preds = %land.lhs.true
  %call9 = tail call fastcc i32 @loop_depth(%struct.loop* %4) #8, !dbg !9586
  %6 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !9586
  %call10 = tail call fastcc i32 @loop_depth(%struct.loop* %6) #8, !dbg !9586
  %cmp11 = icmp ult i32 %call9, %call10, !dbg !9586
  br i1 %cmp11, label %cond.true, label %cleanup, !dbg !9586

cond.true:                                        ; preds = %if.then8
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 1052, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9586
  br label %cleanup, !dbg !9586

cleanup:                                          ; preds = %if.then8, %land.lhs.true, %entry, %if.end5, %cond.true, %if.end2, %if.end
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end2 ], [ 1, %if.then8 ], [ 1, %cond.true ], [ 0, %land.lhs.true ], [ 0, %if.end5 ], !dbg !9568
  ret i8 %retval.0, !dbg !9588
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_heap* @get_loop_exit_edges_unique_dests(%struct.loop* %loop) unnamed_addr #0 !dbg !9589 {
entry:
  %edges = alloca %struct.VEC_edge_heap*, align 8
  %e3 = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !9593, metadata !DIExpression()), !dbg !9602
  %0 = bitcast %struct.VEC_edge_heap** %edges to i8*, !dbg !9603
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !9603
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* null, metadata !9594, metadata !DIExpression()), !dbg !9602
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %edges, align 8, !dbg !9604
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !9605
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !9605
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9605
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !9605
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9605
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !9605
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !9605
  %cmp = icmp eq %struct.basic_block_def* %1, %4, !dbg !9605
  br i1 %cmp, label %cond.true, label %land.lhs.true, !dbg !9605

land.lhs.true:                                    ; preds = %entry
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 4, !dbg !9605
  %5 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !9605
  %state = getelementptr inbounds %struct.loops, %struct.loops* %5, i64 0, i32 0, !dbg !9605
  %6 = load i32, i32* %state, align 8, !dbg !9605
  %and = and i32 %6, 8, !dbg !9605
  %tobool = icmp eq i32 %and, 0, !dbg !9605
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !9605

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 1067, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9605
  br label %cond.end, !dbg !9605

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %exits = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 18, !dbg !9606
  %7 = load %struct.loop_exit*, %struct.loop_exit** %exits, align 8, !dbg !9606
  %8 = bitcast %struct.edge_def** %e3 to i8*, !dbg !9607
  br label %for.cond, !dbg !9608

for.cond:                                         ; preds = %if.end19, %cond.end
  %.pn = phi %struct.loop_exit* [ %7, %cond.end ], [ %exit.0, %if.end19 ]
  %exit.0.in = getelementptr inbounds %struct.loop_exit, %struct.loop_exit* %.pn, i64 0, i32 2, !dbg !9609
  %exit.0 = load %struct.loop_exit*, %struct.loop_exit** %exit.0.in, align 8, !dbg !9609
  call void @llvm.dbg.value(metadata %struct.loop_exit* %exit.0, metadata !9595, metadata !DIExpression()), !dbg !9602
  %e = getelementptr inbounds %struct.loop_exit, %struct.loop_exit* %exit.0, i64 0, i32 0, !dbg !9610
  %9 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9610
  %tobool2 = icmp eq %struct.edge_def* %9, null, !dbg !9611
  br i1 %tobool2, label %for.end22, label %for.body, !dbg !9611

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7, !dbg !9612
  call void @llvm.dbg.value(metadata i8 0, metadata !9601, metadata !DIExpression()), !dbg !9607
  call void @llvm.dbg.value(metadata i32 0, metadata !9596, metadata !DIExpression()), !dbg !9607
  br label %for.cond4, !dbg !9613

for.cond4:                                        ; preds = %for.inc, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ], !dbg !9615
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9596, metadata !DIExpression()), !dbg !9607
  %10 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %edges, align 8, !dbg !9616
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %10, metadata !9594, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %10, metadata !9594, metadata !DIExpression()), !dbg !9602
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %10, i64 0, i32 0, !dbg !9616
  call void @llvm.dbg.value(metadata %struct.edge_def** %e3, metadata !9600, metadata !DIExpression(DW_OP_deref)), !dbg !9607
  %call = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base, i32 %i.0, %struct.edge_def** nonnull %e3) #8, !dbg !9616
  %tobool10 = icmp eq i32 %call, 0, !dbg !9618
  br i1 %tobool10, label %for.end, label %for.body11, !dbg !9618

for.body11:                                       ; preds = %for.cond4
  %11 = load %struct.edge_def*, %struct.edge_def** %e3, align 8, !dbg !9619
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !9600, metadata !DIExpression()), !dbg !9607
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 1, !dbg !9621
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !9621
  %13 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9622
  %dest13 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i64 0, i32 1, !dbg !9623
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %dest13, align 8, !dbg !9623
  %cmp14 = icmp eq %struct.basic_block_def* %12, %14, !dbg !9624
  br i1 %cmp14, label %for.end, label %for.inc, !dbg !9625

for.inc:                                          ; preds = %for.body11
  %inc = add nuw nsw i32 %i.0, 1, !dbg !9626
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9596, metadata !DIExpression()), !dbg !9607
  br label %for.cond4, !dbg !9627, !llvm.loop !9628

for.end:                                          ; preds = %for.cond4, %for.body11
  %was_dest.0 = phi i1 [ false, %for.cond4 ], [ true, %for.body11 ]
  br i1 %was_dest.0, label %if.end19, label %if.then16, !dbg !9630

if.then16:                                        ; preds = %for.end
  %15 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9631
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %edges, metadata !9594, metadata !DIExpression(DW_OP_deref)), !dbg !9602
  %call18 = call fastcc %struct.edge_def** @VEC_edge_heap_safe_push(%struct.VEC_edge_heap** nonnull %edges, %struct.edge_def* %15) #8, !dbg !9631
  br label %if.end19, !dbg !9631

if.end19:                                         ; preds = %if.then16, %for.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7, !dbg !9633
  br label %for.cond, !dbg !9634, !llvm.loop !9635

for.end22:                                        ; preds = %for.cond
  %16 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %edges, align 8, !dbg !9637
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %16, metadata !9594, metadata !DIExpression()), !dbg !9602
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !9638
  ret %struct.VEC_edge_heap* %16, !dbg !9639
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def** @VEC_edge_heap_safe_push(%struct.VEC_edge_heap** %vec_, %struct.edge_def* %obj_) unnamed_addr #0 !dbg !9640 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %vec_, metadata !9644, metadata !DIExpression()), !dbg !9646
  call void @llvm.dbg.value(metadata %struct.edge_def* %obj_, metadata !9645, metadata !DIExpression()), !dbg !9646
  %call = tail call fastcc i32 @VEC_edge_heap_reserve(%struct.VEC_edge_heap** %vec_, i32 1) #8, !dbg !9647
  %0 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %vec_, align 8, !dbg !9647
  %tobool = icmp eq %struct.VEC_edge_heap* %0, null, !dbg !9647
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9647

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %0, i64 0, i32 0, !dbg !9647
  br label %cond.end, !dbg !9647

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9647
  %call1 = tail call fastcc %struct.edge_def** @VEC_edge_base_quick_push(%struct.VEC_edge_base* %cond, %struct.edge_def* %obj_) #8, !dbg !9647
  ret %struct.edge_def** %call1, !dbg !9647
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_ordered_remove(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !9648 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !9653, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9654, metadata !DIExpression()), !dbg !9657
  %idxprom = zext i32 %ix_ to i64, !dbg !9658
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9658
  call void @llvm.dbg.value(metadata %struct.edge_def** %arrayidx, metadata !9655, metadata !DIExpression()), !dbg !9657
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !9658
  call void @llvm.dbg.value(metadata %struct.edge_def* %0, metadata !9656, metadata !DIExpression()), !dbg !9657
  %1 = bitcast %struct.edge_def** %arrayidx to i8*, !dbg !9658
  %add.ptr = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %arrayidx, i64 1, !dbg !9658
  %2 = bitcast %struct.edge_def** %add.ptr to i8*, !dbg !9658
  %num1 = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !9658
  %3 = load i32, i32* %num1, align 8, !dbg !9658
  %dec = add i32 %3, -1, !dbg !9658
  store i32 %dec, i32* %num1, align 8, !dbg !9658
  %sub = sub i32 %dec, %ix_, !dbg !9658
  %conv2 = zext i32 %sub to i64, !dbg !9658
  %mul = shl nuw nsw i64 %conv2, 3, !dbg !9658
  %call = tail call i8* @memmove(i8* nonnull %1, i8* nonnull %2, i64 %mul) #6, !dbg !9658
  ret %struct.edge_def* %0, !dbg !9658
}

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_heap_reserve(%struct.VEC_edge_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9659 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %vec_, metadata !9663, metadata !DIExpression()), !dbg !9666
  call void @llvm.dbg.value(metadata i32 1, metadata !9664, metadata !DIExpression()), !dbg !9666
  %0 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %vec_, align 8, !dbg !9667
  %tobool = icmp eq %struct.VEC_edge_heap* %0, null, !dbg !9667
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9667

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %0, i64 0, i32 0, !dbg !9667
  br label %cond.end, !dbg !9667

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9667
  %call = tail call fastcc i32 @VEC_edge_base_space(%struct.VEC_edge_base* %cond, i32 1) #8, !dbg !9667
  %tobool1 = icmp eq i32 %call, 0, !dbg !9667
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9665, metadata !DIExpression()), !dbg !9666
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9667

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_edge_heap** %vec_ to i8**, !dbg !9668
  %2 = load i8*, i8** %1, align 8, !dbg !9668
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !9668
  store i8* %call3, i8** %1, align 8, !dbg !9668
  br label %if.end, !dbg !9668

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9667
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def** @VEC_edge_base_quick_push(%struct.VEC_edge_base* %vec_, %struct.edge_def* %obj_) unnamed_addr #0 !dbg !9670 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !9674, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata %struct.edge_def* %obj_, metadata !9675, metadata !DIExpression()), !dbg !9677
  %num1 = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !9678
  %0 = load i32, i32* %num1, align 8, !dbg !9678
  %inc = add i32 %0, 1, !dbg !9678
  store i32 %inc, i32* %num1, align 8, !dbg !9678
  %idxprom = zext i32 %0 to i64, !dbg !9678
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9678
  call void @llvm.dbg.value(metadata %struct.edge_def** %arrayidx, metadata !9676, metadata !DIExpression()), !dbg !9677
  store %struct.edge_def* %obj_, %struct.edge_def** %arrayidx, align 8, !dbg !9678
  ret %struct.edge_def** %arrayidx, !dbg !9678
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_space(%struct.VEC_edge_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9679 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !9683, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.value(metadata i32 1, metadata !9684, metadata !DIExpression()), !dbg !9685
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !9686
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9686

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 1, !dbg !9686
  %0 = load i32, i32* %alloc, align 4, !dbg !9686
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !9686
  %1 = load i32, i32* %num, align 8, !dbg !9686
  %cmp1 = icmp ne i32 %0, %1, !dbg !9686
  %phitmp = zext i1 %cmp1 to i32, !dbg !9686
  br label %cond.end, !dbg !9686

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9686

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !9686
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i8* @state_alloc() unnamed_addr #5 !dbg !9687 {
entry:
  %0 = load i64, i64* @dfa_state_size, align 8, !dbg !9688
  %call = tail call i8* @xmalloc(i64 %0) #6, !dbg !9689
  ret i8* %call, !dbg !9690
}

declare dso_local void @state_reset(i8*) local_unnamed_addr #2

declare dso_local void @advance_state(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.deps* @alloc_deps_context() unnamed_addr #5 !dbg !9691 {
entry:
  %call = tail call i8* @xmalloc(i64 184) #6, !dbg !9692
  %0 = bitcast i8* %call to %struct.deps*, !dbg !9692
  ret %struct.deps* %0, !dbg !9693
}

declare dso_local void @init_deps(%struct.deps*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @state_free(i8* %state) unnamed_addr #5 !dbg !9694 {
entry:
  call void @llvm.dbg.value(metadata i8* %state, metadata !9698, metadata !DIExpression()), !dbg !9699
  tail call void @free(i8* %state) #6, !dbg !9700
  ret void, !dbg !9701
}

; Function Attrs: nounwind uwtable
define internal fastcc void @reset_deps_context(%struct.deps* %dc) unnamed_addr #5 !dbg !9702 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %dc, metadata !9704, metadata !DIExpression()), !dbg !9705
  tail call fastcc void @clear_deps_context(%struct.deps* %dc) #8, !dbg !9706
  tail call void @init_deps(%struct.deps* %dc, i8 zeroext 0) #6, !dbg !9707
  ret void, !dbg !9708
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local %struct.edge_def* @find_fallthru_edge(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @state_copy(i8* %to, i8* %from) unnamed_addr #5 !dbg !9709 {
entry:
  call void @llvm.dbg.value(metadata i8* %to, metadata !9713, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i8* %from, metadata !9714, metadata !DIExpression()), !dbg !9715
  %0 = load i64, i64* @dfa_state_size, align 8, !dbg !9716
  %call = tail call i8* @memcpy(i8* %to, i8* %from, i64 %0) #6, !dbg !9717
  ret void, !dbg !9718
}

; Function Attrs: nounwind uwtable
define internal fastcc void @copy_deps_context(%struct.deps* %to, %struct.deps* %from) unnamed_addr #5 !dbg !9719 {
entry:
  call void @llvm.dbg.value(metadata %struct.deps* %to, metadata !9723, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.value(metadata %struct.deps* %from, metadata !9724, metadata !DIExpression()), !dbg !9725
  tail call void @init_deps(%struct.deps* %to, i8 zeroext 0) #6, !dbg !9726
  tail call void @deps_join(%struct.deps* %to, %struct.deps* %from) #6, !dbg !9727
  ret void, !dbg !9728
}

declare dso_local void @deps_join(%struct.deps*, %struct.deps*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @copy_target_context(i8* %to, i8* %from) unnamed_addr #5 !dbg !9729 {
entry:
  call void @llvm.dbg.value(metadata i8* %to, metadata !9733, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.value(metadata i8* %from, metadata !9734, metadata !DIExpression()), !dbg !9736
  %call = tail call i8* @create_target_context(i8 zeroext 0) #8, !dbg !9737
  call void @llvm.dbg.value(metadata i8* %call, metadata !9735, metadata !DIExpression()), !dbg !9736
  tail call void @set_target_context(i8* %from) #8, !dbg !9738
  tail call fastcc void @init_target_context(i8* %to, i8 zeroext 0) #8, !dbg !9739
  tail call void @set_target_context(i8* %call) #8, !dbg !9740
  tail call fastcc void @delete_target_context(i8* %call) #8, !dbg !9741
  ret void, !dbg !9742
}

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local i32 @insn_default_latency(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_expr_history_def_base_length(%struct.VEC_expr_history_def_base* %vec_) unnamed_addr #0 !dbg !9743 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_base* %vec_, metadata !9749, metadata !DIExpression()), !dbg !9750
  %tobool = icmp eq %struct.VEC_expr_history_def_base* %vec_, null, !dbg !9751
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9751

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 0, !dbg !9751
  %0 = load i32, i32* %num, align 8, !dbg !9751
  br label %cond.end, !dbg !9751

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !9751
  ret i32 %cond, !dbg !9751
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.expr_history_def_1* @VEC_expr_history_def_base_address(%struct.VEC_expr_history_def_base* %vec_) unnamed_addr #0 !dbg !9752 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_base* %vec_, metadata !9756, metadata !DIExpression()), !dbg !9757
  %tobool = icmp eq %struct.VEC_expr_history_def_base* %vec_, null, !dbg !9758
  %arraydecay = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 2, i64 0, !dbg !9758
  %cond = select i1 %tobool, %struct.expr_history_def_1* null, %struct.expr_history_def_1* %arraydecay, !dbg !9758
  ret %struct.expr_history_def_1* %cond, !dbg !9758
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_expr_history_def_heap_reserve(%struct.VEC_expr_history_def_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9759 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap** %vec_, metadata !9763, metadata !DIExpression()), !dbg !9766
  call void @llvm.dbg.value(metadata i32 1, metadata !9764, metadata !DIExpression()), !dbg !9766
  %0 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %vec_, align 8, !dbg !9767
  %tobool = icmp eq %struct.VEC_expr_history_def_heap* %0, null, !dbg !9767
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9767

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_expr_history_def_heap, %struct.VEC_expr_history_def_heap* %0, i64 0, i32 0, !dbg !9767
  br label %cond.end, !dbg !9767

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_expr_history_def_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9767
  %call = tail call fastcc i32 @VEC_expr_history_def_base_space(%struct.VEC_expr_history_def_base* %cond, i32 1) #8, !dbg !9767
  %tobool1 = icmp eq i32 %call, 0, !dbg !9767
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9767
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9765, metadata !DIExpression()), !dbg !9766
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9767

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_expr_history_def_heap** %vec_ to i8**, !dbg !9768
  %2 = load i8*, i8** %1, align 8, !dbg !9768
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 32) #6, !dbg !9768
  store i8* %call3, i8** %1, align 8, !dbg !9768
  br label %if.end, !dbg !9768

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9767
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.expr_history_def_1* @VEC_expr_history_def_base_quick_insert(%struct.VEC_expr_history_def_base* %vec_, i32 %ix_, %struct.expr_history_def_1* %obj_) unnamed_addr #0 !dbg !9770 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_base* %vec_, metadata !9774, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9775, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %obj_, metadata !9776, metadata !DIExpression()), !dbg !9778
  %idxprom = zext i32 %ix_ to i64, !dbg !9779
  %arrayidx = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9779
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %arrayidx, metadata !9777, metadata !DIExpression()), !dbg !9778
  %add.ptr = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %arrayidx, i64 1, !dbg !9779
  %0 = bitcast %struct.expr_history_def_1* %add.ptr to i8*, !dbg !9779
  %1 = bitcast %struct.expr_history_def_1* %arrayidx to i8*, !dbg !9779
  %num4 = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 0, !dbg !9779
  %2 = load i32, i32* %num4, align 8, !dbg !9779
  %inc = add i32 %2, 1, !dbg !9779
  store i32 %inc, i32* %num4, align 8, !dbg !9779
  %sub = sub i32 %2, %ix_, !dbg !9779
  %conv5 = zext i32 %sub to i64, !dbg !9779
  %mul = shl nuw nsw i64 %conv5, 5, !dbg !9779
  %call = tail call i8* @memmove(i8* nonnull %0, i8* nonnull %1, i64 %mul) #6, !dbg !9779
  %tobool = icmp eq %struct.expr_history_def_1* %obj_, null, !dbg !9780
  br i1 %tobool, label %if.end, label %if.then, !dbg !9779

if.then:                                          ; preds = %entry
  %3 = bitcast %struct.expr_history_def_1* %obj_ to i8*, !dbg !9780
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %3, i64 32, i1 false), !dbg !9780
  br label %if.end, !dbg !9780

if.end:                                           ; preds = %entry, %if.then
  ret %struct.expr_history_def_1* %arrayidx, !dbg !9779
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_expr_history_def_base_space(%struct.VEC_expr_history_def_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9782 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_base* %vec_, metadata !9786, metadata !DIExpression()), !dbg !9788
  call void @llvm.dbg.value(metadata i32 1, metadata !9787, metadata !DIExpression()), !dbg !9788
  %tobool = icmp eq %struct.VEC_expr_history_def_base* %vec_, null, !dbg !9789
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9789

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 1, !dbg !9789
  %0 = load i32, i32* %alloc, align 4, !dbg !9789
  %num = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 0, !dbg !9789
  %1 = load i32, i32* %num, align 8, !dbg !9789
  %cmp1 = icmp ne i32 %0, %1, !dbg !9789
  %phitmp = zext i1 %cmp1 to i32, !dbg !9789
  br label %cond.end, !dbg !9789

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9789

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !9789
}

declare dso_local i8* @vec_heap_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

declare dso_local i32 @ds_get_max_dep_weak(i32) local_unnamed_addr #2

declare dso_local i32 @ds_get_speculation_types(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_expr_history_def_heap_free(%struct.VEC_expr_history_def_heap** %vec_) unnamed_addr #0 !dbg !9790 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_heap** %vec_, metadata !9792, metadata !DIExpression()), !dbg !9793
  %0 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %vec_, align 8, !dbg !9794
  %tobool = icmp eq %struct.VEC_expr_history_def_heap* %0, null, !dbg !9794
  br i1 %tobool, label %if.end, label %if.then, !dbg !9796

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_expr_history_def_heap* %0 to i8*, !dbg !9796
  tail call void @free(i8* nonnull %1) #6, !dbg !9794
  br label %if.end, !dbg !9794

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_expr_history_def_heap* null, %struct.VEC_expr_history_def_heap** %vec_, align 8, !dbg !9796
  ret void, !dbg !9796
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_iter_remove_nofree(%struct._list_iterator* %ip) unnamed_addr #0 !dbg !9797 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_iterator* %ip, metadata !9799, metadata !DIExpression()), !dbg !9800
  %removed_p = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 2, !dbg !9801
  %0 = load i8, i8* %removed_p, align 1, !dbg !9801
  %tobool = icmp eq i8 %0, 0, !dbg !9801
  br i1 %tobool, label %land.lhs.true, label %cond.true, !dbg !9801

land.lhs.true:                                    ; preds = %entry
  %can_remove_p = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 1, !dbg !9801
  %1 = load i8, i8* %can_remove_p, align 8, !dbg !9801
  %tobool1 = icmp eq i8 %1, 0, !dbg !9801
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !9801

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 456, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9801
  br label %cond.end, !dbg !9801

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 0, !dbg !9802
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !9802
  tail call fastcc void @_list_remove_nofree(%struct._list_node** %2) #8, !dbg !9803
  store i8 1, i8* %removed_p, align 1, !dbg !9804
  ret void, !dbg !9805
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_remove_nofree(%struct._list_node** %lp) unnamed_addr #0 !dbg !9806 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !9808, metadata !DIExpression()), !dbg !9810
  %0 = bitcast %struct._list_node** %lp to i64**, !dbg !9811
  %1 = load i64*, i64** %0, align 8, !dbg !9811
  %2 = load i64, i64* %1, align 8, !dbg !9812
  %3 = bitcast %struct._list_node** %lp to i64*, !dbg !9813
  store i64 %2, i64* %3, align 8, !dbg !9813
  ret void, !dbg !9814
}

; Function Attrs: nounwind uwtable
define internal fastcc void @invalidate_av_set(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !9815 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !9817, metadata !DIExpression()), !dbg !9818
  %0 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !9819
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %0, i64 0, i32 0, !dbg !9819
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !9819
  %1 = load i32, i32* %index, align 8, !dbg !9819
  %call = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %1) #8, !dbg !9819
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call, i64 0, i32 2, !dbg !9819
  %2 = load i32, i32* %av_level, align 8, !dbg !9819
  %cmp = icmp slt i32 %2, 1, !dbg !9819
  br i1 %cmp, label %land.lhs.true, label %cond.true10, !dbg !9819

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !9819
  %base3 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %3, i64 0, i32 0, !dbg !9819
  %4 = load i32, i32* %index, align 8, !dbg !9819
  %call8 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base3, i32 %4) #8, !dbg !9819
  %av_set = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call8, i64 0, i32 1, !dbg !9819
  %5 = load %struct._list_node*, %struct._list_node** %av_set, align 8, !dbg !9819
  %cmp9 = icmp eq %struct._list_node* %5, null, !dbg !9819
  br i1 %cmp9, label %cond.end12, label %cond.true10, !dbg !9819

cond.true10:                                      ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4156, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9819
  br label %cond.end12, !dbg !9819

cond.end12:                                       ; preds = %land.lhs.true, %cond.true10
  %6 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !9820
  %base16 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %6, i64 0, i32 0, !dbg !9820
  %7 = load i32, i32* %index, align 8, !dbg !9820
  %call21 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base16, i32 %7) #8, !dbg !9820
  %av_level22 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call21, i64 0, i32 2, !dbg !9820
  store i32 -1, i32* %av_level22, align 8, !dbg !9821
  ret void, !dbg !9822
}

declare dso_local i32 @asm_noperands(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @prologue_epilogue_contains(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @can_throw_internal(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !9823 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_insn_data_def_base* %vec_, metadata !9878, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9879, metadata !DIExpression()), !dbg !9880
  br label %land.end, !dbg !9881

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !9881
  %arrayidx = getelementptr inbounds %struct.VEC_haifa_insn_data_def_base, %struct.VEC_haifa_insn_data_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9881
  ret %struct._haifa_insn_data* %arrayidx, !dbg !9881
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_first_time_insn_data(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !9882 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !9884, metadata !DIExpression()), !dbg !9885
  %call = tail call fastcc zeroext i8 @first_time_insn_init(%struct.rtx_def* %insn) #8, !dbg !9886
  %tobool = icmp eq i8 %call, 0, !dbg !9886
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !9886

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2756, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9886
  br label %cond.end, !dbg !9886

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call %struct.bitmap_head_def* @get_regset_from_pool() #8, !dbg !9887
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9888
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !9888
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9888
  %base9 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !9888
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9888
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9888
  %2 = load i32, i32* %rt_int, align 8, !dbg !9888
  %call13 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base9, i32 %2) #8, !dbg !9888
  %call14 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call13) #8, !dbg !9888
  %live = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call14, i64 0, i32 3, !dbg !9888
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** %live, align 8, !dbg !9889
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9890
  %base17 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i64 0, i32 0, !dbg !9890
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9890
  %base23 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !9890
  %5 = load i32, i32* %rt_int, align 8, !dbg !9890
  %call31 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base23, i32 %5) #8, !dbg !9890
  %call32 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base17, i32 %call31) #8, !dbg !9890
  %live_valid_p = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call32, i64 0, i32 13, !dbg !9890
  %bf.load = load i8, i8* %live_valid_p, align 4, !dbg !9891
  %bf.clear = and i8 %bf.load, -2, !dbg !9891
  store i8 %bf.clear, i8* %live_valid_p, align 4, !dbg !9891
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !9892
  %6 = getelementptr inbounds %union.u, %union.u* %u33, i64 1, i32 0, i32 0, i64 0, !dbg !9892
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !9892
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9892
  %8 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !9892
  %cmp = icmp eq %struct.rtx_def* %7, %8, !dbg !9892
  br i1 %cmp, label %if.end, label %if.then, !dbg !9894

if.then:                                          ; preds = %cond.end
  %call36 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !9895
  %9 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9897
  %base39 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %9, i64 0, i32 0, !dbg !9897
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9897
  %base45 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !9897
  %11 = load i32, i32* %rt_int, align 8, !dbg !9897
  %call53 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base45, i32 %11) #8, !dbg !9897
  %call54 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base39, i32 %call53) #8, !dbg !9897
  %analyzed_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call54, i64 0, i32 4, !dbg !9897
  store %struct.bitmap_head_def* %call36, %struct.bitmap_head_def** %analyzed_deps, align 8, !dbg !9898
  %call55 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !9899
  %12 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9900
  %base58 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %12, i64 0, i32 0, !dbg !9900
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9900
  %base64 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i64 0, i32 0, !dbg !9900
  %14 = load i32, i32* %rt_int, align 8, !dbg !9900
  %call72 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base64, i32 %14) #8, !dbg !9900
  %call73 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base58, i32 %call72) #8, !dbg !9900
  %found_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call73, i64 0, i32 5, !dbg !9900
  store %struct.bitmap_head_def* %call55, %struct.bitmap_head_def** %found_deps, align 8, !dbg !9901
  %call74 = tail call %struct.htab* @htab_create(i64 16, i32 (i8*)* nonnull @hash_transformed_insns, i32 (i8*, i8*)* nonnull @eq_transformed_insns, void (i8*)* nonnull @free_transformed_insns) #6, !dbg !9902
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9903
  %base77 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i64 0, i32 0, !dbg !9903
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9903
  %base83 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i64 0, i32 0, !dbg !9903
  %17 = load i32, i32* %rt_int, align 8, !dbg !9903
  %call91 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base83, i32 %17) #8, !dbg !9903
  %call92 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base77, i32 %call91) #8, !dbg !9903
  %transformed_insns = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call92, i64 0, i32 7, !dbg !9903
  store %struct.htab* %call74, %struct.htab** %transformed_insns, align 8, !dbg !9904
  %18 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9905
  %base95 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %18, i64 0, i32 0, !dbg !9905
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9905
  %base101 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %19, i64 0, i32 0, !dbg !9905
  %20 = load i32, i32* %rt_int, align 8, !dbg !9905
  %call109 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base101, i32 %20) #8, !dbg !9905
  %call110 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base95, i32 %call109) #8, !dbg !9905
  %deps_context = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call110, i64 0, i32 8, !dbg !9905
  tail call void @init_deps(%struct.deps* nonnull %deps_context, i8 zeroext 1) #6, !dbg !9906
  br label %if.end, !dbg !9907

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !9908
}

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @hash_transformed_insns(i8* %p) #5 !dbg !9909 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !9911, metadata !DIExpression()), !dbg !9912
  %vinsn_old = bitcast i8* %p to %struct.vinsn_def**, !dbg !9913
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_old, align 8, !dbg !9913
  %hash_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 3, !dbg !9913
  %1 = load i32, i32* %hash_rtx, align 4, !dbg !9913
  ret i32 %1, !dbg !9914
}

; Function Attrs: nounwind uwtable
define internal i32 @eq_transformed_insns(i8* %p, i8* %q) #5 !dbg !9915 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !9917, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.value(metadata i8* %q, metadata !9918, metadata !DIExpression()), !dbg !9921
  %vinsn_old = bitcast i8* %p to %struct.vinsn_def**, !dbg !9922
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_old, align 8, !dbg !9922
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 0, !dbg !9922
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !9922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !9919, metadata !DIExpression()), !dbg !9921
  %vinsn_old1 = bitcast i8* %q to %struct.vinsn_def**, !dbg !9923
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_old1, align 8, !dbg !9923
  %insn_rtx2 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %2, i64 0, i32 0, !dbg !9923
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx2, align 8, !dbg !9923
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !9920, metadata !DIExpression()), !dbg !9921
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9924
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9924
  %4 = load i32, i32* %rt_int, align 8, !dbg !9924
  %arrayidx5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9926
  %rt_int6 = bitcast %union.rtunion_def* %arrayidx5 to i32*, !dbg !9926
  %5 = load i32, i32* %rt_int6, align 8, !dbg !9926
  %cmp = icmp eq i32 %4, %5, !dbg !9927
  br i1 %cmp, label %cleanup, label %if.end, !dbg !9928

if.end:                                           ; preds = %entry
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !9929
  %6 = getelementptr inbounds %union.u, %union.u* %u7, i64 1, i32 0, i32 0, i64 0, !dbg !9929
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !9929
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9929
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, !dbg !9930
  %8 = getelementptr inbounds %union.u, %union.u* %u10, i64 1, i32 0, i32 0, i64 0, !dbg !9930
  %rt_rtx13 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !9930
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !9930
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %7, %struct.rtx_def* %9) #6, !dbg !9931
  br label %cleanup, !dbg !9932

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call, %if.end ], [ 1, %entry ], !dbg !9921
  ret i32 %retval.0, !dbg !9933
}

; Function Attrs: nounwind uwtable
define internal void @free_transformed_insns(i8* %p) #5 !dbg !9934 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !9936, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i8* %p, metadata !9937, metadata !DIExpression()), !dbg !9938
  %vinsn_old = bitcast i8* %p to %struct.vinsn_def**, !dbg !9939
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_old, align 8, !dbg !9939
  tail call void @vinsn_detach(%struct.vinsn_def* %0) #8, !dbg !9940
  %vinsn_new = getelementptr inbounds i8, i8* %p, i64 8, !dbg !9941
  %1 = bitcast i8* %vinsn_new to %struct.vinsn_def**, !dbg !9941
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %1, align 8, !dbg !9941
  tail call void @vinsn_detach(%struct.vinsn_def* %2) #8, !dbg !9942
  tail call void @free(i8* %p) #6, !dbg !9943
  ret void, !dbg !9944
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @free_first_time_insn_data(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !9945 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !9947, metadata !DIExpression()), !dbg !9948
  %call = tail call fastcc zeroext i8 @first_time_insn_init(%struct.rtx_def* %insn) #8, !dbg !9949
  %tobool = icmp eq i8 %call, 0, !dbg !9949
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9949

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2803, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9949
  br label %cond.end, !dbg !9949

cond.end:                                         ; preds = %entry, %cond.true
  tail call void @free_data_for_scheduled_insn(%struct.rtx_def* %insn) #8, !dbg !9950
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9951
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !9951
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9951
  %base8 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !9951
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9951
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9951
  %2 = load i32, i32* %rt_int, align 8, !dbg !9951
  %call12 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base8, i32 %2) #8, !dbg !9951
  %call13 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call12) #8, !dbg !9951
  %live = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call13, i64 0, i32 3, !dbg !9951
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !9951
  tail call void @return_regset_to_pool(%struct.bitmap_head_def* %3) #8, !dbg !9952
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9953
  %base16 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i64 0, i32 0, !dbg !9953
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9953
  %base22 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !9953
  %6 = load i32, i32* %rt_int, align 8, !dbg !9953
  %call30 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base22, i32 %6) #8, !dbg !9953
  %call31 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base16, i32 %call30) #8, !dbg !9953
  %live32 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call31, i64 0, i32 3, !dbg !9953
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %live32, align 8, !dbg !9954
  %7 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9955
  %base35 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %7, i64 0, i32 0, !dbg !9955
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9955
  %base41 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i64 0, i32 0, !dbg !9955
  %9 = load i32, i32* %rt_int, align 8, !dbg !9955
  %call49 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base41, i32 %9) #8, !dbg !9955
  %call50 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base35, i32 %call49) #8, !dbg !9955
  %live_valid_p = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call50, i64 0, i32 13, !dbg !9955
  %bf.load = load i8, i8* %live_valid_p, align 4, !dbg !9956
  %bf.clear = and i8 %bf.load, -2, !dbg !9956
  store i8 %bf.clear, i8* %live_valid_p, align 4, !dbg !9956
  ret void, !dbg !9957
}

; Function Attrs: nounwind uwtable
define internal void @has_dependence_start_insn(%struct.rtx_def* %insn) #5 !dbg !9958 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !9960, metadata !DIExpression()), !dbg !9961
  %0 = load i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !9962
  %cmp = icmp eq i32 %0, 3, !dbg !9962
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !9962

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3006, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9962
  br label %cond.end, !dbg !9962

cond.end:                                         ; preds = %entry, %cond.true
  store i32 0, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !9963
  ret void, !dbg !9964
}

; Function Attrs: nounwind uwtable
define internal void @has_dependence_finish_insn() #5 !dbg !9965 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !9966
  %cmp = icmp eq i32 %0, 0, !dbg !9966
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !9966

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3015, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9966
  br label %cond.end, !dbg !9966

cond.end:                                         ; preds = %entry, %cond.true
  store i32 3, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !9967
  ret void, !dbg !9968
}

; Function Attrs: nounwind uwtable
define internal void @has_dependence_start_lhs(%struct.rtx_def* %lhs) #5 !dbg !9969 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %lhs, metadata !9971, metadata !DIExpression()), !dbg !9972
  %0 = load i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !9973
  %cmp = icmp eq i32 %0, 0, !dbg !9973
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !9973

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3024, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9973
  br label %cond.end, !dbg !9973

cond.end:                                         ; preds = %entry, %cond.true
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 3), align 8, !dbg !9974
  %lhs1 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i64 0, i32 1, i32 1, !dbg !9974
  %2 = load %struct.rtx_def*, %struct.rtx_def** %lhs1, align 8, !dbg !9974
  %cmp2 = icmp eq %struct.rtx_def* %2, null, !dbg !9976
  br i1 %cmp2, label %if.end, label %if.then, !dbg !9977

if.then:                                          ; preds = %cond.end
  store i32 1, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !9978
  br label %if.end, !dbg !9979

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !9980
}

; Function Attrs: nounwind uwtable
define internal void @has_dependence_finish_lhs() #5 !dbg !9981 {
entry:
  store i32 0, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !9982
  ret void, !dbg !9983
}

; Function Attrs: nounwind uwtable
define internal void @has_dependence_start_rhs(%struct.rtx_def* %rhs) #5 !dbg !9984 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rhs, metadata !9986, metadata !DIExpression()), !dbg !9987
  %0 = load i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !9988
  %cmp = icmp eq i32 %0, 0, !dbg !9988
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !9988

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3041, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9988
  br label %cond.end, !dbg !9988

cond.end:                                         ; preds = %entry, %cond.true
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 3), align 8, !dbg !9989
  %rhs1 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i64 0, i32 1, i32 2, !dbg !9989
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rhs1, align 8, !dbg !9989
  %cmp2 = icmp eq %struct.rtx_def* %2, null, !dbg !9991
  br i1 %cmp2, label %if.end, label %if.then, !dbg !9992

if.then:                                          ; preds = %cond.end
  store i32 2, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !9993
  br label %if.end, !dbg !9994

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !9995
}

; Function Attrs: nounwind uwtable
define internal void @has_dependence_finish_rhs() #5 !dbg !9996 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !9997
  %1 = and i32 %0, -3, !dbg !9997
  %2 = icmp eq i32 %1, 0, !dbg !9997
  br i1 %2, label %cond.end, label %cond.true, !dbg !9997

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3052, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9997
  br label %cond.end, !dbg !9997

cond.end:                                         ; preds = %entry, %cond.true
  store i32 0, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !9998
  ret void, !dbg !9999
}

; Function Attrs: nounwind uwtable
define internal void @has_dependence_note_reg_set(i32 %regno) #5 !dbg !10000 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !10002, metadata !DIExpression()), !dbg !10007
  %0 = load %struct.deps*, %struct.deps** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 0), align 8, !dbg !10008
  %reg_last1 = getelementptr inbounds %struct.deps, %struct.deps* %0, i64 0, i32 14, !dbg !10009
  %1 = load %struct.deps_reg*, %struct.deps_reg** %reg_last1, align 8, !dbg !10009
  %idxprom = sext i32 %regno to i64, !dbg !10010
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !10003, metadata !DIExpression()), !dbg !10007
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 2), align 8, !dbg !10011
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 3), align 8, !dbg !10012
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i64 0, i32 0, !dbg !10012
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !10012
  %call = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %2, %struct.rtx_def* %4) #6, !dbg !10013
  %tobool = icmp eq i8 %call, 0, !dbg !10013
  br i1 %tobool, label %if.then, label %if.end11, !dbg !10014

if.then:                                          ; preds = %entry
  %5 = load i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !10015
  %idxprom2 = zext i32 %5 to i64, !dbg !10016
  %arrayidx3 = getelementptr inbounds %struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 4, i64 %idxprom2, !dbg !10016
  call void @llvm.dbg.value(metadata i32* %arrayidx3, metadata !10004, metadata !DIExpression()), !dbg !10017
  %sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %1, i64 %idxprom, i32 1, !dbg !10018
  %6 = load %struct.rtx_def*, %struct.rtx_def** %sets, align 8, !dbg !10018
  %cmp = icmp eq %struct.rtx_def* %6, null, !dbg !10020
  br i1 %cmp, label %lor.lhs.false, label %if.then5, !dbg !10021

lor.lhs.false:                                    ; preds = %if.then
  %clobbers = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %1, i64 %idxprom, i32 3, !dbg !10022
  %7 = load %struct.rtx_def*, %struct.rtx_def** %clobbers, align 8, !dbg !10022
  %cmp4 = icmp eq %struct.rtx_def* %7, null, !dbg !10023
  br i1 %cmp4, label %if.end, label %if.then5, !dbg !10024

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !10025
  %and = and i32 %8, -50331648, !dbg !10026
  %or = or i32 %and, 33554432, !dbg !10027
  store i32 %or, i32* %arrayidx3, align 4, !dbg !10028
  br label %if.end, !dbg !10029

if.end:                                           ; preds = %lor.lhs.false, %if.then5
  %uses = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %1, i64 %idxprom, i32 0, !dbg !10030
  %9 = load %struct.rtx_def*, %struct.rtx_def** %uses, align 8, !dbg !10030
  %tobool6 = icmp eq %struct.rtx_def* %9, null, !dbg !10032
  br i1 %tobool6, label %if.end11, label %if.then7, !dbg !10033

if.then7:                                         ; preds = %if.end
  %10 = load i32, i32* %arrayidx3, align 4, !dbg !10034
  %and8 = and i32 %10, -83886080, !dbg !10035
  %or9 = or i32 %and8, 67108864, !dbg !10036
  store i32 %or9, i32* %arrayidx3, align 4, !dbg !10037
  br label %if.end11, !dbg !10038

if.end11:                                         ; preds = %if.end, %entry, %if.then7
  ret void, !dbg !10039
}

; Function Attrs: nounwind uwtable
define internal void @has_dependence_note_reg_clobber(i32 %regno) #5 !dbg !10040 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !10042, metadata !DIExpression()), !dbg !10047
  %0 = load %struct.deps*, %struct.deps** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 0), align 8, !dbg !10048
  %reg_last1 = getelementptr inbounds %struct.deps, %struct.deps* %0, i64 0, i32 14, !dbg !10049
  %1 = load %struct.deps_reg*, %struct.deps_reg** %reg_last1, align 8, !dbg !10049
  %idxprom = sext i32 %regno to i64, !dbg !10050
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !10043, metadata !DIExpression()), !dbg !10047
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 2), align 8, !dbg !10051
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 3), align 8, !dbg !10052
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i64 0, i32 0, !dbg !10052
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !10052
  %call = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %2, %struct.rtx_def* %4) #6, !dbg !10053
  %tobool = icmp eq i8 %call, 0, !dbg !10053
  br i1 %tobool, label %if.then, label %if.end11, !dbg !10054

if.then:                                          ; preds = %entry
  %5 = load i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !10055
  %idxprom2 = zext i32 %5 to i64, !dbg !10056
  %arrayidx3 = getelementptr inbounds %struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 4, i64 %idxprom2, !dbg !10056
  call void @llvm.dbg.value(metadata i32* %arrayidx3, metadata !10044, metadata !DIExpression()), !dbg !10057
  %sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %1, i64 %idxprom, i32 1, !dbg !10058
  %6 = load %struct.rtx_def*, %struct.rtx_def** %sets, align 8, !dbg !10058
  %tobool4 = icmp eq %struct.rtx_def* %6, null, !dbg !10060
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !10061

if.then5:                                         ; preds = %if.then
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !10062
  %and = and i32 %7, -50331648, !dbg !10063
  %or = or i32 %and, 33554432, !dbg !10064
  store i32 %or, i32* %arrayidx3, align 4, !dbg !10065
  br label %if.end, !dbg !10066

if.end:                                           ; preds = %if.then, %if.then5
  %uses = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %1, i64 %idxprom, i32 0, !dbg !10067
  %8 = load %struct.rtx_def*, %struct.rtx_def** %uses, align 8, !dbg !10067
  %tobool6 = icmp eq %struct.rtx_def* %8, null, !dbg !10069
  br i1 %tobool6, label %if.end11, label %if.then7, !dbg !10070

if.then7:                                         ; preds = %if.end
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !10071
  %and8 = and i32 %9, -83886080, !dbg !10072
  %or9 = or i32 %and8, 67108864, !dbg !10073
  store i32 %or9, i32* %arrayidx3, align 4, !dbg !10074
  br label %if.end11, !dbg !10075

if.end11:                                         ; preds = %if.end, %entry, %if.then7
  ret void, !dbg !10076
}

; Function Attrs: nounwind uwtable
define internal void @has_dependence_note_reg_use(i32 %regno) #5 !dbg !10077 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !10079, metadata !DIExpression()), !dbg !10087
  %0 = load %struct.deps*, %struct.deps** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 0), align 8, !dbg !10088
  %reg_last1 = getelementptr inbounds %struct.deps, %struct.deps* %0, i64 0, i32 14, !dbg !10089
  %1 = load %struct.deps_reg*, %struct.deps_reg** %reg_last1, align 8, !dbg !10089
  %idxprom = sext i32 %regno to i64, !dbg !10090
  call void @llvm.dbg.value(metadata %struct.deps_reg* undef, metadata !10080, metadata !DIExpression()), !dbg !10087
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 2), align 8, !dbg !10091
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 3), align 8, !dbg !10092
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i64 0, i32 0, !dbg !10092
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !10092
  %call = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %2, %struct.rtx_def* %4) #6, !dbg !10093
  %tobool = icmp eq i8 %call, 0, !dbg !10093
  br i1 %tobool, label %if.then, label %if.end28, !dbg !10094

if.then:                                          ; preds = %entry
  %5 = load i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !10095
  %idxprom2 = zext i32 %5 to i64, !dbg !10096
  %arrayidx3 = getelementptr inbounds %struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 4, i64 %idxprom2, !dbg !10096
  call void @llvm.dbg.value(metadata i32* %arrayidx3, metadata !10081, metadata !DIExpression()), !dbg !10097
  %sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %1, i64 %idxprom, i32 1, !dbg !10098
  %6 = load %struct.rtx_def*, %struct.rtx_def** %sets, align 8, !dbg !10098
  %tobool4 = icmp eq %struct.rtx_def* %6, null, !dbg !10100
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !10101

if.then5:                                         ; preds = %if.then
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !10102
  %and = and i32 %7, -33554432, !dbg !10103
  %or = or i32 %and, 16777216, !dbg !10104
  store i32 %or, i32* %arrayidx3, align 4, !dbg !10105
  br label %if.end, !dbg !10106

if.end:                                           ; preds = %if.then, %if.then5
  %clobbers = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %1, i64 %idxprom, i32 3, !dbg !10107
  %8 = load %struct.rtx_def*, %struct.rtx_def** %clobbers, align 8, !dbg !10107
  %tobool6 = icmp eq %struct.rtx_def* %8, null, !dbg !10109
  br i1 %tobool6, label %if.end10, label %if.then7, !dbg !10110

if.then7:                                         ; preds = %if.end
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !10111
  %and8 = and i32 %9, -83886080, !dbg !10112
  %or9 = or i32 %and8, 67108864, !dbg !10113
  store i32 %or9, i32* %arrayidx3, align 4, !dbg !10114
  br label %if.end10, !dbg !10115

if.end10:                                         ; preds = %if.end, %if.then7
  %uses = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %1, i64 %idxprom, i32 0, !dbg !10116
  %10 = load %struct.rtx_def*, %struct.rtx_def** %uses, align 8, !dbg !10116
  %tobool11 = icmp eq %struct.rtx_def* %10, null, !dbg !10117
  br i1 %tobool11, label %if.end28, label %if.then12, !dbg !10118

if.then12:                                        ; preds = %if.end10
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10119
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %11, i64 0, i32 0, !dbg !10119
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10119
  %base16 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %12, i64 0, i32 0, !dbg !10119
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 2), align 8, !dbg !10119
  %arrayidx20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10119
  %rt_int = bitcast %union.rtunion_def* %arrayidx20 to i32*, !dbg !10119
  %14 = load i32, i32* %rt_int, align 8, !dbg !10119
  %call21 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base16, i32 %14) #8, !dbg !10119
  %call22 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call21) #8, !dbg !10119
  %spec_checked_ds = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call22, i64 0, i32 12, !dbg !10119
  %15 = load i32, i32* %spec_checked_ds, align 8, !dbg !10119
  call void @llvm.dbg.value(metadata i32 %15, metadata !10084, metadata !DIExpression()), !dbg !10120
  %call23 = tail call i32 @ds_get_max_dep_weak(i32 %15) #6, !dbg !10121
  call void @llvm.dbg.value(metadata i32 %call23, metadata !10084, metadata !DIExpression()), !dbg !10120
  %cmp = icmp eq i32 %call23, 0, !dbg !10122
  br i1 %cmp, label %if.end28, label %if.then24, !dbg !10124

if.then24:                                        ; preds = %if.then12
  %16 = load i32, i32* %arrayidx3, align 4, !dbg !10125
  %call25 = tail call i32 @ds_full_merge(i32 %16, i32 %call23, %struct.rtx_def* null, %struct.rtx_def* null) #6, !dbg !10126
  store i32 %call25, i32* %arrayidx3, align 4, !dbg !10127
  br label %if.end28, !dbg !10128

if.end28:                                         ; preds = %if.then12, %if.end10, %entry, %if.then24
  ret void, !dbg !10129
}

; Function Attrs: nounwind uwtable
define internal void @has_dependence_note_mem_dep(%struct.rtx_def* %mem, %struct.rtx_def* %pending_mem, %struct.rtx_def* %pending_insn, i32 %ds) #5 !dbg !10130 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !10134, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending_mem, metadata !10135, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pending_insn, metadata !10136, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i32 %ds, metadata !10137, metadata !DIExpression()), !dbg !10141
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 2), align 8, !dbg !10142
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 3), align 8, !dbg !10143
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i64 0, i32 0, !dbg !10143
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !10143
  %call = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %0, %struct.rtx_def* %2) #6, !dbg !10144
  %tobool = icmp eq i8 %call, 0, !dbg !10144
  br i1 %tobool, label %if.then, label %if.end, !dbg !10145

if.then:                                          ; preds = %entry
  %3 = load i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !10146
  %idxprom = zext i32 %3 to i64, !dbg !10147
  %arrayidx = getelementptr inbounds %struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 4, i64 %idxprom, !dbg !10147
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !10138, metadata !DIExpression()), !dbg !10148
  %4 = load i32, i32* %arrayidx, align 4, !dbg !10149
  %call1 = tail call i32 @ds_full_merge(i32 %ds, i32 %4, %struct.rtx_def* %pending_mem, %struct.rtx_def* %mem) #6, !dbg !10150
  store i32 %call1, i32* %arrayidx, align 4, !dbg !10151
  br label %if.end, !dbg !10152

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !10153
}

; Function Attrs: nounwind uwtable
define internal void @has_dependence_note_dep(%struct.rtx_def* %pro, i32 %ds) #5 !dbg !10154 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pro, metadata !10158, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i32 %ds, metadata !10159, metadata !DIExpression()), !dbg !10163
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 2), align 8, !dbg !10164
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 3), align 8, !dbg !10165
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i64 0, i32 0, !dbg !10165
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !10165
  %call = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %0, %struct.rtx_def* %2) #6, !dbg !10166
  %tobool = icmp eq i8 %call, 0, !dbg !10166
  br i1 %tobool, label %if.then, label %if.end, !dbg !10167

if.then:                                          ; preds = %entry
  %3 = load i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 1), align 8, !dbg !10168
  %idxprom = zext i32 %3 to i64, !dbg !10169
  %arrayidx = getelementptr inbounds %struct.anon.2, %struct.anon.2* @has_dependence_data, i64 0, i32 4, i64 %idxprom, !dbg !10169
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !10160, metadata !DIExpression()), !dbg !10170
  %4 = load i32, i32* %arrayidx, align 4, !dbg !10171
  %call1 = tail call i32 @ds_full_merge(i32 %ds, i32 %4, %struct.rtx_def* null, %struct.rtx_def* null) #6, !dbg !10172
  store i32 %call1, i32* %arrayidx, align 4, !dbg !10173
  br label %if.end, !dbg !10174

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !10175
}

declare dso_local zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @tick_check_note_mem_dep(%struct.rtx_def* %mem1, %struct.rtx_def* %mem2, %struct.rtx_def* %pro, i32 %ds) #5 !dbg !10176 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem1, metadata !10178, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem2, metadata !10179, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pro, metadata !10180, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata i32 %ds, metadata !10181, metadata !DIExpression()), !dbg !10184
  %call = tail call i32 @ds_to_dt(i32 %ds) #6, !dbg !10185
  %cmp = icmp eq i32 %call, 0, !dbg !10186
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !10185

cond.true:                                        ; preds = %entry
  %call1 = tail call i32 @estimate_dep_weak(%struct.rtx_def* %mem1, %struct.rtx_def* %mem2) #6, !dbg !10187
  br label %cond.end, !dbg !10185

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ 0, %entry ], !dbg !10185
  call void @llvm.dbg.value(metadata i32 %cond, metadata !10182, metadata !DIExpression()), !dbg !10184
  tail call fastcc void @tick_check_dep_with_dw(%struct.rtx_def* %pro, i32 %ds, i32 %cond) #8, !dbg !10188
  ret void, !dbg !10189
}

; Function Attrs: nounwind uwtable
define internal void @tick_check_note_dep(%struct.rtx_def* %pro, i32 %ds) #5 !dbg !10190 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pro, metadata !10192, metadata !DIExpression()), !dbg !10194
  call void @llvm.dbg.value(metadata i32 %ds, metadata !10193, metadata !DIExpression()), !dbg !10194
  tail call fastcc void @tick_check_dep_with_dw(%struct.rtx_def* %pro, i32 %ds, i32 0) #8, !dbg !10195
  ret void, !dbg !10196
}

declare dso_local i32 @ds_to_dt(i32) local_unnamed_addr #2

declare dso_local i32 @estimate_dep_weak(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @tick_check_dep_with_dw(%struct.rtx_def* %pro_insn, i32 %ds, i32 %dw) unnamed_addr #5 !dbg !10197 {
entry:
  %_dep = alloca %struct._dep, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pro_insn, metadata !10201, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 %ds, metadata !10202, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 %dw, metadata !10203, metadata !DIExpression()), !dbg !10215
  %0 = load %struct._expr*, %struct._expr** @tick_check_data.0, align 8, !dbg !10216
  call void @llvm.dbg.value(metadata %struct._expr* %0, metadata !10204, metadata !DIExpression()), !dbg !10215
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %0, i64 0, i32 0, !dbg !10217
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !10217
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i64 0, i32 0, !dbg !10217
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !10217
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !10205, metadata !DIExpression()), !dbg !10215
  %cmp = icmp eq %struct.rtx_def* %2, %pro_insn, !dbg !10218
  br i1 %cmp, label %cleanup.cont79, label %if.then, !dbg !10219

if.then:                                          ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pro_insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10220
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !10220
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10220
  %tobool = icmp eq %struct.rtx_def* %4, null, !dbg !10220
  br i1 %tobool, label %cleanup, label %land.lhs.true, !dbg !10220

land.lhs.true:                                    ; preds = %if.then
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pro_insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !10220
  %rt_rtx4 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !10220
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !10220
  %tobool5 = icmp eq %struct.rtx_def* %6, null, !dbg !10220
  br i1 %tobool5, label %cleanup, label %lor.lhs.false, !dbg !10222

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10223
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %7, i64 0, i32 0, !dbg !10223
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10223
  %base9 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i64 0, i32 0, !dbg !10223
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pro_insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10223
  %rt_int = bitcast %union.rtunion_def* %arrayidx15 to i32*, !dbg !10223
  %9 = load i32, i32* %rt_int, align 8, !dbg !10223
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base9, i32 %9) #8, !dbg !10223
  %call16 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #8, !dbg !10223
  %sched_times = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call16, i64 0, i32 0, i32 5, !dbg !10223
  %10 = load i32, i32* %sched_times, align 8, !dbg !10223
  %sched_times17 = getelementptr inbounds %struct._expr, %struct._expr* %0, i64 0, i32 5, !dbg !10224
  %11 = load i32, i32* %sched_times17, align 8, !dbg !10224
  %sub = sub nsw i32 %10, %11, !dbg !10225
  %cmp18 = icmp sgt i32 %sub, 1, !dbg !10226
  br i1 %cmp18, label %cleanup, label %if.end, !dbg !10227

if.end:                                           ; preds = %lor.lhs.false
  %call20 = tail call i32 @ds_to_dt(i32 %ds) #6, !dbg !10228
  call void @llvm.dbg.value(metadata i32 %call20, metadata !10206, metadata !DIExpression()), !dbg !10229
  %cmp21 = icmp eq i32 %call20, 0, !dbg !10230
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !10232

if.then22:                                        ; preds = %if.end
  store i1 true, i1* @tick_check_data.2, align 4, !dbg !10233
  br label %if.end23, !dbg !10234

if.end23:                                         ; preds = %if.then22, %if.end
  %12 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10235
  %base26 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %12, i64 0, i32 0, !dbg !10235
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10235
  %base32 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i64 0, i32 0, !dbg !10235
  %14 = load i32, i32* %rt_int, align 8, !dbg !10235
  %call40 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base32, i32 %14) #8, !dbg !10235
  %call41 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base26, i32 %call40) #8, !dbg !10235
  %sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call41, i64 0, i32 10, !dbg !10235
  %15 = load i32, i32* %sched_cycle, align 8, !dbg !10235
  %cmp42 = icmp sgt i32 %15, 0, !dbg !10235
  br i1 %cmp42, label %cond.end45, label %cond.true43, !dbg !10235

cond.true43:                                      ; preds = %if.end23
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3338, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10235
  br label %cond.end45, !dbg !10235

cond.end45:                                       ; preds = %if.end23, %cond.true43
  %16 = bitcast %struct._dep* %_dep to i8*, !dbg !10236
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #7, !dbg !10236
  call void @llvm.dbg.value(metadata %struct._dep* %_dep, metadata !10213, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.value(metadata %struct._dep* %_dep, metadata !10210, metadata !DIExpression(DW_OP_deref)), !dbg !10237
  call void @init_dep(%struct._dep* nonnull %_dep, %struct.rtx_def* %pro_insn, %struct.rtx_def* %2, i32 %call20) #6, !dbg !10238
  %17 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10239
  %base49 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %17, i64 0, i32 0, !dbg !10239
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10239
  %base55 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i64 0, i32 0, !dbg !10239
  %19 = load i32, i32* %rt_int, align 8, !dbg !10239
  %call63 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base55, i32 %19) #8, !dbg !10239
  %call64 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base49, i32 %call63) #8, !dbg !10239
  %sched_cycle65 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call64, i64 0, i32 10, !dbg !10239
  %20 = load i32, i32* %sched_cycle65, align 8, !dbg !10239
  call void @llvm.dbg.value(metadata %struct._dep* %_dep, metadata !10210, metadata !DIExpression(DW_OP_deref)), !dbg !10237
  %call66 = call i32 @dep_cost_1(%struct._dep* nonnull %_dep, i32 %dw) #6, !dbg !10240
  %add = add nsw i32 %20, %call66, !dbg !10241
  call void @llvm.dbg.value(metadata i32 %add, metadata !10209, metadata !DIExpression()), !dbg !10229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #7, !dbg !10242
  %21 = load i32, i32* @tick_check_data.1, align 8, !dbg !10243
  %cmp67 = icmp sgt i32 %add, %21, !dbg !10245
  br i1 %cmp67, label %land.lhs.true68, label %cleanup, !dbg !10246

land.lhs.true68:                                  ; preds = %cond.end45
  %cmp69 = icmp ne i32 %call20, 0, !dbg !10247
  %.b = load i1, i1* @tick_check_data.2, align 4, !dbg !10248
  %or.cond = and i1 %cmp69, %.b, !dbg !10249
  br i1 %or.cond, label %cleanup, label %if.then72, !dbg !10249

if.then72:                                        ; preds = %land.lhs.true68
  store i32 %add, i32* @tick_check_data.1, align 8, !dbg !10250
  br label %cleanup, !dbg !10251

cleanup:                                          ; preds = %land.lhs.true, %if.then, %cond.end45, %if.then72, %land.lhs.true68, %lor.lhs.false
  ret void

cleanup.cont79:                                   ; preds = %entry
  ret void, !dbg !10252
}

declare dso_local void @init_dep(%struct._dep*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local i32 @dep_cost_1(%struct._dep*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !10253 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10257, metadata !DIExpression()), !dbg !10258
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #8, !dbg !10259
  %tobool = icmp eq i8 %call, 0, !dbg !10259
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !10259

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10259
  br label %cond.end, !dbg !10259

cond.end:                                         ; preds = %entry, %cond.true
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !10260
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !10260
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !10260
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !10260

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !10260
  br label %cond.end5, !dbg !10260

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !10260
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !10260
  ret %struct.edge_def* %call7, !dbg !10261
}

declare dso_local zeroext i8 @can_merge_blocks_p(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !10262 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10264, metadata !DIExpression()), !dbg !10265
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #8, !dbg !10266
  %tobool = icmp eq i8 %call, 0, !dbg !10266
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !10266

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10266
  br label %cond.end, !dbg !10266

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !10267
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !10267
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !10267
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !10267

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !10267
  br label %cond.end5, !dbg !10267

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !10267
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !10267
  ret %struct.edge_def* %call7, !dbg !10268
}

declare dso_local i32 @post_order_compute(i32*, i8 zeroext, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_sel_global_bb_info_def_base_length(%struct.VEC_sel_global_bb_info_def_base* %vec_) unnamed_addr #0 !dbg !10269 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_global_bb_info_def_base* %vec_, metadata !10275, metadata !DIExpression()), !dbg !10276
  %tobool = icmp eq %struct.VEC_sel_global_bb_info_def_base* %vec_, null, !dbg !10277
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10277

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_base, %struct.VEC_sel_global_bb_info_def_base* %vec_, i64 0, i32 0, !dbg !10277
  %0 = load i32, i32* %num, align 8, !dbg !10277
  br label %cond.end, !dbg !10277

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !10277
  ret i32 %cond, !dbg !10277
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_sel_global_bb_info_def_heap_safe_grow(%struct.VEC_sel_global_bb_info_def_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !10278 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, metadata !10280, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %size_, metadata !10281, metadata !DIExpression()), !dbg !10282
  %cmp = icmp sgt i32 %size_, -1, !dbg !10283
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10283

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !10283
  %tobool = icmp eq %struct.VEC_sel_global_bb_info_def_heap* %0, null, !dbg !10283
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10283

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %0, i64 0, i32 0, !dbg !10283
  br label %cond.end, !dbg !10283

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_sel_global_bb_info_def_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !10283
  %call = tail call fastcc i32 @VEC_sel_global_bb_info_def_base_length(%struct.VEC_sel_global_bb_info_def_base* %cond) #8, !dbg !10283
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !10283
  %tobool2 = icmp eq %struct.VEC_sel_global_bb_info_def_heap* %1, null, !dbg !10283
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !10283

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %1, i64 0, i32 0, i32 0, !dbg !10283
  %2 = load i32, i32* %num, align 8, !dbg !10283
  br label %cond.end11, !dbg !10283

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !10283
  %sub = sub nsw i32 %size_, %cond12, !dbg !10283
  %call13 = tail call fastcc i32 @VEC_sel_global_bb_info_def_heap_reserve_exact(%struct.VEC_sel_global_bb_info_def_heap** nonnull @sel_global_bb_info, i32 %sub) #8, !dbg !10283
  %3 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !10283
  %num20 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %3, i64 0, i32 0, i32 0, !dbg !10283
  store i32 %size_, i32* %num20, align 8, !dbg !10283
  ret void, !dbg !10283
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_address(%struct.VEC_sel_global_bb_info_def_base* %vec_) unnamed_addr #0 !dbg !10284 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_global_bb_info_def_base* %vec_, metadata !10288, metadata !DIExpression()), !dbg !10289
  %tobool = icmp eq %struct.VEC_sel_global_bb_info_def_base* %vec_, null, !dbg !10290
  %arraydecay = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_base, %struct.VEC_sel_global_bb_info_def_base* %vec_, i64 0, i32 2, i64 0, !dbg !10290
  %cond = select i1 %tobool, %struct.sel_global_bb_info_def* null, %struct.sel_global_bb_info_def* %arraydecay, !dbg !10290
  ret %struct.sel_global_bb_info_def* %cond, !dbg !10290
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_sel_global_bb_info_def_heap_reserve_exact(%struct.VEC_sel_global_bb_info_def_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10291 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, metadata !10295, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !10296, metadata !DIExpression()), !dbg !10298
  %0 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !10299
  %tobool = icmp eq %struct.VEC_sel_global_bb_info_def_heap* %0, null, !dbg !10299
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10299

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %0, i64 0, i32 0, !dbg !10299
  br label %cond.end, !dbg !10299

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_sel_global_bb_info_def_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10299
  %call = tail call fastcc i32 @VEC_sel_global_bb_info_def_base_space(%struct.VEC_sel_global_bb_info_def_base* %cond, i32 %alloc_) #8, !dbg !10299
  %tobool1 = icmp eq i32 %call, 0, !dbg !10299
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !10299
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !10297, metadata !DIExpression()), !dbg !10298
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10299

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info to i8**), align 8, !dbg !10300
  %call3 = tail call i8* @vec_heap_o_reserve_exact(i8* %1, i32 %alloc_, i64 8, i64 16) #6, !dbg !10300
  store i8* %call3, i8** bitcast (%struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info to i8**), align 8, !dbg !10300
  br label %if.end, !dbg !10300

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !10299
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_sel_global_bb_info_def_base_space(%struct.VEC_sel_global_bb_info_def_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10302 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_global_bb_info_def_base* %vec_, metadata !10306, metadata !DIExpression()), !dbg !10308
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !10307, metadata !DIExpression()), !dbg !10308
  %tobool = icmp eq %struct.VEC_sel_global_bb_info_def_base* %vec_, null, !dbg !10309
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10309

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_base, %struct.VEC_sel_global_bb_info_def_base* %vec_, i64 0, i32 1, !dbg !10309
  %0 = load i32, i32* %alloc, align 4, !dbg !10309
  %num = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_base, %struct.VEC_sel_global_bb_info_def_base* %vec_, i64 0, i32 0, !dbg !10309
  %1 = load i32, i32* %num, align 8, !dbg !10309
  %sub = sub i32 %0, %1, !dbg !10309
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !10309
  br label %cond.end, !dbg !10309

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !10309
  br label %cond.end, !dbg !10309

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !10309
  ret i32 %cond, !dbg !10309
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_sel_insn_data_def_base_length(%struct.VEC_sel_insn_data_def_base* %vec_) unnamed_addr #0 !dbg !10310 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_insn_data_def_base* %vec_, metadata !10316, metadata !DIExpression()), !dbg !10317
  %tobool = icmp eq %struct.VEC_sel_insn_data_def_base* %vec_, null, !dbg !10318
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10318

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_sel_insn_data_def_base, %struct.VEC_sel_insn_data_def_base* %vec_, i64 0, i32 0, !dbg !10318
  %0 = load i32, i32* %num, align 8, !dbg !10318
  br label %cond.end, !dbg !10318

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !10318
  ret i32 %cond, !dbg !10318
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_sel_insn_data_def_base_space(%struct.VEC_sel_insn_data_def_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10319 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_insn_data_def_base* %vec_, metadata !10323, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !10324, metadata !DIExpression()), !dbg !10325
  %tobool = icmp eq %struct.VEC_sel_insn_data_def_base* %vec_, null, !dbg !10326
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10326

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_sel_insn_data_def_base, %struct.VEC_sel_insn_data_def_base* %vec_, i64 0, i32 1, !dbg !10326
  %0 = load i32, i32* %alloc, align 4, !dbg !10326
  %num = getelementptr inbounds %struct.VEC_sel_insn_data_def_base, %struct.VEC_sel_insn_data_def_base* %vec_, i64 0, i32 0, !dbg !10326
  %1 = load i32, i32* %num, align 8, !dbg !10326
  %sub = sub i32 %0, %1, !dbg !10326
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !10326
  br label %cond.end, !dbg !10326

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !10326
  br label %cond.end, !dbg !10326

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !10326
  ret i32 %cond, !dbg !10326
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_sel_insn_data_def_heap_safe_grow_cleared(%struct.VEC_sel_insn_data_def_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !10327 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_insn_data_def_heap** @s_i_d, metadata !10332, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 %size_, metadata !10333, metadata !DIExpression()), !dbg !10335
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10336
  %tobool = icmp eq %struct.VEC_sel_insn_data_def_heap* %0, null, !dbg !10336
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10336

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !10336
  br label %cond.end, !dbg !10336

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10336
  %call = tail call fastcc i32 @VEC_sel_insn_data_def_base_length(%struct.VEC_sel_insn_data_def_base* %cond) #8, !dbg !10336
  call void @llvm.dbg.value(metadata i32 %call, metadata !10334, metadata !DIExpression()), !dbg !10335
  tail call fastcc void @VEC_sel_insn_data_def_heap_safe_grow(%struct.VEC_sel_insn_data_def_heap** nonnull @s_i_d, i32 %size_) #8, !dbg !10336
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10336
  %tobool1 = icmp eq %struct.VEC_sel_insn_data_def_heap* %1, null, !dbg !10336
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !10336

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i64 0, i32 0, !dbg !10336
  br label %cond.end5, !dbg !10336

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_sel_insn_data_def_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !10336
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_address(%struct.VEC_sel_insn_data_def_base* %cond6) #8, !dbg !10336
  %idxprom = sext i32 %call to i64, !dbg !10336
  %arrayidx = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 %idxprom, !dbg !10336
  %2 = bitcast %struct._sel_insn_data* %arrayidx to i8*, !dbg !10336
  %sub = sub nsw i32 %size_, %call, !dbg !10336
  %conv = sext i32 %sub to i64, !dbg !10336
  %mul = mul nsw i64 %conv, 320, !dbg !10336
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !10336
  ret void, !dbg !10336
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_sel_insn_data_def_heap_safe_grow(%struct.VEC_sel_insn_data_def_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !10337 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_insn_data_def_heap** @s_i_d, metadata !10339, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata i32 %size_, metadata !10340, metadata !DIExpression()), !dbg !10341
  %cmp = icmp sgt i32 %size_, -1, !dbg !10342
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10342

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10342
  %tobool = icmp eq %struct.VEC_sel_insn_data_def_heap* %0, null, !dbg !10342
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10342

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !10342
  br label %cond.end, !dbg !10342

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !10342
  %call = tail call fastcc i32 @VEC_sel_insn_data_def_base_length(%struct.VEC_sel_insn_data_def_base* %cond) #8, !dbg !10342
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10342
  %tobool2 = icmp eq %struct.VEC_sel_insn_data_def_heap* %1, null, !dbg !10342
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !10342

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i64 0, i32 0, i32 0, !dbg !10342
  %2 = load i32, i32* %num, align 8, !dbg !10342
  br label %cond.end11, !dbg !10342

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !10342
  %sub = sub nsw i32 %size_, %cond12, !dbg !10342
  %call13 = tail call fastcc i32 @VEC_sel_insn_data_def_heap_reserve_exact(%struct.VEC_sel_insn_data_def_heap** nonnull @s_i_d, i32 %sub) #8, !dbg !10342
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10342
  %num20 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i64 0, i32 0, i32 0, !dbg !10342
  store i32 %size_, i32* %num20, align 8, !dbg !10342
  ret void, !dbg !10342
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_address(%struct.VEC_sel_insn_data_def_base* %vec_) unnamed_addr #0 !dbg !10343 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_insn_data_def_base* %vec_, metadata !10347, metadata !DIExpression()), !dbg !10348
  %tobool = icmp eq %struct.VEC_sel_insn_data_def_base* %vec_, null, !dbg !10349
  %arraydecay = getelementptr inbounds %struct.VEC_sel_insn_data_def_base, %struct.VEC_sel_insn_data_def_base* %vec_, i64 0, i32 2, i64 0, !dbg !10349
  %cond = select i1 %tobool, %struct._sel_insn_data* null, %struct._sel_insn_data* %arraydecay, !dbg !10349
  ret %struct._sel_insn_data* %cond, !dbg !10349
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_sel_insn_data_def_heap_reserve_exact(%struct.VEC_sel_insn_data_def_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10350 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_insn_data_def_heap** @s_i_d, metadata !10354, metadata !DIExpression()), !dbg !10357
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !10355, metadata !DIExpression()), !dbg !10357
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10358
  %tobool = icmp eq %struct.VEC_sel_insn_data_def_heap* %0, null, !dbg !10358
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10358

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !10358
  br label %cond.end, !dbg !10358

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10358
  %call = tail call fastcc i32 @VEC_sel_insn_data_def_base_space(%struct.VEC_sel_insn_data_def_base* %cond, i32 %alloc_) #8, !dbg !10358
  %tobool1 = icmp eq i32 %call, 0, !dbg !10358
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !10358
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !10356, metadata !DIExpression()), !dbg !10357
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10358

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_sel_insn_data_def_heap** @s_i_d to i8**), align 8, !dbg !10359
  %call3 = tail call i8* @vec_heap_o_reserve_exact(i8* %1, i32 %alloc_, i64 8, i64 320) #6, !dbg !10359
  store i8* %call3, i8** bitcast (%struct.VEC_sel_insn_data_def_heap** @s_i_d to i8**), align 8, !dbg !10359
  br label %if.end, !dbg !10359

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !10358
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_sel_insn_data_def_heap_free(%struct.VEC_sel_insn_data_def_heap** %vec_) unnamed_addr #0 !dbg !10361 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_insn_data_def_heap** @s_i_d, metadata !10365, metadata !DIExpression()), !dbg !10366
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10367
  %tobool = icmp eq %struct.VEC_sel_insn_data_def_heap* %0, null, !dbg !10367
  br i1 %tobool, label %if.end, label %if.then, !dbg !10369

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_sel_insn_data_def_heap* %0 to i8*, !dbg !10369
  tail call void @free(i8* nonnull %1) #6, !dbg !10367
  br label %if.end, !dbg !10367

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_sel_insn_data_def_heap* null, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10369
  ret void, !dbg !10369
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @insn_is_the_only_one_in_bb_p(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !10370 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !10372, metadata !DIExpression()), !dbg !10373
  %call = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) #8, !dbg !10374
  %tobool = icmp eq i8 %call, 0, !dbg !10374
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !10375

land.rhs:                                         ; preds = %entry
  %call1 = tail call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %insn) #8, !dbg !10376
  %tobool3 = icmp ne i8 %call1, 0, !dbg !10375
  %phitmp = zext i1 %tobool3 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !10377
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_initial_data_sets(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !10378 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10380, metadata !DIExpression()), !dbg !10381
  %0 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !10382
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %0, i64 0, i32 0, !dbg !10382
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !10382
  %1 = load i32, i32* %index, align 8, !dbg !10382
  %call = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base, i32 %1) #8, !dbg !10382
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call, i64 0, i32 0, !dbg !10382
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !10382
  %tobool1 = icmp eq %struct.bitmap_head_def* %2, null, !dbg !10382
  br i1 %tobool1, label %if.else, label %if.then, !dbg !10384

if.then:                                          ; preds = %entry
  %3 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !10385
  %base4 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %3, i64 0, i32 0, !dbg !10385
  %4 = load i32, i32* %index, align 8, !dbg !10385
  %call9 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base4, i32 %4) #8, !dbg !10385
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call9, i64 0, i32 1, !dbg !10385
  store i8 0, i8* %lv_set_valid_p, align 8, !dbg !10386
  br label %if.end, !dbg !10385

if.else:                                          ; preds = %entry
  %call10 = tail call %struct.bitmap_head_def* @get_regset_from_pool() #8, !dbg !10387
  %5 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !10388
  %base13 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %5, i64 0, i32 0, !dbg !10388
  %6 = load i32, i32* %index, align 8, !dbg !10388
  %call18 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base13, i32 %6) #8, !dbg !10388
  %lv_set19 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call18, i64 0, i32 0, !dbg !10388
  store %struct.bitmap_head_def* %call10, %struct.bitmap_head_def** %lv_set19, align 8, !dbg !10389
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  tail call fastcc void @invalidate_av_set(%struct.basic_block_def* %bb) #8, !dbg !10390
  ret void, !dbg !10391
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_insn_data(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !10392 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !10394, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.value(metadata %struct._sel_insn_data* @_insn_init_ssid, metadata !10396, metadata !DIExpression()), !dbg !10397
  %bf.load = load i8, i8* getelementptr inbounds (%struct._sel_insn_data, %struct._sel_insn_data* @_insn_init_ssid, i64 0, i32 13), align 4, !dbg !10398
  %bf.clear = and i8 %bf.load, 2, !dbg !10398
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !10398
  br i1 %tobool, label %land.lhs.true, label %cond.true, !dbg !10398

land.lhs.true:                                    ; preds = %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct._sel_insn_data, %struct._sel_insn_data* @_insn_init_ssid, i64 0, i32 9), align 8, !dbg !10398
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !10398
  br i1 %cmp, label %land.lhs.true1, label %cond.true, !dbg !10398

land.lhs.true1:                                   ; preds = %land.lhs.true
  %bf.clear4 = and i8 %bf.load, 4, !dbg !10398
  %tobool6 = icmp eq i8 %bf.clear4, 0, !dbg !10398
  br i1 %tobool6, label %land.lhs.true7, label %cond.true, !dbg !10398

land.lhs.true7:                                   ; preds = %land.lhs.true1
  %1 = load i32, i32* getelementptr inbounds (%struct._sel_insn_data, %struct._sel_insn_data* @_insn_init_ssid, i64 0, i32 10), align 8, !dbg !10398
  %cmp8 = icmp eq i32 %1, 0, !dbg !10398
  br i1 %cmp8, label %cond.end, label %cond.true, !dbg !10398

cond.true:                                        ; preds = %land.lhs.true1, %entry, %land.lhs.true7, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4026, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10398
  br label %cond.end, !dbg !10398

cond.end:                                         ; preds = %land.lhs.true7, %cond.true
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !10399
  %bf.load9 = load i32, i32* %2, align 8, !dbg !10399
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !10399
  %cmp11 = icmp eq i32 %bf.clear10, 8, !dbg !10399
  br i1 %cmp11, label %land.lhs.true23, label %lor.lhs.false, !dbg !10399

lor.lhs.false:                                    ; preds = %cond.end
  %cmp14 = icmp eq i32 %bf.clear10, 7, !dbg !10399
  br i1 %cmp14, label %land.lhs.true23, label %lor.lhs.false15, !dbg !10399

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %cmp18 = icmp eq i32 %bf.clear10, 9, !dbg !10399
  br i1 %cmp18, label %land.lhs.true23, label %lor.lhs.false19, !dbg !10399

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %cmp22 = icmp eq i32 %bf.clear10, 10, !dbg !10399
  br i1 %cmp22, label %land.lhs.true23, label %cond.true30, !dbg !10399

land.lhs.true23:                                  ; preds = %lor.lhs.false19, %lor.lhs.false15, %lor.lhs.false, %cond.end
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10399
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i64 0, i32 0, !dbg !10399
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10399
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !10399
  %4 = load i32, i32* %rt_int, align 8, !dbg !10399
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %4) #8, !dbg !10399
  %cmp29 = icmp sgt i32 %call, 0, !dbg !10399
  br i1 %cmp29, label %cond.end32, label %cond.true30, !dbg !10399

cond.true30:                                      ; preds = %land.lhs.true23, %lor.lhs.false19
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4027, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10399
  br label %cond.end32, !dbg !10399

cond.end32:                                       ; preds = %land.lhs.true23, %cond.true30
  %5 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10400
  %base36 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %5, i64 0, i32 0, !dbg !10400
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10400
  %base42 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !10400
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10400
  %rt_int49 = bitcast %union.rtunion_def* %arrayidx48 to i32*, !dbg !10400
  %7 = load i32, i32* %rt_int49, align 8, !dbg !10400
  %call50 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base42, i32 %7) #8, !dbg !10400
  %call51 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base36, i32 %call50) #8, !dbg !10400
  %expr52 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call51, i64 0, i32 0, !dbg !10400
  call void @llvm.dbg.value(metadata %struct._expr* %expr52, metadata !10395, metadata !DIExpression()), !dbg !10397
  tail call void @copy_expr(%struct._expr* %expr52, %struct._expr* getelementptr inbounds (%struct._sel_insn_data, %struct._sel_insn_data* @_insn_init_ssid, i64 0, i32 0)) #8, !dbg !10401
  %8 = load i32, i32* getelementptr inbounds (%struct._sel_insn_data, %struct._sel_insn_data* @_insn_init_ssid, i64 0, i32 2), align 4, !dbg !10402
  tail call fastcc void @prepare_insn_expr(%struct.rtx_def* %insn, i32 %8) #8, !dbg !10403
  %.b1 = load i1, i1* @insn_init_create_new_vinsn_p, align 1, !dbg !10404
  br i1 %.b1, label %if.then, label %if.end, !dbg !10406

if.then:                                          ; preds = %cond.end32
  %.b = load i1, i1* @init_insn_force_unique_p, align 1, !dbg !10407
  %9 = zext i1 %.b to i8, !dbg !10407
  %call55 = tail call fastcc %struct.vinsn_def* @vinsn_create(%struct.rtx_def* %insn, i8 zeroext %9) #8, !dbg !10408
  tail call void @change_vinsn_in_expr(%struct._expr* %expr52, %struct.vinsn_def* %call55) #8, !dbg !10409
  br label %if.end, !dbg !10409

if.end:                                           ; preds = %cond.end32, %if.then
  %call56 = tail call fastcc zeroext i8 @first_time_insn_init(%struct.rtx_def* %insn) #8, !dbg !10410
  %tobool57 = icmp eq i8 %call56, 0, !dbg !10410
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !10412

if.then58:                                        ; preds = %if.end
  tail call fastcc void @init_first_time_insn_data(%struct.rtx_def* %insn) #8, !dbg !10413
  br label %if.end59, !dbg !10413

if.end59:                                         ; preds = %if.end, %if.then58
  ret void, !dbg !10414
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_simplejump_data(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !10415 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !10417, metadata !DIExpression()), !dbg !10418
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10419
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !10419
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10419
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !10419
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10419
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !10419
  %2 = load i32, i32* %rt_int, align 8, !dbg !10419
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #8, !dbg !10419
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #8, !dbg !10419
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, !dbg !10419
  %call8 = tail call fastcc %struct.vinsn_def* @vinsn_create(%struct.rtx_def* %insn, i8 zeroext 0) #8, !dbg !10420
  tail call fastcc void @init_expr(%struct._expr* %expr, %struct.vinsn_def* %call8, i32 0, i32 10000, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, %struct.VEC_expr_history_def_heap* null, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, i8 zeroext 1) #8, !dbg !10421
  %call9 = tail call fastcc i32 @get_seqno_of_a_pred(%struct.rtx_def* %insn) #8, !dbg !10422
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10423
  %base12 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i64 0, i32 0, !dbg !10423
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10423
  %base18 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !10423
  %5 = load i32, i32* %rt_int, align 8, !dbg !10423
  %call26 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base18, i32 %5) #8, !dbg !10423
  %call27 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base12, i32 %call26) #8, !dbg !10423
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call27, i64 0, i32 2, !dbg !10423
  store i32 %call9, i32* %seqno, align 4, !dbg !10424
  tail call fastcc void @init_first_time_insn_data(%struct.rtx_def* %insn) #8, !dbg !10425
  ret void, !dbg !10426
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_seqno_of_a_pred(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !10427 {
entry:
  %succ = alloca %struct.rtx_def*, align 8
  %si = alloca %struct.succ_iterator, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  %preds = alloca %struct.rtx_def**, align 8
  %n = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !10429, metadata !DIExpression()), !dbg !10442
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10443
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !10443
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10443
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !10443
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10443
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !10443
  %2 = load i32, i32* %rt_int, align 8, !dbg !10443
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #8, !dbg !10443
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #8, !dbg !10443
  %vinsn = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 0, !dbg !10443
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !10443
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i64 0, i32 1, i32 0, !dbg !10443
  %4 = load i32, i32* %type, align 8, !dbg !10443
  %cmp = icmp eq i32 %4, 36, !dbg !10443
  br i1 %cmp, label %cond.end10, label %cond.true8, !dbg !10443

cond.true8:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3812, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10443
  br label %cond.end10, !dbg !10443

cond.end10:                                       ; preds = %entry, %cond.true8
  %call12 = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) #8, !dbg !10444
  %tobool13 = icmp eq i8 %call12, 0, !dbg !10444
  br i1 %tobool13, label %if.then, label %if.else, !dbg !10445

if.then:                                          ; preds = %cond.end10
  %5 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10446
  %base16 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %5, i64 0, i32 0, !dbg !10446
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10446
  %base22 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !10446
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10446
  %rt_rtx = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !10446
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10446
  %arrayidx31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10446
  %rt_int32 = bitcast %union.rtunion_def* %arrayidx31 to i32*, !dbg !10446
  %9 = load i32, i32* %rt_int32, align 8, !dbg !10446
  %call33 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base22, i32 %9) #8, !dbg !10446
  %call34 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base16, i32 %call33) #8, !dbg !10446
  %seqno35 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call34, i64 0, i32 2, !dbg !10446
  %10 = load i32, i32* %seqno35, align 4, !dbg !10446
  call void @llvm.dbg.value(metadata i32 %10, metadata !10430, metadata !DIExpression()), !dbg !10442
  br label %if.end115, !dbg !10447

if.else:                                          ; preds = %cond.end10
  %arrayidx38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !10448
  %rt_bb = bitcast %struct.object_block** %arrayidx38 to %struct.basic_block_def**, !dbg !10448
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !10448
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %11, metadata !10431, metadata !DIExpression()), !dbg !10449
  %call39 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %11) #8, !dbg !10450
  %tobool40 = icmp eq i8 %call39, 0, !dbg !10450
  br i1 %tobool40, label %if.else84, label %land.lhs.true, !dbg !10451

land.lhs.true:                                    ; preds = %if.else
  %call41 = tail call fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %11) #8, !dbg !10452
  %call42 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %call41) #8, !dbg !10453
  %tobool43 = icmp eq i8 %call42, 0, !dbg !10453
  br i1 %tobool43, label %if.then44, label %if.else84, !dbg !10454

if.then44:                                        ; preds = %land.lhs.true
  %12 = bitcast %struct.rtx_def** %succ to i8*, !dbg !10455
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7, !dbg !10455
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !10434, metadata !DIExpression()), !dbg !10456
  store %struct.rtx_def* null, %struct.rtx_def** %succ, align 8, !dbg !10457
  %13 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 0, !dbg !10458
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #7, !dbg !10458
  call void @llvm.dbg.value(metadata i8 1, metadata !10438, metadata !DIExpression()), !dbg !10456
  %14 = load i32, i32* @flag_sel_sched_pipelining_outer_loops, align 4, !dbg !10459
  %tobool45 = icmp ne i32 %14, 0, !dbg !10459
  %15 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !10459
  %tobool47 = icmp ne %struct.loop* %15, null, !dbg !10459
  %or.cond = and i1 %tobool45, %tobool47, !dbg !10459
  br i1 %or.cond, label %cond.end50, label %cond.true48, !dbg !10459

cond.true48:                                      ; preds = %if.then44
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3831, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10459
  br label %cond.end50, !dbg !10459

cond.end50:                                       ; preds = %if.then44, %cond.true48
  %16 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp, i64 0, i32 0, !dbg !10460
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %16) #7, !dbg !10460
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !10434, metadata !DIExpression(DW_OP_deref)), !dbg !10456
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %insn, i32 9) #8, !dbg !10460
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %16, i64 64, i1 false), !dbg !10460
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %16) #7, !dbg !10460
  br label %for.cond, !dbg !10460

for.cond:                                         ; preds = %for.inc, %cond.end50
  %first.0 = phi i8 [ 1, %cond.end50 ], [ 0, %for.inc ], !dbg !10456
  call void @llvm.dbg.value(metadata i8 %first.0, metadata !10438, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !10434, metadata !DIExpression(DW_OP_deref)), !dbg !10456
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !10437, metadata !DIExpression(DW_OP_deref)), !dbg !10456
  %call52 = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %si, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %insn, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #8, !dbg !10462
  %tobool53 = icmp eq i8 %call52, 0, !dbg !10460
  br i1 %tobool53, label %for.end, label %for.body, !dbg !10460

for.body:                                         ; preds = %for.cond
  %tobool54 = icmp eq i8 %first.0, 0, !dbg !10464
  br i1 %tobool54, label %cond.true55, label %for.inc, !dbg !10464

cond.true55:                                      ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3835, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10464
  br label %for.inc, !dbg !10464

for.inc:                                          ; preds = %for.body, %cond.true55
  call void @llvm.dbg.value(metadata i8 0, metadata !10438, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !10437, metadata !DIExpression(DW_OP_deref)), !dbg !10456
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %si) #8, !dbg !10462
  br label %for.cond, !dbg !10462, !llvm.loop !10466

for.end:                                          ; preds = %for.cond
  %17 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !10468
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !10434, metadata !DIExpression()), !dbg !10456
  %cmp59 = icmp eq %struct.rtx_def* %17, null, !dbg !10468
  br i1 %cmp59, label %cond.true61, label %cond.end63, !dbg !10468

cond.true61:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3839, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10468
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !10469
  br label %cond.end63, !dbg !10468

cond.end63:                                       ; preds = %for.end, %cond.true61
  %18 = phi %struct.rtx_def* [ %17, %for.end ], [ %.pre, %cond.true61 ], !dbg !10469
  %19 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10469
  %base67 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %19, i64 0, i32 0, !dbg !10469
  %20 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10469
  %base73 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %20, i64 0, i32 0, !dbg !10469
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !10434, metadata !DIExpression()), !dbg !10456
  %arrayidx79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10469
  %rt_int80 = bitcast %union.rtunion_def* %arrayidx79 to i32*, !dbg !10469
  %21 = load i32, i32* %rt_int80, align 8, !dbg !10469
  %call81 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base73, i32 %21) #8, !dbg !10469
  %call82 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base67, i32 %call81) #8, !dbg !10469
  %seqno83 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call82, i64 0, i32 2, !dbg !10469
  %22 = load i32, i32* %seqno83, align 4, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %22, metadata !10430, metadata !DIExpression()), !dbg !10442
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #7, !dbg !10470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7, !dbg !10470
  br label %if.end115, !dbg !10471

if.else84:                                        ; preds = %land.lhs.true, %if.else
  %23 = bitcast %struct.rtx_def*** %preds to i8*, !dbg !10472
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #7, !dbg !10472
  %24 = bitcast i32* %n to i8*, !dbg !10473
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #7, !dbg !10473
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !10474
  call void @llvm.dbg.value(metadata %struct.rtx_def*** %preds, metadata !10439, metadata !DIExpression(DW_OP_deref)), !dbg !10475
  call void @llvm.dbg.value(metadata i32* %n, metadata !10441, metadata !DIExpression(DW_OP_deref)), !dbg !10475
  call fastcc void @cfg_preds(%struct.basic_block_def* %25, %struct.rtx_def*** nonnull %preds, i32* nonnull %n) #8, !dbg !10476
  %26 = load i32, i32* %n, align 4, !dbg !10477
  call void @llvm.dbg.value(metadata i32 %26, metadata !10441, metadata !DIExpression()), !dbg !10475
  %cmp89 = icmp eq i32 %26, 1, !dbg !10477
  br i1 %cmp89, label %cond.end93, label %cond.true91, !dbg !10477

cond.true91:                                      ; preds = %if.else84
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3848, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10477
  br label %cond.end93, !dbg !10477

cond.end93:                                       ; preds = %if.else84, %cond.true91
  %27 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10478
  %base97 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %27, i64 0, i32 0, !dbg !10478
  %28 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10478
  %base103 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %28, i64 0, i32 0, !dbg !10478
  %29 = load %struct.rtx_def**, %struct.rtx_def*** %preds, align 8, !dbg !10478
  call void @llvm.dbg.value(metadata %struct.rtx_def** %29, metadata !10439, metadata !DIExpression()), !dbg !10475
  %30 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8, !dbg !10478
  %arrayidx110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10478
  %rt_int111 = bitcast %union.rtunion_def* %arrayidx110 to i32*, !dbg !10478
  %31 = load i32, i32* %rt_int111, align 8, !dbg !10478
  %call112 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base103, i32 %31) #8, !dbg !10478
  %call113 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base97, i32 %call112) #8, !dbg !10478
  %seqno114 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call113, i64 0, i32 2, !dbg !10478
  %32 = load i32, i32* %seqno114, align 4, !dbg !10478
  call void @llvm.dbg.value(metadata i32 %32, metadata !10430, metadata !DIExpression()), !dbg !10442
  %33 = bitcast %struct.rtx_def*** %preds to i8**, !dbg !10479
  %34 = load i8*, i8** %33, align 8, !dbg !10479
  call void @free(i8* %34) #6, !dbg !10480
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #7, !dbg !10481
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #7, !dbg !10481
  br label %if.end115

if.end115:                                        ; preds = %cond.end63, %cond.end93, %if.then
  %seqno.1 = phi i32 [ %10, %if.then ], [ %32, %cond.end93 ], [ %22, %cond.end63 ], !dbg !10482
  call void @llvm.dbg.value(metadata i32 %seqno.1, metadata !10430, metadata !DIExpression()), !dbg !10442
  ret i32 %seqno.1, !dbg !10483
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !10484 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10486, metadata !DIExpression()), !dbg !10487
  %call = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) #8, !dbg !10488
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !10489
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !10489
  ret %struct.basic_block_def* %0, !dbg !10490
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %index) unnamed_addr #0 !dbg !10491 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !10495, metadata !DIExpression()), !dbg !10496
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !10497
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !10497
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !10497
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !10499
  %2 = load i32, i32* %block_info_size, align 8, !dbg !10499
  %cmp = icmp ugt i32 %2, %index, !dbg !10500
  br i1 %cmp, label %if.then, label %return, !dbg !10501

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !10502
  %3 = load i8**, i8*** %block_info, align 8, !dbg !10502
  %idxprom = zext i32 %index to i64, !dbg !10503
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !10503
  %4 = bitcast i8** %arrayidx3 to %struct.df_lr_bb_info**, !dbg !10503
  %5 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %4, align 8, !dbg !10503
  br label %return, !dbg !10504

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_lr_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !10505
  ret %struct.df_lr_bb_info* %retval.0, !dbg !10506
}

; Function Attrs: nounwind uwtable
define internal fastcc void @extend_region_bb_info() unnamed_addr #5 !dbg !10507 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10508
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !10508
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !10508
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !10508
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !10508
  tail call fastcc void @VEC_sel_region_bb_info_def_heap_safe_grow_cleared(%struct.VEC_sel_region_bb_info_def_heap** nonnull @sel_region_bb_info, i32 %2) #8, !dbg !10508
  ret void, !dbg !10509
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_sel_region_bb_info_def_heap_safe_grow_cleared(%struct.VEC_sel_region_bb_info_def_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !10510 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, metadata !10515, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i32 %size_, metadata !10516, metadata !DIExpression()), !dbg !10518
  %0 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !10519
  %tobool = icmp eq %struct.VEC_sel_region_bb_info_def_heap* %0, null, !dbg !10519
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10519

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %0, i64 0, i32 0, !dbg !10519
  br label %cond.end, !dbg !10519

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_sel_region_bb_info_def_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10519
  %call = tail call fastcc i32 @VEC_sel_region_bb_info_def_base_length(%struct.VEC_sel_region_bb_info_def_base* %cond) #8, !dbg !10519
  call void @llvm.dbg.value(metadata i32 %call, metadata !10517, metadata !DIExpression()), !dbg !10518
  tail call fastcc void @VEC_sel_region_bb_info_def_heap_safe_grow(%struct.VEC_sel_region_bb_info_def_heap** nonnull @sel_region_bb_info, i32 %size_) #8, !dbg !10519
  %1 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !10519
  %tobool1 = icmp eq %struct.VEC_sel_region_bb_info_def_heap* %1, null, !dbg !10519
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !10519

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %1, i64 0, i32 0, !dbg !10519
  br label %cond.end5, !dbg !10519

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !10519
  %call7 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_address(%struct.VEC_sel_region_bb_info_def_base* %cond6) #8, !dbg !10519
  %idxprom = sext i32 %call to i64, !dbg !10519
  %arrayidx = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call7, i64 %idxprom, !dbg !10519
  %2 = bitcast %struct.sel_region_bb_info_def* %arrayidx to i8*, !dbg !10519
  %sub = sub nsw i32 %size_, %call, !dbg !10519
  %conv = sext i32 %sub to i64, !dbg !10519
  %mul = mul nsw i64 %conv, 24, !dbg !10519
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !10519
  ret void, !dbg !10519
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_sel_region_bb_info_def_base_length(%struct.VEC_sel_region_bb_info_def_base* %vec_) unnamed_addr #0 !dbg !10520 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_region_bb_info_def_base* %vec_, metadata !10526, metadata !DIExpression()), !dbg !10527
  %tobool = icmp eq %struct.VEC_sel_region_bb_info_def_base* %vec_, null, !dbg !10528
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10528

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_base, %struct.VEC_sel_region_bb_info_def_base* %vec_, i64 0, i32 0, !dbg !10528
  %0 = load i32, i32* %num, align 8, !dbg !10528
  br label %cond.end, !dbg !10528

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !10528
  ret i32 %cond, !dbg !10528
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_sel_region_bb_info_def_heap_safe_grow(%struct.VEC_sel_region_bb_info_def_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !10529 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, metadata !10531, metadata !DIExpression()), !dbg !10533
  call void @llvm.dbg.value(metadata i32 %size_, metadata !10532, metadata !DIExpression()), !dbg !10533
  %cmp = icmp sgt i32 %size_, -1, !dbg !10534
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10534

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !10534
  %tobool = icmp eq %struct.VEC_sel_region_bb_info_def_heap* %0, null, !dbg !10534
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10534

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %0, i64 0, i32 0, !dbg !10534
  br label %cond.end, !dbg !10534

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_sel_region_bb_info_def_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !10534
  %call = tail call fastcc i32 @VEC_sel_region_bb_info_def_base_length(%struct.VEC_sel_region_bb_info_def_base* %cond) #8, !dbg !10534
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !10534
  %tobool2 = icmp eq %struct.VEC_sel_region_bb_info_def_heap* %1, null, !dbg !10534
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !10534

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %1, i64 0, i32 0, i32 0, !dbg !10534
  %2 = load i32, i32* %num, align 8, !dbg !10534
  br label %cond.end11, !dbg !10534

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !10534
  %sub = sub nsw i32 %size_, %cond12, !dbg !10534
  %call13 = tail call fastcc i32 @VEC_sel_region_bb_info_def_heap_reserve_exact(%struct.VEC_sel_region_bb_info_def_heap** nonnull @sel_region_bb_info, i32 %sub) #8, !dbg !10534
  %3 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !10534
  %num20 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %3, i64 0, i32 0, i32 0, !dbg !10534
  store i32 %size_, i32* %num20, align 8, !dbg !10534
  ret void, !dbg !10534
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_address(%struct.VEC_sel_region_bb_info_def_base* %vec_) unnamed_addr #0 !dbg !10535 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_region_bb_info_def_base* %vec_, metadata !10539, metadata !DIExpression()), !dbg !10540
  %tobool = icmp eq %struct.VEC_sel_region_bb_info_def_base* %vec_, null, !dbg !10541
  %arraydecay = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_base, %struct.VEC_sel_region_bb_info_def_base* %vec_, i64 0, i32 2, i64 0, !dbg !10541
  %cond = select i1 %tobool, %struct.sel_region_bb_info_def* null, %struct.sel_region_bb_info_def* %arraydecay, !dbg !10541
  ret %struct.sel_region_bb_info_def* %cond, !dbg !10541
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_sel_region_bb_info_def_heap_reserve_exact(%struct.VEC_sel_region_bb_info_def_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10542 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, metadata !10546, metadata !DIExpression()), !dbg !10549
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !10547, metadata !DIExpression()), !dbg !10549
  %0 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !10550
  %tobool = icmp eq %struct.VEC_sel_region_bb_info_def_heap* %0, null, !dbg !10550
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10550

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %0, i64 0, i32 0, !dbg !10550
  br label %cond.end, !dbg !10550

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_sel_region_bb_info_def_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10550
  %call = tail call fastcc i32 @VEC_sel_region_bb_info_def_base_space(%struct.VEC_sel_region_bb_info_def_base* %cond, i32 %alloc_) #8, !dbg !10550
  %tobool1 = icmp eq i32 %call, 0, !dbg !10550
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !10550
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !10548, metadata !DIExpression()), !dbg !10549
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10550

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info to i8**), align 8, !dbg !10551
  %call3 = tail call i8* @vec_heap_o_reserve_exact(i8* %1, i32 %alloc_, i64 8, i64 24) #6, !dbg !10551
  store i8* %call3, i8** bitcast (%struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info to i8**), align 8, !dbg !10551
  br label %if.end, !dbg !10551

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !10550
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_sel_region_bb_info_def_base_space(%struct.VEC_sel_region_bb_info_def_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10553 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_region_bb_info_def_base* %vec_, metadata !10557, metadata !DIExpression()), !dbg !10559
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !10558, metadata !DIExpression()), !dbg !10559
  %tobool = icmp eq %struct.VEC_sel_region_bb_info_def_base* %vec_, null, !dbg !10560
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10560

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_base, %struct.VEC_sel_region_bb_info_def_base* %vec_, i64 0, i32 1, !dbg !10560
  %0 = load i32, i32* %alloc, align 4, !dbg !10560
  %num = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_base, %struct.VEC_sel_region_bb_info_def_base* %vec_, i64 0, i32 0, !dbg !10560
  %1 = load i32, i32* %num, align 8, !dbg !10560
  %sub = sub i32 %0, %1, !dbg !10560
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !10560
  br label %cond.end, !dbg !10560

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !10560
  br label %cond.end, !dbg !10560

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !10560
  ret i32 %cond, !dbg !10560
}

declare dso_local void @remove_notes(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @restore_other_notes(%struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @reemit_notes(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_sel_region_bb_info_def_heap_free(%struct.VEC_sel_region_bb_info_def_heap** %vec_) unnamed_addr #0 !dbg !10561 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, metadata !10565, metadata !DIExpression()), !dbg !10566
  %0 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !10567
  %tobool = icmp eq %struct.VEC_sel_region_bb_info_def_heap* %0, null, !dbg !10567
  br i1 %tobool, label %if.end, label %if.then, !dbg !10569

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_sel_region_bb_info_def_heap* %0 to i8*, !dbg !10569
  tail call void @free(i8* nonnull %1) #6, !dbg !10567
  br label %if.end, !dbg !10567

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_sel_region_bb_info_def_heap* null, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !10569
  ret void, !dbg !10569
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_rtx_heap* @VEC_rtx_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !10570 {
entry:
  call void @llvm.dbg.value(metadata i32 10, metadata !10574, metadata !DIExpression()), !dbg !10575
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 10) #6, !dbg !10576
  %0 = bitcast i8* %call to %struct.VEC_rtx_heap*, !dbg !10576
  ret %struct.VEC_rtx_heap* %0, !dbg !10576
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !10577 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !10581, metadata !DIExpression()), !dbg !10582
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 4) #6, !dbg !10583
  %0 = bitcast i8* %call to %struct.VEC_int_heap*, !dbg !10583
  ret %struct.VEC_int_heap* %0, !dbg !10583
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_heap_reserve(%struct.VEC_rtx_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10584 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap** %vec_, metadata !10588, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.value(metadata i32 1, metadata !10589, metadata !DIExpression()), !dbg !10591
  %0 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %vec_, align 8, !dbg !10592
  %tobool = icmp eq %struct.VEC_rtx_heap* %0, null, !dbg !10592
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10592

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %0, i64 0, i32 0, !dbg !10592
  br label %cond.end, !dbg !10592

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10592
  %call = tail call fastcc i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %cond, i32 1) #8, !dbg !10592
  %tobool1 = icmp eq i32 %call, 0, !dbg !10592
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !10592
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !10590, metadata !DIExpression()), !dbg !10591
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10592

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_rtx_heap** %vec_ to i8**, !dbg !10593
  %2 = load i8*, i8** %1, align 8, !dbg !10593
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !10593
  store i8* %call3, i8** %1, align 8, !dbg !10593
  br label %if.end, !dbg !10593

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !10592
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_rtx_base_quick_push(%struct.VEC_rtx_base* %vec_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !10595 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !10599, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !10600, metadata !DIExpression()), !dbg !10602
  %num1 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !10603
  %0 = load i32, i32* %num1, align 8, !dbg !10603
  %inc = add i32 %0, 1, !dbg !10603
  store i32 %inc, i32* %num1, align 8, !dbg !10603
  %idxprom = zext i32 %0 to i64, !dbg !10603
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10603
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx, metadata !10601, metadata !DIExpression()), !dbg !10602
  store %struct.rtx_def* %obj_, %struct.rtx_def** %arrayidx, align 8, !dbg !10603
  ret %struct.rtx_def** %arrayidx, !dbg !10603
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10604 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !10608, metadata !DIExpression()), !dbg !10610
  call void @llvm.dbg.value(metadata i32 1, metadata !10609, metadata !DIExpression()), !dbg !10610
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !10611
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10611

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 1, !dbg !10611
  %0 = load i32, i32* %alloc, align 4, !dbg !10611
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !10611
  %1 = load i32, i32* %num, align 8, !dbg !10611
  %cmp1 = icmp ne i32 %0, %1, !dbg !10611
  %phitmp = zext i1 %cmp1 to i32, !dbg !10611
  br label %cond.end, !dbg !10611

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10611

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !10611
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_heap_reserve(%struct.VEC_int_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10612 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !10616, metadata !DIExpression()), !dbg !10619
  call void @llvm.dbg.value(metadata i32 1, metadata !10617, metadata !DIExpression()), !dbg !10619
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !10620
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !10620
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10620

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !10620
  br label %cond.end, !dbg !10620

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10620
  %call = tail call fastcc i32 @VEC_int_base_space(%struct.VEC_int_base* %cond, i32 1) #8, !dbg !10620
  %tobool1 = icmp eq i32 %call, 0, !dbg !10620
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !10620
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !10618, metadata !DIExpression()), !dbg !10619
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10620

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_int_heap** %vec_ to i8**, !dbg !10621
  %2 = load i8*, i8** %1, align 8, !dbg !10621
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 4) #6, !dbg !10621
  store i8* %call3, i8** %1, align 8, !dbg !10621
  br label %if.end, !dbg !10621

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !10620
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !10623 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !10627, metadata !DIExpression()), !dbg !10630
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !10628, metadata !DIExpression()), !dbg !10630
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !10631
  %0 = load i32, i32* %num1, align 4, !dbg !10631
  %inc = add i32 %0, 1, !dbg !10631
  store i32 %inc, i32* %num1, align 4, !dbg !10631
  %idxprom = zext i32 %0 to i64, !dbg !10631
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10631
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !10629, metadata !DIExpression()), !dbg !10630
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !10631
  ret i32* %arrayidx, !dbg !10631
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_space(%struct.VEC_int_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10632 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !10636, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.value(metadata i32 1, metadata !10637, metadata !DIExpression()), !dbg !10638
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !10639
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10639

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 1, !dbg !10639
  %0 = load i32, i32* %alloc, align 4, !dbg !10639
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !10639
  %1 = load i32, i32* %num, align 4, !dbg !10639
  %cmp1 = icmp ne i32 %0, %1, !dbg !10639
  %phitmp = zext i1 %cmp1 to i32, !dbg !10639
  br label %cond.end, !dbg !10639

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10639

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !10639
}

; Function Attrs: nounwind uwtable
define internal fastcc void @cfg_preds_1(%struct.basic_block_def* %bb, %struct.rtx_def*** %preds, i32* %n, i32* %size) unnamed_addr #5 !dbg !10640 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10644, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.value(metadata %struct.rtx_def*** %preds, metadata !10645, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.value(metadata i32* %n, metadata !10646, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.value(metadata i32* %size, metadata !10647, metadata !DIExpression()), !dbg !10655
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !10656
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !10656
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !10657
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !10657
  %2 = load i32*, i32** @block_to_bb, align 8, !dbg !10658
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !10658
  %3 = load i32, i32* %index, align 8, !dbg !10658
  %idxprom = sext i32 %3 to i64, !dbg !10658
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !10658
  %4 = load i32, i32* %arrayidx, align 4, !dbg !10658
  %cmp = icmp eq i32 %4, 0, !dbg !10658
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !10658

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4579, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10658
  br label %cond.end, !dbg !10658

cond.end:                                         ; preds = %entry, %cond.true
  %5 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !10659
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7, !dbg !10659
  %preds1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !10659
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds1) #8, !dbg !10659
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !10659
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !10659
  store i32 %7, i32* %6, align 8, !dbg !10659
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !10659
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !10659
  store %struct.VEC_edge_gc** %9, %struct.VEC_edge_gc*** %8, align 8, !dbg !10659
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %5, i64 16, i1 false), !dbg !10659
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7, !dbg !10659
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !10660
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !10660
  %12 = bitcast %struct.rtx_def*** %preds to i8**, !dbg !10661
  br label %for.cond, !dbg !10659

for.cond:                                         ; preds = %for.inc, %cond.end
  %13 = load i32, i32* %10, align 8, !dbg !10665
  %14 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !10665
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !10648, metadata !DIExpression(DW_OP_deref)), !dbg !10655
  %call2 = call fastcc zeroext i8 @ei_cond(i32 %13, %struct.VEC_edge_gc** %14, %struct.edge_def** nonnull %e) #8, !dbg !10665
  %tobool = icmp eq i8 %call2, 0, !dbg !10659
  br i1 %tobool, label %for.end, label %for.body, !dbg !10659

for.body:                                         ; preds = %for.cond
  %15 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !10666
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !10648, metadata !DIExpression()), !dbg !10655
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i64 0, i32 0, !dbg !10667
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !10667
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %16, metadata !10650, metadata !DIExpression()), !dbg !10668
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 7, !dbg !10669
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !10669
  %17 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !10669
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %17, i64 0, i32 1, !dbg !10669
  %18 = bitcast %struct.rtx_def** %end_ to i64*, !dbg !10669
  %19 = load i64, i64* %18, align 8, !dbg !10669
  %call3 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %16) #8, !dbg !10670
  %tobool4 = icmp eq i8 %call3, 0, !dbg !10670
  br i1 %tobool4, label %cond.true5, label %cond.end7, !dbg !10670

cond.true5:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4587, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10670
  br label %cond.end7, !dbg !10670

cond.end7:                                        ; preds = %for.body, %cond.true5
  %call9 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %16) #8, !dbg !10671
  %tobool10 = icmp eq i8 %call9, 0, !dbg !10671
  br i1 %tobool10, label %if.else, label %if.then, !dbg !10672

if.then:                                          ; preds = %cond.end7
  call fastcc void @cfg_preds_1(%struct.basic_block_def* %16, %struct.rtx_def*** %preds, i32* %n, i32* %size) #8, !dbg !10673
  br label %for.inc, !dbg !10673

if.else:                                          ; preds = %cond.end7
  %20 = load i32, i32* %n, align 4, !dbg !10674
  %21 = load i32, i32* %size, align 4, !dbg !10675
  %cmp11 = icmp eq i32 %20, %21, !dbg !10676
  br i1 %cmp11, label %if.then12, label %if.else.if.end_crit_edge, !dbg !10677

if.else.if.end_crit_edge:                         ; preds = %if.else
  %.pre = load %struct.rtx_def**, %struct.rtx_def*** %preds, align 8, !dbg !10678
  br label %if.end, !dbg !10677

if.then12:                                        ; preds = %if.else
  %22 = load i8*, i8** %12, align 8, !dbg !10679
  %mul = shl nsw i32 %20, 1, !dbg !10679
  %add = or i32 %mul, 1, !dbg !10679
  store i32 %add, i32* %size, align 4, !dbg !10679
  %conv = sext i32 %add to i64, !dbg !10679
  %mul13 = shl nsw i64 %conv, 3, !dbg !10679
  %call14 = call i8* @xrealloc(i8* %22, i64 %mul13) #6, !dbg !10679
  store i8* %call14, i8** %12, align 8, !dbg !10680
  %23 = bitcast i8* %call14 to %struct.rtx_def**, !dbg !10681
  %.pre1 = load i32, i32* %n, align 4, !dbg !10682
  br label %if.end, !dbg !10681

if.end:                                           ; preds = %if.else.if.end_crit_edge, %if.then12
  %24 = phi i32 [ %20, %if.else.if.end_crit_edge ], [ %.pre1, %if.then12 ], !dbg !10682
  %25 = phi %struct.rtx_def** [ %.pre, %if.else.if.end_crit_edge ], [ %23, %if.then12 ], !dbg !10678
  %inc = add nsw i32 %24, 1, !dbg !10682
  store i32 %inc, i32* %n, align 4, !dbg !10682
  %idxprom15 = sext i32 %24 to i64, !dbg !10683
  %arrayidx16 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %25, i64 %idxprom15, !dbg !10683
  %26 = bitcast %struct.rtx_def** %arrayidx16 to i64*, !dbg !10684
  store i64 %19, i64* %26, align 8, !dbg !10684
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.end
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !10649, metadata !DIExpression(DW_OP_deref)), !dbg !10655
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !10665
  br label %for.cond, !dbg !10665, !llvm.loop !10685

for.end:                                          ; preds = %for.cond
  %27 = load i32, i32* %n, align 4, !dbg !10687
  %cmp18 = icmp eq i32 %27, 0, !dbg !10687
  br i1 %cmp18, label %cond.true20, label %cond.end22, !dbg !10687

cond.true20:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4600, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10687
  br label %cond.end22, !dbg !10687

cond.end22:                                       ; preds = %for.end, %cond.true20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !10688
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !10688
  ret void, !dbg !10688
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !10689 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !10694
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !10694
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10694

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !10694
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !10694
  br label %cond.end, !dbg !10694

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10694
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !10694
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !10695
  %conv3 = zext i1 %cmp to i8, !dbg !10696
  ret i8 %conv3, !dbg !10697
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !10698 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !10701
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !10701
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10701

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !10701
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !10701
  br label %cond.end, !dbg !10701

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10701
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #8, !dbg !10701
  ret %struct.edge_def* %call2, !dbg !10702
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !10703 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !10708
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !10708

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10708
  br label %cond.end, !dbg !10708

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !10709
  ret %struct.VEC_edge_gc* %0, !dbg !10710
}

declare dso_local void @concat_note_lists(%struct.rtx_def*, %struct.rtx_def**) local_unnamed_addr #2

declare dso_local %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @find_edge(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @redirect_edge_pred(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_remove_bb(%struct.basic_block_def* %bb, i8 zeroext %remove_from_cfg_p) unnamed_addr #5 !dbg !10711 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10713, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i8 %remove_from_cfg_p, metadata !10714, metadata !DIExpression()), !dbg !10715
  %cmp = icmp eq %struct.basic_block_def* %bb, null, !dbg !10716
  br i1 %cmp, label %cond.true2, label %land.lhs.true, !dbg !10716

land.lhs.true:                                    ; preds = %entry
  %0 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !10716
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %0, i64 0, i32 0, !dbg !10716
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !10716
  %1 = load i32, i32* %index, align 8, !dbg !10716
  %call = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %1) #8, !dbg !10716
  %note_list = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call, i64 0, i32 0, !dbg !10716
  %2 = load %struct.rtx_def*, %struct.rtx_def** %note_list, align 8, !dbg !10716
  %cmp1 = icmp eq %struct.rtx_def* %2, null, !dbg !10716
  br i1 %cmp1, label %cond.end4, label %cond.true2, !dbg !10716

cond.true2:                                       ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10716
  br label %cond.end4, !dbg !10716

cond.end4:                                        ; preds = %land.lhs.true, %cond.true2
  tail call fastcc void @remove_bb_from_region(%struct.basic_block_def* %bb) #8, !dbg !10717
  tail call fastcc void @return_bb_to_pool(%struct.basic_block_def* %bb) #8, !dbg !10718
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !10719
  %index6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !10720
  %4 = load i32, i32* %index6, align 8, !dbg !10720
  %call7 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %3, i32 %4) #6, !dbg !10721
  %tobool8 = icmp eq i8 %remove_from_cfg_p, 0, !dbg !10722
  br i1 %tobool8, label %if.end, label %if.then, !dbg !10724

if.then:                                          ; preds = %cond.end4
  tail call fastcc void @delete_and_free_basic_block(%struct.basic_block_def* %bb) #8, !dbg !10725
  br label %if.end, !dbg !10725

if.end:                                           ; preds = %cond.end4, %if.then
  %5 = load i32*, i32** @containing_rgn, align 8, !dbg !10726
  %6 = load i32, i32* %index6, align 8, !dbg !10726
  %idxprom = sext i32 %6 to i64, !dbg !10726
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !10726
  %7 = load i32, i32* %arrayidx, align 4, !dbg !10726
  tail call void @rgn_setup_region(i32 %7) #6, !dbg !10727
  ret void, !dbg !10728
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_bb_from_region(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !10729 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10731, metadata !DIExpression()), !dbg !10736
  call void @llvm.dbg.value(metadata i32 -2, metadata !10734, metadata !DIExpression()), !dbg !10736
  %0 = load i32*, i32** @containing_rgn, align 8, !dbg !10737
  %1 = load i32*, i32** @rgn_bb_table, align 8, !dbg !10737
  %2 = load i32*, i32** @ebb_head, align 8, !dbg !10737
  %3 = load i32, i32* %2, align 4, !dbg !10737
  %idxprom = sext i32 %3 to i64, !dbg !10737
  %arrayidx1 = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !10737
  %4 = load i32, i32* %arrayidx1, align 4, !dbg !10737
  %idxprom2 = sext i32 %4 to i64, !dbg !10737
  %arrayidx3 = getelementptr inbounds i32, i32* %0, i64 %idxprom2, !dbg !10737
  %5 = load i32, i32* %arrayidx3, align 4, !dbg !10737
  call void @llvm.dbg.value(metadata i32 %5, metadata !10735, metadata !DIExpression()), !dbg !10736
  %6 = load i32*, i32** @block_to_bb, align 8, !dbg !10738
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !10738
  %7 = load i32, i32* %index, align 8, !dbg !10738
  %idxprom4 = sext i32 %7 to i64, !dbg !10738
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !10738
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !10738
  call void @llvm.dbg.value(metadata i32 %8, metadata !10734, metadata !DIExpression()), !dbg !10736
  %9 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !10739
  %idxprom6 = sext i32 %5 to i64, !dbg !10739
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %9, i64 %idxprom6, i32 1, !dbg !10739
  %10 = load i32, i32* %rgn_blocks, align 4, !dbg !10739
  %add = add nsw i32 %10, %8, !dbg !10740
  call void @llvm.dbg.value(metadata i32 %add, metadata !10733, metadata !DIExpression()), !dbg !10736
  %has_real_ebb = getelementptr inbounds %struct.region, %struct.region* %9, i64 %idxprom6, i32 2, !dbg !10741
  %bf.load = load i8, i8* %has_real_ebb, align 4, !dbg !10741
  %bf.clear = and i8 %bf.load, 2, !dbg !10741
  %cmp = icmp eq i8 %bf.clear, 0, !dbg !10741
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !10741

land.lhs.true:                                    ; preds = %entry
  %idxprom10 = sext i32 %8 to i64, !dbg !10741
  %arrayidx11 = getelementptr inbounds i32, i32* %2, i64 %idxprom10, !dbg !10741
  %11 = load i32, i32* %arrayidx11, align 4, !dbg !10741
  %cmp12 = icmp eq i32 %11, %add, !dbg !10741
  br i1 %cmp12, label %cond.end, label %cond.true, !dbg !10741

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4954, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10741
  %.pre = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !10742
  br label %cond.end, !dbg !10741

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %12 = phi %struct.region* [ %9, %land.lhs.true ], [ %.pre, %cond.true ], !dbg !10742
  %add13 = add nsw i32 %5, 1, !dbg !10742
  %idxprom14 = sext i32 %add13 to i64, !dbg !10742
  %rgn_blocks16 = getelementptr inbounds %struct.region, %struct.region* %12, i64 %idxprom14, i32 1, !dbg !10742
  %13 = load i32, i32* %rgn_blocks16, align 4, !dbg !10742
  call void @llvm.dbg.value(metadata i32 %13, metadata !10732, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10736
  %14 = sext i32 %13 to i64, !dbg !10744
  %15 = sext i32 %add to i64, !dbg !10744
  br label %for.cond, !dbg !10744

for.cond:                                         ; preds = %for.body, %cond.end
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body ], [ %14, %cond.end ]
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !10745
  call void @llvm.dbg.value(metadata i32 undef, metadata !10732, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10736
  %cmp17 = icmp sgt i64 %indvars.iv1, %15, !dbg !10746
  br i1 %cmp17, label %for.body, label %for.end, !dbg !10748

for.body:                                         ; preds = %for.cond
  %16 = load i32*, i32** @block_to_bb, align 8, !dbg !10749
  %17 = load i32*, i32** @rgn_bb_table, align 8, !dbg !10749
  %arrayidx19 = getelementptr inbounds i32, i32* %17, i64 %indvars.iv.next2, !dbg !10749
  %18 = load i32, i32* %arrayidx19, align 4, !dbg !10749
  %idxprom20 = sext i32 %18 to i64, !dbg !10749
  %arrayidx21 = getelementptr inbounds i32, i32* %16, i64 %idxprom20, !dbg !10749
  %19 = load i32, i32* %arrayidx21, align 4, !dbg !10750
  %dec = add nsw i32 %19, -1, !dbg !10750
  store i32 %dec, i32* %arrayidx21, align 4, !dbg !10750
  call void @llvm.dbg.value(metadata i32 undef, metadata !10732, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10736
  br label %for.cond, !dbg !10751, !llvm.loop !10752

for.end:                                          ; preds = %for.cond
  %20 = load i32*, i32** @rgn_bb_table, align 8, !dbg !10754
  %idx.ext = sext i32 %add to i64, !dbg !10755
  %add.ptr = getelementptr inbounds i32, i32* %20, i64 %idx.ext, !dbg !10755
  %21 = bitcast i32* %add.ptr to i8*, !dbg !10754
  %add.ptr25 = getelementptr inbounds i32, i32* %add.ptr, i64 1, !dbg !10756
  %22 = bitcast i32* %add.ptr25 to i8*, !dbg !10757
  %23 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !10758
  %24 = load i32, i32* @nr_regions, align 4, !dbg !10758
  %idxprom26 = sext i32 %24 to i64, !dbg !10758
  %rgn_blocks28 = getelementptr inbounds %struct.region, %struct.region* %23, i64 %idxprom26, i32 1, !dbg !10758
  %25 = load i32, i32* %rgn_blocks28, align 4, !dbg !10758
  %sub29 = sub nsw i32 %25, %add, !dbg !10759
  %conv = sext i32 %sub29 to i64, !dbg !10760
  %mul = shl nsw i64 %conv, 2, !dbg !10761
  %call = tail call i8* @memmove(i8* %21, i8* nonnull %22, i64 %mul) #6, !dbg !10762
  %26 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !10763
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %26, i64 %idxprom6, i32 0, !dbg !10763
  %27 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !10764
  %dec32 = add nsw i32 %27, -1, !dbg !10764
  store i32 %dec32, i32* %rgn_nr_blocks, align 4, !dbg !10764
  call void @llvm.dbg.value(metadata i32 %5, metadata !10732, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10736
  br label %for.cond34, !dbg !10765

for.cond34:                                       ; preds = %for.body37, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body37 ], [ %idxprom6, %for.end ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !10767
  call void @llvm.dbg.value(metadata i32 undef, metadata !10732, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10736
  %28 = load i32, i32* @nr_regions, align 4, !dbg !10768
  %29 = sext i32 %28 to i64, !dbg !10770
  %cmp35 = icmp slt i64 %indvars.iv, %29, !dbg !10770
  br i1 %cmp35, label %for.body37, label %for.end43, !dbg !10771

for.body37:                                       ; preds = %for.cond34
  %30 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !10772
  %rgn_blocks40 = getelementptr inbounds %struct.region, %struct.region* %30, i64 %indvars.iv.next, i32 1, !dbg !10772
  %31 = load i32, i32* %rgn_blocks40, align 4, !dbg !10773
  %dec41 = add nsw i32 %31, -1, !dbg !10773
  store i32 %dec41, i32* %rgn_blocks40, align 4, !dbg !10773
  call void @llvm.dbg.value(metadata i32 undef, metadata !10732, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10736
  br label %for.cond34, !dbg !10774, !llvm.loop !10775

for.end43:                                        ; preds = %for.cond34
  ret void, !dbg !10777
}

; Function Attrs: nounwind uwtable
define internal fastcc void @return_bb_to_pool(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !10778 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10780, metadata !DIExpression()), !dbg !10782
  %call = tail call %struct.rtx_def* @bb_note(%struct.basic_block_def* %bb) #6, !dbg !10783
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !10781, metadata !DIExpression()), !dbg !10782
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 2, !dbg !10784
  %rt_bb = bitcast i64* %arrayidx to %struct.basic_block_def**, !dbg !10784
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !10784
  %cmp = icmp eq %struct.basic_block_def* %0, %bb, !dbg !10784
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !10784

land.lhs.true:                                    ; preds = %entry
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 2, !dbg !10784
  %1 = load i8*, i8** %aux, align 8, !dbg !10784
  %cmp1 = icmp eq i8* %1, null, !dbg !10784
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !10784

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4755, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10784
  br label %cond.end, !dbg !10784

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  ret void, !dbg !10785
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @delete_and_free_basic_block(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !10786 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10788, metadata !DIExpression()), !dbg !10789
  %call = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %bb) #8, !dbg !10790
  %tobool = icmp eq i8 %call, 0, !dbg !10790
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !10790

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4890, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10790
  br label %cond.end, !dbg !10790

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !10791
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %0, i64 0, i32 0, !dbg !10791
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !10791
  %1 = load i32, i32* %index, align 8, !dbg !10791
  %call6 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base, i32 %1) #8, !dbg !10791
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call6, i64 0, i32 0, !dbg !10791
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !10791
  %tobool7 = icmp eq %struct.bitmap_head_def* %2, null, !dbg !10791
  br i1 %tobool7, label %if.end, label %if.then, !dbg !10793

if.then:                                          ; preds = %cond.end
  tail call fastcc void @free_lv_set(%struct.basic_block_def* %bb) #8, !dbg !10794
  br label %if.end, !dbg !10794

if.end:                                           ; preds = %cond.end, %if.then
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !10795
  %4 = load i32, i32* %index, align 8, !dbg !10796
  %call9 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %3, i32 %4) #6, !dbg !10797
  %5 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !10798
  %base12 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %5, i64 0, i32 0, !dbg !10798
  %6 = load i32, i32* %index, align 8, !dbg !10798
  %call17 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base12, i32 %6) #8, !dbg !10798
  %lv_set18 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call17, i64 0, i32 0, !dbg !10798
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set18, align 8, !dbg !10798
  %cmp = icmp eq %struct.bitmap_head_def* %7, null, !dbg !10798
  br i1 %cmp, label %land.lhs.true, label %cond.true48, !dbg !10798

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !10798
  %base21 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %8, i64 0, i32 0, !dbg !10798
  %9 = load i32, i32* %index, align 8, !dbg !10798
  %call26 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base21, i32 %9) #8, !dbg !10798
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call26, i64 0, i32 1, !dbg !10798
  %10 = load i8, i8* %lv_set_valid_p, align 8, !dbg !10798
  %tobool27 = icmp eq i8 %10, 0, !dbg !10798
  br i1 %tobool27, label %land.lhs.true28, label %cond.true48, !dbg !10798

land.lhs.true28:                                  ; preds = %land.lhs.true
  %11 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !10798
  %base31 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %11, i64 0, i32 0, !dbg !10798
  %12 = load i32, i32* %index, align 8, !dbg !10798
  %call36 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base31, i32 %12) #8, !dbg !10798
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call36, i64 0, i32 2, !dbg !10798
  %13 = load i32, i32* %av_level, align 8, !dbg !10798
  %cmp37 = icmp eq i32 %13, 0, !dbg !10798
  br i1 %cmp37, label %land.lhs.true38, label %cond.true48, !dbg !10798

land.lhs.true38:                                  ; preds = %land.lhs.true28
  %14 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !10798
  %base41 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %14, i64 0, i32 0, !dbg !10798
  %15 = load i32, i32* %index, align 8, !dbg !10798
  %call46 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base41, i32 %15) #8, !dbg !10798
  %av_set = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call46, i64 0, i32 1, !dbg !10798
  %16 = load %struct._list_node*, %struct._list_node** %av_set, align 8, !dbg !10798
  %cmp47 = icmp eq %struct._list_node* %16, null, !dbg !10798
  br i1 %cmp47, label %cond.end50, label %cond.true48, !dbg !10798

cond.true48:                                      ; preds = %land.lhs.true, %land.lhs.true38, %land.lhs.true28, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4903, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10798
  br label %cond.end50, !dbg !10798

cond.end50:                                       ; preds = %land.lhs.true38, %cond.true48
  tail call void @delete_basic_block(%struct.basic_block_def* %bb) #6, !dbg !10799
  ret void, !dbg !10800
}

declare dso_local void @rgn_setup_region(i32) local_unnamed_addr #2

declare dso_local void @delete_basic_block(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @sched_init_bbs() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %vec_) unnamed_addr #0 !dbg !10801 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !10805, metadata !DIExpression()), !dbg !10806
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !10807
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10807

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !10807
  %0 = load i32, i32* %num, align 8, !dbg !10807
  br label %cond.end, !dbg !10807

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !10807
  ret i32 %cond, !dbg !10807
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_block_to_current_region(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !10808 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10810, metadata !DIExpression()), !dbg !10815
  call void @llvm.dbg.value(metadata i32 -2, metadata !10813, metadata !DIExpression()), !dbg !10815
  %0 = load i32*, i32** @containing_rgn, align 8, !dbg !10816
  %1 = load i32*, i32** @rgn_bb_table, align 8, !dbg !10816
  %2 = load i32*, i32** @ebb_head, align 8, !dbg !10816
  %3 = load i32, i32* %2, align 4, !dbg !10816
  %idxprom = sext i32 %3 to i64, !dbg !10816
  %arrayidx1 = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !10816
  %4 = load i32, i32* %arrayidx1, align 4, !dbg !10816
  %idxprom2 = sext i32 %4 to i64, !dbg !10816
  %arrayidx3 = getelementptr inbounds i32, i32* %0, i64 %idxprom2, !dbg !10816
  %5 = load i32, i32* %arrayidx3, align 4, !dbg !10816
  call void @llvm.dbg.value(metadata i32 %5, metadata !10814, metadata !DIExpression()), !dbg !10815
  %call = tail call fastcc i32 @find_place_to_insert_bb(%struct.basic_block_def* %bb, i32 %5) #8, !dbg !10817
  call void @llvm.dbg.value(metadata i32 %call, metadata !10813, metadata !DIExpression()), !dbg !10815
  %add = add nsw i32 %call, 1, !dbg !10818
  call void @llvm.dbg.value(metadata i32 %add, metadata !10813, metadata !DIExpression()), !dbg !10815
  %6 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !10819
  %idxprom4 = sext i32 %5 to i64, !dbg !10819
  %rgn_blocks = getelementptr inbounds %struct.region, %struct.region* %6, i64 %idxprom4, i32 1, !dbg !10819
  %7 = load i32, i32* %rgn_blocks, align 4, !dbg !10819
  %add6 = add nsw i32 %7, %add, !dbg !10820
  call void @llvm.dbg.value(metadata i32 %add6, metadata !10812, metadata !DIExpression()), !dbg !10815
  %has_real_ebb = getelementptr inbounds %struct.region, %struct.region* %6, i64 %idxprom4, i32 2, !dbg !10821
  %bf.load = load i8, i8* %has_real_ebb, align 4, !dbg !10821
  %bf.clear = and i8 %bf.load, 2, !dbg !10821
  %cmp = icmp eq i8 %bf.clear, 0, !dbg !10821
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !10821

land.lhs.true:                                    ; preds = %entry
  %8 = load i32*, i32** @ebb_head, align 8, !dbg !10821
  %idxprom9 = sext i32 %add to i64, !dbg !10821
  %arrayidx10 = getelementptr inbounds i32, i32* %8, i64 %idxprom9, !dbg !10821
  %9 = load i32, i32* %arrayidx10, align 4, !dbg !10821
  %cmp11 = icmp eq i32 %9, %add6, !dbg !10821
  br i1 %cmp11, label %cond.end, label %cond.true, !dbg !10821

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4920, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10821
  br label %cond.end, !dbg !10821

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  tail call void @extend_regions() #6, !dbg !10822
  %10 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !10823
  %add12 = add nsw i32 %5, 1, !dbg !10823
  %idxprom13 = sext i32 %add12 to i64, !dbg !10823
  %rgn_blocks15 = getelementptr inbounds %struct.region, %struct.region* %10, i64 %idxprom13, i32 1, !dbg !10823
  %11 = load i32, i32* %rgn_blocks15, align 4, !dbg !10823
  call void @llvm.dbg.value(metadata i32 %11, metadata !10811, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10815
  %12 = sext i32 %11 to i64, !dbg !10825
  %13 = sext i32 %add6 to i64, !dbg !10825
  br label %for.cond, !dbg !10825

for.cond:                                         ; preds = %for.body, %cond.end
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body ], [ %12, %cond.end ]
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !10826
  call void @llvm.dbg.value(metadata i32 undef, metadata !10811, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10815
  %cmp16 = icmp sgt i64 %indvars.iv1, %13, !dbg !10827
  br i1 %cmp16, label %for.body, label %for.end, !dbg !10829

for.body:                                         ; preds = %for.cond
  %14 = load i32*, i32** @block_to_bb, align 8, !dbg !10830
  %15 = load i32*, i32** @rgn_bb_table, align 8, !dbg !10830
  %arrayidx18 = getelementptr inbounds i32, i32* %15, i64 %indvars.iv.next2, !dbg !10830
  %16 = load i32, i32* %arrayidx18, align 4, !dbg !10830
  %idxprom19 = sext i32 %16 to i64, !dbg !10830
  %arrayidx20 = getelementptr inbounds i32, i32* %14, i64 %idxprom19, !dbg !10830
  %17 = load i32, i32* %arrayidx20, align 4, !dbg !10831
  %inc = add nsw i32 %17, 1, !dbg !10831
  store i32 %inc, i32* %arrayidx20, align 4, !dbg !10831
  call void @llvm.dbg.value(metadata i32 undef, metadata !10811, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10815
  br label %for.cond, !dbg !10832, !llvm.loop !10833

for.end:                                          ; preds = %for.cond
  %18 = load i32*, i32** @rgn_bb_table, align 8, !dbg !10835
  %idx.ext = sext i32 %add6 to i64, !dbg !10836
  %add.ptr = getelementptr inbounds i32, i32* %18, i64 %idx.ext, !dbg !10836
  %add.ptr21 = getelementptr inbounds i32, i32* %add.ptr, i64 1, !dbg !10837
  %19 = bitcast i32* %add.ptr21 to i8*, !dbg !10835
  %20 = bitcast i32* %add.ptr to i8*, !dbg !10838
  %21 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !10839
  %22 = load i32, i32* @nr_regions, align 4, !dbg !10839
  %idxprom24 = sext i32 %22 to i64, !dbg !10839
  %rgn_blocks26 = getelementptr inbounds %struct.region, %struct.region* %21, i64 %idxprom24, i32 1, !dbg !10839
  %23 = load i32, i32* %rgn_blocks26, align 4, !dbg !10839
  %sub27 = sub nsw i32 %23, %add6, !dbg !10840
  %conv = sext i32 %sub27 to i64, !dbg !10841
  %mul = shl nsw i64 %conv, 2, !dbg !10842
  %call28 = tail call i8* @memmove(i8* nonnull %19, i8* %20, i64 %mul) #6, !dbg !10843
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !10844
  %24 = load i32, i32* %index, align 8, !dbg !10844
  %25 = load i32*, i32** @rgn_bb_table, align 8, !dbg !10845
  %arrayidx30 = getelementptr inbounds i32, i32* %25, i64 %idx.ext, !dbg !10845
  store i32 %24, i32* %arrayidx30, align 4, !dbg !10846
  %26 = load i32*, i32** @block_to_bb, align 8, !dbg !10847
  %27 = load i32, i32* %index, align 8, !dbg !10847
  %idxprom32 = sext i32 %27 to i64, !dbg !10847
  %arrayidx33 = getelementptr inbounds i32, i32* %26, i64 %idxprom32, !dbg !10847
  store i32 %add, i32* %arrayidx33, align 4, !dbg !10848
  %28 = load i32*, i32** @containing_rgn, align 8, !dbg !10849
  %29 = load i32, i32* %index, align 8, !dbg !10849
  %idxprom35 = sext i32 %29 to i64, !dbg !10849
  %arrayidx36 = getelementptr inbounds i32, i32* %28, i64 %idxprom35, !dbg !10849
  store i32 %5, i32* %arrayidx36, align 4, !dbg !10850
  %30 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !10851
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %30, i64 %idxprom4, i32 0, !dbg !10851
  %31 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !10852
  %inc39 = add nsw i32 %31, 1, !dbg !10852
  store i32 %inc39, i32* %rgn_nr_blocks, align 4, !dbg !10852
  call void @llvm.dbg.value(metadata i32 %5, metadata !10811, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10815
  br label %for.cond41, !dbg !10853

for.cond41:                                       ; preds = %for.body44, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body44 ], [ %idxprom4, %for.end ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !10855
  call void @llvm.dbg.value(metadata i32 undef, metadata !10811, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10815
  %32 = load i32, i32* @nr_regions, align 4, !dbg !10856
  %33 = sext i32 %32 to i64, !dbg !10858
  %cmp42 = icmp slt i64 %indvars.iv, %33, !dbg !10858
  br i1 %cmp42, label %for.body44, label %for.end51, !dbg !10859

for.body44:                                       ; preds = %for.cond41
  %34 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !10860
  %rgn_blocks47 = getelementptr inbounds %struct.region, %struct.region* %34, i64 %indvars.iv.next, i32 1, !dbg !10860
  %35 = load i32, i32* %rgn_blocks47, align 4, !dbg !10861
  %inc48 = add nsw i32 %35, 1, !dbg !10861
  store i32 %inc48, i32* %rgn_blocks47, align 4, !dbg !10861
  call void @llvm.dbg.value(metadata i32 undef, metadata !10811, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10815
  br label %for.cond41, !dbg !10862, !llvm.loop !10863

for.end51:                                        ; preds = %for.cond41
  ret void, !dbg !10865
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_place_to_insert_bb(%struct.basic_block_def* %bb, i32 %rgn) unnamed_addr #5 !dbg !10866 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10870, metadata !DIExpression()), !dbg !10883
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !10871, metadata !DIExpression()), !dbg !10883
  call void @llvm.dbg.value(metadata i8 0, metadata !10872, metadata !DIExpression()), !dbg !10883
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !10884
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !10884
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !10885
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !10885
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !10886
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #7, !dbg !10886
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !10886
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !10886
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !10886
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !10886
  store i32 %4, i32* %3, align 8, !dbg !10886
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !10886
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !10886
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !10886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !10886
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #7, !dbg !10886
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !10888
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !10888
  br label %for.cond, !dbg !10886

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %7, align 8, !dbg !10890
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !10890
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !10873, metadata !DIExpression(DW_OP_deref)), !dbg !10883
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #8, !dbg !10890
  %tobool = icmp eq i8 %call1, 0, !dbg !10886
  br i1 %tobool, label %for.end, label %for.body, !dbg !10886

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !10891
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !10873, metadata !DIExpression()), !dbg !10883
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 0, !dbg !10893
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !10893
  %call2 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %12) #8, !dbg !10894
  %tobool3 = icmp eq i8 %call2, 0, !dbg !10894
  br i1 %tobool3, label %for.end, label %for.inc, !dbg !10895

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !10874, metadata !DIExpression(DW_OP_deref)), !dbg !10883
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !10890
  br label %for.cond, !dbg !10890, !llvm.loop !10896

for.end:                                          ; preds = %for.body, %for.cond
  %has_preds_outside_rgn.0 = phi i8 [ 0, %for.cond ], [ 1, %for.body ], !dbg !10883
  call void @llvm.dbg.value(metadata i8 %has_preds_outside_rgn.0, metadata !10872, metadata !DIExpression()), !dbg !10883
  %13 = load i32, i32* @flag_sel_sched_pipelining_outer_loops, align 4, !dbg !10898
  %tobool4 = icmp eq i32 %13, 0, !dbg !10898
  br i1 %tobool4, label %if.else, label %land.lhs.true, !dbg !10899

land.lhs.true:                                    ; preds = %for.end
  %tobool5 = icmp eq i8 %has_preds_outside_rgn.0, 0, !dbg !10900
  br i1 %tobool5, label %lor.lhs.false, label %if.then11, !dbg !10901

lor.lhs.false:                                    ; preds = %land.lhs.true
  %14 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !10902
  %tobool7 = icmp eq %struct.VEC_edge_gc* %14, null, !dbg !10902
  br i1 %tobool7, label %cond.end, label %cond.true, !dbg !10902

cond.true:                                        ; preds = %lor.lhs.false
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %14, i64 0, i32 0, !dbg !10902
  br label %cond.end, !dbg !10902

cond.end:                                         ; preds = %lor.lhs.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %lor.lhs.false ], !dbg !10902
  %call9 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !10902
  %cmp = icmp ugt i32 %call9, 1, !dbg !10903
  br i1 %cmp, label %if.then11, label %if.else, !dbg !10904

if.then11:                                        ; preds = %land.lhs.true, %cond.end
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !10905
  %15 = load i32, i32* %index, align 8, !dbg !10905
  call void @llvm.dbg.value(metadata i32 %15, metadata !10878, metadata !DIExpression()), !dbg !10906
  call fastcc void @recompute_rev_top_order() #8, !dbg !10907
  %16 = load %struct.region*, %struct.region** @rgn_table, align 8, !dbg !10908
  %idxprom = sext i32 %rgn to i64, !dbg !10908
  %rgn_nr_blocks = getelementptr inbounds %struct.region, %struct.region* %16, i64 %idxprom, i32 0, !dbg !10908
  %17 = load i32, i32* %rgn_nr_blocks, align 4, !dbg !10908
  call void @llvm.dbg.value(metadata i32 %17, metadata !10875, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10906
  %18 = load i32*, i32** @rgn_bb_table, align 8, !dbg !10910
  %19 = load i32*, i32** @ebb_head, align 8, !dbg !10910
  %20 = load i32*, i32** @rev_top_order_index, align 8, !dbg !10913
  %idxprom20 = sext i32 %15 to i64, !dbg !10913
  %arrayidx21 = getelementptr inbounds i32, i32* %20, i64 %idxprom20, !dbg !10913
  %21 = sext i32 %17 to i64, !dbg !10915
  br label %for.cond12, !dbg !10915

for.cond12:                                       ; preds = %for.inc28, %if.then11
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc28 ], [ %21, %if.then11 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !10916
  call void @llvm.dbg.value(metadata i32 undef, metadata !10875, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10906
  %cmp13 = icmp sgt i64 %indvars.iv, 0, !dbg !10917
  %22 = trunc i64 %indvars.iv.next to i32, !dbg !10918
  br i1 %cmp13, label %for.body15, label %for.end29, !dbg !10918

for.body15:                                       ; preds = %for.cond12
  %arrayidx17 = getelementptr inbounds i32, i32* %19, i64 %indvars.iv.next, !dbg !10919
  %23 = load i32, i32* %arrayidx17, align 4, !dbg !10919
  %idxprom18 = sext i32 %23 to i64, !dbg !10919
  %arrayidx19 = getelementptr inbounds i32, i32* %18, i64 %idxprom18, !dbg !10919
  %24 = load i32, i32* %arrayidx19, align 4, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %24, metadata !10879, metadata !DIExpression()), !dbg !10906
  %25 = load i32, i32* %arrayidx21, align 4, !dbg !10920
  %idxprom22 = sext i32 %24 to i64, !dbg !10921
  %arrayidx23 = getelementptr inbounds i32, i32* %20, i64 %idxprom22, !dbg !10921
  %26 = load i32, i32* %arrayidx23, align 4, !dbg !10921
  %cmp24 = icmp slt i32 %25, %26, !dbg !10922
  br i1 %cmp24, label %for.end29, label %for.inc28, !dbg !10923

for.inc28:                                        ; preds = %for.body15
  call void @llvm.dbg.value(metadata i32 undef, metadata !10875, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10906
  br label %for.cond12, !dbg !10924, !llvm.loop !10925

for.end29:                                        ; preds = %for.body15, %for.cond12
  %.lcssa = phi i32 [ %22, %for.body15 ], [ %22, %for.cond12 ], !dbg !10918
  br label %cleanup

if.else:                                          ; preds = %for.end, %cond.end
  %tobool31 = icmp eq i8 %has_preds_outside_rgn.0, 0, !dbg !10927
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !10883
  %27 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !10883
  %tobool33 = icmp ne %struct.VEC_edge_gc* %27, null, !dbg !10883
  br i1 %tobool31, label %if.end77, label %if.then32, !dbg !10929

if.then32:                                        ; preds = %if.else
  br i1 %tobool33, label %cond.true34, label %cond.end38, !dbg !10930

cond.true34:                                      ; preds = %if.then32
  %base36 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %27, i64 0, i32 0, !dbg !10930
  br label %cond.end38, !dbg !10930

cond.end38:                                       ; preds = %if.then32, %cond.true34
  %cond39 = phi %struct.VEC_edge_base* [ %base36, %cond.true34 ], [ null, %if.then32 ], !dbg !10930
  %call40 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond39, i32 0) #8, !dbg !10930
  call void @llvm.dbg.value(metadata %struct.edge_def* %call40, metadata !10873, metadata !DIExpression()), !dbg !10883
  store %struct.edge_def* %call40, %struct.edge_def** %e, align 8, !dbg !10932
  %28 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !10933
  %tobool42 = icmp eq %struct.VEC_edge_gc* %28, null, !dbg !10933
  br i1 %tobool42, label %cond.end47, label %cond.true43, !dbg !10933

cond.true43:                                      ; preds = %cond.end38
  %base45 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %28, i64 0, i32 0, !dbg !10933
  br label %cond.end47, !dbg !10933

cond.end47:                                       ; preds = %cond.end38, %cond.true43
  %cond48 = phi %struct.VEC_edge_base* [ %base45, %cond.true43 ], [ null, %cond.end38 ], !dbg !10933
  %call49 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond48) #8, !dbg !10933
  %cmp50 = icmp eq i32 %call49, 1, !dbg !10933
  br i1 %cmp50, label %land.lhs.true52, label %cond.true72, !dbg !10933

land.lhs.true52:                                  ; preds = %cond.end47
  %29 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !10933
  %tobool54 = icmp eq %struct.VEC_edge_gc* %29, null, !dbg !10933
  br i1 %tobool54, label %cond.end59, label %cond.true55, !dbg !10933

cond.true55:                                      ; preds = %land.lhs.true52
  %base57 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %29, i64 0, i32 0, !dbg !10933
  br label %cond.end59, !dbg !10933

cond.end59:                                       ; preds = %land.lhs.true52, %cond.true55
  %cond60 = phi %struct.VEC_edge_base* [ %base57, %cond.true55 ], [ null, %land.lhs.true52 ], !dbg !10933
  %call61 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond60, i32 0) #8, !dbg !10933
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call61, i64 0, i32 1, !dbg !10933
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !10933
  %call62 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %30) #8, !dbg !10933
  %tobool64 = icmp eq i8 %call62, 0, !dbg !10933
  br i1 %tobool64, label %cond.true72, label %land.lhs.true65, !dbg !10933

land.lhs.true65:                                  ; preds = %cond.end59
  %31 = load i32*, i32** @block_to_bb, align 8, !dbg !10933
  %32 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !10933
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !10873, metadata !DIExpression()), !dbg !10883
  %dest66 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 1, !dbg !10933
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %dest66, align 8, !dbg !10933
  %index67 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i64 0, i32 9, !dbg !10933
  %34 = load i32, i32* %index67, align 8, !dbg !10933
  %idxprom68 = sext i32 %34 to i64, !dbg !10933
  %arrayidx69 = getelementptr inbounds i32, i32* %31, i64 %idxprom68, !dbg !10933
  %35 = load i32, i32* %arrayidx69, align 4, !dbg !10933
  %cmp70 = icmp eq i32 %35, 0, !dbg !10933
  br i1 %cmp70, label %cleanup, label %cond.true72, !dbg !10933

cond.true72:                                      ; preds = %cond.end59, %land.lhs.true65, %cond.end47
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4864, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10933
  br label %cleanup, !dbg !10933

if.end77:                                         ; preds = %if.else
  br i1 %tobool33, label %cond.true80, label %cond.end84, !dbg !10934

cond.true80:                                      ; preds = %if.end77
  %base82 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %27, i64 0, i32 0, !dbg !10934
  br label %cond.end84, !dbg !10934

cond.end84:                                       ; preds = %if.end77, %cond.true80
  %cond85 = phi %struct.VEC_edge_base* [ %base82, %cond.true80 ], [ null, %if.end77 ], !dbg !10934
  %call86 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond85) #8, !dbg !10934
  %cmp87 = icmp eq i32 %call86, 0, !dbg !10935
  br i1 %cmp87, label %if.else118, label %if.then89, !dbg !10936

if.then89:                                        ; preds = %cond.end84
  %36 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !10937
  %tobool91 = icmp eq %struct.VEC_edge_gc* %36, null, !dbg !10937
  br i1 %tobool91, label %cond.end96, label %cond.true92, !dbg !10937

cond.true92:                                      ; preds = %if.then89
  %base94 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %36, i64 0, i32 0, !dbg !10937
  br label %cond.end96, !dbg !10937

cond.end96:                                       ; preds = %if.then89, %cond.true92
  %cond97 = phi %struct.VEC_edge_base* [ %base94, %cond.true92 ], [ null, %if.then89 ], !dbg !10937
  %call98 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond97) #8, !dbg !10937
  %cmp99 = icmp eq i32 %call98, 1, !dbg !10937
  br i1 %cmp99, label %cond.end103, label %cond.true101, !dbg !10937

cond.true101:                                     ; preds = %cond.end96
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4876, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10937
  br label %cond.end103, !dbg !10937

cond.end103:                                      ; preds = %cond.end96, %cond.true101
  %37 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !10938
  %tobool106 = icmp eq %struct.VEC_edge_gc* %37, null, !dbg !10938
  br i1 %tobool106, label %cond.end111, label %cond.true107, !dbg !10938

cond.true107:                                     ; preds = %cond.end103
  %base109 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %37, i64 0, i32 0, !dbg !10938
  br label %cond.end111, !dbg !10938

cond.end111:                                      ; preds = %cond.end103, %cond.true107
  %cond112 = phi %struct.VEC_edge_base* [ %base109, %cond.true107 ], [ null, %cond.end103 ], !dbg !10938
  %call113 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond112, i32 0) #8, !dbg !10938
  %src114 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call113, i64 0, i32 0, !dbg !10939
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %src114, align 8, !dbg !10939
  %index115 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %38, i64 0, i32 9, !dbg !10940
  %39 = load i32, i32* %index115, align 8, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %39, metadata !10880, metadata !DIExpression()), !dbg !10941
  %40 = load i32*, i32** @block_to_bb, align 8, !dbg !10942
  %idxprom116 = sext i32 %39 to i64, !dbg !10942
  %arrayidx117 = getelementptr inbounds i32, i32* %40, i64 %idxprom116, !dbg !10942
  %41 = load i32, i32* %arrayidx117, align 4, !dbg !10942
  br label %cleanup

if.else118:                                       ; preds = %cond.end84
  %42 = load i32, i32* @current_nr_blocks, align 4, !dbg !10943
  %sub119 = add nsw i32 %42, -1, !dbg !10944
  br label %cleanup, !dbg !10945

cleanup:                                          ; preds = %cond.true72, %land.lhs.true65, %if.else118, %cond.end111, %for.end29
  %retval.0 = phi i32 [ %.lcssa, %for.end29 ], [ %41, %cond.end111 ], [ %sub119, %if.else118 ], [ -1, %land.lhs.true65 ], [ -1, %cond.true72 ], !dbg !10883
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !10946
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !10946
  ret i32 %retval.0, !dbg !10946
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @check_for_new_jump(%struct.basic_block_def* %bb, i32 %prev_max_uid) unnamed_addr #5 !dbg !10947 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10951, metadata !DIExpression()), !dbg !10954
  call void @llvm.dbg.value(metadata i32 %prev_max_uid, metadata !10952, metadata !DIExpression()), !dbg !10954
  %call = tail call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %bb) #8, !dbg !10955
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !10953, metadata !DIExpression()), !dbg !10954
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !10956
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !10958

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10959
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !10959
  %0 = load i32, i32* %rt_int, align 8, !dbg !10959
  %cmp = icmp slt i32 %0, %prev_max_uid, !dbg !10960
  br i1 %cmp, label %if.end, label %cleanup, !dbg !10961

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %cleanup, !dbg !10962

cleanup:                                          ; preds = %land.lhs.true, %if.end
  %retval.0 = phi %struct.rtx_def* [ null, %if.end ], [ %call, %land.lhs.true ], !dbg !10954
  ret %struct.rtx_def* %retval.0, !dbg !10963
}

declare dso_local %struct.basic_block_def* @sched_split_block_1(%struct.basic_block_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @get_bb_note_from_pool() unnamed_addr #5 !dbg !10964 {
entry:
  %0 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** @bb_note_pool, align 8, !dbg !10971
  %base = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %0, i64 0, i32 0, !dbg !10971
  %call = tail call fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %base) #8, !dbg !10971
  %cmp = icmp eq i32 %call, 0, !dbg !10971
  br i1 %cmp, label %return, label %if.else, !dbg !10972

if.else:                                          ; preds = %entry
  %1 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** @bb_note_pool, align 8, !dbg !10973
  %base3 = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %1, i64 0, i32 0, !dbg !10973
  %call7 = tail call fastcc %struct.rtx_def* @VEC_rtx_base_pop(%struct.VEC_rtx_base* %base3) #8, !dbg !10973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !10968, metadata !DIExpression()), !dbg !10974
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call7, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10975
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !10975
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx, align 8, !dbg !10976
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call7, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !10977
  %rt_rtx11 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !10977
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx11, align 8, !dbg !10978
  br label %return

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi %struct.rtx_def* [ %call7, %if.else ], [ null, %entry ], !dbg !10979
  ret %struct.rtx_def* %retval.0, !dbg !10980
}

declare dso_local %struct.basic_block_def* @create_basic_block_structure(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @VEC_rtx_base_pop(%struct.VEC_rtx_base* %vec_) unnamed_addr #0 !dbg !10981 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !10985, metadata !DIExpression()), !dbg !10987
  %num1 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !10988
  %0 = load i32, i32* %num1, align 8, !dbg !10988
  %dec = add i32 %0, -1, !dbg !10988
  store i32 %dec, i32* %num1, align 8, !dbg !10988
  %idxprom = zext i32 %dec to i64, !dbg !10988
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10988
  %1 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !10988
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !10986, metadata !DIExpression()), !dbg !10987
  ret %struct.rtx_def* %1, !dbg !10988
}

declare dso_local void @rgn_make_new_region_out_of_new_block(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @sched_create_empty_bb_1(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @vinsn_init(%struct.vinsn_def* %vi, %struct.rtx_def* %insn, i8 zeroext %force_unique_p) unnamed_addr #5 !dbg !10989 {
entry:
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !10993, metadata !DIExpression()), !dbg !11005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !10994, metadata !DIExpression()), !dbg !11005
  call void @llvm.dbg.value(metadata i8 %force_unique_p, metadata !10995, metadata !DIExpression()), !dbg !11005
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 0, !dbg !11006
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn_rtx, align 8, !dbg !11007
  %count = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 4, !dbg !11008
  store i32 0, i32* %count, align 8, !dbg !11009
  %cost = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 5, !dbg !11010
  store i32 -1, i32* %cost, align 4, !dbg !11011
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11012
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11012
  %0 = load i32, i32* %rt_int, align 8, !dbg !11012
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !11012
  %insns_size = getelementptr inbounds %struct.df, %struct.df* %1, i64 0, i32 11, !dbg !11012
  %2 = load i32, i32* %insns_size, align 8, !dbg !11012
  %cmp = icmp ult i32 %0, %2, !dbg !11012
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !11012

cond.true:                                        ; preds = %entry
  %insns = getelementptr inbounds %struct.df, %struct.df* %1, i64 0, i32 10, !dbg !11012
  %3 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !11012
  %idxprom = sext i32 %0 to i64, !dbg !11012
  %arrayidx5 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %3, i64 %idxprom, !dbg !11012
  %4 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx5, align 8, !dbg !11012
  %phitmp = icmp ne %struct.df_insn_info* %4, null, !dbg !11012
  br label %cond.end, !dbg !11012

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i1 [ %phitmp, %cond.true ], [ false, %entry ]
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 1, !dbg !11014
  br i1 %cond, label %if.then, label %if.else, !dbg !11015

if.then:                                          ; preds = %cond.end
  tail call fastcc void @init_id_from_df(%struct.idata_def* nonnull %id, %struct.rtx_def* %insn, i8 zeroext %force_unique_p) #8, !dbg !11016
  br label %if.end, !dbg !11016

if.else:                                          ; preds = %cond.end
  tail call fastcc void @deps_init_id(%struct.idata_def* nonnull %id, %struct.rtx_def* %insn, i8 zeroext %force_unique_p) #8, !dbg !11017
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 35), align 8, !dbg !11018
  %tobool = icmp eq i8 (%struct.rtx_def*)* %5, null, !dbg !11019
  %cond8 = select i1 %tobool, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* null, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* @hash_with_unspec_callback, !dbg !11019
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* %cond8, metadata !10996, metadata !DIExpression()), !dbg !11005
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 1, i32 0, !dbg !11020
  %6 = load i32, i32* %type, align 8, !dbg !11020
  %cmp10 = icmp eq i32 %6, 23, !dbg !11020
  br i1 %cmp10, label %if.then11, label %if.else19, !dbg !11021

if.then11:                                        ; preds = %if.end
  %rhs13 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 1, i32 2, !dbg !11022
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rhs13, align 8, !dbg !11022
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !11002, metadata !DIExpression()), !dbg !11023
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !11024
  %bf.load = load i32, i32* %8, align 8, !dbg !11024
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !11024
  %bf.clear = and i32 %bf.lshr, 255, !dbg !11024
  %call = tail call i32 @hash_rtx_cb(%struct.rtx_def* %7, i32 %bf.clear, i32* null, i32* null, i8 zeroext 0, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* %cond8) #6, !dbg !11025
  %hash = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 2, !dbg !11026
  store i32 %call, i32* %hash, align 8, !dbg !11027
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !11028
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, !dbg !11028
  %10 = getelementptr inbounds %union.u, %union.u* %u15, i64 1, i32 0, i32 0, i64 0, !dbg !11028
  %rt_rtx = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !11028
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11028
  %call18 = tail call i32 @hash_rtx_cb(%struct.rtx_def* %11, i32 0, i32* null, i32* null, i8 zeroext 0, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* %cond8) #6, !dbg !11029
  %hash_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 3, !dbg !11030
  store i32 %call18, i32* %hash_rtx, align 4, !dbg !11031
  br label %if.end29, !dbg !11032

if.else19:                                        ; preds = %if.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !11033
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, !dbg !11033
  %13 = getelementptr inbounds %union.u, %union.u* %u21, i64 1, i32 0, i32 0, i64 0, !dbg !11033
  %rt_rtx24 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !11033
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !11033
  %call25 = tail call i32 @hash_rtx_cb(%struct.rtx_def* %14, i32 0, i32* null, i32* null, i8 zeroext 0, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* %cond8) #6, !dbg !11035
  %hash26 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 2, !dbg !11036
  store i32 %call25, i32* %hash26, align 8, !dbg !11037
  %hash_rtx28 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 3, !dbg !11038
  store i32 %call25, i32* %hash_rtx28, align 4, !dbg !11039
  br label %if.end29

if.end29:                                         ; preds = %if.else19, %if.then11
  %call30 = tail call i32 @haifa_classify_insn(%struct.rtx_def* %insn) #6, !dbg !11040
  call void @llvm.dbg.value(metadata i32 %call30, metadata !11001, metadata !DIExpression()), !dbg !11005
  %cmp31 = icmp sgt i32 %call30, 1, !dbg !11041
  br i1 %cmp31, label %land.lhs.true, label %if.else36, !dbg !11043

land.lhs.true:                                    ; preds = %if.end29
  %15 = load i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 33), align 8, !dbg !11044
  %tobool32 = icmp eq i32 (%struct.rtx_def*)* %15, null, !dbg !11045
  br i1 %tobool32, label %if.then35, label %lor.lhs.false, !dbg !11046

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call33 = tail call i32 %15(%struct.rtx_def* %insn) #6, !dbg !11047
  %and = and i32 %call33, 258048, !dbg !11048
  %cmp34 = icmp eq i32 %and, 0, !dbg !11049
  br i1 %cmp34, label %if.then35, label %if.else36, !dbg !11050

if.then35:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %may_trap_p = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 6, !dbg !11051
  store i8 1, i8* %may_trap_p, align 8, !dbg !11052
  br label %if.end38, !dbg !11051

if.else36:                                        ; preds = %lor.lhs.false, %if.end29
  %may_trap_p37 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 6, !dbg !11053
  store i8 0, i8* %may_trap_p37, align 8, !dbg !11054
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.then35
  ret void, !dbg !11055
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_id_from_df(%struct.idata_def* %id, %struct.rtx_def* %insn, i8 zeroext %force_unique_p) unnamed_addr #5 !dbg !11056 {
entry:
  call void @llvm.dbg.value(metadata %struct.idata_def* %id, metadata !11060, metadata !DIExpression()), !dbg !11063
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11061, metadata !DIExpression()), !dbg !11063
  call void @llvm.dbg.value(metadata i8 %force_unique_p, metadata !11062, metadata !DIExpression()), !dbg !11063
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11064
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11064
  %0 = load i32, i32* %rt_int, align 8, !dbg !11064
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !11064
  %insns_size = getelementptr inbounds %struct.df, %struct.df* %1, i64 0, i32 11, !dbg !11064
  %2 = load i32, i32* %insns_size, align 8, !dbg !11064
  %cmp = icmp ult i32 %0, %2, !dbg !11064
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !11064

cond.true:                                        ; preds = %entry
  %insns = getelementptr inbounds %struct.df, %struct.df* %1, i64 0, i32 10, !dbg !11064
  %3 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !11064
  %idxprom = sext i32 %0 to i64, !dbg !11064
  %arrayidx5 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %3, i64 %idxprom, !dbg !11064
  %4 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx5, align 8, !dbg !11064
  %phitmp = icmp ne %struct.df_insn_info* %4, null, !dbg !11064
  br label %cond.end, !dbg !11064

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i1 [ %phitmp, %cond.true ], [ false, %entry ]
  br i1 %cond, label %cond.end9, label %cond.true7, !dbg !11064

cond.true7:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2666, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11064
  br label %cond.end9, !dbg !11064

cond.end9:                                        ; preds = %cond.end, %cond.true7
  tail call fastcc void @setup_id_for_insn(%struct.idata_def* %id, %struct.rtx_def* %insn, i8 zeroext %force_unique_p) #8, !dbg !11065
  tail call fastcc void @setup_id_lhs_rhs(%struct.idata_def* %id, %struct.rtx_def* %insn, i8 zeroext %force_unique_p) #8, !dbg !11066
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !11067
  %5 = getelementptr inbounds %union.u, %union.u* %u11, i64 1, i32 0, i32 0, i64 0, !dbg !11067
  %rt_rtx = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !11067
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11067
  %7 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !11067
  %cmp14 = icmp eq %struct.rtx_def* %6, %7, !dbg !11067
  br i1 %cmp14, label %return, label %if.end, !dbg !11069

if.end:                                           ; preds = %cond.end9
  tail call fastcc void @maybe_downgrade_id_to_use(%struct.idata_def* %id, %struct.rtx_def* %insn) #8, !dbg !11070
  tail call fastcc void @setup_id_reg_sets(%struct.idata_def* %id, %struct.rtx_def* %insn) #8, !dbg !11071
  br label %return, !dbg !11072

return:                                           ; preds = %cond.end9, %if.end
  ret void, !dbg !11072
}

; Function Attrs: nounwind uwtable
define internal fastcc void @deps_init_id(%struct.idata_def* %id, %struct.rtx_def* %insn, i8 zeroext %force_unique_p) unnamed_addr #5 !dbg !11073 {
entry:
  %_dc = alloca %struct.deps, align 8
  call void @llvm.dbg.value(metadata %struct.idata_def* %id, metadata !11075, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11076, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata i8 %force_unique_p, metadata !11077, metadata !DIExpression()), !dbg !11080
  %0 = bitcast %struct.deps* %_dc to i8*, !dbg !11081
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %0) #7, !dbg !11081
  call void @llvm.dbg.value(metadata %struct.deps* %_dc, metadata !11079, metadata !DIExpression()), !dbg !11080
  store i32 3, i32* @deps_init_id_data.0, align 8, !dbg !11082
  store %struct.idata_def* %id, %struct.idata_def** @deps_init_id_data.1, align 8, !dbg !11083
  store i8 %force_unique_p, i8* @deps_init_id_data.2, align 8, !dbg !11084
  store i1 false, i1* @deps_init_id_data.3, align 8, !dbg !11085
  call void @llvm.dbg.value(metadata %struct.deps* %_dc, metadata !11078, metadata !DIExpression(DW_OP_deref)), !dbg !11080
  call void @init_deps(%struct.deps* nonnull %_dc, i8 zeroext 0) #6, !dbg !11086
  %call = call i8* @memcpy(i8* bitcast (%struct.sched_deps_info_def* @deps_init_id_sched_deps_info to i8*), i8* bitcast (%struct.sched_deps_info_def* @const_deps_init_id_sched_deps_info to i8*), i64 104) #6, !dbg !11087
  %1 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !11088
  %cmp = icmp eq %struct.spec_info_def* %1, null, !dbg !11090
  br i1 %cmp, label %if.end, label %if.then, !dbg !11091

if.then:                                          ; preds = %entry
  %bf.load = load i8, i8* getelementptr inbounds (%struct.sched_deps_info_def, %struct.sched_deps_info_def* @deps_init_id_sched_deps_info, i64 0, i32 12), align 8, !dbg !11092
  %bf.set = or i8 %bf.load, 4, !dbg !11092
  store i8 %bf.set, i8* getelementptr inbounds (%struct.sched_deps_info_def, %struct.sched_deps_info_def* @deps_init_id_sched_deps_info, i64 0, i32 12), align 8, !dbg !11092
  br label %if.end, !dbg !11093

if.end:                                           ; preds = %entry, %if.then
  store %struct.sched_deps_info_def* @deps_init_id_sched_deps_info, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !11094
  call void @llvm.dbg.value(metadata %struct.deps* %_dc, metadata !11078, metadata !DIExpression(DW_OP_deref)), !dbg !11080
  call void @deps_analyze_insn(%struct.deps* nonnull %_dc, %struct.rtx_def* %insn) #6, !dbg !11095
  call void @llvm.dbg.value(metadata %struct.deps* %_dc, metadata !11078, metadata !DIExpression(DW_OP_deref)), !dbg !11080
  call void @free_deps(%struct.deps* nonnull %_dc) #6, !dbg !11096
  store %struct.idata_def* null, %struct.idata_def** @deps_init_id_data.1, align 8, !dbg !11097
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %0) #7, !dbg !11098
  ret void, !dbg !11098
}

; Function Attrs: nounwind uwtable
define internal i32 @hash_with_unspec_callback(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def** %nx, i32* %nmode) #5 !dbg !11099 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !11101, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata i32 %mode, metadata !11102, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata %struct.rtx_def** %nx, metadata !11103, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata i32* %nmode, metadata !11104, metadata !DIExpression()), !dbg !11105
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !11106
  %bf.load = load i32, i32* %0, align 8, !dbg !11106
  %bf.clear = and i32 %bf.load, 65535, !dbg !11106
  %cmp = icmp eq i32 %bf.clear, 18, !dbg !11108
  %1 = load i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 35), align 8, !dbg !11109
  %tobool = icmp ne i8 (%struct.rtx_def*)* %1, null, !dbg !11110
  %or.cond = and i1 %cmp, %tobool, !dbg !11111
  br i1 %or.cond, label %land.lhs.true1, label %return, !dbg !11111

land.lhs.true1:                                   ; preds = %entry
  %call = tail call zeroext i8 %1(%struct.rtx_def* %x) #6, !dbg !11112
  %tobool2 = icmp eq i8 %call, 0, !dbg !11112
  br i1 %tobool2, label %return, label %if.then, !dbg !11113

if.then:                                          ; preds = %land.lhs.true1
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11114
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !11114
  %2 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !11114
  %arrayidx3 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2, i64 0, i32 1, i64 0, !dbg !11114
  %3 = bitcast %struct.rtx_def** %arrayidx3 to i64*, !dbg !11114
  %4 = load i64, i64* %3, align 8, !dbg !11114
  %5 = bitcast %struct.rtx_def** %nx to i64*, !dbg !11116
  store i64 %4, i64* %5, align 8, !dbg !11116
  store i32 0, i32* %nmode, align 4, !dbg !11117
  br label %return, !dbg !11118

return:                                           ; preds = %land.lhs.true1, %entry, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %land.lhs.true1 ], [ 0, %entry ], !dbg !11105
  ret i32 %retval.0, !dbg !11119
}

declare dso_local i32 @hash_rtx_cb(%struct.rtx_def*, i32, i32*, i32*, i8 zeroext, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)*) local_unnamed_addr #2

declare dso_local i32 @haifa_classify_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_id_for_insn(%struct.idata_def* %id, %struct.rtx_def* %insn, i8 zeroext %force_unique_p) unnamed_addr #5 !dbg !11120 {
entry:
  call void @llvm.dbg.value(metadata %struct.idata_def* %id, metadata !11122, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11123, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i8 %force_unique_p, metadata !11124, metadata !DIExpression()), !dbg !11126
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !11127
  %bf.load = load i32, i32* %0, align 8, !dbg !11127
  %bf.clear = and i32 %bf.load, 65535, !dbg !11127
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !11125, metadata !DIExpression()), !dbg !11126
  %cmp = icmp ne i32 %bf.clear, 8, !dbg !11128
  %tobool = icmp ne i8 %force_unique_p, 0, !dbg !11130
  %or.cond = or i1 %cmp, %tobool, !dbg !11131
  br i1 %or.cond, label %if.else, label %if.end10, !dbg !11131

if.else:                                          ; preds = %entry
  %trunc = trunc i32 %bf.load to i16, !dbg !11132
  switch i16 %trunc, label %if.end10 [
    i16 9, label %land.lhs.true2
    i16 7, label %if.then7
  ], !dbg !11132

land.lhs.true2:                                   ; preds = %if.else
  %call = tail call i32 @simplejump_p(%struct.rtx_def* %insn) #6, !dbg !11134
  %tobool3 = icmp eq i32 %call, 0, !dbg !11134
  br i1 %tobool3, label %if.else5, label %if.end10, !dbg !11135

if.else5:                                         ; preds = %land.lhs.true2
  %cmp6 = icmp eq i32 %bf.clear, 7, !dbg !11136
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !11138

if.then7:                                         ; preds = %if.else, %if.else5
  %tobool8 = icmp eq i8 %force_unique_p, 0, !dbg !11139
  %cond = select i1 %tobool8, i32 24, i32 8, !dbg !11139
  call void @llvm.dbg.value(metadata i32 %cond, metadata !11125, metadata !DIExpression()), !dbg !11126
  br label %if.end10, !dbg !11140

if.end10:                                         ; preds = %land.lhs.true2, %if.else, %if.then7, %if.else5, %entry
  %type.2 = phi i32 [ 23, %entry ], [ 36, %land.lhs.true2 ], [ %cond, %if.then7 ], [ %bf.clear, %if.else5 ], [ %bf.clear, %if.else ], !dbg !11141
  call void @llvm.dbg.value(metadata i32 %type.2, metadata !11125, metadata !DIExpression()), !dbg !11126
  %type11 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 0, !dbg !11142
  store i32 %type.2, i32* %type11, align 8, !dbg !11143
  %call12 = tail call %struct.bitmap_head_def* @get_clear_regset_from_pool() #8, !dbg !11144
  %reg_sets = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 3, !dbg !11145
  store %struct.bitmap_head_def* %call12, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !11146
  %call13 = tail call %struct.bitmap_head_def* @get_clear_regset_from_pool() #8, !dbg !11147
  %reg_uses = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 5, !dbg !11148
  store %struct.bitmap_head_def* %call13, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !11149
  %call14 = tail call %struct.bitmap_head_def* @get_clear_regset_from_pool() #8, !dbg !11150
  %reg_clobbers = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 4, !dbg !11151
  store %struct.bitmap_head_def* %call14, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !11152
  ret void, !dbg !11153
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_id_lhs_rhs(%struct.idata_def* %id, %struct.rtx_def* %insn, i8 zeroext %force_unique_p) unnamed_addr #5 !dbg !11154 {
entry:
  call void @llvm.dbg.value(metadata %struct.idata_def* %id, metadata !11156, metadata !DIExpression()), !dbg !11160
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11157, metadata !DIExpression()), !dbg !11160
  call void @llvm.dbg.value(metadata i8 %force_unique_p, metadata !11158, metadata !DIExpression()), !dbg !11160
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !11161
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !11161
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !11161
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11161
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !11159, metadata !DIExpression()), !dbg !11160
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !11162
  %bf.load = load i32, i32* %2, align 8, !dbg !11162
  %bf.clear = and i32 %bf.load, 65535, !dbg !11162
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !11162
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !11164

land.lhs.true:                                    ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !11165
  %bf.load1 = load i32, i32* %3, align 8, !dbg !11165
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !11165
  %cmp3 = icmp ne i32 %bf.clear2, 23, !dbg !11166
  %tobool = icmp ne i8 %force_unique_p, 0, !dbg !11167
  %or.cond = or i1 %cmp3, %tobool, !dbg !11168
  br i1 %or.cond, label %if.else, label %if.then, !dbg !11168

if.then:                                          ; preds = %land.lhs.true
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11169
  %5 = bitcast %union.rtunion_def* %4 to i64*, !dbg !11169
  %6 = load i64, i64* %5, align 8, !dbg !11169
  %rhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 2, !dbg !11171
  %7 = bitcast %struct.rtx_def** %rhs to i64*, !dbg !11172
  store i64 %6, i64* %7, align 8, !dbg !11172
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11173
  %8 = bitcast %union.rtunion_def* %arrayidx11 to i64*, !dbg !11173
  %9 = load i64, i64* %8, align 8, !dbg !11173
  %lhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 1, !dbg !11174
  %10 = bitcast %struct.rtx_def** %lhs to i64*, !dbg !11175
  store i64 %9, i64* %10, align 8, !dbg !11175
  br label %if.end, !dbg !11176

if.else:                                          ; preds = %land.lhs.true, %entry
  %rhs13 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 2, !dbg !11177
  store %struct.rtx_def* null, %struct.rtx_def** %rhs13, align 8, !dbg !11178
  %lhs14 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 1, !dbg !11179
  store %struct.rtx_def* null, %struct.rtx_def** %lhs14, align 8, !dbg !11180
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11181
}

; Function Attrs: nounwind uwtable
define internal fastcc void @maybe_downgrade_id_to_use(%struct.idata_def* %id, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !11182 {
entry:
  call void @llvm.dbg.value(metadata %struct.idata_def* %id, metadata !11186, metadata !DIExpression()), !dbg !11257
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11187, metadata !DIExpression()), !dbg !11257
  call void @llvm.dbg.value(metadata i8 0, metadata !11188, metadata !DIExpression()), !dbg !11257
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11258
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11258
  %0 = load i32, i32* %rt_int, align 8, !dbg !11258
  call void @llvm.dbg.value(metadata i32 %0, metadata !11189, metadata !DIExpression()), !dbg !11257
  %lhs1 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 1, !dbg !11259
  %1 = load %struct.rtx_def*, %struct.rtx_def** %lhs1, align 8, !dbg !11259
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !11251, metadata !DIExpression()), !dbg !11257
  %rhs2 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 2, !dbg !11260
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rhs2, align 8, !dbg !11260
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !11252, metadata !DIExpression()), !dbg !11257
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 0, !dbg !11261
  %3 = load i32, i32* %type, align 8, !dbg !11261
  %cmp = icmp eq i32 %3, 23, !dbg !11263
  br i1 %cmp, label %if.end, label %cleanup.cont42, !dbg !11264

if.end:                                           ; preds = %entry
  %tobool = icmp eq %struct.rtx_def* %1, null, !dbg !11265
  br i1 %tobool, label %if.then4, label %lor.lhs.false, !dbg !11267

lor.lhs.false:                                    ; preds = %if.end
  %call = tail call fastcc zeroext i8 @lhs_and_rhs_separable_p(%struct.rtx_def* nonnull %1, %struct.rtx_def* %2) #8, !dbg !11268
  %tobool3 = icmp eq i8 %call, 0, !dbg !11268
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !11269

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 24, i32* %type, align 8, !dbg !11270
  br label %cleanup.cont42, !dbg !11272

if.end6:                                          ; preds = %lor.lhs.false
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !11273
  %insns = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 10, !dbg !11273
  %5 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !11273
  %idxprom = zext i32 %0 to i64, !dbg !11273
  %arrayidx7 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %5, i64 %idxprom, !dbg !11273
  %6 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx7, align 8, !dbg !11273
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %6, i64 0, i32 1, !dbg !11273
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !11273
  call void @llvm.dbg.value(metadata %union.df_ref_d** %7, metadata !11190, metadata !DIExpression()), !dbg !11257
  br label %for.cond, !dbg !11274

for.cond:                                         ; preds = %for.inc, %if.end6
  %must_be_use.0 = phi i8 [ 0, %if.end6 ], [ %must_be_use.1, %for.inc ], !dbg !11257
  %rec.0 = phi %union.df_ref_d** [ %7, %if.end6 ], [ %incdec.ptr, %for.inc ], !dbg !11275
  call void @llvm.dbg.value(metadata %union.df_ref_d** %rec.0, metadata !11190, metadata !DIExpression()), !dbg !11257
  call void @llvm.dbg.value(metadata i8 %must_be_use.0, metadata !11188, metadata !DIExpression()), !dbg !11257
  %8 = load %union.df_ref_d*, %union.df_ref_d** %rec.0, align 8, !dbg !11276
  %tobool8 = icmp eq %union.df_ref_d* %8, null, !dbg !11277
  br i1 %tobool8, label %for.end, label %for.body, !dbg !11277

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %8, metadata !11253, metadata !DIExpression()), !dbg !11278
  %insn_info = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %8, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !11279
  %9 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !11279
  %insn9 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %9, i64 0, i32 0, !dbg !11279
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn9, align 8, !dbg !11279
  %tobool10 = icmp eq %struct.rtx_def* %10, null, !dbg !11279
  br i1 %tobool10, label %if.end26, label %land.lhs.true, !dbg !11281

land.lhs.true:                                    ; preds = %for.body
  %11 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %8, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !11282
  %bf.load = load i32, i32* %11, align 8, !dbg !11282
  %cmp12 = icmp slt i32 %bf.load, 0, !dbg !11282
  br i1 %cmp12, label %land.lhs.true13, label %if.end26, !dbg !11283

land.lhs.true13:                                  ; preds = %land.lhs.true
  %bf.clear = and i32 %bf.load, 255, !dbg !11284
  %cmp16 = icmp eq i32 %bf.clear, 2, !dbg !11284
  br i1 %cmp16, label %cond.true, label %lor.lhs.false17, !dbg !11284

lor.lhs.false17:                                  ; preds = %land.lhs.true13
  %cmp21 = icmp eq i32 %bf.clear, 3, !dbg !11284
  br i1 %cmp21, label %cond.true, label %cond.end, !dbg !11284

cond.true:                                        ; preds = %lor.lhs.false17, %land.lhs.true13
  %loc = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %8, i64 0, i32 0, i32 0, i32 1, !dbg !11284
  %12 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !11284
  br label %cond.end, !dbg !11284

cond.end:                                         ; preds = %lor.lhs.false17, %cond.true
  %cond = phi %struct.rtx_def** [ %12, %cond.true ], [ null, %lor.lhs.false17 ], !dbg !11284
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rhs2, align 8, !dbg !11285
  %call23 = tail call i32 @loc_mentioned_in_p(%struct.rtx_def** %cond, %struct.rtx_def* %13) #6, !dbg !11286
  %tobool24 = icmp eq i32 %call23, 0, !dbg !11286
  br i1 %tobool24, label %if.end26, label %cleanup, !dbg !11287

if.end26:                                         ; preds = %cond.end, %for.body, %land.lhs.true
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %8, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !11288
  %14 = load i32, i32* %regno, align 8, !dbg !11288
  %15 = and i32 %14, -8, !dbg !11288
  %cmp28 = icmp eq i32 %15, 8, !dbg !11288
  %.must_be_use.0 = select i1 %cmp28, i8 1, i8 %must_be_use.0, !dbg !11290
  %. = select i1 %cmp28, i32 2, i32 0, !dbg !11290
  br label %cleanup, !dbg !11290

cleanup:                                          ; preds = %cond.end, %if.end26
  %must_be_use.1 = phi i8 [ 1, %cond.end ], [ %.must_be_use.0, %if.end26 ], !dbg !11257
  %cleanup.dest.slot.0 = phi i32 [ 2, %cond.end ], [ %., %if.end26 ]
  call void @llvm.dbg.value(metadata i8 %must_be_use.1, metadata !11188, metadata !DIExpression()), !dbg !11257
  %switch = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %switch, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %rec.0, i64 1, !dbg !11291
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !11190, metadata !DIExpression()), !dbg !11257
  br label %for.cond, !dbg !11292, !llvm.loop !11293

for.end:                                          ; preds = %for.cond, %cleanup
  %must_be_use.2 = phi i8 [ %must_be_use.1, %cleanup ], [ %must_be_use.0, %for.cond ], !dbg !11257
  call void @llvm.dbg.value(metadata i8 %must_be_use.2, metadata !11188, metadata !DIExpression()), !dbg !11257
  %tobool32 = icmp eq i8 %must_be_use.2, 0, !dbg !11295
  br i1 %tobool32, label %cleanup.cont42, label %if.then33, !dbg !11297

if.then33:                                        ; preds = %for.end
  store i32 24, i32* %type, align 8, !dbg !11298
  br label %cleanup.cont42, !dbg !11299

cleanup.cont42:                                   ; preds = %for.end, %entry, %if.then4, %if.then33
  ret void, !dbg !11300
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_id_reg_sets(%struct.idata_def* %id, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !11301 {
entry:
  call void @llvm.dbg.value(metadata %struct.idata_def* %id, metadata !11303, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11304, metadata !DIExpression()), !dbg !11318
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11319
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11319
  %0 = load i32, i32* %rt_int, align 8, !dbg !11319
  call void @llvm.dbg.value(metadata i32 %0, metadata !11305, metadata !DIExpression()), !dbg !11318
  %call = tail call %struct.bitmap_head_def* @get_clear_regset_from_pool() #8, !dbg !11320
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !11307, metadata !DIExpression()), !dbg !11318
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !11321
  %insns = getelementptr inbounds %struct.df, %struct.df* %1, i64 0, i32 10, !dbg !11321
  %2 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !11321
  %idxprom = zext i32 %0 to i64, !dbg !11321
  %arrayidx1 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %2, i64 %idxprom, !dbg !11321
  %3 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx1, align 8, !dbg !11321
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %3, i64 0, i32 1, !dbg !11321
  %4 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !11321
  call void @llvm.dbg.value(metadata %union.df_ref_d** %4, metadata !11306, metadata !DIExpression()), !dbg !11318
  %reg_clobbers = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 4, !dbg !11322
  %reg_sets = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 3, !dbg !11324
  br label %for.cond, !dbg !11327

for.cond:                                         ; preds = %for.inc, %entry
  %rec.0 = phi %union.df_ref_d** [ %4, %entry ], [ %incdec.ptr, %for.inc ], !dbg !11328
  call void @llvm.dbg.value(metadata %union.df_ref_d** %rec.0, metadata !11306, metadata !DIExpression()), !dbg !11318
  %5 = load %union.df_ref_d*, %union.df_ref_d** %rec.0, align 8, !dbg !11329
  %tobool = icmp eq %union.df_ref_d* %5, null, !dbg !11330
  br i1 %tobool, label %for.end, label %for.body, !dbg !11330

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %5, metadata !11308, metadata !DIExpression()), !dbg !11331
  %regno2 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !11332
  %6 = load i32, i32* %regno2, align 8, !dbg !11332
  call void @llvm.dbg.value(metadata i32 %6, metadata !11312, metadata !DIExpression()), !dbg !11331
  %7 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !11333
  %bf.load = load i32, i32* %7, align 8, !dbg !11333
  %and = and i32 %bf.load, -2139095040, !dbg !11333
  %cmp = icmp eq i32 %and, 0, !dbg !11333
  br i1 %cmp, label %if.else, label %if.then, !dbg !11334

if.then:                                          ; preds = %for.body
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !11335
  %call4 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %8, i32 %6) #6, !dbg !11335
  br label %if.end18, !dbg !11335

if.else:                                          ; preds = %for.body
  %and8 = and i32 %bf.load, 4194304, !dbg !11336
  %cmp9 = icmp eq i32 %and8, 0, !dbg !11336
  br i1 %cmp9, label %if.then10, label %if.end18, !dbg !11337

if.then10:                                        ; preds = %if.else
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !11338
  %call11 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %9, i32 %6) #6, !dbg !11338
  %10 = and i32 %6, -8, !dbg !11339
  %cmp12 = icmp eq i32 %10, 8, !dbg !11339
  br i1 %cmp12, label %if.then14, label %if.end18, !dbg !11341

if.then14:                                        ; preds = %if.then10
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !11342
  %call16 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %11, i32 8) #6, !dbg !11342
  br label %if.end18, !dbg !11342

if.end18:                                         ; preds = %if.else, %if.then14, %if.then10, %if.then
  %bf.load20 = load i32, i32* %7, align 8, !dbg !11343
  %and22 = and i32 %bf.load20, 65536, !dbg !11343
  %cmp23 = icmp ne i32 %and22, 0, !dbg !11343
  %cmp25 = icmp eq i32 %6, 7, !dbg !11345
  %or.cond = or i1 %cmp23, %cmp25, !dbg !11346
  br i1 %or.cond, label %if.then27, label %for.inc, !dbg !11346

if.then27:                                        ; preds = %if.end18
  %call28 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %6) #6, !dbg !11347
  br label %for.inc, !dbg !11347

for.inc:                                          ; preds = %if.then27, %if.end18
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %rec.0, i64 1, !dbg !11348
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !11306, metadata !DIExpression()), !dbg !11318
  br label %for.cond, !dbg !11349, !llvm.loop !11350

for.end:                                          ; preds = %for.cond
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !11352
  %insns30 = getelementptr inbounds %struct.df, %struct.df* %12, i64 0, i32 10, !dbg !11352
  %13 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns30, align 8, !dbg !11352
  %arrayidx32 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %13, i64 %idxprom, !dbg !11352
  %14 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx32, align 8, !dbg !11352
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %14, i64 0, i32 2, !dbg !11352
  %15 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !11352
  call void @llvm.dbg.value(metadata %union.df_ref_d** %15, metadata !11306, metadata !DIExpression()), !dbg !11318
  %reg_uses = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i64 0, i32 5, !dbg !11353
  br label %for.cond33, !dbg !11357

for.cond33:                                       ; preds = %for.inc62, %for.end
  %rec.1 = phi %union.df_ref_d** [ %15, %for.end ], [ %incdec.ptr63, %for.inc62 ], !dbg !11358
  call void @llvm.dbg.value(metadata %union.df_ref_d** %rec.1, metadata !11306, metadata !DIExpression()), !dbg !11318
  %16 = load %union.df_ref_d*, %union.df_ref_d** %rec.1, align 8, !dbg !11359
  %tobool34 = icmp eq %union.df_ref_d* %16, null, !dbg !11360
  br i1 %tobool34, label %for.end64, label %for.body35, !dbg !11360

for.body35:                                       ; preds = %for.cond33
  call void @llvm.dbg.value(metadata %union.df_ref_d* %16, metadata !11313, metadata !DIExpression()), !dbg !11361
  %regno38 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %16, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !11362
  %17 = load i32, i32* %regno38, align 8, !dbg !11362
  call void @llvm.dbg.value(metadata i32 %17, metadata !11317, metadata !DIExpression()), !dbg !11361
  %call39 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %17) #6, !dbg !11363
  %tobool40 = icmp eq i32 %call39, 0, !dbg !11363
  br i1 %tobool40, label %if.else43, label %if.then41, !dbg !11364

if.then41:                                        ; preds = %for.body35
  %call42 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %call, i32 %17) #6, !dbg !11365
  br label %for.inc62, !dbg !11365

if.else43:                                        ; preds = %for.body35
  %18 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %16, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !11366
  %bf.load45 = load i32, i32* %18, align 8, !dbg !11366
  %and47 = and i32 %bf.load45, 536870912, !dbg !11366
  %cmp48 = icmp eq i32 %and47, 0, !dbg !11366
  br i1 %cmp48, label %if.then50, label %for.inc62, !dbg !11367

if.then50:                                        ; preds = %if.else43
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !11368
  %call51 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %19, i32 %17) #6, !dbg !11368
  %20 = and i32 %17, -8, !dbg !11369
  %cmp54 = icmp eq i32 %20, 8, !dbg !11369
  br i1 %cmp54, label %if.then56, label %for.inc62, !dbg !11371

if.then56:                                        ; preds = %if.then50
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !11372
  %call58 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %21, i32 8) #6, !dbg !11372
  br label %for.inc62, !dbg !11372

for.inc62:                                        ; preds = %if.else43, %if.then41, %if.then50, %if.then56
  %incdec.ptr63 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %rec.1, i64 1, !dbg !11373
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr63, metadata !11306, metadata !DIExpression()), !dbg !11318
  br label %for.cond33, !dbg !11374, !llvm.loop !11375

for.end64:                                        ; preds = %for.cond33
  tail call void @return_regset_to_pool(%struct.bitmap_head_def* %call) #8, !dbg !11377
  ret void, !dbg !11378
}

declare dso_local i32 @simplejump_p(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @lhs_and_rhs_separable_p(%struct.rtx_def* %lhs, %struct.rtx_def* %rhs) unnamed_addr #5 !dbg !11379 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %lhs, metadata !11383, metadata !DIExpression()), !dbg !11385
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rhs, metadata !11384, metadata !DIExpression()), !dbg !11385
  %cmp = icmp eq %struct.rtx_def* %lhs, null, !dbg !11386
  %cmp1 = icmp eq %struct.rtx_def* %rhs, null, !dbg !11388
  %or.cond = or i1 %cmp, %cmp1, !dbg !11389
  br i1 %or.cond, label %return, label %if.end, !dbg !11389

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rhs, i64 0, i32 0, !dbg !11390
  %bf.load = load i32, i32* %0, align 8, !dbg !11390
  %bf.clear = and i32 %bf.load, 65535, !dbg !11390
  %idxprom = zext i32 %bf.clear to i64, !dbg !11390
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !11390
  %1 = load i32, i32* %arrayidx, align 4, !dbg !11390
  %cmp2 = icmp eq i32 %1, 9, !dbg !11390
  br i1 %cmp2, label %return, label %if.end4, !dbg !11392

if.end4:                                          ; preds = %if.end
  %cmp9 = icmp ult i32 %1, 2, !dbg !11393
  br i1 %cmp9, label %return, label %if.end11, !dbg !11395

if.end11:                                         ; preds = %if.end4
  %cmp14 = icmp eq i32 %bf.clear, 37, !dbg !11396
  br i1 %cmp14, label %return, label %if.end16, !dbg !11398

if.end16:                                         ; preds = %if.end11
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %lhs, i64 0, i32 0, !dbg !11399
  %bf.load17 = load i32, i32* %2, align 8, !dbg !11399
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !11399
  %cmp19 = icmp eq i32 %bf.clear18, 43, !dbg !11399
  br i1 %cmp19, label %return, label %if.end21, !dbg !11401

if.end21:                                         ; preds = %if.end16
  %cmp24 = icmp eq i32 %bf.clear18, 37, !dbg !11402
  br i1 %cmp24, label %if.end29, label %land.lhs.true, !dbg !11404

land.lhs.true:                                    ; preds = %if.end21
  br i1 false, label %land.lhs.true.if.end29_crit_edge, label %return, !dbg !11405

land.lhs.true.if.end29_crit_edge:                 ; preds = %land.lhs.true
  br label %if.end29, !dbg !11405

if.end29:                                         ; preds = %land.lhs.true.if.end29_crit_edge, %if.end21
  br label %return, !dbg !11406

return:                                           ; preds = %land.lhs.true, %if.end16, %if.end11, %if.end4, %if.end, %entry, %if.end29
  %retval.0 = phi i8 [ 1, %if.end29 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end4 ], [ 0, %if.end11 ], [ 0, %if.end16 ], [ 0, %land.lhs.true ], !dbg !11385
  ret i8 %retval.0, !dbg !11407
}

declare dso_local i32 @loc_mentioned_in_p(%struct.rtx_def**, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @deps_init_id_start_insn(%struct.rtx_def* %insn) #5 !dbg !11408 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11410, metadata !DIExpression()), !dbg !11411
  %0 = load i32, i32* @deps_init_id_data.0, align 8, !dbg !11412
  %cmp = icmp eq i32 %0, 3, !dbg !11412
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11412

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2391, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11412
  br label %cond.end, !dbg !11412

cond.end:                                         ; preds = %entry, %cond.true
  %1 = load %struct.idata_def*, %struct.idata_def** @deps_init_id_data.1, align 8, !dbg !11413
  %2 = load i8, i8* @deps_init_id_data.2, align 8, !dbg !11414
  tail call fastcc void @setup_id_for_insn(%struct.idata_def* %1, %struct.rtx_def* %insn, i8 zeroext %2) #8, !dbg !11415
  store i32 0, i32* @deps_init_id_data.0, align 8, !dbg !11416
  ret void, !dbg !11417
}

; Function Attrs: nounwind uwtable
define internal void @deps_init_id_finish_insn() #5 !dbg !11418 {
entry:
  %0 = load i32, i32* @deps_init_id_data.0, align 8, !dbg !11424
  %cmp = icmp eq i32 %0, 0, !dbg !11424
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11424

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2489, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11424
  br label %cond.end, !dbg !11424

cond.end:                                         ; preds = %entry, %cond.true
  %1 = load %struct.idata_def*, %struct.idata_def** @deps_init_id_data.1, align 8, !dbg !11425
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %1, i64 0, i32 0, !dbg !11425
  %2 = load i32, i32* %type, align 8, !dbg !11425
  %cmp1 = icmp eq i32 %2, 23, !dbg !11426
  br i1 %cmp1, label %if.then, label %if.end28, !dbg !11427

if.then:                                          ; preds = %cond.end
  %lhs2 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %1, i64 0, i32 1, !dbg !11428
  %3 = load %struct.rtx_def*, %struct.rtx_def** %lhs2, align 8, !dbg !11428
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !11420, metadata !DIExpression()), !dbg !11429
  %rhs3 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %1, i64 0, i32 2, !dbg !11430
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rhs3, align 8, !dbg !11430
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !11423, metadata !DIExpression()), !dbg !11429
  %cmp4 = icmp eq %struct.rtx_def* %3, null, !dbg !11431
  %cmp5 = icmp eq %struct.rtx_def* %4, null, !dbg !11433
  %or.cond = or i1 %cmp4, %cmp5, !dbg !11434
  br i1 %or.cond, label %if.then9, label %lor.lhs.false6, !dbg !11434

lor.lhs.false6:                                   ; preds = %if.then
  %call = tail call fastcc zeroext i8 @lhs_and_rhs_separable_p(%struct.rtx_def* %3, %struct.rtx_def* %4) #8, !dbg !11435
  %tobool = icmp eq i8 %call, 0, !dbg !11435
  br i1 %tobool, label %if.then9, label %lor.lhs.false7, !dbg !11436

lor.lhs.false7:                                   ; preds = %lor.lhs.false6
  %.b = load i1, i1* @deps_init_id_data.3, align 8, !dbg !11437
  br i1 %.b, label %if.then9, label %if.end28, !dbg !11438

if.then9:                                         ; preds = %lor.lhs.false7, %lor.lhs.false6, %if.then
  %5 = load %struct.idata_def*, %struct.idata_def** @deps_init_id_data.1, align 8, !dbg !11439
  %type10 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %5, i64 0, i32 0, !dbg !11439
  %6 = load i32, i32* %type10, align 8, !dbg !11439
  %cmp11 = icmp eq i32 %6, 23, !dbg !11439
  br i1 %cmp11, label %cond.end15, label %cond.true13, !dbg !11439

cond.true13:                                      ; preds = %if.then9
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2503, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11439
  br label %cond.end15, !dbg !11439

cond.end15:                                       ; preds = %if.then9, %cond.true13
  %tobool17 = icmp ne %struct.rtx_def* %3, null, !dbg !11441
  %cmp21 = xor i1 %cmp5, %tobool17, !dbg !11441
  br i1 %cmp21, label %cond.end25, label %cond.true23, !dbg !11441

cond.true23:                                      ; preds = %cond.end15
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2504, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11441
  br label %cond.end25, !dbg !11441

cond.end25:                                       ; preds = %cond.end15, %cond.true23
  %7 = load %struct.idata_def*, %struct.idata_def** @deps_init_id_data.1, align 8, !dbg !11442
  %type27 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %7, i64 0, i32 0, !dbg !11442
  store i32 24, i32* %type27, align 8, !dbg !11443
  br label %if.end28, !dbg !11444

if.end28:                                         ; preds = %lor.lhs.false7, %cond.end25, %cond.end
  store i32 3, i32* @deps_init_id_data.0, align 8, !dbg !11445
  ret void, !dbg !11446
}

; Function Attrs: nounwind uwtable
define internal void @deps_init_id_start_lhs(%struct.rtx_def* %lhs) #5 !dbg !11447 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %lhs, metadata !11449, metadata !DIExpression()), !dbg !11450
  %0 = load i32, i32* @deps_init_id_data.0, align 8, !dbg !11451
  %cmp = icmp eq i32 %0, 0, !dbg !11451
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11451

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2402, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11451
  br label %cond.end, !dbg !11451

cond.end:                                         ; preds = %entry, %cond.true
  %1 = load %struct.idata_def*, %struct.idata_def** @deps_init_id_data.1, align 8, !dbg !11452
  %lhs1 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %1, i64 0, i32 1, !dbg !11452
  %2 = load %struct.rtx_def*, %struct.rtx_def** %lhs1, align 8, !dbg !11452
  %cmp2 = icmp eq %struct.rtx_def* %2, null, !dbg !11452
  br i1 %cmp2, label %cond.end5, label %cond.true3, !dbg !11452

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2403, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11452
  %.pre = load %struct.idata_def*, %struct.idata_def** @deps_init_id_data.1, align 8, !dbg !11453
  br label %cond.end5, !dbg !11452

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %3 = phi %struct.idata_def* [ %1, %cond.end ], [ %.pre, %cond.true3 ], !dbg !11453
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %3, i64 0, i32 0, !dbg !11453
  %4 = load i32, i32* %type, align 8, !dbg !11453
  %cmp7 = icmp eq i32 %4, 23, !dbg !11455
  br i1 %cmp7, label %if.then, label %if.end, !dbg !11456

if.then:                                          ; preds = %cond.end5
  %lhs8 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %3, i64 0, i32 1, !dbg !11457
  store %struct.rtx_def* %lhs, %struct.rtx_def** %lhs8, align 8, !dbg !11459
  store i32 1, i32* @deps_init_id_data.0, align 8, !dbg !11460
  br label %if.end, !dbg !11461

if.end:                                           ; preds = %if.then, %cond.end5
  ret void, !dbg !11462
}

; Function Attrs: nounwind uwtable
define internal void @deps_init_id_finish_lhs() #5 !dbg !11463 {
entry:
  store i32 0, i32* @deps_init_id_data.0, align 8, !dbg !11464
  ret void, !dbg !11465
}

; Function Attrs: nounwind uwtable
define internal void @deps_init_id_start_rhs(%struct.rtx_def* %rhs) #5 !dbg !11466 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rhs, metadata !11468, metadata !DIExpression()), !dbg !11469
  %0 = load i32, i32* @deps_init_id_data.0, align 8, !dbg !11470
  %cmp = icmp eq i32 %0, 0, !dbg !11470
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11470

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2466, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11470
  br label %cond.end, !dbg !11470

cond.end:                                         ; preds = %entry, %cond.true
  %1 = load %struct.idata_def*, %struct.idata_def** @deps_init_id_data.1, align 8, !dbg !11471
  %lhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %1, i64 0, i32 1, !dbg !11471
  %2 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !11471
  %cmp1 = icmp eq %struct.rtx_def* %2, null, !dbg !11473
  br i1 %cmp1, label %if.end, label %if.then, !dbg !11474

if.then:                                          ; preds = %cond.end
  %rhs2 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %1, i64 0, i32 2, !dbg !11475
  store %struct.rtx_def* %rhs, %struct.rtx_def** %rhs2, align 8, !dbg !11477
  store i32 2, i32* @deps_init_id_data.0, align 8, !dbg !11478
  br label %if.end, !dbg !11479

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !11480
}

; Function Attrs: nounwind uwtable
define internal void @deps_init_id_finish_rhs() #5 !dbg !11481 {
entry:
  %0 = load i32, i32* @deps_init_id_data.0, align 8, !dbg !11482
  %1 = and i32 %0, -3, !dbg !11482
  %2 = icmp eq i32 %1, 0, !dbg !11482
  br i1 %2, label %cond.end, label %cond.true, !dbg !11482

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2481, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11482
  br label %cond.end, !dbg !11482

cond.end:                                         ; preds = %entry, %cond.true
  store i32 0, i32* @deps_init_id_data.0, align 8, !dbg !11483
  ret void, !dbg !11484
}

; Function Attrs: nounwind uwtable
define internal void @deps_init_id_note_reg_set(i32 %regno) #5 !dbg !11485 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !11487, metadata !DIExpression()), !dbg !11488
  tail call void @haifa_note_reg_set(i32 %regno) #6, !dbg !11489
  %0 = load i32, i32* @deps_init_id_data.0, align 8, !dbg !11490
  %cmp = icmp eq i32 %0, 2, !dbg !11492
  br i1 %cmp, label %if.then, label %if.end, !dbg !11493

if.then:                                          ; preds = %entry
  store i1 true, i1* @deps_init_id_data.3, align 8, !dbg !11494
  br label %if.end, !dbg !11495

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.idata_def*, %struct.idata_def** @deps_init_id_data.1, align 8, !dbg !11496
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %1, i64 0, i32 0, !dbg !11496
  %2 = load i32, i32* %type, align 8, !dbg !11496
  %cmp1 = icmp eq i32 %2, 36, !dbg !11498
  br i1 %cmp1, label %if.end3, label %if.then2, !dbg !11499

if.then2:                                         ; preds = %if.end
  %reg_sets = getelementptr inbounds %struct.idata_def, %struct.idata_def* %1, i64 0, i32 3, !dbg !11500
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !11500
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %regno) #6, !dbg !11500
  br label %if.end3, !dbg !11500

if.end3:                                          ; preds = %if.end, %if.then2
  %4 = and i32 %regno, -8, !dbg !11501
  %cmp4 = icmp eq i32 %4, 8, !dbg !11501
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !11503

if.then6:                                         ; preds = %if.end3
  store i1 true, i1* @deps_init_id_data.3, align 8, !dbg !11504
  br label %if.end7, !dbg !11505

if.end7:                                          ; preds = %if.then6, %if.end3
  ret void, !dbg !11506
}

; Function Attrs: nounwind uwtable
define internal void @deps_init_id_note_reg_clobber(i32 %regno) #5 !dbg !11507 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !11509, metadata !DIExpression()), !dbg !11510
  tail call void @haifa_note_reg_clobber(i32 %regno) #6, !dbg !11511
  %0 = load i32, i32* @deps_init_id_data.0, align 8, !dbg !11512
  %cmp = icmp eq i32 %0, 2, !dbg !11514
  br i1 %cmp, label %if.then, label %if.end, !dbg !11515

if.then:                                          ; preds = %entry
  store i1 true, i1* @deps_init_id_data.3, align 8, !dbg !11516
  br label %if.end, !dbg !11517

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.idata_def*, %struct.idata_def** @deps_init_id_data.1, align 8, !dbg !11518
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %1, i64 0, i32 0, !dbg !11518
  %2 = load i32, i32* %type, align 8, !dbg !11518
  %cmp1 = icmp eq i32 %2, 36, !dbg !11520
  br i1 %cmp1, label %if.end3, label %if.then2, !dbg !11521

if.then2:                                         ; preds = %if.end
  %reg_clobbers = getelementptr inbounds %struct.idata_def, %struct.idata_def* %1, i64 0, i32 4, !dbg !11522
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !11522
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %regno) #6, !dbg !11522
  br label %if.end3, !dbg !11522

if.end3:                                          ; preds = %if.end, %if.then2
  ret void, !dbg !11523
}

; Function Attrs: nounwind uwtable
define internal void @deps_init_id_note_reg_use(i32 %regno) #5 !dbg !11524 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !11526, metadata !DIExpression()), !dbg !11527
  tail call void @haifa_note_reg_use(i32 %regno) #6, !dbg !11528
  %0 = load %struct.idata_def*, %struct.idata_def** @deps_init_id_data.1, align 8, !dbg !11529
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %0, i64 0, i32 0, !dbg !11529
  %1 = load i32, i32* %type, align 8, !dbg !11529
  %cmp = icmp eq i32 %1, 36, !dbg !11531
  br i1 %cmp, label %if.end, label %if.then, !dbg !11532

if.then:                                          ; preds = %entry
  %reg_uses = getelementptr inbounds %struct.idata_def, %struct.idata_def* %0, i64 0, i32 5, !dbg !11533
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !11533
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %2, i32 %regno) #6, !dbg !11533
  br label %if.end, !dbg !11533

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !11534
}

declare dso_local i8* @sel_print_insn(%struct.rtx_def*, i32) #2

declare dso_local i32 @contributes_to_priority(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @number_of_loops() unnamed_addr #0 !dbg !11535 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !11538
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !11538
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !11538
  %tobool = icmp eq %struct.loops* %1, null, !dbg !11538
  br i1 %tobool, label %return, label %if.end, !dbg !11540

if.end:                                           ; preds = %entry
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !11541
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !11541
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !11541
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !11541

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !11541
  br label %cond.end, !dbg !11541

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !11541
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !11541
  br label %return, !dbg !11542

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi i32 [ %call, %cond.end ], [ 0, %entry ], !dbg !11543
  ret i32 %retval.0, !dbg !11544
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !11545 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !11549, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !11550, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.value(metadata %struct.loop** %ptr, metadata !11551, metadata !DIExpression()), !dbg !11552
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !11553
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !11553

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !11553
  %0 = load i32, i32* %num, align 8, !dbg !11553
  %cmp = icmp ugt i32 %0, %ix_, !dbg !11553
  br i1 %cmp, label %if.then, label %if.else, !dbg !11555

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !11556
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11556
  %1 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !11556
  br label %return, !dbg !11556

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !11558

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.loop* [ null, %if.else ], [ %1, %if.then ], !dbg !11560
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !11560
  store %struct.loop* %storemerge, %struct.loop** %ptr, align 8, !dbg !11560
  ret i32 %retval.0, !dbg !11555
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !11561 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !11565, metadata !DIExpression()), !dbg !11568
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !11566, metadata !DIExpression()), !dbg !11568
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !11567, metadata !DIExpression()), !dbg !11568
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !11569
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !11569

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !11569
  %0 = load i32, i32* %num, align 4, !dbg !11569
  %cmp = icmp ugt i32 %0, %ix_, !dbg !11569
  br i1 %cmp, label %if.then, label %if.else, !dbg !11571

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !11572
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11572
  %1 = load i32, i32* %arrayidx, align 4, !dbg !11572
  br label %return, !dbg !11572

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !11574

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !11576
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !11576
  store i32 %storemerge, i32* %ptr, align 4, !dbg !11576
  ret i32 %retval.0, !dbg !11571
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_loop(i32 %num) unnamed_addr #0 !dbg !11577 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !11581, metadata !DIExpression()), !dbg !11582
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !11583
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !11583
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !11583
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !11583
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !11583
  %tobool = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !11583
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11583

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !11583
  br label %cond.end, !dbg !11583

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !11583
  %call = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond, i32 %num) #8, !dbg !11583
  ret %struct.loop* %call, !dbg !11584
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @make_region_from_loop(%struct.loop* %loop) unnamed_addr #5 !dbg !11585 {
entry:
  %bb_ord_index = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !11589, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.value(metadata i32 -1, metadata !11591, metadata !DIExpression()), !dbg !11596
  %0 = bitcast i32* %bb_ord_index to i8*, !dbg !11597
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !11597
  call void @llvm.dbg.value(metadata i32 0, metadata !11593, metadata !DIExpression()), !dbg !11596
  store i32 0, i32* %bb_ord_index, align 4, !dbg !11598
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !11599
  %1 = load i32, i32* %num_nodes, align 4, !dbg !11599
  %2 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !11601
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %2, i64 79, i32 1, !dbg !11601
  %3 = load i32, i32* %value, align 8, !dbg !11601
  %cmp = icmp ugt i32 %1, %3, !dbg !11602
  br i1 %cmp, label %cleanup, label %if.end, !dbg !11603

if.end:                                           ; preds = %entry
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !11604
  br label %for.cond, !dbg !11608

for.cond:                                         ; preds = %for.inc, %if.end
  %loop.pn = phi %struct.loop* [ %loop, %if.end ], [ %inner.0, %for.inc ]
  %inner.0.in = getelementptr inbounds %struct.loop, %struct.loop* %loop.pn, i64 0, i32 8, !dbg !11609
  %inner.0 = load %struct.loop*, %struct.loop** %inner.0.in, align 8, !dbg !11609
  call void @llvm.dbg.value(metadata %struct.loop* %inner.0, metadata !11592, metadata !DIExpression()), !dbg !11596
  %tobool = icmp eq %struct.loop* %inner.0, null, !dbg !11610
  br i1 %tobool, label %for.end, label %for.body, !dbg !11610

for.body:                                         ; preds = %for.cond
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !11611
  %call = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* nonnull %inner.0, %struct.basic_block_def* %4) #6, !dbg !11612
  %tobool2 = icmp eq i8 %call, 0, !dbg !11612
  br i1 %tobool2, label %for.inc, label %cleanup.loopexit, !dbg !11613

for.inc:                                          ; preds = %for.body
  br label %for.cond, !dbg !11614, !llvm.loop !11615

for.end:                                          ; preds = %for.cond
  %call6 = tail call i32 @num_loop_insns(%struct.loop* %loop) #6, !dbg !11617
  %ninsns = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 1, !dbg !11618
  store i32 %call6, i32* %ninsns, align 4, !dbg !11619
  %5 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !11620
  %value9 = getelementptr inbounds %struct.param_info, %struct.param_info* %5, i64 80, i32 1, !dbg !11620
  %6 = load i32, i32* %value9, align 8, !dbg !11620
  %cmp10 = icmp sgt i32 %call6, %6, !dbg !11622
  br i1 %cmp10, label %cleanup, label %if.end12, !dbg !11623

if.end12:                                         ; preds = %for.end
  %call13 = tail call %struct.basic_block_def** @get_loop_body_in_custom_order(%struct.loop* %loop, i32 (i8*, i8*)* nonnull @bb_top_order_comparator) #6, !dbg !11624
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call13, metadata !11594, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.value(metadata i32 0, metadata !11590, metadata !DIExpression()), !dbg !11596
  %7 = load i32, i32* %num_nodes, align 4, !dbg !11625
  br label %for.cond14, !dbg !11628

for.cond14:                                       ; preds = %for.inc22, %if.end12
  %i.0 = phi i32 [ 0, %if.end12 ], [ %inc, %for.inc22 ], !dbg !11629
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !11590, metadata !DIExpression()), !dbg !11596
  %exitcond = icmp eq i32 %i.0, %7, !dbg !11630
  br i1 %exitcond, label %for.end23, label %for.body17, !dbg !11631

for.body17:                                       ; preds = %for.cond14
  %idxprom = zext i32 %i.0 to i64, !dbg !11632
  %arrayidx18 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call13, i64 %idxprom, !dbg !11632
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx18, align 8, !dbg !11632
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i64 0, i32 13, !dbg !11634
  %9 = load i32, i32* %flags, align 8, !dbg !11634
  %and = and i32 %9, 4, !dbg !11635
  %tobool19 = icmp eq i32 %and, 0, !dbg !11635
  br i1 %tobool19, label %for.inc22, label %if.then20, !dbg !11636

if.then20:                                        ; preds = %for.body17
  %10 = bitcast %struct.basic_block_def** %call13 to i8*, !dbg !11637
  tail call void @free(i8* %10) #6, !dbg !11639
  br label %cleanup, !dbg !11640

for.inc22:                                        ; preds = %for.body17
  %inc = add i32 %i.0, 1, !dbg !11641
  call void @llvm.dbg.value(metadata i32 %inc, metadata !11590, metadata !DIExpression()), !dbg !11596
  br label %for.cond14, !dbg !11642, !llvm.loop !11643

for.end23:                                        ; preds = %for.cond14
  %call24 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !11645
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call24, i64 0, i32 0, !dbg !11646
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !11646
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %11, metadata !11595, metadata !DIExpression()), !dbg !11596
  %tobool25 = icmp eq %struct.basic_block_def* %11, null, !dbg !11647
  br i1 %tobool25, label %cond.true, label %cond.end, !dbg !11647

cond.true:                                        ; preds = %for.end23
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5784, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11647
  br label %cond.end, !dbg !11647

cond.end:                                         ; preds = %for.end23, %cond.true
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %call13, align 8, !dbg !11648
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !11648
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !11648
  %cmp27 = icmp eq %struct.basic_block_def* %12, %13, !dbg !11648
  br i1 %cmp27, label %cond.end30, label %cond.true28, !dbg !11648

cond.true28:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5785, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11648
  br label %cond.end30, !dbg !11648

cond.end30:                                       ; preds = %cond.end, %cond.true28
  %call32 = tail call fastcc i32 @sel_create_new_region() #8, !dbg !11649
  call void @llvm.dbg.value(metadata i32 %call32, metadata !11591, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.value(metadata i32* %bb_ord_index, metadata !11593, metadata !DIExpression(DW_OP_deref)), !dbg !11596
  call fastcc void @sel_add_block_to_region(%struct.basic_block_def* %11, i32* nonnull %bb_ord_index, i32 %call32) #8, !dbg !11650
  %14 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @bbs_in_loop_rgns, align 8, !dbg !11651
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 9, !dbg !11652
  %15 = load i32, i32* %index, align 8, !dbg !11652
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %14, i32 %15) #8, !dbg !11653
  call void @llvm.dbg.value(metadata i32 0, metadata !11590, metadata !DIExpression()), !dbg !11596
  %cmp37 = icmp sgt i32 %call32, -1, !dbg !11654
  br i1 %cmp37, label %cond.end30.split.us, label %cond.end30.cond.end30.split_crit_edge, !dbg !11658

cond.end30.cond.end30.split_crit_edge:            ; preds = %cond.end30
  br label %for.cond33, !dbg !11658

cond.end30.split.us:                              ; preds = %cond.end30
  br label %for.cond33.us, !dbg !11658

for.cond33.us:                                    ; preds = %for.inc59.us, %cond.end30.split.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc59.us ], [ 0, %cond.end30.split.us ], !dbg !11659
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !11590, metadata !DIExpression()), !dbg !11596
  %16 = load i32, i32* %num_nodes, align 4, !dbg !11660
  %17 = zext i32 %16 to i64, !dbg !11661
  %cmp35.us = icmp ult i64 %indvars.iv, %17, !dbg !11661
  br i1 %cmp35.us, label %for.body36.us, label %for.end61.us-lcssa.us, !dbg !11662

for.body36.us:                                    ; preds = %for.cond33.us
  %18 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @bbs_in_loop_rgns, align 8, !dbg !11663
  %arrayidx43.us = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call13, i64 %indvars.iv, !dbg !11663
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx43.us, align 8, !dbg !11663
  %index44.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i64 0, i32 9, !dbg !11663
  %20 = load i32, i32* %index44.us, align 8, !dbg !11663
  %div.us = lshr i32 %20, 6, !dbg !11663
  %idxprom45.us = zext i32 %div.us to i64, !dbg !11663
  %arrayidx46.us = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %18, i64 0, i32 3, i64 %idxprom45.us, !dbg !11663
  %21 = load i64, i64* %arrayidx46.us, align 8, !dbg !11663
  %rem.us = and i32 %20, 63, !dbg !11663
  %sh_prom.us = zext i32 %rem.us to i64, !dbg !11663
  %22 = shl i64 1, %sh_prom.us, !dbg !11663
  %23 = and i64 %21, %22, !dbg !11663
  %tobool51.us = icmp eq i64 %23, 0, !dbg !11663
  br i1 %tobool51.us, label %if.then52.us, label %for.inc59.us, !dbg !11665

if.then52.us:                                     ; preds = %for.body36.us
  call void @llvm.dbg.value(metadata i32* %bb_ord_index, metadata !11593, metadata !DIExpression(DW_OP_deref)), !dbg !11596
  call fastcc void @sel_add_block_to_region(%struct.basic_block_def* %19, i32* nonnull %bb_ord_index, i32 %call32) #8, !dbg !11666
  %24 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @bbs_in_loop_rgns, align 8, !dbg !11668
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx43.us, align 8, !dbg !11669
  %index57.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i64 0, i32 9, !dbg !11670
  %26 = load i32, i32* %index57.us, align 8, !dbg !11670
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %24, i32 %26) #8, !dbg !11671
  br label %for.inc59.us, !dbg !11672

for.inc59.us:                                     ; preds = %if.then52.us, %for.body36.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !11673
  br label %for.cond33.us, !dbg !11674, !llvm.loop !11675

for.end61.us-lcssa.us:                            ; preds = %for.cond33.us
  br label %for.end61, !dbg !11677

for.cond33:                                       ; preds = %for.inc59, %cond.end30.cond.end30.split_crit_edge
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc59 ], [ 0, %cond.end30.cond.end30.split_crit_edge ], !dbg !11659
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !11590, metadata !DIExpression()), !dbg !11596
  %27 = load i32, i32* %num_nodes, align 4, !dbg !11660
  %28 = zext i32 %27 to i64, !dbg !11661
  %cmp35 = icmp ult i64 %indvars.iv1, %28, !dbg !11661
  br i1 %cmp35, label %for.body36, label %for.end61.us-lcssa, !dbg !11662

for.body36:                                       ; preds = %for.cond33
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5799, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11678
  %29 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @bbs_in_loop_rgns, align 8, !dbg !11663
  %arrayidx43 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call13, i64 %indvars.iv1, !dbg !11663
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx43, align 8, !dbg !11663
  %index44 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i64 0, i32 9, !dbg !11663
  %31 = load i32, i32* %index44, align 8, !dbg !11663
  %div = lshr i32 %31, 6, !dbg !11663
  %idxprom45 = zext i32 %div to i64, !dbg !11663
  %arrayidx46 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %29, i64 0, i32 3, i64 %idxprom45, !dbg !11663
  %32 = load i64, i64* %arrayidx46, align 8, !dbg !11663
  %rem = and i32 %31, 63, !dbg !11663
  %sh_prom = zext i32 %rem to i64, !dbg !11663
  %33 = shl i64 1, %sh_prom, !dbg !11663
  %34 = and i64 %32, %33, !dbg !11663
  %tobool51 = icmp eq i64 %34, 0, !dbg !11663
  br i1 %tobool51, label %if.then52, label %for.inc59, !dbg !11665

if.then52:                                        ; preds = %for.body36
  call void @llvm.dbg.value(metadata i32* %bb_ord_index, metadata !11593, metadata !DIExpression(DW_OP_deref)), !dbg !11596
  call fastcc void @sel_add_block_to_region(%struct.basic_block_def* %30, i32* nonnull %bb_ord_index, i32 %call32) #8, !dbg !11666
  %35 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @bbs_in_loop_rgns, align 8, !dbg !11668
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx43, align 8, !dbg !11669
  %index57 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i64 0, i32 9, !dbg !11670
  %37 = load i32, i32* %index57, align 8, !dbg !11670
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %35, i32 %37) #8, !dbg !11671
  br label %for.inc59, !dbg !11672

for.inc59:                                        ; preds = %for.body36, %if.then52
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !11673
  br label %for.cond33, !dbg !11674, !llvm.loop !11675

for.end61.us-lcssa:                               ; preds = %for.cond33
  br label %for.end61, !dbg !11677

for.end61:                                        ; preds = %for.end61.us-lcssa.us, %for.end61.us-lcssa
  %38 = bitcast %struct.basic_block_def** %call13 to i8*, !dbg !11677
  call void @free(i8* %38) #6, !dbg !11679
  %aux = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 10, !dbg !11680
  store i8* inttoptr (i64 1 to i8*), i8** %aux, align 8, !dbg !11680
  br label %cleanup, !dbg !11681

cleanup.loopexit:                                 ; preds = %for.body
  br label %cleanup, !dbg !11682

cleanup:                                          ; preds = %cleanup.loopexit, %for.end, %entry, %for.end61, %if.then20
  %retval.0 = phi i32 [ -1, %if.then20 ], [ %call32, %for.end61 ], [ -1, %entry ], [ -1, %for.end ], [ -1, %cleanup.loopexit ], !dbg !11596
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !11682
  ret i32 %retval.0, !dbg !11682
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop** @VEC_loop_p_heap_safe_push(%struct.VEC_loop_p_heap** %vec_, %struct.loop* %obj_) unnamed_addr #0 !dbg !11683 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** @loop_nests, metadata !11687, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata %struct.loop* %obj_, metadata !11688, metadata !DIExpression()), !dbg !11689
  %call = tail call fastcc i32 @VEC_loop_p_heap_reserve(%struct.VEC_loop_p_heap** nonnull @loop_nests, i32 1) #8, !dbg !11690
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** @loop_nests, align 8, !dbg !11690
  %tobool = icmp eq %struct.VEC_loop_p_heap* %0, null, !dbg !11690
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11690

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %0, i64 0, i32 0, !dbg !11690
  br label %cond.end, !dbg !11690

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !11690
  %call1 = tail call fastcc %struct.loop** @VEC_loop_p_base_quick_push(%struct.VEC_loop_p_base* %cond, %struct.loop* %obj_) #8, !dbg !11690
  ret %struct.loop** %call1, !dbg !11690
}

declare dso_local i32 @num_loop_insns(%struct.loop*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def** @get_loop_body_in_custom_order(%struct.loop*, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @bb_top_order_comparator(i8* %x, i8* %y) #5 !dbg !11691 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !11693, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata i8* %y, metadata !11694, metadata !DIExpression()), !dbg !11697
  %0 = bitcast i8* %x to %struct.basic_block_def**, !dbg !11698
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %0, align 8, !dbg !11699
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !11695, metadata !DIExpression()), !dbg !11697
  %2 = bitcast i8* %y to %struct.basic_block_def**, !dbg !11700
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %2, align 8, !dbg !11701
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !11696, metadata !DIExpression()), !dbg !11697
  %cmp = icmp eq %struct.basic_block_def* %1, %3, !dbg !11702
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !11702

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32*, i32** @rev_top_order_index, align 8, !dbg !11702
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !11702
  %5 = load i32, i32* %index, align 8, !dbg !11702
  %idxprom = sext i32 %5 to i64, !dbg !11702
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !11702
  %6 = load i32, i32* %arrayidx, align 4, !dbg !11702
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 9, !dbg !11702
  %7 = load i32, i32* %index1, align 8, !dbg !11702
  %idxprom2 = sext i32 %7 to i64, !dbg !11702
  %arrayidx3 = getelementptr inbounds i32, i32* %4, i64 %idxprom2, !dbg !11702
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !11702
  %cmp4 = icmp eq i32 %6, %8, !dbg !11702
  br i1 %cmp4, label %cond.true, label %cond.end, !dbg !11702

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5737, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11702
  br label %cond.end, !dbg !11702

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  %9 = load i32*, i32** @rev_top_order_index, align 8, !dbg !11703
  %index5 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !11705
  %10 = load i32, i32* %index5, align 8, !dbg !11705
  %idxprom6 = sext i32 %10 to i64, !dbg !11703
  %arrayidx7 = getelementptr inbounds i32, i32* %9, i64 %idxprom6, !dbg !11703
  %11 = load i32, i32* %arrayidx7, align 4, !dbg !11703
  %index8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 9, !dbg !11706
  %12 = load i32, i32* %index8, align 8, !dbg !11706
  %idxprom9 = sext i32 %12 to i64, !dbg !11707
  %arrayidx10 = getelementptr inbounds i32, i32* %9, i64 %idxprom9, !dbg !11707
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !11707
  %cmp11 = icmp sgt i32 %11, %13, !dbg !11708
  %. = select i1 %cmp11, i32 -1, i32 1, !dbg !11709
  ret i32 %., !dbg !11710
}

declare dso_local %struct.edge_def* @loop_preheader_edge(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !11711 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !11715, metadata !DIExpression()), !dbg !11720
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !11716, metadata !DIExpression()), !dbg !11720
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !11721
  %0 = load i8*, i8** %popcount, align 8, !dbg !11721
  %tobool = icmp eq i8* %0, null, !dbg !11722
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !11723

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !11724
  %.pre2 = zext i32 %.pre to i64, !dbg !11725
  %.pre3 = shl i64 1, %.pre2, !dbg !11725
  %.pre4 = lshr i32 %bitno, 6, !dbg !11726
  %.pre5 = zext i32 %.pre4 to i64, !dbg !11727
  br label %if.end7, !dbg !11723

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !11728
  %idxprom = zext i32 %div to i64, !dbg !11728
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !11728
  %1 = load i64, i64* %arrayidx, align 8, !dbg !11728
  %rem = and i32 %bitno, 63, !dbg !11728
  %sh_prom = zext i32 %rem to i64, !dbg !11728
  %2 = shl i64 1, %sh_prom, !dbg !11729
  %3 = and i64 %1, %2, !dbg !11729
  %tobool1 = icmp eq i64 %3, 0, !dbg !11729
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !11731

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !11732
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !11733
  %inc = add i8 %4, 1, !dbg !11733
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !11733
  br label %if.end7, !dbg !11732

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !11727
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !11725
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !11727
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !11734
  %or = or i64 %5, %shl.pre-phi, !dbg !11734
  store i64 %or, i64* %arrayidx13, align 8, !dbg !11734
  ret void, !dbg !11735
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_heap_reserve(%struct.VEC_loop_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !11736 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** @loop_nests, metadata !11740, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.value(metadata i32 1, metadata !11741, metadata !DIExpression()), !dbg !11743
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** @loop_nests, align 8, !dbg !11744
  %tobool = icmp eq %struct.VEC_loop_p_heap* %0, null, !dbg !11744
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11744

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %0, i64 0, i32 0, !dbg !11744
  br label %cond.end, !dbg !11744

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !11744
  %call = tail call fastcc i32 @VEC_loop_p_base_space(%struct.VEC_loop_p_base* %cond, i32 1) #8, !dbg !11744
  %tobool1 = icmp eq i32 %call, 0, !dbg !11744
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !11744
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !11742, metadata !DIExpression()), !dbg !11743
  br i1 %tobool1, label %if.then, label %if.end, !dbg !11744

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_loop_p_heap** @loop_nests to i8**), align 8, !dbg !11745
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 1) #6, !dbg !11745
  store i8* %call3, i8** bitcast (%struct.VEC_loop_p_heap** @loop_nests to i8**), align 8, !dbg !11745
  br label %if.end, !dbg !11745

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !11744
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop** @VEC_loop_p_base_quick_push(%struct.VEC_loop_p_base* %vec_, %struct.loop* %obj_) unnamed_addr #0 !dbg !11747 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !11752, metadata !DIExpression()), !dbg !11755
  call void @llvm.dbg.value(metadata %struct.loop* %obj_, metadata !11753, metadata !DIExpression()), !dbg !11755
  %num1 = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !11756
  %0 = load i32, i32* %num1, align 8, !dbg !11756
  %inc = add i32 %0, 1, !dbg !11756
  store i32 %inc, i32* %num1, align 8, !dbg !11756
  %idxprom = zext i32 %0 to i64, !dbg !11756
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11756
  call void @llvm.dbg.value(metadata %struct.loop** %arrayidx, metadata !11754, metadata !DIExpression()), !dbg !11755
  store %struct.loop* %obj_, %struct.loop** %arrayidx, align 8, !dbg !11756
  ret %struct.loop** %arrayidx, !dbg !11756
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_space(%struct.VEC_loop_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !11757 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !11761, metadata !DIExpression()), !dbg !11763
  call void @llvm.dbg.value(metadata i32 1, metadata !11762, metadata !DIExpression()), !dbg !11763
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !11764
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !11764

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 1, !dbg !11764
  %0 = load i32, i32* %alloc, align 4, !dbg !11764
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !11764
  %1 = load i32, i32* %num, align 8, !dbg !11764
  %cmp1 = icmp ne i32 %0, %1, !dbg !11764
  %phitmp = zext i1 %cmp1 to i32, !dbg !11764
  br label %cond.end, !dbg !11764

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11764

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !11764
}

declare dso_local void @extend_rgns(i32*, i32*, %struct.simple_bitmap_def*, i32*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_heap_reserve(%struct.VEC_basic_block_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !11765 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !11769, metadata !DIExpression()), !dbg !11772
  call void @llvm.dbg.value(metadata i32 1, metadata !11770, metadata !DIExpression()), !dbg !11772
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !11773
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !11773
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11773

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %0, i64 0, i32 0, !dbg !11773
  br label %cond.end, !dbg !11773

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !11773
  %call = tail call fastcc i32 @VEC_basic_block_base_space(%struct.VEC_basic_block_base* %cond, i32 1) #8, !dbg !11773
  %tobool1 = icmp eq i32 %call, 0, !dbg !11773
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !11773
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !11771, metadata !DIExpression()), !dbg !11772
  br i1 %tobool1, label %if.then, label %if.end, !dbg !11773

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_basic_block_heap** %vec_ to i8**, !dbg !11774
  %2 = load i8*, i8** %1, align 8, !dbg !11774
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !11774
  store i8* %call3, i8** %1, align 8, !dbg !11774
  br label %if.end, !dbg !11774

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !11773
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_space(%struct.VEC_basic_block_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !11776 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !11780, metadata !DIExpression()), !dbg !11782
  call void @llvm.dbg.value(metadata i32 1, metadata !11781, metadata !DIExpression()), !dbg !11782
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !11783
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !11783

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 1, !dbg !11783
  %0 = load i32, i32* %alloc, align 4, !dbg !11783
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !11783
  %1 = load i32, i32* %num, align 8, !dbg !11783
  %cmp1 = icmp ne i32 %0, %1, !dbg !11783
  %phitmp = zext i1 %cmp1 to i32, !dbg !11783
  br label %cond.end, !dbg !11783

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11783

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !11783
}

declare dso_local void @redirect_edge_succ(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2540, !2541, !2542}
!llvm.ident = !{!2543}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "sel_global_bb_info", scope: !2, file: !3, line: 53, type: !2040, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !635, globals: !2122, nameTableKind: None)
!3 = !DIFile(filename: "sel-sched-ir.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !150, !154, !160, !165, !170, !189, !196, !203, !397, !403, !408, !413, !556, !563, !595, !601}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !142, line: 31, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146, !147, !148, !149}
!144 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !142, line: 91, baseType: !7, size: 32, elements: !151)
!151 = !{!152, !153}
!152 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!153 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !155, line: 363, baseType: !7, size: 32, elements: !156)
!155 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!156 = !{!157, !158, !159}
!157 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!158 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!159 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !155, line: 355, baseType: !7, size: 32, elements: !161)
!161 = !{!162, !163, !164}
!162 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !166, line: 474, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!167 = !{!168, !169}
!168 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !171, line: 280, baseType: !7, size: 32, elements: !172)
!171 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!172 = !{!173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!173 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!183 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!184 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !171, line: 1817, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !171, line: 1805, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202}
!198 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !171, line: 39, baseType: !7, size: 32, elements: !204)
!204 = !{!205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!205 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!206 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!207 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!208 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!209 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!210 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!211 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!212 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!213 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!214 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!215 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!216 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!217 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!220 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!221 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!222 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!223 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!224 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!225 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!226 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!227 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!228 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!229 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!230 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!231 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!232 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!233 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!234 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!235 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!236 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!237 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!238 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!239 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!240 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!241 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!242 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!243 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!244 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!245 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!246 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!247 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!248 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!249 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!250 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!251 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!252 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!253 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!254 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!255 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!256 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!257 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!258 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!259 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!260 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!261 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!262 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!263 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!264 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!265 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!266 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!267 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!268 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!269 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!270 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!271 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!272 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!273 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!274 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!275 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!277 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!278 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!279 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!280 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!281 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!282 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!283 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!284 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!285 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!286 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!287 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!288 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!289 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!290 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!291 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!292 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!293 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!294 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!295 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!296 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!297 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!298 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!299 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!300 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!301 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!302 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!303 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!304 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!305 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!306 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!307 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!308 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!309 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!310 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!311 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!312 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!313 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!314 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!315 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!316 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!317 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!318 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!320 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!321 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!322 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!323 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!324 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!325 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!326 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!327 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!328 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!329 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!330 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!331 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!332 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!333 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!334 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!335 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!336 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!337 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!338 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!339 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!340 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!341 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!342 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!343 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!344 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!345 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!346 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!347 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!348 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!349 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!350 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!351 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!352 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!353 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!354 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!355 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!356 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!357 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!369 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!370 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!371 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!372 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!373 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!374 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!383 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!384 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!385 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!386 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!387 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!388 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!389 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!390 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!391 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!392 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!393 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!394 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!395 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!396 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "post_call_group", file: !398, line: 432, baseType: !7, size: 32, elements: !399)
!398 = !DIFile(filename: "./sched-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!399 = !{!400, !401, !402}
!400 = !DIEnumerator(name: "not_post_call", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "post_call", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "post_call_initial", value: 2, isUnsigned: true)
!403 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_pending_barrier_mode", file: !398, line: 424, baseType: !7, size: 32, elements: !404)
!404 = !{!405, !406, !407}
!405 = !DIEnumerator(name: "NOT_A_BARRIER", value: 0, isUnsigned: true)
!406 = !DIEnumerator(name: "MOVE_BARRIER", value: 1, isUnsigned: true)
!407 = !DIEnumerator(name: "TRUE_BARRIER", value: 2, isUnsigned: true)
!408 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "local_trans_type", file: !409, line: 73, baseType: !7, size: 32, elements: !410)
!409 = !DIFile(filename: "./sel-sched-ir.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!410 = !{!411, !412}
!411 = !DIEnumerator(name: "TRANS_SUBSTITUTION", value: 0, isUnsigned: true)
!412 = !DIEnumerator(name: "TRANS_SPECULATION", value: 1, isUnsigned: true)
!413 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !414, line: 45, baseType: !7, size: 32, elements: !415)
!414 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!415 = !{!416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555}
!416 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!417 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!418 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!419 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!420 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!421 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!422 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!423 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!424 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!425 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!426 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!427 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!428 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!429 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!430 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!431 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!432 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!433 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!434 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!435 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!436 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!437 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!438 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!439 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!440 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!441 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!442 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!443 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!444 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!445 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!446 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!447 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!448 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!449 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!450 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!451 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!452 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!453 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!454 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!455 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!456 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!457 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!458 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!459 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!460 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!461 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!462 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!463 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!464 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!465 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!466 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!467 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!468 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!469 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!470 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!471 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!472 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!473 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!474 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!475 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!476 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!477 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!478 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!479 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!480 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!481 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!482 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!483 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!484 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!485 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!486 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!487 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!488 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!489 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!490 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!491 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!492 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!493 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!494 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!495 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!496 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!497 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!498 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!499 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!500 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!501 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!502 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!503 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!504 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!505 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!506 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!507 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!508 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!509 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!510 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!511 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!512 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!513 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!514 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!515 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!516 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!517 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!518 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!519 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!520 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!521 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!522 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!523 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!524 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!525 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!526 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!527 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!528 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!529 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!530 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!531 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!532 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!533 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!534 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!535 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!536 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!537 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!538 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!539 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!540 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!541 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!542 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!543 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!544 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!545 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!546 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!547 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!548 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!549 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!550 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!551 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!552 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!553 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!554 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!555 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!556 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sched_pass_id_t", file: !398, line: 37, baseType: !7, size: 32, elements: !557)
!557 = !{!558, !559, !560, !561, !562}
!558 = !DIEnumerator(name: "SCHED_PASS_UNKNOWN", value: 0, isUnsigned: true)
!559 = !DIEnumerator(name: "SCHED_RGN_PASS", value: 1, isUnsigned: true)
!560 = !DIEnumerator(name: "SCHED_EBB_PASS", value: 2, isUnsigned: true)
!561 = !DIEnumerator(name: "SCHED_SMS_PASS", value: 3, isUnsigned: true)
!562 = !DIEnumerator(name: "SCHED_SEL_PASS", value: 4, isUnsigned: true)
!563 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "br_predictor", file: !564, line: 24, baseType: !7, size: 32, elements: !565)
!564 = !DIFile(filename: "./predict.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!565 = !{!566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594}
!566 = !DIEnumerator(name: "PRED_COMBINED", value: 0, isUnsigned: true)
!567 = !DIEnumerator(name: "PRED_DS_THEORY", value: 1, isUnsigned: true)
!568 = !DIEnumerator(name: "PRED_FIRST_MATCH", value: 2, isUnsigned: true)
!569 = !DIEnumerator(name: "PRED_NO_PREDICTION", value: 3, isUnsigned: true)
!570 = !DIEnumerator(name: "PRED_UNCONDITIONAL", value: 4, isUnsigned: true)
!571 = !DIEnumerator(name: "PRED_LOOP_ITERATIONS", value: 5, isUnsigned: true)
!572 = !DIEnumerator(name: "PRED_BUILTIN_EXPECT", value: 6, isUnsigned: true)
!573 = !DIEnumerator(name: "PRED_LOOP_ITERATIONS_GUESSED", value: 7, isUnsigned: true)
!574 = !DIEnumerator(name: "PRED_CONTINUE", value: 8, isUnsigned: true)
!575 = !DIEnumerator(name: "PRED_NORETURN", value: 9, isUnsigned: true)
!576 = !DIEnumerator(name: "PRED_COLD_FUNCTION", value: 10, isUnsigned: true)
!577 = !DIEnumerator(name: "PRED_LOOP_BRANCH", value: 11, isUnsigned: true)
!578 = !DIEnumerator(name: "PRED_LOOP_EXIT", value: 12, isUnsigned: true)
!579 = !DIEnumerator(name: "PRED_POINTER", value: 13, isUnsigned: true)
!580 = !DIEnumerator(name: "PRED_TREE_POINTER", value: 14, isUnsigned: true)
!581 = !DIEnumerator(name: "PRED_OPCODE_POSITIVE", value: 15, isUnsigned: true)
!582 = !DIEnumerator(name: "PRED_OPCODE_NONEQUAL", value: 16, isUnsigned: true)
!583 = !DIEnumerator(name: "PRED_FPOPCODE", value: 17, isUnsigned: true)
!584 = !DIEnumerator(name: "PRED_TREE_OPCODE_POSITIVE", value: 18, isUnsigned: true)
!585 = !DIEnumerator(name: "PRED_TREE_OPCODE_NONEQUAL", value: 19, isUnsigned: true)
!586 = !DIEnumerator(name: "PRED_TREE_FPOPCODE", value: 20, isUnsigned: true)
!587 = !DIEnumerator(name: "PRED_CALL", value: 21, isUnsigned: true)
!588 = !DIEnumerator(name: "PRED_TREE_EARLY_RETURN", value: 22, isUnsigned: true)
!589 = !DIEnumerator(name: "PRED_GOTO", value: 23, isUnsigned: true)
!590 = !DIEnumerator(name: "PRED_CONST_RETURN", value: 24, isUnsigned: true)
!591 = !DIEnumerator(name: "PRED_NEGATIVE_RETURN", value: 25, isUnsigned: true)
!592 = !DIEnumerator(name: "PRED_NULL_RETURN", value: 26, isUnsigned: true)
!593 = !DIEnumerator(name: "PRED_MUDFLAP", value: 27, isUnsigned: true)
!594 = !DIEnumerator(name: "END_PREDICTORS", value: 28, isUnsigned: true)
!595 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "deps_where_def", file: !409, line: 861, baseType: !7, size: 32, elements: !596)
!596 = !{!597, !598, !599, !600}
!597 = !DIEnumerator(name: "DEPS_IN_INSN", value: 0, isUnsigned: true)
!598 = !DIEnumerator(name: "DEPS_IN_LHS", value: 1, isUnsigned: true)
!599 = !DIEnumerator(name: "DEPS_IN_RHS", value: 2, isUnsigned: true)
!600 = !DIEnumerator(name: "DEPS_IN_NOWHERE", value: 3, isUnsigned: true)
!601 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !414, line: 836, baseType: !7, size: 32, elements: !602)
!602 = !{!603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634}
!603 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!604 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!605 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!606 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!607 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!608 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!609 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!610 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!611 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!612 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!613 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!614 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!615 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!616 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!617 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!618 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!619 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!620 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!621 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!622 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!623 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!624 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!625 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!626 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!627 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!628 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!629 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!630 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!631 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!632 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!633 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!634 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!635 = !{!636, !637, !638, !639, !642, !643, !645, !1839, !1840, !1842, !1843, !1844, !413, !5, !1845, !1117, !7, !1874, !1879, !1196, !2022, !1901, !1824, !1968, !647, !2027, !2029, !2039, !2040, !2057, !2088, !2096, !1852, !1858, !2114, !1179, !1940, !715, !1248, !2115, !2117}
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!638 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !646, line: 50, baseType: !647)
!646 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !414, line: 240, size: 384, elements: !649)
!649 = !{!650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !648, file: !414, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !648, file: !414, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !648, file: !414, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !648, file: !414, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !648, file: !414, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !648, file: !414, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !648, file: !414, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !648, file: !414, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !648, file: !414, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !648, file: !414, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !648, file: !414, line: 321, baseType: !661, size: 320, offset: 64)
!661 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !414, line: 315, size: 320, elements: !662)
!662 = !{!663, !1806, !1808, !1837, !1838}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !661, file: !414, line: 316, baseType: !664, size: 64)
!664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 64, elements: !680)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !414, line: 183, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !414, line: 166, size: 64, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !682, !683, !695, !698, !760, !1784, !1785, !1796, !1803}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !666, file: !414, line: 168, baseType: !638, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !666, file: !414, line: 169, baseType: !7, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !666, file: !414, line: 170, baseType: !643, size: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !666, file: !414, line: 171, baseType: !645, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !666, file: !414, line: 172, baseType: !673, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !646, line: 53, baseType: !674)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !414, line: 359, size: 128, elements: !676)
!676 = !{!677, !678}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !675, file: !414, line: 360, baseType: !638, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !675, file: !414, line: 361, baseType: !679, size: 64, offset: 64)
!679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !645, size: 64, elements: !680)
!680 = !{!681}
!681 = !DISubrange(count: 1)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !666, file: !414, line: 173, baseType: !5, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !666, file: !414, line: 174, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !414, line: 133, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !414, line: 115, size: 32, elements: !686)
!686 = !{!687, !688, !689, !690, !691, !692, !693, !694}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !685, file: !414, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !685, file: !414, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !685, file: !414, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !685, file: !414, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !685, file: !414, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !685, file: !414, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !685, file: !414, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !685, file: !414, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !666, file: !414, line: 175, baseType: !696, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !414, line: 175, flags: DIFlagFwdDecl)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !666, file: !414, line: 176, baseType: !699, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !701, line: 75, size: 256, elements: !702)
!701 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!702 = !{!703, !718, !719, !720}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !700, file: !701, line: 76, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !701, line: 68, baseType: !706)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !701, line: 63, size: 320, elements: !707)
!707 = !{!708, !710, !711, !712}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !706, file: !701, line: 64, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !706, file: !701, line: 65, baseType: !709, size: 64, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !706, file: !701, line: 66, baseType: !7, size: 32, offset: 128)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !706, file: !701, line: 67, baseType: !713, size: 128, offset: 192)
!713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !714, size: 128, elements: !716)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !701, line: 29, baseType: !715)
!715 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!716 = !{!717}
!717 = !DISubrange(count: 2)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !700, file: !701, line: 77, baseType: !704, size: 64, offset: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !700, file: !701, line: 78, baseType: !7, size: 32, offset: 128)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !700, file: !701, line: 79, baseType: !721, size: 64, offset: 192)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !701, line: 49, baseType: !723)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !701, line: 45, size: 832, elements: !724)
!724 = !{!725, !726, !727}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !723, file: !701, line: 46, baseType: !709, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !723, file: !701, line: 47, baseType: !699, size: 64, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !723, file: !701, line: 48, baseType: !728, size: 704, offset: 128)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !729, line: 164, size: 704, elements: !730)
!729 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!730 = !{!731, !733, !743, !744, !745, !746, !747, !748, !752, !756, !757, !758, !759}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !728, file: !729, line: 166, baseType: !732, size: 64)
!732 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !728, file: !729, line: 167, baseType: !734, size: 64, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !729, line: 157, size: 192, elements: !736)
!736 = !{!737, !738, !739}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !735, file: !729, line: 159, baseType: !640, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !735, file: !729, line: 160, baseType: !734, size: 64, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !735, file: !729, line: 161, baseType: !740, size: 32, offset: 128)
!740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, size: 32, elements: !741)
!741 = !{!742}
!742 = !DISubrange(count: 4)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !728, file: !729, line: 168, baseType: !640, size: 64, offset: 128)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !728, file: !729, line: 169, baseType: !640, size: 64, offset: 192)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !728, file: !729, line: 170, baseType: !640, size: 64, offset: 256)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !728, file: !729, line: 171, baseType: !732, size: 64, offset: 320)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !728, file: !729, line: 172, baseType: !638, size: 32, offset: 384)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !728, file: !729, line: 176, baseType: !749, size: 64, offset: 448)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DISubroutineType(types: !751)
!751 = !{!734, !642, !732}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !728, file: !729, line: 177, baseType: !753, size: 64, offset: 512)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DISubroutineType(types: !755)
!755 = !{null, !642, !734}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !728, file: !729, line: 178, baseType: !642, size: 64, offset: 576)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !728, file: !729, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !728, file: !729, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !728, file: !729, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !666, file: !414, line: 177, baseType: !761, size: 64)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !646, line: 56, baseType: !762)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !171, line: 3371, size: 1792, elements: !764)
!764 = !{!765, !798, !804, !815, !834, !845, !850, !857, !863, !876, !888, !926, !931, !959, !967, !968, !973, !982, !988, !993, !997, !1001, !1423, !1472, !1478, !1484, !1491, !1514, !1528, !1545, !1557, !1579, !1594, !1766}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !763, file: !171, line: 3372, baseType: !766, size: 64)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !171, line: 360, size: 64, elements: !767)
!767 = !{!768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !766, file: !171, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !766, file: !171, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !766, file: !171, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !766, file: !171, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !766, file: !171, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !766, file: !171, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !766, file: !171, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !766, file: !171, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !766, file: !171, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !766, file: !171, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !766, file: !171, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !766, file: !171, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !766, file: !171, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !766, file: !171, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !766, file: !171, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !766, file: !171, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !766, file: !171, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !766, file: !171, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !766, file: !171, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !766, file: !171, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !766, file: !171, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !766, file: !171, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !766, file: !171, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !766, file: !171, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !766, file: !171, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !766, file: !171, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !766, file: !171, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !766, file: !171, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !766, file: !171, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !766, file: !171, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !763, file: !171, line: 3373, baseType: !799, size: 192)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !171, line: 402, size: 192, elements: !800)
!800 = !{!801, !802, !803}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !799, file: !171, line: 403, baseType: !766, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !799, file: !171, line: 404, baseType: !761, size: 64, offset: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !799, file: !171, line: 405, baseType: !761, size: 64, offset: 128)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !763, file: !171, line: 3374, baseType: !805, size: 320)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !171, line: 1384, size: 320, elements: !806)
!806 = !{!807, !808}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !805, file: !171, line: 1385, baseType: !799, size: 192)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !805, file: !171, line: 1386, baseType: !809, size: 128, offset: 192)
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !810, line: 58, baseType: !811)
!810 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !810, line: 54, size: 128, elements: !812)
!812 = !{!813, !814}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !811, file: !810, line: 56, baseType: !715, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !811, file: !810, line: 57, baseType: !732, size: 64, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !763, file: !171, line: 3375, baseType: !816, size: 256)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !171, line: 1397, size: 256, elements: !817)
!817 = !{!818, !819}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !816, file: !171, line: 1398, baseType: !799, size: 192)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !816, file: !171, line: 1399, baseType: !820, size: 64, offset: 192)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !822, line: 52, size: 256, elements: !823)
!822 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!823 = !{!824, !825, !826, !827, !828, !829, !830}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !821, file: !822, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !821, file: !822, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !821, file: !822, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !821, file: !822, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !821, file: !822, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !821, file: !822, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !821, file: !822, line: 62, baseType: !831, size: 192, offset: 64)
!831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !715, size: 192, elements: !832)
!832 = !{!833}
!833 = !DISubrange(count: 3)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !763, file: !171, line: 3376, baseType: !835, size: 256)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !171, line: 1408, size: 256, elements: !836)
!836 = !{!837, !838}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !835, file: !171, line: 1409, baseType: !799, size: 192)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !835, file: !171, line: 1410, baseType: !839, size: 64, offset: 192)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !841, line: 27, size: 192, elements: !842)
!841 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!842 = !{!843, !844}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !840, file: !841, line: 29, baseType: !809, size: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !840, file: !841, line: 30, baseType: !5, size: 32, offset: 128)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !763, file: !171, line: 3377, baseType: !846, size: 256)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !171, line: 1437, size: 256, elements: !847)
!847 = !{!848, !849}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !846, file: !171, line: 1438, baseType: !799, size: 192)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !846, file: !171, line: 1439, baseType: !761, size: 64, offset: 192)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !763, file: !171, line: 3378, baseType: !851, size: 256)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !171, line: 1418, size: 256, elements: !852)
!852 = !{!853, !854, !855}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !851, file: !171, line: 1419, baseType: !799, size: 192)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !851, file: !171, line: 1420, baseType: !638, size: 32, offset: 192)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !851, file: !171, line: 1421, baseType: !856, size: 8, offset: 224)
!856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, size: 8, elements: !680)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !763, file: !171, line: 3379, baseType: !858, size: 320)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !171, line: 1428, size: 320, elements: !859)
!859 = !{!860, !861, !862}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !858, file: !171, line: 1429, baseType: !799, size: 192)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !858, file: !171, line: 1430, baseType: !761, size: 64, offset: 192)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !858, file: !171, line: 1431, baseType: !761, size: 64, offset: 256)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !763, file: !171, line: 3380, baseType: !864, size: 320)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !171, line: 1460, size: 320, elements: !865)
!865 = !{!866, !867}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !864, file: !171, line: 1461, baseType: !799, size: 192)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !864, file: !171, line: 1462, baseType: !868, size: 128, offset: 192)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !869, line: 31, size: 128, elements: !870)
!869 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!870 = !{!871, !874, !875}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !868, file: !869, line: 32, baseType: !872, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !637)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !868, file: !869, line: 33, baseType: !7, size: 32, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !868, file: !869, line: 34, baseType: !7, size: 32, offset: 96)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !763, file: !171, line: 3381, baseType: !877, size: 384)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !171, line: 2507, size: 384, elements: !878)
!878 = !{!879, !880, !885, !886, !887}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !877, file: !171, line: 2508, baseType: !799, size: 192)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !877, file: !171, line: 2509, baseType: !881, size: 32, offset: 192)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !882, line: 58, baseType: !883)
!882 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !884, line: 44, baseType: !7)
!884 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!885 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !877, file: !171, line: 2510, baseType: !7, size: 32, offset: 224)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !877, file: !171, line: 2511, baseType: !761, size: 64, offset: 256)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !877, file: !171, line: 2512, baseType: !761, size: 64, offset: 320)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !763, file: !171, line: 3382, baseType: !889, size: 896)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !171, line: 2652, size: 896, elements: !890)
!890 = !{!891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !889, file: !171, line: 2653, baseType: !877, size: 384)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !889, file: !171, line: 2654, baseType: !761, size: 64, offset: 384)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !889, file: !171, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !889, file: !171, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !889, file: !171, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !889, file: !171, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !889, file: !171, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !889, file: !171, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !889, file: !171, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !889, file: !171, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !889, file: !171, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !889, file: !171, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !889, file: !171, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !889, file: !171, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !889, file: !171, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !889, file: !171, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !889, file: !171, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !889, file: !171, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !889, file: !171, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !889, file: !171, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !889, file: !171, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !889, file: !171, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !889, file: !171, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !889, file: !171, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !889, file: !171, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !889, file: !171, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !889, file: !171, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !889, file: !171, line: 2703, baseType: !7, size: 32, offset: 512)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !889, file: !171, line: 2705, baseType: !761, size: 64, offset: 576)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !889, file: !171, line: 2706, baseType: !761, size: 64, offset: 640)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !889, file: !171, line: 2707, baseType: !761, size: 64, offset: 704)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !889, file: !171, line: 2708, baseType: !761, size: 64, offset: 768)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !889, file: !171, line: 2711, baseType: !924, size: 64, offset: 832)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !171, line: 2711, flags: DIFlagFwdDecl)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !763, file: !171, line: 3383, baseType: !927, size: 960)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !171, line: 2756, size: 960, elements: !928)
!928 = !{!929, !930}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !927, file: !171, line: 2757, baseType: !889, size: 896)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !927, file: !171, line: 2758, baseType: !645, size: 64, offset: 896)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !763, file: !171, line: 3384, baseType: !932, size: 1472)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !171, line: 3114, size: 1472, elements: !933)
!933 = !{!934, !955, !956, !957, !958}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !932, file: !171, line: 3115, baseType: !935, size: 1216)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !171, line: 2984, size: 1216, elements: !936)
!936 = !{!937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !935, file: !171, line: 2985, baseType: !927, size: 960)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !935, file: !171, line: 2986, baseType: !761, size: 64, offset: 960)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !935, file: !171, line: 2987, baseType: !761, size: 64, offset: 1024)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !935, file: !171, line: 2988, baseType: !761, size: 64, offset: 1088)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !935, file: !171, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !935, file: !171, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !935, file: !171, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !935, file: !171, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !935, file: !171, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !935, file: !171, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !935, file: !171, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !935, file: !171, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !935, file: !171, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !935, file: !171, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !935, file: !171, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !935, file: !171, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !935, file: !171, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !935, file: !171, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !932, file: !171, line: 3117, baseType: !761, size: 64, offset: 1216)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !932, file: !171, line: 3119, baseType: !761, size: 64, offset: 1280)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !932, file: !171, line: 3121, baseType: !761, size: 64, offset: 1344)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !932, file: !171, line: 3123, baseType: !761, size: 64, offset: 1408)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !763, file: !171, line: 3385, baseType: !960, size: 1088)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !171, line: 2874, size: 1088, elements: !961)
!961 = !{!962, !963, !964}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !960, file: !171, line: 2875, baseType: !927, size: 960)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !960, file: !171, line: 2876, baseType: !645, size: 64, offset: 960)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !960, file: !171, line: 2877, baseType: !965, size: 64, offset: 1024)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !171, line: 2856, flags: DIFlagFwdDecl)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !763, file: !171, line: 3386, baseType: !935, size: 1216)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !763, file: !171, line: 3387, baseType: !969, size: 1280)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !171, line: 3093, size: 1280, elements: !970)
!970 = !{!971, !972}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !969, file: !171, line: 3094, baseType: !935, size: 1216)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !969, file: !171, line: 3095, baseType: !965, size: 64, offset: 1216)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !763, file: !171, line: 3388, baseType: !974, size: 1216)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !171, line: 2824, size: 1216, elements: !975)
!975 = !{!976, !977, !978, !979, !980, !981}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !974, file: !171, line: 2825, baseType: !889, size: 896)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !974, file: !171, line: 2827, baseType: !761, size: 64, offset: 896)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !974, file: !171, line: 2828, baseType: !761, size: 64, offset: 960)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !974, file: !171, line: 2829, baseType: !761, size: 64, offset: 1024)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !974, file: !171, line: 2830, baseType: !761, size: 64, offset: 1088)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !974, file: !171, line: 2831, baseType: !761, size: 64, offset: 1152)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !763, file: !171, line: 3389, baseType: !983, size: 1024)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !171, line: 2850, size: 1024, elements: !984)
!984 = !{!985, !986, !987}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !983, file: !171, line: 2851, baseType: !927, size: 960)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !983, file: !171, line: 2852, baseType: !638, size: 32, offset: 960)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !983, file: !171, line: 2853, baseType: !638, size: 32, offset: 992)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !763, file: !171, line: 3390, baseType: !989, size: 1024)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !171, line: 2857, size: 1024, elements: !990)
!990 = !{!991, !992}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !989, file: !171, line: 2858, baseType: !927, size: 960)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !989, file: !171, line: 2859, baseType: !965, size: 64, offset: 960)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !763, file: !171, line: 3391, baseType: !994, size: 960)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !171, line: 2862, size: 960, elements: !995)
!995 = !{!996}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !994, file: !171, line: 2863, baseType: !927, size: 960)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !763, file: !171, line: 3392, baseType: !998, size: 1472)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !171, line: 3304, size: 1472, elements: !999)
!999 = !{!1000}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !998, file: !171, line: 3305, baseType: !932, size: 1472)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !763, file: !171, line: 3393, baseType: !1002, size: 1792)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !171, line: 3248, size: 1792, elements: !1003)
!1003 = !{!1004, !1005, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1002, file: !171, line: 3249, baseType: !932, size: 1472)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1002, file: !171, line: 3251, baseType: !1006, size: 64, offset: 1472)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1008, line: 463, size: 1152, elements: !1009)
!1008 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1009 = !{!1010, !1174, !1334, !1335, !1338, !1346, !1347, !1348, !1349, !1350, !1351, !1375, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1007, file: !1008, line: 464, baseType: !1011, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1013)
!1013 = !{!1014, !1063, !1076, !1090, !1142, !1155}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1012, file: !135, line: 197, baseType: !1015, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1016)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1018)
!1018 = !{!1019, !1020, !1021, !1022, !1023, !1024, !1051, !1060, !1061, !1062}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1017, file: !135, line: 119, baseType: !1016, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1017, file: !135, line: 122, baseType: !1016, size: 64, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1017, file: !135, line: 123, baseType: !1016, size: 64, offset: 128)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1017, file: !135, line: 126, baseType: !638, size: 32, offset: 192)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1017, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1017, file: !135, line: 165, baseType: !1025, size: 192, offset: 256)
!1025 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1026)
!1026 = !{!1027, !1040, !1046}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1025, file: !135, line: 137, baseType: !1028, size: 128)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1029)
!1029 = !{!1030, !1039}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1028, file: !135, line: 135, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1033)
!1033 = !{!1034, !1035, !1036, !1037, !1038}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1032, file: !135, line: 96, baseType: !1031, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1032, file: !135, line: 97, baseType: !1031, size: 64, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1032, file: !135, line: 101, baseType: !761, size: 64, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1032, file: !135, line: 106, baseType: !761, size: 64, offset: 192)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1032, file: !135, line: 111, baseType: !761, size: 64, offset: 256)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1028, file: !135, line: 136, baseType: !1031, size: 64, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1025, file: !135, line: 151, baseType: !1041, size: 192)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1042)
!1042 = !{!1043, !1044, !1045}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1041, file: !135, line: 141, baseType: !761, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1041, file: !135, line: 145, baseType: !761, size: 64, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1041, file: !135, line: 150, baseType: !638, size: 32, offset: 128)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1025, file: !135, line: 164, baseType: !1047, size: 128)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1048)
!1048 = !{!1049, !1050}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1047, file: !135, line: 161, baseType: !761, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1047, file: !135, line: 163, baseType: !881, size: 32, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1017, file: !135, line: 168, baseType: !1052, size: 64, offset: 448)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1054)
!1054 = !{!1055, !1056, !1057, !1058, !1059}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1053, file: !135, line: 70, baseType: !1052, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1053, file: !135, line: 73, baseType: !1016, size: 64, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1053, file: !135, line: 78, baseType: !761, size: 64, offset: 128)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1053, file: !135, line: 85, baseType: !645, size: 64, offset: 192)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1053, file: !135, line: 88, baseType: !638, size: 32, offset: 256)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1017, file: !135, line: 173, baseType: !645, size: 64, offset: 512)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1017, file: !135, line: 173, baseType: !645, size: 64, offset: 576)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1017, file: !135, line: 177, baseType: !637, size: 8, offset: 640)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1012, file: !135, line: 200, baseType: !1064, size: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1066)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1067)
!1067 = !{!1068}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1066, file: !135, line: 185, baseType: !1069, size: 128)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1070)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1071)
!1071 = !{!1072, !1073, !1074}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1070, file: !135, line: 184, baseType: !7, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1070, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1070, file: !135, line: 184, baseType: !1075, size: 64, offset: 64)
!1075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 64, elements: !680)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1012, file: !135, line: 203, baseType: !1077, size: 64, offset: 128)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1079)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1080)
!1080 = !{!1081}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1079, file: !135, line: 189, baseType: !1082, size: 128)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1083)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1084)
!1084 = !{!1085, !1086, !1087}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1083, file: !135, line: 188, baseType: !7, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1083, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1083, file: !135, line: 188, baseType: !1088, size: 64, offset: 64)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1089, size: 64, elements: !680)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1052)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1012, file: !135, line: 207, baseType: !1091, size: 64, offset: 192)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1092, line: 144, baseType: !1093)
!1092 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1092, line: 100, size: 896, elements: !1095)
!1095 = !{!1096, !1104, !1109, !1114, !1116, !1119, !1120, !1121, !1122, !1123, !1128, !1130, !1131, !1136, !1141}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1094, file: !1092, line: 102, baseType: !1097, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1092, line: 52, baseType: !1098)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!1101, !1102}
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1092, line: 47, baseType: !7)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1094, file: !1092, line: 105, baseType: !1105, size: 64, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1092, line: 59, baseType: !1106)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!638, !1102, !1102}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1094, file: !1092, line: 108, baseType: !1110, size: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1092, line: 63, baseType: !1111)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !642}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1094, file: !1092, line: 111, baseType: !1115, size: 64, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1094, file: !1092, line: 114, baseType: !1117, size: 64, offset: 256)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1118, line: 46, baseType: !715)
!1118 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1094, file: !1092, line: 117, baseType: !1117, size: 64, offset: 320)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1094, file: !1092, line: 120, baseType: !1117, size: 64, offset: 384)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1094, file: !1092, line: 124, baseType: !7, size: 32, offset: 448)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1094, file: !1092, line: 128, baseType: !7, size: 32, offset: 480)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1094, file: !1092, line: 131, baseType: !1124, size: 64, offset: 512)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1092, line: 75, baseType: !1125)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!642, !1117, !1117}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1094, file: !1092, line: 132, baseType: !1129, size: 64, offset: 576)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1092, line: 78, baseType: !1111)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1094, file: !1092, line: 135, baseType: !642, size: 64, offset: 640)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1094, file: !1092, line: 136, baseType: !1132, size: 64, offset: 704)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1092, line: 82, baseType: !1133)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!642, !642, !1117, !1117}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1094, file: !1092, line: 137, baseType: !1137, size: 64, offset: 768)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1092, line: 83, baseType: !1138)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{null, !642, !642}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1094, file: !1092, line: 141, baseType: !7, size: 32, offset: 832)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1012, file: !135, line: 211, baseType: !1143, size: 64, offset: 256)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !171, line: 183, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !171, line: 183, size: 128, elements: !1146)
!1146 = !{!1147}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1145, file: !171, line: 183, baseType: !1148, size: 128)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !171, line: 182, baseType: !1149)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !171, line: 182, size: 128, elements: !1150)
!1150 = !{!1151, !1152, !1153}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1149, file: !171, line: 182, baseType: !7, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1149, file: !171, line: 182, baseType: !7, size: 32, offset: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1149, file: !171, line: 182, baseType: !1154, size: 64, offset: 64)
!1154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !761, size: 64, elements: !680)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1012, file: !135, line: 220, baseType: !1156, size: 64, offset: 320)
!1156 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1157)
!1157 = !{!1158, !1159}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1156, file: !135, line: 218, baseType: !1143, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1156, file: !135, line: 219, baseType: !1160, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1162, line: 29, baseType: !1163)
!1162 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1162, line: 29, size: 96, elements: !1164)
!1164 = !{!1165}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1163, file: !1162, line: 29, baseType: !1166, size: 96)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1162, line: 27, baseType: !1167)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1162, line: 27, size: 96, elements: !1168)
!1168 = !{!1169, !1170, !1171}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1167, file: !1162, line: 27, baseType: !7, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1167, file: !1162, line: 27, baseType: !7, size: 32, offset: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1167, file: !1162, line: 27, baseType: !1172, size: 8, offset: 64)
!1172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1173, size: 8, elements: !680)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1162, line: 26, baseType: !637)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1007, file: !1008, line: 467, baseType: !1175, size: 64, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !155, line: 374, size: 640, elements: !1177)
!1177 = !{!1178, !1309, !1310, !1323, !1324, !1325, !1326, !1327, !1328, !1330, !1332, !1333}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1176, file: !155, line: 377, baseType: !1179, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !646, line: 111, baseType: !1180)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !155, line: 217, size: 832, elements: !1182)
!1182 = !{!1183, !1218, !1219, !1220, !1279, !1283, !1284, !1285, !1303, !1304, !1305, !1306, !1307, !1308}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1181, file: !155, line: 219, baseType: !1184, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !155, line: 151, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !155, line: 151, size: 128, elements: !1187)
!1187 = !{!1188}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1186, file: !155, line: 151, baseType: !1189, size: 128)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !155, line: 150, baseType: !1190)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !155, line: 150, size: 128, elements: !1191)
!1191 = !{!1192, !1193, !1194}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1190, file: !155, line: 150, baseType: !7, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1190, file: !155, line: 150, baseType: !7, size: 32, offset: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1190, file: !155, line: 150, baseType: !1195, size: 64, offset: 64)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1196, size: 64, elements: !680)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !646, line: 108, baseType: !1197)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !155, line: 122, size: 512, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1210, !1211, !1212, !1213, !1214, !1215, !1216}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1198, file: !155, line: 124, baseType: !1180, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1198, file: !155, line: 125, baseType: !1180, size: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1198, file: !155, line: 131, baseType: !1203, size: 64, offset: 128)
!1203 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !155, line: 128, size: 64, elements: !1204)
!1204 = !{!1205, !1209}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1203, file: !155, line: 129, baseType: !1206, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !646, line: 66, baseType: !1207)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !646, line: 65, flags: DIFlagFwdDecl)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1203, file: !155, line: 130, baseType: !645, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1198, file: !155, line: 134, baseType: !642, size: 64, offset: 192)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1198, file: !155, line: 137, baseType: !761, size: 64, offset: 256)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1198, file: !155, line: 138, baseType: !881, size: 32, offset: 320)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1198, file: !155, line: 142, baseType: !7, size: 32, offset: 352)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1198, file: !155, line: 144, baseType: !638, size: 32, offset: 384)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1198, file: !155, line: 145, baseType: !638, size: 32, offset: 416)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1198, file: !155, line: 146, baseType: !1217, size: 64, offset: 448)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !155, line: 119, baseType: !732)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1181, file: !155, line: 220, baseType: !1184, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1181, file: !155, line: 223, baseType: !642, size: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1181, file: !155, line: 226, baseType: !1221, size: 64, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 100, size: 1216, elements: !1223)
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1233, !1234, !1235, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1269, !1277, !1278}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1222, file: !142, line: 102, baseType: !638, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1222, file: !142, line: 105, baseType: !7, size: 32, offset: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1222, file: !142, line: 108, baseType: !1180, size: 64, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1222, file: !142, line: 111, baseType: !1180, size: 64, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1222, file: !142, line: 114, baseType: !1229, size: 64, offset: 192)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !142, line: 41, size: 64, elements: !1230)
!1230 = !{!1231, !1232}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1229, file: !142, line: 42, baseType: !141, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1229, file: !142, line: 43, baseType: !7, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1222, file: !142, line: 117, baseType: !7, size: 32, offset: 256)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1222, file: !142, line: 120, baseType: !7, size: 32, offset: 288)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1222, file: !142, line: 123, baseType: !1236, size: 64, offset: 320)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !142, line: 87, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !142, line: 87, size: 128, elements: !1239)
!1239 = !{!1240}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1238, file: !142, line: 87, baseType: !1241, size: 128)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !142, line: 85, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !142, line: 85, size: 128, elements: !1243)
!1243 = !{!1244, !1245, !1246}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1242, file: !142, line: 85, baseType: !7, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1242, file: !142, line: 85, baseType: !7, size: 32, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1242, file: !142, line: 85, baseType: !1247, size: 64, offset: 64)
!1247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1248, size: 64, elements: !680)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !142, line: 84, baseType: !1221)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1222, file: !142, line: 126, baseType: !1221, size: 64, offset: 384)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1222, file: !142, line: 129, baseType: !1221, size: 64, offset: 448)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1222, file: !142, line: 132, baseType: !642, size: 64, offset: 512)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1222, file: !142, line: 139, baseType: !761, size: 64, offset: 576)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1222, file: !142, line: 143, baseType: !809, size: 128, offset: 640)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1222, file: !142, line: 146, baseType: !809, size: 128, offset: 768)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1222, file: !142, line: 148, baseType: !637, size: 8, offset: 896)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1222, file: !142, line: 149, baseType: !637, size: 8, offset: 904)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1222, file: !142, line: 153, baseType: !150, size: 32, offset: 928)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1222, file: !142, line: 156, baseType: !1259, size: 64, offset: 960)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !142, line: 48, size: 320, elements: !1261)
!1261 = !{!1262, !1266, !1267, !1268}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1260, file: !142, line: 50, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !646, line: 58, baseType: !1264)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !646, line: 57, flags: DIFlagFwdDecl)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1260, file: !142, line: 59, baseType: !809, size: 128, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1260, file: !142, line: 64, baseType: !637, size: 8, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1260, file: !142, line: 67, baseType: !1259, size: 64, offset: 256)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1222, file: !142, line: 159, baseType: !1270, size: 64, offset: 1024)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !142, line: 72, size: 256, elements: !1272)
!1272 = !{!1273, !1274, !1275, !1276}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1271, file: !142, line: 74, baseType: !1197, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1271, file: !142, line: 77, baseType: !1270, size: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1271, file: !142, line: 78, baseType: !1270, size: 64, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1271, file: !142, line: 81, baseType: !1270, size: 64, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1222, file: !142, line: 162, baseType: !637, size: 8, offset: 1088)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1222, file: !142, line: 166, baseType: !761, size: 64, offset: 1152)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1181, file: !155, line: 229, baseType: !1280, size: 128, offset: 256)
!1280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1281, size: 128, elements: !716)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !155, line: 229, flags: DIFlagFwdDecl)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1181, file: !155, line: 232, baseType: !1180, size: 64, offset: 384)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1181, file: !155, line: 233, baseType: !1180, size: 64, offset: 448)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1181, file: !155, line: 238, baseType: !1286, size: 64, offset: 512)
!1286 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !155, line: 235, size: 64, elements: !1287)
!1287 = !{!1288, !1294}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1286, file: !155, line: 236, baseType: !1289, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !155, line: 273, size: 128, elements: !1291)
!1291 = !{!1292, !1293}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1290, file: !155, line: 275, baseType: !1206, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1290, file: !155, line: 278, baseType: !1206, size: 64, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1286, file: !155, line: 237, baseType: !1295, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !155, line: 259, size: 320, elements: !1297)
!1297 = !{!1298, !1299, !1300, !1301, !1302}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1296, file: !155, line: 261, baseType: !645, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1296, file: !155, line: 262, baseType: !645, size: 64, offset: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1296, file: !155, line: 266, baseType: !645, size: 64, offset: 128)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1296, file: !155, line: 267, baseType: !645, size: 64, offset: 192)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1296, file: !155, line: 270, baseType: !638, size: 32, offset: 256)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1181, file: !155, line: 241, baseType: !1217, size: 64, offset: 576)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1181, file: !155, line: 244, baseType: !638, size: 32, offset: 640)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1181, file: !155, line: 247, baseType: !638, size: 32, offset: 672)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1181, file: !155, line: 250, baseType: !638, size: 32, offset: 704)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1181, file: !155, line: 253, baseType: !638, size: 32, offset: 736)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1181, file: !155, line: 256, baseType: !638, size: 32, offset: 768)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1176, file: !155, line: 378, baseType: !1179, size: 64, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1176, file: !155, line: 381, baseType: !1311, size: 64, offset: 128)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !155, line: 282, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !155, line: 282, size: 128, elements: !1314)
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1313, file: !155, line: 282, baseType: !1316, size: 128)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !155, line: 281, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !155, line: 281, size: 128, elements: !1318)
!1318 = !{!1319, !1320, !1321}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1317, file: !155, line: 281, baseType: !7, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1317, file: !155, line: 281, baseType: !7, size: 32, offset: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1317, file: !155, line: 281, baseType: !1322, size: 64, offset: 64)
!1322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1179, size: 64, elements: !680)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1176, file: !155, line: 384, baseType: !638, size: 32, offset: 192)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1176, file: !155, line: 387, baseType: !638, size: 32, offset: 224)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1176, file: !155, line: 390, baseType: !638, size: 32, offset: 256)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1176, file: !155, line: 394, baseType: !1311, size: 64, offset: 320)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1176, file: !155, line: 396, baseType: !154, size: 32, offset: 384)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1176, file: !155, line: 399, baseType: !1329, size: 64, offset: 416)
!1329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 64, elements: !716)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1176, file: !155, line: 402, baseType: !1331, size: 64, offset: 480)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !716)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1176, file: !155, line: 406, baseType: !638, size: 32, offset: 544)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1176, file: !155, line: 409, baseType: !638, size: 32, offset: 576)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1007, file: !1008, line: 470, baseType: !1207, size: 64, offset: 128)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1007, file: !1008, line: 473, baseType: !1336, size: 64, offset: 192)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1008, line: 166, flags: DIFlagFwdDecl)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1007, file: !1008, line: 476, baseType: !1339, size: 64, offset: 256)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !142, line: 187, size: 256, elements: !1341)
!1341 = !{!1342, !1343, !1344, !1345}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1340, file: !142, line: 189, baseType: !638, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1340, file: !142, line: 192, baseType: !1236, size: 64, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1340, file: !142, line: 197, baseType: !1091, size: 64, offset: 128)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1340, file: !142, line: 200, baseType: !1221, size: 64, offset: 192)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1007, file: !1008, line: 479, baseType: !1091, size: 64, offset: 320)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1007, file: !1008, line: 484, baseType: !761, size: 64, offset: 384)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1007, file: !1008, line: 488, baseType: !761, size: 64, offset: 448)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1007, file: !1008, line: 493, baseType: !761, size: 64, offset: 512)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1007, file: !1008, line: 496, baseType: !761, size: 64, offset: 576)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1007, file: !1008, line: 501, baseType: !1352, size: 64, offset: 640)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !166, line: 2355, size: 576, elements: !1354)
!1354 = !{!1355, !1358, !1359, !1360, !1361, !1363, !1364, !1369, !1370, !1371, !1372, !1373, !1374}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1353, file: !166, line: 2356, baseType: !1356, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !166, line: 2356, flags: DIFlagFwdDecl)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1353, file: !166, line: 2357, baseType: !643, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1353, file: !166, line: 2358, baseType: !638, size: 32, offset: 128)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1353, file: !166, line: 2359, baseType: !638, size: 32, offset: 160)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1353, file: !166, line: 2360, baseType: !1362, size: 128, offset: 192)
!1362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 128, elements: !741)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1353, file: !166, line: 2364, baseType: !638, size: 32, offset: 320)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1353, file: !166, line: 2367, baseType: !1365, size: 128, offset: 384)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !166, line: 2349, size: 128, elements: !1366)
!1366 = !{!1367, !1368}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1365, file: !166, line: 2351, baseType: !645, size: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1365, file: !166, line: 2352, baseType: !732, size: 64, offset: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1353, file: !166, line: 2371, baseType: !165, size: 32, offset: 512)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1353, file: !166, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1353, file: !166, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1353, file: !166, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1353, file: !166, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1353, file: !166, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1007, file: !1008, line: 504, baseType: !1376, size: 64, offset: 704)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1008, line: 504, flags: DIFlagFwdDecl)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1007, file: !1008, line: 507, baseType: !1091, size: 64, offset: 768)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1007, file: !1008, line: 510, baseType: !638, size: 32, offset: 832)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1007, file: !1008, line: 513, baseType: !638, size: 32, offset: 864)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1007, file: !1008, line: 516, baseType: !881, size: 32, offset: 896)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1007, file: !1008, line: 519, baseType: !881, size: 32, offset: 928)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1007, file: !1008, line: 522, baseType: !7, size: 32, offset: 960)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1007, file: !1008, line: 523, baseType: !7, size: 32, offset: 992)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1007, file: !1008, line: 528, baseType: !643, size: 64, offset: 1024)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1007, file: !1008, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1007, file: !1008, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1007, file: !1008, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1007, file: !1008, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1007, file: !1008, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1007, file: !1008, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1007, file: !1008, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1007, file: !1008, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1007, file: !1008, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1007, file: !1008, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1007, file: !1008, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1007, file: !1008, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1007, file: !1008, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1007, file: !1008, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1007, file: !1008, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1007, file: !1008, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1002, file: !171, line: 3254, baseType: !761, size: 64, offset: 1536)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1002, file: !171, line: 3257, baseType: !761, size: 64, offset: 1600)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1002, file: !171, line: 3258, baseType: !761, size: 64, offset: 1664)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1002, file: !171, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1002, file: !171, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1002, file: !171, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1002, file: !171, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1002, file: !171, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1002, file: !171, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1002, file: !171, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1002, file: !171, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1002, file: !171, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1002, file: !171, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1002, file: !171, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1002, file: !171, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1002, file: !171, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1002, file: !171, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1002, file: !171, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1002, file: !171, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1002, file: !171, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1002, file: !171, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !763, file: !171, line: 3394, baseType: !1424, size: 1344)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !171, line: 2279, size: 1344, elements: !1425)
!1425 = !{!1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1451, !1452, !1453, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1424, file: !171, line: 2280, baseType: !799, size: 192)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1424, file: !171, line: 2281, baseType: !761, size: 64, offset: 192)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1424, file: !171, line: 2282, baseType: !761, size: 64, offset: 256)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1424, file: !171, line: 2283, baseType: !761, size: 64, offset: 320)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1424, file: !171, line: 2284, baseType: !761, size: 64, offset: 384)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1424, file: !171, line: 2285, baseType: !7, size: 32, offset: 448)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1424, file: !171, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1424, file: !171, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1424, file: !171, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1424, file: !171, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1424, file: !171, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1424, file: !171, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1424, file: !171, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1424, file: !171, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1424, file: !171, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1424, file: !171, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1424, file: !171, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1424, file: !171, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1424, file: !171, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1424, file: !171, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1424, file: !171, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1424, file: !171, line: 2305, baseType: !7, size: 32, offset: 512)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1424, file: !171, line: 2306, baseType: !1449, size: 32, offset: 544)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1450, line: 31, baseType: !638)
!1450 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1424, file: !171, line: 2307, baseType: !761, size: 64, offset: 576)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1424, file: !171, line: 2308, baseType: !761, size: 64, offset: 640)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1424, file: !171, line: 2314, baseType: !1454, size: 64, offset: 704)
!1454 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !171, line: 2309, size: 64, elements: !1455)
!1455 = !{!1456, !1457, !1458}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1454, file: !171, line: 2310, baseType: !638, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1454, file: !171, line: 2311, baseType: !643, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1454, file: !171, line: 2312, baseType: !1459, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !171, line: 2277, flags: DIFlagFwdDecl)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1424, file: !171, line: 2315, baseType: !761, size: 64, offset: 768)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1424, file: !171, line: 2316, baseType: !761, size: 64, offset: 832)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1424, file: !171, line: 2317, baseType: !761, size: 64, offset: 896)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1424, file: !171, line: 2318, baseType: !761, size: 64, offset: 960)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1424, file: !171, line: 2319, baseType: !761, size: 64, offset: 1024)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1424, file: !171, line: 2320, baseType: !761, size: 64, offset: 1088)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1424, file: !171, line: 2321, baseType: !761, size: 64, offset: 1152)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1424, file: !171, line: 2322, baseType: !761, size: 64, offset: 1216)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1424, file: !171, line: 2324, baseType: !1470, size: 64, offset: 1280)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !171, line: 2324, flags: DIFlagFwdDecl)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !763, file: !171, line: 3395, baseType: !1473, size: 320)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !171, line: 1469, size: 320, elements: !1474)
!1474 = !{!1475, !1476, !1477}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1473, file: !171, line: 1470, baseType: !799, size: 192)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1473, file: !171, line: 1471, baseType: !761, size: 64, offset: 192)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1473, file: !171, line: 1472, baseType: !761, size: 64, offset: 256)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !763, file: !171, line: 3396, baseType: !1479, size: 320)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !171, line: 1482, size: 320, elements: !1480)
!1480 = !{!1481, !1482, !1483}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1479, file: !171, line: 1483, baseType: !799, size: 192)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1479, file: !171, line: 1484, baseType: !638, size: 32, offset: 192)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1479, file: !171, line: 1485, baseType: !1154, size: 64, offset: 256)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !763, file: !171, line: 3397, baseType: !1485, size: 384)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !171, line: 1829, size: 384, elements: !1486)
!1486 = !{!1487, !1488, !1489, !1490}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1485, file: !171, line: 1830, baseType: !799, size: 192)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1485, file: !171, line: 1831, baseType: !881, size: 32, offset: 192)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1485, file: !171, line: 1832, baseType: !761, size: 64, offset: 256)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1485, file: !171, line: 1835, baseType: !1154, size: 64, offset: 320)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !763, file: !171, line: 3398, baseType: !1492, size: 704)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !171, line: 1898, size: 704, elements: !1493)
!1493 = !{!1494, !1495, !1496, !1497, !1498, !1501}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1492, file: !171, line: 1899, baseType: !799, size: 192)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1492, file: !171, line: 1902, baseType: !761, size: 64, offset: 192)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1492, file: !171, line: 1905, baseType: !1263, size: 64, offset: 256)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1492, file: !171, line: 1908, baseType: !7, size: 32, offset: 320)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1492, file: !171, line: 1911, baseType: !1499, size: 64, offset: 384)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !171, line: 1876, flags: DIFlagFwdDecl)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1492, file: !171, line: 1914, baseType: !1502, size: 256, offset: 448)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !171, line: 1883, size: 256, elements: !1503)
!1503 = !{!1504, !1506, !1507, !1512}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1502, file: !171, line: 1884, baseType: !1505, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1502, file: !171, line: 1885, baseType: !1505, size: 64, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1502, file: !171, line: 1891, baseType: !1508, size: 64, offset: 128)
!1508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1502, file: !171, line: 1891, size: 64, elements: !1509)
!1509 = !{!1510, !1511}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1508, file: !171, line: 1891, baseType: !1263, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1508, file: !171, line: 1891, baseType: !761, size: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1502, file: !171, line: 1892, baseType: !1513, size: 64, offset: 192)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !763, file: !171, line: 3399, baseType: !1515, size: 704)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !171, line: 2008, size: 704, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1515, file: !171, line: 2009, baseType: !799, size: 192)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1515, file: !171, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1515, file: !171, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1515, file: !171, line: 2014, baseType: !881, size: 32, offset: 224)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1515, file: !171, line: 2016, baseType: !761, size: 64, offset: 256)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1515, file: !171, line: 2017, baseType: !1143, size: 64, offset: 320)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1515, file: !171, line: 2019, baseType: !761, size: 64, offset: 384)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1515, file: !171, line: 2020, baseType: !761, size: 64, offset: 448)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1515, file: !171, line: 2021, baseType: !761, size: 64, offset: 512)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1515, file: !171, line: 2022, baseType: !761, size: 64, offset: 576)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1515, file: !171, line: 2023, baseType: !761, size: 64, offset: 640)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !763, file: !171, line: 3400, baseType: !1529, size: 832)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !171, line: 2430, size: 832, elements: !1530)
!1530 = !{!1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1529, file: !171, line: 2431, baseType: !799, size: 192)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1529, file: !171, line: 2433, baseType: !761, size: 64, offset: 192)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1529, file: !171, line: 2434, baseType: !761, size: 64, offset: 256)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1529, file: !171, line: 2435, baseType: !761, size: 64, offset: 320)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1529, file: !171, line: 2436, baseType: !761, size: 64, offset: 384)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1529, file: !171, line: 2437, baseType: !1143, size: 64, offset: 448)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1529, file: !171, line: 2438, baseType: !761, size: 64, offset: 512)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1529, file: !171, line: 2440, baseType: !761, size: 64, offset: 576)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1529, file: !171, line: 2441, baseType: !761, size: 64, offset: 640)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1529, file: !171, line: 2443, baseType: !1541, size: 128, offset: 704)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !171, line: 182, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !171, line: 182, size: 128, elements: !1543)
!1543 = !{!1544}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1542, file: !171, line: 182, baseType: !1148, size: 128)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !763, file: !171, line: 3401, baseType: !1546, size: 320)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !171, line: 3327, size: 320, elements: !1547)
!1547 = !{!1548, !1549, !1556}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1546, file: !171, line: 3329, baseType: !799, size: 192)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1546, file: !171, line: 3330, baseType: !1550, size: 64, offset: 192)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !171, line: 3320, size: 192, elements: !1552)
!1552 = !{!1553, !1554, !1555}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1551, file: !171, line: 3322, baseType: !1550, size: 64)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1551, file: !171, line: 3323, baseType: !1550, size: 64, offset: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1551, file: !171, line: 3324, baseType: !761, size: 64, offset: 128)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1546, file: !171, line: 3331, baseType: !1550, size: 64, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !763, file: !171, line: 3402, baseType: !1558, size: 256)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !171, line: 1540, size: 256, elements: !1559)
!1559 = !{!1560, !1561}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1558, file: !171, line: 1541, baseType: !799, size: 192)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1558, file: !171, line: 1542, baseType: !1562, size: 64, offset: 192)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !171, line: 1538, baseType: !1564)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !171, line: 1538, size: 192, elements: !1565)
!1565 = !{!1566}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1564, file: !171, line: 1538, baseType: !1567, size: 192)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !171, line: 1537, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !171, line: 1537, size: 192, elements: !1569)
!1569 = !{!1570, !1571, !1572}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1568, file: !171, line: 1537, baseType: !7, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1568, file: !171, line: 1537, baseType: !7, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1568, file: !171, line: 1537, baseType: !1573, size: 128, offset: 64)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1574, size: 128, elements: !680)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !171, line: 1535, baseType: !1575)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !171, line: 1532, size: 128, elements: !1576)
!1576 = !{!1577, !1578}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1575, file: !171, line: 1533, baseType: !761, size: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1575, file: !171, line: 1534, baseType: !761, size: 64, offset: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !763, file: !171, line: 3403, baseType: !1580, size: 512)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !171, line: 1938, size: 512, elements: !1581)
!1581 = !{!1582, !1583, !1584, !1585, !1591, !1592, !1593}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1580, file: !171, line: 1939, baseType: !799, size: 192)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1580, file: !171, line: 1940, baseType: !881, size: 32, offset: 192)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1580, file: !171, line: 1941, baseType: !170, size: 32, offset: 224)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1580, file: !171, line: 1946, baseType: !1586, size: 32, offset: 256)
!1586 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !171, line: 1942, size: 32, elements: !1587)
!1587 = !{!1588, !1589, !1590}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1586, file: !171, line: 1943, baseType: !189, size: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1586, file: !171, line: 1944, baseType: !196, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1586, file: !171, line: 1945, baseType: !203, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1580, file: !171, line: 1950, baseType: !1206, size: 64, offset: 320)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1580, file: !171, line: 1951, baseType: !1206, size: 64, offset: 384)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1580, file: !171, line: 1953, baseType: !1154, size: 64, offset: 448)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !763, file: !171, line: 3404, baseType: !1595, size: 1664)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !171, line: 3337, size: 1664, elements: !1596)
!1596 = !{!1597, !1598}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1595, file: !171, line: 3338, baseType: !799, size: 192)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1595, file: !171, line: 3341, baseType: !1599, size: 1472, offset: 192)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1600, line: 410, size: 1472, elements: !1601)
!1600 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1601 = !{!1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1599, file: !1600, line: 412, baseType: !638, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1599, file: !1600, line: 413, baseType: !638, size: 32, offset: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1599, file: !1600, line: 414, baseType: !638, size: 32, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1599, file: !1600, line: 415, baseType: !638, size: 32, offset: 96)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1599, file: !1600, line: 416, baseType: !638, size: 32, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1599, file: !1600, line: 417, baseType: !638, size: 32, offset: 160)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1599, file: !1600, line: 418, baseType: !637, size: 8, offset: 192)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1599, file: !1600, line: 419, baseType: !637, size: 8, offset: 200)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1599, file: !1600, line: 420, baseType: !1611, size: 8, offset: 208)
!1611 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1599, file: !1600, line: 421, baseType: !1611, size: 8, offset: 216)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1599, file: !1600, line: 422, baseType: !1611, size: 8, offset: 224)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1599, file: !1600, line: 423, baseType: !1611, size: 8, offset: 232)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1599, file: !1600, line: 424, baseType: !1611, size: 8, offset: 240)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1599, file: !1600, line: 425, baseType: !1611, size: 8, offset: 248)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1599, file: !1600, line: 426, baseType: !1611, size: 8, offset: 256)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1599, file: !1600, line: 427, baseType: !1611, size: 8, offset: 264)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1599, file: !1600, line: 428, baseType: !1611, size: 8, offset: 272)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1599, file: !1600, line: 429, baseType: !1611, size: 8, offset: 280)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1599, file: !1600, line: 430, baseType: !1611, size: 8, offset: 288)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1599, file: !1600, line: 431, baseType: !1611, size: 8, offset: 296)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1599, file: !1600, line: 432, baseType: !1611, size: 8, offset: 304)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1599, file: !1600, line: 433, baseType: !1611, size: 8, offset: 312)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1599, file: !1600, line: 434, baseType: !1611, size: 8, offset: 320)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1599, file: !1600, line: 435, baseType: !1611, size: 8, offset: 328)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1599, file: !1600, line: 436, baseType: !1611, size: 8, offset: 336)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1599, file: !1600, line: 437, baseType: !1611, size: 8, offset: 344)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1599, file: !1600, line: 438, baseType: !1611, size: 8, offset: 352)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1599, file: !1600, line: 439, baseType: !1611, size: 8, offset: 360)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1599, file: !1600, line: 440, baseType: !1611, size: 8, offset: 368)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1599, file: !1600, line: 441, baseType: !1611, size: 8, offset: 376)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1599, file: !1600, line: 442, baseType: !1611, size: 8, offset: 384)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1599, file: !1600, line: 443, baseType: !1611, size: 8, offset: 392)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1599, file: !1600, line: 444, baseType: !1611, size: 8, offset: 400)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1599, file: !1600, line: 445, baseType: !1611, size: 8, offset: 408)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1599, file: !1600, line: 446, baseType: !1611, size: 8, offset: 416)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1599, file: !1600, line: 447, baseType: !1611, size: 8, offset: 424)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1599, file: !1600, line: 448, baseType: !1611, size: 8, offset: 432)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1599, file: !1600, line: 449, baseType: !1611, size: 8, offset: 440)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1599, file: !1600, line: 450, baseType: !1611, size: 8, offset: 448)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1599, file: !1600, line: 451, baseType: !1611, size: 8, offset: 456)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1599, file: !1600, line: 452, baseType: !1611, size: 8, offset: 464)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1599, file: !1600, line: 453, baseType: !1611, size: 8, offset: 472)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1599, file: !1600, line: 454, baseType: !1611, size: 8, offset: 480)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1599, file: !1600, line: 455, baseType: !1611, size: 8, offset: 488)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1599, file: !1600, line: 456, baseType: !1611, size: 8, offset: 496)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1599, file: !1600, line: 457, baseType: !1611, size: 8, offset: 504)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1599, file: !1600, line: 458, baseType: !1611, size: 8, offset: 512)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1599, file: !1600, line: 459, baseType: !1611, size: 8, offset: 520)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1599, file: !1600, line: 460, baseType: !1611, size: 8, offset: 528)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1599, file: !1600, line: 461, baseType: !1611, size: 8, offset: 536)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1599, file: !1600, line: 462, baseType: !1611, size: 8, offset: 544)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1599, file: !1600, line: 463, baseType: !1611, size: 8, offset: 552)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1599, file: !1600, line: 464, baseType: !1611, size: 8, offset: 560)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1599, file: !1600, line: 465, baseType: !1611, size: 8, offset: 568)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1599, file: !1600, line: 466, baseType: !1611, size: 8, offset: 576)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1599, file: !1600, line: 467, baseType: !1611, size: 8, offset: 584)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1599, file: !1600, line: 468, baseType: !1611, size: 8, offset: 592)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1599, file: !1600, line: 469, baseType: !1611, size: 8, offset: 600)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1599, file: !1600, line: 470, baseType: !1611, size: 8, offset: 608)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1599, file: !1600, line: 471, baseType: !1611, size: 8, offset: 616)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1599, file: !1600, line: 472, baseType: !1611, size: 8, offset: 624)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1599, file: !1600, line: 473, baseType: !1611, size: 8, offset: 632)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1599, file: !1600, line: 474, baseType: !1611, size: 8, offset: 640)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1599, file: !1600, line: 475, baseType: !1611, size: 8, offset: 648)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1599, file: !1600, line: 476, baseType: !1611, size: 8, offset: 656)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1599, file: !1600, line: 477, baseType: !1611, size: 8, offset: 664)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1599, file: !1600, line: 478, baseType: !1611, size: 8, offset: 672)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1599, file: !1600, line: 479, baseType: !1611, size: 8, offset: 680)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1599, file: !1600, line: 480, baseType: !1611, size: 8, offset: 688)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1599, file: !1600, line: 481, baseType: !1611, size: 8, offset: 696)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1599, file: !1600, line: 482, baseType: !1611, size: 8, offset: 704)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1599, file: !1600, line: 483, baseType: !1611, size: 8, offset: 712)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1599, file: !1600, line: 484, baseType: !1611, size: 8, offset: 720)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1599, file: !1600, line: 485, baseType: !1611, size: 8, offset: 728)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1599, file: !1600, line: 486, baseType: !1611, size: 8, offset: 736)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1599, file: !1600, line: 487, baseType: !1611, size: 8, offset: 744)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1599, file: !1600, line: 488, baseType: !1611, size: 8, offset: 752)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1599, file: !1600, line: 489, baseType: !1611, size: 8, offset: 760)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1599, file: !1600, line: 490, baseType: !1611, size: 8, offset: 768)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1599, file: !1600, line: 491, baseType: !1611, size: 8, offset: 776)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1599, file: !1600, line: 492, baseType: !1611, size: 8, offset: 784)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1599, file: !1600, line: 493, baseType: !1611, size: 8, offset: 792)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1599, file: !1600, line: 494, baseType: !1611, size: 8, offset: 800)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1599, file: !1600, line: 495, baseType: !1611, size: 8, offset: 808)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1599, file: !1600, line: 496, baseType: !1611, size: 8, offset: 816)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1599, file: !1600, line: 497, baseType: !1611, size: 8, offset: 824)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1599, file: !1600, line: 498, baseType: !1611, size: 8, offset: 832)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1599, file: !1600, line: 499, baseType: !1611, size: 8, offset: 840)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1599, file: !1600, line: 500, baseType: !1611, size: 8, offset: 848)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1599, file: !1600, line: 501, baseType: !1611, size: 8, offset: 856)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1599, file: !1600, line: 502, baseType: !1611, size: 8, offset: 864)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1599, file: !1600, line: 503, baseType: !1611, size: 8, offset: 872)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1599, file: !1600, line: 504, baseType: !1611, size: 8, offset: 880)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1599, file: !1600, line: 505, baseType: !1611, size: 8, offset: 888)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1599, file: !1600, line: 506, baseType: !1611, size: 8, offset: 896)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1599, file: !1600, line: 507, baseType: !1611, size: 8, offset: 904)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1599, file: !1600, line: 508, baseType: !1611, size: 8, offset: 912)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1599, file: !1600, line: 509, baseType: !1611, size: 8, offset: 920)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1599, file: !1600, line: 510, baseType: !1611, size: 8, offset: 928)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1599, file: !1600, line: 511, baseType: !1611, size: 8, offset: 936)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1599, file: !1600, line: 512, baseType: !1611, size: 8, offset: 944)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1599, file: !1600, line: 513, baseType: !1611, size: 8, offset: 952)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1599, file: !1600, line: 514, baseType: !1611, size: 8, offset: 960)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1599, file: !1600, line: 515, baseType: !1611, size: 8, offset: 968)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1599, file: !1600, line: 516, baseType: !1611, size: 8, offset: 976)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1599, file: !1600, line: 517, baseType: !1611, size: 8, offset: 984)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1599, file: !1600, line: 518, baseType: !1611, size: 8, offset: 992)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1599, file: !1600, line: 519, baseType: !1611, size: 8, offset: 1000)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1599, file: !1600, line: 520, baseType: !1611, size: 8, offset: 1008)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1599, file: !1600, line: 521, baseType: !1611, size: 8, offset: 1016)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1599, file: !1600, line: 522, baseType: !1611, size: 8, offset: 1024)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1599, file: !1600, line: 523, baseType: !1611, size: 8, offset: 1032)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1599, file: !1600, line: 524, baseType: !1611, size: 8, offset: 1040)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1599, file: !1600, line: 525, baseType: !1611, size: 8, offset: 1048)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1599, file: !1600, line: 526, baseType: !1611, size: 8, offset: 1056)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1599, file: !1600, line: 527, baseType: !1611, size: 8, offset: 1064)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1599, file: !1600, line: 528, baseType: !1611, size: 8, offset: 1072)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1599, file: !1600, line: 529, baseType: !1611, size: 8, offset: 1080)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1599, file: !1600, line: 530, baseType: !1611, size: 8, offset: 1088)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1599, file: !1600, line: 531, baseType: !1611, size: 8, offset: 1096)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1599, file: !1600, line: 532, baseType: !1611, size: 8, offset: 1104)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1599, file: !1600, line: 533, baseType: !1611, size: 8, offset: 1112)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1599, file: !1600, line: 534, baseType: !1611, size: 8, offset: 1120)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1599, file: !1600, line: 535, baseType: !1611, size: 8, offset: 1128)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1599, file: !1600, line: 536, baseType: !1611, size: 8, offset: 1136)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1599, file: !1600, line: 537, baseType: !1611, size: 8, offset: 1144)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1599, file: !1600, line: 538, baseType: !1611, size: 8, offset: 1152)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1599, file: !1600, line: 539, baseType: !1611, size: 8, offset: 1160)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1599, file: !1600, line: 540, baseType: !1611, size: 8, offset: 1168)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1599, file: !1600, line: 541, baseType: !1611, size: 8, offset: 1176)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1599, file: !1600, line: 542, baseType: !1611, size: 8, offset: 1184)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1599, file: !1600, line: 543, baseType: !1611, size: 8, offset: 1192)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1599, file: !1600, line: 544, baseType: !1611, size: 8, offset: 1200)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1599, file: !1600, line: 545, baseType: !1611, size: 8, offset: 1208)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1599, file: !1600, line: 546, baseType: !1611, size: 8, offset: 1216)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1599, file: !1600, line: 547, baseType: !1611, size: 8, offset: 1224)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1599, file: !1600, line: 548, baseType: !1611, size: 8, offset: 1232)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1599, file: !1600, line: 549, baseType: !1611, size: 8, offset: 1240)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1599, file: !1600, line: 550, baseType: !1611, size: 8, offset: 1248)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1599, file: !1600, line: 551, baseType: !1611, size: 8, offset: 1256)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1599, file: !1600, line: 552, baseType: !1611, size: 8, offset: 1264)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1599, file: !1600, line: 553, baseType: !1611, size: 8, offset: 1272)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1599, file: !1600, line: 554, baseType: !1611, size: 8, offset: 1280)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1599, file: !1600, line: 555, baseType: !1611, size: 8, offset: 1288)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1599, file: !1600, line: 556, baseType: !1611, size: 8, offset: 1296)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1599, file: !1600, line: 557, baseType: !1611, size: 8, offset: 1304)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1599, file: !1600, line: 558, baseType: !1611, size: 8, offset: 1312)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1599, file: !1600, line: 559, baseType: !1611, size: 8, offset: 1320)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1599, file: !1600, line: 560, baseType: !1611, size: 8, offset: 1328)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1599, file: !1600, line: 561, baseType: !1611, size: 8, offset: 1336)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1599, file: !1600, line: 562, baseType: !1611, size: 8, offset: 1344)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1599, file: !1600, line: 563, baseType: !1611, size: 8, offset: 1352)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1599, file: !1600, line: 564, baseType: !1611, size: 8, offset: 1360)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1599, file: !1600, line: 565, baseType: !1611, size: 8, offset: 1368)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1599, file: !1600, line: 566, baseType: !1611, size: 8, offset: 1376)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1599, file: !1600, line: 567, baseType: !1611, size: 8, offset: 1384)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1599, file: !1600, line: 568, baseType: !1611, size: 8, offset: 1392)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1599, file: !1600, line: 569, baseType: !1611, size: 8, offset: 1400)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1599, file: !1600, line: 570, baseType: !1611, size: 8, offset: 1408)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1599, file: !1600, line: 571, baseType: !1611, size: 8, offset: 1416)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1599, file: !1600, line: 572, baseType: !1611, size: 8, offset: 1424)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1599, file: !1600, line: 573, baseType: !1611, size: 8, offset: 1432)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1599, file: !1600, line: 574, baseType: !1611, size: 8, offset: 1440)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !763, file: !171, line: 3405, baseType: !1767, size: 384)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !171, line: 3352, size: 384, elements: !1768)
!1768 = !{!1769, !1770}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1767, file: !171, line: 3353, baseType: !799, size: 192)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1767, file: !171, line: 3356, baseType: !1771, size: 192, offset: 192)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1600, line: 578, size: 192, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1771, file: !1600, line: 580, baseType: !638, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1771, file: !1600, line: 581, baseType: !638, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1771, file: !1600, line: 582, baseType: !638, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1771, file: !1600, line: 583, baseType: !638, size: 32, offset: 96)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1771, file: !1600, line: 584, baseType: !637, size: 8, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1771, file: !1600, line: 585, baseType: !637, size: 8, offset: 136)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1771, file: !1600, line: 586, baseType: !637, size: 8, offset: 144)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1771, file: !1600, line: 587, baseType: !637, size: 8, offset: 152)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1771, file: !1600, line: 588, baseType: !637, size: 8, offset: 160)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1771, file: !1600, line: 589, baseType: !637, size: 8, offset: 168)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1771, file: !1600, line: 590, baseType: !637, size: 8, offset: 176)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !666, file: !414, line: 178, baseType: !1180, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !666, file: !414, line: 179, baseType: !1786, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !414, line: 150, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !414, line: 142, size: 320, elements: !1789)
!1789 = !{!1790, !1791, !1792, !1793, !1794, !1795}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1788, file: !414, line: 144, baseType: !761, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1788, file: !414, line: 145, baseType: !645, size: 64, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1788, file: !414, line: 146, baseType: !645, size: 64, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1788, file: !414, line: 147, baseType: !1449, size: 32, offset: 192)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1788, file: !414, line: 148, baseType: !7, size: 32, offset: 224)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1788, file: !414, line: 149, baseType: !637, size: 8, offset: 256)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !666, file: !414, line: 180, baseType: !1797, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !414, line: 162, baseType: !1799)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !414, line: 159, size: 128, elements: !1800)
!1800 = !{!1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1799, file: !414, line: 160, baseType: !761, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1799, file: !414, line: 161, baseType: !732, size: 64, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !666, file: !414, line: 181, baseType: !1804, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !414, line: 181, flags: DIFlagFwdDecl)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !661, file: !414, line: 317, baseType: !1807, size: 64)
!1807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !732, size: 64, elements: !680)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !661, file: !414, line: 318, baseType: !1809, size: 320)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !414, line: 188, size: 320, elements: !1810)
!1810 = !{!1811, !1813, !1836}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1809, file: !414, line: 190, baseType: !1812, size: 192)
!1812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 192, elements: !832)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1809, file: !414, line: 193, baseType: !1814, size: 64, offset: 192)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !414, line: 206, size: 320, elements: !1816)
!1816 = !{!1817, !1821, !1822, !1823, !1835}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1815, file: !414, line: 208, baseType: !1818, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !646, line: 62, baseType: !1820)
!1820 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !646, line: 61, flags: DIFlagFwdDecl)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1815, file: !414, line: 211, baseType: !7, size: 32, offset: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1815, file: !414, line: 214, baseType: !732, size: 64, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1815, file: !414, line: 224, baseType: !1824, size: 64, offset: 192)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !414, line: 202, baseType: !1826)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !414, line: 202, size: 128, elements: !1827)
!1827 = !{!1828}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1826, file: !414, line: 202, baseType: !1829, size: 128)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !414, line: 200, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !414, line: 200, size: 128, elements: !1831)
!1831 = !{!1832, !1833, !1834}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1830, file: !414, line: 200, baseType: !7, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1830, file: !414, line: 200, baseType: !7, size: 32, offset: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1830, file: !414, line: 200, baseType: !679, size: 64, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1815, file: !414, line: 234, baseType: !1824, size: 64, offset: 256)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1809, file: !414, line: 197, baseType: !732, size: 64, offset: 256)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !661, file: !414, line: 319, baseType: !821, size: 256)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !661, file: !414, line: 320, baseType: !840, size: 192)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !155, line: 37, baseType: !1842)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !646, line: 47, baseType: !699)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "ds_t", file: !398, line: 218, baseType: !638)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "succs_info", file: !409, line: 998, size: 384, elements: !1847)
!1847 = !{!1848, !1850, !1857, !1870, !1871, !1872, !1873}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1846, file: !409, line: 1001, baseType: !1849, size: 16)
!1849 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "succs_ok", scope: !1846, file: !409, line: 1004, baseType: !1851, size: 64, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "insn_vec_t", file: !398, line: 41, baseType: !1852)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_heap", file: !414, line: 201, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_heap", file: !414, line: 201, size: 128, elements: !1855)
!1855 = !{!1856}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1854, file: !414, line: 201, baseType: !1829, size: 128)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "probs_ok", scope: !1846, file: !409, line: 1008, baseType: !1858, size: 64, offset: 128)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1162, line: 32, baseType: !1860)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1162, line: 32, size: 96, elements: !1861)
!1861 = !{!1862}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1860, file: !1162, line: 32, baseType: !1863, size: 96)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1162, line: 31, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1162, line: 31, size: 96, elements: !1865)
!1865 = !{!1866, !1867, !1868}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1864, file: !1162, line: 31, baseType: !7, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1864, file: !1162, line: 31, baseType: !7, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1864, file: !1162, line: 31, baseType: !1869, size: 32, offset: 64)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 32, elements: !680)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "succs_other", scope: !1846, file: !409, line: 1011, baseType: !1851, size: 64, offset: 192)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "all_prob", scope: !1846, file: !409, line: 1014, baseType: !638, size: 32, offset: 256)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "all_succs_n", scope: !1846, file: !409, line: 1017, baseType: !638, size: 32, offset: 288)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "succs_ok_n", scope: !1846, file: !409, line: 1020, baseType: !638, size: 32, offset: 320)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_heap", file: !155, line: 283, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_heap", file: !155, line: 283, size: 128, elements: !1877)
!1877 = !{!1878}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1876, file: !155, line: 283, baseType: !1316, size: 128)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "_list_t", file: !409, line: 46, baseType: !1880)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_list_node", file: !409, line: 354, size: 896, elements: !1882)
!1882 = !{!1883, !1884}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1881, file: !409, line: 356, baseType: !1879, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1881, file: !409, line: 366, baseType: !1885, size: 832, offset: 64)
!1885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1881, file: !409, line: 358, size: 832, elements: !1886)
!1886 = !{!1887, !1888, !1934, !1993, !2016, !2021}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1885, file: !409, line: 360, baseType: !645, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "bnd", scope: !1885, file: !409, line: 361, baseType: !1889, size: 320)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_bnd", file: !409, line: 222, size: 320, elements: !1890)
!1890 = !{!1891, !1893, !1896, !1898, !1899}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1889, file: !409, line: 225, baseType: !1892, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "insn_t", file: !409, line: 64, baseType: !645)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1889, file: !409, line: 228, baseType: !1894, size: 64, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "ilist_t", file: !409, line: 67, baseType: !1895)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "_xlist_t", file: !409, line: 59, baseType: !1879)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "av", scope: !1889, file: !409, line: 231, baseType: !1897, size: 64, offset: 128)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_set_t", file: !409, line: 216, baseType: !1879)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "av1", scope: !1889, file: !409, line: 234, baseType: !1897, size: 64, offset: 192)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "dc", scope: !1889, file: !409, line: 239, baseType: !1900, size: 64, offset: 256)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "deps_t", file: !398, line: 549, baseType: !1901)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deps", file: !398, line: 451, size: 1472, elements: !1903)
!1903 = !{!1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1928, !1931, !1932, !1933}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_insns", scope: !1902, file: !398, line: 463, baseType: !645, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_mems", scope: !1902, file: !398, line: 466, baseType: !645, size: 64, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_insns", scope: !1902, file: !398, line: 469, baseType: !645, size: 64, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_mems", scope: !1902, file: !398, line: 472, baseType: !645, size: 64, offset: 192)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_list_length", scope: !1902, file: !398, line: 480, baseType: !638, size: 32, offset: 256)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_list_length", scope: !1902, file: !398, line: 483, baseType: !638, size: 32, offset: 288)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "pending_flush_length", scope: !1902, file: !398, line: 487, baseType: !638, size: 32, offset: 320)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "last_pending_memory_flush", scope: !1902, file: !398, line: 498, baseType: !645, size: 64, offset: 384)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "last_function_call", scope: !1902, file: !398, line: 503, baseType: !645, size: 64, offset: 448)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "last_function_call_may_noreturn", scope: !1902, file: !398, line: 509, baseType: !645, size: 64, offset: 512)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "sched_before_next_call", scope: !1902, file: !398, line: 515, baseType: !645, size: 64, offset: 576)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "in_post_call_group_p", scope: !1902, file: !398, line: 519, baseType: !397, size: 32, offset: 640)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "last_debug_insn", scope: !1902, file: !398, line: 522, baseType: !645, size: 64, offset: 704)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg", scope: !1902, file: !398, line: 526, baseType: !638, size: 32, offset: 768)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "reg_last", scope: !1902, file: !398, line: 532, baseType: !1919, size: 64, offset: 832)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deps_reg", file: !398, line: 440, size: 320, elements: !1921)
!1921 = !{!1922, !1923, !1924, !1925, !1926, !1927}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !1920, file: !398, line: 442, baseType: !645, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "sets", scope: !1920, file: !398, line: 443, baseType: !645, size: 64, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "implicit_sets", scope: !1920, file: !398, line: 444, baseType: !645, size: 64, offset: 128)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "clobbers", scope: !1920, file: !398, line: 445, baseType: !645, size: 64, offset: 192)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "uses_length", scope: !1920, file: !398, line: 446, baseType: !638, size: 32, offset: 256)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "clobbers_length", scope: !1920, file: !398, line: 447, baseType: !638, size: 32, offset: 288)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "reg_last_in_use", scope: !1902, file: !398, line: 536, baseType: !1929, size: 256, offset: 896)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset_head", file: !155, line: 34, baseType: !1930)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_head", file: !701, line: 84, baseType: !700)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "reg_conditional_sets", scope: !1902, file: !398, line: 539, baseType: !1929, size: 256, offset: 1152)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "last_reg_pending_barrier", scope: !1902, file: !398, line: 542, baseType: !403, size: 32, offset: 1408)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !1902, file: !398, line: 546, baseType: !7, size: 1, offset: 1440, flags: DIFlagBitField, extraData: i64 1440)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1885, file: !409, line: 362, baseType: !1935, size: 512)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "expr_def", file: !409, line: 170, baseType: !1936)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_expr", file: !409, line: 105, size: 512, elements: !1937)
!1937 = !{!1938, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1988, !1989, !1990, !1991, !1992}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "vinsn", scope: !1936, file: !409, line: 108, baseType: !1939, size: 64)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "vinsn_t", file: !409, line: 55, baseType: !1940)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vinsn_def", file: !409, line: 629, size: 640, elements: !1942)
!1942 = !{!1943, !1944, !1953, !1954, !1955, !1956, !1957}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "insn_rtx", scope: !1941, file: !409, line: 632, baseType: !645, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1941, file: !409, line: 635, baseType: !1945, size: 384, offset: 64)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idata_def", file: !409, line: 573, size: 384, elements: !1946)
!1946 = !{!1947, !1948, !1949, !1950, !1951, !1952}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1945, file: !409, line: 585, baseType: !638, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1945, file: !409, line: 588, baseType: !645, size: 64, offset: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1945, file: !409, line: 591, baseType: !645, size: 64, offset: 128)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "reg_sets", scope: !1945, file: !409, line: 602, baseType: !1841, size: 64, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "reg_clobbers", scope: !1945, file: !409, line: 604, baseType: !1841, size: 64, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "reg_uses", scope: !1945, file: !409, line: 606, baseType: !1841, size: 64, offset: 320)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1941, file: !409, line: 639, baseType: !7, size: 32, offset: 448)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rtx", scope: !1941, file: !409, line: 642, baseType: !7, size: 32, offset: 480)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1941, file: !409, line: 645, baseType: !638, size: 32, offset: 512)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !1941, file: !409, line: 648, baseType: !638, size: 32, offset: 544)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "may_trap_p", scope: !1941, file: !409, line: 651, baseType: !637, size: 8, offset: 576)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !1936, file: !409, line: 115, baseType: !638, size: 32, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "usefulness", scope: !1936, file: !409, line: 120, baseType: !638, size: 32, offset: 96)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !1936, file: !409, line: 123, baseType: !638, size: 32, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "priority_adj", scope: !1936, file: !409, line: 126, baseType: !638, size: 32, offset: 160)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "sched_times", scope: !1936, file: !409, line: 129, baseType: !638, size: 32, offset: 192)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "orig_bb_index", scope: !1936, file: !409, line: 133, baseType: !638, size: 32, offset: 224)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "spec_done_ds", scope: !1936, file: !409, line: 137, baseType: !1844, size: 32, offset: 256)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "spec_to_check_ds", scope: !1936, file: !409, line: 141, baseType: !1844, size: 32, offset: 288)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "orig_sched_cycle", scope: !1936, file: !409, line: 145, baseType: !638, size: 32, offset: 320)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "history_of_changes", scope: !1936, file: !409, line: 148, baseType: !1968, size: 64, offset: 384)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_expr_history_def_heap", file: !409, line: 102, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_expr_history_def_heap", file: !409, line: 102, size: 320, elements: !1971)
!1971 = !{!1972}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1970, file: !409, line: 102, baseType: !1973, size: 320)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_expr_history_def_base", file: !409, line: 101, baseType: !1974)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_expr_history_def_base", file: !409, line: 101, size: 320, elements: !1975)
!1975 = !{!1976, !1977, !1978}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1974, file: !409, line: 101, baseType: !7, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1974, file: !409, line: 101, baseType: !7, size: 32, offset: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1974, file: !409, line: 101, baseType: !1979, size: 256, offset: 64)
!1979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1980, size: 256, elements: !680)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "expr_history_def", file: !409, line: 99, baseType: !1981)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "expr_history_def_1", file: !409, line: 81, size: 256, elements: !1982)
!1982 = !{!1983, !1984, !1985, !1986, !1987}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1981, file: !409, line: 84, baseType: !7, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "old_expr_vinsn", scope: !1981, file: !409, line: 87, baseType: !1939, size: 64, offset: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "new_expr_vinsn", scope: !1981, file: !409, line: 90, baseType: !1939, size: 64, offset: 128)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "spec_ds", scope: !1981, file: !409, line: 93, baseType: !1844, size: 32, offset: 192)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1981, file: !409, line: 96, baseType: !408, size: 32, offset: 224)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "target_available", scope: !1936, file: !409, line: 153, baseType: !1611, size: 8, offset: 448)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "needs_spec_check_p", scope: !1936, file: !409, line: 157, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 456)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "was_substituted", scope: !1936, file: !409, line: 161, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 456)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "was_renamed", scope: !1936, file: !409, line: 164, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 456)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "cant_move", scope: !1936, file: !409, line: 167, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 456)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "fence", scope: !1885, file: !409, line: 363, baseType: !1994, size: 832)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_fence", file: !409, line: 259, size: 832, elements: !1995)
!1995 = !{!1996, !1997, !2000, !2001, !2002, !2003, !2004, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1994, file: !409, line: 262, baseType: !1892, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1994, file: !409, line: 265, baseType: !1998, size: 64, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "state_t", file: !1999, line: 158, baseType: !642)
!1999 = !DIFile(filename: "./insn-attr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "cycle", scope: !1994, file: !409, line: 268, baseType: !638, size: 32, offset: 128)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "cycle_issued_insns", scope: !1994, file: !409, line: 272, baseType: !638, size: 32, offset: 160)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "bnds", scope: !1994, file: !409, line: 276, baseType: !1894, size: 64, offset: 192)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "dc", scope: !1994, file: !409, line: 280, baseType: !1900, size: 64, offset: 256)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1994, file: !409, line: 284, baseType: !2005, size: 64, offset: 320)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "tc_t", file: !409, line: 38, baseType: !642)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "executing_insns", scope: !1994, file: !409, line: 287, baseType: !1824, size: 64, offset: 384)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ready_ticks", scope: !1994, file: !409, line: 291, baseType: !1839, size: 64, offset: 448)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ready_ticks_size", scope: !1994, file: !409, line: 294, baseType: !638, size: 32, offset: 512)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "last_scheduled_insn", scope: !1994, file: !409, line: 297, baseType: !645, size: 64, offset: 576)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "issue_more", scope: !1994, file: !409, line: 300, baseType: !638, size: 32, offset: 640)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "sched_next", scope: !1994, file: !409, line: 303, baseType: !645, size: 64, offset: 704)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "processed_p", scope: !1994, file: !409, line: 306, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled_p", scope: !1994, file: !409, line: 309, baseType: !7, size: 1, offset: 769, flags: DIFlagBitField, extraData: i64 768)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "starts_cycle_p", scope: !1994, file: !409, line: 312, baseType: !7, size: 1, offset: 770, flags: DIFlagBitField, extraData: i64 768)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "after_stall_p", scope: !1994, file: !409, line: 315, baseType: !7, size: 1, offset: 771, flags: DIFlagBitField, extraData: i64 768)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1885, file: !409, line: 364, baseType: !2017, size: 128)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_def", file: !409, line: 201, size: 128, elements: !2018)
!2018 = !{!2019, !2020}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "orig_insn", scope: !2017, file: !409, line: 203, baseType: !1892, size: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "crosses_call", scope: !2017, file: !409, line: 210, baseType: !637, size: 8, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1885, file: !409, line: 365, baseType: !642, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_heap", file: !155, line: 152, baseType: !2024)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_heap", file: !155, line: 152, size: 128, elements: !2025)
!2025 = !{!2026}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2024, file: !155, line: 152, baseType: !1189, size: 128)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !648)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2031)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "transformed_insns", file: !409, line: 675, size: 256, elements: !2032)
!2032 = !{!2033, !2034, !2035, !2036, !2037, !2038}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "vinsn_old", scope: !2031, file: !409, line: 678, baseType: !1939, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "vinsn_new", scope: !2031, file: !409, line: 681, baseType: !1939, size: 64, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2031, file: !409, line: 684, baseType: !1844, size: 32, offset: 128)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2031, file: !409, line: 687, baseType: !408, size: 32, offset: 160)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "was_target_conflict", scope: !2031, file: !409, line: 690, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "needs_check", scope: !2031, file: !409, line: 693, baseType: !7, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sel_global_bb_info_def_heap", file: !409, line: 889, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sel_global_bb_info_def_heap", file: !409, line: 889, size: 192, elements: !2043)
!2043 = !{!2044}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2042, file: !409, line: 889, baseType: !2045, size: 192)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sel_global_bb_info_def_base", file: !409, line: 888, baseType: !2046)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sel_global_bb_info_def_base", file: !409, line: 888, size: 192, elements: !2047)
!2047 = !{!2048, !2049, !2050}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2046, file: !409, line: 888, baseType: !7, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2046, file: !409, line: 888, baseType: !7, size: 32, offset: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2046, file: !409, line: 888, baseType: !2051, size: 128, offset: 64)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 128, elements: !680)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "sel_global_bb_info_def", file: !409, line: 884, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !409, line: 872, size: 128, elements: !2054)
!2054 = !{!2055, !2056}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "lv_set", scope: !2053, file: !409, line: 878, baseType: !1841, size: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "lv_set_valid_p", scope: !2053, file: !409, line: 883, baseType: !637, size: 8, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sel_insn_data_def_heap", file: !409, line: 763, baseType: !2059)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sel_insn_data_def_heap", file: !409, line: 763, size: 2624, elements: !2060)
!2060 = !{!2061}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2059, file: !409, line: 763, baseType: !2062, size: 2624)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sel_insn_data_def_base", file: !409, line: 762, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sel_insn_data_def_base", file: !409, line: 762, size: 2624, elements: !2064)
!2064 = !{!2065, !2066, !2067}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2063, file: !409, line: 762, baseType: !7, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2063, file: !409, line: 762, baseType: !7, size: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2063, file: !409, line: 762, baseType: !2068, size: 2560, offset: 64)
!2068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2069, size: 2560, elements: !680)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "sel_insn_data_def", file: !409, line: 759, baseType: !2070)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sel_insn_data", file: !409, line: 698, size: 2560, elements: !2071)
!2071 = !{!2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2070, file: !409, line: 702, baseType: !1935, size: 512)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "ws_level", scope: !2070, file: !409, line: 705, baseType: !638, size: 32, offset: 512)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "seqno", scope: !2070, file: !409, line: 708, baseType: !638, size: 32, offset: 544)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2070, file: !409, line: 711, baseType: !1841, size: 64, offset: 576)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed_deps", scope: !2070, file: !409, line: 714, baseType: !1842, size: 64, offset: 640)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "found_deps", scope: !2070, file: !409, line: 719, baseType: !1842, size: 64, offset: 704)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "originators", scope: !2070, file: !409, line: 724, baseType: !1842, size: 64, offset: 768)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "transformed_insns", scope: !2070, file: !409, line: 727, baseType: !1091, size: 64, offset: 832)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "deps_context", scope: !2070, file: !409, line: 730, baseType: !1902, size: 1472, offset: 896)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "sched_next", scope: !2070, file: !409, line: 736, baseType: !1892, size: 64, offset: 2368)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "sched_cycle", scope: !2070, file: !409, line: 740, baseType: !638, size: 32, offset: 2432)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "ready_cycle", scope: !2070, file: !409, line: 743, baseType: !638, size: 32, offset: 2464)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "spec_checked_ds", scope: !2070, file: !409, line: 746, baseType: !1844, size: 32, offset: 2496)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "live_valid_p", scope: !2070, file: !409, line: 749, baseType: !7, size: 1, offset: 2528, flags: DIFlagBitField, extraData: i64 2528)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "asm_p", scope: !2070, file: !409, line: 751, baseType: !7, size: 1, offset: 2529, flags: DIFlagBitField, extraData: i64 2528)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "after_stall_p", scope: !2070, file: !409, line: 756, baseType: !7, size: 1, offset: 2530, flags: DIFlagBitField, extraData: i64 2528)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_lr_bb_info", file: !2090, line: 826, size: 256, elements: !2091)
!2090 = !DIFile(filename: "./df.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2091 = !{!2092, !2093, !2094, !2095}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !2089, file: !2090, line: 829, baseType: !1842, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !2089, file: !2090, line: 831, baseType: !1842, size: 64, offset: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2089, file: !2090, line: 834, baseType: !1842, size: 64, offset: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2089, file: !2090, line: 835, baseType: !1842, size: 64, offset: 192)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sel_region_bb_info_def_heap", file: !409, line: 923, baseType: !2098)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sel_region_bb_info_def_heap", file: !409, line: 923, size: 256, elements: !2099)
!2099 = !{!2100}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2098, file: !409, line: 923, baseType: !2101, size: 256)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sel_region_bb_info_def_base", file: !409, line: 922, baseType: !2102)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sel_region_bb_info_def_base", file: !409, line: 922, size: 256, elements: !2103)
!2103 = !{!2104, !2105, !2106}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2102, file: !409, line: 922, baseType: !7, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2102, file: !409, line: 922, baseType: !7, size: 32, offset: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2102, file: !409, line: 922, baseType: !2107, size: 192, offset: 64)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2108, size: 192, elements: !680)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "sel_region_bb_info_def", file: !409, line: 918, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !409, line: 906, size: 192, elements: !2110)
!2110 = !{!2111, !2112, !2113}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "note_list", scope: !2109, file: !409, line: 910, baseType: !645, size: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "av_set", scope: !2109, file: !409, line: 914, baseType: !1897, size: 64, offset: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "av_level", scope: !2109, file: !409, line: 917, baseType: !638, size: 32, offset: 128)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1179)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_heap", file: !142, line: 86, baseType: !2119)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_heap", file: !142, line: 86, size: 128, elements: !2120)
!2120 = !{!2121}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2119, file: !142, line: 86, baseType: !1241, size: 128)
!2122 = !{!0, !2123, !2125, !2127, !2129, !2131, !2133, !2156, !2158, !2179, !2181, !2347, !2350, !2361, !2370, !2378, !2380, !2382, !2419, !2430, !2437, !2439, !2441, !2446, !2448, !2451, !2453, !2457, !2459, !2461, !2463, !2465, !2475, !2477, !2479, !2523, !2525, !2527, !2529}
!2123 = !DIGlobalVariableExpression(var: !2124, expr: !DIExpression())
!2124 = distinct !DIGlobalVariable(name: "sel_region_bb_info", scope: !2, file: !3, line: 56, type: !2096, isLocal: false, isDefinition: true)
!2125 = !DIGlobalVariableExpression(var: !2126, expr: !DIExpression())
!2126 = distinct !DIGlobalVariable(name: "nop_pattern", scope: !2, file: !3, line: 132, type: !645, isLocal: false, isDefinition: true)
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "exit_insn", scope: !2, file: !3, line: 135, type: !645, isLocal: false, isDefinition: true)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "preheader_removed", scope: !2, file: !3, line: 139, type: !637, isLocal: false, isDefinition: true)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "s_i_d", scope: !2, file: !3, line: 3924, type: !2057, isLocal: false, isDefinition: true)
!2133 = !DIGlobalVariableExpression(var: !2134, expr: !DIExpression())
!2134 = distinct !DIGlobalVariable(name: "sched_lists_pool", scope: !2, file: !3, line: 59, type: !2135, isLocal: false, isDefinition: true)
!2135 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !2136, line: 58, baseType: !2137)
!2136 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !2136, line: 32, size: 704, elements: !2139)
!2139 = !{!2140, !2141, !2142, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2138, file: !2136, line: 34, baseType: !643, size: 64)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !2138, file: !2136, line: 38, baseType: !1117, size: 64, offset: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !2138, file: !2136, line: 41, baseType: !2143, size: 64, offset: 128)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !2136, line: 30, baseType: !2144)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !2136, line: 26, size: 64, elements: !2146)
!2146 = !{!2147}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2145, file: !2136, line: 28, baseType: !2144, size: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !2138, file: !2136, line: 45, baseType: !640, size: 64, offset: 192)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !2138, file: !2136, line: 49, baseType: !1117, size: 64, offset: 256)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !2138, file: !2136, line: 51, baseType: !1117, size: 64, offset: 320)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !2138, file: !2136, line: 52, baseType: !1117, size: 64, offset: 384)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !2138, file: !2136, line: 53, baseType: !1117, size: 64, offset: 448)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !2138, file: !2136, line: 54, baseType: !2143, size: 64, offset: 512)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2138, file: !2136, line: 55, baseType: !1117, size: 64, offset: 576)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !2138, file: !2136, line: 56, baseType: !1117, size: 64, offset: 640)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(name: "current_succs", scope: !2, file: !3, line: 62, type: !1846, isLocal: false, isDefinition: true)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "sel_common_sched_info", scope: !2, file: !3, line: 65, type: !2160, isLocal: true, isDefinition: true)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "common_sched_info_def", file: !398, line: 81, size: 320, elements: !2161)
!2161 = !{!2162, !2166, !2170, !2174, !2178}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "fix_recovery_cfg", scope: !2160, file: !398, line: 89, baseType: !2163, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{null, !638, !638, !638}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "add_block", scope: !2160, file: !398, line: 96, baseType: !2167, size: 64, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{null, !1179, !1179}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_number_of_insns", scope: !2160, file: !398, line: 99, baseType: !2171, size: 64, offset: 128)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!638, !1179}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "luid_for_non_insn", scope: !2160, file: !398, line: 105, baseType: !2175, size: 64, offset: 192)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{!638, !645}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "sched_pass_id", scope: !2160, file: !398, line: 108, baseType: !556, size: 32, offset: 256)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "current_loop_nest", scope: !2, file: !3, line: 68, type: !1221, isLocal: false, isDefinition: true)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "orig_cfg_hooks", scope: !2, file: !3, line: 78, type: !2183, isLocal: true, isDefinition: true)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg_hooks", file: !2184, line: 25, size: 1856, elements: !2185)
!2184 = !DIFile(filename: "./cfghooks.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2185 = !{!2186, !2187, !2191, !2246, !2250, !2254, !2258, !2265, !2269, !2273, !2277, !2278, !2279, !2283, !2290, !2294, !2298, !2302, !2306, !2307, !2311, !2312, !2326, !2327, !2328, !2333, !2337, !2341, !2346}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2183, file: !2184, line: 28, baseType: !643, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "verify_flow_info", scope: !2183, file: !2184, line: 31, baseType: !2188, size: 64, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{!638}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "dump_bb", scope: !2183, file: !2184, line: 32, baseType: !2192, size: 64, offset: 128)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{null, !1179, !2195, !638, !638}
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2197, line: 7, baseType: !2198)
!2197 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2199, line: 49, size: 1728, elements: !2200)
!2199 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2200 = !{!2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2216, !2218, !2219, !2220, !2223, !2225, !2226, !2227, !2230, !2232, !2235, !2238, !2239, !2240, !2241, !2242}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2198, file: !2199, line: 51, baseType: !638, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2198, file: !2199, line: 54, baseType: !640, size: 64, offset: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2198, file: !2199, line: 55, baseType: !640, size: 64, offset: 128)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2198, file: !2199, line: 56, baseType: !640, size: 64, offset: 192)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2198, file: !2199, line: 57, baseType: !640, size: 64, offset: 256)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2198, file: !2199, line: 58, baseType: !640, size: 64, offset: 320)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2198, file: !2199, line: 59, baseType: !640, size: 64, offset: 384)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2198, file: !2199, line: 60, baseType: !640, size: 64, offset: 448)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2198, file: !2199, line: 61, baseType: !640, size: 64, offset: 512)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2198, file: !2199, line: 64, baseType: !640, size: 64, offset: 576)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2198, file: !2199, line: 65, baseType: !640, size: 64, offset: 640)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2198, file: !2199, line: 66, baseType: !640, size: 64, offset: 704)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2198, file: !2199, line: 68, baseType: !2214, size: 64, offset: 768)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 64)
!2215 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2199, line: 36, flags: DIFlagFwdDecl)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2198, file: !2199, line: 70, baseType: !2217, size: 64, offset: 832)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2198, file: !2199, line: 72, baseType: !638, size: 32, offset: 896)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2198, file: !2199, line: 73, baseType: !638, size: 32, offset: 928)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2198, file: !2199, line: 74, baseType: !2221, size: 64, offset: 960)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2222, line: 152, baseType: !732)
!2222 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2198, file: !2199, line: 77, baseType: !2224, size: 16, offset: 1024)
!2224 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2198, file: !2199, line: 78, baseType: !1611, size: 8, offset: 1040)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2198, file: !2199, line: 79, baseType: !856, size: 8, offset: 1048)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2198, file: !2199, line: 81, baseType: !2228, size: 64, offset: 1088)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2199, line: 43, baseType: null)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2198, file: !2199, line: 89, baseType: !2231, size: 64, offset: 1152)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2222, line: 153, baseType: !732)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2198, file: !2199, line: 91, baseType: !2233, size: 64, offset: 1216)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!2234 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2199, line: 37, flags: DIFlagFwdDecl)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2198, file: !2199, line: 92, baseType: !2236, size: 64, offset: 1280)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2199, line: 38, flags: DIFlagFwdDecl)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2198, file: !2199, line: 93, baseType: !2217, size: 64, offset: 1344)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2198, file: !2199, line: 94, baseType: !642, size: 64, offset: 1408)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2198, file: !2199, line: 95, baseType: !1117, size: 64, offset: 1472)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2198, file: !2199, line: 96, baseType: !638, size: 32, offset: 1536)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2198, file: !2199, line: 98, baseType: !2243, size: 160, offset: 1568)
!2243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, size: 160, elements: !2244)
!2244 = !{!2245}
!2245 = !DISubrange(count: 20)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "create_basic_block", scope: !2183, file: !2184, line: 37, baseType: !2247, size: 64, offset: 192)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!1179, !642, !642, !1179}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "redirect_edge_and_branch", scope: !2183, file: !2184, line: 43, baseType: !2251, size: 64, offset: 256)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!2252 = !DISubroutineType(types: !2253)
!2253 = !{!1196, !1196, !1179}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "redirect_edge_and_branch_force", scope: !2183, file: !2184, line: 48, baseType: !2255, size: 64, offset: 320)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DISubroutineType(types: !2257)
!2257 = !{!1179, !1196, !1179}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "can_remove_branch_p", scope: !2183, file: !2184, line: 52, baseType: !2259, size: 64, offset: 384)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{!637, !2262}
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_edge", file: !646, line: 109, baseType: !2263)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "delete_basic_block", scope: !2183, file: !2184, line: 55, baseType: !2266, size: 64, offset: 448)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{null, !1179}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "split_block", scope: !2183, file: !2184, line: 59, baseType: !2270, size: 64, offset: 512)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = !DISubroutineType(types: !2272)
!2272 = !{!1179, !1179, !642}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "move_block_after", scope: !2183, file: !2184, line: 62, baseType: !2274, size: 64, offset: 576)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DISubroutineType(types: !2276)
!2276 = !{!637, !1179, !1179}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "can_merge_blocks_p", scope: !2183, file: !2184, line: 65, baseType: !2274, size: 64, offset: 640)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "merge_blocks", scope: !2183, file: !2184, line: 68, baseType: !2167, size: 64, offset: 704)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "predict_edge", scope: !2183, file: !2184, line: 71, baseType: !2280, size: 64, offset: 768)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!2281 = !DISubroutineType(types: !2282)
!2282 = !{null, !1196, !563, !638}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "predicted_by_p", scope: !2183, file: !2184, line: 75, baseType: !2284, size: 64, offset: 832)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!637, !2287, !563}
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !646, line: 112, baseType: !2288)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "can_duplicate_block_p", scope: !2183, file: !2184, line: 78, baseType: !2291, size: 64, offset: 896)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{!637, !2287}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate_block", scope: !2183, file: !2184, line: 81, baseType: !2295, size: 64, offset: 960)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{!1179, !1179}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "split_edge", scope: !2183, file: !2184, line: 85, baseType: !2299, size: 64, offset: 1024)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{!1179, !1196}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "make_forwarder_block", scope: !2183, file: !2184, line: 86, baseType: !2303, size: 64, offset: 1088)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = !DISubroutineType(types: !2305)
!2305 = !{null, !1196}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "tidy_fallthru_edge", scope: !2183, file: !2184, line: 89, baseType: !2303, size: 64, offset: 1152)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "block_ends_with_call_p", scope: !2183, file: !2184, line: 93, baseType: !2308, size: 64, offset: 1216)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{!637, !1179}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "block_ends_with_condjump_p", scope: !2183, file: !2184, line: 97, baseType: !2291, size: 64, offset: 1280)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "flow_call_edges_add", scope: !2183, file: !2184, line: 106, baseType: !2313, size: 64, offset: 1344)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{!638, !2316}
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2317, line: 45, baseType: !2318)
!2317 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2317, line: 39, size: 192, elements: !2320)
!2320 = !{!2321, !2322, !2323, !2324}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2319, file: !2317, line: 41, baseType: !636, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2319, file: !2317, line: 42, baseType: !7, size: 32, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2319, file: !2317, line: 43, baseType: !7, size: 32, offset: 96)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2319, file: !2317, line: 44, baseType: !2325, size: 64, offset: 128)
!2325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !715, size: 64, elements: !680)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "execute_on_growing_pred", scope: !2183, file: !2184, line: 110, baseType: !2303, size: 64, offset: 1408)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "execute_on_shrinking_pred", scope: !2183, file: !2184, line: 114, baseType: !2303, size: 64, offset: 1472)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_hook_duplicate_loop_to_header_edge", scope: !2183, file: !2184, line: 118, baseType: !2329, size: 64, offset: 1536)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 64)
!2330 = !DISubroutineType(types: !2331)
!2331 = !{!637, !1221, !1196, !7, !2316, !1196, !2332, !638}
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "lv_add_condition_to_bb", scope: !2183, file: !2184, line: 125, baseType: !2334, size: 64, offset: 1600)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DISubroutineType(types: !2336)
!2336 = !{null, !1179, !1179, !1179, !642}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "lv_adjust_loop_header_phi", scope: !2183, file: !2184, line: 128, baseType: !2338, size: 64, offset: 1664)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{null, !1179, !1179, !1179, !1196}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "extract_cond_bb_edges", scope: !2183, file: !2184, line: 133, baseType: !2342, size: 64, offset: 1728)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = !DISubroutineType(types: !2344)
!2344 = !{null, !1179, !2345, !2345}
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "flush_pending_stmts", scope: !2183, file: !2184, line: 138, baseType: !2303, size: 64, offset: 1792)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "bb_note_pool", scope: !2, file: !3, line: 129, type: !2349, isLocal: true, isDefinition: true)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx_vec_t", file: !398, line: 42, baseType: !1852)
!2350 = !DIGlobalVariableExpression(var: !2351, expr: !DIExpression())
!2351 = distinct !DIGlobalVariable(name: "has_dependence_data", scope: !2, file: !3, line: 3000, type: !2352, isLocal: true, isDefinition: true)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 2983, size: 384, elements: !2353)
!2353 = !{!2354, !2355, !2357, !2358, !2359}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "dc", scope: !2352, file: !3, line: 2985, baseType: !1900, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "where", scope: !2352, file: !3, line: 2989, baseType: !2356, size: 32, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "deps_where_t", file: !409, line: 868, baseType: !595)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "pro", scope: !2352, file: !3, line: 2992, baseType: !1892, size: 64, offset: 128)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "con", scope: !2352, file: !3, line: 2995, baseType: !1939, size: 64, offset: 192)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "has_dep_p", scope: !2352, file: !3, line: 2999, baseType: !2360, size: 96, offset: 256)
!2360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1844, size: 96, elements: !832)
!2361 = !DIGlobalVariableExpression(var: !2362, expr: !DIExpression())
!2362 = distinct !DIGlobalVariable(name: "tick_check_data", scope: !2, file: !3, line: 3310, type: !2363, isLocal: true, isDefinition: true)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 3300, size: 128, elements: !2364)
!2364 = !{!2365, !2368, !2369}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2363, file: !3, line: 3303, baseType: !2366, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "expr_t", file: !409, line: 171, baseType: !2367)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "cycle", scope: !2363, file: !3, line: 3306, baseType: !638, size: 32, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "seen_true_dep_p", scope: !2363, file: !3, line: 3309, baseType: !637, size: 8, offset: 96)
!2370 = !DIGlobalVariableExpression(var: !2371, expr: !DIExpression())
!2371 = distinct !DIGlobalVariable(name: "succs_info_pool", scope: !2, file: !3, line: 4310, type: !2372, isLocal: true, isDefinition: true)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 4297, size: 192, elements: !2373)
!2373 = !{!2374, !2375, !2376, !2377}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2372, file: !3, line: 4300, baseType: !1845, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2372, file: !3, line: 4303, baseType: !638, size: 32, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !2372, file: !3, line: 4306, baseType: !638, size: 32, offset: 96)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "max_top", scope: !2372, file: !3, line: 4309, baseType: !638, size: 32, offset: 128)
!2378 = !DIGlobalVariableExpression(var: !2379, expr: !DIExpression())
!2379 = distinct !DIGlobalVariable(name: "sel_cfg_hooks", scope: !2, file: !3, line: 5477, type: !2183, isLocal: true, isDefinition: true)
!2380 = !DIGlobalVariableExpression(var: !2381, expr: !DIExpression())
!2381 = distinct !DIGlobalVariable(name: "bulk_tc", scope: !2, file: !3, line: 334, type: !2005, isLocal: true, isDefinition: true)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "advance_deps_context_sched_deps_info", scope: !2, file: !3, line: 493, type: !2384, isLocal: true, isDefinition: true)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_deps_info_def", file: !398, line: 1149, size: 832, elements: !2385)
!2385 = !{!2386, !2390, !2394, !2398, !2399, !2400, !2401, !2402, !2406, !2407, !2408, !2412, !2416, !2417, !2418}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "compute_jump_reg_dependencies", scope: !2384, file: !398, line: 1154, baseType: !2387, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{null, !645, !1841, !1841, !1841}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "start_insn", scope: !2384, file: !398, line: 1157, baseType: !2391, size: 64, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{null, !645}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "finish_insn", scope: !2384, file: !398, line: 1160, baseType: !2395, size: 64, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{null}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "start_lhs", scope: !2384, file: !398, line: 1163, baseType: !2391, size: 64, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "finish_lhs", scope: !2384, file: !398, line: 1166, baseType: !2395, size: 64, offset: 256)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "start_rhs", scope: !2384, file: !398, line: 1169, baseType: !2391, size: 64, offset: 320)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "finish_rhs", scope: !2384, file: !398, line: 1172, baseType: !2395, size: 64, offset: 384)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_set", scope: !2384, file: !398, line: 1175, baseType: !2403, size: 64, offset: 448)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = !DISubroutineType(types: !2405)
!2405 = !{null, !638}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_clobber", scope: !2384, file: !398, line: 1178, baseType: !2403, size: 64, offset: 512)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_use", scope: !2384, file: !398, line: 1181, baseType: !2403, size: 64, offset: 576)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "note_mem_dep", scope: !2384, file: !398, line: 1185, baseType: !2409, size: 64, offset: 640)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{null, !645, !645, !645, !1844}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "note_dep", scope: !2384, file: !398, line: 1188, baseType: !2413, size: 64, offset: 704)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{null, !645, !1844}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "use_cselib", scope: !2384, file: !398, line: 1194, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "use_deps_list", scope: !2384, file: !398, line: 1198, baseType: !7, size: 1, offset: 769, flags: DIFlagBitField, extraData: i64 768)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "generate_spec_deps", scope: !2384, file: !398, line: 1202, baseType: !7, size: 1, offset: 770, flags: DIFlagBitField, extraData: i64 768)
!2419 = !DIGlobalVariableExpression(var: !2420, expr: !DIExpression())
!2420 = distinct !DIGlobalVariable(name: "regset_pool", scope: !2, file: !3, line: 113, type: !2421, isLocal: true, isDefinition: true)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 89, size: 320, elements: !2422)
!2422 = !{!2423, !2424, !2425, !2426, !2427, !2428, !2429}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2421, file: !3, line: 92, baseType: !1840, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2421, file: !3, line: 95, baseType: !638, size: 32, offset: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2421, file: !3, line: 98, baseType: !638, size: 32, offset: 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "vv", scope: !2421, file: !3, line: 103, baseType: !1840, size: 64, offset: 128)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "nn", scope: !2421, file: !3, line: 106, baseType: !638, size: 32, offset: 192)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2421, file: !3, line: 109, baseType: !638, size: 32, offset: 224)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "diff", scope: !2421, file: !3, line: 112, baseType: !638, size: 32, offset: 256)
!2430 = !DIGlobalVariableExpression(var: !2431, expr: !DIExpression())
!2431 = distinct !DIGlobalVariable(name: "nop_pool", scope: !2, file: !3, line: 126, type: !2432, isLocal: true, isDefinition: true)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 116, size: 128, elements: !2433)
!2433 = !{!2434, !2435, !2436}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2432, file: !3, line: 119, baseType: !2114, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2432, file: !3, line: 122, baseType: !638, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2432, file: !3, line: 125, baseType: !638, size: 32, offset: 96)
!2437 = !DIGlobalVariableExpression(var: !2438, expr: !DIExpression())
!2438 = distinct !DIGlobalVariable(name: "nop_vinsn", scope: !2, file: !3, line: 1030, type: !1939, isLocal: true, isDefinition: true)
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "init_insn_force_unique_p", scope: !2, file: !3, line: 1354, type: !637, isLocal: true, isDefinition: true)
!2441 = !DIGlobalVariableExpression(var: !2442, expr: !DIExpression())
!2442 = distinct !DIGlobalVariable(name: "init_global_data", scope: !2, file: !3, line: 2827, type: !2443, isLocal: true, isDefinition: true)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 2823, size: 64, elements: !2444)
!2444 = !{!2445}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "prev_insn", scope: !2443, file: !3, line: 2826, baseType: !1892, size: 64)
!2446 = !DIGlobalVariableExpression(var: !2447, expr: !DIExpression())
!2447 = distinct !DIGlobalVariable(name: "has_dependence_sched_deps_info", scope: !2, file: !3, line: 3182, type: !2384, isLocal: true, isDefinition: true)
!2448 = !DIGlobalVariableExpression(var: !2449, expr: !DIExpression())
!2449 = distinct !DIGlobalVariable(name: "const_has_dependence_sched_deps_info", scope: !2, file: !3, line: 3185, type: !2450, isLocal: true, isDefinition: true)
!2450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2384)
!2451 = !DIGlobalVariableExpression(var: !2452, expr: !DIExpression())
!2452 = distinct !DIGlobalVariable(name: "tick_check_sched_deps_info", scope: !2, file: !3, line: 3378, type: !2384, isLocal: true, isDefinition: true)
!2453 = !DIGlobalVariableExpression(var: !2454, expr: !DIExpression())
!2454 = distinct !DIGlobalVariable(name: "insn_init_ssid", scope: !2, file: !3, line: 3992, type: !2455, isLocal: true, isDefinition: true)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "sel_insn_data_t", file: !409, line: 760, baseType: !2456)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2457 = !DIGlobalVariableExpression(var: !2458, expr: !DIExpression())
!2458 = distinct !DIGlobalVariable(name: "_insn_init_ssid", scope: !2, file: !3, line: 3991, type: !2069, isLocal: true, isDefinition: true)
!2459 = !DIGlobalVariableExpression(var: !2460, expr: !DIExpression())
!2460 = distinct !DIGlobalVariable(name: "insn_init_create_new_vinsn_p", scope: !2, file: !3, line: 3995, type: !637, isLocal: true, isDefinition: true)
!2461 = !DIGlobalVariableExpression(var: !2462, expr: !DIExpression())
!2462 = distinct !DIGlobalVariable(name: "new_insns", scope: !2, file: !3, line: 3927, type: !1851, isLocal: true, isDefinition: true)
!2463 = !DIGlobalVariableExpression(var: !2464, expr: !DIExpression())
!2464 = distinct !DIGlobalVariable(name: "last_added_blocks", scope: !2, file: !3, line: 4294, type: !1874, isLocal: true, isDefinition: true)
!2465 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression())
!2466 = distinct !DIGlobalVariable(name: "deps_init_id_data", scope: !2, file: !3, line: 2358, type: !2467, isLocal: true, isDefinition: true)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 2345, size: 192, elements: !2468)
!2468 = !{!2469, !2470, !2473, !2474}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "where", scope: !2467, file: !3, line: 2348, baseType: !2356, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2467, file: !3, line: 2351, baseType: !2471, size: 64, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "idata_t", file: !409, line: 51, baseType: !2472)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "force_unique_p", scope: !2467, file: !3, line: 2354, baseType: !637, size: 8, offset: 128)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "force_use_p", scope: !2467, file: !3, line: 2357, baseType: !637, size: 8, offset: 136)
!2475 = !DIGlobalVariableExpression(var: !2476, expr: !DIExpression())
!2476 = distinct !DIGlobalVariable(name: "deps_init_id_sched_deps_info", scope: !2, file: !3, line: 2514, type: !2384, isLocal: true, isDefinition: true)
!2477 = !DIGlobalVariableExpression(var: !2478, expr: !DIExpression())
!2478 = distinct !DIGlobalVariable(name: "const_deps_init_id_sched_deps_info", scope: !2, file: !3, line: 2517, type: !2450, isLocal: true, isDefinition: true)
!2479 = !DIGlobalVariableExpression(var: !2480, expr: !DIExpression())
!2480 = distinct !DIGlobalVariable(name: "sched_sel_haifa_sched_info", scope: !2, file: !3, line: 5583, type: !2481, isLocal: true, isDefinition: true)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "haifa_sched_info", file: !398, line: 556, size: 1088, elements: !2482)
!2482 = !{!2483, !2484, !2485, !2486, !2490, !2494, !2499, !2500, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2514, !2518, !2522}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "init_ready_list", scope: !2481, file: !398, line: 560, baseType: !2395, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "can_schedule_ready_p", scope: !2481, file: !398, line: 563, baseType: !2175, size: 64, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_more_p", scope: !2481, file: !398, line: 565, baseType: !2188, size: 64, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "new_ready", scope: !2481, file: !398, line: 571, baseType: !2487, size: 64, offset: 192)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 64)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{!1844, !645, !1844}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "rank", scope: !2481, file: !398, line: 575, baseType: !2491, size: 64, offset: 256)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64)
!2492 = !DISubroutineType(types: !2493)
!2493 = !{!638, !645, !645}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "print_insn", scope: !2481, file: !398, line: 580, baseType: !2495, size: 64, offset: 320)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = !DISubroutineType(types: !2497)
!2497 = !{!643, !2498, !638}
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !646, line: 51, baseType: !2027)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "contributes_to_priority", scope: !2481, file: !398, line: 583, baseType: !2491, size: 64, offset: 384)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "insn_finishes_block_p", scope: !2481, file: !398, line: 587, baseType: !2501, size: 64, offset: 448)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{!637, !645}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "prev_head", scope: !2481, file: !398, line: 590, baseType: !645, size: 64, offset: 512)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "next_tail", scope: !2481, file: !398, line: 590, baseType: !645, size: 64, offset: 576)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2481, file: !398, line: 594, baseType: !645, size: 64, offset: 640)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2481, file: !398, line: 594, baseType: !645, size: 64, offset: 704)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "queue_must_finish_empty", scope: !2481, file: !398, line: 597, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "sched_max_insns_priority", scope: !2481, file: !398, line: 600, baseType: !638, size: 32, offset: 800)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "add_remove_insn", scope: !2481, file: !398, line: 606, baseType: !2511, size: 64, offset: 832)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{null, !645, !638}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "begin_schedule_ready", scope: !2481, file: !398, line: 611, baseType: !2515, size: 64, offset: 896)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 64)
!2516 = !DISubroutineType(types: !2517)
!2517 = !{null, !645, !645}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "advance_target_bb", scope: !2481, file: !398, line: 617, baseType: !2519, size: 64, offset: 960)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = !DISubroutineType(types: !2521)
!2521 = !{!1179, !1179, !645}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2481, file: !398, line: 621, baseType: !7, size: 32, offset: 1024)
!2523 = !DIGlobalVariableExpression(var: !2524, expr: !DIExpression())
!2524 = distinct !DIGlobalVariable(name: "bbs_in_loop_rgns", scope: !2, file: !3, line: 75, type: !2316, isLocal: true, isDefinition: true)
!2525 = !DIGlobalVariableExpression(var: !2526, expr: !DIExpression())
!2526 = distinct !DIGlobalVariable(name: "rev_top_order_index_len", scope: !2, file: !3, line: 86, type: !638, isLocal: true, isDefinition: true)
!2527 = !DIGlobalVariableExpression(var: !2528, expr: !DIExpression())
!2528 = distinct !DIGlobalVariable(name: "loop_nests", scope: !2, file: !3, line: 72, type: !2117, isLocal: true, isDefinition: true)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "rev_top_order_index", scope: !2, file: !3, line: 83, type: !1839, isLocal: true, isDefinition: true)
!2531 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2532 = !DIGlobalVariableExpression(var: !2460, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2533 = !DIGlobalVariableExpression(var: !2362, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 64))
!2534 = !DIGlobalVariableExpression(var: !2362, expr: !DIExpression(DW_OP_LLVM_fragment, 64, 32))
!2535 = !DIGlobalVariableExpression(var: !2362, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment, 96, 8))
!2536 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 32))
!2537 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression(DW_OP_LLVM_fragment, 64, 64))
!2538 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression(DW_OP_LLVM_fragment, 128, 8))
!2539 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment, 136, 8))
!2540 = !{i32 2, !"Dwarf Version", i32 4}
!2541 = !{i32 2, !"Debug Info Version", i32 3}
!2542 = !{i32 1, !"wchar_size", i32 4}
!2543 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2544 = distinct !DISubprogram(name: "vprintf", scope: !2545, file: !2545, line: 39, type: !2546, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2556)
!2545 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2546 = !DISubroutineType(types: !2547)
!2547 = !{!638, !2548, !2549}
!2548 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !643)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 64)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2551)
!2551 = !{!2552, !2553, !2554, !2555}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2550, file: !3, baseType: !7, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2550, file: !3, baseType: !7, size: 32, offset: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2550, file: !3, baseType: !642, size: 64, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2550, file: !3, baseType: !642, size: 64, offset: 128)
!2556 = !{!2557, !2558}
!2557 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2544, file: !2545, line: 39, type: !2548)
!2558 = !DILocalVariable(name: "__arg", arg: 2, scope: !2544, file: !2545, line: 39, type: !2549)
!2559 = !DILocation(line: 0, scope: !2544)
!2560 = !DILocation(line: 41, column: 20, scope: !2544)
!2561 = !DILocation(line: 41, column: 10, scope: !2544)
!2562 = !DILocation(line: 41, column: 3, scope: !2544)
!2563 = distinct !DISubprogram(name: "getchar", scope: !2545, file: !2545, line: 47, type: !2189, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!2564 = !{}
!2565 = !DILocation(line: 49, column: 16, scope: !2563)
!2566 = !DILocation(line: 49, column: 10, scope: !2563)
!2567 = !DILocation(line: 49, column: 3, scope: !2563)
!2568 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2545, file: !2545, line: 56, type: !2569, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2571)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!638, !2195}
!2571 = !{!2572}
!2572 = !DILocalVariable(name: "__fp", arg: 1, scope: !2568, file: !2545, line: 56, type: !2195)
!2573 = !DILocation(line: 0, scope: !2568)
!2574 = !DILocation(line: 58, column: 10, scope: !2568)
!2575 = !DILocation(line: 58, column: 3, scope: !2568)
!2576 = distinct !DISubprogram(name: "getc_unlocked", scope: !2545, file: !2545, line: 66, type: !2569, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2577)
!2577 = !{!2578}
!2578 = !DILocalVariable(name: "__fp", arg: 1, scope: !2576, file: !2545, line: 66, type: !2195)
!2579 = !DILocation(line: 0, scope: !2576)
!2580 = !DILocation(line: 68, column: 10, scope: !2576)
!2581 = !DILocation(line: 68, column: 3, scope: !2576)
!2582 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2545, file: !2545, line: 73, type: !2189, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!2583 = !DILocation(line: 75, column: 10, scope: !2582)
!2584 = !DILocation(line: 75, column: 3, scope: !2582)
!2585 = distinct !DISubprogram(name: "putchar", scope: !2545, file: !2545, line: 82, type: !2586, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2588)
!2586 = !DISubroutineType(types: !2587)
!2587 = !{!638, !638}
!2588 = !{!2589}
!2589 = !DILocalVariable(name: "__c", arg: 1, scope: !2585, file: !2545, line: 82, type: !638)
!2590 = !DILocation(line: 0, scope: !2585)
!2591 = !DILocation(line: 84, column: 21, scope: !2585)
!2592 = !DILocation(line: 84, column: 10, scope: !2585)
!2593 = !DILocation(line: 84, column: 3, scope: !2585)
!2594 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2545, file: !2545, line: 91, type: !2595, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2597)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!638, !638, !2195}
!2597 = !{!2598, !2599}
!2598 = !DILocalVariable(name: "__c", arg: 1, scope: !2594, file: !2545, line: 91, type: !638)
!2599 = !DILocalVariable(name: "__stream", arg: 2, scope: !2594, file: !2545, line: 91, type: !2195)
!2600 = !DILocation(line: 0, scope: !2594)
!2601 = !DILocation(line: 93, column: 10, scope: !2594)
!2602 = !DILocation(line: 93, column: 3, scope: !2594)
!2603 = distinct !DISubprogram(name: "putc_unlocked", scope: !2545, file: !2545, line: 101, type: !2595, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2604)
!2604 = !{!2605, !2606}
!2605 = !DILocalVariable(name: "__c", arg: 1, scope: !2603, file: !2545, line: 101, type: !638)
!2606 = !DILocalVariable(name: "__stream", arg: 2, scope: !2603, file: !2545, line: 101, type: !2195)
!2607 = !DILocation(line: 0, scope: !2603)
!2608 = !DILocation(line: 103, column: 10, scope: !2603)
!2609 = !DILocation(line: 103, column: 3, scope: !2603)
!2610 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2545, file: !2545, line: 108, type: !2586, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2611)
!2611 = !{!2612}
!2612 = !DILocalVariable(name: "__c", arg: 1, scope: !2610, file: !2545, line: 108, type: !638)
!2613 = !DILocation(line: 0, scope: !2610)
!2614 = !DILocation(line: 110, column: 10, scope: !2610)
!2615 = !DILocation(line: 110, column: 3, scope: !2610)
!2616 = distinct !DISubprogram(name: "getline", scope: !2545, file: !2545, line: 118, type: !2617, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2621)
!2617 = !DISubroutineType(types: !2618)
!2618 = !{!2619, !639, !2620, !2195}
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2222, line: 193, baseType: !732)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!2621 = !{!2622, !2623, !2624}
!2622 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2616, file: !2545, line: 118, type: !639)
!2623 = !DILocalVariable(name: "__n", arg: 2, scope: !2616, file: !2545, line: 118, type: !2620)
!2624 = !DILocalVariable(name: "__stream", arg: 3, scope: !2616, file: !2545, line: 118, type: !2195)
!2625 = !DILocation(line: 0, scope: !2616)
!2626 = !DILocation(line: 120, column: 10, scope: !2616)
!2627 = !DILocation(line: 120, column: 3, scope: !2616)
!2628 = distinct !DISubprogram(name: "feof_unlocked", scope: !2545, file: !2545, line: 128, type: !2569, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2629)
!2629 = !{!2630}
!2630 = !DILocalVariable(name: "__stream", arg: 1, scope: !2628, file: !2545, line: 128, type: !2195)
!2631 = !DILocation(line: 0, scope: !2628)
!2632 = !DILocation(line: 130, column: 10, scope: !2628)
!2633 = !DILocation(line: 130, column: 3, scope: !2628)
!2634 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2545, file: !2545, line: 135, type: !2569, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2635)
!2635 = !{!2636}
!2636 = !DILocalVariable(name: "__stream", arg: 1, scope: !2634, file: !2545, line: 135, type: !2195)
!2637 = !DILocation(line: 0, scope: !2634)
!2638 = !DILocation(line: 137, column: 10, scope: !2634)
!2639 = !DILocation(line: 137, column: 3, scope: !2634)
!2640 = distinct !DISubprogram(name: "tolower", scope: !2641, file: !2641, line: 207, type: !2586, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2642)
!2641 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2642 = !{!2643}
!2643 = !DILocalVariable(name: "__c", arg: 1, scope: !2640, file: !2641, line: 207, type: !638)
!2644 = !DILocation(line: 0, scope: !2640)
!2645 = !DILocation(line: 209, column: 22, scope: !2640)
!2646 = !DILocation(line: 209, column: 39, scope: !2640)
!2647 = !DILocation(line: 209, column: 38, scope: !2640)
!2648 = !DILocation(line: 209, column: 37, scope: !2640)
!2649 = !DILocation(line: 209, column: 10, scope: !2640)
!2650 = !DILocation(line: 209, column: 3, scope: !2640)
!2651 = distinct !DISubprogram(name: "toupper", scope: !2641, file: !2641, line: 213, type: !2586, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2652)
!2652 = !{!2653}
!2653 = !DILocalVariable(name: "__c", arg: 1, scope: !2651, file: !2641, line: 213, type: !638)
!2654 = !DILocation(line: 0, scope: !2651)
!2655 = !DILocation(line: 215, column: 22, scope: !2651)
!2656 = !DILocation(line: 215, column: 39, scope: !2651)
!2657 = !DILocation(line: 215, column: 38, scope: !2651)
!2658 = !DILocation(line: 215, column: 37, scope: !2651)
!2659 = !DILocation(line: 215, column: 10, scope: !2651)
!2660 = !DILocation(line: 215, column: 3, scope: !2651)
!2661 = distinct !DISubprogram(name: "atoi", scope: !2662, file: !2662, line: 361, type: !2663, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2665)
!2662 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!638, !643}
!2665 = !{!2666}
!2666 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2661, file: !2662, line: 361, type: !643)
!2667 = !DILocation(line: 0, scope: !2661)
!2668 = !DILocation(line: 363, column: 16, scope: !2661)
!2669 = !DILocation(line: 363, column: 10, scope: !2661)
!2670 = !DILocation(line: 363, column: 3, scope: !2661)
!2671 = distinct !DISubprogram(name: "atol", scope: !2662, file: !2662, line: 366, type: !2672, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2674)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{!732, !643}
!2674 = !{!2675}
!2675 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2671, file: !2662, line: 366, type: !643)
!2676 = !DILocation(line: 0, scope: !2671)
!2677 = !DILocation(line: 368, column: 10, scope: !2671)
!2678 = !DILocation(line: 368, column: 3, scope: !2671)
!2679 = distinct !DISubprogram(name: "atoll", scope: !2662, file: !2662, line: 373, type: !2680, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2683)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!2682, !643}
!2682 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2683 = !{!2684}
!2684 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2679, file: !2662, line: 373, type: !643)
!2685 = !DILocation(line: 0, scope: !2679)
!2686 = !DILocation(line: 375, column: 10, scope: !2679)
!2687 = !DILocation(line: 375, column: 3, scope: !2679)
!2688 = distinct !DISubprogram(name: "bsearch", scope: !2689, file: !2689, line: 20, type: !2690, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2693)
!2689 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2690 = !DISubroutineType(types: !2691)
!2691 = !{!642, !1102, !1102, !1117, !1117, !2692}
!2692 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2662, line: 808, baseType: !1106)
!2693 = !{!2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703}
!2694 = !DILocalVariable(name: "__key", arg: 1, scope: !2688, file: !2689, line: 20, type: !1102)
!2695 = !DILocalVariable(name: "__base", arg: 2, scope: !2688, file: !2689, line: 20, type: !1102)
!2696 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2688, file: !2689, line: 20, type: !1117)
!2697 = !DILocalVariable(name: "__size", arg: 4, scope: !2688, file: !2689, line: 20, type: !1117)
!2698 = !DILocalVariable(name: "__compar", arg: 5, scope: !2688, file: !2689, line: 21, type: !2692)
!2699 = !DILocalVariable(name: "__l", scope: !2688, file: !2689, line: 23, type: !1117)
!2700 = !DILocalVariable(name: "__u", scope: !2688, file: !2689, line: 23, type: !1117)
!2701 = !DILocalVariable(name: "__idx", scope: !2688, file: !2689, line: 23, type: !1117)
!2702 = !DILocalVariable(name: "__p", scope: !2688, file: !2689, line: 24, type: !1102)
!2703 = !DILocalVariable(name: "__comparison", scope: !2688, file: !2689, line: 25, type: !638)
!2704 = !DILocation(line: 0, scope: !2688)
!2705 = !DILocation(line: 29, column: 3, scope: !2688)
!2706 = !DILocation(line: 27, column: 7, scope: !2688)
!2707 = !DILocation(line: 29, column: 14, scope: !2688)
!2708 = !DILocation(line: 31, column: 20, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2688, file: !2689, line: 30, column: 5)
!2710 = !DILocation(line: 31, column: 27, scope: !2709)
!2711 = !DILocation(line: 32, column: 56, scope: !2709)
!2712 = !DILocation(line: 32, column: 47, scope: !2709)
!2713 = !DILocation(line: 33, column: 22, scope: !2709)
!2714 = !DILocation(line: 34, column: 24, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2709, file: !2689, line: 34, column: 11)
!2716 = !DILocation(line: 34, column: 11, scope: !2709)
!2717 = !DILocation(line: 36, column: 29, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2715, file: !2689, line: 36, column: 16)
!2719 = !DILocation(line: 36, column: 16, scope: !2715)
!2720 = !DILocation(line: 37, column: 14, scope: !2718)
!2721 = distinct !{!2721, !2705, !2722}
!2722 = !DILocation(line: 40, column: 5, scope: !2688)
!2723 = !DILocation(line: 43, column: 1, scope: !2688)
!2724 = distinct !DISubprogram(name: "atof", scope: !2725, file: !2725, line: 25, type: !2726, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2729)
!2725 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2726 = !DISubroutineType(types: !2727)
!2727 = !{!2728, !643}
!2728 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2729 = !{!2730}
!2730 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2724, file: !2725, line: 25, type: !643)
!2731 = !DILocation(line: 0, scope: !2724)
!2732 = !DILocation(line: 27, column: 10, scope: !2724)
!2733 = !DILocation(line: 27, column: 3, scope: !2724)
!2734 = distinct !DISubprogram(name: "strtoimax", scope: !2735, file: !2735, line: 324, type: !2736, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2742)
!2735 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!2738, !2548, !2741, !638}
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2739, line: 101, baseType: !2740)
!2739 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2740 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2222, line: 72, baseType: !732)
!2741 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !639)
!2742 = !{!2743, !2744, !2745}
!2743 = !DILocalVariable(name: "nptr", arg: 1, scope: !2734, file: !2735, line: 324, type: !2548)
!2744 = !DILocalVariable(name: "endptr", arg: 2, scope: !2734, file: !2735, line: 324, type: !2741)
!2745 = !DILocalVariable(name: "base", arg: 3, scope: !2734, file: !2735, line: 324, type: !638)
!2746 = !DILocation(line: 0, scope: !2734)
!2747 = !DILocation(line: 327, column: 10, scope: !2734)
!2748 = !DILocation(line: 327, column: 3, scope: !2734)
!2749 = distinct !DISubprogram(name: "strtoumax", scope: !2735, file: !2735, line: 336, type: !2750, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2754)
!2750 = !DISubroutineType(types: !2751)
!2751 = !{!2752, !2548, !2741, !638}
!2752 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2739, line: 102, baseType: !2753)
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2222, line: 73, baseType: !715)
!2754 = !{!2755, !2756, !2757}
!2755 = !DILocalVariable(name: "nptr", arg: 1, scope: !2749, file: !2735, line: 336, type: !2548)
!2756 = !DILocalVariable(name: "endptr", arg: 2, scope: !2749, file: !2735, line: 336, type: !2741)
!2757 = !DILocalVariable(name: "base", arg: 3, scope: !2749, file: !2735, line: 336, type: !638)
!2758 = !DILocation(line: 0, scope: !2749)
!2759 = !DILocation(line: 339, column: 10, scope: !2749)
!2760 = !DILocation(line: 339, column: 3, scope: !2749)
!2761 = distinct !DISubprogram(name: "wcstoimax", scope: !2735, file: !2735, line: 348, type: !2762, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2771)
!2762 = !DISubroutineType(types: !2763)
!2763 = !{!2738, !2764, !2768, !638}
!2764 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2765)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2767)
!2767 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2735, line: 34, baseType: !638)
!2768 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2769)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2771 = !{!2772, !2773, !2774}
!2772 = !DILocalVariable(name: "nptr", arg: 1, scope: !2761, file: !2735, line: 348, type: !2764)
!2773 = !DILocalVariable(name: "endptr", arg: 2, scope: !2761, file: !2735, line: 348, type: !2768)
!2774 = !DILocalVariable(name: "base", arg: 3, scope: !2761, file: !2735, line: 348, type: !638)
!2775 = !DILocation(line: 0, scope: !2761)
!2776 = !DILocation(line: 351, column: 10, scope: !2761)
!2777 = !DILocation(line: 351, column: 3, scope: !2761)
!2778 = distinct !DISubprogram(name: "wcstoumax", scope: !2735, file: !2735, line: 362, type: !2779, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2781)
!2779 = !DISubroutineType(types: !2780)
!2780 = !{!2752, !2764, !2768, !638}
!2781 = !{!2782, !2783, !2784}
!2782 = !DILocalVariable(name: "nptr", arg: 1, scope: !2778, file: !2735, line: 362, type: !2764)
!2783 = !DILocalVariable(name: "endptr", arg: 2, scope: !2778, file: !2735, line: 362, type: !2768)
!2784 = !DILocalVariable(name: "base", arg: 3, scope: !2778, file: !2735, line: 362, type: !638)
!2785 = !DILocation(line: 0, scope: !2778)
!2786 = !DILocation(line: 365, column: 10, scope: !2778)
!2787 = !DILocation(line: 365, column: 3, scope: !2778)
!2788 = distinct !DISubprogram(name: "stat", scope: !2789, file: !2789, line: 453, type: !2790, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2827)
!2789 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2790 = !DISubroutineType(types: !2791)
!2791 = !{!638, !643, !2792}
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2794, line: 46, size: 1152, elements: !2795)
!2794 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2795 = !{!2796, !2798, !2800, !2802, !2804, !2806, !2808, !2809, !2810, !2811, !2813, !2815, !2823, !2824, !2825}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2793, file: !2794, line: 48, baseType: !2797, size: 64)
!2797 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2222, line: 145, baseType: !715)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2793, file: !2794, line: 53, baseType: !2799, size: 64, offset: 64)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2222, line: 148, baseType: !715)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2793, file: !2794, line: 61, baseType: !2801, size: 64, offset: 128)
!2801 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2222, line: 151, baseType: !715)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2793, file: !2794, line: 62, baseType: !2803, size: 32, offset: 192)
!2803 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2222, line: 150, baseType: !7)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2793, file: !2794, line: 64, baseType: !2805, size: 32, offset: 224)
!2805 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2222, line: 146, baseType: !7)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2793, file: !2794, line: 65, baseType: !2807, size: 32, offset: 256)
!2807 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2222, line: 147, baseType: !7)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2793, file: !2794, line: 67, baseType: !638, size: 32, offset: 288)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2793, file: !2794, line: 69, baseType: !2797, size: 64, offset: 320)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2793, file: !2794, line: 74, baseType: !2221, size: 64, offset: 384)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2793, file: !2794, line: 78, baseType: !2812, size: 64, offset: 448)
!2812 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2222, line: 174, baseType: !732)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2793, file: !2794, line: 80, baseType: !2814, size: 64, offset: 512)
!2814 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2222, line: 179, baseType: !732)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2793, file: !2794, line: 91, baseType: !2816, size: 128, offset: 576)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2817, line: 10, size: 128, elements: !2818)
!2817 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2818 = !{!2819, !2821}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2816, file: !2817, line: 12, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2222, line: 160, baseType: !732)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2816, file: !2817, line: 16, baseType: !2822, size: 64, offset: 64)
!2822 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2222, line: 196, baseType: !732)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2793, file: !2794, line: 92, baseType: !2816, size: 128, offset: 704)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2793, file: !2794, line: 93, baseType: !2816, size: 128, offset: 832)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2793, file: !2794, line: 106, baseType: !2826, size: 192, offset: 960)
!2826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2822, size: 192, elements: !832)
!2827 = !{!2828, !2829}
!2828 = !DILocalVariable(name: "__path", arg: 1, scope: !2788, file: !2789, line: 453, type: !643)
!2829 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2788, file: !2789, line: 453, type: !2792)
!2830 = !DILocation(line: 0, scope: !2788)
!2831 = !DILocation(line: 455, column: 10, scope: !2788)
!2832 = !DILocation(line: 455, column: 3, scope: !2788)
!2833 = distinct !DISubprogram(name: "lstat", scope: !2789, file: !2789, line: 460, type: !2790, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2834)
!2834 = !{!2835, !2836}
!2835 = !DILocalVariable(name: "__path", arg: 1, scope: !2833, file: !2789, line: 460, type: !643)
!2836 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2833, file: !2789, line: 460, type: !2792)
!2837 = !DILocation(line: 0, scope: !2833)
!2838 = !DILocation(line: 462, column: 10, scope: !2833)
!2839 = !DILocation(line: 462, column: 3, scope: !2833)
!2840 = distinct !DISubprogram(name: "fstat", scope: !2789, file: !2789, line: 467, type: !2841, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2843)
!2841 = !DISubroutineType(types: !2842)
!2842 = !{!638, !638, !2792}
!2843 = !{!2844, !2845}
!2844 = !DILocalVariable(name: "__fd", arg: 1, scope: !2840, file: !2789, line: 467, type: !638)
!2845 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2840, file: !2789, line: 467, type: !2792)
!2846 = !DILocation(line: 0, scope: !2840)
!2847 = !DILocation(line: 469, column: 10, scope: !2840)
!2848 = !DILocation(line: 469, column: 3, scope: !2840)
!2849 = distinct !DISubprogram(name: "fstatat", scope: !2789, file: !2789, line: 474, type: !2850, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2852)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!638, !638, !643, !2792, !638}
!2852 = !{!2853, !2854, !2855, !2856}
!2853 = !DILocalVariable(name: "__fd", arg: 1, scope: !2849, file: !2789, line: 474, type: !638)
!2854 = !DILocalVariable(name: "__filename", arg: 2, scope: !2849, file: !2789, line: 474, type: !643)
!2855 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2849, file: !2789, line: 474, type: !2792)
!2856 = !DILocalVariable(name: "__flag", arg: 4, scope: !2849, file: !2789, line: 474, type: !638)
!2857 = !DILocation(line: 0, scope: !2849)
!2858 = !DILocation(line: 477, column: 10, scope: !2849)
!2859 = !DILocation(line: 477, column: 3, scope: !2849)
!2860 = distinct !DISubprogram(name: "mknod", scope: !2789, file: !2789, line: 483, type: !2861, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2863)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!638, !643, !2803, !2797}
!2863 = !{!2864, !2865, !2866}
!2864 = !DILocalVariable(name: "__path", arg: 1, scope: !2860, file: !2789, line: 483, type: !643)
!2865 = !DILocalVariable(name: "__mode", arg: 2, scope: !2860, file: !2789, line: 483, type: !2803)
!2866 = !DILocalVariable(name: "__dev", arg: 3, scope: !2860, file: !2789, line: 483, type: !2797)
!2867 = !DILocation(line: 0, scope: !2860)
!2868 = !DILocation(line: 485, column: 10, scope: !2860)
!2869 = !DILocation(line: 485, column: 3, scope: !2860)
!2870 = distinct !DISubprogram(name: "mknodat", scope: !2789, file: !2789, line: 491, type: !2871, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2873)
!2871 = !DISubroutineType(types: !2872)
!2872 = !{!638, !638, !643, !2803, !2797}
!2873 = !{!2874, !2875, !2876, !2877}
!2874 = !DILocalVariable(name: "__fd", arg: 1, scope: !2870, file: !2789, line: 491, type: !638)
!2875 = !DILocalVariable(name: "__path", arg: 2, scope: !2870, file: !2789, line: 491, type: !643)
!2876 = !DILocalVariable(name: "__mode", arg: 3, scope: !2870, file: !2789, line: 491, type: !2803)
!2877 = !DILocalVariable(name: "__dev", arg: 4, scope: !2870, file: !2789, line: 491, type: !2797)
!2878 = !DILocation(line: 0, scope: !2870)
!2879 = !DILocation(line: 494, column: 10, scope: !2870)
!2880 = !DILocation(line: 494, column: 3, scope: !2870)
!2881 = distinct !DISubprogram(name: "stat64", scope: !2789, file: !2789, line: 502, type: !2882, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2904)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{!638, !643, !2884}
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2794, line: 119, size: 1152, elements: !2886)
!2886 = !{!2887, !2888, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2900, !2901, !2902, !2903}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2885, file: !2794, line: 121, baseType: !2797, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2885, file: !2794, line: 123, baseType: !2889, size: 64, offset: 64)
!2889 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2222, line: 149, baseType: !715)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2885, file: !2794, line: 124, baseType: !2801, size: 64, offset: 128)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2885, file: !2794, line: 125, baseType: !2803, size: 32, offset: 192)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2885, file: !2794, line: 132, baseType: !2805, size: 32, offset: 224)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2885, file: !2794, line: 133, baseType: !2807, size: 32, offset: 256)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2885, file: !2794, line: 135, baseType: !638, size: 32, offset: 288)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2885, file: !2794, line: 136, baseType: !2797, size: 64, offset: 320)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2885, file: !2794, line: 137, baseType: !2221, size: 64, offset: 384)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2885, file: !2794, line: 143, baseType: !2812, size: 64, offset: 448)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2885, file: !2794, line: 144, baseType: !2899, size: 64, offset: 512)
!2899 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2222, line: 180, baseType: !732)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2885, file: !2794, line: 152, baseType: !2816, size: 128, offset: 576)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2885, file: !2794, line: 153, baseType: !2816, size: 128, offset: 704)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2885, file: !2794, line: 154, baseType: !2816, size: 128, offset: 832)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2885, file: !2794, line: 164, baseType: !2826, size: 192, offset: 960)
!2904 = !{!2905, !2906}
!2905 = !DILocalVariable(name: "__path", arg: 1, scope: !2881, file: !2789, line: 502, type: !643)
!2906 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2881, file: !2789, line: 502, type: !2884)
!2907 = !DILocation(line: 0, scope: !2881)
!2908 = !DILocation(line: 504, column: 10, scope: !2881)
!2909 = !DILocation(line: 504, column: 3, scope: !2881)
!2910 = distinct !DISubprogram(name: "lstat64", scope: !2789, file: !2789, line: 509, type: !2882, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2911)
!2911 = !{!2912, !2913}
!2912 = !DILocalVariable(name: "__path", arg: 1, scope: !2910, file: !2789, line: 509, type: !643)
!2913 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2910, file: !2789, line: 509, type: !2884)
!2914 = !DILocation(line: 0, scope: !2910)
!2915 = !DILocation(line: 511, column: 10, scope: !2910)
!2916 = !DILocation(line: 511, column: 3, scope: !2910)
!2917 = distinct !DISubprogram(name: "fstat64", scope: !2789, file: !2789, line: 516, type: !2918, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2920)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{!638, !638, !2884}
!2920 = !{!2921, !2922}
!2921 = !DILocalVariable(name: "__fd", arg: 1, scope: !2917, file: !2789, line: 516, type: !638)
!2922 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2917, file: !2789, line: 516, type: !2884)
!2923 = !DILocation(line: 0, scope: !2917)
!2924 = !DILocation(line: 518, column: 10, scope: !2917)
!2925 = !DILocation(line: 518, column: 3, scope: !2917)
!2926 = distinct !DISubprogram(name: "fstatat64", scope: !2789, file: !2789, line: 523, type: !2927, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2929)
!2927 = !DISubroutineType(types: !2928)
!2928 = !{!638, !638, !643, !2884, !638}
!2929 = !{!2930, !2931, !2932, !2933}
!2930 = !DILocalVariable(name: "__fd", arg: 1, scope: !2926, file: !2789, line: 523, type: !638)
!2931 = !DILocalVariable(name: "__filename", arg: 2, scope: !2926, file: !2789, line: 523, type: !643)
!2932 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2926, file: !2789, line: 523, type: !2884)
!2933 = !DILocalVariable(name: "__flag", arg: 4, scope: !2926, file: !2789, line: 523, type: !638)
!2934 = !DILocation(line: 0, scope: !2926)
!2935 = !DILocation(line: 526, column: 10, scope: !2926)
!2936 = !DILocation(line: 526, column: 3, scope: !2926)
!2937 = distinct !DISubprogram(name: "ilist_copy", scope: !3, file: !3, line: 170, type: !2938, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2940)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{!1894, !1894}
!2940 = !{!2941, !2942, !2943}
!2941 = !DILocalVariable(name: "l", arg: 1, scope: !2937, file: !3, line: 170, type: !1894)
!2942 = !DILocalVariable(name: "head", scope: !2937, file: !3, line: 172, type: !1894)
!2943 = !DILocalVariable(name: "tailp", scope: !2937, file: !3, line: 172, type: !2944)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!2945 = !DILocation(line: 0, scope: !2937)
!2946 = !DILocation(line: 172, column: 3, scope: !2937)
!2947 = !DILocation(line: 172, column: 11, scope: !2937)
!2948 = !DILocation(line: 174, column: 3, scope: !2937)
!2949 = !DILocation(line: 176, column: 7, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2937, file: !3, line: 175, column: 5)
!2951 = !DILocation(line: 177, column: 16, scope: !2950)
!2952 = !DILocation(line: 178, column: 11, scope: !2950)
!2953 = distinct !{!2953, !2948, !2954}
!2954 = !DILocation(line: 179, column: 5, scope: !2937)
!2955 = !DILocation(line: 181, column: 10, scope: !2937)
!2956 = !DILocation(line: 182, column: 1, scope: !2937)
!2957 = !DILocation(line: 181, column: 3, scope: !2937)
!2958 = distinct !DISubprogram(name: "_xlist_add", scope: !409, file: !409, line: 477, type: !2959, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2962)
!2959 = !DISubroutineType(types: !2960)
!2960 = !{null, !2961, !645}
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!2962 = !{!2963, !2964}
!2963 = !DILocalVariable(name: "lp", arg: 1, scope: !2958, file: !409, line: 477, type: !2961)
!2964 = !DILocalVariable(name: "x", arg: 2, scope: !2958, file: !409, line: 477, type: !645)
!2965 = !DILocation(line: 0, scope: !2958)
!2966 = !DILocation(line: 479, column: 3, scope: !2958)
!2967 = !DILocation(line: 480, column: 3, scope: !2958)
!2968 = !DILocation(line: 480, column: 18, scope: !2958)
!2969 = !DILocation(line: 481, column: 1, scope: !2958)
!2970 = distinct !DISubprogram(name: "ilist_invert", scope: !3, file: !3, line: 186, type: !2938, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2971)
!2971 = !{!2972, !2973}
!2972 = !DILocalVariable(name: "l", arg: 1, scope: !2970, file: !3, line: 186, type: !1894)
!2973 = !DILocalVariable(name: "res", scope: !2970, file: !3, line: 188, type: !1894)
!2974 = !DILocation(line: 0, scope: !2970)
!2975 = !DILocation(line: 188, column: 3, scope: !2970)
!2976 = !DILocation(line: 188, column: 11, scope: !2970)
!2977 = !DILocation(line: 190, column: 3, scope: !2970)
!2978 = !DILocation(line: 192, column: 7, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2970, file: !3, line: 191, column: 5)
!2980 = !DILocation(line: 193, column: 11, scope: !2979)
!2981 = distinct !{!2981, !2977, !2982}
!2982 = !DILocation(line: 194, column: 5, scope: !2970)
!2983 = !DILocation(line: 196, column: 10, scope: !2970)
!2984 = !DILocation(line: 197, column: 1, scope: !2970)
!2985 = !DILocation(line: 196, column: 3, scope: !2970)
!2986 = distinct !DISubprogram(name: "blist_add", scope: !3, file: !3, line: 201, type: !2987, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2991)
!2987 = !DISubroutineType(types: !2988)
!2988 = !{null, !2989, !1892, !1894, !1900}
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 64)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_t", file: !409, line: 252, baseType: !1879)
!2991 = !{!2992, !2993, !2994, !2995, !2996}
!2992 = !DILocalVariable(name: "lp", arg: 1, scope: !2986, file: !3, line: 201, type: !2989)
!2993 = !DILocalVariable(name: "to", arg: 2, scope: !2986, file: !3, line: 201, type: !1892)
!2994 = !DILocalVariable(name: "ptr", arg: 3, scope: !2986, file: !3, line: 201, type: !1894)
!2995 = !DILocalVariable(name: "dc", arg: 4, scope: !2986, file: !3, line: 201, type: !1900)
!2996 = !DILocalVariable(name: "bnd", scope: !2986, file: !3, line: 203, type: !2997)
!2997 = !DIDerivedType(tag: DW_TAG_typedef, name: "bnd_t", file: !409, line: 241, baseType: !2998)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!2999 = !DILocation(line: 0, scope: !2986)
!3000 = !DILocation(line: 205, column: 3, scope: !2986)
!3001 = !DILocation(line: 206, column: 9, scope: !2986)
!3002 = !DILocation(line: 208, column: 3, scope: !2986)
!3003 = !DILocation(line: 208, column: 16, scope: !2986)
!3004 = !DILocation(line: 209, column: 3, scope: !2986)
!3005 = !DILocation(line: 209, column: 17, scope: !2986)
!3006 = !DILocation(line: 210, column: 3, scope: !2986)
!3007 = !DILocation(line: 210, column: 16, scope: !2986)
!3008 = !DILocation(line: 211, column: 3, scope: !2986)
!3009 = !DILocation(line: 211, column: 17, scope: !2986)
!3010 = !DILocation(line: 212, column: 3, scope: !2986)
!3011 = !DILocation(line: 212, column: 16, scope: !2986)
!3012 = !DILocation(line: 213, column: 1, scope: !2986)
!3013 = distinct !DISubprogram(name: "_list_add", scope: !409, file: !409, line: 382, type: !3014, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3017)
!3014 = !DISubroutineType(types: !3015)
!3015 = !{null, !3016}
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!3017 = !{!3018, !3019}
!3018 = !DILocalVariable(name: "lp", arg: 1, scope: !3013, file: !409, line: 382, type: !3016)
!3019 = !DILocalVariable(name: "l", scope: !3013, file: !409, line: 384, type: !1879)
!3020 = !DILocation(line: 0, scope: !3013)
!3021 = !DILocation(line: 384, column: 15, scope: !3013)
!3022 = !DILocation(line: 386, column: 20, scope: !3013)
!3023 = !DILocation(line: 386, column: 18, scope: !3013)
!3024 = !DILocation(line: 387, column: 7, scope: !3013)
!3025 = !DILocation(line: 388, column: 1, scope: !3013)
!3026 = distinct !DISubprogram(name: "blist_remove", scope: !3, file: !3, line: 217, type: !3027, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3029)
!3027 = !DISubroutineType(types: !3028)
!3028 = !{null, !2989}
!3029 = !{!3030, !3031}
!3030 = !DILocalVariable(name: "lp", arg: 1, scope: !3026, file: !3, line: 217, type: !2989)
!3031 = !DILocalVariable(name: "b", scope: !3026, file: !3, line: 219, type: !2997)
!3032 = !DILocation(line: 0, scope: !3026)
!3033 = !DILocation(line: 219, column: 13, scope: !3026)
!3034 = !DILocation(line: 221, column: 18, scope: !3026)
!3035 = !DILocation(line: 221, column: 3, scope: !3026)
!3036 = !DILocation(line: 222, column: 18, scope: !3026)
!3037 = !DILocation(line: 222, column: 3, scope: !3026)
!3038 = !DILocation(line: 223, column: 3, scope: !3026)
!3039 = !DILocation(line: 225, column: 3, scope: !3026)
!3040 = !DILocation(line: 226, column: 1, scope: !3026)
!3041 = distinct !DISubprogram(name: "av_set_clear", scope: !3, file: !3, line: 2252, type: !3042, scopeLine: 2253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3045)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{null, !3044}
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!3045 = !{!3046, !3047, !3048}
!3046 = !DILocalVariable(name: "setp", arg: 1, scope: !3041, file: !3, line: 2252, type: !3044)
!3047 = !DILocalVariable(name: "expr", scope: !3041, file: !3, line: 2254, type: !2366)
!3048 = !DILocalVariable(name: "i", scope: !3041, file: !3, line: 2255, type: !3049)
!3049 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_set_iterator", file: !409, line: 533, baseType: !3050)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "_list_iterator", file: !409, line: 426, baseType: !3051)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !409, line: 416, size: 128, elements: !3052)
!3052 = !{!3053, !3054, !3055}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "lp", scope: !3051, file: !409, line: 419, baseType: !3016, size: 64)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "can_remove_p", scope: !3051, file: !409, line: 422, baseType: !637, size: 8, offset: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "removed_p", scope: !3051, file: !409, line: 425, baseType: !637, size: 8, offset: 72)
!3056 = !DILocation(line: 0, scope: !3041)
!3057 = !DILocation(line: 2254, column: 3, scope: !3041)
!3058 = !DILocation(line: 2255, column: 3, scope: !3041)
!3059 = !DILocation(line: 2257, column: 3, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 2257, column: 3)
!3061 = !DILocation(line: 0, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 2257, column: 3)
!3063 = !DILocation(line: 2257, column: 3, scope: !3062)
!3064 = !DILocation(line: 2258, column: 5, scope: !3062)
!3065 = distinct !{!3065, !3059, !3066}
!3066 = !DILocation(line: 2258, column: 27, scope: !3060)
!3067 = !DILocation(line: 2260, column: 3, scope: !3041)
!3068 = !DILocation(line: 2261, column: 1, scope: !3041)
!3069 = distinct !DISubprogram(name: "_list_clear", scope: !409, file: !409, line: 408, type: !3014, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3070)
!3070 = !{!3071}
!3071 = !DILocalVariable(name: "l", arg: 1, scope: !3069, file: !409, line: 408, type: !3016)
!3072 = !DILocation(line: 0, scope: !3069)
!3073 = !DILocation(line: 410, column: 3, scope: !3069)
!3074 = !DILocation(line: 410, column: 10, scope: !3069)
!3075 = !DILocation(line: 411, column: 5, scope: !3069)
!3076 = distinct !{!3076, !3073, !3077}
!3077 = !DILocation(line: 411, column: 20, scope: !3069)
!3078 = !DILocation(line: 412, column: 1, scope: !3069)
!3079 = distinct !DISubprogram(name: "_list_remove", scope: !409, file: !409, line: 399, type: !3014, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3080)
!3080 = !{!3081, !3082}
!3081 = !DILocalVariable(name: "lp", arg: 1, scope: !3079, file: !409, line: 399, type: !3016)
!3082 = !DILocalVariable(name: "n", scope: !3079, file: !409, line: 401, type: !1879)
!3083 = !DILocation(line: 0, scope: !3079)
!3084 = !DILocation(line: 401, column: 15, scope: !3079)
!3085 = !DILocation(line: 403, column: 9, scope: !3079)
!3086 = !DILocation(line: 403, column: 7, scope: !3079)
!3087 = !DILocation(line: 404, column: 14, scope: !3079)
!3088 = !DILocation(line: 404, column: 32, scope: !3079)
!3089 = !DILocation(line: 404, column: 3, scope: !3079)
!3090 = !DILocation(line: 405, column: 1, scope: !3079)
!3091 = distinct !DISubprogram(name: "flist_tail_init", scope: !3, file: !3, line: 230, type: !3092, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3102)
!3092 = !DISubroutineType(types: !3093)
!3093 = !{null, !3094}
!3094 = !DIDerivedType(tag: DW_TAG_typedef, name: "flist_tail_t", file: !409, line: 349, baseType: !3095)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 64)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flist_tail_def", file: !409, line: 343, size: 128, elements: !3097)
!3097 = !{!3098, !3100}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3096, file: !409, line: 345, baseType: !3099, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_typedef, name: "flist_t", file: !409, line: 338, baseType: !1879)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "tailp", scope: !3096, file: !409, line: 346, baseType: !3101, size: 64, offset: 64)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3102 = !{!3103}
!3103 = !DILocalVariable(name: "l", arg: 1, scope: !3091, file: !3, line: 230, type: !3094)
!3104 = !DILocation(line: 0, scope: !3091)
!3105 = !DILocation(line: 232, column: 3, scope: !3091)
!3106 = !DILocation(line: 232, column: 23, scope: !3091)
!3107 = !DILocation(line: 233, column: 3, scope: !3091)
!3108 = !DILocation(line: 233, column: 24, scope: !3091)
!3109 = !DILocation(line: 234, column: 1, scope: !3091)
!3110 = distinct !DISubprogram(name: "flist_lookup", scope: !3, file: !3, line: 238, type: !3111, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3115)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{!3113, !3099, !1892}
!3113 = !DIDerivedType(tag: DW_TAG_typedef, name: "fence_t", file: !409, line: 317, baseType: !3114)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!3115 = !{!3116, !3117}
!3116 = !DILocalVariable(name: "l", arg: 1, scope: !3110, file: !3, line: 238, type: !3099)
!3117 = !DILocalVariable(name: "insn", arg: 2, scope: !3110, file: !3, line: 238, type: !1892)
!3118 = !DILocation(line: 0, scope: !3110)
!3119 = !DILocation(line: 240, column: 3, scope: !3110)
!3120 = !DILocation(line: 242, column: 11, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 242, column: 11)
!3122 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 241, column: 5)
!3123 = !DILocation(line: 242, column: 40, scope: !3121)
!3124 = !DILocation(line: 242, column: 11, scope: !3122)
!3125 = !DILocation(line: 243, column: 9, scope: !3121)
!3126 = !DILocation(line: 243, column: 2, scope: !3121)
!3127 = !DILocation(line: 245, column: 11, scope: !3122)
!3128 = distinct !{!3128, !3119, !3129}
!3129 = !DILocation(line: 246, column: 5, scope: !3110)
!3130 = !DILocation(line: 249, column: 1, scope: !3110)
!3131 = distinct !DISubprogram(name: "flist_clear", scope: !3, file: !3, line: 310, type: !3132, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3134)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{null, !3101}
!3134 = !{!3135}
!3135 = !DILocalVariable(name: "lp", arg: 1, scope: !3131, file: !3, line: 310, type: !3101)
!3136 = !DILocation(line: 0, scope: !3131)
!3137 = !DILocation(line: 312, column: 3, scope: !3131)
!3138 = !DILocation(line: 312, column: 10, scope: !3131)
!3139 = !DILocation(line: 313, column: 5, scope: !3131)
!3140 = distinct !{!3140, !3137, !3141}
!3141 = !DILocation(line: 313, column: 21, scope: !3131)
!3142 = !DILocation(line: 314, column: 1, scope: !3131)
!3143 = distinct !DISubprogram(name: "flist_remove", scope: !3, file: !3, line: 301, type: !3132, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3144)
!3144 = !{!3145}
!3145 = !DILocalVariable(name: "lp", arg: 1, scope: !3143, file: !3, line: 301, type: !3101)
!3146 = !DILocation(line: 0, scope: !3143)
!3147 = !DILocation(line: 303, column: 7, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 303, column: 7)
!3149 = !DILocation(line: 303, column: 7, scope: !3143)
!3150 = !DILocation(line: 304, column: 18, scope: !3148)
!3151 = !DILocation(line: 304, column: 5, scope: !3148)
!3152 = !DILocation(line: 305, column: 3, scope: !3143)
!3153 = !DILocation(line: 306, column: 1, scope: !3143)
!3154 = distinct !DISubprogram(name: "def_list_add", scope: !3, file: !3, line: 318, type: !3155, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3159)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{null, !3157, !1892, !637}
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 64)
!3158 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_list_t", file: !409, line: 551, baseType: !1879)
!3159 = !{!3160, !3161, !3162, !3163}
!3160 = !DILocalVariable(name: "dl", arg: 1, scope: !3154, file: !3, line: 318, type: !3157)
!3161 = !DILocalVariable(name: "original_insn", arg: 2, scope: !3154, file: !3, line: 318, type: !1892)
!3162 = !DILocalVariable(name: "crosses_call", arg: 3, scope: !3154, file: !3, line: 318, type: !637)
!3163 = !DILocalVariable(name: "d", scope: !3154, file: !3, line: 320, type: !3164)
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_t", file: !409, line: 212, baseType: !3165)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!3166 = !DILocation(line: 0, scope: !3154)
!3167 = !DILocation(line: 322, column: 3, scope: !3154)
!3168 = !DILocation(line: 323, column: 7, scope: !3154)
!3169 = !DILocation(line: 325, column: 6, scope: !3154)
!3170 = !DILocation(line: 325, column: 16, scope: !3154)
!3171 = !DILocation(line: 326, column: 6, scope: !3154)
!3172 = !DILocation(line: 326, column: 19, scope: !3154)
!3173 = !DILocation(line: 327, column: 1, scope: !3154)
!3174 = distinct !DISubprogram(name: "create_target_context", scope: !3, file: !3, line: 360, type: !3175, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3177)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{!2005, !637}
!3177 = !{!3178, !3179}
!3178 = !DILocalVariable(name: "clean_p", arg: 1, scope: !3174, file: !3, line: 360, type: !637)
!3179 = !DILocalVariable(name: "tc", scope: !3174, file: !3, line: 362, type: !2005)
!3180 = !DILocation(line: 0, scope: !3174)
!3181 = !DILocation(line: 362, column: 13, scope: !3174)
!3182 = !DILocation(line: 364, column: 3, scope: !3174)
!3183 = !DILocation(line: 365, column: 3, scope: !3174)
!3184 = distinct !DISubprogram(name: "alloc_target_context", scope: !3, file: !3, line: 341, type: !3185, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!2005}
!3187 = !DILocation(line: 343, column: 25, scope: !3184)
!3188 = !DILocation(line: 343, column: 11, scope: !3184)
!3189 = !DILocation(line: 344, column: 6, scope: !3184)
!3190 = !DILocation(line: 343, column: 3, scope: !3184)
!3191 = distinct !DISubprogram(name: "init_target_context", scope: !3, file: !3, line: 351, type: !3192, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3194)
!3192 = !DISubroutineType(types: !3193)
!3193 = !{null, !2005, !637}
!3194 = !{!3195, !3196}
!3195 = !DILocalVariable(name: "tc", arg: 1, scope: !3191, file: !3, line: 351, type: !2005)
!3196 = !DILocalVariable(name: "clean_p", arg: 2, scope: !3191, file: !3, line: 351, type: !637)
!3197 = !DILocation(line: 0, scope: !3191)
!3198 = !DILocation(line: 353, column: 21, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3191, file: !3, line: 353, column: 7)
!3200 = !DILocation(line: 353, column: 7, scope: !3199)
!3201 = !DILocation(line: 353, column: 7, scope: !3191)
!3202 = !DILocation(line: 354, column: 5, scope: !3199)
!3203 = !DILocation(line: 355, column: 1, scope: !3191)
!3204 = distinct !DISubprogram(name: "set_target_context", scope: !3, file: !3, line: 370, type: !3205, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3207)
!3205 = !DISubroutineType(types: !3206)
!3206 = !{null, !2005}
!3207 = !{!3208}
!3208 = !DILocalVariable(name: "tc", arg: 1, scope: !3204, file: !3, line: 370, type: !2005)
!3209 = !DILocation(line: 0, scope: !3204)
!3210 = !DILocation(line: 372, column: 21, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 372, column: 7)
!3212 = !DILocation(line: 372, column: 7, scope: !3211)
!3213 = !DILocation(line: 372, column: 7, scope: !3204)
!3214 = !DILocation(line: 373, column: 5, scope: !3211)
!3215 = !DILocation(line: 374, column: 1, scope: !3204)
!3216 = distinct !DISubprogram(name: "reset_target_context", scope: !3, file: !3, line: 422, type: !3192, scopeLine: 423, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3217)
!3217 = !{!3218, !3219}
!3218 = !DILocalVariable(name: "tc", arg: 1, scope: !3216, file: !3, line: 422, type: !2005)
!3219 = !DILocalVariable(name: "clean_p", arg: 2, scope: !3216, file: !3, line: 422, type: !637)
!3220 = !DILocation(line: 0, scope: !3216)
!3221 = !DILocation(line: 424, column: 3, scope: !3216)
!3222 = !DILocation(line: 425, column: 3, scope: !3216)
!3223 = !DILocation(line: 426, column: 1, scope: !3216)
!3224 = distinct !DISubprogram(name: "clear_target_context", scope: !3, file: !3, line: 378, type: !3205, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3225)
!3225 = !{!3226}
!3226 = !DILocalVariable(name: "tc", arg: 1, scope: !3224, file: !3, line: 378, type: !2005)
!3227 = !DILocation(line: 0, scope: !3224)
!3228 = !DILocation(line: 380, column: 21, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 380, column: 7)
!3230 = !DILocation(line: 380, column: 7, scope: !3229)
!3231 = !DILocation(line: 380, column: 7, scope: !3224)
!3232 = !DILocation(line: 381, column: 5, scope: !3229)
!3233 = !DILocation(line: 382, column: 1, scope: !3224)
!3234 = distinct !DISubprogram(name: "advance_deps_context", scope: !3, file: !3, line: 514, type: !3235, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3237)
!3235 = !DISubroutineType(types: !3236)
!3236 = !{null, !1900, !1892}
!3237 = !{!3238, !3239}
!3238 = !DILocalVariable(name: "dc", arg: 1, scope: !3234, file: !3, line: 514, type: !1900)
!3239 = !DILocalVariable(name: "insn", arg: 2, scope: !3234, file: !3, line: 514, type: !1892)
!3240 = !DILocation(line: 0, scope: !3234)
!3241 = !DILocation(line: 516, column: 19, scope: !3234)
!3242 = !DILocation(line: 517, column: 3, scope: !3234)
!3243 = !DILocation(line: 518, column: 1, scope: !3234)
!3244 = distinct !DISubprogram(name: "init_fences", scope: !3, file: !3, line: 596, type: !3245, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3247)
!3245 = !DISubroutineType(types: !3246)
!3246 = !{null, !1892}
!3247 = !{!3248, !3249, !3250, !3269, !3270}
!3248 = !DILocalVariable(name: "old_fence", arg: 1, scope: !3244, file: !3, line: 596, type: !1892)
!3249 = !DILocalVariable(name: "succ", scope: !3244, file: !3, line: 598, type: !1892)
!3250 = !DILocalVariable(name: "si", scope: !3244, file: !3, line: 599, type: !3251)
!3251 = !DIDerivedType(tag: DW_TAG_typedef, name: "succ_iterator", file: !409, line: 995, baseType: !3252)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !409, line: 967, size: 512, elements: !3253)
!3253 = !{!3254, !3255, !3256, !3257, !3264, !3265, !3266, !3267, !3268}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "bb_end", scope: !3252, file: !409, line: 970, baseType: !637, size: 8)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "e1", scope: !3252, file: !409, line: 973, baseType: !1196, size: 64, offset: 64)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "e2", scope: !3252, file: !409, line: 976, baseType: !1196, size: 64, offset: 128)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "ei", scope: !3252, file: !409, line: 979, baseType: !3258, size: 128, offset: 192)
!3258 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !155, line: 682, baseType: !3259)
!3259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !155, line: 679, size: 128, elements: !3260)
!3260 = !{!3261, !3262}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3259, file: !155, line: 680, baseType: !7, size: 32)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !3259, file: !155, line: 681, baseType: !3263, size: 64, offset: 64)
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3252, file: !409, line: 982, baseType: !1179, size: 64, offset: 320)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3252, file: !409, line: 986, baseType: !1849, size: 16, offset: 384)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "current_flags", scope: !3252, file: !409, line: 990, baseType: !1849, size: 16, offset: 400)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "current_exit", scope: !3252, file: !409, line: 993, baseType: !638, size: 32, offset: 416)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "loop_exits", scope: !3252, file: !409, line: 994, baseType: !2022, size: 64, offset: 448)
!3269 = !DILocalVariable(name: "first", scope: !3244, file: !3, line: 600, type: !637)
!3270 = !DILocalVariable(name: "ready_ticks_size", scope: !3244, file: !3, line: 601, type: !638)
!3271 = !DILocation(line: 0, scope: !3244)
!3272 = !DILocation(line: 598, column: 3, scope: !3244)
!3273 = !DILocation(line: 599, column: 3, scope: !3244)
!3274 = !DILocation(line: 601, column: 26, scope: !3244)
!3275 = !DILocation(line: 601, column: 41, scope: !3244)
!3276 = !DILocation(line: 603, column: 3, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 603, column: 3)
!3278 = !DILocation(line: 0, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 605, column: 5)
!3280 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 603, column: 3)
!3281 = !DILocation(line: 603, column: 3, scope: !3280)
!3282 = !DILocation(line: 607, column: 11, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3279, file: !3, line: 607, column: 11)
!3284 = !DILocation(line: 607, column: 11, scope: !3279)
!3285 = !DILocation(line: 610, column: 9, scope: !3283)
!3286 = !DILocation(line: 612, column: 27, scope: !3279)
!3287 = !DILocation(line: 613, column: 4, scope: !3279)
!3288 = !DILocation(line: 614, column: 4, scope: !3279)
!3289 = !DILocation(line: 615, column: 4, scope: !3279)
!3290 = !DILocation(line: 618, column: 18, scope: !3279)
!3291 = !DILocation(line: 622, column: 4, scope: !3279)
!3292 = !DILocation(line: 612, column: 7, scope: !3279)
!3293 = distinct !{!3293, !3276, !3294}
!3294 = !DILocation(line: 624, column: 5, scope: !3277)
!3295 = !DILocation(line: 625, column: 1, scope: !3244)
!3296 = distinct !DISubprogram(name: "_succ_iter_start", scope: !409, file: !409, line: 1200, type: !3297, scopeLine: 1201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3299)
!3297 = !DISubroutineType(types: !3298)
!3298 = !{!3251, !2114, !1892, !638}
!3299 = !{!3300, !3301, !3302, !3303, !3304}
!3300 = !DILocalVariable(name: "succp", arg: 1, scope: !3296, file: !409, line: 1200, type: !2114)
!3301 = !DILocalVariable(name: "insn", arg: 2, scope: !3296, file: !409, line: 1200, type: !1892)
!3302 = !DILocalVariable(name: "flags", arg: 3, scope: !3296, file: !409, line: 1200, type: !638)
!3303 = !DILocalVariable(name: "i", scope: !3296, file: !409, line: 1202, type: !3251)
!3304 = !DILocalVariable(name: "bb", scope: !3296, file: !409, line: 1204, type: !1179)
!3305 = !DILocation(line: 0, scope: !3296)
!3306 = !DILocation(line: 1202, column: 17, scope: !3296)
!3307 = !DILocation(line: 1204, column: 20, scope: !3296)
!3308 = !DILocation(line: 1206, column: 3, scope: !3296)
!3309 = !DILocation(line: 1208, column: 13, scope: !3296)
!3310 = !DILocation(line: 1208, column: 5, scope: !3296)
!3311 = !DILocation(line: 1208, column: 11, scope: !3296)
!3312 = !DILocation(line: 1211, column: 10, scope: !3296)
!3313 = !DILocation(line: 1212, column: 5, scope: !3296)
!3314 = !DILocation(line: 1212, column: 8, scope: !3296)
!3315 = !DILocation(line: 1213, column: 5, scope: !3296)
!3316 = !DILocation(line: 1213, column: 8, scope: !3296)
!3317 = !DILocation(line: 1214, column: 5, scope: !3296)
!3318 = !DILocation(line: 1214, column: 8, scope: !3296)
!3319 = !DILocation(line: 1215, column: 5, scope: !3296)
!3320 = !DILocation(line: 1215, column: 19, scope: !3296)
!3321 = !DILocation(line: 1216, column: 5, scope: !3296)
!3322 = !DILocation(line: 1216, column: 18, scope: !3296)
!3323 = !DILocation(line: 1217, column: 5, scope: !3296)
!3324 = !DILocation(line: 1217, column: 16, scope: !3296)
!3325 = !DILocation(line: 1219, column: 13, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3296, file: !409, line: 1219, column: 7)
!3327 = !DILocation(line: 1219, column: 10, scope: !3326)
!3328 = !DILocation(line: 1219, column: 28, scope: !3326)
!3329 = !DILocation(line: 1219, column: 31, scope: !3326)
!3330 = !DILocation(line: 1219, column: 43, scope: !3326)
!3331 = !DILocation(line: 1219, column: 7, scope: !3296)
!3332 = !DILocation(line: 1221, column: 9, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3326, file: !409, line: 1220, column: 5)
!3334 = !DILocation(line: 1221, column: 16, scope: !3333)
!3335 = !DILocation(line: 1224, column: 12, scope: !3333)
!3336 = !DILocation(line: 1224, column: 18, scope: !3333)
!3337 = !DILocation(line: 1225, column: 12, scope: !3333)
!3338 = !DILocation(line: 1225, column: 22, scope: !3333)
!3339 = !DILocation(line: 1226, column: 5, scope: !3333)
!3340 = !DILocation(line: 1229, column: 9, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3326, file: !409, line: 1228, column: 5)
!3342 = !DILocation(line: 1229, column: 14, scope: !3341)
!3343 = !DILocation(line: 1230, column: 9, scope: !3341)
!3344 = !DILocation(line: 1230, column: 16, scope: !3341)
!3345 = !DILocation(line: 1234, column: 1, scope: !3296)
!3346 = distinct !DISubprogram(name: "_succ_iter_cond", scope: !409, file: !409, line: 1237, type: !3347, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3353)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{!637, !3349, !1843, !645, !3350}
!3349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{!637, !1196, !3349}
!3353 = !{!3354, !3355, !3356, !3357, !3358, !3362, !3364}
!3354 = !DILocalVariable(name: "ip", arg: 1, scope: !3346, file: !409, line: 1237, type: !3349)
!3355 = !DILocalVariable(name: "succp", arg: 2, scope: !3346, file: !409, line: 1237, type: !1843)
!3356 = !DILocalVariable(name: "insn", arg: 3, scope: !3346, file: !409, line: 1237, type: !645)
!3357 = !DILocalVariable(name: "check", arg: 4, scope: !3346, file: !409, line: 1238, type: !3350)
!3358 = !DILocalVariable(name: "e_tmp", scope: !3359, file: !409, line: 1255, type: !1196)
!3359 = distinct !DILexicalBlock(scope: !3360, file: !409, line: 1254, column: 9)
!3360 = distinct !DILexicalBlock(scope: !3361, file: !409, line: 1252, column: 5)
!3361 = distinct !DILexicalBlock(scope: !3346, file: !409, line: 1240, column: 7)
!3362 = !DILocalVariable(name: "bb", scope: !3363, file: !409, line: 1282, type: !1179)
!3363 = distinct !DILexicalBlock(scope: !3359, file: !409, line: 1281, column: 13)
!3364 = !DILocalVariable(name: "bb", scope: !3365, file: !409, line: 1322, type: !1179)
!3365 = distinct !DILexicalBlock(scope: !3366, file: !409, line: 1321, column: 2)
!3366 = distinct !DILexicalBlock(scope: !3360, file: !409, line: 1320, column: 11)
!3367 = !DILocation(line: 0, scope: !3346)
!3368 = !DILocation(line: 1240, column: 12, scope: !3361)
!3369 = !DILocation(line: 1240, column: 8, scope: !3361)
!3370 = !DILocation(line: 1240, column: 7, scope: !3346)
!3371 = !DILocation(line: 0, scope: !3359)
!3372 = !DILocation(line: 0, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3359, file: !409, line: 1258, column: 15)
!3374 = !DILocation(line: 0, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3376, file: !409, line: 1261, column: 17)
!3376 = distinct !DILexicalBlock(scope: !3373, file: !409, line: 1259, column: 13)
!3377 = !DILocation(line: 0, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3379, file: !409, line: 1274, column: 13)
!3379 = distinct !DILexicalBlock(scope: !3359, file: !409, line: 1273, column: 15)
!3380 = !DILocation(line: 0, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3363, file: !409, line: 1285, column: 19)
!3382 = !DILocation(line: 0, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3384, file: !409, line: 1295, column: 7)
!3384 = distinct !DILexicalBlock(scope: !3385, file: !409, line: 1294, column: 9)
!3385 = distinct !DILexicalBlock(scope: !3381, file: !409, line: 1290, column: 17)
!3386 = !DILocation(line: 1258, column: 15, scope: !3359)
!3387 = !DILocation(line: 1244, column: 11, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !409, line: 1244, column: 11)
!3389 = distinct !DILexicalBlock(scope: !3361, file: !409, line: 1241, column: 5)
!3390 = !DILocation(line: 1244, column: 18, scope: !3388)
!3391 = !DILocation(line: 1244, column: 26, scope: !3388)
!3392 = !DILocation(line: 1244, column: 34, scope: !3388)
!3393 = !DILocation(line: 1244, column: 40, scope: !3388)
!3394 = !DILocation(line: 1244, column: 56, scope: !3388)
!3395 = !DILocation(line: 1244, column: 11, scope: !3389)
!3396 = !DILocation(line: 1247, column: 16, scope: !3389)
!3397 = !DILocation(line: 1247, column: 14, scope: !3389)
!3398 = !DILocation(line: 1248, column: 11, scope: !3389)
!3399 = !DILocation(line: 1248, column: 25, scope: !3389)
!3400 = !DILocation(line: 1249, column: 7, scope: !3389)
!3401 = !DILocation(line: 1255, column: 11, scope: !3359)
!3402 = !DILocation(line: 1255, column: 16, scope: !3359)
!3403 = !DILocation(line: 1258, column: 19, scope: !3373)
!3404 = !DILocation(line: 1258, column: 15, scope: !3373)
!3405 = !DILocation(line: 1260, column: 15, scope: !3376)
!3406 = !DILocation(line: 1262, column: 19, scope: !3375)
!3407 = !DILocation(line: 1264, column: 35, scope: !3375)
!3408 = !DILocation(line: 1266, column: 15, scope: !3376)
!3409 = !DILocation(line: 1266, column: 21, scope: !3376)
!3410 = !DILocation(line: 1266, column: 25, scope: !3376)
!3411 = !DILocation(line: 1266, column: 24, scope: !3376)
!3412 = !DILocation(line: 1265, column: 17, scope: !3375)
!3413 = distinct !{!3413, !3405, !3414}
!3414 = !DILocation(line: 1266, column: 42, scope: !3376)
!3415 = !DILocation(line: 1268, column: 20, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3376, file: !409, line: 1268, column: 19)
!3417 = !DILocation(line: 0, scope: !3376)
!3418 = !DILocation(line: 1268, column: 19, scope: !3376)
!3419 = !DILocation(line: 1269, column: 17, scope: !3416)
!3420 = !DILocation(line: 1273, column: 15, scope: !3379)
!3421 = !DILocation(line: 1273, column: 15, scope: !3359)
!3422 = !DILocation(line: 1280, column: 11, scope: !3359)
!3423 = !DILocation(line: 1275, column: 22, scope: !3378)
!3424 = !DILocation(line: 1276, column: 15, scope: !3378)
!3425 = !DILocation(line: 1280, column: 18, scope: !3359)
!3426 = !DILocation(line: 1282, column: 36, scope: !3363)
!3427 = !DILocation(line: 1282, column: 40, scope: !3363)
!3428 = !DILocation(line: 0, scope: !3363)
!3429 = !DILocation(line: 1285, column: 24, scope: !3381)
!3430 = !DILocation(line: 1285, column: 30, scope: !3381)
!3431 = !DILocation(line: 1286, column: 22, scope: !3381)
!3432 = !DILocation(line: 1286, column: 19, scope: !3381)
!3433 = !DILocation(line: 1287, column: 10, scope: !3381)
!3434 = !DILocation(line: 1288, column: 9, scope: !3381)
!3435 = !DILocation(line: 1288, column: 12, scope: !3381)
!3436 = !DILocation(line: 1289, column: 7, scope: !3381)
!3437 = !DILocation(line: 1289, column: 5, scope: !3381)
!3438 = !DILocation(line: 1285, column: 19, scope: !3363)
!3439 = !DILocation(line: 1292, column: 22, scope: !3385)
!3440 = !DILocation(line: 1292, column: 20, scope: !3385)
!3441 = !DILocation(line: 1294, column: 9, scope: !3384)
!3442 = !DILocation(line: 1294, column: 9, scope: !3385)
!3443 = !DILocation(line: 1296, column: 28, scope: !3383)
!3444 = !DILocation(line: 1299, column: 9, scope: !3383)
!3445 = !DILocation(line: 1300, column: 9, scope: !3383)
!3446 = !DILocation(line: 1305, column: 30, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3363, file: !409, line: 1305, column: 19)
!3448 = !DILocation(line: 1305, column: 19, scope: !3447)
!3449 = !DILocation(line: 1305, column: 19, scope: !3363)
!3450 = !DILocation(line: 1308, column: 15, scope: !3363)
!3451 = !DILocation(line: 1309, column: 13, scope: !3359)
!3452 = distinct !{!3452, !3422, !3451}
!3453 = !DILocation(line: 1313, column: 19, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3359, file: !409, line: 1313, column: 15)
!3455 = !DILocation(line: 1313, column: 15, scope: !3454)
!3456 = distinct !{!3456, !3457, !3458}
!3457 = !DILocation(line: 1253, column: 7, scope: !3360)
!3458 = !DILocation(line: 1318, column: 9, scope: !3360)
!3459 = !DILocation(line: 1320, column: 15, scope: !3366)
!3460 = !DILocation(line: 1320, column: 11, scope: !3366)
!3461 = !DILocation(line: 1320, column: 11, scope: !3360)
!3462 = !DILocation(line: 1322, column: 25, scope: !3365)
!3463 = !DILocation(line: 1322, column: 29, scope: !3365)
!3464 = !DILocation(line: 0, scope: !3365)
!3465 = !DILocation(line: 1324, column: 14, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3365, file: !409, line: 1324, column: 8)
!3467 = !DILocation(line: 1324, column: 11, scope: !3466)
!3468 = !DILocation(line: 1324, column: 38, scope: !3466)
!3469 = !DILocation(line: 1324, column: 35, scope: !3466)
!3470 = !DILocation(line: 1324, column: 29, scope: !3466)
!3471 = !DILocation(line: 1325, column: 15, scope: !3466)
!3472 = !DILocation(line: 1325, column: 13, scope: !3466)
!3473 = !DILocation(line: 1325, column: 6, scope: !3466)
!3474 = !DILocation(line: 1328, column: 24, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3466, file: !409, line: 1327, column: 6)
!3476 = !DILocation(line: 1328, column: 22, scope: !3475)
!3477 = !DILocation(line: 1330, column: 15, scope: !3475)
!3478 = !DILocation(line: 1332, column: 8, scope: !3475)
!3479 = !DILocation(line: 0, scope: !3361)
!3480 = !DILocation(line: 1340, column: 1, scope: !3346)
!3481 = distinct !DISubprogram(name: "_eligible_successor_edge_p", scope: !409, file: !409, line: 1356, type: !3351, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3482)
!3482 = !{!3483, !3484, !3485, !3486, !3487, !3488, !3489, !3493, !3494}
!3483 = !DILocalVariable(name: "e1", arg: 1, scope: !3481, file: !409, line: 1356, type: !1196)
!3484 = !DILocalVariable(name: "ip", arg: 2, scope: !3481, file: !409, line: 1356, type: !3349)
!3485 = !DILocalVariable(name: "e2", scope: !3481, file: !409, line: 1358, type: !1196)
!3486 = !DILocalVariable(name: "bb", scope: !3481, file: !409, line: 1359, type: !1179)
!3487 = !DILocalVariable(name: "flags", scope: !3481, file: !409, line: 1360, type: !638)
!3488 = !DILocalVariable(name: "src_outside_rgn", scope: !3481, file: !409, line: 1361, type: !637)
!3489 = !DILocalVariable(name: "ne", scope: !3490, file: !409, line: 1382, type: !1196)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !409, line: 1381, column: 2)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !409, line: 1380, column: 11)
!3492 = distinct !DILexicalBlock(scope: !3481, file: !409, line: 1379, column: 5)
!3493 = !DILocalVariable(name: "nbb", scope: !3490, file: !409, line: 1383, type: !1179)
!3494 = !DILocalVariable(name: "succeeds_in_top_order", scope: !3495, file: !409, line: 1420, type: !637)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !409, line: 1415, column: 5)
!3496 = distinct !DILexicalBlock(scope: !3481, file: !409, line: 1414, column: 7)
!3497 = !DILocation(line: 0, scope: !3481)
!3498 = !DILocation(line: 1360, column: 19, scope: !3481)
!3499 = !DILocation(line: 1360, column: 15, scope: !3481)
!3500 = !DILocation(line: 1361, column: 52, scope: !3481)
!3501 = !DILocation(line: 1361, column: 27, scope: !3481)
!3502 = !DILocation(line: 1361, column: 26, scope: !3481)
!3503 = !DILocation(line: 1363, column: 3, scope: !3481)
!3504 = !DILocation(line: 1365, column: 7, scope: !3481)
!3505 = !DILocation(line: 0, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3492, file: !409, line: 1400, column: 11)
!3507 = !DILocation(line: 1369, column: 7, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !409, line: 1366, column: 5)
!3509 = distinct !DILexicalBlock(scope: !3481, file: !409, line: 1365, column: 7)
!3510 = !DILocation(line: 1371, column: 17, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3508, file: !409, line: 1371, column: 11)
!3512 = !DILocation(line: 1371, column: 11, scope: !3508)
!3513 = !DILocation(line: 1375, column: 12, scope: !3481)
!3514 = !DILocation(line: 1378, column: 3, scope: !3481)
!3515 = !DILocation(line: 1380, column: 12, scope: !3491)
!3516 = !DILocation(line: 1380, column: 11, scope: !3492)
!3517 = !DILocation(line: 1400, column: 12, scope: !3506)
!3518 = !DILocation(line: 1404, column: 11, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3492, file: !409, line: 1404, column: 11)
!3520 = !DILocation(line: 1404, column: 34, scope: !3519)
!3521 = !DILocation(line: 1404, column: 11, scope: !3492)
!3522 = !DILocation(line: 1407, column: 12, scope: !3492)
!3523 = !DILocation(line: 1408, column: 16, scope: !3492)
!3524 = !DILocation(line: 1385, column: 9, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3490, file: !409, line: 1385, column: 8)
!3526 = !DILocation(line: 1385, column: 8, scope: !3490)
!3527 = !DILocation(line: 1388, column: 9, scope: !3490)
!3528 = !DILocation(line: 0, scope: !3490)
!3529 = !DILocation(line: 1389, column: 14, scope: !3490)
!3530 = !DILocation(line: 1391, column: 9, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3490, file: !409, line: 1391, column: 8)
!3532 = !DILocation(line: 1392, column: 8, scope: !3531)
!3533 = distinct !{!3533, !3514, !3534}
!3534 = !DILocation(line: 1409, column: 5, scope: !3481)
!3535 = !DILocation(line: 1450, column: 1, scope: !3481)
!3536 = !DILocation(line: 1412, column: 7, scope: !3481)
!3537 = !DILocation(line: 1401, column: 11, scope: !3506)
!3538 = !DILocation(line: 1412, column: 10, scope: !3481)
!3539 = !DILocation(line: 1414, column: 7, scope: !3496)
!3540 = !DILocation(line: 1414, column: 7, scope: !3481)
!3541 = !DILocation(line: 1420, column: 37, scope: !3495)
!3542 = !DILocation(line: 1421, column: 11, scope: !3495)
!3543 = !DILocation(line: 1421, column: 9, scope: !3495)
!3544 = !DILocation(line: 0, scope: !3495)
!3545 = !DILocation(line: 1424, column: 11, scope: !3495)
!3546 = !DILocation(line: 1424, column: 25, scope: !3495)
!3547 = !DILocation(line: 1427, column: 11, scope: !3495)
!3548 = !DILocation(line: 1430, column: 11, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3550, file: !409, line: 1428, column: 9)
!3550 = distinct !DILexicalBlock(scope: !3495, file: !409, line: 1427, column: 11)
!3551 = !DILocation(line: 1432, column: 18, scope: !3549)
!3552 = !DILocation(line: 1432, column: 11, scope: !3549)
!3553 = !DILocation(line: 1439, column: 11, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3495, file: !409, line: 1439, column: 11)
!3555 = !DILocation(line: 1440, column: 12, scope: !3554)
!3556 = !DILocation(line: 1440, column: 19, scope: !3554)
!3557 = !DILocation(line: 1440, column: 24, scope: !3554)
!3558 = !DILocation(line: 1440, column: 43, scope: !3554)
!3559 = !DILocation(line: 1440, column: 36, scope: !3554)
!3560 = !DILocation(line: 1439, column: 11, scope: !3495)
!3561 = !DILocation(line: 1441, column: 16, scope: !3554)
!3562 = !DILocation(line: 1441, column: 9, scope: !3554)
!3563 = !DILocation(line: 1444, column: 25, scope: !3495)
!3564 = !DILocation(line: 1445, column: 14, scope: !3495)
!3565 = !DILocation(line: 1445, column: 7, scope: !3495)
!3566 = !DILocation(line: 1448, column: 7, scope: !3481)
!3567 = !DILocation(line: 1448, column: 21, scope: !3481)
!3568 = !DILocation(line: 1449, column: 10, scope: !3481)
!3569 = !DILocation(line: 1449, column: 3, scope: !3481)
!3570 = distinct !DISubprogram(name: "flist_add", scope: !3, file: !3, line: 262, type: !3571, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3573)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{null, !3101, !1892, !1998, !1900, !642, !1892, !1824, !1839, !638, !1892, !638, !638, !638, !637, !637}
!3573 = !{!3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589}
!3574 = !DILocalVariable(name: "lp", arg: 1, scope: !3570, file: !3, line: 262, type: !3101)
!3575 = !DILocalVariable(name: "insn", arg: 2, scope: !3570, file: !3, line: 262, type: !1892)
!3576 = !DILocalVariable(name: "state", arg: 3, scope: !3570, file: !3, line: 262, type: !1998)
!3577 = !DILocalVariable(name: "dc", arg: 4, scope: !3570, file: !3, line: 262, type: !1900)
!3578 = !DILocalVariable(name: "tc", arg: 5, scope: !3570, file: !3, line: 262, type: !642)
!3579 = !DILocalVariable(name: "last_scheduled_insn", arg: 6, scope: !3570, file: !3, line: 263, type: !1892)
!3580 = !DILocalVariable(name: "executing_insns", arg: 7, scope: !3570, file: !3, line: 263, type: !1824)
!3581 = !DILocalVariable(name: "ready_ticks", arg: 8, scope: !3570, file: !3, line: 264, type: !1839)
!3582 = !DILocalVariable(name: "ready_ticks_size", arg: 9, scope: !3570, file: !3, line: 264, type: !638)
!3583 = !DILocalVariable(name: "sched_next", arg: 10, scope: !3570, file: !3, line: 264, type: !1892)
!3584 = !DILocalVariable(name: "cycle", arg: 11, scope: !3570, file: !3, line: 265, type: !638)
!3585 = !DILocalVariable(name: "cycle_issued_insns", arg: 12, scope: !3570, file: !3, line: 265, type: !638)
!3586 = !DILocalVariable(name: "issue_more", arg: 13, scope: !3570, file: !3, line: 265, type: !638)
!3587 = !DILocalVariable(name: "starts_cycle_p", arg: 14, scope: !3570, file: !3, line: 266, type: !637)
!3588 = !DILocalVariable(name: "after_stall_p", arg: 15, scope: !3570, file: !3, line: 266, type: !637)
!3589 = !DILocalVariable(name: "f", scope: !3570, file: !3, line: 268, type: !3113)
!3590 = !DILocation(line: 0, scope: !3570)
!3591 = !DILocation(line: 270, column: 3, scope: !3570)
!3592 = !DILocation(line: 271, column: 7, scope: !3570)
!3593 = !DILocation(line: 273, column: 3, scope: !3570)
!3594 = !DILocation(line: 273, column: 18, scope: !3570)
!3595 = !DILocation(line: 275, column: 3, scope: !3570)
!3596 = !DILocation(line: 276, column: 3, scope: !3570)
!3597 = !DILocation(line: 276, column: 19, scope: !3570)
!3598 = !DILocation(line: 278, column: 3, scope: !3570)
!3599 = !DILocation(line: 278, column: 19, scope: !3570)
!3600 = !DILocation(line: 279, column: 3, scope: !3570)
!3601 = !DILocation(line: 279, column: 26, scope: !3570)
!3602 = !DILocation(line: 280, column: 3, scope: !3570)
!3603 = !DILocation(line: 280, column: 28, scope: !3570)
!3604 = !DILocation(line: 281, column: 27, scope: !3570)
!3605 = !DILocation(line: 283, column: 3, scope: !3570)
!3606 = !DILocation(line: 284, column: 3, scope: !3570)
!3607 = !DILocation(line: 284, column: 16, scope: !3570)
!3608 = !DILocation(line: 286, column: 3, scope: !3570)
!3609 = !DILocation(line: 287, column: 3, scope: !3570)
!3610 = !DILocation(line: 287, column: 16, scope: !3570)
!3611 = !DILocation(line: 289, column: 3, scope: !3570)
!3612 = !DILocation(line: 289, column: 33, scope: !3570)
!3613 = !DILocation(line: 290, column: 3, scope: !3570)
!3614 = !DILocation(line: 290, column: 24, scope: !3570)
!3615 = !DILocation(line: 291, column: 3, scope: !3570)
!3616 = !DILocation(line: 291, column: 29, scope: !3570)
!3617 = !DILocation(line: 292, column: 3, scope: !3570)
!3618 = !DILocation(line: 292, column: 25, scope: !3570)
!3619 = !DILocation(line: 293, column: 3, scope: !3570)
!3620 = !DILocation(line: 293, column: 30, scope: !3570)
!3621 = !DILocation(line: 294, column: 3, scope: !3570)
!3622 = !DILocation(line: 294, column: 24, scope: !3570)
!3623 = !DILocation(line: 296, column: 3, scope: !3570)
!3624 = !DILocation(line: 297, column: 1, scope: !3570)
!3625 = distinct !DISubprogram(name: "state_create", scope: !3, file: !3, line: 532, type: !3626, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3628)
!3626 = !DISubroutineType(types: !3627)
!3627 = !{!1998}
!3628 = !{!3629}
!3629 = !DILocalVariable(name: "state", scope: !3625, file: !3, line: 534, type: !1998)
!3630 = !DILocation(line: 534, column: 19, scope: !3625)
!3631 = !DILocation(line: 0, scope: !3625)
!3632 = !DILocation(line: 536, column: 3, scope: !3625)
!3633 = !DILocation(line: 537, column: 3, scope: !3625)
!3634 = !DILocation(line: 538, column: 3, scope: !3625)
!3635 = distinct !DISubprogram(name: "create_deps_context", scope: !3, file: !3, line: 450, type: !3636, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3638)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{!1900}
!3638 = !{!3639}
!3639 = !DILocalVariable(name: "dc", scope: !3635, file: !3, line: 452, type: !1900)
!3640 = !DILocation(line: 452, column: 15, scope: !3635)
!3641 = !DILocation(line: 0, scope: !3635)
!3642 = !DILocation(line: 454, column: 3, scope: !3635)
!3643 = !DILocation(line: 455, column: 3, scope: !3635)
!3644 = distinct !DISubprogram(name: "_succ_iter_next", scope: !409, file: !409, line: 1343, type: !3645, scopeLine: 1344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3647)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{null, !3349}
!3647 = !{!3648}
!3648 = !DILocalVariable(name: "ip", arg: 1, scope: !3644, file: !409, line: 1343, type: !3349)
!3649 = !DILocation(line: 0, scope: !3644)
!3650 = !DILocation(line: 1345, column: 3, scope: !3644)
!3651 = !DILocation(line: 1347, column: 11, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3644, file: !409, line: 1347, column: 7)
!3653 = !DILocation(line: 1347, column: 7, scope: !3652)
!3654 = !DILocation(line: 1347, column: 18, scope: !3652)
!3655 = !DILocation(line: 1347, column: 25, scope: !3652)
!3656 = !DILocation(line: 1347, column: 21, scope: !3652)
!3657 = !DILocation(line: 1347, column: 28, scope: !3652)
!3658 = !DILocation(line: 1347, column: 36, scope: !3652)
!3659 = !DILocation(line: 1347, column: 32, scope: !3652)
!3660 = !DILocation(line: 1347, column: 7, scope: !3644)
!3661 = !DILocation(line: 1348, column: 20, scope: !3652)
!3662 = !DILocation(line: 1348, column: 5, scope: !3652)
!3663 = !DILocation(line: 1349, column: 1, scope: !3644)
!3664 = distinct !DISubprogram(name: "move_fence_to_fences", scope: !3, file: !3, line: 832, type: !3665, scopeLine: 833, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3667)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{null, !3099, !3094}
!3667 = !{!3668, !3669, !3670, !3671, !3672}
!3668 = !DILocalVariable(name: "old_fences", arg: 1, scope: !3664, file: !3, line: 832, type: !3099)
!3669 = !DILocalVariable(name: "new_fences", arg: 2, scope: !3664, file: !3, line: 832, type: !3094)
!3670 = !DILocalVariable(name: "f", scope: !3664, file: !3, line: 834, type: !3113)
!3671 = !DILocalVariable(name: "old", scope: !3664, file: !3, line: 834, type: !3113)
!3672 = !DILocalVariable(name: "tailp", scope: !3664, file: !3, line: 835, type: !3101)
!3673 = !DILocation(line: 0, scope: !3664)
!3674 = !DILocation(line: 835, column: 20, scope: !3664)
!3675 = !DILocation(line: 837, column: 9, scope: !3664)
!3676 = !DILocation(line: 838, column: 21, scope: !3664)
!3677 = !DILocation(line: 839, column: 21, scope: !3664)
!3678 = !DILocation(line: 838, column: 7, scope: !3664)
!3679 = !DILocation(line: 840, column: 7, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3664, file: !3, line: 840, column: 7)
!3681 = !DILocation(line: 840, column: 7, scope: !3664)
!3682 = !DILocation(line: 842, column: 29, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3680, file: !3, line: 841, column: 5)
!3684 = !DILocation(line: 842, column: 40, scope: !3683)
!3685 = !DILocation(line: 842, column: 52, scope: !3683)
!3686 = !DILocation(line: 842, column: 61, scope: !3683)
!3687 = !DILocation(line: 843, column: 26, scope: !3683)
!3688 = !DILocation(line: 843, column: 52, scope: !3683)
!3689 = !DILocation(line: 844, column: 26, scope: !3683)
!3690 = !DILocation(line: 844, column: 44, scope: !3683)
!3691 = !DILocation(line: 845, column: 26, scope: !3683)
!3692 = !DILocation(line: 845, column: 43, scope: !3683)
!3693 = !DILocation(line: 845, column: 55, scope: !3683)
!3694 = !DILocation(line: 846, column: 26, scope: !3683)
!3695 = !DILocation(line: 842, column: 7, scope: !3683)
!3696 = !DILocation(line: 847, column: 5, scope: !3683)
!3697 = !DILocation(line: 850, column: 7, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3680, file: !3, line: 849, column: 5)
!3699 = !DILocation(line: 851, column: 40, scope: !3698)
!3700 = !DILocation(line: 851, column: 37, scope: !3698)
!3701 = !DILocation(line: 852, column: 8, scope: !3698)
!3702 = !DILocation(line: 852, column: 31, scope: !3698)
!3703 = !DILocation(line: 853, column: 34, scope: !3698)
!3704 = !DILocation(line: 853, column: 7, scope: !3698)
!3705 = !DILocation(line: 855, column: 3, scope: !3664)
!3706 = !DILocation(line: 855, column: 20, scope: !3664)
!3707 = !DILocation(line: 856, column: 1, scope: !3664)
!3708 = distinct !DISubprogram(name: "merge_fences", scope: !3, file: !3, line: 637, type: !3709, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3711)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{null, !3113, !1892, !1998, !1900, !642, !645, !1824, !1839, !638, !645, !638, !638, !637}
!3711 = !{!3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3729, !3730, !3731, !3732}
!3712 = !DILocalVariable(name: "f", arg: 1, scope: !3708, file: !3, line: 637, type: !3113)
!3713 = !DILocalVariable(name: "insn", arg: 2, scope: !3708, file: !3, line: 637, type: !1892)
!3714 = !DILocalVariable(name: "state", arg: 3, scope: !3708, file: !3, line: 638, type: !1998)
!3715 = !DILocalVariable(name: "dc", arg: 4, scope: !3708, file: !3, line: 638, type: !1900)
!3716 = !DILocalVariable(name: "tc", arg: 5, scope: !3708, file: !3, line: 638, type: !642)
!3717 = !DILocalVariable(name: "last_scheduled_insn", arg: 6, scope: !3708, file: !3, line: 639, type: !645)
!3718 = !DILocalVariable(name: "executing_insns", arg: 7, scope: !3708, file: !3, line: 639, type: !1824)
!3719 = !DILocalVariable(name: "ready_ticks", arg: 8, scope: !3708, file: !3, line: 640, type: !1839)
!3720 = !DILocalVariable(name: "ready_ticks_size", arg: 9, scope: !3708, file: !3, line: 640, type: !638)
!3721 = !DILocalVariable(name: "sched_next", arg: 10, scope: !3708, file: !3, line: 641, type: !645)
!3722 = !DILocalVariable(name: "cycle", arg: 11, scope: !3708, file: !3, line: 641, type: !638)
!3723 = !DILocalVariable(name: "issue_more", arg: 12, scope: !3708, file: !3, line: 641, type: !638)
!3724 = !DILocalVariable(name: "after_stall_p", arg: 13, scope: !3708, file: !3, line: 641, type: !637)
!3725 = !DILocalVariable(name: "last_scheduled_insn_old", scope: !3708, file: !3, line: 643, type: !1892)
!3726 = !DILocalVariable(name: "edge_old", scope: !3727, file: !3, line: 682, type: !1196)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 681, column: 5)
!3728 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 650, column: 7)
!3729 = !DILocalVariable(name: "edge_new", scope: !3727, file: !3, line: 682, type: !1196)
!3730 = !DILocalVariable(name: "candidate", scope: !3727, file: !3, line: 683, type: !1196)
!3731 = !DILocalVariable(name: "si", scope: !3727, file: !3, line: 684, type: !3251)
!3732 = !DILocalVariable(name: "succ", scope: !3727, file: !3, line: 685, type: !1892)
!3733 = !DILocation(line: 0, scope: !3708)
!3734 = !DILocation(line: 643, column: 36, scope: !3708)
!3735 = !DILocation(line: 645, column: 3, scope: !3708)
!3736 = !DILocation(line: 650, column: 27, scope: !3728)
!3737 = !DILocation(line: 651, column: 34, scope: !3728)
!3738 = !DILocation(line: 651, column: 7, scope: !3728)
!3739 = !DILocation(line: 656, column: 30, scope: !3728)
!3740 = !DILocation(line: 658, column: 20, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 657, column: 5)
!3742 = !DILocation(line: 658, column: 7, scope: !3741)
!3743 = !DILocation(line: 659, column: 7, scope: !3741)
!3744 = !DILocation(line: 661, column: 27, scope: !3741)
!3745 = !DILocation(line: 661, column: 7, scope: !3741)
!3746 = !DILocation(line: 662, column: 7, scope: !3741)
!3747 = !DILocation(line: 664, column: 29, scope: !3741)
!3748 = !DILocation(line: 664, column: 7, scope: !3741)
!3749 = !DILocation(line: 665, column: 7, scope: !3741)
!3750 = !DILocation(line: 667, column: 19, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 667, column: 11)
!3752 = !DILocation(line: 667, column: 17, scope: !3751)
!3753 = !DILocation(line: 667, column: 11, scope: !3741)
!3754 = !DILocation(line: 668, column: 25, scope: !3751)
!3755 = !DILocation(line: 668, column: 9, scope: !3751)
!3756 = !DILocation(line: 670, column: 37, scope: !3741)
!3757 = !DILocation(line: 671, column: 30, scope: !3741)
!3758 = !DILocation(line: 671, column: 7, scope: !3741)
!3759 = !DILocation(line: 671, column: 28, scope: !3741)
!3760 = !DILocation(line: 672, column: 7, scope: !3741)
!3761 = !DILocation(line: 673, column: 13, scope: !3741)
!3762 = !DILocation(line: 673, column: 7, scope: !3741)
!3763 = !DILocation(line: 674, column: 11, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 674, column: 11)
!3765 = !DILocation(line: 674, column: 11, scope: !3741)
!3766 = !DILocation(line: 675, column: 9, scope: !3764)
!3767 = !DILocation(line: 677, column: 11, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 677, column: 11)
!3769 = !DILocation(line: 677, column: 11, scope: !3741)
!3770 = !DILocation(line: 678, column: 43, scope: !3768)
!3771 = !DILocation(line: 678, column: 9, scope: !3768)
!3772 = !DILocation(line: 0, scope: !3727)
!3773 = !DILocation(line: 684, column: 7, scope: !3727)
!3774 = !DILocation(line: 685, column: 7, scope: !3727)
!3775 = !DILocation(line: 688, column: 7, scope: !3727)
!3776 = !DILocation(line: 689, column: 39, scope: !3727)
!3777 = !DILocation(line: 689, column: 62, scope: !3727)
!3778 = !DILocation(line: 689, column: 19, scope: !3727)
!3779 = !DILocation(line: 691, column: 12, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 691, column: 11)
!3781 = !DILocation(line: 692, column: 11, scope: !3780)
!3782 = !DILocation(line: 692, column: 26, scope: !3780)
!3783 = !DILocation(line: 692, column: 33, scope: !3780)
!3784 = !DILocation(line: 692, column: 30, scope: !3780)
!3785 = !DILocation(line: 693, column: 15, scope: !3780)
!3786 = !DILocation(line: 693, column: 36, scope: !3780)
!3787 = !DILocation(line: 693, column: 33, scope: !3780)
!3788 = !DILocation(line: 691, column: 11, scope: !3727)
!3789 = !DILocation(line: 696, column: 24, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 694, column: 9)
!3791 = !DILocation(line: 696, column: 11, scope: !3790)
!3792 = !DILocation(line: 697, column: 11, scope: !3790)
!3793 = !DILocation(line: 699, column: 33, scope: !3790)
!3794 = !DILocation(line: 699, column: 11, scope: !3790)
!3795 = !DILocation(line: 700, column: 11, scope: !3790)
!3796 = !DILocation(line: 702, column: 41, scope: !3790)
!3797 = !DILocation(line: 703, column: 27, scope: !3790)
!3798 = !DILocation(line: 703, column: 4, scope: !3790)
!3799 = !DILocation(line: 703, column: 25, scope: !3790)
!3800 = !DILocation(line: 704, column: 9, scope: !3790)
!3801 = !DILocation(line: 706, column: 13, scope: !3780)
!3802 = !DILocation(line: 710, column: 13, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 707, column: 11)
!3804 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 706, column: 13)
!3805 = !DILocation(line: 713, column: 25, scope: !3803)
!3806 = !DILocation(line: 713, column: 13, scope: !3803)
!3807 = !DILocation(line: 714, column: 29, scope: !3803)
!3808 = !DILocation(line: 716, column: 36, scope: !3803)
!3809 = !DILocation(line: 716, column: 13, scope: !3803)
!3810 = !DILocation(line: 717, column: 26, scope: !3803)
!3811 = !DILocation(line: 719, column: 43, scope: !3803)
!3812 = !DILocation(line: 720, column: 6, scope: !3803)
!3813 = !DILocation(line: 720, column: 27, scope: !3803)
!3814 = !DILocation(line: 721, column: 11, scope: !3803)
!3815 = !DILocation(line: 725, column: 13, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 723, column: 11)
!3817 = !DILocation(line: 726, column: 13, scope: !3816)
!3818 = !DILocation(line: 728, column: 13, scope: !3816)
!3819 = !DILocation(line: 733, column: 9, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 733, column: 9)
!3821 = !DILocation(line: 0, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 737, column: 15)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 736, column: 17)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 735, column: 11)
!3825 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 733, column: 9)
!3826 = !DILocation(line: 733, column: 9, scope: !3825)
!3827 = !DILocation(line: 736, column: 17, scope: !3823)
!3828 = !DILocation(line: 736, column: 22, scope: !3823)
!3829 = !DILocation(line: 736, column: 17, scope: !3824)
!3830 = !DILocation(line: 739, column: 17, scope: !3822)
!3831 = !DILocation(line: 740, column: 31, scope: !3822)
!3832 = !DILocation(line: 741, column: 15, scope: !3822)
!3833 = distinct !{!3833, !3819, !3834}
!3834 = !DILocation(line: 742, column: 11, scope: !3820)
!3835 = !DILocation(line: 744, column: 9, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 744, column: 9)
!3837 = !DILocation(line: 744, column: 9, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 744, column: 9)
!3839 = !DILocation(line: 747, column: 17, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3841, file: !3, line: 747, column: 17)
!3841 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 746, column: 11)
!3842 = !DILocation(line: 747, column: 22, scope: !3840)
!3843 = !DILocation(line: 747, column: 17, scope: !3841)
!3844 = !DILocation(line: 750, column: 17, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 748, column: 15)
!3846 = !DILocation(line: 751, column: 31, scope: !3845)
!3847 = !DILocation(line: 752, column: 15, scope: !3845)
!3848 = distinct !{!3848, !3835, !3849}
!3849 = !DILocation(line: 753, column: 11, scope: !3836)
!3850 = !DILocation(line: 756, column: 22, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 756, column: 13)
!3852 = !DILocation(line: 756, column: 42, scope: !3851)
!3853 = !DILocation(line: 756, column: 30, scope: !3851)
!3854 = !DILocation(line: 758, column: 33, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 757, column: 11)
!3856 = !DILocation(line: 758, column: 13, scope: !3855)
!3857 = !DILocation(line: 759, column: 13, scope: !3855)
!3858 = !DILocation(line: 760, column: 13, scope: !3855)
!3859 = !DILocation(line: 761, column: 19, scope: !3855)
!3860 = !DILocation(line: 761, column: 13, scope: !3855)
!3861 = !DILocation(line: 763, column: 31, scope: !3855)
!3862 = !DILocation(line: 763, column: 29, scope: !3855)
!3863 = !DILocation(line: 764, column: 17, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 764, column: 17)
!3865 = !DILocation(line: 764, column: 17, scope: !3855)
!3866 = !DILocation(line: 765, column: 15, scope: !3864)
!3867 = !DILocation(line: 767, column: 17, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 767, column: 17)
!3869 = !DILocation(line: 767, column: 17, scope: !3855)
!3870 = !DILocation(line: 768, column: 49, scope: !3868)
!3871 = !DILocation(line: 768, column: 15, scope: !3868)
!3872 = !DILocation(line: 771, column: 25, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 771, column: 15)
!3874 = !DILocation(line: 771, column: 49, scope: !3873)
!3875 = !DILocation(line: 771, column: 37, scope: !3873)
!3876 = !DILocation(line: 771, column: 15, scope: !3851)
!3877 = !DILocation(line: 773, column: 36, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 772, column: 13)
!3879 = !DILocation(line: 773, column: 15, scope: !3878)
!3880 = !DILocation(line: 774, column: 28, scope: !3878)
!3881 = !DILocation(line: 775, column: 15, scope: !3878)
!3882 = !DILocation(line: 776, column: 43, scope: !3878)
!3883 = !DILocation(line: 776, column: 41, scope: !3878)
!3884 = !DILocation(line: 777, column: 21, scope: !3878)
!3885 = !DILocation(line: 777, column: 15, scope: !3878)
!3886 = !DILocation(line: 778, column: 37, scope: !3878)
!3887 = !DILocation(line: 779, column: 15, scope: !3878)
!3888 = !DILocation(line: 779, column: 42, scope: !3878)
!3889 = !DILocation(line: 780, column: 15, scope: !3878)
!3890 = !DILocation(line: 780, column: 31, scope: !3878)
!3891 = !DILocation(line: 781, column: 13, scope: !3878)
!3892 = !DILocation(line: 785, column: 15, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 783, column: 13)
!3894 = !DILocation(line: 786, column: 15, scope: !3893)
!3895 = !DILocation(line: 787, column: 21, scope: !3893)
!3896 = !DILocation(line: 787, column: 15, scope: !3893)
!3897 = !DILocation(line: 789, column: 5, scope: !3728)
!3898 = !DILocation(line: 792, column: 7, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 792, column: 7)
!3900 = !DILocation(line: 792, column: 7, scope: !3708)
!3901 = !DILocation(line: 796, column: 28, scope: !3708)
!3902 = !DILocation(line: 793, column: 5, scope: !3899)
!3903 = !DILocation(line: 793, column: 29, scope: !3899)
!3904 = !DILocation(line: 795, column: 3, scope: !3708)
!3905 = !DILocation(line: 795, column: 26, scope: !3708)
!3906 = !DILocation(line: 796, column: 3, scope: !3708)
!3907 = !DILocation(line: 797, column: 3, scope: !3708)
!3908 = !DILocation(line: 797, column: 24, scope: !3708)
!3909 = !DILocation(line: 798, column: 1, scope: !3708)
!3910 = distinct !DISubprogram(name: "init_fence_for_scheduling", scope: !3, file: !3, line: 253, type: !3911, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3913)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{null, !3113}
!3913 = !{!3914}
!3914 = !DILocalVariable(name: "f", arg: 1, scope: !3910, file: !3, line: 253, type: !3113)
!3915 = !DILocation(line: 0, scope: !3910)
!3916 = !DILocation(line: 255, column: 3, scope: !3910)
!3917 = !DILocation(line: 255, column: 18, scope: !3910)
!3918 = !DILocation(line: 256, column: 3, scope: !3910)
!3919 = !DILocation(line: 256, column: 25, scope: !3910)
!3920 = !DILocation(line: 257, column: 25, scope: !3910)
!3921 = !DILocation(line: 258, column: 1, scope: !3910)
!3922 = distinct !DISubprogram(name: "add_clean_fence_to_fences", scope: !3, file: !3, line: 861, type: !3923, scopeLine: 862, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3925)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{null, !3094, !1892, !3113}
!3925 = !{!3926, !3927, !3928, !3929}
!3926 = !DILocalVariable(name: "new_fences", arg: 1, scope: !3922, file: !3, line: 861, type: !3094)
!3927 = !DILocalVariable(name: "succ", arg: 2, scope: !3922, file: !3, line: 861, type: !1892)
!3928 = !DILocalVariable(name: "fence", arg: 3, scope: !3922, file: !3, line: 861, type: !3113)
!3929 = !DILocalVariable(name: "ready_ticks_size", scope: !3922, file: !3, line: 863, type: !638)
!3930 = !DILocation(line: 0, scope: !3922)
!3931 = !DILocation(line: 863, column: 26, scope: !3922)
!3932 = !DILocation(line: 863, column: 41, scope: !3922)
!3933 = !DILocation(line: 866, column: 24, scope: !3922)
!3934 = !DILocation(line: 866, column: 41, scope: !3922)
!3935 = !DILocation(line: 867, column: 18, scope: !3922)
!3936 = !DILocation(line: 869, column: 18, scope: !3922)
!3937 = !DILocation(line: 870, column: 28, scope: !3922)
!3938 = !DILocation(line: 870, column: 48, scope: !3922)
!3939 = !DILocation(line: 871, column: 21, scope: !3922)
!3940 = !DILocation(line: 871, column: 36, scope: !3922)
!3941 = !DILocation(line: 865, column: 3, scope: !3922)
!3942 = !DILocation(line: 872, column: 1, scope: !3922)
!3943 = distinct !DISubprogram(name: "add_to_fences", scope: !3, file: !3, line: 803, type: !3944, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3946)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{null, !3094, !1892, !1998, !1900, !642, !645, !1824, !1839, !638, !645, !638, !638, !638, !637, !637}
!3946 = !{!3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962}
!3947 = !DILocalVariable(name: "new_fences", arg: 1, scope: !3943, file: !3, line: 803, type: !3094)
!3948 = !DILocalVariable(name: "insn", arg: 2, scope: !3943, file: !3, line: 803, type: !1892)
!3949 = !DILocalVariable(name: "state", arg: 3, scope: !3943, file: !3, line: 804, type: !1998)
!3950 = !DILocalVariable(name: "dc", arg: 4, scope: !3943, file: !3, line: 804, type: !1900)
!3951 = !DILocalVariable(name: "tc", arg: 5, scope: !3943, file: !3, line: 804, type: !642)
!3952 = !DILocalVariable(name: "last_scheduled_insn", arg: 6, scope: !3943, file: !3, line: 804, type: !645)
!3953 = !DILocalVariable(name: "executing_insns", arg: 7, scope: !3943, file: !3, line: 805, type: !1824)
!3954 = !DILocalVariable(name: "ready_ticks", arg: 8, scope: !3943, file: !3, line: 805, type: !1839)
!3955 = !DILocalVariable(name: "ready_ticks_size", arg: 9, scope: !3943, file: !3, line: 806, type: !638)
!3956 = !DILocalVariable(name: "sched_next", arg: 10, scope: !3943, file: !3, line: 806, type: !645)
!3957 = !DILocalVariable(name: "cycle", arg: 11, scope: !3943, file: !3, line: 806, type: !638)
!3958 = !DILocalVariable(name: "cycle_issued_insns", arg: 12, scope: !3943, file: !3, line: 807, type: !638)
!3959 = !DILocalVariable(name: "issue_rate", arg: 13, scope: !3943, file: !3, line: 807, type: !638)
!3960 = !DILocalVariable(name: "starts_cycle_p", arg: 14, scope: !3943, file: !3, line: 808, type: !637)
!3961 = !DILocalVariable(name: "after_stall_p", arg: 15, scope: !3943, file: !3, line: 808, type: !637)
!3962 = !DILocalVariable(name: "f", scope: !3943, file: !3, line: 810, type: !3113)
!3963 = !DILocation(line: 0, scope: !3943)
!3964 = !DILocation(line: 810, column: 29, scope: !3943)
!3965 = !DILocation(line: 810, column: 15, scope: !3943)
!3966 = !DILocation(line: 812, column: 9, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3943, file: !3, line: 812, column: 7)
!3968 = !DILocation(line: 812, column: 7, scope: !3943)
!3969 = !DILocation(line: 814, column: 18, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 813, column: 5)
!3971 = !DILocation(line: 814, column: 7, scope: !3970)
!3972 = !DILocation(line: 820, column: 5, scope: !3970)
!3973 = !DILocation(line: 820, column: 2, scope: !3970)
!3974 = !DILocation(line: 821, column: 5, scope: !3970)
!3975 = !DILocation(line: 824, column: 7, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 823, column: 5)
!3977 = !DILocation(line: 828, column: 1, scope: !3943)
!3978 = distinct !DISubprogram(name: "add_dirty_fence_to_fences", scope: !3, file: !3, line: 877, type: !3923, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3979)
!3979 = !{!3980, !3981, !3982, !3983}
!3980 = !DILocalVariable(name: "new_fences", arg: 1, scope: !3978, file: !3, line: 877, type: !3094)
!3981 = !DILocalVariable(name: "succ", arg: 2, scope: !3978, file: !3, line: 877, type: !1892)
!3982 = !DILocalVariable(name: "fence", arg: 3, scope: !3978, file: !3, line: 877, type: !3113)
!3983 = !DILocalVariable(name: "new_ready_ticks", scope: !3978, file: !3, line: 879, type: !1839)
!3984 = !DILocation(line: 0, scope: !3978)
!3985 = !DILocation(line: 880, column: 7, scope: !3978)
!3986 = !DILocation(line: 882, column: 28, scope: !3978)
!3987 = !DILocation(line: 883, column: 11, scope: !3978)
!3988 = !DILocation(line: 883, column: 42, scope: !3978)
!3989 = !DILocation(line: 882, column: 3, scope: !3978)
!3990 = !DILocation(line: 885, column: 43, scope: !3978)
!3991 = !DILocation(line: 885, column: 24, scope: !3978)
!3992 = !DILocation(line: 886, column: 47, scope: !3978)
!3993 = !DILocation(line: 886, column: 18, scope: !3978)
!3994 = !DILocation(line: 887, column: 49, scope: !3978)
!3995 = !DILocation(line: 887, column: 18, scope: !3978)
!3996 = !DILocation(line: 888, column: 18, scope: !3978)
!3997 = !DILocation(line: 889, column: 18, scope: !3978)
!3998 = !DILocation(line: 891, column: 18, scope: !3978)
!3999 = !DILocation(line: 892, column: 18, scope: !3978)
!4000 = !DILocation(line: 893, column: 18, scope: !3978)
!4001 = !DILocation(line: 894, column: 18, scope: !3978)
!4002 = !DILocation(line: 895, column: 4, scope: !3978)
!4003 = !DILocation(line: 896, column: 18, scope: !3978)
!4004 = !DILocation(line: 897, column: 18, scope: !3978)
!4005 = !DILocation(line: 884, column: 3, scope: !3978)
!4006 = !DILocation(line: 898, column: 1, scope: !3978)
!4007 = distinct !DISubprogram(name: "state_create_copy", scope: !3, file: !3, line: 557, type: !4008, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4010)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!1998, !1998}
!4010 = !{!4011, !4012}
!4011 = !DILocalVariable(name: "from", arg: 1, scope: !4007, file: !3, line: 557, type: !1998)
!4012 = !DILocalVariable(name: "to", scope: !4007, file: !3, line: 559, type: !1998)
!4013 = !DILocation(line: 0, scope: !4007)
!4014 = !DILocation(line: 559, column: 16, scope: !4007)
!4015 = !DILocation(line: 561, column: 3, scope: !4007)
!4016 = !DILocation(line: 562, column: 3, scope: !4007)
!4017 = distinct !DISubprogram(name: "create_copy_of_deps_context", scope: !3, file: !3, line: 460, type: !4018, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4020)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!1900, !1900}
!4020 = !{!4021, !4022}
!4021 = !DILocalVariable(name: "from", arg: 1, scope: !4017, file: !3, line: 460, type: !1900)
!4022 = !DILocalVariable(name: "to", scope: !4017, file: !3, line: 462, type: !1900)
!4023 = !DILocation(line: 0, scope: !4017)
!4024 = !DILocation(line: 462, column: 15, scope: !4017)
!4025 = !DILocation(line: 464, column: 3, scope: !4017)
!4026 = !DILocation(line: 465, column: 3, scope: !4017)
!4027 = distinct !DISubprogram(name: "create_copy_of_target_context", scope: !3, file: !3, line: 410, type: !4028, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4030)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{!2005, !2005}
!4030 = !{!4031, !4032}
!4031 = !DILocalVariable(name: "tc", arg: 1, scope: !4027, file: !3, line: 410, type: !2005)
!4032 = !DILocalVariable(name: "copy", scope: !4027, file: !3, line: 412, type: !2005)
!4033 = !DILocation(line: 0, scope: !4027)
!4034 = !DILocation(line: 412, column: 15, scope: !4027)
!4035 = !DILocation(line: 414, column: 3, scope: !4027)
!4036 = !DILocation(line: 416, column: 3, scope: !4027)
!4037 = distinct !DISubprogram(name: "VEC_rtx_gc_copy", scope: !414, file: !414, line: 202, type: !4038, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4041)
!4038 = !DISubroutineType(types: !4039)
!4039 = !{!1824, !4040}
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!4041 = !{!4042, !4043, !4044}
!4042 = !DILocalVariable(name: "vec_", arg: 1, scope: !4037, file: !414, line: 202, type: !4040)
!4043 = !DILocalVariable(name: "len_", scope: !4037, file: !414, line: 202, type: !1117)
!4044 = !DILocalVariable(name: "new_vec_", scope: !4037, file: !414, line: 202, type: !1824)
!4045 = !DILocation(line: 0, scope: !4037)
!4046 = !DILocation(line: 202, column: 1, scope: !4037)
!4047 = !DILocation(line: 202, column: 1, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4037, file: !414, line: 202, column: 1)
!4049 = !DILocation(line: 202, column: 1, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4048, file: !414, line: 202, column: 1)
!4051 = distinct !DISubprogram(name: "get_regset_from_pool", scope: !3, file: !3, line: 906, type: !4052, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4054)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{!1841}
!4054 = !{!4055}
!4055 = !DILocalVariable(name: "rs", scope: !4051, file: !3, line: 908, type: !1841)
!4056 = !DILocation(line: 910, column: 19, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 910, column: 7)
!4058 = !DILocation(line: 910, column: 21, scope: !4057)
!4059 = !DILocation(line: 910, column: 7, scope: !4051)
!4060 = !DILocation(line: 911, column: 22, scope: !4057)
!4061 = !DILocation(line: 911, column: 24, scope: !4057)
!4062 = !DILocation(line: 911, column: 10, scope: !4057)
!4063 = !DILocation(line: 0, scope: !4051)
!4064 = !DILocation(line: 911, column: 5, scope: !4057)
!4065 = !DILocation(line: 915, column: 12, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 914, column: 5)
!4067 = !DILocation(line: 917, column: 23, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 917, column: 11)
!4069 = !DILocation(line: 917, column: 41, scope: !4068)
!4070 = !DILocation(line: 917, column: 26, scope: !4068)
!4071 = !DILocation(line: 917, column: 11, scope: !4066)
!4072 = !DILocation(line: 920, column: 19, scope: !4066)
!4073 = !DILocation(line: 918, column: 19, scope: !4068)
!4074 = !DILocation(line: 918, column: 17, scope: !4068)
!4075 = !DILocation(line: 918, column: 2, scope: !4068)
!4076 = !DILocation(line: 920, column: 36, scope: !4066)
!4077 = !DILocation(line: 920, column: 7, scope: !4066)
!4078 = !DILocation(line: 920, column: 40, scope: !4066)
!4079 = !DILocation(line: 0, scope: !4057)
!4080 = !DILocation(line: 923, column: 19, scope: !4051)
!4081 = !DILocation(line: 925, column: 3, scope: !4051)
!4082 = distinct !DISubprogram(name: "get_clear_regset_from_pool", scope: !3, file: !3, line: 930, type: !4052, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4083)
!4083 = !{!4084}
!4084 = !DILocalVariable(name: "rs", scope: !4082, file: !3, line: 932, type: !1841)
!4085 = !DILocation(line: 932, column: 15, scope: !4082)
!4086 = !DILocation(line: 0, scope: !4082)
!4087 = !DILocation(line: 934, column: 3, scope: !4082)
!4088 = !DILocation(line: 935, column: 3, scope: !4082)
!4089 = distinct !DISubprogram(name: "return_regset_to_pool", scope: !3, file: !3, line: 940, type: !4090, scopeLine: 941, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4092)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{null, !1841}
!4092 = !{!4093}
!4093 = !DILocalVariable(name: "rs", arg: 1, scope: !4089, file: !3, line: 940, type: !1841)
!4094 = !DILocation(line: 0, scope: !4089)
!4095 = !DILocation(line: 942, column: 19, scope: !4089)
!4096 = !DILocation(line: 944, column: 19, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 944, column: 7)
!4098 = !DILocation(line: 944, column: 36, scope: !4097)
!4099 = !DILocation(line: 944, column: 21, scope: !4097)
!4100 = !DILocation(line: 944, column: 7, scope: !4089)
!4101 = !DILocation(line: 947, column: 15, scope: !4089)
!4102 = !DILocation(line: 945, column: 21, scope: !4097)
!4103 = !DILocation(line: 945, column: 19, scope: !4097)
!4104 = !DILocation(line: 945, column: 5, scope: !4097)
!4105 = !DILocation(line: 947, column: 30, scope: !4089)
!4106 = !DILocation(line: 947, column: 3, scope: !4089)
!4107 = !DILocation(line: 947, column: 34, scope: !4089)
!4108 = !DILocation(line: 948, column: 1, scope: !4089)
!4109 = distinct !DISubprogram(name: "free_regset_pool", scope: !3, file: !3, line: 962, type: !2396, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!4110 = !DILocation(line: 1003, column: 3, scope: !4109)
!4111 = !DILocation(line: 1005, column: 3, scope: !4109)
!4112 = !DILocation(line: 1005, column: 22, scope: !4109)
!4113 = !DILocation(line: 1007, column: 7, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 1006, column: 5)
!4115 = !DILocation(line: 1008, column: 7, scope: !4114)
!4116 = distinct !{!4116, !4111, !4117}
!4117 = !DILocation(line: 1009, column: 5, scope: !4109)
!4118 = !DILocation(line: 1011, column: 21, scope: !4109)
!4119 = !DILocation(line: 1011, column: 3, scope: !4109)
!4120 = !DILocation(line: 1012, column: 17, scope: !4109)
!4121 = !DILocation(line: 1013, column: 17, scope: !4109)
!4122 = !DILocation(line: 1015, column: 21, scope: !4109)
!4123 = !DILocation(line: 1015, column: 3, scope: !4109)
!4124 = !DILocation(line: 1016, column: 18, scope: !4109)
!4125 = !DILocation(line: 1017, column: 18, scope: !4109)
!4126 = !DILocation(line: 1018, column: 18, scope: !4109)
!4127 = !DILocation(line: 1020, column: 20, scope: !4109)
!4128 = !DILocation(line: 1021, column: 1, scope: !4109)
!4129 = distinct !DISubprogram(name: "get_nop_from_pool", scope: !3, file: !3, line: 1034, type: !4130, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4132)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!1892, !1892}
!4132 = !{!4133, !4134, !4135, !4136}
!4133 = !DILocalVariable(name: "insn", arg: 1, scope: !4129, file: !3, line: 1034, type: !1892)
!4134 = !DILocalVariable(name: "nop", scope: !4129, file: !3, line: 1036, type: !1892)
!4135 = !DILocalVariable(name: "old_p", scope: !4129, file: !3, line: 1037, type: !637)
!4136 = !DILocalVariable(name: "flags", scope: !4129, file: !3, line: 1038, type: !638)
!4137 = !DILocation(line: 0, scope: !4129)
!4138 = !DILocation(line: 1037, column: 25, scope: !4129)
!4139 = !DILocation(line: 1037, column: 27, scope: !4129)
!4140 = !DILocation(line: 1040, column: 7, scope: !4129)
!4141 = !DILocation(line: 1041, column: 20, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 1040, column: 7)
!4143 = !DILocation(line: 1041, column: 22, scope: !4142)
!4144 = !DILocation(line: 1041, column: 11, scope: !4142)
!4145 = !DILocation(line: 1041, column: 5, scope: !4142)
!4146 = !DILocation(line: 0, scope: !4142)
!4147 = !DILocation(line: 1045, column: 9, scope: !4129)
!4148 = !DILocation(line: 1052, column: 18, scope: !4129)
!4149 = !DILocation(line: 1052, column: 36, scope: !4129)
!4150 = !DILocation(line: 1052, column: 47, scope: !4129)
!4151 = !DILocation(line: 1052, column: 3, scope: !4129)
!4152 = !DILocation(line: 1053, column: 3, scope: !4129)
!4153 = !DILocation(line: 1055, column: 3, scope: !4129)
!4154 = distinct !DISubprogram(name: "set_insn_init", scope: !3, file: !3, line: 3999, type: !4155, scopeLine: 4000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4157)
!4155 = !DISubroutineType(types: !4156)
!4156 = !{!2366, !2366, !1939, !638}
!4157 = !{!4158, !4159, !4160, !4161}
!4158 = !DILocalVariable(name: "expr", arg: 1, scope: !4154, file: !3, line: 3999, type: !2366)
!4159 = !DILocalVariable(name: "vi", arg: 2, scope: !4154, file: !3, line: 3999, type: !1939)
!4160 = !DILocalVariable(name: "seqno", arg: 3, scope: !4154, file: !3, line: 3999, type: !638)
!4161 = !DILocalVariable(name: "x", scope: !4154, file: !3, line: 4001, type: !2366)
!4162 = !DILocation(line: 0, scope: !4154)
!4163 = !DILocation(line: 4003, column: 3, scope: !4154)
!4164 = !DILocation(line: 4004, column: 10, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 4004, column: 7)
!4166 = !DILocation(line: 4004, column: 7, scope: !4154)
!4167 = !DILocation(line: 4006, column: 36, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 4005, column: 5)
!4169 = !DILocation(line: 4007, column: 7, scope: !4168)
!4170 = !DILocation(line: 4008, column: 5, scope: !4168)
!4171 = !DILocation(line: 4010, column: 34, scope: !4165)
!4172 = !DILocation(line: 4012, column: 25, scope: !4154)
!4173 = !DILocation(line: 4013, column: 3, scope: !4154)
!4174 = distinct !DISubprogram(name: "VEC_sel_insn_data_def_base_index", scope: !409, file: !409, line: 762, type: !4175, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4178)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!2456, !4177, !7}
!4177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!4178 = !{!4179, !4180}
!4179 = !DILocalVariable(name: "vec_", arg: 1, scope: !4174, file: !409, line: 762, type: !4177)
!4180 = !DILocalVariable(name: "ix_", arg: 2, scope: !4174, file: !409, line: 762, type: !7)
!4181 = !DILocation(line: 0, scope: !4174)
!4182 = !DILocation(line: 762, column: 1, scope: !4174)
!4183 = distinct !DISubprogram(name: "VEC_int_base_index", scope: !1162, file: !1162, line: 31, type: !4184, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4188)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{!638, !4186, !7}
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1863)
!4188 = !{!4189, !4190}
!4189 = !DILocalVariable(name: "vec_", arg: 1, scope: !4183, file: !1162, line: 31, type: !4186)
!4190 = !DILocalVariable(name: "ix_", arg: 2, scope: !4183, file: !1162, line: 31, type: !7)
!4191 = !DILocation(line: 0, scope: !4183)
!4192 = !DILocation(line: 31, column: 1, scope: !4183)
!4193 = distinct !DISubprogram(name: "sel_init_new_insn", scope: !3, file: !3, line: 4055, type: !4194, scopeLine: 4056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4196)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{null, !1892, !638}
!4196 = !{!4197, !4198}
!4197 = !DILocalVariable(name: "insn", arg: 1, scope: !4193, file: !3, line: 4055, type: !1892)
!4198 = !DILocalVariable(name: "flags", arg: 2, scope: !4193, file: !3, line: 4055, type: !638)
!4199 = !DILocation(line: 0, scope: !4193)
!4200 = !DILocation(line: 4058, column: 7, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4193, file: !3, line: 4058, column: 7)
!4202 = !DILocation(line: 4059, column: 7, scope: !4201)
!4203 = !DILocation(line: 4059, column: 10, scope: !4201)
!4204 = !DILocation(line: 4060, column: 7, scope: !4201)
!4205 = !DILocation(line: 4060, column: 10, scope: !4201)
!4206 = !DILocation(line: 4058, column: 7, scope: !4193)
!4207 = !DILocation(line: 4062, column: 7, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 4061, column: 5)
!4209 = !DILocation(line: 4063, column: 33, scope: !4208)
!4210 = !DILocation(line: 4063, column: 7, scope: !4208)
!4211 = !DILocation(line: 4064, column: 5, scope: !4208)
!4212 = !DILocation(line: 4066, column: 13, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4193, file: !3, line: 4066, column: 7)
!4214 = !DILocation(line: 4066, column: 7, scope: !4193)
!4215 = !DILocation(line: 4067, column: 5, scope: !4213)
!4216 = !DILocation(line: 4069, column: 13, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4193, file: !3, line: 4069, column: 7)
!4218 = !DILocation(line: 4069, column: 7, scope: !4193)
!4219 = !DILocation(line: 4071, column: 7, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 4070, column: 5)
!4221 = !DILocation(line: 4072, column: 7, scope: !4220)
!4222 = !DILocation(line: 4073, column: 7, scope: !4220)
!4223 = !DILocation(line: 4074, column: 5, scope: !4220)
!4224 = !DILocation(line: 4076, column: 13, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4193, file: !3, line: 4076, column: 7)
!4226 = !DILocation(line: 4076, column: 7, scope: !4193)
!4227 = !DILocation(line: 4078, column: 7, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 4077, column: 5)
!4229 = !DILocation(line: 4079, column: 7, scope: !4228)
!4230 = !DILocation(line: 4080, column: 5, scope: !4228)
!4231 = !DILocation(line: 4082, column: 3, scope: !4193)
!4232 = !DILocation(line: 4084, column: 1, scope: !4193)
!4233 = distinct !DISubprogram(name: "return_nop_to_pool", scope: !3, file: !3, line: 1060, type: !4234, scopeLine: 1061, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4236)
!4234 = !DISubroutineType(types: !4235)
!4235 = !{null, !1892, !637}
!4236 = !{!4237, !4238}
!4237 = !DILocalVariable(name: "nop", arg: 1, scope: !4233, file: !3, line: 1060, type: !1892)
!4238 = !DILocalVariable(name: "full_tidying", arg: 2, scope: !4233, file: !3, line: 1060, type: !637)
!4239 = !DILocation(line: 0, scope: !4233)
!4240 = !DILocation(line: 1062, column: 3, scope: !4233)
!4241 = !DILocation(line: 1063, column: 3, scope: !4233)
!4242 = !DILocation(line: 1065, column: 16, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 1065, column: 7)
!4244 = !DILocation(line: 1065, column: 30, scope: !4243)
!4245 = !DILocation(line: 1065, column: 18, scope: !4243)
!4246 = !DILocation(line: 1065, column: 7, scope: !4233)
!4247 = !DILocation(line: 1068, column: 12, scope: !4233)
!4248 = !DILocation(line: 1066, column: 18, scope: !4243)
!4249 = !DILocation(line: 1066, column: 16, scope: !4243)
!4250 = !DILocation(line: 1066, column: 5, scope: !4243)
!4251 = !DILocation(line: 1068, column: 24, scope: !4233)
!4252 = !DILocation(line: 1068, column: 3, scope: !4233)
!4253 = !DILocation(line: 1068, column: 28, scope: !4233)
!4254 = !DILocation(line: 1069, column: 1, scope: !4233)
!4255 = distinct !DISubprogram(name: "sel_remove_insn", scope: !3, file: !3, line: 3732, type: !4256, scopeLine: 3733, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4258)
!4256 = !DISubroutineType(types: !4257)
!4257 = !{!637, !1892, !637, !637}
!4258 = !{!4259, !4260, !4261, !4262, !4263, !4266, !4267, !4270, !4271}
!4259 = !DILocalVariable(name: "insn", arg: 1, scope: !4255, file: !3, line: 3732, type: !1892)
!4260 = !DILocalVariable(name: "only_disconnect", arg: 2, scope: !4255, file: !3, line: 3732, type: !637)
!4261 = !DILocalVariable(name: "full_tidying", arg: 3, scope: !4255, file: !3, line: 3732, type: !637)
!4262 = !DILocalVariable(name: "bb", scope: !4255, file: !3, line: 3734, type: !1179)
!4263 = !DILocalVariable(name: "expr", scope: !4264, file: !3, line: 3740, type: !2366)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 3739, column: 5)
!4265 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 3738, column: 7)
!4266 = !DILocalVariable(name: "i", scope: !4264, file: !3, line: 3741, type: !3049)
!4267 = !DILocalVariable(name: "prev", scope: !4268, file: !3, line: 3755, type: !1892)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 3754, column: 5)
!4269 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 3753, column: 7)
!4270 = !DILocalVariable(name: "next", scope: !4268, file: !3, line: 3756, type: !1892)
!4271 = !DILocalVariable(name: "bb", scope: !4268, file: !3, line: 3757, type: !1179)
!4272 = !DILocation(line: 0, scope: !4255)
!4273 = !DILocation(line: 3734, column: 20, scope: !4255)
!4274 = !DILocation(line: 3736, column: 3, scope: !4255)
!4275 = !DILocation(line: 3738, column: 7, scope: !4265)
!4276 = !DILocation(line: 3738, column: 27, scope: !4265)
!4277 = !DILocation(line: 3738, column: 30, scope: !4265)
!4278 = !DILocation(line: 3738, column: 7, scope: !4255)
!4279 = !DILocation(line: 3740, column: 7, scope: !4264)
!4280 = !DILocation(line: 3741, column: 7, scope: !4264)
!4281 = !DILocation(line: 3745, column: 7, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 3745, column: 7)
!4283 = !DILocation(line: 0, scope: !4264)
!4284 = !DILocation(line: 0, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 3745, column: 7)
!4286 = !DILocation(line: 3745, column: 7, scope: !4285)
!4287 = !DILocation(line: 3746, column: 6, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 3746, column: 6)
!4289 = !DILocation(line: 3746, column: 27, scope: !4288)
!4290 = !DILocation(line: 3746, column: 6, scope: !4285)
!4291 = !DILocation(line: 3748, column: 6, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 3747, column: 4)
!4293 = !DILocation(line: 3749, column: 6, scope: !4292)
!4294 = distinct !{!4294, !4281, !4295}
!4295 = !DILocation(line: 3750, column: 4, scope: !4282)
!4296 = !DILocation(line: 3751, column: 5, scope: !4265)
!4297 = !DILocation(line: 3751, column: 5, scope: !4264)
!4298 = !DILocation(line: 3753, column: 7, scope: !4269)
!4299 = !DILocation(line: 3753, column: 7, scope: !4255)
!4300 = !DILocation(line: 3755, column: 21, scope: !4268)
!4301 = !DILocation(line: 0, scope: !4268)
!4302 = !DILocation(line: 3756, column: 21, scope: !4268)
!4303 = !DILocation(line: 3757, column: 24, scope: !4268)
!4304 = !DILocation(line: 3759, column: 7, scope: !4268)
!4305 = !DILocation(line: 3759, column: 24, scope: !4268)
!4306 = !DILocation(line: 3760, column: 7, scope: !4268)
!4307 = !DILocation(line: 3760, column: 24, scope: !4268)
!4308 = !DILocation(line: 3762, column: 11, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4268, file: !3, line: 3762, column: 11)
!4310 = !DILocation(line: 3762, column: 24, scope: !4309)
!4311 = !DILocation(line: 3762, column: 11, scope: !4268)
!4312 = !DILocation(line: 3764, column: 11, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4309, file: !3, line: 3763, column: 9)
!4314 = !DILocation(line: 3765, column: 11, scope: !4313)
!4315 = !DILocation(line: 3765, column: 24, scope: !4313)
!4316 = !DILocation(line: 3767, column: 11, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4268, file: !3, line: 3767, column: 11)
!4318 = !DILocation(line: 3766, column: 9, scope: !4313)
!4319 = !DILocation(line: 3767, column: 23, scope: !4317)
!4320 = !DILocation(line: 3767, column: 11, scope: !4268)
!4321 = !DILocation(line: 3768, column: 21, scope: !4317)
!4322 = !DILocation(line: 3768, column: 9, scope: !4317)
!4323 = !DILocation(line: 3772, column: 7, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 3771, column: 5)
!4325 = !DILocation(line: 3773, column: 19, scope: !4324)
!4326 = !DILocation(line: 3773, column: 7, scope: !4324)
!4327 = !DILocation(line: 3777, column: 20, scope: !4255)
!4328 = !DILocation(line: 3778, column: 3, scope: !4255)
!4329 = !DILocation(line: 3778, column: 20, scope: !4255)
!4330 = !DILocation(line: 3780, column: 10, scope: !4255)
!4331 = !DILocation(line: 3780, column: 3, scope: !4255)
!4332 = distinct !DISubprogram(name: "free_nop_pool", scope: !3, file: !3, line: 1073, type: !2396, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!4333 = !DILocation(line: 1075, column: 14, scope: !4332)
!4334 = !DILocation(line: 1076, column: 14, scope: !4332)
!4335 = !DILocation(line: 1077, column: 18, scope: !4332)
!4336 = !DILocation(line: 1077, column: 3, scope: !4332)
!4337 = !DILocation(line: 1078, column: 14, scope: !4332)
!4338 = !DILocation(line: 1079, column: 1, scope: !4332)
!4339 = distinct !DISubprogram(name: "vinsn_attach", scope: !3, file: !3, line: 1216, type: !4340, scopeLine: 1217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4342)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{null, !1939}
!4342 = !{!4343}
!4343 = !DILocalVariable(name: "vi", arg: 1, scope: !4339, file: !3, line: 1216, type: !1939)
!4344 = !DILocation(line: 0, scope: !4339)
!4345 = !DILocation(line: 1219, column: 3, scope: !4339)
!4346 = !DILocation(line: 1221, column: 3, scope: !4339)
!4347 = !DILocation(line: 1221, column: 19, scope: !4339)
!4348 = !DILocation(line: 1222, column: 1, scope: !4339)
!4349 = distinct !DISubprogram(name: "vinsn_copy", scope: !3, file: !3, line: 1238, type: !4350, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4352)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{!1939, !1939, !637}
!4352 = !{!4353, !4354, !4355, !4356, !4357}
!4353 = !DILocalVariable(name: "vi", arg: 1, scope: !4349, file: !3, line: 1238, type: !1939)
!4354 = !DILocalVariable(name: "reattach_p", arg: 2, scope: !4349, file: !3, line: 1238, type: !637)
!4355 = !DILocalVariable(name: "copy", scope: !4349, file: !3, line: 1240, type: !645)
!4356 = !DILocalVariable(name: "unique", scope: !4349, file: !3, line: 1241, type: !637)
!4357 = !DILocalVariable(name: "new_vi", scope: !4349, file: !3, line: 1242, type: !1939)
!4358 = !DILocation(line: 0, scope: !4349)
!4359 = !DILocation(line: 1241, column: 17, scope: !4349)
!4360 = !DILocation(line: 1244, column: 35, scope: !4349)
!4361 = !DILocation(line: 1244, column: 10, scope: !4349)
!4362 = !DILocation(line: 1245, column: 12, scope: !4349)
!4363 = !DILocation(line: 1246, column: 7, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 1246, column: 7)
!4365 = !DILocation(line: 1246, column: 7, scope: !4349)
!4366 = !DILocation(line: 1248, column: 7, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 1247, column: 5)
!4368 = !DILocation(line: 1249, column: 7, scope: !4367)
!4369 = !DILocation(line: 1250, column: 5, scope: !4367)
!4370 = !DILocation(line: 1252, column: 3, scope: !4349)
!4371 = distinct !DISubprogram(name: "create_copy_of_insn_rtx", scope: !3, file: !3, line: 5555, type: !4372, scopeLine: 5556, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4374)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!645, !645}
!4374 = !{!4375, !4376}
!4375 = !DILocalVariable(name: "insn_rtx", arg: 1, scope: !4371, file: !3, line: 5555, type: !645)
!4376 = !DILocalVariable(name: "res", scope: !4371, file: !3, line: 5557, type: !645)
!4377 = !DILocation(line: 0, scope: !4371)
!4378 = !DILocation(line: 5559, column: 7, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 5559, column: 7)
!4380 = !DILocation(line: 5559, column: 7, scope: !4371)
!4381 = !DILocation(line: 5560, column: 52, scope: !4379)
!4382 = !DILocation(line: 5560, column: 42, scope: !4379)
!4383 = !DILocation(line: 5560, column: 12, scope: !4379)
!4384 = !DILocation(line: 5560, column: 5, scope: !4379)
!4385 = !DILocation(line: 5563, column: 3, scope: !4371)
!4386 = !DILocation(line: 5565, column: 49, scope: !4371)
!4387 = !DILocation(line: 5565, column: 39, scope: !4371)
!4388 = !DILocation(line: 5565, column: 9, scope: !4371)
!4389 = !DILocation(line: 5567, column: 3, scope: !4371)
!4390 = !DILocation(line: 5568, column: 1, scope: !4371)
!4391 = distinct !DISubprogram(name: "create_vinsn_from_insn_rtx", scope: !3, file: !3, line: 5545, type: !4392, scopeLine: 5546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4394)
!4392 = !DISubroutineType(types: !4393)
!4393 = !{!1939, !645, !637}
!4394 = !{!4395, !4396}
!4395 = !DILocalVariable(name: "insn_rtx", arg: 1, scope: !4391, file: !3, line: 5545, type: !645)
!4396 = !DILocalVariable(name: "force_unique_p", arg: 2, scope: !4391, file: !3, line: 5545, type: !637)
!4397 = !DILocation(line: 0, scope: !4391)
!4398 = !DILocation(line: 5547, column: 3, scope: !4391)
!4399 = !DILocation(line: 5550, column: 10, scope: !4391)
!4400 = !DILocation(line: 5550, column: 3, scope: !4391)
!4401 = distinct !DISubprogram(name: "vinsn_detach", scope: !3, file: !3, line: 1271, type: !4340, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4402)
!4402 = !{!4403}
!4403 = !DILocalVariable(name: "vi", arg: 1, scope: !4401, file: !3, line: 1271, type: !1939)
!4404 = !DILocation(line: 0, scope: !4401)
!4405 = !DILocation(line: 1273, column: 3, scope: !4401)
!4406 = !DILocation(line: 1275, column: 7, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 1275, column: 7)
!4408 = !DILocation(line: 1275, column: 26, scope: !4407)
!4409 = !DILocation(line: 1275, column: 7, scope: !4401)
!4410 = !DILocation(line: 1276, column: 5, scope: !4407)
!4411 = !DILocation(line: 1277, column: 1, scope: !4401)
!4412 = distinct !DISubprogram(name: "vinsn_delete", scope: !3, file: !3, line: 1257, type: !4340, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4413)
!4413 = !{!4414}
!4414 = !DILocalVariable(name: "vi", arg: 1, scope: !4412, file: !3, line: 1257, type: !1939)
!4415 = !DILocation(line: 0, scope: !4412)
!4416 = !DILocation(line: 1259, column: 3, scope: !4412)
!4417 = !DILocation(line: 1261, column: 26, scope: !4412)
!4418 = !DILocation(line: 1261, column: 3, scope: !4412)
!4419 = !DILocation(line: 1262, column: 26, scope: !4412)
!4420 = !DILocation(line: 1262, column: 3, scope: !4412)
!4421 = !DILocation(line: 1263, column: 26, scope: !4412)
!4422 = !DILocation(line: 1263, column: 3, scope: !4412)
!4423 = !DILocation(line: 1265, column: 9, scope: !4412)
!4424 = !DILocation(line: 1265, column: 3, scope: !4412)
!4425 = !DILocation(line: 1266, column: 1, scope: !4412)
!4426 = distinct !DISubprogram(name: "vinsn_cond_branch_p", scope: !3, file: !3, line: 1281, type: !4427, scopeLine: 1282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4429)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!637, !1939}
!4429 = !{!4430, !4431}
!4430 = !DILocalVariable(name: "vi", arg: 1, scope: !4426, file: !3, line: 1281, type: !1939)
!4431 = !DILocalVariable(name: "insn", scope: !4426, file: !3, line: 1283, type: !1892)
!4432 = !DILocation(line: 0, scope: !4426)
!4433 = !DILocation(line: 1285, column: 8, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 1285, column: 7)
!4435 = !DILocation(line: 1285, column: 7, scope: !4426)
!4436 = !DILocation(line: 1288, column: 10, scope: !4426)
!4437 = !DILocation(line: 1289, column: 7, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 1289, column: 7)
!4439 = !DILocation(line: 1289, column: 38, scope: !4438)
!4440 = !DILocation(line: 1289, column: 7, scope: !4426)
!4441 = !DILocation(line: 1292, column: 10, scope: !4426)
!4442 = !DILocation(line: 1292, column: 3, scope: !4426)
!4443 = !DILocation(line: 1293, column: 1, scope: !4426)
!4444 = distinct !DISubprogram(name: "sel_vinsn_cost", scope: !3, file: !3, line: 1321, type: !4445, scopeLine: 1322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4447)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!638, !1939}
!4447 = !{!4448, !4449}
!4448 = !DILocalVariable(name: "vi", arg: 1, scope: !4444, file: !3, line: 1321, type: !1939)
!4449 = !DILocalVariable(name: "cost", scope: !4444, file: !3, line: 1323, type: !638)
!4450 = !DILocation(line: 0, scope: !4444)
!4451 = !DILocation(line: 1323, column: 18, scope: !4444)
!4452 = !DILocation(line: 1325, column: 12, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 1325, column: 7)
!4454 = !DILocation(line: 1325, column: 7, scope: !4444)
!4455 = !DILocation(line: 1327, column: 33, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4453, file: !3, line: 1326, column: 5)
!4457 = !DILocation(line: 1327, column: 14, scope: !4456)
!4458 = !DILocation(line: 1328, column: 16, scope: !4456)
!4459 = !DILocation(line: 1329, column: 5, scope: !4456)
!4460 = !DILocation(line: 1331, column: 3, scope: !4444)
!4461 = distinct !DISubprogram(name: "sel_insn_rtx_cost", scope: !3, file: !3, line: 1297, type: !2176, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4462)
!4462 = !{!4463, !4464}
!4463 = !DILocalVariable(name: "insn", arg: 1, scope: !4461, file: !3, line: 1297, type: !645)
!4464 = !DILocalVariable(name: "cost", scope: !4461, file: !3, line: 1299, type: !638)
!4465 = !DILocation(line: 0, scope: !4461)
!4466 = !DILocation(line: 1305, column: 7, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 1305, column: 7)
!4468 = !DILocation(line: 1305, column: 29, scope: !4467)
!4469 = !DILocation(line: 1305, column: 7, scope: !4461)
!4470 = !DILocation(line: 1309, column: 14, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 1308, column: 5)
!4472 = !DILocation(line: 1311, column: 11, scope: !4471)
!4473 = !DILocation(line: 0, scope: !4467)
!4474 = !DILocation(line: 1315, column: 3, scope: !4461)
!4475 = distinct !DISubprogram(name: "sel_gen_insn_from_rtx_after", scope: !3, file: !3, line: 1340, type: !4476, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4478)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!1892, !645, !2366, !638, !1892}
!4478 = !{!4479, !4480, !4481, !4482, !4483}
!4479 = !DILocalVariable(name: "pattern", arg: 1, scope: !4475, file: !3, line: 1340, type: !645)
!4480 = !DILocalVariable(name: "expr", arg: 2, scope: !4475, file: !3, line: 1340, type: !2366)
!4481 = !DILocalVariable(name: "seqno", arg: 3, scope: !4475, file: !3, line: 1340, type: !638)
!4482 = !DILocalVariable(name: "after", arg: 4, scope: !4475, file: !3, line: 1340, type: !1892)
!4483 = !DILocalVariable(name: "new_insn", scope: !4475, file: !3, line: 1342, type: !1892)
!4484 = !DILocation(line: 0, scope: !4475)
!4485 = !DILocation(line: 1344, column: 3, scope: !4475)
!4486 = !DILocation(line: 1346, column: 14, scope: !4475)
!4487 = !DILocation(line: 1347, column: 3, scope: !4475)
!4488 = !DILocation(line: 1348, column: 3, scope: !4475)
!4489 = !DILocation(line: 1350, column: 3, scope: !4475)
!4490 = distinct !DISubprogram(name: "sel_gen_recovery_insn_from_rtx_after", scope: !3, file: !3, line: 1359, type: !4476, scopeLine: 1361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4491)
!4491 = !{!4492, !4493, !4494, !4495, !4496}
!4492 = !DILocalVariable(name: "pattern", arg: 1, scope: !4490, file: !3, line: 1359, type: !645)
!4493 = !DILocalVariable(name: "expr", arg: 2, scope: !4490, file: !3, line: 1359, type: !2366)
!4494 = !DILocalVariable(name: "seqno", arg: 3, scope: !4490, file: !3, line: 1359, type: !638)
!4495 = !DILocalVariable(name: "after", arg: 4, scope: !4490, file: !3, line: 1360, type: !1892)
!4496 = !DILocalVariable(name: "insn", scope: !4490, file: !3, line: 1362, type: !1892)
!4497 = !DILocation(line: 0, scope: !4490)
!4498 = !DILocation(line: 1364, column: 3, scope: !4490)
!4499 = !DILocation(line: 1366, column: 28, scope: !4490)
!4500 = !DILocation(line: 1367, column: 10, scope: !4490)
!4501 = !DILocation(line: 1368, column: 3, scope: !4490)
!4502 = !DILocation(line: 1368, column: 20, scope: !4490)
!4503 = !DILocation(line: 1369, column: 28, scope: !4490)
!4504 = !DILocation(line: 1371, column: 3, scope: !4490)
!4505 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_base_index", scope: !398, file: !398, line: 846, type: !4506, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4555)
!4506 = !DISubroutineType(types: !4507)
!4507 = !{!4508, !4547, !7}
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4509, size: 64)
!4509 = !DIDerivedType(tag: DW_TAG_typedef, name: "haifa_deps_insn_data_def", file: !398, line: 843, baseType: !4510)
!4510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_haifa_deps_insn_data", file: !398, line: 663, size: 448, elements: !4511)
!4511 = !{!4512, !4513, !4514, !4542, !4543, !4544, !4545, !4546}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "dep_count", scope: !4510, file: !398, line: 668, baseType: !638, size: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "has_internal_dep", scope: !4510, file: !398, line: 672, baseType: !7, size: 32, offset: 32)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "hard_back_deps", scope: !4510, file: !398, line: 682, baseType: !4515, size: 64, offset: 64)
!4515 = !DIDerivedType(tag: DW_TAG_typedef, name: "deps_list_t", file: !398, line: 305, baseType: !4516)
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 64)
!4517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_deps_list", file: !398, line: 297, size: 128, elements: !4518)
!4518 = !{!4519, !4541}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4517, file: !398, line: 300, baseType: !4520, size: 64)
!4520 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_link_t", file: !398, line: 280, baseType: !4521)
!4521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4522, size: 64)
!4522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep_link", file: !398, line: 265, size: 192, elements: !4523)
!4523 = !{!4524, !4538, !4539}
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4522, file: !398, line: 268, baseType: !4525, size: 64)
!4525 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_node_t", file: !398, line: 261, baseType: !4526)
!4526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4527, size: 64)
!4527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep_node", file: !398, line: 405, size: 576, elements: !4528)
!4528 = !{!4529, !4530, !4537}
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !4527, file: !398, line: 408, baseType: !4522, size: 192)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "dep", scope: !4527, file: !398, line: 411, baseType: !4531, size: 192, offset: 192)
!4531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep", file: !398, line: 227, size: 192, elements: !4532)
!4532 = !{!4533, !4534, !4535, !4536}
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "pro", scope: !4531, file: !398, line: 230, baseType: !645, size: 64)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "con", scope: !4531, file: !398, line: 233, baseType: !645, size: 64, offset: 64)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4531, file: !398, line: 237, baseType: !601, size: 32, offset: 128)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4531, file: !398, line: 241, baseType: !1844, size: 32, offset: 160)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "forw", scope: !4527, file: !398, line: 414, baseType: !4522, size: 192, offset: 384)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4522, file: !398, line: 271, baseType: !4521, size: 64, offset: 64)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "prev_nextp", scope: !4522, file: !398, line: 278, baseType: !4540, size: 64, offset: 128)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4521, size: 64)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "n_links", scope: !4517, file: !398, line: 303, baseType: !638, size: 32, offset: 64)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "spec_back_deps", scope: !4510, file: !398, line: 686, baseType: !4515, size: 64, offset: 128)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "forw_deps", scope: !4510, file: !398, line: 690, baseType: !4515, size: 64, offset: 192)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_back_deps", scope: !4510, file: !398, line: 694, baseType: !4515, size: 64, offset: 256)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_forw_deps", scope: !4510, file: !398, line: 699, baseType: !4515, size: 64, offset: 320)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "cant_move", scope: !4510, file: !398, line: 702, baseType: !7, size: 1, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4548, size: 64)
!4548 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_deps_insn_data_def_base", file: !398, line: 846, baseType: !4549)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_deps_insn_data_def_base", file: !398, line: 846, size: 512, elements: !4550)
!4550 = !{!4551, !4552, !4553}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4549, file: !398, line: 846, baseType: !7, size: 32)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4549, file: !398, line: 846, baseType: !7, size: 32, offset: 32)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4549, file: !398, line: 846, baseType: !4554, size: 448, offset: 64)
!4554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4509, size: 448, elements: !680)
!4555 = !{!4556, !4557}
!4556 = !DILocalVariable(name: "vec_", arg: 1, scope: !4505, file: !398, line: 846, type: !4547)
!4557 = !DILocalVariable(name: "ix_", arg: 2, scope: !4505, file: !398, line: 846, type: !7)
!4558 = !DILocation(line: 0, scope: !4505)
!4559 = !DILocation(line: 846, column: 1, scope: !4505)
!4560 = distinct !DISubprogram(name: "sel_gen_insn_from_expr_after", scope: !3, file: !3, line: 1379, type: !4561, scopeLine: 1381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4563)
!4561 = !DISubroutineType(types: !4562)
!4562 = !{!1892, !2366, !1939, !638, !1892}
!4563 = !{!4564, !4565, !4566, !4567, !4568, !4569, !4570}
!4564 = !DILocalVariable(name: "expr", arg: 1, scope: !4560, file: !3, line: 1379, type: !2366)
!4565 = !DILocalVariable(name: "vinsn", arg: 2, scope: !4560, file: !3, line: 1379, type: !1939)
!4566 = !DILocalVariable(name: "seqno", arg: 3, scope: !4560, file: !3, line: 1379, type: !638)
!4567 = !DILocalVariable(name: "after", arg: 4, scope: !4560, file: !3, line: 1380, type: !1892)
!4568 = !DILocalVariable(name: "emit_expr", scope: !4560, file: !3, line: 1382, type: !2366)
!4569 = !DILocalVariable(name: "insn", scope: !4560, file: !3, line: 1383, type: !1892)
!4570 = !DILocalVariable(name: "flags", scope: !4560, file: !3, line: 1384, type: !638)
!4571 = !DILocation(line: 0, scope: !4560)
!4572 = !DILocation(line: 1386, column: 36, scope: !4560)
!4573 = !DILocation(line: 1386, column: 52, scope: !4560)
!4574 = !DILocation(line: 1386, column: 15, scope: !4560)
!4575 = !DILocation(line: 1388, column: 10, scope: !4560)
!4576 = !DILocation(line: 1389, column: 32, scope: !4560)
!4577 = !DILocation(line: 1389, column: 3, scope: !4560)
!4578 = !DILocation(line: 1392, column: 7, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 1392, column: 7)
!4580 = !DILocation(line: 1392, column: 24, scope: !4579)
!4581 = !DILocation(line: 1392, column: 7, scope: !4560)
!4582 = !DILocation(line: 1394, column: 3, scope: !4560)
!4583 = !DILocation(line: 1396, column: 3, scope: !4560)
!4584 = distinct !DISubprogram(name: "sel_move_insn", scope: !3, file: !3, line: 1401, type: !4585, scopeLine: 1402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4587)
!4585 = !DISubroutineType(types: !4586)
!4586 = !{!1892, !2366, !638, !1892}
!4587 = !{!4588, !4589, !4590, !4591, !4592, !4593}
!4588 = !DILocalVariable(name: "expr", arg: 1, scope: !4584, file: !3, line: 1401, type: !2366)
!4589 = !DILocalVariable(name: "seqno", arg: 2, scope: !4584, file: !3, line: 1401, type: !638)
!4590 = !DILocalVariable(name: "after", arg: 3, scope: !4584, file: !3, line: 1401, type: !1892)
!4591 = !DILocalVariable(name: "insn", scope: !4584, file: !3, line: 1403, type: !1892)
!4592 = !DILocalVariable(name: "bb", scope: !4584, file: !3, line: 1404, type: !1179)
!4593 = !DILocalVariable(name: "next", scope: !4584, file: !3, line: 1405, type: !1892)
!4594 = !DILocation(line: 0, scope: !4584)
!4595 = !DILocation(line: 1403, column: 17, scope: !4584)
!4596 = !DILocation(line: 1404, column: 20, scope: !4584)
!4597 = !DILocation(line: 1405, column: 17, scope: !4584)
!4598 = !DILocation(line: 1408, column: 3, scope: !4584)
!4599 = !DILocation(line: 1409, column: 3, scope: !4584)
!4600 = !DILocation(line: 1409, column: 20, scope: !4584)
!4601 = !DILocation(line: 1410, column: 3, scope: !4584)
!4602 = !DILocation(line: 1410, column: 20, scope: !4584)
!4603 = !DILocation(line: 1412, column: 21, scope: !4584)
!4604 = !DILocation(line: 1413, column: 3, scope: !4584)
!4605 = !DILocation(line: 1413, column: 20, scope: !4584)
!4606 = !DILocation(line: 1416, column: 3, scope: !4584)
!4607 = !DILocation(line: 1417, column: 7, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 1417, column: 7)
!4609 = !DILocation(line: 1417, column: 19, scope: !4608)
!4610 = !DILocation(line: 1417, column: 7, scope: !4584)
!4611 = !DILocation(line: 1418, column: 17, scope: !4608)
!4612 = !DILocation(line: 1418, column: 5, scope: !4608)
!4613 = !DILocation(line: 1420, column: 3, scope: !4584)
!4614 = !DILocation(line: 1421, column: 3, scope: !4584)
!4615 = distinct !DISubprogram(name: "prepare_insn_expr", scope: !3, file: !3, line: 1676, type: !4194, scopeLine: 1677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4616)
!4616 = !{!4617, !4618, !4619, !4620}
!4617 = !DILocalVariable(name: "insn", arg: 1, scope: !4615, file: !3, line: 1676, type: !1892)
!4618 = !DILocalVariable(name: "seqno", arg: 2, scope: !4615, file: !3, line: 1676, type: !638)
!4619 = !DILocalVariable(name: "expr", scope: !4615, file: !3, line: 1678, type: !2366)
!4620 = !DILocalVariable(name: "ds", scope: !4615, file: !3, line: 1679, type: !1844)
!4621 = !DILocation(line: 0, scope: !4615)
!4622 = !DILocation(line: 1678, column: 17, scope: !4615)
!4623 = !DILocation(line: 1681, column: 3, scope: !4615)
!4624 = !DILocation(line: 1681, column: 21, scope: !4615)
!4625 = !DILocation(line: 1682, column: 31, scope: !4615)
!4626 = !DILocation(line: 1682, column: 3, scope: !4615)
!4627 = !DILocation(line: 1682, column: 29, scope: !4615)
!4628 = !DILocation(line: 1683, column: 3, scope: !4615)
!4629 = !DILocation(line: 1683, column: 20, scope: !4615)
!4630 = !DILocation(line: 1684, column: 3, scope: !4615)
!4631 = !DILocation(line: 1684, column: 32, scope: !4615)
!4632 = !DILocation(line: 1685, column: 3, scope: !4615)
!4633 = !DILocation(line: 1685, column: 31, scope: !4615)
!4634 = !DILocation(line: 1686, column: 27, scope: !4615)
!4635 = !DILocation(line: 1687, column: 3, scope: !4615)
!4636 = !DILocation(line: 1687, column: 32, scope: !4615)
!4637 = !DILocation(line: 1688, column: 3, scope: !4615)
!4638 = !DILocation(line: 1688, column: 28, scope: !4615)
!4639 = !DILocation(line: 1695, column: 8, scope: !4615)
!4640 = !DILocation(line: 1696, column: 7, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 1696, column: 7)
!4642 = !DILocation(line: 1696, column: 7, scope: !4615)
!4643 = !DILocation(line: 1697, column: 32, scope: !4641)
!4644 = !DILocation(line: 1697, column: 30, scope: !4641)
!4645 = !DILocation(line: 1697, column: 5, scope: !4641)
!4646 = !DILocation(line: 1699, column: 23, scope: !4615)
!4647 = !DILocation(line: 1699, column: 3, scope: !4615)
!4648 = !DILocation(line: 1700, column: 1, scope: !4615)
!4649 = distinct !DISubprogram(name: "find_in_history_vect", scope: !3, file: !3, line: 1478, type: !4650, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4652)
!4650 = !DISubroutineType(types: !4651)
!4651 = !{!638, !1968, !645, !1939, !637}
!4652 = !{!4653, !4654, !4655, !4656, !4657, !4658, !4661}
!4653 = !DILocalVariable(name: "vect", arg: 1, scope: !4649, file: !3, line: 1478, type: !1968)
!4654 = !DILocalVariable(name: "insn", arg: 2, scope: !4649, file: !3, line: 1478, type: !645)
!4655 = !DILocalVariable(name: "new_vinsn", arg: 3, scope: !4649, file: !3, line: 1479, type: !1939)
!4656 = !DILocalVariable(name: "originators_p", arg: 4, scope: !4649, file: !3, line: 1479, type: !637)
!4657 = !DILocalVariable(name: "ind", scope: !4649, file: !3, line: 1481, type: !638)
!4658 = !DILocalVariable(name: "uid", scope: !4659, file: !3, line: 1489, type: !7)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 1488, column: 5)
!4660 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 1487, column: 7)
!4661 = !DILocalVariable(name: "bi", scope: !4659, file: !3, line: 1490, type: !4662)
!4662 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !701, line: 218, baseType: !4663)
!4663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !701, line: 203, size: 256, elements: !4664)
!4664 = !{!4665, !4666, !4667, !4668}
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !4663, file: !701, line: 206, baseType: !704, size: 64)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !4663, file: !701, line: 209, baseType: !704, size: 64, offset: 64)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !4663, file: !701, line: 212, baseType: !7, size: 32, offset: 128)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !4663, file: !701, line: 217, baseType: !714, size: 64, offset: 192)
!4669 = !DILocation(line: 0, scope: !4649)
!4670 = !DILocation(line: 1481, column: 3, scope: !4649)
!4671 = !DILocation(line: 1483, column: 37, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 1483, column: 7)
!4673 = !DILocation(line: 1483, column: 7, scope: !4672)
!4674 = !DILocation(line: 1483, column: 7, scope: !4649)
!4675 = !DILocation(line: 1485, column: 12, scope: !4672)
!4676 = !DILocation(line: 1485, column: 5, scope: !4672)
!4677 = !DILocation(line: 1487, column: 7, scope: !4660)
!4678 = !DILocation(line: 1487, column: 34, scope: !4660)
!4679 = !DILocation(line: 1487, column: 31, scope: !4660)
!4680 = !DILocation(line: 1489, column: 7, scope: !4659)
!4681 = !DILocation(line: 1490, column: 7, scope: !4659)
!4682 = !DILocation(line: 1492, column: 7, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 1492, column: 7)
!4684 = !DILocation(line: 0, scope: !4659)
!4685 = !DILocation(line: 1492, column: 7, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 1492, column: 7)
!4687 = !DILocation(line: 1493, column: 43, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 1493, column: 13)
!4689 = !DILocation(line: 1493, column: 13, scope: !4688)
!4690 = !DILocation(line: 1493, column: 13, scope: !4686)
!4691 = !DILocation(line: 1494, column: 18, scope: !4688)
!4692 = !DILocation(line: 1494, column: 11, scope: !4688)
!4693 = distinct !{!4693, !4682, !4694}
!4694 = !DILocation(line: 1494, column: 18, scope: !4683)
!4695 = !DILocation(line: 1495, column: 5, scope: !4660)
!4696 = !DILocation(line: 1497, column: 3, scope: !4649)
!4697 = !DILocation(line: 1498, column: 1, scope: !4649)
!4698 = distinct !DISubprogram(name: "find_in_history_vect_1", scope: !3, file: !3, line: 1433, type: !4699, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4701)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{!637, !1968, !7, !1939, !637, !1839}
!4701 = !{!4702, !4703, !4704, !4705, !4706, !4707, !4709, !4710, !4711, !4712, !4714}
!4702 = !DILocalVariable(name: "vect", arg: 1, scope: !4698, file: !3, line: 1433, type: !1968)
!4703 = !DILocalVariable(name: "uid", arg: 2, scope: !4698, file: !3, line: 1434, type: !7)
!4704 = !DILocalVariable(name: "new_vinsn", arg: 3, scope: !4698, file: !3, line: 1434, type: !1939)
!4705 = !DILocalVariable(name: "compare_vinsns", arg: 4, scope: !4698, file: !3, line: 1435, type: !637)
!4706 = !DILocalVariable(name: "indp", arg: 5, scope: !4698, file: !3, line: 1435, type: !1839)
!4707 = !DILocalVariable(name: "arr", scope: !4698, file: !3, line: 1437, type: !4708)
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!4709 = !DILocalVariable(name: "i", scope: !4698, file: !3, line: 1438, type: !638)
!4710 = !DILocalVariable(name: "j", scope: !4698, file: !3, line: 1438, type: !638)
!4711 = !DILocalVariable(name: "len", scope: !4698, file: !3, line: 1438, type: !638)
!4712 = !DILocalVariable(name: "auid", scope: !4713, file: !3, line: 1451, type: !7)
!4713 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 1450, column: 5)
!4714 = !DILocalVariable(name: "avinsn", scope: !4713, file: !3, line: 1452, type: !1939)
!4715 = !DILocation(line: 0, scope: !4698)
!4716 = !DILocation(line: 1438, column: 19, scope: !4698)
!4717 = !DILocation(line: 1440, column: 11, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 1440, column: 7)
!4719 = !DILocation(line: 1440, column: 7, scope: !4698)
!4720 = !DILocation(line: 1442, column: 13, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 1441, column: 5)
!4722 = !DILocation(line: 1443, column: 7, scope: !4721)
!4723 = !DILocation(line: 1446, column: 9, scope: !4698)
!4724 = !DILocation(line: 0, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 1454, column: 11)
!4726 = !DILocation(line: 1449, column: 3, scope: !4698)
!4727 = !DILocation(line: 1447, column: 5, scope: !4698)
!4728 = !DILocation(line: 1449, column: 12, scope: !4698)
!4729 = !DILocation(line: 1451, column: 23, scope: !4713)
!4730 = !DILocation(line: 1451, column: 30, scope: !4713)
!4731 = !DILocation(line: 0, scope: !4713)
!4732 = !DILocation(line: 1454, column: 16, scope: !4725)
!4733 = !DILocation(line: 1459, column: 11, scope: !4725)
!4734 = !DILocation(line: 1462, column: 17, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 1461, column: 9)
!4736 = !DILocation(line: 1463, column: 11, scope: !4735)
!4737 = !DILocation(line: 1465, column: 21, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 1465, column: 16)
!4739 = !DILocation(line: 1465, column: 16, scope: !4725)
!4740 = distinct !{!4740, !4726, !4741}
!4741 = !DILocation(line: 1468, column: 5, scope: !4698)
!4742 = !DILocation(line: 1470, column: 9, scope: !4698)
!4743 = !DILocation(line: 1472, column: 1, scope: !4698)
!4744 = !DILocation(line: 1452, column: 31, scope: !4713)
!4745 = !DILocation(line: 1460, column: 18, scope: !4725)
!4746 = !DILocation(line: 1454, column: 11, scope: !4713)
!4747 = !DILocation(line: 1471, column: 3, scope: !4698)
!4748 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !701, file: !701, line: 224, type: !4749, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4756)
!4749 = !DISubroutineType(types: !4750)
!4750 = !{null, !4751, !4752, !7, !4755}
!4751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4752 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !646, line: 48, baseType: !4753)
!4753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4754, size: 64)
!4754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !700)
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4756 = !{!4757, !4758, !4759, !4760}
!4757 = !DILocalVariable(name: "bi", arg: 1, scope: !4748, file: !701, line: 224, type: !4751)
!4758 = !DILocalVariable(name: "map", arg: 2, scope: !4748, file: !701, line: 224, type: !4752)
!4759 = !DILocalVariable(name: "start_bit", arg: 3, scope: !4748, file: !701, line: 225, type: !7)
!4760 = !DILocalVariable(name: "bit_no", arg: 4, scope: !4748, file: !701, line: 225, type: !4755)
!4761 = !DILocation(line: 0, scope: !4748)
!4762 = !DILocation(line: 227, column: 19, scope: !4748)
!4763 = !DILocation(line: 227, column: 12, scope: !4748)
!4764 = !DILocation(line: 228, column: 7, scope: !4748)
!4765 = !DILocation(line: 228, column: 12, scope: !4748)
!4766 = !DILocation(line: 0, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !701, line: 233, column: 11)
!4768 = distinct !DILexicalBlock(scope: !4748, file: !701, line: 232, column: 5)
!4769 = !DILocation(line: 231, column: 3, scope: !4748)
!4770 = !DILocation(line: 233, column: 12, scope: !4767)
!4771 = !DILocation(line: 233, column: 11, scope: !4768)
!4772 = !DILocation(line: 235, column: 13, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4767, file: !701, line: 234, column: 2)
!4774 = !DILocation(line: 236, column: 4, scope: !4773)
!4775 = !DILocation(line: 239, column: 11, scope: !4768)
!4776 = distinct !{!4776, !4769, !4777}
!4777 = !DILocation(line: 242, column: 5, scope: !4748)
!4778 = !DILocation(line: 245, column: 11, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4748, file: !701, line: 245, column: 7)
!4780 = !DILocation(line: 245, column: 17, scope: !4779)
!4781 = !DILocation(line: 245, column: 22, scope: !4779)
!4782 = !DILocation(line: 245, column: 7, scope: !4748)
!4783 = !DILocation(line: 246, column: 27, scope: !4779)
!4784 = !DILocation(line: 246, column: 32, scope: !4779)
!4785 = !DILocation(line: 246, column: 5, scope: !4779)
!4786 = !DILocation(line: 249, column: 7, scope: !4748)
!4787 = !DILocation(line: 249, column: 15, scope: !4748)
!4788 = !DILocation(line: 250, column: 14, scope: !4748)
!4789 = !DILocation(line: 251, column: 7, scope: !4748)
!4790 = !DILocation(line: 251, column: 12, scope: !4748)
!4791 = !DILocation(line: 257, column: 16, scope: !4748)
!4792 = !DILocation(line: 257, column: 13, scope: !4748)
!4793 = !DILocation(line: 259, column: 11, scope: !4748)
!4794 = !DILocation(line: 260, column: 1, scope: !4748)
!4795 = distinct !DISubprogram(name: "bmp_iter_set", scope: !701, file: !701, line: 393, type: !4796, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4798)
!4796 = !DISubroutineType(types: !4797)
!4797 = !{!637, !4751, !4755}
!4798 = !{!4799, !4800, !4801}
!4799 = !DILocalVariable(name: "bi", arg: 1, scope: !4795, file: !701, line: 393, type: !4751)
!4800 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4795, file: !701, line: 393, type: !4755)
!4801 = !DILabel(scope: !4802, name: "next_bit", file: !701, line: 398)
!4802 = distinct !DILexicalBlock(scope: !4803, file: !701, line: 397, column: 5)
!4803 = distinct !DILexicalBlock(scope: !4795, file: !701, line: 396, column: 7)
!4804 = !DILocation(line: 0, scope: !4795)
!4805 = !DILocation(line: 396, column: 11, scope: !4803)
!4806 = !DILocation(line: 396, column: 7, scope: !4803)
!4807 = !DILocation(line: 396, column: 7, scope: !4795)
!4808 = !DILocation(line: 419, column: 15, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4810, file: !701, line: 418, column: 2)
!4810 = distinct !DILexicalBlock(scope: !4795, file: !701, line: 415, column: 5)
!4811 = !DILocation(line: 399, column: 7, scope: !4802)
!4812 = !DILocation(line: 398, column: 5, scope: !4802)
!4813 = !DILocation(line: 399, column: 20, scope: !4802)
!4814 = !DILocation(line: 399, column: 25, scope: !4802)
!4815 = !DILocation(line: 399, column: 14, scope: !4802)
!4816 = !DILocation(line: 401, column: 13, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4802, file: !701, line: 400, column: 2)
!4818 = !DILocation(line: 402, column: 12, scope: !4817)
!4819 = distinct !{!4819, !4811, !4820}
!4820 = !DILocation(line: 403, column: 2, scope: !4802)
!4821 = !DILocation(line: 410, column: 15, scope: !4795)
!4822 = !DILocation(line: 410, column: 42, scope: !4795)
!4823 = !DILocation(line: 411, column: 26, scope: !4795)
!4824 = !DILocation(line: 410, column: 11, scope: !4795)
!4825 = !DILocation(line: 412, column: 7, scope: !4795)
!4826 = !DILocation(line: 412, column: 14, scope: !4795)
!4827 = !DILocation(line: 0, scope: !4810)
!4828 = !DILocation(line: 414, column: 3, scope: !4795)
!4829 = !DILocation(line: 417, column: 7, scope: !4810)
!4830 = !DILocation(line: 417, column: 18, scope: !4810)
!4831 = !DILocation(line: 417, column: 26, scope: !4810)
!4832 = !DILocation(line: 419, column: 13, scope: !4809)
!4833 = !DILocation(line: 420, column: 8, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4809, file: !701, line: 420, column: 8)
!4835 = !DILocation(line: 420, column: 8, scope: !4809)
!4836 = !DILocation(line: 422, column: 12, scope: !4809)
!4837 = !DILocation(line: 423, column: 15, scope: !4809)
!4838 = distinct !{!4838, !4829, !4839}
!4839 = !DILocation(line: 424, column: 2, scope: !4810)
!4840 = !DILocation(line: 427, column: 28, scope: !4810)
!4841 = !DILocation(line: 427, column: 16, scope: !4810)
!4842 = !DILocation(line: 428, column: 12, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4810, file: !701, line: 428, column: 11)
!4844 = !DILocation(line: 428, column: 11, scope: !4810)
!4845 = !DILocation(line: 430, column: 27, scope: !4810)
!4846 = !DILocation(line: 430, column: 32, scope: !4810)
!4847 = !DILocation(line: 430, column: 15, scope: !4810)
!4848 = !DILocation(line: 431, column: 19, scope: !4810)
!4849 = distinct !{!4849, !4828, !4850}
!4850 = !DILocation(line: 432, column: 5, scope: !4795)
!4851 = !DILocation(line: 433, column: 1, scope: !4795)
!4852 = distinct !DISubprogram(name: "bmp_iter_next", scope: !701, file: !701, line: 382, type: !4853, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4855)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{null, !4751, !4755}
!4855 = !{!4856, !4857}
!4856 = !DILocalVariable(name: "bi", arg: 1, scope: !4852, file: !701, line: 382, type: !4751)
!4857 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4852, file: !701, line: 382, type: !4755)
!4858 = !DILocation(line: 0, scope: !4852)
!4859 = !DILocation(line: 384, column: 7, scope: !4852)
!4860 = !DILocation(line: 384, column: 12, scope: !4852)
!4861 = !DILocation(line: 385, column: 11, scope: !4852)
!4862 = !DILocation(line: 386, column: 1, scope: !4852)
!4863 = distinct !DISubprogram(name: "insert_in_history_vect", scope: !3, file: !3, line: 1505, type: !4864, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4867)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{null, !4866, !7, !408, !1939, !1939, !1844}
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!4867 = !{!4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4878}
!4868 = !DILocalVariable(name: "pvect", arg: 1, scope: !4863, file: !3, line: 1505, type: !4866)
!4869 = !DILocalVariable(name: "uid", arg: 2, scope: !4863, file: !3, line: 1506, type: !7)
!4870 = !DILocalVariable(name: "type", arg: 3, scope: !4863, file: !3, line: 1506, type: !408)
!4871 = !DILocalVariable(name: "old_expr_vinsn", arg: 4, scope: !4863, file: !3, line: 1507, type: !1939)
!4872 = !DILocalVariable(name: "new_expr_vinsn", arg: 5, scope: !4863, file: !3, line: 1507, type: !1939)
!4873 = !DILocalVariable(name: "spec_ds", arg: 6, scope: !4863, file: !3, line: 1508, type: !1844)
!4874 = !DILocalVariable(name: "vect", scope: !4863, file: !3, line: 1510, type: !1968)
!4875 = !DILocalVariable(name: "temp", scope: !4863, file: !3, line: 1511, type: !1980)
!4876 = !DILocalVariable(name: "res", scope: !4863, file: !3, line: 1512, type: !637)
!4877 = !DILocalVariable(name: "ind", scope: !4863, file: !3, line: 1513, type: !638)
!4878 = !DILocalVariable(name: "phist", scope: !4879, file: !3, line: 1519, type: !4708)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 1518, column: 5)
!4880 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 1517, column: 7)
!4881 = !DILocation(line: 0, scope: !4863)
!4882 = !DILocation(line: 1510, column: 3, scope: !4863)
!4883 = !DILocation(line: 1510, column: 39, scope: !4863)
!4884 = !DILocation(line: 1510, column: 32, scope: !4863)
!4885 = !DILocation(line: 1511, column: 3, scope: !4863)
!4886 = !DILocation(line: 1513, column: 3, scope: !4863)
!4887 = !DILocation(line: 1515, column: 33, scope: !4863)
!4888 = !DILocation(line: 1515, column: 9, scope: !4863)
!4889 = !DILocation(line: 1517, column: 7, scope: !4880)
!4890 = !DILocation(line: 1517, column: 7, scope: !4863)
!4891 = !DILocation(line: 1519, column: 33, scope: !4879)
!4892 = !DILocation(line: 0, scope: !4879)
!4893 = !DILocation(line: 1524, column: 18, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 1524, column: 11)
!4895 = !DILocation(line: 1524, column: 26, scope: !4894)
!4896 = !DILocation(line: 1524, column: 11, scope: !4879)
!4897 = !DILocation(line: 1525, column: 26, scope: !4894)
!4898 = !DILocation(line: 1525, column: 24, scope: !4894)
!4899 = !DILocation(line: 1525, column: 9, scope: !4894)
!4900 = !DILocation(line: 1529, column: 8, scope: !4863)
!4901 = !DILocation(line: 1529, column: 12, scope: !4863)
!4902 = !DILocation(line: 1530, column: 8, scope: !4863)
!4903 = !DILocation(line: 1530, column: 23, scope: !4863)
!4904 = !DILocation(line: 1531, column: 8, scope: !4863)
!4905 = !DILocation(line: 1531, column: 23, scope: !4863)
!4906 = !DILocation(line: 1532, column: 8, scope: !4863)
!4907 = !DILocation(line: 1532, column: 16, scope: !4863)
!4908 = !DILocation(line: 1533, column: 8, scope: !4863)
!4909 = !DILocation(line: 1533, column: 13, scope: !4863)
!4910 = !DILocation(line: 1535, column: 3, scope: !4863)
!4911 = !DILocation(line: 1536, column: 3, scope: !4863)
!4912 = !DILocation(line: 1537, column: 3, scope: !4863)
!4913 = !DILocation(line: 1538, column: 12, scope: !4863)
!4914 = !DILocation(line: 1538, column: 10, scope: !4863)
!4915 = !DILocation(line: 1539, column: 1, scope: !4863)
!4916 = distinct !DISubprogram(name: "VEC_expr_history_def_base_index", scope: !409, file: !409, line: 101, type: !4917, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4920)
!4917 = !DISubroutineType(types: !4918)
!4918 = !{!4708, !4919, !7}
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!4920 = !{!4921, !4922}
!4921 = !DILocalVariable(name: "vec_", arg: 1, scope: !4916, file: !409, line: 101, type: !4919)
!4922 = !DILocalVariable(name: "ix_", arg: 2, scope: !4916, file: !409, line: 101, type: !7)
!4923 = !DILocation(line: 0, scope: !4916)
!4924 = !DILocation(line: 101, column: 1, scope: !4916)
!4925 = distinct !DISubprogram(name: "VEC_expr_history_def_heap_safe_insert", scope: !409, file: !409, line: 102, type: !4926, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4930)
!4926 = !DISubroutineType(types: !4927)
!4927 = !{!4708, !4866, !7, !4928}
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 64)
!4929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1980)
!4930 = !{!4931, !4932, !4933}
!4931 = !DILocalVariable(name: "vec_", arg: 1, scope: !4925, file: !409, line: 102, type: !4866)
!4932 = !DILocalVariable(name: "ix_", arg: 2, scope: !4925, file: !409, line: 102, type: !7)
!4933 = !DILocalVariable(name: "obj_", arg: 3, scope: !4925, file: !409, line: 102, type: !4928)
!4934 = !DILocation(line: 0, scope: !4925)
!4935 = !DILocation(line: 102, column: 1, scope: !4925)
!4936 = distinct !DISubprogram(name: "vinsn_equal_p", scope: !3, file: !3, line: 1566, type: !4937, scopeLine: 1567, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4939)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{!637, !1939, !1939}
!4939 = !{!4940, !4941, !4942}
!4940 = !DILocalVariable(name: "x", arg: 1, scope: !4936, file: !3, line: 1566, type: !1939)
!4941 = !DILocalVariable(name: "y", arg: 2, scope: !4936, file: !3, line: 1566, type: !1939)
!4942 = !DILocalVariable(name: "repcf", scope: !4936, file: !3, line: 1568, type: !4943)
!4943 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx_equal_p_callback_function", file: !414, line: 1878, baseType: !4944)
!4944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4945, size: 64)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{!638, !4947, !4947, !1843, !1843}
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!4948 = !DILocation(line: 0, scope: !4936)
!4949 = !DILocation(line: 1570, column: 9, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 1570, column: 7)
!4951 = !DILocation(line: 1570, column: 7, scope: !4936)
!4952 = !DILocation(line: 1573, column: 7, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 1573, column: 7)
!4954 = !DILocation(line: 1573, column: 25, scope: !4953)
!4955 = !DILocation(line: 1573, column: 22, scope: !4953)
!4956 = !DILocation(line: 1573, column: 7, scope: !4936)
!4957 = !DILocation(line: 1576, column: 7, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 1576, column: 7)
!4959 = !DILocation(line: 1576, column: 25, scope: !4958)
!4960 = !DILocation(line: 1576, column: 22, scope: !4958)
!4961 = !DILocation(line: 1576, column: 7, scope: !4936)
!4962 = !DILocation(line: 1579, column: 25, scope: !4936)
!4963 = !DILocation(line: 1579, column: 11, scope: !4936)
!4964 = !DILocation(line: 1580, column: 7, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 1580, column: 7)
!4966 = !DILocation(line: 1580, column: 7, scope: !4936)
!4967 = !DILocation(line: 1583, column: 7, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 1581, column: 5)
!4969 = !DILocation(line: 1584, column: 7, scope: !4968)
!4970 = !DILocation(line: 1586, column: 45, scope: !4968)
!4971 = !DILocation(line: 1586, column: 30, scope: !4968)
!4972 = !DILocation(line: 1586, column: 14, scope: !4968)
!4973 = !DILocation(line: 1586, column: 7, scope: !4968)
!4974 = !DILocation(line: 1589, column: 26, scope: !4936)
!4975 = !DILocation(line: 1589, column: 45, scope: !4936)
!4976 = !DILocation(line: 1589, column: 10, scope: !4936)
!4977 = !DILocation(line: 1589, column: 3, scope: !4936)
!4978 = !DILocation(line: 1590, column: 1, scope: !4936)
!4979 = distinct !DISubprogram(name: "skip_unspecs_callback", scope: !3, file: !3, line: 1086, type: !4945, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4980)
!4980 = !{!4981, !4982, !4983, !4984, !4985, !4986}
!4981 = !DILocalVariable(name: "xx", arg: 1, scope: !4979, file: !3, line: 1086, type: !4947)
!4982 = !DILocalVariable(name: "yy", arg: 2, scope: !4979, file: !3, line: 1086, type: !4947)
!4983 = !DILocalVariable(name: "nx", arg: 3, scope: !4979, file: !3, line: 1086, type: !1843)
!4984 = !DILocalVariable(name: "ny", arg: 4, scope: !4979, file: !3, line: 1086, type: !1843)
!4985 = !DILocalVariable(name: "x", scope: !4979, file: !3, line: 1088, type: !2498)
!4986 = !DILocalVariable(name: "y", scope: !4979, file: !3, line: 1089, type: !2498)
!4987 = !DILocation(line: 0, scope: !4979)
!4988 = !DILocation(line: 1088, column: 17, scope: !4979)
!4989 = !DILocation(line: 1089, column: 17, scope: !4979)
!4990 = !DILocation(line: 1091, column: 7, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 1091, column: 7)
!4992 = !DILocation(line: 1091, column: 20, scope: !4991)
!4993 = !DILocation(line: 1092, column: 7, scope: !4991)
!4994 = !DILocation(line: 1092, column: 25, scope: !4991)
!4995 = !DILocation(line: 1092, column: 36, scope: !4991)
!4996 = !DILocation(line: 1093, column: 11, scope: !4991)
!4997 = !DILocation(line: 1093, column: 14, scope: !4991)
!4998 = !DILocation(line: 1091, column: 7, scope: !4979)
!4999 = !DILocation(line: 1095, column: 13, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 1094, column: 5)
!5001 = !DILocation(line: 1095, column: 11, scope: !5000)
!5002 = !DILocation(line: 1096, column: 11, scope: !5000)
!5003 = !DILocation(line: 1097, column: 7, scope: !5000)
!5004 = !DILocation(line: 1100, column: 7, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 1100, column: 7)
!5006 = !DILocation(line: 1100, column: 20, scope: !5005)
!5007 = !DILocation(line: 1101, column: 7, scope: !5005)
!5008 = !DILocation(line: 1101, column: 25, scope: !5005)
!5009 = !DILocation(line: 1101, column: 36, scope: !5005)
!5010 = !DILocation(line: 1102, column: 11, scope: !5005)
!5011 = !DILocation(line: 1102, column: 14, scope: !5005)
!5012 = !DILocation(line: 1100, column: 7, scope: !4979)
!5013 = !DILocation(line: 1104, column: 11, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 1103, column: 5)
!5015 = !DILocation(line: 1105, column: 13, scope: !5014)
!5016 = !DILocation(line: 1105, column: 11, scope: !5014)
!5017 = !DILocation(line: 1106, column: 7, scope: !5014)
!5018 = !DILocation(line: 1110, column: 1, scope: !4979)
!5019 = distinct !DISubprogram(name: "copy_expr", scope: !3, file: !3, line: 1631, type: !5020, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5022)
!5020 = !DISubroutineType(types: !5021)
!5021 = !{null, !2366, !2366}
!5022 = !{!5023, !5024, !5025, !5026, !5029}
!5023 = !DILocalVariable(name: "to", arg: 1, scope: !5019, file: !3, line: 1631, type: !2366)
!5024 = !DILocalVariable(name: "from", arg: 2, scope: !5019, file: !3, line: 1631, type: !2366)
!5025 = !DILocalVariable(name: "temp", scope: !5019, file: !3, line: 1633, type: !1968)
!5026 = !DILocalVariable(name: "i", scope: !5027, file: !3, line: 1637, type: !7)
!5027 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 1636, column: 5)
!5028 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 1635, column: 7)
!5029 = !DILocalVariable(name: "phist", scope: !5027, file: !3, line: 1638, type: !4708)
!5030 = !DILocation(line: 0, scope: !5019)
!5031 = !DILocation(line: 1635, column: 7, scope: !5028)
!5032 = !DILocation(line: 1635, column: 7, scope: !5019)
!5033 = !DILocation(line: 1638, column: 7, scope: !5027)
!5034 = !DILocation(line: 1640, column: 14, scope: !5027)
!5035 = !DILocation(line: 0, scope: !5027)
!5036 = !DILocation(line: 0, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 1641, column: 7)
!5038 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 1641, column: 7)
!5039 = !DILocation(line: 1641, column: 12, scope: !5038)
!5040 = !DILocation(line: 0, scope: !5038)
!5041 = !DILocation(line: 1642, column: 12, scope: !5037)
!5042 = !DILocation(line: 1641, column: 7, scope: !5038)
!5043 = !DILocation(line: 1645, column: 25, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 1644, column: 9)
!5045 = !DILocation(line: 1645, column: 32, scope: !5044)
!5046 = !DILocation(line: 1645, column: 11, scope: !5044)
!5047 = !DILocation(line: 1646, column: 25, scope: !5044)
!5048 = !DILocation(line: 1646, column: 32, scope: !5044)
!5049 = !DILocation(line: 1646, column: 11, scope: !5044)
!5050 = !DILocation(line: 1643, column: 13, scope: !5037)
!5051 = !DILocation(line: 1641, column: 7, scope: !5037)
!5052 = distinct !{!5052, !5042, !5053}
!5053 = !DILocation(line: 1647, column: 9, scope: !5038)
!5054 = !DILocation(line: 1648, column: 5, scope: !5028)
!5055 = !DILocation(line: 1648, column: 5, scope: !5027)
!5056 = !DILocation(line: 1650, column: 18, scope: !5019)
!5057 = !DILocation(line: 1650, column: 37, scope: !5019)
!5058 = !DILocation(line: 1651, column: 14, scope: !5019)
!5059 = !DILocation(line: 1651, column: 38, scope: !5019)
!5060 = !DILocation(line: 1652, column: 7, scope: !5019)
!5061 = !DILocation(line: 1652, column: 32, scope: !5019)
!5062 = !DILocation(line: 1653, column: 7, scope: !5019)
!5063 = !DILocation(line: 1653, column: 33, scope: !5019)
!5064 = !DILocation(line: 1654, column: 7, scope: !5019)
!5065 = !DILocation(line: 1655, column: 14, scope: !5019)
!5066 = !DILocation(line: 1655, column: 44, scope: !5019)
!5067 = !DILocation(line: 1656, column: 14, scope: !5019)
!5068 = !DILocation(line: 1656, column: 39, scope: !5019)
!5069 = !DILocation(line: 1657, column: 14, scope: !5019)
!5070 = !DILocation(line: 1650, column: 3, scope: !5019)
!5071 = !DILocation(line: 1658, column: 1, scope: !5019)
!5072 = distinct !DISubprogram(name: "VEC_expr_history_def_heap_copy", scope: !409, file: !409, line: 102, type: !5073, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5075)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{!1968, !4919}
!5075 = !{!5076, !5077, !5078}
!5076 = !DILocalVariable(name: "vec_", arg: 1, scope: !5072, file: !409, line: 102, type: !4919)
!5077 = !DILocalVariable(name: "len_", scope: !5072, file: !409, line: 102, type: !1117)
!5078 = !DILocalVariable(name: "new_vec_", scope: !5072, file: !409, line: 102, type: !1968)
!5079 = !DILocation(line: 0, scope: !5072)
!5080 = !DILocation(line: 102, column: 1, scope: !5072)
!5081 = !DILocation(line: 102, column: 1, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5072, file: !409, line: 102, column: 1)
!5083 = !DILocation(line: 102, column: 1, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5082, file: !409, line: 102, column: 1)
!5085 = distinct !DISubprogram(name: "VEC_expr_history_def_base_iterate", scope: !409, file: !409, line: 101, type: !5086, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5089)
!5086 = !DISubroutineType(types: !5087)
!5087 = !{!638, !4919, !7, !5088}
!5088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 64)
!5089 = !{!5090, !5091, !5092}
!5090 = !DILocalVariable(name: "vec_", arg: 1, scope: !5085, file: !409, line: 101, type: !4919)
!5091 = !DILocalVariable(name: "ix_", arg: 2, scope: !5085, file: !409, line: 101, type: !7)
!5092 = !DILocalVariable(name: "ptr", arg: 3, scope: !5085, file: !409, line: 101, type: !5088)
!5093 = !DILocation(line: 0, scope: !5085)
!5094 = !DILocation(line: 101, column: 1, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5085, file: !409, line: 101, column: 1)
!5096 = !DILocation(line: 101, column: 1, scope: !5085)
!5097 = !DILocation(line: 101, column: 1, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5095, file: !409, line: 101, column: 1)
!5099 = !DILocation(line: 101, column: 1, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5095, file: !409, line: 101, column: 1)
!5101 = !DILocation(line: 0, scope: !5095)
!5102 = distinct !DISubprogram(name: "init_expr", scope: !3, file: !3, line: 1597, type: !5103, scopeLine: 1603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5105)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{null, !2366, !1939, !638, !638, !638, !638, !638, !1844, !1844, !638, !1968, !637, !637, !637, !637, !637}
!5105 = !{!5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121}
!5106 = !DILocalVariable(name: "expr", arg: 1, scope: !5102, file: !3, line: 1597, type: !2366)
!5107 = !DILocalVariable(name: "vi", arg: 2, scope: !5102, file: !3, line: 1597, type: !1939)
!5108 = !DILocalVariable(name: "spec", arg: 3, scope: !5102, file: !3, line: 1597, type: !638)
!5109 = !DILocalVariable(name: "use", arg: 4, scope: !5102, file: !3, line: 1597, type: !638)
!5110 = !DILocalVariable(name: "priority", arg: 5, scope: !5102, file: !3, line: 1597, type: !638)
!5111 = !DILocalVariable(name: "sched_times", arg: 6, scope: !5102, file: !3, line: 1598, type: !638)
!5112 = !DILocalVariable(name: "orig_bb_index", arg: 7, scope: !5102, file: !3, line: 1598, type: !638)
!5113 = !DILocalVariable(name: "spec_done_ds", arg: 8, scope: !5102, file: !3, line: 1598, type: !1844)
!5114 = !DILocalVariable(name: "spec_to_check_ds", arg: 9, scope: !5102, file: !3, line: 1599, type: !1844)
!5115 = !DILocalVariable(name: "orig_sched_cycle", arg: 10, scope: !5102, file: !3, line: 1599, type: !638)
!5116 = !DILocalVariable(name: "history", arg: 11, scope: !5102, file: !3, line: 1600, type: !1968)
!5117 = !DILocalVariable(name: "target_available", arg: 12, scope: !5102, file: !3, line: 1600, type: !637)
!5118 = !DILocalVariable(name: "was_substituted", arg: 13, scope: !5102, file: !3, line: 1601, type: !637)
!5119 = !DILocalVariable(name: "was_renamed", arg: 14, scope: !5102, file: !3, line: 1601, type: !637)
!5120 = !DILocalVariable(name: "needs_spec_check_p", arg: 15, scope: !5102, file: !3, line: 1601, type: !637)
!5121 = !DILocalVariable(name: "cant_move", arg: 16, scope: !5102, file: !3, line: 1602, type: !637)
!5122 = !DILocation(line: 0, scope: !5102)
!5123 = !DILocation(line: 1604, column: 3, scope: !5102)
!5124 = !DILocation(line: 1606, column: 3, scope: !5102)
!5125 = !DILocation(line: 1606, column: 21, scope: !5102)
!5126 = !DILocation(line: 1607, column: 3, scope: !5102)
!5127 = !DILocation(line: 1607, column: 20, scope: !5102)
!5128 = !DILocation(line: 1608, column: 3, scope: !5102)
!5129 = !DILocation(line: 1608, column: 26, scope: !5102)
!5130 = !DILocation(line: 1609, column: 3, scope: !5102)
!5131 = !DILocation(line: 1609, column: 24, scope: !5102)
!5132 = !DILocation(line: 1610, column: 3, scope: !5102)
!5133 = !DILocation(line: 1610, column: 28, scope: !5102)
!5134 = !DILocation(line: 1611, column: 3, scope: !5102)
!5135 = !DILocation(line: 1611, column: 27, scope: !5102)
!5136 = !DILocation(line: 1612, column: 3, scope: !5102)
!5137 = !DILocation(line: 1612, column: 29, scope: !5102)
!5138 = !DILocation(line: 1613, column: 3, scope: !5102)
!5139 = !DILocation(line: 1613, column: 32, scope: !5102)
!5140 = !DILocation(line: 1614, column: 3, scope: !5102)
!5141 = !DILocation(line: 1614, column: 28, scope: !5102)
!5142 = !DILocation(line: 1615, column: 3, scope: !5102)
!5143 = !DILocation(line: 1615, column: 32, scope: !5102)
!5144 = !DILocation(line: 1617, column: 7, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 1617, column: 7)
!5146 = !DILocation(line: 0, scope: !5145)
!5147 = !DILocation(line: 1617, column: 7, scope: !5102)
!5148 = !DILocation(line: 1618, column: 5, scope: !5145)
!5149 = !DILocation(line: 1622, column: 3, scope: !5102)
!5150 = !DILocation(line: 1622, column: 32, scope: !5102)
!5151 = !DILocation(line: 1623, column: 3, scope: !5102)
!5152 = !DILocation(line: 1623, column: 31, scope: !5102)
!5153 = !DILocation(line: 1624, column: 27, scope: !5102)
!5154 = !DILocation(line: 1625, column: 34, scope: !5102)
!5155 = !DILocation(line: 1626, column: 25, scope: !5102)
!5156 = !DILocation(line: 1627, column: 1, scope: !5102)
!5157 = distinct !DISubprogram(name: "copy_expr_onside", scope: !3, file: !3, line: 1663, type: !5020, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5158)
!5158 = !{!5159, !5160}
!5159 = !DILocalVariable(name: "to", arg: 1, scope: !5157, file: !3, line: 1663, type: !2366)
!5160 = !DILocalVariable(name: "from", arg: 2, scope: !5157, file: !3, line: 1663, type: !2366)
!5161 = !DILocation(line: 0, scope: !5157)
!5162 = !DILocation(line: 1665, column: 18, scope: !5157)
!5163 = !DILocation(line: 1665, column: 37, scope: !5157)
!5164 = !DILocation(line: 1665, column: 55, scope: !5157)
!5165 = !DILocation(line: 1666, column: 7, scope: !5157)
!5166 = !DILocation(line: 1666, column: 29, scope: !5157)
!5167 = !DILocation(line: 1667, column: 7, scope: !5157)
!5168 = !DILocation(line: 1667, column: 33, scope: !5157)
!5169 = !DILocation(line: 1668, column: 7, scope: !5157)
!5170 = !DILocation(line: 1668, column: 37, scope: !5157)
!5171 = !DILocation(line: 1669, column: 7, scope: !5157)
!5172 = !DILocation(line: 1669, column: 32, scope: !5157)
!5173 = !DILocation(line: 1670, column: 14, scope: !5157)
!5174 = !DILocation(line: 1665, column: 3, scope: !5157)
!5175 = !DILocation(line: 1671, column: 1, scope: !5157)
!5176 = distinct !DISubprogram(name: "merge_expr_data", scope: !3, file: !3, line: 1793, type: !5177, scopeLine: 1794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5179)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{null, !2366, !2366, !1892}
!5179 = !{!5180, !5181, !5182, !5183, !5184}
!5180 = !DILocalVariable(name: "to", arg: 1, scope: !5176, file: !3, line: 1793, type: !2366)
!5181 = !DILocalVariable(name: "from", arg: 2, scope: !5176, file: !3, line: 1793, type: !2366)
!5182 = !DILocalVariable(name: "split_point", arg: 3, scope: !5176, file: !3, line: 1793, type: !1892)
!5183 = !DILocalVariable(name: "i", scope: !5176, file: !3, line: 1795, type: !638)
!5184 = !DILocalVariable(name: "phist", scope: !5176, file: !3, line: 1796, type: !4708)
!5185 = !DILocation(line: 0, scope: !5176)
!5186 = !DILocation(line: 1796, column: 3, scope: !5176)
!5187 = !DILocation(line: 1800, column: 7, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 1800, column: 7)
!5189 = !DILocation(line: 1800, column: 24, scope: !5188)
!5190 = !DILocation(line: 1800, column: 22, scope: !5188)
!5191 = !DILocation(line: 1800, column: 7, scope: !5176)
!5192 = !DILocation(line: 1801, column: 20, scope: !5188)
!5193 = !DILocation(line: 1801, column: 5, scope: !5188)
!5194 = !DILocation(line: 1803, column: 7, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 1803, column: 7)
!5196 = !DILocation(line: 1803, column: 7, scope: !5176)
!5197 = !DILocation(line: 1804, column: 29, scope: !5195)
!5198 = !DILocation(line: 1804, column: 5, scope: !5195)
!5199 = !DILocation(line: 1804, column: 26, scope: !5195)
!5200 = !DILocation(line: 1806, column: 28, scope: !5195)
!5201 = !DILocation(line: 1806, column: 26, scope: !5195)
!5202 = !DILocation(line: 1809, column: 7, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 1809, column: 7)
!5204 = !DILocation(line: 1809, column: 28, scope: !5203)
!5205 = !DILocation(line: 1809, column: 26, scope: !5203)
!5206 = !DILocation(line: 1809, column: 7, scope: !5176)
!5207 = !DILocation(line: 1810, column: 24, scope: !5203)
!5208 = !DILocation(line: 1810, column: 5, scope: !5203)
!5209 = !DILocation(line: 1812, column: 7, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 1812, column: 7)
!5211 = !DILocation(line: 1812, column: 31, scope: !5210)
!5212 = !DILocation(line: 1812, column: 29, scope: !5210)
!5213 = !DILocation(line: 1812, column: 7, scope: !5176)
!5214 = !DILocation(line: 1813, column: 27, scope: !5210)
!5215 = !DILocation(line: 1813, column: 5, scope: !5210)
!5216 = !DILocation(line: 1815, column: 7, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 1815, column: 7)
!5218 = !DILocation(line: 1815, column: 34, scope: !5217)
!5219 = !DILocation(line: 1815, column: 31, scope: !5217)
!5220 = !DILocation(line: 1815, column: 7, scope: !5176)
!5221 = !DILocation(line: 1816, column: 29, scope: !5217)
!5222 = !DILocation(line: 1816, column: 5, scope: !5217)
!5223 = !DILocation(line: 1818, column: 32, scope: !5176)
!5224 = !DILocation(line: 1818, column: 30, scope: !5176)
!5225 = !DILocation(line: 0, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 1822, column: 3)
!5227 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 1822, column: 3)
!5228 = !DILocation(line: 1822, column: 8, scope: !5227)
!5229 = !DILocation(line: 0, scope: !5227)
!5230 = !DILocation(line: 1823, column: 8, scope: !5226)
!5231 = !DILocation(line: 1822, column: 3, scope: !5227)
!5232 = !DILocation(line: 1827, column: 29, scope: !5226)
!5233 = !DILocation(line: 1827, column: 36, scope: !5226)
!5234 = !DILocation(line: 1827, column: 48, scope: !5226)
!5235 = !DILocation(line: 1828, column: 36, scope: !5226)
!5236 = !DILocation(line: 1828, column: 59, scope: !5226)
!5237 = !DILocation(line: 1829, column: 36, scope: !5226)
!5238 = !DILocation(line: 1826, column: 5, scope: !5226)
!5239 = !DILocation(line: 1825, column: 9, scope: !5226)
!5240 = !DILocation(line: 1822, column: 3, scope: !5226)
!5241 = distinct !{!5241, !5231, !5242}
!5242 = !DILocation(line: 1829, column: 43, scope: !5227)
!5243 = !DILocation(line: 1831, column: 32, scope: !5176)
!5244 = !DILocation(line: 1831, column: 3, scope: !5176)
!5245 = !DILocation(line: 1831, column: 29, scope: !5176)
!5246 = !DILocation(line: 1832, column: 28, scope: !5176)
!5247 = !DILocation(line: 1832, column: 25, scope: !5176)
!5248 = !DILocation(line: 1833, column: 26, scope: !5176)
!5249 = !DILocation(line: 1833, column: 23, scope: !5176)
!5250 = !DILocation(line: 1835, column: 3, scope: !5176)
!5251 = !DILocation(line: 1836, column: 3, scope: !5176)
!5252 = !DILocation(line: 1837, column: 1, scope: !5176)
!5253 = distinct !DISubprogram(name: "update_target_availability", scope: !3, file: !3, line: 1706, type: !5177, scopeLine: 1707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5254)
!5254 = !{!5255, !5256, !5257, !5258, !5263}
!5255 = !DILocalVariable(name: "to", arg: 1, scope: !5253, file: !3, line: 1706, type: !2366)
!5256 = !DILocalVariable(name: "from", arg: 2, scope: !5253, file: !3, line: 1706, type: !2366)
!5257 = !DILocalVariable(name: "split_point", arg: 3, scope: !5253, file: !3, line: 1706, type: !1892)
!5258 = !DILocalVariable(name: "toind", scope: !5259, file: !3, line: 1718, type: !638)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 1717, column: 9)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 1716, column: 11)
!5261 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 1712, column: 5)
!5262 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 1708, column: 7)
!5263 = !DILocalVariable(name: "fromind", scope: !5259, file: !3, line: 1718, type: !638)
!5264 = !DILocation(line: 0, scope: !5253)
!5265 = !DILocation(line: 1708, column: 7, scope: !5262)
!5266 = !DILocation(line: 1708, column: 34, scope: !5262)
!5267 = !DILocation(line: 1709, column: 7, scope: !5262)
!5268 = !DILocation(line: 1709, column: 10, scope: !5262)
!5269 = !DILocation(line: 1709, column: 39, scope: !5262)
!5270 = !DILocation(line: 1708, column: 7, scope: !5253)
!5271 = !DILocation(line: 1710, column: 32, scope: !5262)
!5272 = !DILocation(line: 1710, column: 5, scope: !5262)
!5273 = !DILocation(line: 1716, column: 23, scope: !5260)
!5274 = !DILocation(line: 1716, column: 11, scope: !5261)
!5275 = !DILocation(line: 1720, column: 19, scope: !5259)
!5276 = !DILocation(line: 0, scope: !5259)
!5277 = !DILocation(line: 1721, column: 21, scope: !5259)
!5278 = !DILocation(line: 1723, column: 15, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 1723, column: 15)
!5280 = !DILocation(line: 1723, column: 30, scope: !5279)
!5281 = !DILocation(line: 1723, column: 21, scope: !5279)
!5282 = !DILocation(line: 1728, column: 40, scope: !5279)
!5283 = !DILocation(line: 1731, column: 36, scope: !5260)
!5284 = !DILocation(line: 1733, column: 1, scope: !5253)
!5285 = distinct !DISubprogram(name: "update_speculative_bits", scope: !3, file: !3, line: 1739, type: !5177, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5286)
!5286 = !{!5287, !5288, !5289, !5290, !5291, !5292, !5297}
!5287 = !DILocalVariable(name: "to", arg: 1, scope: !5285, file: !3, line: 1739, type: !2366)
!5288 = !DILocalVariable(name: "from", arg: 2, scope: !5285, file: !3, line: 1739, type: !2366)
!5289 = !DILocalVariable(name: "split_point", arg: 3, scope: !5285, file: !3, line: 1739, type: !1892)
!5290 = !DILocalVariable(name: "old_to_ds", scope: !5285, file: !3, line: 1741, type: !1844)
!5291 = !DILocalVariable(name: "old_from_ds", scope: !5285, file: !3, line: 1741, type: !1844)
!5292 = !DILocalVariable(name: "record_ds", scope: !5293, file: !3, line: 1761, type: !1844)
!5293 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 1760, column: 9)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 1759, column: 11)
!5295 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 1755, column: 5)
!5296 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 1754, column: 7)
!5297 = !DILocalVariable(name: "res", scope: !5298, file: !3, line: 1767, type: !638)
!5298 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 1766, column: 13)
!5299 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 1765, column: 15)
!5300 = !DILocation(line: 0, scope: !5285)
!5301 = !DILocation(line: 1743, column: 15, scope: !5285)
!5302 = !DILocation(line: 1744, column: 17, scope: !5285)
!5303 = !DILocation(line: 1746, column: 28, scope: !5285)
!5304 = !DILocation(line: 1746, column: 26, scope: !5285)
!5305 = !DILocation(line: 1747, column: 33, scope: !5285)
!5306 = !DILocation(line: 1747, column: 3, scope: !5285)
!5307 = !DILocation(line: 1747, column: 30, scope: !5285)
!5308 = !DILocation(line: 1748, column: 35, scope: !5285)
!5309 = !DILocation(line: 1748, column: 3, scope: !5285)
!5310 = !DILocation(line: 1748, column: 32, scope: !5285)
!5311 = !DILocation(line: 1754, column: 33, scope: !5296)
!5312 = !DILocation(line: 1756, column: 19, scope: !5295)
!5313 = !DILocation(line: 1757, column: 21, scope: !5295)
!5314 = !DILocation(line: 1759, column: 21, scope: !5294)
!5315 = !DILocation(line: 1759, column: 11, scope: !5295)
!5316 = !DILocation(line: 1765, column: 26, scope: !5299)
!5317 = !DILocation(line: 1765, column: 57, scope: !5299)
!5318 = !DILocation(line: 1765, column: 41, scope: !5299)
!5319 = !DILocation(line: 1769, column: 41, scope: !5298)
!5320 = !DILocation(line: 1769, column: 21, scope: !5298)
!5321 = !DILocation(line: 0, scope: !5298)
!5322 = !DILocation(line: 1770, column: 15, scope: !5298)
!5323 = !DILocation(line: 1773, column: 27, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 1773, column: 15)
!5325 = !DILocation(line: 1773, column: 15, scope: !5293)
!5326 = !DILocation(line: 1776, column: 27, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 1774, column: 13)
!5328 = !DILocation(line: 1776, column: 50, scope: !5327)
!5329 = !DILocation(line: 0, scope: !5293)
!5330 = !DILocation(line: 1777, column: 28, scope: !5327)
!5331 = !DILocation(line: 1777, column: 25, scope: !5327)
!5332 = !DILocation(line: 1778, column: 28, scope: !5327)
!5333 = !DILocation(line: 1778, column: 25, scope: !5327)
!5334 = !DILocation(line: 1780, column: 40, scope: !5327)
!5335 = !DILocation(line: 1781, column: 39, scope: !5327)
!5336 = !DILocation(line: 1782, column: 39, scope: !5327)
!5337 = !DILocation(line: 1782, column: 58, scope: !5327)
!5338 = !DILocation(line: 1780, column: 15, scope: !5327)
!5339 = !DILocation(line: 1784, column: 13, scope: !5327)
!5340 = !DILocation(line: 1787, column: 1, scope: !5285)
!5341 = distinct !DISubprogram(name: "merge_expr", scope: !3, file: !3, line: 1843, type: !5177, scopeLine: 1844, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5342)
!5342 = !{!5343, !5344, !5345, !5346, !5347}
!5343 = !DILocalVariable(name: "to", arg: 1, scope: !5341, file: !3, line: 1843, type: !2366)
!5344 = !DILocalVariable(name: "from", arg: 2, scope: !5341, file: !3, line: 1843, type: !2366)
!5345 = !DILocalVariable(name: "split_point", arg: 3, scope: !5341, file: !3, line: 1843, type: !1892)
!5346 = !DILocalVariable(name: "to_vi", scope: !5341, file: !3, line: 1845, type: !1939)
!5347 = !DILocalVariable(name: "from_vi", scope: !5341, file: !3, line: 1846, type: !1939)
!5348 = !DILocation(line: 0, scope: !5341)
!5349 = !DILocation(line: 1845, column: 19, scope: !5341)
!5350 = !DILocation(line: 1846, column: 21, scope: !5341)
!5351 = !DILocation(line: 1848, column: 3, scope: !5341)
!5352 = !DILocation(line: 1853, column: 7, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 1853, column: 7)
!5354 = !DILocation(line: 1853, column: 30, scope: !5353)
!5355 = !DILocation(line: 1854, column: 7, scope: !5353)
!5356 = !DILocation(line: 1854, column: 10, scope: !5353)
!5357 = !DILocation(line: 1854, column: 35, scope: !5353)
!5358 = !DILocation(line: 1853, column: 7, scope: !5341)
!5359 = !DILocation(line: 1855, column: 31, scope: !5353)
!5360 = !DILocation(line: 1855, column: 5, scope: !5353)
!5361 = !DILocation(line: 1857, column: 3, scope: !5341)
!5362 = !DILocation(line: 1858, column: 3, scope: !5341)
!5363 = !DILocation(line: 1859, column: 1, scope: !5341)
!5364 = distinct !DISubprogram(name: "change_vinsn_in_expr", scope: !3, file: !3, line: 5572, type: !5365, scopeLine: 5573, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5367)
!5365 = !DISubroutineType(types: !5366)
!5366 = !{null, !2366, !1939}
!5367 = !{!5368, !5369}
!5368 = !DILocalVariable(name: "expr", arg: 1, scope: !5364, file: !3, line: 5572, type: !2366)
!5369 = !DILocalVariable(name: "new_vinsn", arg: 2, scope: !5364, file: !3, line: 5572, type: !1939)
!5370 = !DILocation(line: 0, scope: !5364)
!5371 = !DILocation(line: 5574, column: 17, scope: !5364)
!5372 = !DILocation(line: 5574, column: 3, scope: !5364)
!5373 = !DILocation(line: 5576, column: 21, scope: !5364)
!5374 = !DILocation(line: 5577, column: 3, scope: !5364)
!5375 = !DILocation(line: 5578, column: 1, scope: !5364)
!5376 = distinct !DISubprogram(name: "clear_expr", scope: !3, file: !3, line: 1863, type: !5377, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5379)
!5377 = !DISubroutineType(types: !5378)
!5378 = !{null, !2366}
!5379 = !{!5380}
!5380 = !DILocalVariable(name: "expr", arg: 1, scope: !5376, file: !3, line: 1863, type: !2366)
!5381 = !DILocation(line: 0, scope: !5376)
!5382 = !DILocation(line: 1866, column: 17, scope: !5376)
!5383 = !DILocation(line: 1866, column: 3, scope: !5376)
!5384 = !DILocation(line: 1867, column: 21, scope: !5376)
!5385 = !DILocation(line: 1869, column: 23, scope: !5376)
!5386 = !DILocation(line: 1869, column: 3, scope: !5376)
!5387 = !DILocation(line: 1870, column: 1, scope: !5376)
!5388 = distinct !DISubprogram(name: "free_history_vect", scope: !3, file: !3, line: 1543, type: !5389, scopeLine: 1544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5391)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{null, !4866}
!5391 = !{!5392, !5393, !5394}
!5392 = !DILocalVariable(name: "pvect", arg: 1, scope: !5388, file: !3, line: 1543, type: !4866)
!5393 = !DILocalVariable(name: "i", scope: !5388, file: !3, line: 1545, type: !7)
!5394 = !DILocalVariable(name: "phist", scope: !5388, file: !3, line: 1546, type: !4708)
!5395 = !DILocation(line: 0, scope: !5388)
!5396 = !DILocation(line: 1546, column: 3, scope: !5388)
!5397 = !DILocation(line: 1548, column: 9, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 1548, column: 7)
!5399 = !DILocation(line: 1548, column: 7, scope: !5388)
!5400 = !DILocation(line: 1551, column: 3, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 1551, column: 3)
!5402 = !DILocation(line: 1552, column: 8, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 1551, column: 3)
!5404 = !DILocation(line: 0, scope: !5401)
!5405 = !DILocation(line: 1555, column: 21, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 1554, column: 5)
!5407 = !DILocation(line: 1555, column: 28, scope: !5406)
!5408 = !DILocation(line: 1555, column: 7, scope: !5406)
!5409 = !DILocation(line: 1556, column: 21, scope: !5406)
!5410 = !DILocation(line: 1556, column: 28, scope: !5406)
!5411 = !DILocation(line: 1556, column: 7, scope: !5406)
!5412 = !DILocation(line: 1553, column: 9, scope: !5403)
!5413 = !DILocation(line: 1551, column: 3, scope: !5403)
!5414 = distinct !{!5414, !5400, !5415}
!5415 = !DILocation(line: 1557, column: 5, scope: !5401)
!5416 = !DILocation(line: 1559, column: 3, scope: !5388)
!5417 = !DILocation(line: 1560, column: 10, scope: !5388)
!5418 = !DILocation(line: 1561, column: 1, scope: !5388)
!5419 = distinct !DISubprogram(name: "speculate_expr", scope: !3, file: !3, line: 1934, type: !5420, scopeLine: 1935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5422)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{!638, !2366, !1844}
!5422 = !{!5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5433}
!5423 = !DILocalVariable(name: "expr", arg: 1, scope: !5419, file: !3, line: 1934, type: !2366)
!5424 = !DILocalVariable(name: "ds", arg: 2, scope: !5419, file: !3, line: 1934, type: !1844)
!5425 = !DILocalVariable(name: "res", scope: !5419, file: !3, line: 1936, type: !638)
!5426 = !DILocalVariable(name: "orig_insn_rtx", scope: !5419, file: !3, line: 1937, type: !645)
!5427 = !DILocalVariable(name: "spec_pat", scope: !5419, file: !3, line: 1938, type: !645)
!5428 = !DILocalVariable(name: "target_ds", scope: !5419, file: !3, line: 1939, type: !1844)
!5429 = !DILocalVariable(name: "current_ds", scope: !5419, file: !3, line: 1939, type: !1844)
!5430 = !DILocalVariable(name: "spec_insn_rtx", scope: !5431, file: !3, line: 1958, type: !645)
!5431 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 1957, column: 7)
!5432 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 1951, column: 5)
!5433 = !DILocalVariable(name: "spec_vinsn", scope: !5431, file: !3, line: 1959, type: !1939)
!5434 = !DILocation(line: 0, scope: !5419)
!5435 = !DILocation(line: 1938, column: 3, scope: !5419)
!5436 = !DILocation(line: 1942, column: 19, scope: !5419)
!5437 = !DILocation(line: 1943, column: 16, scope: !5419)
!5438 = !DILocation(line: 1944, column: 8, scope: !5419)
!5439 = !DILocation(line: 1946, column: 19, scope: !5419)
!5440 = !DILocation(line: 1948, column: 9, scope: !5419)
!5441 = !DILocation(line: 1950, column: 3, scope: !5419)
!5442 = !DILocation(line: 1953, column: 32, scope: !5432)
!5443 = !DILocation(line: 1954, column: 25, scope: !5432)
!5444 = !DILocation(line: 1954, column: 14, scope: !5432)
!5445 = !DILocation(line: 1954, column: 7, scope: !5432)
!5446 = !DILocation(line: 1958, column: 52, scope: !5431)
!5447 = !DILocation(line: 1958, column: 22, scope: !5431)
!5448 = !DILocation(line: 0, scope: !5431)
!5449 = !DILocation(line: 1959, column: 23, scope: !5431)
!5450 = !DILocation(line: 1961, column: 2, scope: !5431)
!5451 = !DILocation(line: 1962, column: 27, scope: !5431)
!5452 = !DILocation(line: 1963, column: 9, scope: !5431)
!5453 = !DILocation(line: 1963, column: 40, scope: !5431)
!5454 = !DILocation(line: 1967, column: 27, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 1967, column: 13)
!5456 = !DILocation(line: 1968, column: 27, scope: !5455)
!5457 = !DILocation(line: 1967, column: 13, scope: !5455)
!5458 = !DILocation(line: 1967, column: 13, scope: !5431)
!5459 = !DILocation(line: 1970, column: 13, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5455, file: !3, line: 1969, column: 11)
!5461 = !DILocation(line: 1970, column: 42, scope: !5460)
!5462 = !DILocation(line: 1971, column: 13, scope: !5460)
!5463 = !DILocation(line: 1981, column: 7, scope: !5432)
!5464 = !DILocation(line: 1982, column: 7, scope: !5432)
!5465 = !DILocation(line: 0, scope: !5432)
!5466 = !DILocation(line: 1984, column: 1, scope: !5419)
!5467 = distinct !DISubprogram(name: "create_insn_rtx_from_pattern", scope: !3, file: !3, line: 5512, type: !5468, scopeLine: 5513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5470)
!5468 = !DISubroutineType(types: !5469)
!5469 = !{!645, !645, !645}
!5470 = !{!5471, !5472, !5473}
!5471 = !DILocalVariable(name: "pattern", arg: 1, scope: !5467, file: !3, line: 5512, type: !645)
!5472 = !DILocalVariable(name: "label", arg: 2, scope: !5467, file: !3, line: 5512, type: !645)
!5473 = !DILocalVariable(name: "insn_rtx", scope: !5467, file: !3, line: 5514, type: !645)
!5474 = !DILocation(line: 0, scope: !5467)
!5475 = !DILocation(line: 5516, column: 3, scope: !5467)
!5476 = !DILocation(line: 5518, column: 3, scope: !5467)
!5477 = !DILocation(line: 5520, column: 13, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 5520, column: 7)
!5479 = !DILocation(line: 5520, column: 7, scope: !5467)
!5480 = !DILocation(line: 5521, column: 16, scope: !5478)
!5481 = !DILocation(line: 5521, column: 5, scope: !5478)
!5482 = !DILocation(line: 5522, column: 12, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 5522, column: 12)
!5484 = !DILocation(line: 5522, column: 12, scope: !5478)
!5485 = !DILocation(line: 5523, column: 16, scope: !5483)
!5486 = !DILocation(line: 5523, column: 5, scope: !5483)
!5487 = !DILocation(line: 5526, column: 18, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 5525, column: 5)
!5489 = !DILocation(line: 5527, column: 7, scope: !5488)
!5490 = !DILocation(line: 5527, column: 29, scope: !5488)
!5491 = !DILocation(line: 5528, column: 9, scope: !5488)
!5492 = !DILocation(line: 5528, column: 7, scope: !5488)
!5493 = !DILocation(line: 0, scope: !5478)
!5494 = !DILocation(line: 5531, column: 3, scope: !5467)
!5495 = !DILocation(line: 5533, column: 3, scope: !5467)
!5496 = !DILocation(line: 5534, column: 3, scope: !5467)
!5497 = !DILocation(line: 5535, column: 3, scope: !5467)
!5498 = !DILocation(line: 5538, column: 3, scope: !5467)
!5499 = !DILocation(line: 5539, column: 3, scope: !5467)
!5500 = distinct !DISubprogram(name: "expr_dest_regno", scope: !3, file: !3, line: 2000, type: !5501, scopeLine: 2001, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5503)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!7, !2366}
!5503 = !{!5504, !5505}
!5504 = !DILocalVariable(name: "expr", arg: 1, scope: !5500, file: !3, line: 2000, type: !2366)
!5505 = !DILocalVariable(name: "dest", scope: !5500, file: !3, line: 2002, type: !645)
!5506 = !DILocation(line: 0, scope: !5500)
!5507 = !DILocation(line: 2002, column: 14, scope: !5500)
!5508 = !DILocation(line: 2004, column: 3, scope: !5500)
!5509 = !DILocation(line: 2005, column: 10, scope: !5500)
!5510 = !DILocation(line: 2005, column: 3, scope: !5500)
!5511 = distinct !DISubprogram(name: "expr_dest_reg", scope: !3, file: !3, line: 1988, type: !5512, scopeLine: 1989, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5514)
!5512 = !DISubroutineType(types: !5513)
!5513 = !{!645, !2366}
!5514 = !{!5515, !5516}
!5515 = !DILocalVariable(name: "expr", arg: 1, scope: !5511, file: !3, line: 1988, type: !2366)
!5516 = !DILocalVariable(name: "dest", scope: !5511, file: !3, line: 1990, type: !645)
!5517 = !DILocation(line: 0, scope: !5511)
!5518 = !DILocation(line: 1990, column: 14, scope: !5511)
!5519 = !DILocation(line: 1992, column: 12, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 1992, column: 7)
!5521 = !DILocation(line: 1992, column: 24, scope: !5520)
!5522 = !DILocation(line: 1992, column: 27, scope: !5520)
!5523 = !DILocation(line: 1992, column: 7, scope: !5511)
!5524 = !DILocation(line: 1995, column: 3, scope: !5511)
!5525 = !DILocation(line: 1996, column: 1, scope: !5511)
!5526 = distinct !DISubprogram(name: "rhs_regno", scope: !414, file: !414, line: 1051, type: !5527, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5529)
!5527 = !DISubroutineType(types: !5528)
!5528 = !{!7, !2498}
!5529 = !{!5530}
!5530 = !DILocalVariable(name: "x", arg: 1, scope: !5526, file: !414, line: 1051, type: !2498)
!5531 = !DILocation(line: 0, scope: !5526)
!5532 = !DILocation(line: 1053, column: 10, scope: !5526)
!5533 = !DILocation(line: 1053, column: 3, scope: !5526)
!5534 = distinct !DISubprogram(name: "mark_unavailable_targets", scope: !3, file: !3, line: 2011, type: !5535, scopeLine: 2012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5537)
!5535 = !DISubroutineType(types: !5536)
!5536 = !{null, !1897, !1897, !1841}
!5537 = !{!5538, !5539, !5540, !5541, !5542}
!5538 = !DILocalVariable(name: "join_set", arg: 1, scope: !5534, file: !3, line: 2011, type: !1897)
!5539 = !DILocalVariable(name: "av_set", arg: 2, scope: !5534, file: !3, line: 2011, type: !1897)
!5540 = !DILocalVariable(name: "lv_set", arg: 3, scope: !5534, file: !3, line: 2011, type: !1841)
!5541 = !DILocalVariable(name: "expr", scope: !5534, file: !3, line: 2013, type: !2366)
!5542 = !DILocalVariable(name: "avi", scope: !5534, file: !3, line: 2014, type: !3049)
!5543 = !DILocation(line: 0, scope: !5534)
!5544 = !DILocation(line: 2013, column: 3, scope: !5534)
!5545 = !DILocation(line: 2014, column: 3, scope: !5534)
!5546 = !DILocation(line: 2016, column: 3, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2016, column: 3)
!5548 = !DILocation(line: 0, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 2016, column: 3)
!5550 = !DILocation(line: 2016, column: 3, scope: !5549)
!5551 = !DILocation(line: 2017, column: 32, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 2017, column: 9)
!5553 = !DILocation(line: 2017, column: 9, scope: !5552)
!5554 = !DILocation(line: 2017, column: 51, scope: !5552)
!5555 = !DILocation(line: 2017, column: 9, scope: !5549)
!5556 = !DILocation(line: 2018, column: 40, scope: !5552)
!5557 = !DILocation(line: 2018, column: 7, scope: !5552)
!5558 = distinct !{!5558, !5546, !5559}
!5559 = !DILocation(line: 2018, column: 52, scope: !5547)
!5560 = !DILocation(line: 2019, column: 1, scope: !5534)
!5561 = distinct !DISubprogram(name: "_list_iter_start", scope: !409, file: !409, line: 429, type: !5562, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5565)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{null, !5564, !3016, !637}
!5564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!5565 = !{!5566, !5567, !5568}
!5566 = !DILocalVariable(name: "ip", arg: 1, scope: !5561, file: !409, line: 429, type: !5564)
!5567 = !DILocalVariable(name: "lp", arg: 2, scope: !5561, file: !409, line: 429, type: !3016)
!5568 = !DILocalVariable(name: "can_remove_p", arg: 3, scope: !5561, file: !409, line: 429, type: !637)
!5569 = !DILocation(line: 0, scope: !5561)
!5570 = !DILocation(line: 431, column: 7, scope: !5561)
!5571 = !DILocation(line: 431, column: 10, scope: !5561)
!5572 = !DILocation(line: 432, column: 7, scope: !5561)
!5573 = !DILocation(line: 432, column: 20, scope: !5561)
!5574 = !DILocation(line: 433, column: 7, scope: !5561)
!5575 = !DILocation(line: 433, column: 17, scope: !5561)
!5576 = !DILocation(line: 434, column: 1, scope: !5561)
!5577 = distinct !DISubprogram(name: "_list_iter_cond_expr", scope: !409, file: !409, line: 538, type: !5578, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5581)
!5578 = !DISubroutineType(types: !5579)
!5579 = !{!637, !1897, !5580}
!5580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!5581 = !{!5582, !5583}
!5582 = !DILocalVariable(name: "av", arg: 1, scope: !5577, file: !409, line: 538, type: !1897)
!5583 = !DILocalVariable(name: "exprp", arg: 2, scope: !5577, file: !409, line: 538, type: !5580)
!5584 = !DILocation(line: 0, scope: !5577)
!5585 = !DILocation(line: 540, column: 7, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5577, file: !409, line: 540, column: 7)
!5587 = !DILocation(line: 540, column: 7, scope: !5577)
!5588 = !DILocation(line: 542, column: 16, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5586, file: !409, line: 541, column: 5)
!5590 = !DILocation(line: 542, column: 14, scope: !5589)
!5591 = !DILocation(line: 543, column: 7, scope: !5589)
!5592 = !DILocation(line: 547, column: 1, scope: !5577)
!5593 = distinct !DISubprogram(name: "av_set_lookup", scope: !3, file: !3, line: 2067, type: !5594, scopeLine: 2068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5596)
!5594 = !DISubroutineType(types: !5595)
!5595 = !{!2366, !1897, !1939}
!5596 = !{!5597, !5598, !5599, !5600}
!5597 = !DILocalVariable(name: "set", arg: 1, scope: !5593, file: !3, line: 2067, type: !1897)
!5598 = !DILocalVariable(name: "sought_vinsn", arg: 2, scope: !5593, file: !3, line: 2067, type: !1939)
!5599 = !DILocalVariable(name: "expr", scope: !5593, file: !3, line: 2069, type: !2366)
!5600 = !DILocalVariable(name: "i", scope: !5593, file: !3, line: 2070, type: !3049)
!5601 = !DILocation(line: 0, scope: !5593)
!5602 = !DILocation(line: 2069, column: 3, scope: !5593)
!5603 = !DILocation(line: 2070, column: 3, scope: !5593)
!5604 = !DILocation(line: 2072, column: 3, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5593, file: !3, line: 2072, column: 3)
!5606 = !DILocation(line: 0, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 2072, column: 3)
!5608 = !DILocation(line: 2072, column: 3, scope: !5607)
!5609 = !DILocation(line: 2073, column: 24, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 2073, column: 9)
!5611 = !DILocation(line: 2073, column: 9, scope: !5610)
!5612 = !DILocation(line: 2073, column: 9, scope: !5607)
!5613 = !DILocation(line: 2074, column: 14, scope: !5610)
!5614 = !DILocation(line: 2074, column: 7, scope: !5610)
!5615 = distinct !{!5615, !5604, !5616}
!5616 = !DILocation(line: 2074, column: 14, scope: !5605)
!5617 = !DILocation(line: 2076, column: 1, scope: !5593)
!5618 = distinct !DISubprogram(name: "set_unavailable_target_for_expr", scope: !3, file: !3, line: 1874, type: !5619, scopeLine: 1875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5621)
!5619 = !DISubroutineType(types: !5620)
!5620 = !{null, !2366, !1841}
!5621 = !{!5622, !5623, !5624, !5627}
!5622 = !DILocalVariable(name: "expr", arg: 1, scope: !5618, file: !3, line: 1874, type: !2366)
!5623 = !DILocalVariable(name: "lv_set", arg: 2, scope: !5618, file: !3, line: 1874, type: !1841)
!5624 = !DILocalVariable(name: "regno", scope: !5625, file: !3, line: 1909, type: !7)
!5625 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 1908, column: 5)
!5626 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 1876, column: 7)
!5627 = !DILocalVariable(name: "rsi", scope: !5625, file: !3, line: 1910, type: !5628)
!5628 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_set_iterator", file: !155, line: 90, baseType: !4662)
!5629 = !DILocation(line: 0, scope: !5618)
!5630 = !DILocation(line: 1876, column: 7, scope: !5626)
!5631 = !DILocation(line: 1876, column: 7, scope: !5618)
!5632 = !DILocation(line: 1878, column: 11, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1878, column: 11)
!5634 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 1877, column: 5)
!5635 = !DILocation(line: 1879, column: 11, scope: !5633)
!5636 = !DILocation(line: 1879, column: 36, scope: !5633)
!5637 = !DILocation(line: 1879, column: 14, scope: !5633)
!5638 = !DILocation(line: 1878, column: 11, scope: !5634)
!5639 = !DILocation(line: 1900, column: 22, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 1900, column: 8)
!5641 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1880, column: 2)
!5642 = !DILocation(line: 1901, column: 8, scope: !5640)
!5643 = !DILocation(line: 1900, column: 8, scope: !5640)
!5644 = !DILocation(line: 0, scope: !5640)
!5645 = !DILocation(line: 1900, column: 8, scope: !5641)
!5646 = !DILocation(line: 1902, column: 35, scope: !5640)
!5647 = !DILocation(line: 1902, column: 6, scope: !5640)
!5648 = !DILocation(line: 1904, column: 35, scope: !5640)
!5649 = !DILocation(line: 1909, column: 7, scope: !5625)
!5650 = !DILocation(line: 1910, column: 7, scope: !5625)
!5651 = !DILocation(line: 1912, column: 7, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 1912, column: 7)
!5653 = !DILocation(line: 0, scope: !5625)
!5654 = !DILocation(line: 1912, column: 7, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 1912, column: 7)
!5656 = !DILocation(line: 1914, column: 35, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1914, column: 13)
!5658 = !DILocation(line: 1914, column: 13, scope: !5657)
!5659 = !DILocation(line: 1914, column: 13, scope: !5655)
!5660 = !DILocation(line: 1916, column: 13, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 1915, column: 11)
!5662 = !DILocation(line: 1916, column: 42, scope: !5661)
!5663 = !DILocation(line: 1917, column: 13, scope: !5661)
!5664 = distinct !{!5664, !5651, !5665}
!5665 = !DILocation(line: 1918, column: 11, scope: !5652)
!5666 = !DILocation(line: 1920, column: 7, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 1920, column: 7)
!5668 = !DILocation(line: 1920, column: 7, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 1920, column: 7)
!5670 = !DILocation(line: 1922, column: 35, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1922, column: 13)
!5672 = !DILocation(line: 1922, column: 13, scope: !5671)
!5673 = !DILocation(line: 1922, column: 13, scope: !5669)
!5674 = !DILocation(line: 1924, column: 13, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 1923, column: 11)
!5676 = !DILocation(line: 1924, column: 42, scope: !5675)
!5677 = !DILocation(line: 1925, column: 13, scope: !5675)
!5678 = distinct !{!5678, !5666, !5679}
!5679 = !DILocation(line: 1926, column: 11, scope: !5667)
!5680 = !DILocation(line: 1927, column: 5, scope: !5626)
!5681 = !DILocation(line: 1928, column: 1, scope: !5618)
!5682 = distinct !DISubprogram(name: "_list_iter_next", scope: !409, file: !409, line: 437, type: !5683, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5685)
!5683 = !DISubroutineType(types: !5684)
!5684 = !{null, !5564}
!5685 = !{!5686}
!5686 = !DILocalVariable(name: "ip", arg: 1, scope: !5682, file: !409, line: 437, type: !5564)
!5687 = !DILocation(line: 0, scope: !5682)
!5688 = !DILocation(line: 439, column: 12, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5682, file: !409, line: 439, column: 7)
!5690 = !DILocation(line: 439, column: 8, scope: !5689)
!5691 = !DILocation(line: 439, column: 7, scope: !5682)
!5692 = !DILocation(line: 440, column: 15, scope: !5689)
!5693 = !DILocation(line: 440, column: 12, scope: !5689)
!5694 = !DILocation(line: 440, column: 5, scope: !5689)
!5695 = !DILocation(line: 442, column: 19, scope: !5689)
!5696 = !DILocation(line: 443, column: 1, scope: !5682)
!5697 = distinct !DISubprogram(name: "av_set_add", scope: !3, file: !3, line: 2036, type: !5698, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5700)
!5698 = !DISubroutineType(types: !5699)
!5699 = !{null, !3044, !2366}
!5700 = !{!5701, !5702, !5703}
!5701 = !DILocalVariable(name: "setp", arg: 1, scope: !5697, file: !3, line: 2036, type: !3044)
!5702 = !DILocalVariable(name: "expr", arg: 2, scope: !5697, file: !3, line: 2036, type: !2366)
!5703 = !DILocalVariable(name: "elem", scope: !5697, file: !3, line: 2038, type: !1897)
!5704 = !DILocation(line: 0, scope: !5697)
!5705 = !DILocation(line: 2040, column: 3, scope: !5697)
!5706 = !DILocation(line: 2041, column: 10, scope: !5697)
!5707 = !DILocation(line: 2042, column: 14, scope: !5697)
!5708 = !DILocation(line: 2042, column: 3, scope: !5697)
!5709 = !DILocation(line: 2043, column: 1, scope: !5697)
!5710 = distinct !DISubprogram(name: "av_set_add_element", scope: !3, file: !3, line: 2027, type: !5711, scopeLine: 2028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5713)
!5711 = !DISubroutineType(types: !5712)
!5712 = !{!1897, !3044}
!5713 = !{!5714}
!5714 = !DILocalVariable(name: "setp", arg: 1, scope: !5710, file: !3, line: 2027, type: !3044)
!5715 = !DILocation(line: 0, scope: !5710)
!5716 = !DILocation(line: 2030, column: 3, scope: !5710)
!5717 = !DILocation(line: 2031, column: 10, scope: !5710)
!5718 = !DILocation(line: 2031, column: 3, scope: !5710)
!5719 = distinct !DISubprogram(name: "av_set_iter_remove", scope: !3, file: !3, line: 2057, type: !5720, scopeLine: 2058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5723)
!5720 = !DISubroutineType(types: !5721)
!5721 = !{null, !5722}
!5722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!5723 = !{!5724}
!5724 = !DILocalVariable(name: "ip", arg: 1, scope: !5719, file: !3, line: 2057, type: !5722)
!5725 = !DILocation(line: 0, scope: !5719)
!5726 = !DILocation(line: 2059, column: 15, scope: !5719)
!5727 = !DILocation(line: 2059, column: 3, scope: !5719)
!5728 = !DILocation(line: 2060, column: 3, scope: !5719)
!5729 = !DILocation(line: 2061, column: 1, scope: !5719)
!5730 = distinct !DISubprogram(name: "_list_iter_remove", scope: !409, file: !409, line: 446, type: !5683, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5731)
!5731 = !{!5732}
!5732 = !DILocalVariable(name: "ip", arg: 1, scope: !5730, file: !409, line: 446, type: !5564)
!5733 = !DILocation(line: 0, scope: !5730)
!5734 = !DILocation(line: 448, column: 3, scope: !5730)
!5735 = !DILocation(line: 449, column: 21, scope: !5730)
!5736 = !DILocation(line: 449, column: 3, scope: !5730)
!5737 = !DILocation(line: 450, column: 17, scope: !5730)
!5738 = !DILocation(line: 451, column: 1, scope: !5730)
!5739 = distinct !DISubprogram(name: "merge_with_other_exprs", scope: !3, file: !3, line: 2116, type: !5740, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5742)
!5740 = !DISubroutineType(types: !5741)
!5741 = !{!2366, !3044, !5722, !2366}
!5742 = !{!5743, !5744, !5745, !5746}
!5743 = !DILocalVariable(name: "avp", arg: 1, scope: !5739, file: !3, line: 2116, type: !3044)
!5744 = !DILocalVariable(name: "ip", arg: 2, scope: !5739, file: !3, line: 2116, type: !5722)
!5745 = !DILocalVariable(name: "expr", arg: 3, scope: !5739, file: !3, line: 2116, type: !2366)
!5746 = !DILocalVariable(name: "expr2", scope: !5739, file: !3, line: 2118, type: !2366)
!5747 = !DILocation(line: 0, scope: !5739)
!5748 = !DILocation(line: 2120, column: 43, scope: !5739)
!5749 = !DILocation(line: 2120, column: 11, scope: !5739)
!5750 = !DILocation(line: 2121, column: 13, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 2121, column: 7)
!5752 = !DILocation(line: 2121, column: 7, scope: !5739)
!5753 = !DILocation(line: 2125, column: 7, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 2122, column: 5)
!5755 = !DILocation(line: 2125, column: 37, scope: !5754)
!5756 = !DILocation(line: 2126, column: 7, scope: !5754)
!5757 = !DILocation(line: 2126, column: 31, scope: !5754)
!5758 = !DILocation(line: 2128, column: 7, scope: !5754)
!5759 = !DILocation(line: 2131, column: 31, scope: !5754)
!5760 = !DILocation(line: 2133, column: 7, scope: !5754)
!5761 = !DILocation(line: 2134, column: 7, scope: !5754)
!5762 = !DILocation(line: 2138, column: 1, scope: !5739)
!5763 = distinct !DISubprogram(name: "av_set_lookup_other_equiv_expr", scope: !3, file: !3, line: 2098, type: !5764, scopeLine: 2099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5766)
!5764 = !DISubroutineType(types: !5765)
!5765 = !{!2366, !1897, !2366}
!5766 = !{!5767, !5768, !5769, !5770}
!5767 = !DILocalVariable(name: "set", arg: 1, scope: !5763, file: !3, line: 2098, type: !1897)
!5768 = !DILocalVariable(name: "expr", arg: 2, scope: !5763, file: !3, line: 2098, type: !2366)
!5769 = !DILocalVariable(name: "cur_expr", scope: !5763, file: !3, line: 2100, type: !2366)
!5770 = !DILocalVariable(name: "i", scope: !5763, file: !3, line: 2101, type: !3049)
!5771 = !DILocation(line: 0, scope: !5763)
!5772 = !DILocation(line: 2100, column: 3, scope: !5763)
!5773 = !DILocation(line: 2101, column: 3, scope: !5763)
!5774 = !DILocation(line: 2103, column: 3, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 2103, column: 3)
!5776 = !DILocation(line: 0, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 2103, column: 3)
!5778 = !DILocation(line: 0, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 2107, column: 11)
!5780 = distinct !DILexicalBlock(scope: !5777, file: !3, line: 2104, column: 5)
!5781 = !DILocation(line: 2103, column: 3, scope: !5777)
!5782 = !DILocation(line: 2105, column: 11, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 2105, column: 11)
!5784 = !DILocation(line: 2105, column: 20, scope: !5783)
!5785 = !DILocation(line: 2105, column: 11, scope: !5780)
!5786 = !DILocation(line: 2107, column: 26, scope: !5779)
!5787 = !DILocation(line: 2107, column: 49, scope: !5779)
!5788 = !DILocation(line: 2107, column: 11, scope: !5779)
!5789 = !DILocation(line: 2107, column: 11, scope: !5780)
!5790 = !DILocation(line: 2108, column: 16, scope: !5779)
!5791 = !DILocation(line: 2108, column: 9, scope: !5779)
!5792 = distinct !{!5792, !5774, !5793}
!5793 = !DILocation(line: 2109, column: 5, scope: !5775)
!5794 = !DILocation(line: 2112, column: 1, scope: !5763)
!5795 = distinct !DISubprogram(name: "av_set_is_in_p", scope: !3, file: !3, line: 2142, type: !5796, scopeLine: 2143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5798)
!5796 = !DISubroutineType(types: !5797)
!5797 = !{!637, !1897, !1939}
!5798 = !{!5799, !5800}
!5799 = !DILocalVariable(name: "set", arg: 1, scope: !5795, file: !3, line: 2142, type: !1897)
!5800 = !DILocalVariable(name: "vi", arg: 2, scope: !5795, file: !3, line: 2142, type: !1939)
!5801 = !DILocation(line: 0, scope: !5795)
!5802 = !DILocation(line: 2144, column: 10, scope: !5795)
!5803 = !DILocation(line: 2144, column: 34, scope: !5795)
!5804 = !DILocation(line: 2144, column: 3, scope: !5795)
!5805 = distinct !DISubprogram(name: "av_set_copy", scope: !3, file: !3, line: 2149, type: !5806, scopeLine: 2150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5808)
!5806 = !DISubroutineType(types: !5807)
!5807 = !{!1897, !1897}
!5808 = !{!5809, !5810, !5811, !5812}
!5809 = !DILocalVariable(name: "set", arg: 1, scope: !5805, file: !3, line: 2149, type: !1897)
!5810 = !DILocalVariable(name: "expr", scope: !5805, file: !3, line: 2151, type: !2366)
!5811 = !DILocalVariable(name: "i", scope: !5805, file: !3, line: 2152, type: !3049)
!5812 = !DILocalVariable(name: "res", scope: !5805, file: !3, line: 2153, type: !1897)
!5813 = !DILocation(line: 0, scope: !5805)
!5814 = !DILocation(line: 2151, column: 3, scope: !5805)
!5815 = !DILocation(line: 2152, column: 3, scope: !5805)
!5816 = !DILocation(line: 2153, column: 3, scope: !5805)
!5817 = !DILocation(line: 2153, column: 12, scope: !5805)
!5818 = !DILocation(line: 2155, column: 3, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 2155, column: 3)
!5820 = !DILocation(line: 0, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 2155, column: 3)
!5822 = !DILocation(line: 2155, column: 3, scope: !5821)
!5823 = !DILocation(line: 2156, column: 23, scope: !5821)
!5824 = !DILocation(line: 2156, column: 5, scope: !5821)
!5825 = distinct !{!5825, !5818, !5826}
!5826 = !DILocation(line: 2156, column: 27, scope: !5819)
!5827 = !DILocation(line: 2158, column: 10, scope: !5805)
!5828 = !DILocation(line: 2159, column: 1, scope: !5805)
!5829 = !DILocation(line: 2158, column: 3, scope: !5805)
!5830 = distinct !DISubprogram(name: "av_set_union_and_clear", scope: !3, file: !3, line: 2175, type: !5831, scopeLine: 2176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5833)
!5831 = !DISubroutineType(types: !5832)
!5832 = !{null, !3044, !3044, !1892}
!5833 = !{!5834, !5835, !5836, !5837, !5838, !5839}
!5834 = !DILocalVariable(name: "top", arg: 1, scope: !5830, file: !3, line: 2175, type: !3044)
!5835 = !DILocalVariable(name: "fromp", arg: 2, scope: !5830, file: !3, line: 2175, type: !3044)
!5836 = !DILocalVariable(name: "insn", arg: 3, scope: !5830, file: !3, line: 2175, type: !1892)
!5837 = !DILocalVariable(name: "expr1", scope: !5830, file: !3, line: 2177, type: !2366)
!5838 = !DILocalVariable(name: "i", scope: !5830, file: !3, line: 2178, type: !3049)
!5839 = !DILocalVariable(name: "expr2", scope: !5840, file: !3, line: 2183, type: !2366)
!5840 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 2182, column: 5)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 2181, column: 3)
!5842 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 2181, column: 3)
!5843 = !DILocation(line: 0, scope: !5830)
!5844 = !DILocation(line: 2177, column: 3, scope: !5830)
!5845 = !DILocation(line: 2178, column: 3, scope: !5830)
!5846 = !DILocation(line: 2181, column: 3, scope: !5842)
!5847 = !DILocation(line: 0, scope: !5841)
!5848 = !DILocation(line: 2181, column: 3, scope: !5841)
!5849 = !DILocation(line: 2183, column: 37, scope: !5840)
!5850 = !DILocation(line: 2183, column: 45, scope: !5840)
!5851 = !DILocation(line: 2183, column: 22, scope: !5840)
!5852 = !DILocation(line: 0, scope: !5840)
!5853 = !DILocation(line: 2185, column: 11, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 2185, column: 11)
!5855 = !DILocation(line: 2185, column: 11, scope: !5840)
!5856 = !DILocation(line: 2187, column: 30, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 2186, column: 2)
!5858 = !DILocation(line: 2187, column: 11, scope: !5857)
!5859 = !DILocation(line: 2188, column: 4, scope: !5857)
!5860 = !DILocation(line: 2189, column: 2, scope: !5857)
!5861 = distinct !{!5861, !5846, !5862}
!5862 = !DILocation(line: 2190, column: 5, scope: !5842)
!5863 = !DILocation(line: 2192, column: 25, scope: !5830)
!5864 = !DILocation(line: 2192, column: 3, scope: !5830)
!5865 = !DILocation(line: 2193, column: 1, scope: !5830)
!5866 = distinct !DISubprogram(name: "join_distinct_sets", scope: !3, file: !3, line: 2165, type: !5867, scopeLine: 2166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5869)
!5867 = !DISubroutineType(types: !5868)
!5868 = !{null, !3044, !3044}
!5869 = !{!5870, !5871}
!5870 = !DILocalVariable(name: "to_tailp", arg: 1, scope: !5866, file: !3, line: 2165, type: !3044)
!5871 = !DILocalVariable(name: "fromp", arg: 2, scope: !5866, file: !3, line: 2165, type: !3044)
!5872 = !DILocation(line: 0, scope: !5866)
!5873 = !DILocation(line: 2167, column: 3, scope: !5866)
!5874 = !DILocation(line: 2168, column: 15, scope: !5866)
!5875 = !DILocation(line: 2168, column: 13, scope: !5866)
!5876 = !DILocation(line: 2169, column: 10, scope: !5866)
!5877 = !DILocation(line: 2170, column: 1, scope: !5866)
!5878 = distinct !DISubprogram(name: "av_set_union_and_live", scope: !3, file: !3, line: 2198, type: !5879, scopeLine: 2200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5881)
!5879 = !DISubroutineType(types: !5880)
!5880 = !{null, !3044, !3044, !1841, !1841, !1892}
!5881 = !{!5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5895, !5900}
!5882 = !DILocalVariable(name: "top", arg: 1, scope: !5878, file: !3, line: 2198, type: !3044)
!5883 = !DILocalVariable(name: "fromp", arg: 2, scope: !5878, file: !3, line: 2198, type: !3044)
!5884 = !DILocalVariable(name: "to_lv_set", arg: 3, scope: !5878, file: !3, line: 2198, type: !1841)
!5885 = !DILocalVariable(name: "from_lv_set", arg: 4, scope: !5878, file: !3, line: 2199, type: !1841)
!5886 = !DILocalVariable(name: "insn", arg: 5, scope: !5878, file: !3, line: 2199, type: !1892)
!5887 = !DILocalVariable(name: "expr1", scope: !5878, file: !3, line: 2201, type: !2366)
!5888 = !DILocalVariable(name: "i", scope: !5878, file: !3, line: 2202, type: !3049)
!5889 = !DILocalVariable(name: "to_tailp", scope: !5878, file: !3, line: 2203, type: !3044)
!5890 = !DILocalVariable(name: "in_both_set", scope: !5878, file: !3, line: 2203, type: !1897)
!5891 = !DILocalVariable(name: "expr2", scope: !5892, file: !3, line: 2208, type: !2366)
!5892 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 2207, column: 5)
!5893 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 2206, column: 3)
!5894 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2206, column: 3)
!5895 = !DILocalVariable(name: "regno1", scope: !5896, file: !3, line: 2216, type: !638)
!5896 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 2215, column: 13)
!5897 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 2214, column: 15)
!5898 = distinct !DILexicalBlock(scope: !5899, file: !3, line: 2211, column: 2)
!5899 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 2210, column: 11)
!5900 = !DILocalVariable(name: "regno2", scope: !5896, file: !3, line: 2218, type: !638)
!5901 = !DILocation(line: 0, scope: !5878)
!5902 = !DILocation(line: 2201, column: 3, scope: !5878)
!5903 = !DILocation(line: 2202, column: 3, scope: !5878)
!5904 = !DILocation(line: 2203, column: 3, scope: !5878)
!5905 = !DILocation(line: 2203, column: 23, scope: !5878)
!5906 = !DILocation(line: 2206, column: 3, scope: !5894)
!5907 = !DILocation(line: 0, scope: !5893)
!5908 = !DILocation(line: 2206, column: 3, scope: !5893)
!5909 = !DILocation(line: 2208, column: 55, scope: !5892)
!5910 = !DILocation(line: 2208, column: 22, scope: !5892)
!5911 = !DILocation(line: 0, scope: !5892)
!5912 = !DILocation(line: 2210, column: 11, scope: !5899)
!5913 = !DILocation(line: 0, scope: !5899)
!5914 = !DILocation(line: 2210, column: 11, scope: !5892)
!5915 = !DILocation(line: 2214, column: 15, scope: !5897)
!5916 = !DILocation(line: 2214, column: 15, scope: !5898)
!5917 = !DILocation(line: 2216, column: 29, scope: !5896)
!5918 = !DILocation(line: 2217, column: 37, scope: !5896)
!5919 = !DILocation(line: 0, scope: !5896)
!5920 = !DILocation(line: 2218, column: 29, scope: !5896)
!5921 = !DILocation(line: 2219, column: 37, scope: !5896)
!5922 = !DILocation(line: 2224, column: 26, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 2224, column: 19)
!5924 = !DILocation(line: 2224, column: 19, scope: !5896)
!5925 = !DILocation(line: 2225, column: 17, scope: !5923)
!5926 = !DILocation(line: 2225, column: 47, scope: !5923)
!5927 = !DILocation(line: 2227, column: 20, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 2227, column: 20)
!5929 = !DILocation(line: 2227, column: 45, scope: !5928)
!5930 = !DILocation(line: 2227, column: 42, scope: !5928)
!5931 = !DILocation(line: 2227, column: 20, scope: !5897)
!5932 = !DILocation(line: 2228, column: 13, scope: !5928)
!5933 = !DILocation(line: 2228, column: 43, scope: !5928)
!5934 = !DILocation(line: 2230, column: 30, scope: !5898)
!5935 = !DILocation(line: 2230, column: 11, scope: !5898)
!5936 = !DILocation(line: 2231, column: 11, scope: !5898)
!5937 = !DILocation(line: 2232, column: 4, scope: !5898)
!5938 = !DILocation(line: 2233, column: 2, scope: !5898)
!5939 = !DILocation(line: 2237, column: 9, scope: !5899)
!5940 = distinct !{!5940, !5906, !5941}
!5941 = !DILocation(line: 2238, column: 5, scope: !5894)
!5942 = !DILocation(line: 2239, column: 16, scope: !5878)
!5943 = !DILocation(line: 2243, column: 3, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2243, column: 3)
!5945 = !DILocation(line: 2243, column: 3, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 2243, column: 3)
!5947 = !DILocation(line: 2244, column: 38, scope: !5946)
!5948 = !DILocation(line: 2244, column: 5, scope: !5946)
!5949 = distinct !{!5949, !5943, !5950}
!5950 = !DILocation(line: 2244, column: 54, scope: !5944)
!5951 = !DILocation(line: 2246, column: 25, scope: !5878)
!5952 = !DILocation(line: 2246, column: 3, scope: !5878)
!5953 = !DILocation(line: 2247, column: 3, scope: !5878)
!5954 = !DILocation(line: 2248, column: 1, scope: !5878)
!5955 = distinct !DISubprogram(name: "av_set_lookup_and_remove", scope: !3, file: !3, line: 2080, type: !5956, scopeLine: 2081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5958)
!5956 = !DISubroutineType(types: !5957)
!5957 = !{!2366, !3044, !1939}
!5958 = !{!5959, !5960, !5961, !5962}
!5959 = !DILocalVariable(name: "setp", arg: 1, scope: !5955, file: !3, line: 2080, type: !3044)
!5960 = !DILocalVariable(name: "sought_vinsn", arg: 2, scope: !5955, file: !3, line: 2080, type: !1939)
!5961 = !DILocalVariable(name: "expr", scope: !5955, file: !3, line: 2082, type: !2366)
!5962 = !DILocalVariable(name: "i", scope: !5955, file: !3, line: 2083, type: !3049)
!5963 = !DILocation(line: 0, scope: !5955)
!5964 = !DILocation(line: 2082, column: 3, scope: !5955)
!5965 = !DILocation(line: 2083, column: 3, scope: !5955)
!5966 = !DILocation(line: 2085, column: 3, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 2085, column: 3)
!5968 = !DILocation(line: 0, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2085, column: 3)
!5970 = !DILocation(line: 2085, column: 3, scope: !5969)
!5971 = !DILocation(line: 2086, column: 24, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 2086, column: 9)
!5973 = !DILocation(line: 2086, column: 9, scope: !5972)
!5974 = !DILocation(line: 2086, column: 9, scope: !5969)
!5975 = !DILocation(line: 2088, column: 9, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 2087, column: 7)
!5977 = !DILocation(line: 2089, column: 16, scope: !5976)
!5978 = !DILocation(line: 2089, column: 9, scope: !5976)
!5979 = distinct !{!5979, !5966, !5980}
!5980 = !DILocation(line: 2090, column: 7, scope: !5967)
!5981 = !DILocation(line: 2092, column: 1, scope: !5955)
!5982 = distinct !DISubprogram(name: "av_set_add_nocopy", scope: !3, file: !3, line: 2047, type: !5698, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5983)
!5983 = !{!5984, !5985, !5986}
!5984 = !DILocalVariable(name: "setp", arg: 1, scope: !5982, file: !3, line: 2047, type: !3044)
!5985 = !DILocalVariable(name: "expr", arg: 2, scope: !5982, file: !3, line: 2047, type: !2366)
!5986 = !DILocalVariable(name: "elem", scope: !5982, file: !3, line: 2049, type: !1897)
!5987 = !DILocation(line: 0, scope: !5982)
!5988 = !DILocation(line: 2051, column: 10, scope: !5982)
!5989 = !DILocation(line: 2052, column: 4, scope: !5982)
!5990 = !DILocation(line: 2052, column: 26, scope: !5982)
!5991 = !DILocation(line: 2053, column: 1, scope: !5982)
!5992 = distinct !DISubprogram(name: "av_set_leave_one_nonspec", scope: !3, file: !3, line: 2265, type: !3042, scopeLine: 2266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5993)
!5993 = !{!5994, !5995, !5996, !5997}
!5994 = !DILocalVariable(name: "setp", arg: 1, scope: !5992, file: !3, line: 2265, type: !3044)
!5995 = !DILocalVariable(name: "expr", scope: !5992, file: !3, line: 2267, type: !2366)
!5996 = !DILocalVariable(name: "i", scope: !5992, file: !3, line: 2268, type: !3049)
!5997 = !DILocalVariable(name: "has_one_nonspec", scope: !5992, file: !3, line: 2269, type: !637)
!5998 = !DILocation(line: 0, scope: !5992)
!5999 = !DILocation(line: 2267, column: 3, scope: !5992)
!6000 = !DILocation(line: 2268, column: 3, scope: !5992)
!6001 = !DILocation(line: 2273, column: 3, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 2273, column: 3)
!6003 = !DILocation(line: 0, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 2273, column: 3)
!6005 = !DILocation(line: 2269, column: 8, scope: !5992)
!6006 = !DILocation(line: 2273, column: 3, scope: !6004)
!6007 = !DILocation(line: 2275, column: 12, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 2275, column: 11)
!6009 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 2274, column: 5)
!6010 = !DILocation(line: 2275, column: 11, scope: !6009)
!6011 = !DILocation(line: 2277, column: 10, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 2277, column: 10)
!6013 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 2276, column: 2)
!6014 = !DILocation(line: 2277, column: 10, scope: !6013)
!6015 = !DILocation(line: 2278, column: 6, scope: !6012)
!6016 = distinct !{!6016, !6001, !6017}
!6017 = !DILocation(line: 2282, column: 5, scope: !6002)
!6018 = !DILocation(line: 2283, column: 1, scope: !5992)
!6019 = distinct !DISubprogram(name: "av_set_element", scope: !3, file: !3, line: 2287, type: !6020, scopeLine: 2288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6022)
!6020 = !DISubroutineType(types: !6021)
!6021 = !{!2366, !1897, !638}
!6022 = !{!6023, !6024, !6025, !6026}
!6023 = !DILocalVariable(name: "set", arg: 1, scope: !6019, file: !3, line: 2287, type: !1897)
!6024 = !DILocalVariable(name: "n", arg: 2, scope: !6019, file: !3, line: 2287, type: !638)
!6025 = !DILocalVariable(name: "expr", scope: !6019, file: !3, line: 2289, type: !2366)
!6026 = !DILocalVariable(name: "i", scope: !6019, file: !3, line: 2290, type: !3049)
!6027 = !DILocation(line: 0, scope: !6019)
!6028 = !DILocation(line: 2289, column: 3, scope: !6019)
!6029 = !DILocation(line: 2290, column: 3, scope: !6019)
!6030 = !DILocation(line: 2292, column: 3, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 2292, column: 3)
!6032 = !DILocation(line: 0, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 2292, column: 3)
!6034 = !DILocation(line: 2292, column: 3, scope: !6033)
!6035 = !DILocation(line: 2293, column: 13, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 2293, column: 9)
!6037 = !DILocation(line: 2293, column: 9, scope: !6033)
!6038 = !DILocation(line: 2294, column: 14, scope: !6036)
!6039 = !DILocation(line: 2294, column: 7, scope: !6036)
!6040 = !DILocation(line: 2293, column: 10, scope: !6036)
!6041 = distinct !{!6041, !6030, !6042}
!6042 = !DILocation(line: 2294, column: 14, scope: !6031)
!6043 = !DILocation(line: 2296, column: 3, scope: !6019)
!6044 = !DILocation(line: 2297, column: 3, scope: !6019)
!6045 = !DILocation(line: 2298, column: 1, scope: !6019)
!6046 = distinct !DISubprogram(name: "av_set_substract_cond_branches", scope: !3, file: !3, line: 2302, type: !3042, scopeLine: 2303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6047)
!6047 = !{!6048, !6049, !6050}
!6048 = !DILocalVariable(name: "avp", arg: 1, scope: !6046, file: !3, line: 2302, type: !3044)
!6049 = !DILocalVariable(name: "i", scope: !6046, file: !3, line: 2304, type: !3049)
!6050 = !DILocalVariable(name: "expr", scope: !6046, file: !3, line: 2305, type: !2366)
!6051 = !DILocation(line: 0, scope: !6046)
!6052 = !DILocation(line: 2304, column: 3, scope: !6046)
!6053 = !DILocation(line: 2305, column: 3, scope: !6046)
!6054 = !DILocation(line: 2307, column: 3, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 2307, column: 3)
!6056 = !DILocation(line: 0, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 2307, column: 3)
!6058 = !DILocation(line: 2307, column: 3, scope: !6057)
!6059 = !DILocation(line: 2308, column: 30, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 2308, column: 9)
!6061 = !DILocation(line: 2308, column: 9, scope: !6060)
!6062 = !DILocation(line: 2308, column: 9, scope: !6057)
!6063 = !DILocation(line: 2309, column: 7, scope: !6060)
!6064 = distinct !{!6064, !6054, !6065}
!6065 = !DILocation(line: 2309, column: 29, scope: !6055)
!6066 = !DILocation(line: 2310, column: 1, scope: !6046)
!6067 = distinct !DISubprogram(name: "av_set_split_usefulness", scope: !3, file: !3, line: 2315, type: !6068, scopeLine: 2316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6070)
!6068 = !DISubroutineType(types: !6069)
!6069 = !{null, !1897, !638, !638}
!6070 = !{!6071, !6072, !6073, !6074, !6075}
!6071 = !DILocalVariable(name: "av", arg: 1, scope: !6067, file: !3, line: 2315, type: !1897)
!6072 = !DILocalVariable(name: "prob", arg: 2, scope: !6067, file: !3, line: 2315, type: !638)
!6073 = !DILocalVariable(name: "all_prob", arg: 3, scope: !6067, file: !3, line: 2315, type: !638)
!6074 = !DILocalVariable(name: "i", scope: !6067, file: !3, line: 2317, type: !3049)
!6075 = !DILocalVariable(name: "expr", scope: !6067, file: !3, line: 2318, type: !2366)
!6076 = !DILocation(line: 0, scope: !6067)
!6077 = !DILocation(line: 2317, column: 3, scope: !6067)
!6078 = !DILocation(line: 2318, column: 3, scope: !6067)
!6079 = !DILocation(line: 2320, column: 3, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 2320, column: 3)
!6081 = !DILocation(line: 0, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 2320, column: 3)
!6083 = !DILocation(line: 2320, column: 3, scope: !6082)
!6084 = !DILocation(line: 2321, column: 5, scope: !6082)
!6085 = !DILocation(line: 2321, column: 28, scope: !6082)
!6086 = distinct !{!6086, !6079, !6087}
!6087 = !DILocation(line: 2323, column: 34, scope: !6080)
!6088 = !DILocation(line: 2324, column: 1, scope: !6067)
!6089 = !DILocation(line: 2322, column: 34, scope: !6082)
!6090 = !DILocation(line: 2322, column: 57, scope: !6082)
!6091 = !DILocation(line: 2322, column: 65, scope: !6082)
!6092 = distinct !DISubprogram(name: "av_set_intersect", scope: !3, file: !3, line: 2329, type: !6093, scopeLine: 2330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6095)
!6093 = !DISubroutineType(types: !6094)
!6094 = !{null, !3044, !1897}
!6095 = !{!6096, !6097, !6098, !6099}
!6096 = !DILocalVariable(name: "avp", arg: 1, scope: !6092, file: !3, line: 2329, type: !3044)
!6097 = !DILocalVariable(name: "av", arg: 2, scope: !6092, file: !3, line: 2329, type: !1897)
!6098 = !DILocalVariable(name: "i", scope: !6092, file: !3, line: 2331, type: !3049)
!6099 = !DILocalVariable(name: "expr", scope: !6092, file: !3, line: 2332, type: !2366)
!6100 = !DILocation(line: 0, scope: !6092)
!6101 = !DILocation(line: 2331, column: 3, scope: !6092)
!6102 = !DILocation(line: 2332, column: 3, scope: !6092)
!6103 = !DILocation(line: 2334, column: 3, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 2334, column: 3)
!6105 = !DILocation(line: 0, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 2334, column: 3)
!6107 = !DILocation(line: 2334, column: 3, scope: !6106)
!6108 = !DILocation(line: 2335, column: 28, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 2335, column: 9)
!6110 = !DILocation(line: 2335, column: 9, scope: !6109)
!6111 = !DILocation(line: 2335, column: 47, scope: !6109)
!6112 = !DILocation(line: 2335, column: 9, scope: !6106)
!6113 = !DILocation(line: 2336, column: 7, scope: !6109)
!6114 = distinct !{!6114, !6103, !6115}
!6115 = !DILocation(line: 2336, column: 29, scope: !6104)
!6116 = !DILocation(line: 2337, column: 1, scope: !6092)
!6117 = distinct !DISubprogram(name: "free_data_for_scheduled_insn", scope: !3, file: !3, line: 2776, type: !3245, scopeLine: 2777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6118)
!6118 = !{!6119}
!6119 = !DILocalVariable(name: "insn", arg: 1, scope: !6117, file: !3, line: 2776, type: !1892)
!6120 = !DILocation(line: 0, scope: !6117)
!6121 = !DILocation(line: 2778, column: 3, scope: !6117)
!6122 = !DILocation(line: 2780, column: 9, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 2780, column: 7)
!6124 = !DILocation(line: 2780, column: 7, scope: !6117)
!6125 = !DILocation(line: 2783, column: 3, scope: !6117)
!6126 = !DILocation(line: 2784, column: 3, scope: !6117)
!6127 = !DILocation(line: 2785, column: 16, scope: !6117)
!6128 = !DILocation(line: 2785, column: 3, scope: !6117)
!6129 = !DILocation(line: 2788, column: 7, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 2788, column: 7)
!6131 = !DILocation(line: 2788, column: 7, scope: !6117)
!6132 = !DILocation(line: 2789, column: 5, scope: !6130)
!6133 = !DILocation(line: 2790, column: 15, scope: !6117)
!6134 = !DILocation(line: 2790, column: 3, scope: !6117)
!6135 = !DILocation(line: 2792, column: 3, scope: !6117)
!6136 = !DILocation(line: 2792, column: 29, scope: !6117)
!6137 = !DILocation(line: 2796, column: 5, scope: !6117)
!6138 = !DILocation(line: 2796, column: 32, scope: !6117)
!6139 = !DILocation(line: 2796, column: 41, scope: !6117)
!6140 = !DILocation(line: 2797, column: 1, scope: !6117)
!6141 = distinct !DISubprogram(name: "first_time_insn_init", scope: !3, file: !3, line: 2714, type: !6142, scopeLine: 2715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6144)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{!637, !1892}
!6144 = !{!6145}
!6145 = !DILocalVariable(name: "insn", arg: 1, scope: !6141, file: !3, line: 2714, type: !1892)
!6146 = !DILocation(line: 0, scope: !6141)
!6147 = !DILocation(line: 2716, column: 10, scope: !6141)
!6148 = !DILocation(line: 2716, column: 27, scope: !6141)
!6149 = !DILocation(line: 2716, column: 3, scope: !6141)
!6150 = distinct !DISubprogram(name: "sel_init_global_and_expr", scope: !3, file: !3, line: 2900, type: !6151, scopeLine: 2901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6154)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{null, !6153}
!6153 = !DIDerivedType(tag: DW_TAG_typedef, name: "bb_vec_t", file: !398, line: 40, baseType: !1874)
!6154 = !{!6155, !6156}
!6155 = !DILocalVariable(name: "bbs", arg: 1, scope: !6150, file: !3, line: 2900, type: !6153)
!6156 = !DILocalVariable(name: "ssi", scope: !6150, file: !3, line: 2903, type: !6157)
!6157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6158)
!6158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_scan_info_def", file: !398, line: 44, size: 256, elements: !6159)
!6159 = !{!6160, !6161, !6162, !6163}
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "extend_bb", scope: !6158, file: !398, line: 49, baseType: !2395, size: 64)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "init_bb", scope: !6158, file: !398, line: 53, baseType: !2266, size: 64, offset: 64)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "extend_insn", scope: !6158, file: !398, line: 58, baseType: !2395, size: 64, offset: 128)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "init_insn", scope: !6158, file: !398, line: 62, baseType: !2391, size: 64, offset: 192)
!6164 = !DILocation(line: 0, scope: !6150)
!6165 = !DILocation(line: 2903, column: 3, scope: !6150)
!6166 = !DILocation(line: 2903, column: 36, scope: !6150)
!6167 = !DILocation(line: 2911, column: 3, scope: !6150)
!6168 = !DILocation(line: 2912, column: 1, scope: !6150)
!6169 = distinct !DISubprogram(name: "init_global_and_expr_for_bb", scope: !3, file: !3, line: 2813, type: !2267, scopeLine: 2814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6170)
!6170 = !{!6171}
!6171 = !DILocalVariable(name: "bb", arg: 1, scope: !6169, file: !3, line: 2813, type: !1179)
!6172 = !DILocation(line: 0, scope: !6169)
!6173 = !DILocation(line: 2815, column: 7, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 2815, column: 7)
!6175 = !DILocation(line: 2815, column: 7, scope: !6169)
!6176 = !DILocation(line: 2818, column: 3, scope: !6169)
!6177 = !DILocation(line: 2819, column: 1, scope: !6169)
!6178 = distinct !DISubprogram(name: "extend_insn_data", scope: !3, file: !3, line: 3931, type: !2396, scopeLine: 3932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6179)
!6179 = !{!6180, !6181}
!6180 = !DILocalVariable(name: "reserve", scope: !6178, file: !3, line: 3933, type: !638)
!6181 = !DILocalVariable(name: "size", scope: !6182, file: !3, line: 3944, type: !638)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 3943, column: 5)
!6183 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 3941, column: 7)
!6184 = !DILocation(line: 3935, column: 3, scope: !6178)
!6185 = !DILocation(line: 3936, column: 3, scope: !6178)
!6186 = !DILocation(line: 3939, column: 14, scope: !6178)
!6187 = !DILocation(line: 3939, column: 29, scope: !6178)
!6188 = !DILocation(line: 3940, column: 16, scope: !6178)
!6189 = !DILocation(line: 3940, column: 14, scope: !6178)
!6190 = !DILocation(line: 0, scope: !6178)
!6191 = !DILocation(line: 3941, column: 15, scope: !6183)
!6192 = !DILocation(line: 3942, column: 7, scope: !6183)
!6193 = !DILocation(line: 3942, column: 12, scope: !6183)
!6194 = !DILocation(line: 3941, column: 7, scope: !6178)
!6195 = !DILocation(line: 3946, column: 11, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 3946, column: 11)
!6197 = !DILocation(line: 3946, column: 30, scope: !6196)
!6198 = !DILocation(line: 3946, column: 11, scope: !6182)
!6199 = !DILocation(line: 3947, column: 31, scope: !6196)
!6200 = !DILocation(line: 0, scope: !6182)
!6201 = !DILocation(line: 3947, column: 9, scope: !6196)
!6202 = !DILocation(line: 3949, column: 18, scope: !6196)
!6203 = !DILocation(line: 3949, column: 35, scope: !6196)
!6204 = !DILocation(line: 0, scope: !6196)
!6205 = !DILocation(line: 3952, column: 7, scope: !6182)
!6206 = !DILocation(line: 3953, column: 5, scope: !6182)
!6207 = !DILocation(line: 3954, column: 1, scope: !6178)
!6208 = distinct !DISubprogram(name: "init_global_and_expr_for_insn", scope: !3, file: !3, line: 2832, type: !3245, scopeLine: 2833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6209)
!6209 = !{!6210, !6211, !6214, !6216}
!6210 = !DILocalVariable(name: "insn", arg: 1, scope: !6208, file: !3, line: 2832, type: !1892)
!6211 = !DILocalVariable(name: "prev_insn", scope: !6212, file: !3, line: 2848, type: !1892)
!6212 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 2847, column: 5)
!6213 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 2845, column: 7)
!6214 = !DILocalVariable(name: "force_unique_p", scope: !6215, file: !3, line: 2864, type: !637)
!6215 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 2863, column: 3)
!6216 = !DILocalVariable(name: "spec_done_ds", scope: !6215, file: !3, line: 2865, type: !1844)
!6217 = !DILocation(line: 0, scope: !6208)
!6218 = !DILocation(line: 2834, column: 7, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 2834, column: 7)
!6220 = !DILocation(line: 2834, column: 7, scope: !6208)
!6221 = !DILocation(line: 2837, column: 7, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 2837, column: 7)
!6223 = !DILocation(line: 2837, column: 7, scope: !6208)
!6224 = !DILocation(line: 2839, column: 34, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 2838, column: 5)
!6226 = !DILocation(line: 2840, column: 7, scope: !6225)
!6227 = !DILocation(line: 2843, column: 3, scope: !6208)
!6228 = !DILocation(line: 2845, column: 7, scope: !6213)
!6229 = !DILocation(line: 2845, column: 7, scope: !6208)
!6230 = !DILocation(line: 2848, column: 43, scope: !6212)
!6231 = !DILocation(line: 0, scope: !6212)
!6232 = !DILocation(line: 2850, column: 11, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 2850, column: 11)
!6234 = !DILocation(line: 2850, column: 11, scope: !6212)
!6235 = !DILocation(line: 2851, column: 2, scope: !6233)
!6236 = !DILocation(line: 2851, column: 30, scope: !6233)
!6237 = !DILocation(line: 2854, column: 5, scope: !6212)
!6238 = !DILocation(line: 0, scope: !6213)
!6239 = !DILocation(line: 2858, column: 7, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 2858, column: 7)
!6241 = !DILocation(line: 2858, column: 33, scope: !6240)
!6242 = !DILocation(line: 2859, column: 7, scope: !6240)
!6243 = !DILocation(line: 2859, column: 10, scope: !6240)
!6244 = !DILocation(line: 2859, column: 41, scope: !6240)
!6245 = !DILocation(line: 2858, column: 7, scope: !6208)
!6246 = !DILocation(line: 2861, column: 5, scope: !6240)
!6247 = !DILocation(line: 2861, column: 23, scope: !6240)
!6248 = !DILocation(line: 2868, column: 9, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 2868, column: 9)
!6250 = !DILocation(line: 2869, column: 2, scope: !6249)
!6251 = !DILocation(line: 2869, column: 5, scope: !6249)
!6252 = !DILocation(line: 2870, column: 2, scope: !6249)
!6253 = !DILocation(line: 2870, column: 5, scope: !6249)
!6254 = !DILocation(line: 2871, column: 2, scope: !6249)
!6255 = !DILocation(line: 2871, column: 5, scope: !6249)
!6256 = !DILocation(line: 2873, column: 2, scope: !6249)
!6257 = !DILocation(line: 2873, column: 6, scope: !6249)
!6258 = !DILocation(line: 2873, column: 31, scope: !6249)
!6259 = !DILocation(line: 2873, column: 34, scope: !6249)
!6260 = !DILocation(line: 2875, column: 2, scope: !6249)
!6261 = !DILocation(line: 2875, column: 5, scope: !6249)
!6262 = !DILocation(line: 2868, column: 9, scope: !6215)
!6263 = !DILocation(line: 0, scope: !6249)
!6264 = !DILocation(line: 0, scope: !6215)
!6265 = !DILocation(line: 2880, column: 23, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 2880, column: 9)
!6267 = !DILocation(line: 2880, column: 9, scope: !6266)
!6268 = !DILocation(line: 2880, column: 9, scope: !6215)
!6269 = !DILocation(line: 2882, column: 17, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 2881, column: 7)
!6271 = !DILocation(line: 2883, column: 17, scope: !6270)
!6272 = !DILocation(line: 2884, column: 7, scope: !6270)
!6273 = !DILocation(line: 0, scope: !6266)
!6274 = !DILocation(line: 2889, column: 16, scope: !6215)
!6275 = !DILocation(line: 2889, column: 34, scope: !6215)
!6276 = !DILocation(line: 2890, column: 27, scope: !6215)
!6277 = !DILocation(line: 2890, column: 52, scope: !6215)
!6278 = !DILocation(line: 2892, column: 16, scope: !6215)
!6279 = !DILocation(line: 2889, column: 5, scope: !6215)
!6280 = !DILocation(line: 2895, column: 3, scope: !6208)
!6281 = !DILocation(line: 2896, column: 1, scope: !6208)
!6282 = distinct !DISubprogram(name: "sel_finish_global_and_expr", scope: !3, file: !3, line: 2947, type: !2396, scopeLine: 2948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6283)
!6283 = !{!6284, !6286, !6287}
!6284 = !DILocalVariable(name: "bbs", scope: !6285, file: !3, line: 2950, type: !6153)
!6285 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 2949, column: 3)
!6286 = !DILocalVariable(name: "i", scope: !6285, file: !3, line: 2951, type: !638)
!6287 = !DILocalVariable(name: "ssi", scope: !6288, file: !3, line: 2960, type: !6157)
!6288 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 2959, column: 5)
!6289 = !DILocation(line: 2950, column: 5, scope: !6285)
!6290 = !DILocation(line: 2953, column: 11, scope: !6285)
!6291 = !DILocation(line: 0, scope: !6285)
!6292 = !DILocation(line: 2953, column: 9, scope: !6285)
!6293 = !DILocation(line: 2955, column: 10, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 2955, column: 5)
!6295 = !DILocation(line: 0, scope: !6294)
!6296 = !DILocation(line: 2955, column: 21, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 2955, column: 5)
!6298 = !DILocation(line: 2955, column: 19, scope: !6297)
!6299 = !DILocation(line: 2955, column: 5, scope: !6294)
!6300 = !DILocation(line: 2956, column: 7, scope: !6297)
!6301 = !DILocation(line: 2955, column: 41, scope: !6297)
!6302 = !DILocation(line: 2955, column: 5, scope: !6297)
!6303 = distinct !{!6303, !6299, !6304}
!6304 = !DILocation(line: 2956, column: 7, scope: !6294)
!6305 = !DILocation(line: 2960, column: 7, scope: !6288)
!6306 = !DILocation(line: 2960, column: 40, scope: !6288)
!6307 = !DILocation(line: 0, scope: !6288)
!6308 = !DILocation(line: 2968, column: 7, scope: !6288)
!6309 = !DILocation(line: 2969, column: 5, scope: !6285)
!6310 = !DILocation(line: 2971, column: 5, scope: !6285)
!6311 = !DILocation(line: 2972, column: 3, scope: !6282)
!6312 = !DILocation(line: 2974, column: 3, scope: !6282)
!6313 = !DILocation(line: 2975, column: 1, scope: !6282)
!6314 = distinct !DISubprogram(name: "VEC_basic_block_heap_alloc", scope: !155, file: !155, line: 283, type: !6315, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6317)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{!1874, !638}
!6317 = !{!6318}
!6318 = !DILocalVariable(name: "alloc_", arg: 1, scope: !6314, file: !155, line: 283, type: !638)
!6319 = !DILocation(line: 0, scope: !6314)
!6320 = !DILocation(line: 283, column: 1, scope: !6314)
!6321 = distinct !DISubprogram(name: "VEC_basic_block_base_quick_push", scope: !155, file: !155, line: 281, type: !6322, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6326)
!6322 = !DISubroutineType(types: !6323)
!6323 = !{!6324, !6325, !1179}
!6324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!6325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!6326 = !{!6327, !6328, !6329}
!6327 = !DILocalVariable(name: "vec_", arg: 1, scope: !6321, file: !155, line: 281, type: !6325)
!6328 = !DILocalVariable(name: "obj_", arg: 2, scope: !6321, file: !155, line: 281, type: !1179)
!6329 = !DILocalVariable(name: "slot_", scope: !6321, file: !155, line: 281, type: !6324)
!6330 = !DILocation(line: 0, scope: !6321)
!6331 = !DILocation(line: 281, column: 1, scope: !6321)
!6332 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !155, file: !155, line: 281, type: !6333, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6337)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{!1179, !6335, !7}
!6335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6336, size: 64)
!6336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!6337 = !{!6338, !6339}
!6338 = !DILocalVariable(name: "vec_", arg: 1, scope: !6332, file: !155, line: 281, type: !6335)
!6339 = !DILocalVariable(name: "ix_", arg: 2, scope: !6332, file: !155, line: 281, type: !7)
!6340 = !DILocation(line: 0, scope: !6332)
!6341 = !DILocation(line: 281, column: 1, scope: !6332)
!6342 = distinct !DISubprogram(name: "finish_global_and_expr_for_bb", scope: !3, file: !3, line: 2916, type: !2267, scopeLine: 2917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6343)
!6343 = !{!6344}
!6344 = !DILocalVariable(name: "bb", arg: 1, scope: !6342, file: !3, line: 2916, type: !1179)
!6345 = !DILocation(line: 0, scope: !6342)
!6346 = !DILocation(line: 2918, column: 18, scope: !6342)
!6347 = !DILocation(line: 2918, column: 3, scope: !6342)
!6348 = !DILocation(line: 2919, column: 3, scope: !6342)
!6349 = !DILocation(line: 2919, column: 20, scope: !6342)
!6350 = !DILocation(line: 2920, column: 1, scope: !6342)
!6351 = distinct !DISubprogram(name: "finish_global_and_expr_insn", scope: !3, file: !3, line: 2924, type: !3245, scopeLine: 2925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6352)
!6352 = !{!6353}
!6353 = !DILocalVariable(name: "insn", arg: 1, scope: !6351, file: !3, line: 2924, type: !1892)
!6354 = !DILocation(line: 0, scope: !6351)
!6355 = !DILocation(line: 2926, column: 7, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 2926, column: 7)
!6357 = !DILocation(line: 2926, column: 22, scope: !6356)
!6358 = !DILocation(line: 2926, column: 25, scope: !6356)
!6359 = !DILocation(line: 2926, column: 7, scope: !6351)
!6360 = !DILocation(line: 2929, column: 3, scope: !6351)
!6361 = !DILocation(line: 2931, column: 7, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 2931, column: 7)
!6363 = !DILocation(line: 2931, column: 24, scope: !6362)
!6364 = !DILocation(line: 2931, column: 7, scope: !6351)
!6365 = !DILocation(line: 2933, column: 7, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 2932, column: 5)
!6367 = !DILocation(line: 2934, column: 7, scope: !6366)
!6368 = !DILocation(line: 2934, column: 28, scope: !6366)
!6369 = !DILocation(line: 2935, column: 7, scope: !6366)
!6370 = !DILocation(line: 2935, column: 24, scope: !6366)
!6371 = !DILocation(line: 2941, column: 19, scope: !6366)
!6372 = !DILocation(line: 2941, column: 7, scope: !6366)
!6373 = !DILocation(line: 2942, column: 5, scope: !6366)
!6374 = !DILocation(line: 2943, column: 1, scope: !6351)
!6375 = distinct !DISubprogram(name: "VEC_basic_block_heap_free", scope: !155, file: !155, line: 283, type: !6376, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6379)
!6376 = !DISubroutineType(types: !6377)
!6377 = !{null, !6378}
!6378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!6379 = !{!6380}
!6380 = !DILocalVariable(name: "vec_", arg: 1, scope: !6375, file: !155, line: 283, type: !6378)
!6381 = !DILocation(line: 0, scope: !6375)
!6382 = !DILocation(line: 283, column: 1, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6375, file: !155, line: 283, column: 1)
!6384 = !DILocation(line: 283, column: 1, scope: !6375)
!6385 = distinct !DISubprogram(name: "finish_insns", scope: !3, file: !3, line: 3958, type: !2396, scopeLine: 3959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6386)
!6386 = !{!6387, !6388}
!6387 = !DILocalVariable(name: "i", scope: !6385, file: !3, line: 3960, type: !7)
!6388 = !DILocalVariable(name: "sid_entry", scope: !6389, file: !3, line: 3966, type: !2456)
!6389 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 3965, column: 5)
!6390 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 3964, column: 3)
!6391 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 3964, column: 3)
!6392 = !DILocation(line: 0, scope: !6385)
!6393 = !DILocation(line: 3964, column: 8, scope: !6391)
!6394 = !DILocation(line: 0, scope: !6391)
!6395 = !DILocation(line: 3964, column: 19, scope: !6390)
!6396 = !DILocation(line: 3964, column: 17, scope: !6390)
!6397 = !DILocation(line: 3964, column: 3, scope: !6391)
!6398 = !DILocation(line: 3966, column: 38, scope: !6389)
!6399 = !DILocation(line: 0, scope: !6389)
!6400 = !DILocation(line: 3968, column: 22, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 3968, column: 11)
!6402 = !DILocation(line: 3968, column: 11, scope: !6401)
!6403 = !DILocation(line: 3968, column: 11, scope: !6389)
!6404 = !DILocation(line: 3969, column: 9, scope: !6401)
!6405 = !DILocation(line: 3970, column: 22, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 3970, column: 11)
!6407 = !DILocation(line: 3970, column: 11, scope: !6406)
!6408 = !DILocation(line: 3970, column: 11, scope: !6389)
!6409 = !DILocation(line: 3972, column: 4, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 3971, column: 2)
!6411 = !DILocation(line: 3973, column: 4, scope: !6410)
!6412 = !DILocation(line: 3974, column: 35, scope: !6410)
!6413 = !DILocation(line: 3974, column: 11, scope: !6410)
!6414 = !DILocation(line: 3975, column: 27, scope: !6410)
!6415 = !DILocation(line: 3975, column: 4, scope: !6410)
!6416 = !DILocation(line: 3976, column: 2, scope: !6410)
!6417 = !DILocation(line: 3977, column: 11, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 3977, column: 11)
!6419 = !DILocation(line: 3977, column: 11, scope: !6389)
!6420 = !DILocation(line: 3979, column: 35, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 3978, column: 9)
!6422 = !DILocation(line: 3979, column: 11, scope: !6421)
!6423 = !DILocation(line: 3983, column: 11, scope: !6421)
!6424 = !DILocation(line: 3983, column: 33, scope: !6421)
!6425 = !DILocation(line: 3984, column: 9, scope: !6421)
!6426 = !DILocation(line: 3964, column: 59, scope: !6390)
!6427 = !DILocation(line: 3964, column: 3, scope: !6390)
!6428 = distinct !{!6428, !6397, !6429}
!6429 = !DILocation(line: 3985, column: 5, scope: !6391)
!6430 = !DILocation(line: 3987, column: 3, scope: !6385)
!6431 = !DILocation(line: 3988, column: 1, scope: !6385)
!6432 = distinct !DISubprogram(name: "sel_mark_hard_insn", scope: !3, file: !3, line: 3164, type: !2392, scopeLine: 3165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6433)
!6433 = !{!6434, !6435}
!6434 = !DILocalVariable(name: "insn", arg: 1, scope: !6432, file: !3, line: 3164, type: !645)
!6435 = !DILocalVariable(name: "i", scope: !6432, file: !3, line: 3166, type: !638)
!6436 = !DILocation(line: 0, scope: !6432)
!6437 = !DILocation(line: 3170, column: 28, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 3170, column: 7)
!6439 = !DILocation(line: 3170, column: 8, scope: !6438)
!6440 = !DILocation(line: 3170, column: 55, scope: !6438)
!6441 = !DILocation(line: 3170, column: 35, scope: !6438)
!6442 = !DILocation(line: 3170, column: 31, scope: !6438)
!6443 = !DILocation(line: 3173, column: 3, scope: !6432)
!6444 = !DILocation(line: 3174, column: 3, scope: !6432)
!6445 = !DILocation(line: 3176, column: 8, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 3176, column: 3)
!6447 = !DILocation(line: 0, scope: !6446)
!6448 = !DILocation(line: 3176, column: 17, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 3176, column: 3)
!6450 = !DILocation(line: 3176, column: 3, scope: !6446)
!6451 = !DILocation(line: 3177, column: 5, scope: !6449)
!6452 = !DILocation(line: 3177, column: 38, scope: !6449)
!6453 = !DILocation(line: 3176, column: 37, scope: !6449)
!6454 = !DILocation(line: 3176, column: 3, scope: !6449)
!6455 = distinct !{!6455, !6450, !6456}
!6456 = !DILocation(line: 3177, column: 42, scope: !6446)
!6457 = !DILocation(line: 3178, column: 1, scope: !6432)
!6458 = distinct !DISubprogram(name: "sel_clear_has_dependence", scope: !3, file: !3, line: 3222, type: !2396, scopeLine: 3223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6459)
!6459 = !{!6460}
!6460 = !DILocalVariable(name: "i", scope: !6458, file: !3, line: 3224, type: !638)
!6461 = !DILocation(line: 0, scope: !6458)
!6462 = !DILocation(line: 3226, column: 8, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 3226, column: 3)
!6464 = !DILocation(line: 0, scope: !6463)
!6465 = !DILocation(line: 3226, column: 17, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 3226, column: 3)
!6467 = !DILocation(line: 3226, column: 3, scope: !6463)
!6468 = !DILocation(line: 3227, column: 5, scope: !6466)
!6469 = !DILocation(line: 3227, column: 38, scope: !6466)
!6470 = !DILocation(line: 3226, column: 37, scope: !6466)
!6471 = !DILocation(line: 3226, column: 3, scope: !6466)
!6472 = distinct !{!6472, !6467, !6473}
!6473 = !DILocation(line: 3227, column: 40, scope: !6463)
!6474 = !DILocation(line: 3228, column: 1, scope: !6458)
!6475 = distinct !DISubprogram(name: "has_dependence_p", scope: !3, file: !3, line: 3233, type: !6476, scopeLine: 3234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6480)
!6476 = !DISubroutineType(types: !6477)
!6477 = !{!1844, !2366, !1892, !6478}
!6478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6479, size: 64)
!6479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!6480 = !{!6481, !6482, !6483, !6484, !6485, !6486}
!6481 = !DILocalVariable(name: "expr", arg: 1, scope: !6475, file: !3, line: 3233, type: !2366)
!6482 = !DILocalVariable(name: "pred", arg: 2, scope: !6475, file: !3, line: 3233, type: !1892)
!6483 = !DILocalVariable(name: "has_dep_pp", arg: 3, scope: !6475, file: !3, line: 3233, type: !6478)
!6484 = !DILocalVariable(name: "i", scope: !6475, file: !3, line: 3235, type: !638)
!6485 = !DILocalVariable(name: "ds", scope: !6475, file: !3, line: 3236, type: !1844)
!6486 = !DILocalVariable(name: "dc", scope: !6475, file: !3, line: 3237, type: !1901)
!6487 = !DILocation(line: 0, scope: !6475)
!6488 = !DILocation(line: 3239, column: 7, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 3239, column: 7)
!6490 = !DILocation(line: 3239, column: 7, scope: !6475)
!6491 = !DILocation(line: 3244, column: 9, scope: !6475)
!6492 = !DILocation(line: 3247, column: 11, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 3247, column: 7)
!6494 = !DILocation(line: 3247, column: 20, scope: !6493)
!6495 = !DILocation(line: 3247, column: 7, scope: !6475)
!6496 = !DILocation(line: 3248, column: 5, scope: !6493)
!6497 = !DILocation(line: 3250, column: 12, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 3250, column: 7)
!6499 = !DILocation(line: 3250, column: 8, scope: !6498)
!6500 = !DILocation(line: 3250, column: 7, scope: !6475)
!6501 = !DILocation(line: 3252, column: 31, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 3251, column: 5)
!6503 = !DILocation(line: 3254, column: 7, scope: !6502)
!6504 = !DILocation(line: 3255, column: 20, scope: !6502)
!6505 = !DILocation(line: 3256, column: 5, scope: !6502)
!6506 = !DILocation(line: 3258, column: 29, scope: !6475)
!6507 = !DILocation(line: 3259, column: 27, scope: !6475)
!6508 = !DILocation(line: 3260, column: 29, scope: !6475)
!6509 = !DILocation(line: 3260, column: 27, scope: !6475)
!6510 = !DILocation(line: 3261, column: 26, scope: !6475)
!6511 = !DILocation(line: 3263, column: 3, scope: !6475)
!6512 = !DILocation(line: 3267, column: 3, scope: !6475)
!6513 = !DILocation(line: 3268, column: 26, scope: !6475)
!6514 = !DILocation(line: 3268, column: 3, scope: !6475)
!6515 = !DILocation(line: 3269, column: 26, scope: !6475)
!6516 = !DILocation(line: 3272, column: 11, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 3272, column: 7)
!6518 = !DILocation(line: 3272, column: 36, scope: !6517)
!6519 = !DILocation(line: 3272, column: 7, scope: !6475)
!6520 = !DILocation(line: 3273, column: 49, scope: !6517)
!6521 = !DILocation(line: 3273, column: 5, scope: !6517)
!6522 = !DILocation(line: 3274, column: 41, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 3274, column: 12)
!6524 = !DILocation(line: 3274, column: 12, scope: !6517)
!6525 = !DILocation(line: 3275, column: 49, scope: !6523)
!6526 = !DILocation(line: 3275, column: 5, scope: !6523)
!6527 = !DILocation(line: 3281, column: 7, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 3281, column: 7)
!6529 = !DILocation(line: 3282, column: 7, scope: !6528)
!6530 = !DILocation(line: 3282, column: 10, scope: !6528)
!6531 = !DILocation(line: 3283, column: 7, scope: !6528)
!6532 = !DILocation(line: 3283, column: 10, scope: !6528)
!6533 = !DILocation(line: 3281, column: 7, scope: !6475)
!6534 = !DILocation(line: 3284, column: 49, scope: !6528)
!6535 = !DILocation(line: 3284, column: 5, scope: !6528)
!6536 = !DILocation(line: 3286, column: 15, scope: !6475)
!6537 = !DILocation(line: 3288, column: 8, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 3288, column: 3)
!6539 = !DILocation(line: 0, scope: !6538)
!6540 = !DILocation(line: 3288, column: 17, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 3288, column: 3)
!6542 = !DILocation(line: 3288, column: 3, scope: !6538)
!6543 = !DILocation(line: 3289, column: 29, scope: !6541)
!6544 = !DILocation(line: 3289, column: 10, scope: !6541)
!6545 = !DILocation(line: 3288, column: 37, scope: !6541)
!6546 = !DILocation(line: 3288, column: 3, scope: !6541)
!6547 = distinct !{!6547, !6542, !6548}
!6548 = !DILocation(line: 3290, column: 22, scope: !6538)
!6549 = !DILocation(line: 3293, column: 1, scope: !6475)
!6550 = distinct !DISubprogram(name: "setup_has_dependence_sched_deps_info", scope: !3, file: !3, line: 3208, type: !2396, scopeLine: 3209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!6551 = !DILocation(line: 3210, column: 3, scope: !6550)
!6552 = !DILocation(line: 3214, column: 7, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 3214, column: 7)
!6554 = !DILocation(line: 3214, column: 17, scope: !6553)
!6555 = !DILocation(line: 3214, column: 7, scope: !6550)
!6556 = !DILocation(line: 3215, column: 55, scope: !6553)
!6557 = !DILocation(line: 3215, column: 5, scope: !6553)
!6558 = !DILocation(line: 3217, column: 19, scope: !6550)
!6559 = !DILocation(line: 3218, column: 1, scope: !6550)
!6560 = distinct !DISubprogram(name: "sel_insn_is_speculation_check", scope: !3, file: !3, line: 3446, type: !2502, scopeLine: 3447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6561)
!6561 = !{!6562}
!6562 = !DILocalVariable(name: "insn", arg: 1, scope: !6560, file: !3, line: 3446, type: !645)
!6563 = !DILocation(line: 0, scope: !6560)
!6564 = !DILocation(line: 3448, column: 10, scope: !6560)
!6565 = !DILocation(line: 3448, column: 16, scope: !6560)
!6566 = !DILocation(line: 3448, column: 22, scope: !6560)
!6567 = !DILocation(line: 3448, column: 20, scope: !6560)
!6568 = !DILocation(line: 3448, column: 3, scope: !6560)
!6569 = distinct !DISubprogram(name: "tick_check_p", scope: !3, file: !3, line: 3400, type: !6570, scopeLine: 3401, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6572)
!6570 = !DISubroutineType(types: !6571)
!6571 = !{!638, !2366, !1900, !3113}
!6572 = !{!6573, !6574, !6575, !6576}
!6573 = !DILocalVariable(name: "expr", arg: 1, scope: !6569, file: !3, line: 3400, type: !2366)
!6574 = !DILocalVariable(name: "dc", arg: 2, scope: !6569, file: !3, line: 3400, type: !1900)
!6575 = !DILocalVariable(name: "fence", arg: 3, scope: !6569, file: !3, line: 3400, type: !3113)
!6576 = !DILocalVariable(name: "cycles_left", scope: !6569, file: !3, line: 3402, type: !638)
!6577 = !DILocation(line: 0, scope: !6569)
!6578 = !DILocation(line: 3404, column: 24, scope: !6569)
!6579 = !DILocation(line: 3405, column: 25, scope: !6569)
!6580 = !DILocation(line: 3406, column: 35, scope: !6569)
!6581 = !DILocation(line: 3407, column: 19, scope: !6569)
!6582 = !DILocation(line: 3409, column: 3, scope: !6569)
!6583 = !DILocation(line: 3410, column: 16, scope: !6569)
!6584 = !DILocation(line: 3411, column: 26, scope: !6569)
!6585 = !DILocation(line: 3411, column: 3, scope: !6569)
!6586 = !DILocation(line: 3412, column: 16, scope: !6569)
!6587 = !DILocation(line: 3414, column: 33, scope: !6569)
!6588 = !DILocation(line: 3414, column: 41, scope: !6569)
!6589 = !DILocation(line: 3414, column: 39, scope: !6569)
!6590 = !DILocation(line: 3416, column: 10, scope: !6569)
!6591 = !DILocation(line: 3416, column: 3, scope: !6569)
!6592 = distinct !DISubprogram(name: "lhs_of_insn_equals_to_dest_p", scope: !3, file: !3, line: 3425, type: !6593, scopeLine: 3426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6595)
!6593 = !DISubroutineType(types: !6594)
!6594 = !{!637, !1892, !645}
!6595 = !{!6596, !6597, !6598}
!6596 = !DILocalVariable(name: "insn", arg: 1, scope: !6592, file: !3, line: 3425, type: !1892)
!6597 = !DILocalVariable(name: "dest", arg: 2, scope: !6592, file: !3, line: 3425, type: !645)
!6598 = !DILocalVariable(name: "lhs", scope: !6592, file: !3, line: 3427, type: !645)
!6599 = !DILocation(line: 0, scope: !6592)
!6600 = !DILocation(line: 3427, column: 13, scope: !6592)
!6601 = !DILocation(line: 3429, column: 11, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 3429, column: 7)
!6603 = !DILocation(line: 3429, column: 27, scope: !6602)
!6604 = !DILocation(line: 3429, column: 19, scope: !6602)
!6605 = !DILocation(line: 3432, column: 10, scope: !6592)
!6606 = !DILocation(line: 3432, column: 3, scope: !6592)
!6607 = !DILocation(line: 3433, column: 1, scope: !6592)
!6608 = distinct !DISubprogram(name: "insn_sid", scope: !3, file: !3, line: 3437, type: !6609, scopeLine: 3438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6611)
!6609 = !DISubroutineType(types: !6610)
!6610 = !{!2069, !1892}
!6611 = !{!6612}
!6612 = !DILocalVariable(name: "insn", arg: 1, scope: !6608, file: !3, line: 3437, type: !1892)
!6613 = !DILocation(line: 0, scope: !6608)
!6614 = !DILocation(line: 3439, column: 11, scope: !6608)
!6615 = !DILocation(line: 3439, column: 10, scope: !6608)
!6616 = !DILocation(line: 3439, column: 3, scope: !6608)
!6617 = distinct !DISubprogram(name: "get_dest_and_mode", scope: !3, file: !3, line: 3454, type: !6618, scopeLine: 3455, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6621)
!6618 = !DISubroutineType(types: !6619)
!6619 = !{null, !645, !1843, !6620}
!6620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!6621 = !{!6622, !6623, !6624, !6625}
!6622 = !DILocalVariable(name: "insn", arg: 1, scope: !6617, file: !3, line: 3454, type: !645)
!6623 = !DILocalVariable(name: "dst_loc", arg: 2, scope: !6617, file: !3, line: 3454, type: !1843)
!6624 = !DILocalVariable(name: "mode", arg: 3, scope: !6617, file: !3, line: 3454, type: !6620)
!6625 = !DILocalVariable(name: "pat", scope: !6617, file: !3, line: 3456, type: !645)
!6626 = !DILocation(line: 0, scope: !6617)
!6627 = !DILocation(line: 3456, column: 13, scope: !6617)
!6628 = !DILocation(line: 3458, column: 3, scope: !6617)
!6629 = !DILocation(line: 3459, column: 3, scope: !6617)
!6630 = !DILocation(line: 3461, column: 14, scope: !6617)
!6631 = !DILocation(line: 3461, column: 12, scope: !6617)
!6632 = !DILocation(line: 3463, column: 3, scope: !6617)
!6633 = !DILocation(line: 3464, column: 3, scope: !6617)
!6634 = !DILocation(line: 3466, column: 7, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 3466, column: 7)
!6636 = !DILocation(line: 3466, column: 7, scope: !6617)
!6637 = !DILocation(line: 3467, column: 13, scope: !6635)
!6638 = !DILocation(line: 3467, column: 11, scope: !6635)
!6639 = !DILocation(line: 3467, column: 5, scope: !6635)
!6640 = !DILocation(line: 3468, column: 1, scope: !6617)
!6641 = distinct !DISubprogram(name: "bookkeeping_can_be_created_if_moved_through_p", scope: !3, file: !3, line: 3473, type: !6142, scopeLine: 3474, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6642)
!6642 = !{!6643, !6644, !6645}
!6643 = !DILocalVariable(name: "jump", arg: 1, scope: !6641, file: !3, line: 3473, type: !1892)
!6644 = !DILocalVariable(name: "succ", scope: !6641, file: !3, line: 3475, type: !1892)
!6645 = !DILocalVariable(name: "si", scope: !6641, file: !3, line: 3476, type: !3251)
!6646 = !DILocation(line: 0, scope: !6641)
!6647 = !DILocation(line: 3475, column: 3, scope: !6641)
!6648 = !DILocation(line: 3476, column: 3, scope: !6641)
!6649 = !DILocation(line: 3478, column: 3, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 3478, column: 3)
!6651 = !DILocation(line: 3478, column: 3, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 3478, column: 3)
!6653 = !DILocation(line: 3479, column: 33, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 3479, column: 9)
!6655 = !DILocation(line: 3479, column: 9, scope: !6654)
!6656 = !DILocation(line: 3479, column: 9, scope: !6652)
!6657 = distinct !{!6657, !6649, !6658}
!6658 = !DILocation(line: 3480, column: 14, scope: !6650)
!6659 = !DILocation(line: 3483, column: 1, scope: !6641)
!6660 = distinct !DISubprogram(name: "sel_num_cfg_preds_gt_1", scope: !3, file: !3, line: 4618, type: !6142, scopeLine: 4619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6661)
!6661 = !{!6662, !6663}
!6662 = !DILocalVariable(name: "insn", arg: 1, scope: !6660, file: !3, line: 4618, type: !1892)
!6663 = !DILocalVariable(name: "bb", scope: !6660, file: !3, line: 4620, type: !1179)
!6664 = !DILocation(line: 0, scope: !6660)
!6665 = !DILocation(line: 4622, column: 8, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 4622, column: 7)
!6667 = !DILocation(line: 4622, column: 29, scope: !6666)
!6668 = !DILocation(line: 4622, column: 32, scope: !6666)
!6669 = !DILocation(line: 4622, column: 47, scope: !6666)
!6670 = !DILocation(line: 4622, column: 7, scope: !6660)
!6671 = !DILocation(line: 4627, column: 3, scope: !6660)
!6672 = !DILocation(line: 4629, column: 11, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 4629, column: 11)
!6674 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 4628, column: 5)
!6675 = !DILocation(line: 4629, column: 34, scope: !6673)
!6676 = !DILocation(line: 4629, column: 11, scope: !6674)
!6677 = !DILocation(line: 4632, column: 7, scope: !6674)
!6678 = !DILocation(line: 4633, column: 12, scope: !6674)
!6679 = !DILocation(line: 4633, column: 31, scope: !6674)
!6680 = !DILocation(line: 4635, column: 12, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 4635, column: 11)
!6682 = !DILocation(line: 4635, column: 11, scope: !6674)
!6683 = distinct !{!6683, !6671, !6684}
!6684 = !DILocation(line: 4637, column: 5, scope: !6660)
!6685 = !DILocation(line: 4640, column: 1, scope: !6660)
!6686 = distinct !DISubprogram(name: "tidy_control_flow", scope: !3, file: !3, line: 3632, type: !6687, scopeLine: 3633, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6689)
!6687 = !DISubroutineType(types: !6688)
!6688 = !{!637, !1179, !637}
!6689 = !{!6690, !6691, !6692, !6693, !6694, !6695}
!6690 = !DILocalVariable(name: "xbb", arg: 1, scope: !6686, file: !3, line: 3632, type: !1179)
!6691 = !DILocalVariable(name: "full_tidying", arg: 2, scope: !6686, file: !3, line: 3632, type: !637)
!6692 = !DILocalVariable(name: "changed", scope: !6686, file: !3, line: 3634, type: !637)
!6693 = !DILocalVariable(name: "first", scope: !6686, file: !3, line: 3635, type: !1892)
!6694 = !DILocalVariable(name: "last", scope: !6686, file: !3, line: 3635, type: !1892)
!6695 = !DILocalVariable(name: "recompute_toporder_p", scope: !6696, file: !3, line: 3689, type: !637)
!6696 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 3688, column: 5)
!6697 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 3673, column: 7)
!6698 = !DILocation(line: 0, scope: !6686)
!6699 = !DILocation(line: 3638, column: 13, scope: !6686)
!6700 = !DILocation(line: 3639, column: 7, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 3639, column: 7)
!6702 = !DILocation(line: 3639, column: 19, scope: !6701)
!6703 = !DILocation(line: 3639, column: 15, scope: !6701)
!6704 = !DILocation(line: 3643, column: 32, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 3643, column: 7)
!6706 = !DILocation(line: 3643, column: 51, scope: !6705)
!6707 = !DILocation(line: 3643, column: 7, scope: !6705)
!6708 = !DILocation(line: 3644, column: 7, scope: !6705)
!6709 = !DILocation(line: 3644, column: 10, scope: !6705)
!6710 = !DILocation(line: 3644, column: 42, scope: !6705)
!6711 = !DILocation(line: 3645, column: 7, scope: !6705)
!6712 = !DILocation(line: 3645, column: 11, scope: !6705)
!6713 = !DILocation(line: 3643, column: 7, scope: !6686)
!6714 = !DILocation(line: 3647, column: 28, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 3647, column: 11)
!6716 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 3646, column: 5)
!6717 = !DILocation(line: 3647, column: 11, scope: !6715)
!6718 = !DILocation(line: 3647, column: 11, scope: !6716)
!6719 = !DILocation(line: 3649, column: 27, scope: !6716)
!6720 = !DILocation(line: 3649, column: 7, scope: !6716)
!6721 = !DILocation(line: 3650, column: 5, scope: !6716)
!6722 = !DILocation(line: 3652, column: 11, scope: !6686)
!6723 = !DILocation(line: 3653, column: 10, scope: !6686)
!6724 = !DILocation(line: 3654, column: 7, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 3654, column: 7)
!6726 = !DILocation(line: 3654, column: 7, scope: !6686)
!6727 = !DILocation(line: 3656, column: 17, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 3656, column: 11)
!6729 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 3655, column: 5)
!6730 = !DILocation(line: 3656, column: 25, scope: !6728)
!6731 = !DILocation(line: 3656, column: 28, scope: !6728)
!6732 = !DILocation(line: 3656, column: 11, scope: !6729)
!6733 = !DILocation(line: 3659, column: 23, scope: !6728)
!6734 = !DILocation(line: 3658, column: 12, scope: !6728)
!6735 = !DILocation(line: 3659, column: 15, scope: !6728)
!6736 = !DILocation(line: 3659, column: 27, scope: !6728)
!6737 = !DILocation(line: 3659, column: 51, scope: !6728)
!6738 = !DILocation(line: 3659, column: 48, scope: !6728)
!6739 = distinct !{!6739, !6740, !6741}
!6740 = !DILocation(line: 3657, column: 2, scope: !6728)
!6741 = !DILocation(line: 3659, column: 66, scope: !6728)
!6742 = !DILocation(line: 3661, column: 17, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 3661, column: 11)
!6744 = !DILocation(line: 3661, column: 25, scope: !6743)
!6745 = !DILocation(line: 3661, column: 28, scope: !6743)
!6746 = !DILocation(line: 3661, column: 11, scope: !6729)
!6747 = !DILocation(line: 3664, column: 23, scope: !6743)
!6748 = !DILocation(line: 3663, column: 11, scope: !6743)
!6749 = !DILocation(line: 3664, column: 15, scope: !6743)
!6750 = !DILocation(line: 3664, column: 27, scope: !6743)
!6751 = !DILocation(line: 3664, column: 50, scope: !6743)
!6752 = !DILocation(line: 3664, column: 47, scope: !6743)
!6753 = distinct !{!6753, !6754, !6755}
!6754 = !DILocation(line: 3662, column: 2, scope: !6743)
!6755 = !DILocation(line: 3664, column: 64, scope: !6743)
!6756 = !DILocation(line: 3673, column: 13, scope: !6697)
!6757 = !DILocation(line: 3674, column: 7, scope: !6697)
!6758 = !DILocation(line: 3674, column: 11, scope: !6697)
!6759 = !DILocation(line: 3675, column: 7, scope: !6697)
!6760 = !DILocation(line: 3675, column: 10, scope: !6697)
!6761 = !DILocation(line: 3677, column: 7, scope: !6697)
!6762 = !DILocation(line: 3677, column: 10, scope: !6697)
!6763 = !DILocation(line: 3677, column: 34, scope: !6697)
!6764 = !DILocation(line: 3678, column: 7, scope: !6697)
!6765 = !DILocation(line: 3678, column: 11, scope: !6697)
!6766 = !DILocation(line: 3678, column: 31, scope: !6697)
!6767 = !DILocation(line: 3678, column: 37, scope: !6697)
!6768 = !DILocation(line: 3680, column: 7, scope: !6697)
!6769 = !DILocation(line: 3680, column: 10, scope: !6697)
!6770 = !DILocation(line: 3680, column: 31, scope: !6697)
!6771 = !DILocation(line: 3680, column: 28, scope: !6697)
!6772 = !DILocation(line: 3683, column: 7, scope: !6697)
!6773 = !DILocation(line: 3683, column: 36, scope: !6697)
!6774 = !DILocation(line: 3683, column: 10, scope: !6697)
!6775 = !DILocation(line: 3684, column: 7, scope: !6697)
!6776 = !DILocation(line: 3684, column: 35, scope: !6697)
!6777 = !DILocation(line: 3684, column: 63, scope: !6697)
!6778 = !DILocation(line: 3684, column: 10, scope: !6697)
!6779 = !DILocation(line: 3685, column: 7, scope: !6697)
!6780 = !DILocation(line: 3685, column: 10, scope: !6697)
!6781 = !DILocation(line: 3685, column: 51, scope: !6697)
!6782 = !DILocation(line: 3687, column: 7, scope: !6697)
!6783 = !DILocation(line: 3687, column: 11, scope: !6697)
!6784 = !DILocation(line: 3673, column: 7, scope: !6686)
!6785 = !DILocation(line: 3692, column: 19, scope: !6696)
!6786 = !DILocation(line: 3692, column: 7, scope: !6696)
!6787 = !DILocation(line: 3694, column: 41, scope: !6696)
!6788 = !DILocation(line: 3694, column: 11, scope: !6696)
!6789 = !DILocation(line: 0, scope: !6696)
!6790 = !DILocation(line: 3696, column: 7, scope: !6696)
!6791 = !DILocation(line: 3701, column: 32, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 3701, column: 11)
!6793 = !DILocation(line: 3701, column: 11, scope: !6792)
!6794 = !DILocation(line: 3701, column: 11, scope: !6696)
!6795 = !DILocation(line: 3702, column: 45, scope: !6792)
!6796 = !DILocation(line: 3702, column: 19, scope: !6792)
!6797 = !DILocation(line: 3702, column: 9, scope: !6792)
!6798 = !DILocation(line: 3703, column: 16, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 3703, column: 16)
!6800 = !DILocation(line: 3703, column: 16, scope: !6792)
!6801 = !DILocation(line: 3704, column: 2, scope: !6799)
!6802 = !DILocation(line: 3708, column: 1, scope: !6686)
!6803 = distinct !DISubprogram(name: "maybe_tidy_empty_bb", scope: !3, file: !3, line: 3547, type: !6687, scopeLine: 3548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6804)
!6804 = !{!6805, !6806, !6807, !6808, !6809, !6810, !6811}
!6805 = !DILocalVariable(name: "bb", arg: 1, scope: !6803, file: !3, line: 3547, type: !1179)
!6806 = !DILocalVariable(name: "recompute_toporder_p", arg: 2, scope: !6803, file: !3, line: 3547, type: !637)
!6807 = !DILocalVariable(name: "succ_bb", scope: !6803, file: !3, line: 3549, type: !1179)
!6808 = !DILocalVariable(name: "pred_bb", scope: !6803, file: !3, line: 3549, type: !1179)
!6809 = !DILocalVariable(name: "e", scope: !6803, file: !3, line: 3550, type: !1196)
!6810 = !DILocalVariable(name: "ei", scope: !6803, file: !3, line: 3551, type: !3258)
!6811 = !DILocalVariable(name: "rescan_p", scope: !6803, file: !3, line: 3552, type: !637)
!6812 = !DILocation(line: 0, scope: !6803)
!6813 = !DILocation(line: 3550, column: 3, scope: !6803)
!6814 = !DILocation(line: 3551, column: 3, scope: !6803)
!6815 = !DILocation(line: 3557, column: 8, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 3557, column: 7)
!6817 = !DILocation(line: 3558, column: 7, scope: !6816)
!6818 = !DILocation(line: 3558, column: 11, scope: !6816)
!6819 = !DILocation(line: 3559, column: 11, scope: !6816)
!6820 = !DILocation(line: 3559, column: 14, scope: !6816)
!6821 = !DILocation(line: 3559, column: 34, scope: !6816)
!6822 = !DILocation(line: 3559, column: 31, scope: !6816)
!6823 = !DILocation(line: 3560, column: 11, scope: !6816)
!6824 = !DILocation(line: 3560, column: 16, scope: !6816)
!6825 = !DILocation(line: 3561, column: 15, scope: !6816)
!6826 = !DILocation(line: 3561, column: 20, scope: !6816)
!6827 = !DILocation(line: 3561, column: 43, scope: !6816)
!6828 = !DILocation(line: 3561, column: 49, scope: !6816)
!6829 = !DILocation(line: 3562, column: 7, scope: !6816)
!6830 = !DILocation(line: 3562, column: 10, scope: !6816)
!6831 = !DILocation(line: 3562, column: 33, scope: !6816)
!6832 = !DILocation(line: 3563, column: 7, scope: !6816)
!6833 = !DILocation(line: 3563, column: 10, scope: !6816)
!6834 = !DILocation(line: 3563, column: 33, scope: !6816)
!6835 = !DILocation(line: 3557, column: 7, scope: !6803)
!6836 = !DILocation(line: 3567, column: 3, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 3567, column: 3)
!6838 = !DILocation(line: 0, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 3567, column: 3)
!6840 = !DILocation(line: 3567, column: 3, scope: !6839)
!6841 = !DILocation(line: 3568, column: 9, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 3568, column: 9)
!6843 = !DILocation(line: 3568, column: 12, scope: !6842)
!6844 = !DILocation(line: 3568, column: 18, scope: !6842)
!6845 = !DILocation(line: 3568, column: 9, scope: !6839)
!6846 = distinct !{!6846, !6836, !6847}
!6847 = !DILocation(line: 3569, column: 14, scope: !6837)
!6848 = !DILocation(line: 3571, column: 3, scope: !6803)
!6849 = !DILocation(line: 3575, column: 8, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 3575, column: 7)
!6851 = !DILocation(line: 3575, column: 7, scope: !6803)
!6852 = !DILocation(line: 3577, column: 7, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 3576, column: 5)
!6854 = !DILocation(line: 3578, column: 29, scope: !6853)
!6855 = !DILocation(line: 3578, column: 7, scope: !6853)
!6856 = !DILocation(line: 3579, column: 7, scope: !6853)
!6857 = !DILocation(line: 3582, column: 13, scope: !6803)
!6858 = !DILocation(line: 0, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 3591, column: 7)
!6860 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 3588, column: 5)
!6861 = !DILocation(line: 3587, column: 3, scope: !6803)
!6862 = !DILocation(line: 3591, column: 7, scope: !6859)
!6863 = !DILocation(line: 3591, column: 7, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 3591, column: 7)
!6865 = !DILocation(line: 3593, column: 21, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 3592, column: 9)
!6867 = !DILocation(line: 3593, column: 24, scope: !6866)
!6868 = !DILocation(line: 3595, column: 20, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 3595, column: 15)
!6870 = !DILocation(line: 3595, column: 26, scope: !6869)
!6871 = !DILocation(line: 3595, column: 15, scope: !6866)
!6872 = !DILocation(line: 3597, column: 39, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 3596, column: 13)
!6874 = !DILocation(line: 3597, column: 36, scope: !6873)
!6875 = !DILocation(line: 3599, column: 15, scope: !6873)
!6876 = distinct !{!6876, !6862, !6877}
!6877 = !DILocation(line: 3601, column: 9, scope: !6859)
!6878 = !DILocation(line: 0, scope: !6860)
!6879 = distinct !{!6879, !6861, !6880}
!6880 = !DILocation(line: 3602, column: 5, scope: !6803)
!6881 = !DILocation(line: 3605, column: 31, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 3605, column: 7)
!6883 = !DILocation(line: 3605, column: 7, scope: !6882)
!6884 = !DILocation(line: 3605, column: 7, scope: !6803)
!6885 = !DILocation(line: 3606, column: 27, scope: !6882)
!6886 = !DILocation(line: 3606, column: 5, scope: !6882)
!6887 = !DILocation(line: 3611, column: 7, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 3610, column: 5)
!6889 = !DILocation(line: 3613, column: 11, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 3613, column: 11)
!6891 = !DILocation(line: 3613, column: 11, scope: !6888)
!6892 = !DILocation(line: 3614, column: 2, scope: !6890)
!6893 = !DILocation(line: 3615, column: 7, scope: !6888)
!6894 = !DILocation(line: 3618, column: 7, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 3618, column: 7)
!6896 = !DILocation(line: 3618, column: 7, scope: !6803)
!6897 = !DILocation(line: 3619, column: 5, scope: !6895)
!6898 = !DILocation(line: 3626, column: 1, scope: !6803)
!6899 = distinct !DISubprogram(name: "jump_leads_only_to_bb_p", scope: !3, file: !3, line: 6103, type: !6900, scopeLine: 6104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6902)
!6900 = !DISubroutineType(types: !6901)
!6901 = !{!637, !1892, !1179}
!6902 = !{!6903, !6904, !6905}
!6903 = !DILocalVariable(name: "jump", arg: 1, scope: !6899, file: !3, line: 6103, type: !1892)
!6904 = !DILocalVariable(name: "dest_bb", arg: 2, scope: !6899, file: !3, line: 6103, type: !1179)
!6905 = !DILocalVariable(name: "jump_bb", scope: !6899, file: !3, line: 6105, type: !1179)
!6906 = !DILocation(line: 0, scope: !6899)
!6907 = !DILocation(line: 6105, column: 25, scope: !6899)
!6908 = !DILocation(line: 6109, column: 8, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6899, file: !3, line: 6109, column: 7)
!6910 = !DILocation(line: 6110, column: 7, scope: !6909)
!6911 = !DILocation(line: 6110, column: 11, scope: !6909)
!6912 = !DILocation(line: 6109, column: 7, scope: !6899)
!6913 = !DILocation(line: 6115, column: 7, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6899, file: !3, line: 6115, column: 7)
!6915 = !DILocation(line: 6115, column: 35, scope: !6914)
!6916 = !DILocation(line: 6116, column: 7, scope: !6914)
!6917 = !DILocation(line: 6116, column: 10, scope: !6914)
!6918 = !DILocation(line: 6116, column: 34, scope: !6914)
!6919 = !DILocation(line: 6116, column: 40, scope: !6914)
!6920 = !DILocation(line: 6117, column: 7, scope: !6914)
!6921 = !DILocation(line: 6117, column: 10, scope: !6914)
!6922 = !DILocation(line: 6117, column: 34, scope: !6914)
!6923 = !DILocation(line: 6117, column: 39, scope: !6914)
!6924 = !DILocation(line: 6115, column: 7, scope: !6899)
!6925 = !DILocation(line: 6122, column: 1, scope: !6899)
!6926 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !155, file: !155, line: 150, type: !6927, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6931)
!6927 = !DISubroutineType(types: !6928)
!6928 = !{!1196, !6929, !7}
!6929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6930, size: 64)
!6930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1189)
!6931 = !{!6932, !6933}
!6932 = !DILocalVariable(name: "vec_", arg: 1, scope: !6926, file: !155, line: 150, type: !6929)
!6933 = !DILocalVariable(name: "ix_", arg: 2, scope: !6926, file: !155, line: 150, type: !7)
!6934 = !DILocation(line: 0, scope: !6926)
!6935 = !DILocation(line: 150, column: 1, scope: !6926)
!6936 = distinct !DISubprogram(name: "sel_bb_head", scope: !3, file: !3, line: 4316, type: !6937, scopeLine: 4317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6939)
!6937 = !DISubroutineType(types: !6938)
!6938 = !{!1892, !1179}
!6939 = !{!6940, !6941, !6942}
!6940 = !DILocalVariable(name: "bb", arg: 1, scope: !6936, file: !3, line: 4316, type: !1179)
!6941 = !DILocalVariable(name: "head", scope: !6936, file: !3, line: 4318, type: !1892)
!6942 = !DILocalVariable(name: "note", scope: !6943, file: !3, line: 4327, type: !1892)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 4326, column: 5)
!6944 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 4320, column: 7)
!6945 = !DILocation(line: 0, scope: !6936)
!6946 = !DILocation(line: 4320, column: 13, scope: !6944)
!6947 = !DILocation(line: 4320, column: 10, scope: !6944)
!6948 = !DILocation(line: 4320, column: 7, scope: !6936)
!6949 = !DILocation(line: 4322, column: 7, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 4321, column: 5)
!6951 = !DILocation(line: 4323, column: 14, scope: !6950)
!6952 = !DILocation(line: 4324, column: 5, scope: !6950)
!6953 = !DILocation(line: 4329, column: 14, scope: !6943)
!6954 = !DILocation(line: 0, scope: !6943)
!6955 = !DILocation(line: 4330, column: 14, scope: !6943)
!6956 = !DILocation(line: 4332, column: 11, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 4332, column: 11)
!6958 = !DILocation(line: 4332, column: 16, scope: !6957)
!6959 = !DILocation(line: 4332, column: 19, scope: !6957)
!6960 = !DILocation(line: 4332, column: 41, scope: !6957)
!6961 = !DILocation(line: 4332, column: 11, scope: !6943)
!6962 = !DILocation(line: 0, scope: !6944)
!6963 = !DILocation(line: 4336, column: 3, scope: !6936)
!6964 = distinct !DISubprogram(name: "sel_bb_end", scope: !3, file: !3, line: 4348, type: !6937, scopeLine: 4349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6965)
!6965 = !{!6966}
!6966 = !DILocalVariable(name: "bb", arg: 1, scope: !6964, file: !3, line: 4348, type: !1179)
!6967 = !DILocation(line: 0, scope: !6964)
!6968 = !DILocation(line: 4350, column: 7, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 4350, column: 7)
!6970 = !DILocation(line: 4350, column: 7, scope: !6964)
!6971 = !DILocation(line: 4353, column: 3, scope: !6964)
!6972 = !DILocation(line: 4355, column: 10, scope: !6964)
!6973 = !DILocation(line: 4355, column: 3, scope: !6964)
!6974 = !DILocation(line: 4356, column: 1, scope: !6964)
!6975 = distinct !DISubprogram(name: "sel_bb_empty_p", scope: !3, file: !3, line: 4367, type: !2309, scopeLine: 4368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6976)
!6976 = !{!6977}
!6977 = !DILocalVariable(name: "bb", arg: 1, scope: !6975, file: !3, line: 4367, type: !1179)
!6978 = !DILocation(line: 0, scope: !6975)
!6979 = !DILocation(line: 4369, column: 10, scope: !6975)
!6980 = !DILocation(line: 4369, column: 27, scope: !6975)
!6981 = !DILocation(line: 4369, column: 3, scope: !6975)
!6982 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !155, file: !155, line: 150, type: !6983, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6985)
!6983 = !DISubroutineType(types: !6984)
!6984 = !{!7, !6929}
!6985 = !{!6986}
!6986 = !DILocalVariable(name: "vec_", arg: 1, scope: !6982, file: !155, line: 150, type: !6929)
!6987 = !DILocation(line: 0, scope: !6982)
!6988 = !DILocation(line: 150, column: 1, scope: !6982)
!6989 = distinct !DISubprogram(name: "single_succ", scope: !155, file: !155, line: 663, type: !6990, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6992)
!6990 = !DISubroutineType(types: !6991)
!6991 = !{!1179, !2287}
!6992 = !{!6993}
!6993 = !DILocalVariable(name: "bb", arg: 1, scope: !6989, file: !155, line: 663, type: !2287)
!6994 = !DILocation(line: 0, scope: !6989)
!6995 = !DILocation(line: 665, column: 10, scope: !6989)
!6996 = !DILocation(line: 665, column: 33, scope: !6989)
!6997 = !DILocation(line: 665, column: 3, scope: !6989)
!6998 = distinct !DISubprogram(name: "in_current_region_p", scope: !3, file: !3, line: 4374, type: !2309, scopeLine: 4375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6999)
!6999 = !{!7000}
!7000 = !DILocalVariable(name: "bb", arg: 1, scope: !6998, file: !3, line: 4374, type: !1179)
!7001 = !DILocation(line: 0, scope: !6998)
!7002 = !DILocation(line: 4376, column: 11, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6998, file: !3, line: 4376, column: 7)
!7004 = !DILocation(line: 4376, column: 17, scope: !7003)
!7005 = !DILocation(line: 4376, column: 7, scope: !6998)
!7006 = !DILocation(line: 4379, column: 10, scope: !6998)
!7007 = !DILocation(line: 4379, column: 40, scope: !6998)
!7008 = !DILocation(line: 4379, column: 37, scope: !6998)
!7009 = !DILocation(line: 4379, column: 3, scope: !6998)
!7010 = !DILocation(line: 4380, column: 1, scope: !6998)
!7011 = distinct !DISubprogram(name: "sel_redirect_edge_and_branch", scope: !3, file: !3, line: 5435, type: !7012, scopeLine: 5436, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7014)
!7012 = !DISubroutineType(types: !7013)
!7013 = !{!637, !1196, !1179}
!7014 = !{!7015, !7016, !7017, !7018, !7019, !7020, !7021, !7022}
!7015 = !DILocalVariable(name: "e", arg: 1, scope: !7011, file: !3, line: 5435, type: !1196)
!7016 = !DILocalVariable(name: "to", arg: 2, scope: !7011, file: !3, line: 5435, type: !1179)
!7017 = !DILocalVariable(name: "latch_edge_p", scope: !7011, file: !3, line: 5437, type: !637)
!7018 = !DILocalVariable(name: "src", scope: !7011, file: !3, line: 5438, type: !1179)
!7019 = !DILocalVariable(name: "prev_max_uid", scope: !7011, file: !3, line: 5439, type: !638)
!7020 = !DILocalVariable(name: "jump", scope: !7011, file: !3, line: 5440, type: !645)
!7021 = !DILocalVariable(name: "redirected", scope: !7011, file: !3, line: 5441, type: !1196)
!7022 = !DILocalVariable(name: "recompute_toporder_p", scope: !7011, file: !3, line: 5442, type: !637)
!7023 = !DILocation(line: 0, scope: !7011)
!7024 = !DILocation(line: 5444, column: 19, scope: !7011)
!7025 = !DILocation(line: 5445, column: 22, scope: !7011)
!7026 = !DILocation(line: 5445, column: 19, scope: !7011)
!7027 = !DILocation(line: 5446, column: 27, scope: !7011)
!7028 = !DILocation(line: 5446, column: 24, scope: !7011)
!7029 = !DILocation(line: 5448, column: 12, scope: !7011)
!7030 = !DILocation(line: 5449, column: 18, scope: !7011)
!7031 = !DILocation(line: 5451, column: 16, scope: !7011)
!7032 = !DILocation(line: 5453, column: 3, scope: !7011)
!7033 = !DILocation(line: 5456, column: 7, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 5456, column: 7)
!7035 = !DILocation(line: 5456, column: 7, scope: !7011)
!7036 = !DILocation(line: 5458, column: 7, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 5457, column: 5)
!7038 = !DILocation(line: 5458, column: 26, scope: !7037)
!7039 = !DILocation(line: 5458, column: 33, scope: !7037)
!7040 = !DILocation(line: 5459, column: 7, scope: !7037)
!7041 = !DILocation(line: 5465, column: 7, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 5465, column: 7)
!7043 = !DILocation(line: 5465, column: 41, scope: !7042)
!7044 = !DILocation(line: 5465, column: 38, scope: !7042)
!7045 = !DILocation(line: 5466, column: 7, scope: !7042)
!7046 = !DILocation(line: 5466, column: 10, scope: !7042)
!7047 = !DILocation(line: 5466, column: 40, scope: !7042)
!7048 = !DILocation(line: 5466, column: 38, scope: !7042)
!7049 = !DILocation(line: 5465, column: 7, scope: !7011)
!7050 = !DILocation(line: 5469, column: 10, scope: !7011)
!7051 = !DILocation(line: 5470, column: 7, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 5470, column: 7)
!7053 = !DILocation(line: 5470, column: 7, scope: !7011)
!7054 = !DILocation(line: 5471, column: 5, scope: !7052)
!7055 = !DILocation(line: 5473, column: 3, scope: !7011)
!7056 = distinct !DISubprogram(name: "sel_recompute_toporder", scope: !3, file: !3, line: 3522, type: !2396, scopeLine: 3523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7057)
!7057 = !{!7058, !7059, !7060, !7061, !7062}
!7058 = !DILocalVariable(name: "i", scope: !7056, file: !3, line: 3524, type: !638)
!7059 = !DILocalVariable(name: "n", scope: !7056, file: !3, line: 3524, type: !638)
!7060 = !DILocalVariable(name: "rgn", scope: !7056, file: !3, line: 3524, type: !638)
!7061 = !DILocalVariable(name: "postorder", scope: !7056, file: !3, line: 3525, type: !1839)
!7062 = !DILocalVariable(name: "n_blocks", scope: !7056, file: !3, line: 3525, type: !638)
!7063 = !DILocation(line: 3527, column: 15, scope: !7056)
!7064 = !DILocation(line: 0, scope: !7056)
!7065 = !DILocation(line: 3528, column: 14, scope: !7056)
!7066 = !DILocation(line: 3530, column: 9, scope: !7056)
!7067 = !DILocation(line: 3531, column: 8, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 3531, column: 3)
!7069 = !DILocation(line: 0, scope: !7068)
!7070 = !DILocation(line: 3531, column: 35, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 3531, column: 3)
!7072 = !DILocation(line: 3531, column: 3, scope: !7068)
!7073 = !DILocation(line: 3532, column: 9, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 3532, column: 9)
!7075 = !DILocation(line: 3532, column: 39, scope: !7074)
!7076 = !DILocation(line: 3532, column: 9, scope: !7071)
!7077 = !DILocation(line: 3534, column: 2, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 3533, column: 7)
!7079 = !DILocation(line: 3534, column: 29, scope: !7078)
!7080 = !DILocation(line: 3535, column: 20, scope: !7078)
!7081 = !DILocation(line: 3535, column: 2, scope: !7078)
!7082 = !DILocation(line: 3535, column: 18, scope: !7078)
!7083 = !DILocation(line: 3536, column: 3, scope: !7078)
!7084 = !DILocation(line: 3537, column: 7, scope: !7078)
!7085 = !DILocation(line: 3531, column: 3, scope: !7071)
!7086 = distinct !{!7086, !7072, !7087}
!7087 = !DILocation(line: 3537, column: 7, scope: !7068)
!7088 = !DILocation(line: 3542, column: 3, scope: !7056)
!7089 = !DILocation(line: 3543, column: 1, scope: !7056)
!7090 = distinct !DISubprogram(name: "purge_empty_blocks", scope: !3, file: !3, line: 3712, type: !2396, scopeLine: 3713, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7091)
!7091 = !{!7092, !7093}
!7092 = !DILocalVariable(name: "i", scope: !7090, file: !3, line: 3715, type: !638)
!7093 = !DILocalVariable(name: "b", scope: !7094, file: !3, line: 3719, type: !1179)
!7094 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 3718, column: 5)
!7095 = !DILocation(line: 3715, column: 36, scope: !7090)
!7096 = !DILocation(line: 3715, column: 11, scope: !7090)
!7097 = !DILocation(line: 0, scope: !7090)
!7098 = !DILocation(line: 3717, column: 3, scope: !7090)
!7099 = !DILocation(line: 3715, column: 7, scope: !7090)
!7100 = !DILocation(line: 3717, column: 14, scope: !7090)
!7101 = !DILocation(line: 3717, column: 12, scope: !7090)
!7102 = !DILocation(line: 3719, column: 23, scope: !7094)
!7103 = !DILocation(line: 0, scope: !7094)
!7104 = !DILocation(line: 3721, column: 11, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 3721, column: 11)
!7106 = !DILocation(line: 3721, column: 11, scope: !7094)
!7107 = !DILocation(line: 3726, column: 1, scope: !7090)
!7108 = distinct !DISubprogram(name: "sel_is_loop_preheader_p", scope: !3, file: !3, line: 6069, type: !2309, scopeLine: 6070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7109)
!7109 = !{!7110, !7111}
!7110 = !DILocalVariable(name: "bb", arg: 1, scope: !7108, file: !3, line: 6069, type: !1179)
!7111 = !DILocalVariable(name: "outer", scope: !7112, file: !3, line: 6073, type: !1221)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 6072, column: 5)
!7113 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 6071, column: 7)
!7114 = !DILocation(line: 0, scope: !7108)
!7115 = !DILocation(line: 6071, column: 7, scope: !7113)
!7116 = !DILocation(line: 6071, column: 7, scope: !7108)
!7117 = !DILocation(line: 6075, column: 11, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 6075, column: 11)
!7119 = !DILocation(line: 6075, column: 11, scope: !7112)
!7120 = !DILocation(line: 6079, column: 11, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 6079, column: 11)
!7122 = !DILocation(line: 6079, column: 35, scope: !7121)
!7123 = !DILocation(line: 6079, column: 11, scope: !7112)
!7124 = !DILocation(line: 6085, column: 51, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 6085, column: 11)
!7126 = !DILocation(line: 6085, column: 11, scope: !7125)
!7127 = !DILocation(line: 6085, column: 11, scope: !7112)
!7128 = !DILocation(line: 6086, column: 2, scope: !7125)
!7129 = !DILocation(line: 6091, column: 32, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 6091, column: 7)
!7131 = !DILocation(line: 6091, column: 20, scope: !7130)
!7132 = !DILocation(line: 0, scope: !7112)
!7133 = !DILocation(line: 6091, column: 12, scope: !7130)
!7134 = !DILocation(line: 0, scope: !7130)
!7135 = !DILocation(line: 6091, column: 7, scope: !7130)
!7136 = !DILocation(line: 6094, column: 13, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 6094, column: 13)
!7138 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 6091, column: 7)
!7139 = !DILocation(line: 6094, column: 49, scope: !7137)
!7140 = !DILocation(line: 6094, column: 59, scope: !7137)
!7141 = !DILocation(line: 6094, column: 65, scope: !7137)
!7142 = !DILocation(line: 6094, column: 13, scope: !7138)
!7143 = !DILocation(line: 6095, column: 11, scope: !7137)
!7144 = !DILocation(line: 6093, column: 13, scope: !7138)
!7145 = !DILocation(line: 6091, column: 7, scope: !7138)
!7146 = distinct !{!7146, !7135, !7147}
!7147 = !DILocation(line: 6095, column: 11, scope: !7130)
!7148 = !DILocation(line: 6098, column: 3, scope: !7108)
!7149 = !DILocation(line: 6099, column: 1, scope: !7108)
!7150 = distinct !DISubprogram(name: "VEC_sel_region_bb_info_def_base_index", scope: !409, file: !409, line: 922, type: !7151, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7155)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{!7153, !7154, !7}
!7153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!7154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!7155 = !{!7156, !7157}
!7156 = !DILocalVariable(name: "vec_", arg: 1, scope: !7150, file: !409, line: 922, type: !7154)
!7157 = !DILocalVariable(name: "ix_", arg: 2, scope: !7150, file: !409, line: 922, type: !7)
!7158 = !DILocation(line: 0, scope: !7150)
!7159 = !DILocation(line: 922, column: 1, scope: !7150)
!7160 = distinct !DISubprogram(name: "get_seqno_by_preds", scope: !3, file: !3, line: 3862, type: !2176, scopeLine: 3863, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7161)
!7161 = !{!7162, !7163, !7164, !7165, !7166, !7167, !7168, !7169}
!7162 = !DILocalVariable(name: "insn", arg: 1, scope: !7160, file: !3, line: 3862, type: !645)
!7163 = !DILocalVariable(name: "bb", scope: !7160, file: !3, line: 3864, type: !1179)
!7164 = !DILocalVariable(name: "tmp", scope: !7160, file: !3, line: 3865, type: !645)
!7165 = !DILocalVariable(name: "head", scope: !7160, file: !3, line: 3865, type: !645)
!7166 = !DILocalVariable(name: "preds", scope: !7160, file: !3, line: 3866, type: !2114)
!7167 = !DILocalVariable(name: "n", scope: !7160, file: !3, line: 3867, type: !638)
!7168 = !DILocalVariable(name: "i", scope: !7160, file: !3, line: 3867, type: !638)
!7169 = !DILocalVariable(name: "seqno", scope: !7160, file: !3, line: 3867, type: !638)
!7170 = !DILocation(line: 0, scope: !7160)
!7171 = !DILocation(line: 3864, column: 20, scope: !7160)
!7172 = !DILocation(line: 3865, column: 26, scope: !7160)
!7173 = !DILocation(line: 3866, column: 3, scope: !7160)
!7174 = !DILocation(line: 3867, column: 3, scope: !7160)
!7175 = !DILocation(line: 3869, column: 3, scope: !7160)
!7176 = !DILocation(line: 3869, column: 14, scope: !7160)
!7177 = !DILocation(line: 3870, column: 9, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 3870, column: 9)
!7179 = !DILocation(line: 3870, column: 9, scope: !7160)
!7180 = !DILocation(line: 3871, column: 14, scope: !7178)
!7181 = !DILocation(line: 3871, column: 7, scope: !7178)
!7182 = !DILocation(line: 3873, column: 13, scope: !7178)
!7183 = distinct !{!7183, !7175, !7184}
!7184 = !DILocation(line: 3873, column: 13, scope: !7160)
!7185 = !DILocation(line: 3875, column: 3, scope: !7160)
!7186 = !DILocation(line: 3876, column: 8, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 3876, column: 3)
!7188 = !DILocation(line: 0, scope: !7187)
!7189 = !DILocation(line: 3876, column: 31, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 3876, column: 3)
!7191 = !DILocation(line: 3876, column: 29, scope: !7190)
!7192 = !DILocation(line: 3876, column: 3, scope: !7187)
!7193 = !DILocation(line: 3877, column: 13, scope: !7190)
!7194 = !DILocation(line: 3876, column: 35, scope: !7190)
!7195 = !DILocation(line: 3876, column: 3, scope: !7190)
!7196 = distinct !{!7196, !7192, !7197}
!7197 = !DILocation(line: 3877, column: 13, scope: !7187)
!7198 = !DILocation(line: 3880, column: 1, scope: !7160)
!7199 = distinct !DISubprogram(name: "cfg_preds", scope: !3, file: !3, line: 4607, type: !7200, scopeLine: 4608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7203)
!7200 = !DISubroutineType(types: !7201)
!7201 = !{null, !1179, !7202, !1839}
!7202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!7203 = !{!7204, !7205, !7206, !7207}
!7204 = !DILocalVariable(name: "bb", arg: 1, scope: !7199, file: !3, line: 4607, type: !1179)
!7205 = !DILocalVariable(name: "preds", arg: 2, scope: !7199, file: !3, line: 4607, type: !7202)
!7206 = !DILocalVariable(name: "n", arg: 3, scope: !7199, file: !3, line: 4607, type: !1839)
!7207 = !DILocalVariable(name: "size", scope: !7199, file: !3, line: 4609, type: !638)
!7208 = !DILocation(line: 0, scope: !7199)
!7209 = !DILocation(line: 4609, column: 3, scope: !7199)
!7210 = !DILocation(line: 4609, column: 7, scope: !7199)
!7211 = !DILocation(line: 4611, column: 10, scope: !7199)
!7212 = !DILocation(line: 4612, column: 6, scope: !7199)
!7213 = !DILocation(line: 4613, column: 3, scope: !7199)
!7214 = !DILocation(line: 4614, column: 1, scope: !7199)
!7215 = distinct !DISubprogram(name: "sel_extend_global_bb_info", scope: !3, file: !3, line: 3886, type: !2396, scopeLine: 3887, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!7216 = !DILocation(line: 3888, column: 3, scope: !7215)
!7217 = !DILocation(line: 3890, column: 1, scope: !7215)
!7218 = distinct !DISubprogram(name: "VEC_sel_global_bb_info_def_heap_safe_grow_cleared", scope: !409, file: !409, line: 889, type: !7219, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7222)
!7219 = !DISubroutineType(types: !7220)
!7220 = !{null, !7221, !638}
!7221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!7222 = !{!7223, !7224, !7225}
!7223 = !DILocalVariable(name: "vec_", arg: 1, scope: !7218, file: !409, line: 889, type: !7221)
!7224 = !DILocalVariable(name: "size_", arg: 2, scope: !7218, file: !409, line: 889, type: !638)
!7225 = !DILocalVariable(name: "oldsize", scope: !7218, file: !409, line: 889, type: !638)
!7226 = !DILocation(line: 0, scope: !7218)
!7227 = !DILocation(line: 889, column: 1, scope: !7218)
!7228 = distinct !DISubprogram(name: "sel_finish_global_bb_info", scope: !3, file: !3, line: 3910, type: !2396, scopeLine: 3911, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!7229 = !DILocation(line: 3912, column: 3, scope: !7228)
!7230 = !DILocation(line: 3913, column: 1, scope: !7228)
!7231 = distinct !DISubprogram(name: "VEC_sel_global_bb_info_def_heap_free", scope: !409, file: !409, line: 889, type: !7232, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7234)
!7232 = !DISubroutineType(types: !7233)
!7233 = !{null, !7221}
!7234 = !{!7235}
!7235 = !DILocalVariable(name: "vec_", arg: 1, scope: !7231, file: !409, line: 889, type: !7221)
!7236 = !DILocation(line: 0, scope: !7231)
!7237 = !DILocation(line: 889, column: 1, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7231, file: !409, line: 889, column: 1)
!7239 = !DILocation(line: 889, column: 1, scope: !7231)
!7240 = distinct !DISubprogram(name: "init_lv_sets", scope: !3, file: !3, line: 4112, type: !2396, scopeLine: 4113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7241)
!7241 = !{!7242}
!7242 = !DILocalVariable(name: "bb", scope: !7240, file: !3, line: 4114, type: !1179)
!7243 = !DILocation(line: 4117, column: 3, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 4117, column: 3)
!7245 = !DILocation(line: 4117, column: 3, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 4117, column: 3)
!7247 = !DILocation(line: 0, scope: !7244)
!7248 = !DILocation(line: 0, scope: !7240)
!7249 = !DILocation(line: 4118, column: 5, scope: !7246)
!7250 = !DILocation(line: 0, scope: !7246)
!7251 = distinct !{!7251, !7243, !7252}
!7252 = !DILocation(line: 4118, column: 20, scope: !7244)
!7253 = !DILocation(line: 4121, column: 3, scope: !7240)
!7254 = !DILocation(line: 4122, column: 1, scope: !7240)
!7255 = distinct !DISubprogram(name: "init_lv_set", scope: !3, file: !3, line: 4091, type: !2267, scopeLine: 4092, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7256)
!7256 = !{!7257}
!7257 = !DILocalVariable(name: "bb", arg: 1, scope: !7255, file: !3, line: 4091, type: !1179)
!7258 = !DILocation(line: 0, scope: !7255)
!7259 = !DILocation(line: 4093, column: 3, scope: !7255)
!7260 = !DILocation(line: 4095, column: 20, scope: !7255)
!7261 = !DILocation(line: 4095, column: 3, scope: !7255)
!7262 = !DILocation(line: 4095, column: 18, scope: !7255)
!7263 = !DILocation(line: 4096, column: 3, scope: !7255)
!7264 = !DILocation(line: 4097, column: 3, scope: !7255)
!7265 = !DILocation(line: 4097, column: 26, scope: !7255)
!7266 = !DILocation(line: 4098, column: 1, scope: !7255)
!7267 = distinct !DISubprogram(name: "free_lv_sets", scope: !3, file: !3, line: 4137, type: !2396, scopeLine: 4138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7268)
!7268 = !{!7269}
!7269 = !DILocalVariable(name: "bb", scope: !7267, file: !3, line: 4139, type: !1179)
!7270 = !DILocation(line: 4142, column: 16, scope: !7267)
!7271 = !DILocation(line: 4142, column: 3, scope: !7267)
!7272 = !DILocation(line: 4145, column: 3, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 4145, column: 3)
!7274 = !DILocation(line: 4145, column: 3, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 4145, column: 3)
!7276 = !DILocation(line: 0, scope: !7273)
!7277 = !DILocation(line: 0, scope: !7267)
!7278 = !DILocation(line: 4146, column: 9, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7275, file: !3, line: 4146, column: 9)
!7280 = !DILocation(line: 4146, column: 9, scope: !7275)
!7281 = !DILocation(line: 4147, column: 7, scope: !7279)
!7282 = !DILocation(line: 0, scope: !7275)
!7283 = distinct !{!7283, !7272, !7284}
!7284 = !DILocation(line: 4147, column: 22, scope: !7273)
!7285 = !DILocation(line: 4148, column: 1, scope: !7267)
!7286 = distinct !DISubprogram(name: "free_lv_set", scope: !3, file: !3, line: 4126, type: !2267, scopeLine: 4127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7287)
!7287 = !{!7288}
!7288 = !DILocalVariable(name: "bb", arg: 1, scope: !7286, file: !3, line: 4126, type: !1179)
!7289 = !DILocation(line: 0, scope: !7286)
!7290 = !DILocation(line: 4128, column: 3, scope: !7286)
!7291 = !DILocation(line: 4130, column: 26, scope: !7286)
!7292 = !DILocation(line: 4130, column: 3, scope: !7286)
!7293 = !DILocation(line: 4131, column: 3, scope: !7286)
!7294 = !DILocation(line: 4131, column: 18, scope: !7286)
!7295 = !DILocation(line: 4132, column: 3, scope: !7286)
!7296 = !DILocation(line: 4132, column: 26, scope: !7286)
!7297 = !DILocation(line: 4133, column: 1, scope: !7286)
!7298 = distinct !DISubprogram(name: "VEC_sel_global_bb_info_def_base_index", scope: !409, file: !409, line: 888, type: !7299, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7303)
!7299 = !DISubroutineType(types: !7300)
!7300 = !{!7301, !7302, !7}
!7301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!7302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!7303 = !{!7304, !7305}
!7304 = !DILocalVariable(name: "vec_", arg: 1, scope: !7298, file: !409, line: 888, type: !7302)
!7305 = !DILocalVariable(name: "ix_", arg: 2, scope: !7298, file: !409, line: 888, type: !7)
!7306 = !DILocation(line: 0, scope: !7298)
!7307 = !DILocation(line: 888, column: 1, scope: !7298)
!7308 = distinct !DISubprogram(name: "free_data_sets", scope: !3, file: !3, line: 4182, type: !2267, scopeLine: 4183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7309)
!7309 = !{!7310}
!7310 = !DILocalVariable(name: "bb", arg: 1, scope: !7308, file: !3, line: 4182, type: !1179)
!7311 = !DILocation(line: 0, scope: !7308)
!7312 = !DILocation(line: 4184, column: 3, scope: !7308)
!7313 = !DILocation(line: 4185, column: 3, scope: !7308)
!7314 = !DILocation(line: 4186, column: 1, scope: !7308)
!7315 = distinct !DISubprogram(name: "free_av_set", scope: !3, file: !3, line: 4174, type: !2267, scopeLine: 4175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7316)
!7316 = !{!7317}
!7317 = !DILocalVariable(name: "bb", arg: 1, scope: !7315, file: !3, line: 4174, type: !1179)
!7318 = !DILocation(line: 0, scope: !7315)
!7319 = !DILocation(line: 4176, column: 18, scope: !7315)
!7320 = !DILocation(line: 4176, column: 3, scope: !7315)
!7321 = !DILocation(line: 4177, column: 3, scope: !7315)
!7322 = !DILocation(line: 4177, column: 20, scope: !7315)
!7323 = !DILocation(line: 4178, column: 1, scope: !7315)
!7324 = distinct !DISubprogram(name: "exchange_data_sets", scope: !3, file: !3, line: 4229, type: !2168, scopeLine: 4230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7325)
!7325 = !{!7326, !7327}
!7326 = !DILocalVariable(name: "to", arg: 1, scope: !7324, file: !3, line: 4229, type: !1179)
!7327 = !DILocalVariable(name: "from", arg: 2, scope: !7324, file: !3, line: 4229, type: !1179)
!7328 = !DILocation(line: 0, scope: !7324)
!7329 = !DILocation(line: 4231, column: 3, scope: !7324)
!7330 = !DILocation(line: 4232, column: 3, scope: !7324)
!7331 = !DILocation(line: 4233, column: 1, scope: !7324)
!7332 = distinct !DISubprogram(name: "exchange_lv_sets", scope: !3, file: !3, line: 4190, type: !2168, scopeLine: 4191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7333)
!7333 = !{!7334, !7335, !7336, !7338}
!7334 = !DILocalVariable(name: "to", arg: 1, scope: !7332, file: !3, line: 4190, type: !1179)
!7335 = !DILocalVariable(name: "from", arg: 2, scope: !7332, file: !3, line: 4190, type: !1179)
!7336 = !DILocalVariable(name: "to_lv_set", scope: !7337, file: !3, line: 4193, type: !1841)
!7337 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 4192, column: 3)
!7338 = !DILocalVariable(name: "to_lv_set_valid_p", scope: !7339, file: !3, line: 4200, type: !637)
!7339 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 4199, column: 3)
!7340 = !DILocation(line: 0, scope: !7332)
!7341 = !DILocation(line: 4193, column: 24, scope: !7337)
!7342 = !DILocation(line: 4195, column: 22, scope: !7337)
!7343 = !DILocation(line: 4195, column: 5, scope: !7337)
!7344 = !DILocation(line: 4195, column: 20, scope: !7337)
!7345 = !DILocation(line: 4196, column: 5, scope: !7337)
!7346 = !DILocation(line: 4196, column: 22, scope: !7337)
!7347 = !DILocation(line: 4200, column: 30, scope: !7339)
!7348 = !DILocation(line: 0, scope: !7339)
!7349 = !DILocation(line: 4202, column: 30, scope: !7339)
!7350 = !DILocation(line: 4202, column: 5, scope: !7339)
!7351 = !DILocation(line: 4202, column: 28, scope: !7339)
!7352 = !DILocation(line: 4203, column: 5, scope: !7339)
!7353 = !DILocation(line: 4203, column: 30, scope: !7339)
!7354 = !DILocation(line: 4205, column: 1, scope: !7332)
!7355 = distinct !DISubprogram(name: "exchange_av_sets", scope: !3, file: !3, line: 4210, type: !2168, scopeLine: 4211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7356)
!7356 = !{!7357, !7358, !7359, !7361}
!7357 = !DILocalVariable(name: "to", arg: 1, scope: !7355, file: !3, line: 4210, type: !1179)
!7358 = !DILocalVariable(name: "from", arg: 2, scope: !7355, file: !3, line: 4210, type: !1179)
!7359 = !DILocalVariable(name: "to_av_set", scope: !7360, file: !3, line: 4213, type: !1897)
!7360 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 4212, column: 3)
!7361 = !DILocalVariable(name: "to_av_level", scope: !7362, file: !3, line: 4220, type: !638)
!7362 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 4219, column: 3)
!7363 = !DILocation(line: 0, scope: !7355)
!7364 = !DILocation(line: 4213, column: 26, scope: !7360)
!7365 = !DILocation(line: 4215, column: 22, scope: !7360)
!7366 = !DILocation(line: 4215, column: 5, scope: !7360)
!7367 = !DILocation(line: 4215, column: 20, scope: !7360)
!7368 = !DILocation(line: 4216, column: 5, scope: !7360)
!7369 = !DILocation(line: 4216, column: 22, scope: !7360)
!7370 = !DILocation(line: 4220, column: 23, scope: !7362)
!7371 = !DILocation(line: 0, scope: !7362)
!7372 = !DILocation(line: 4222, column: 24, scope: !7362)
!7373 = !DILocation(line: 4222, column: 5, scope: !7362)
!7374 = !DILocation(line: 4222, column: 22, scope: !7362)
!7375 = !DILocation(line: 4223, column: 5, scope: !7362)
!7376 = !DILocation(line: 4223, column: 24, scope: !7362)
!7377 = !DILocation(line: 4225, column: 1, scope: !7355)
!7378 = distinct !DISubprogram(name: "copy_data_sets", scope: !3, file: !3, line: 4237, type: !2168, scopeLine: 4238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7379)
!7379 = !{!7380, !7381}
!7380 = !DILocalVariable(name: "to", arg: 1, scope: !7378, file: !3, line: 4237, type: !1179)
!7381 = !DILocalVariable(name: "from", arg: 2, scope: !7378, file: !3, line: 4237, type: !1179)
!7382 = !DILocation(line: 0, scope: !7378)
!7383 = !DILocation(line: 4239, column: 3, scope: !7378)
!7384 = !DILocation(line: 4240, column: 3, scope: !7378)
!7385 = !DILocation(line: 4242, column: 22, scope: !7378)
!7386 = !DILocation(line: 4242, column: 3, scope: !7378)
!7387 = !DILocation(line: 4242, column: 20, scope: !7378)
!7388 = !DILocation(line: 4243, column: 28, scope: !7378)
!7389 = !DILocation(line: 4243, column: 3, scope: !7378)
!7390 = !DILocation(line: 4243, column: 26, scope: !7378)
!7391 = !DILocation(line: 4245, column: 7, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 4245, column: 7)
!7393 = !DILocation(line: 4245, column: 7, scope: !7378)
!7394 = !DILocation(line: 4247, column: 37, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 4246, column: 5)
!7396 = !DILocation(line: 4247, column: 24, scope: !7395)
!7397 = !DILocation(line: 4247, column: 7, scope: !7395)
!7398 = !DILocation(line: 4247, column: 22, scope: !7395)
!7399 = !DILocation(line: 4248, column: 5, scope: !7395)
!7400 = !DILocation(line: 4249, column: 7, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 4249, column: 7)
!7402 = !DILocation(line: 4249, column: 7, scope: !7378)
!7403 = !DILocation(line: 4251, column: 7, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7401, file: !3, line: 4250, column: 5)
!7405 = !DILocation(line: 4252, column: 7, scope: !7404)
!7406 = !DILocation(line: 4253, column: 5, scope: !7404)
!7407 = !DILocation(line: 4254, column: 1, scope: !7378)
!7408 = distinct !DISubprogram(name: "get_av_set", scope: !3, file: !3, line: 4258, type: !7409, scopeLine: 4259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7411)
!7409 = !DISubroutineType(types: !7410)
!7410 = !{!1897, !1892}
!7411 = !{!7412, !7413}
!7412 = !DILocalVariable(name: "insn", arg: 1, scope: !7408, file: !3, line: 4258, type: !1892)
!7413 = !DILocalVariable(name: "av_set", scope: !7408, file: !3, line: 4260, type: !1897)
!7414 = !DILocation(line: 0, scope: !7408)
!7415 = !DILocation(line: 4262, column: 3, scope: !7408)
!7416 = !DILocation(line: 4264, column: 7, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 4264, column: 7)
!7418 = !DILocation(line: 4264, column: 7, scope: !7408)
!7419 = !DILocation(line: 4265, column: 14, scope: !7417)
!7420 = !DILocation(line: 4265, column: 5, scope: !7417)
!7421 = !DILocation(line: 0, scope: !7417)
!7422 = !DILocation(line: 4269, column: 3, scope: !7408)
!7423 = distinct !DISubprogram(name: "get_av_level", scope: !3, file: !3, line: 4274, type: !7424, scopeLine: 4275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7426)
!7424 = !DISubroutineType(types: !7425)
!7425 = !{!638, !1892}
!7426 = !{!7427, !7428}
!7427 = !DILocalVariable(name: "insn", arg: 1, scope: !7423, file: !3, line: 4274, type: !1892)
!7428 = !DILocalVariable(name: "av_level", scope: !7423, file: !3, line: 4276, type: !638)
!7429 = !DILocation(line: 0, scope: !7423)
!7430 = !DILocation(line: 4278, column: 3, scope: !7423)
!7431 = !DILocation(line: 4280, column: 7, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 4280, column: 7)
!7433 = !DILocation(line: 4280, column: 7, scope: !7423)
!7434 = !DILocation(line: 4281, column: 16, scope: !7432)
!7435 = !DILocation(line: 4281, column: 5, scope: !7432)
!7436 = !DILocation(line: 4283, column: 16, scope: !7432)
!7437 = !DILocation(line: 0, scope: !7432)
!7438 = !DILocation(line: 4285, column: 3, scope: !7423)
!7439 = distinct !DISubprogram(name: "sel_bb_head_p", scope: !3, file: !3, line: 4341, type: !6142, scopeLine: 4342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7440)
!7440 = !{!7441}
!7441 = !DILocalVariable(name: "insn", arg: 1, scope: !7439, file: !3, line: 4341, type: !1892)
!7442 = !DILocation(line: 0, scope: !7439)
!7443 = !DILocation(line: 4343, column: 23, scope: !7439)
!7444 = !DILocation(line: 4343, column: 10, scope: !7439)
!7445 = !DILocation(line: 4343, column: 46, scope: !7439)
!7446 = !DILocation(line: 4343, column: 3, scope: !7439)
!7447 = distinct !DISubprogram(name: "sel_bb_end_p", scope: !3, file: !3, line: 4360, type: !6142, scopeLine: 4361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7448)
!7448 = !{!7449}
!7449 = !DILocalVariable(name: "insn", arg: 1, scope: !7447, file: !3, line: 4360, type: !1892)
!7450 = !DILocation(line: 0, scope: !7447)
!7451 = !DILocation(line: 4362, column: 30, scope: !7447)
!7452 = !DILocation(line: 4362, column: 18, scope: !7447)
!7453 = !DILocation(line: 4362, column: 15, scope: !7447)
!7454 = !DILocation(line: 4362, column: 10, scope: !7447)
!7455 = !DILocation(line: 4362, column: 3, scope: !7447)
!7456 = distinct !DISubprogram(name: "fallthru_bb_of_jump", scope: !3, file: !3, line: 4384, type: !7457, scopeLine: 4385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7459)
!7457 = !DISubroutineType(types: !7458)
!7458 = !{!1179, !645}
!7459 = !{!7460}
!7460 = !DILocalVariable(name: "jump", arg: 1, scope: !7456, file: !3, line: 4384, type: !645)
!7461 = !DILocation(line: 0, scope: !7456)
!7462 = !DILocation(line: 4386, column: 8, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 4386, column: 7)
!7464 = !DILocation(line: 4386, column: 7, scope: !7456)
!7465 = !DILocation(line: 4389, column: 7, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 4389, column: 7)
!7467 = !DILocation(line: 4389, column: 7, scope: !7456)
!7468 = !DILocation(line: 4390, column: 25, scope: !7466)
!7469 = !DILocation(line: 4390, column: 12, scope: !7466)
!7470 = !DILocation(line: 4390, column: 5, scope: !7466)
!7471 = !DILocation(line: 4392, column: 8, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 4392, column: 7)
!7473 = !DILocation(line: 4392, column: 7, scope: !7456)
!7474 = !DILocation(line: 4397, column: 22, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 4397, column: 7)
!7476 = !DILocation(line: 4397, column: 7, scope: !7475)
!7477 = !DILocation(line: 4397, column: 7, scope: !7456)
!7478 = !DILocation(line: 4400, column: 10, scope: !7456)
!7479 = !DILocation(line: 4400, column: 49, scope: !7456)
!7480 = !DILocation(line: 4400, column: 3, scope: !7456)
!7481 = !DILocation(line: 4401, column: 1, scope: !7456)
!7482 = distinct !DISubprogram(name: "single_succ_p", scope: !155, file: !155, line: 626, type: !2292, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7483)
!7483 = !{!7484}
!7484 = !DILocalVariable(name: "bb", arg: 1, scope: !7482, file: !155, line: 626, type: !2287)
!7485 = !DILocation(line: 0, scope: !7482)
!7486 = !DILocation(line: 628, column: 10, scope: !7482)
!7487 = !DILocation(line: 628, column: 33, scope: !7482)
!7488 = !DILocation(line: 628, column: 3, scope: !7482)
!7489 = distinct !DISubprogram(name: "sel_init_bbs", scope: !3, file: !3, line: 4412, type: !7490, scopeLine: 4413, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7492)
!7490 = !DISubroutineType(types: !7491)
!7491 = !{null, !6153, !1179}
!7492 = !{!7493, !7494, !7495}
!7493 = !DILocalVariable(name: "bbs", arg: 1, scope: !7489, file: !3, line: 4412, type: !6153)
!7494 = !DILocalVariable(name: "bb", arg: 2, scope: !7489, file: !3, line: 4412, type: !1179)
!7495 = !DILocalVariable(name: "ssi", scope: !7489, file: !3, line: 4414, type: !6157)
!7496 = !DILocation(line: 0, scope: !7489)
!7497 = !DILocation(line: 4414, column: 3, scope: !7489)
!7498 = !DILocation(line: 4414, column: 36, scope: !7489)
!7499 = !DILocation(line: 4422, column: 3, scope: !7489)
!7500 = !DILocation(line: 4423, column: 1, scope: !7489)
!7501 = distinct !DISubprogram(name: "extend_bb_info", scope: !3, file: !3, line: 3902, type: !2396, scopeLine: 3903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!7502 = !DILocation(line: 3904, column: 3, scope: !7501)
!7503 = !DILocation(line: 3905, column: 3, scope: !7501)
!7504 = !DILocation(line: 3906, column: 1, scope: !7501)
!7505 = distinct !DISubprogram(name: "init_bb", scope: !3, file: !3, line: 4405, type: !2267, scopeLine: 4406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7506)
!7506 = !{!7507}
!7507 = !DILocalVariable(name: "bb", arg: 1, scope: !7505, file: !3, line: 4405, type: !1179)
!7508 = !DILocation(line: 0, scope: !7505)
!7509 = !DILocation(line: 4407, column: 17, scope: !7505)
!7510 = !DILocation(line: 4407, column: 31, scope: !7505)
!7511 = !DILocation(line: 4407, column: 3, scope: !7505)
!7512 = !DILocation(line: 4408, column: 23, scope: !7505)
!7513 = !DILocation(line: 4408, column: 3, scope: !7505)
!7514 = !DILocation(line: 4408, column: 21, scope: !7505)
!7515 = !DILocation(line: 4409, column: 1, scope: !7505)
!7516 = distinct !DISubprogram(name: "sel_finish_bbs", scope: !3, file: !3, line: 4457, type: !2396, scopeLine: 4458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!7517 = !DILocation(line: 4459, column: 3, scope: !7516)
!7518 = !DILocation(line: 4462, column: 7, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 4462, column: 7)
!7520 = !DILocation(line: 4462, column: 7, scope: !7516)
!7521 = !DILocation(line: 4463, column: 5, scope: !7519)
!7522 = !DILocation(line: 4465, column: 3, scope: !7516)
!7523 = !DILocation(line: 4466, column: 1, scope: !7516)
!7524 = distinct !DISubprogram(name: "sel_restore_notes", scope: !3, file: !3, line: 4427, type: !2396, scopeLine: 4428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7525)
!7525 = !{!7526, !7527, !7528, !7532}
!7526 = !DILocalVariable(name: "bb", scope: !7524, file: !3, line: 4429, type: !638)
!7527 = !DILocalVariable(name: "insn", scope: !7524, file: !3, line: 4430, type: !1892)
!7528 = !DILocalVariable(name: "first", scope: !7529, file: !3, line: 4434, type: !1179)
!7529 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 4433, column: 5)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !3, line: 4432, column: 3)
!7531 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 4432, column: 3)
!7532 = !DILocalVariable(name: "last", scope: !7529, file: !3, line: 4434, type: !1179)
!7533 = !DILocation(line: 0, scope: !7524)
!7534 = !DILocation(line: 4432, column: 8, scope: !7531)
!7535 = !DILocation(line: 0, scope: !7531)
!7536 = !DILocation(line: 4432, column: 21, scope: !7530)
!7537 = !DILocation(line: 4432, column: 19, scope: !7530)
!7538 = !DILocation(line: 4432, column: 3, scope: !7531)
!7539 = !DILocation(line: 4436, column: 15, scope: !7529)
!7540 = !DILocation(line: 0, scope: !7529)
!7541 = !DILocation(line: 4437, column: 14, scope: !7529)
!7542 = !DILocation(line: 4437, column: 32, scope: !7529)
!7543 = !DILocation(line: 4439, column: 7, scope: !7529)
!7544 = !DILocation(line: 4441, column: 16, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 4440, column: 2)
!7546 = !DILocation(line: 4441, column: 14, scope: !7545)
!7547 = !DILocation(line: 4442, column: 4, scope: !7545)
!7548 = !DILocation(line: 4443, column: 4, scope: !7545)
!7549 = !DILocation(line: 4443, column: 25, scope: !7545)
!7550 = !DILocation(line: 4445, column: 4, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 4445, column: 4)
!7552 = !DILocation(line: 0, scope: !7551)
!7553 = !DILocation(line: 4445, column: 4, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7551, file: !3, line: 4445, column: 4)
!7555 = !DILocation(line: 4446, column: 10, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 4446, column: 10)
!7557 = !DILocation(line: 4446, column: 10, scope: !7554)
!7558 = !DILocation(line: 4447, column: 8, scope: !7556)
!7559 = distinct !{!7559, !7550, !7560}
!7560 = !DILocation(line: 4447, column: 26, scope: !7551)
!7561 = !DILocation(line: 4449, column: 26, scope: !7545)
!7562 = !DILocation(line: 4451, column: 20, scope: !7529)
!7563 = !DILocation(line: 4450, column: 2, scope: !7545)
!7564 = distinct !{!7564, !7543, !7565}
!7565 = !DILocation(line: 4451, column: 27, scope: !7529)
!7566 = !DILocation(line: 4432, column: 3, scope: !7530)
!7567 = distinct !{!7567, !7538, !7568}
!7568 = !DILocation(line: 4452, column: 5, scope: !7531)
!7569 = !DILocation(line: 4453, column: 1, scope: !7524)
!7570 = distinct !DISubprogram(name: "sel_remove_loop_preheader", scope: !3, file: !3, line: 6128, type: !2396, scopeLine: 6129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7571)
!7571 = !{!7572, !7573, !7574, !7575, !7576, !7577, !7578, !7586, !7587, !7588}
!7572 = !DILocalVariable(name: "i", scope: !7570, file: !3, line: 6130, type: !638)
!7573 = !DILocalVariable(name: "old_len", scope: !7570, file: !3, line: 6130, type: !638)
!7574 = !DILocalVariable(name: "cur_rgn", scope: !7570, file: !3, line: 6131, type: !638)
!7575 = !DILocalVariable(name: "bb", scope: !7570, file: !3, line: 6132, type: !1179)
!7576 = !DILocalVariable(name: "all_empty_p", scope: !7570, file: !3, line: 6133, type: !637)
!7577 = !DILocalVariable(name: "preheader_blocks", scope: !7570, file: !3, line: 6134, type: !1874)
!7578 = !DILocalVariable(name: "e", scope: !7579, file: !3, line: 6175, type: !1196)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 6174, column: 13)
!7580 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 6173, column: 11)
!7581 = distinct !DILexicalBlock(scope: !7582, file: !3, line: 6173, column: 11)
!7582 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 6170, column: 9)
!7583 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 6166, column: 11)
!7584 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 6165, column: 5)
!7585 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 6164, column: 7)
!7586 = !DILocalVariable(name: "ei", scope: !7579, file: !3, line: 6176, type: !3258)
!7587 = !DILocalVariable(name: "prev_bb", scope: !7579, file: !3, line: 6177, type: !1179)
!7588 = !DILocalVariable(name: "next_bb", scope: !7579, file: !3, line: 6177, type: !1179)
!7589 = !DILocation(line: 6131, column: 17, scope: !7570)
!7590 = !DILocation(line: 0, scope: !7570)
!7591 = !DILocation(line: 6132, column: 3, scope: !7570)
!7592 = !DILocation(line: 6134, column: 3, scope: !7570)
!7593 = !DILocation(line: 6135, column: 7, scope: !7570)
!7594 = !DILocation(line: 6134, column: 27, scope: !7570)
!7595 = !DILocation(line: 6137, column: 3, scope: !7570)
!7596 = !DILocation(line: 6138, column: 13, scope: !7570)
!7597 = !DILocation(line: 0, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 6141, column: 3)
!7599 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 6141, column: 3)
!7600 = !DILocation(line: 6141, column: 8, scope: !7599)
!7601 = !DILocation(line: 6141, column: 19, scope: !7598)
!7602 = !DILocation(line: 6141, column: 17, scope: !7598)
!7603 = !DILocation(line: 6141, column: 3, scope: !7599)
!7604 = !DILocation(line: 6143, column: 12, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 6142, column: 5)
!7606 = !DILocation(line: 6143, column: 10, scope: !7605)
!7607 = !DILocation(line: 6147, column: 11, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7605, file: !3, line: 6147, column: 11)
!7609 = !DILocation(line: 6147, column: 11, scope: !7605)
!7610 = !DILocation(line: 6149, column: 11, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 6148, column: 9)
!7612 = !DILocation(line: 6150, column: 15, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 6150, column: 15)
!7614 = !DILocation(line: 6150, column: 30, scope: !7613)
!7615 = !DILocation(line: 6150, column: 27, scope: !7613)
!7616 = !DILocation(line: 6150, column: 15, scope: !7611)
!7617 = !DILocation(line: 6152, column: 9, scope: !7611)
!7618 = !DILocation(line: 6141, column: 45, scope: !7598)
!7619 = !DILocation(line: 6141, column: 3, scope: !7598)
!7620 = distinct !{!7620, !7603, !7621}
!7621 = !DILocation(line: 6153, column: 5, scope: !7599)
!7622 = !DILocation(line: 6156, column: 12, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 6156, column: 3)
!7624 = !DILocation(line: 6156, column: 8, scope: !7623)
!7625 = !DILocation(line: 0, scope: !7623)
!7626 = !DILocation(line: 6157, column: 10, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 6156, column: 3)
!7628 = !DILocation(line: 6156, column: 3, scope: !7623)
!7629 = !DILocation(line: 6160, column: 13, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 6159, column: 5)
!7631 = !DILocation(line: 6160, column: 10, scope: !7630)
!7632 = !DILocation(line: 6161, column: 7, scope: !7630)
!7633 = !DILocation(line: 6156, column: 3, scope: !7627)
!7634 = distinct !{!7634, !7628, !7635}
!7635 = !DILocation(line: 6162, column: 5, scope: !7623)
!7636 = !DILocation(line: 6164, column: 49, scope: !7585)
!7637 = !DILocation(line: 6164, column: 37, scope: !7585)
!7638 = !DILocation(line: 6164, column: 8, scope: !7585)
!7639 = !DILocation(line: 6164, column: 7, scope: !7570)
!7640 = !DILocation(line: 6166, column: 12, scope: !7583)
!7641 = !DILocation(line: 6166, column: 11, scope: !7584)
!7642 = !DILocation(line: 0, scope: !7579)
!7643 = !DILocation(line: 0, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 6180, column: 15)
!7645 = !DILocation(line: 0, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 6180, column: 15)
!7647 = !DILocation(line: 6173, column: 11, scope: !7581)
!7648 = !DILocation(line: 6168, column: 9, scope: !7583)
!7649 = !DILocation(line: 0, scope: !7581)
!7650 = !DILocation(line: 6173, column: 23, scope: !7580)
!7651 = !DILocation(line: 6176, column: 15, scope: !7579)
!7652 = !DILocation(line: 6177, column: 37, scope: !7579)
!7653 = !DILocation(line: 6177, column: 41, scope: !7579)
!7654 = !DILocation(line: 6177, column: 64, scope: !7579)
!7655 = !DILocation(line: 6180, column: 25, scope: !7644)
!7656 = !DILocation(line: 6180, column: 20, scope: !7644)
!7657 = !DILocation(line: 6180, column: 52, scope: !7646)
!7658 = !DILocation(line: 6180, column: 15, scope: !7644)
!7659 = !DILocation(line: 6182, column: 29, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 6182, column: 23)
!7661 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 6181, column: 17)
!7662 = !DILocation(line: 6182, column: 35, scope: !7660)
!7663 = !DILocation(line: 0, scope: !7660)
!7664 = !DILocation(line: 6182, column: 23, scope: !7661)
!7665 = !DILocation(line: 6183, column: 21, scope: !7660)
!7666 = !DILocation(line: 6185, column: 21, scope: !7660)
!7667 = !DILocation(line: 6180, column: 15, scope: !7646)
!7668 = distinct !{!7668, !7658, !7669}
!7669 = !DILocation(line: 6186, column: 17, scope: !7644)
!7670 = !DILocation(line: 6187, column: 15, scope: !7579)
!7671 = !DILocation(line: 6188, column: 44, scope: !7579)
!7672 = !DILocation(line: 6188, column: 15, scope: !7579)
!7673 = !DILocation(line: 6194, column: 21, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 6194, column: 12)
!7675 = !DILocation(line: 6194, column: 29, scope: !7674)
!7676 = !DILocation(line: 6195, column: 19, scope: !7674)
!7677 = !DILocation(line: 6195, column: 33, scope: !7674)
!7678 = !DILocation(line: 6195, column: 30, scope: !7674)
!7679 = !DILocation(line: 6196, column: 19, scope: !7674)
!7680 = !DILocation(line: 6196, column: 47, scope: !7674)
!7681 = !DILocation(line: 6196, column: 22, scope: !7674)
!7682 = !DILocation(line: 6194, column: 12, scope: !7579)
!7683 = !DILocation(line: 6198, column: 45, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 6197, column: 17)
!7685 = !DILocation(line: 6198, column: 19, scope: !7684)
!7686 = !DILocation(line: 6199, column: 23, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 6199, column: 23)
!7688 = !DILocation(line: 6199, column: 43, scope: !7687)
!7689 = !DILocation(line: 6199, column: 40, scope: !7687)
!7690 = !DILocation(line: 6199, column: 23, scope: !7684)
!7691 = !DILocation(line: 6200, column: 21, scope: !7687)
!7692 = !DILocation(line: 6202, column: 13, scope: !7580)
!7693 = !DILocation(line: 6173, column: 76, scope: !7580)
!7694 = !DILocation(line: 6173, column: 11, scope: !7580)
!7695 = distinct !{!7695, !7647, !7696}
!7696 = !DILocation(line: 6202, column: 13, scope: !7581)
!7697 = !DILocation(line: 6204, column: 7, scope: !7584)
!7698 = !DILocation(line: 6205, column: 5, scope: !7584)
!7699 = !DILocation(line: 6208, column: 5, scope: !7585)
!7700 = !DILocation(line: 6210, column: 1, scope: !7570)
!7701 = distinct !DISubprogram(name: "finish_region_bb_info", scope: !3, file: !3, line: 3917, type: !2396, scopeLine: 3918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!7702 = !DILocation(line: 3919, column: 3, scope: !7701)
!7703 = !DILocation(line: 3920, column: 1, scope: !7701)
!7704 = distinct !DISubprogram(name: "sel_insn_has_single_succ_p", scope: !3, file: !3, line: 4470, type: !7705, scopeLine: 4471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7707)
!7705 = !DISubroutineType(types: !7706)
!7706 = !{!637, !1892, !638}
!7707 = !{!7708, !7709, !7710, !7711, !7712}
!7708 = !DILocalVariable(name: "insn", arg: 1, scope: !7704, file: !3, line: 4470, type: !1892)
!7709 = !DILocalVariable(name: "flags", arg: 2, scope: !7704, file: !3, line: 4470, type: !638)
!7710 = !DILocalVariable(name: "succ", scope: !7704, file: !3, line: 4472, type: !1892)
!7711 = !DILocalVariable(name: "si", scope: !7704, file: !3, line: 4473, type: !3251)
!7712 = !DILocalVariable(name: "first_p", scope: !7704, file: !3, line: 4474, type: !637)
!7713 = !DILocation(line: 0, scope: !7704)
!7714 = !DILocation(line: 4472, column: 3, scope: !7704)
!7715 = !DILocation(line: 4473, column: 3, scope: !7704)
!7716 = !DILocation(line: 4476, column: 3, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7704, file: !3, line: 4476, column: 3)
!7718 = !DILocation(line: 4476, column: 3, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 4476, column: 3)
!7720 = !DILocation(line: 4478, column: 11, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 4478, column: 11)
!7722 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 4477, column: 5)
!7723 = !DILocation(line: 4478, column: 11, scope: !7722)
!7724 = distinct !{!7724, !7716, !7725}
!7725 = !DILocation(line: 4482, column: 5, scope: !7717)
!7726 = !DILocation(line: 4485, column: 1, scope: !7704)
!7727 = distinct !DISubprogram(name: "free_succs_info", scope: !3, file: !3, line: 4511, type: !7728, scopeLine: 4512, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7730)
!7728 = !DISubroutineType(types: !7729)
!7729 = !{null, !1845}
!7730 = !{!7731}
!7731 = !DILocalVariable(name: "sinfo", arg: 1, scope: !7727, file: !3, line: 4511, type: !1845)
!7732 = !DILocation(line: 0, scope: !7727)
!7733 = !DILocation(line: 4513, column: 3, scope: !7727)
!7734 = !DILocation(line: 4515, column: 22, scope: !7727)
!7735 = !DILocation(line: 4518, column: 3, scope: !7727)
!7736 = !DILocation(line: 4520, column: 3, scope: !7727)
!7737 = !DILocation(line: 4522, column: 3, scope: !7727)
!7738 = !DILocation(line: 4524, column: 10, scope: !7727)
!7739 = !DILocation(line: 4524, column: 19, scope: !7727)
!7740 = !DILocation(line: 4525, column: 10, scope: !7727)
!7741 = !DILocation(line: 4525, column: 21, scope: !7727)
!7742 = !DILocation(line: 4526, column: 10, scope: !7727)
!7743 = !DILocation(line: 4526, column: 22, scope: !7727)
!7744 = !DILocation(line: 4527, column: 1, scope: !7727)
!7745 = distinct !DISubprogram(name: "VEC_rtx_base_block_remove", scope: !414, file: !414, line: 200, type: !7746, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7748)
!7746 = !DISubroutineType(types: !7747)
!7747 = !{null, !4040, !7, !7}
!7748 = !{!7749, !7750, !7751, !7752}
!7749 = !DILocalVariable(name: "vec_", arg: 1, scope: !7745, file: !414, line: 200, type: !4040)
!7750 = !DILocalVariable(name: "ix_", arg: 2, scope: !7745, file: !414, line: 200, type: !7)
!7751 = !DILocalVariable(name: "len_", arg: 3, scope: !7745, file: !414, line: 200, type: !7)
!7752 = !DILocalVariable(name: "slot_", scope: !7745, file: !414, line: 200, type: !1843)
!7753 = !DILocation(line: 0, scope: !7745)
!7754 = !DILocation(line: 200, column: 1, scope: !7745)
!7755 = distinct !DISubprogram(name: "VEC_rtx_base_length", scope: !414, file: !414, line: 200, type: !7756, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7760)
!7756 = !DISubroutineType(types: !7757)
!7757 = !{!7, !7758}
!7758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7759, size: 64)
!7759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1829)
!7760 = !{!7761}
!7761 = !DILocalVariable(name: "vec_", arg: 1, scope: !7755, file: !414, line: 200, type: !7758)
!7762 = !DILocation(line: 0, scope: !7755)
!7763 = !DILocation(line: 200, column: 1, scope: !7755)
!7764 = distinct !DISubprogram(name: "VEC_int_base_block_remove", scope: !1162, file: !1162, line: 31, type: !7765, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7768)
!7765 = !DISubroutineType(types: !7766)
!7766 = !{null, !7767, !7, !7}
!7767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!7768 = !{!7769, !7770, !7771, !7772}
!7769 = !DILocalVariable(name: "vec_", arg: 1, scope: !7764, file: !1162, line: 31, type: !7767)
!7770 = !DILocalVariable(name: "ix_", arg: 2, scope: !7764, file: !1162, line: 31, type: !7)
!7771 = !DILocalVariable(name: "len_", arg: 3, scope: !7764, file: !1162, line: 31, type: !7)
!7772 = !DILocalVariable(name: "slot_", scope: !7764, file: !1162, line: 31, type: !1839)
!7773 = !DILocation(line: 0, scope: !7764)
!7774 = !DILocation(line: 31, column: 1, scope: !7764)
!7775 = distinct !DISubprogram(name: "VEC_int_base_length", scope: !1162, file: !1162, line: 31, type: !7776, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7778)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!7, !4186}
!7778 = !{!7779}
!7779 = !DILocalVariable(name: "vec_", arg: 1, scope: !7775, file: !1162, line: 31, type: !4186)
!7780 = !DILocation(line: 0, scope: !7775)
!7781 = !DILocation(line: 31, column: 1, scope: !7775)
!7782 = distinct !DISubprogram(name: "compute_succs_info", scope: !3, file: !3, line: 4532, type: !7783, scopeLine: 4533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7785)
!7783 = !DISubroutineType(types: !7784)
!7784 = !{!1845, !1892, !1849}
!7785 = !{!7786, !7787, !7788, !7789, !7790, !7791}
!7786 = !DILocalVariable(name: "insn", arg: 1, scope: !7782, file: !3, line: 4532, type: !1892)
!7787 = !DILocalVariable(name: "flags", arg: 2, scope: !7782, file: !3, line: 4532, type: !1849)
!7788 = !DILocalVariable(name: "si", scope: !7782, file: !3, line: 4534, type: !3251)
!7789 = !DILocalVariable(name: "succ", scope: !7782, file: !3, line: 4535, type: !1892)
!7790 = !DILocalVariable(name: "sinfo", scope: !7782, file: !3, line: 4536, type: !1845)
!7791 = !DILocalVariable(name: "current_flags", scope: !7792, file: !3, line: 4543, type: !1849)
!7792 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 4540, column: 5)
!7793 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 4539, column: 3)
!7794 = distinct !DILexicalBlock(scope: !7782, file: !3, line: 4539, column: 3)
!7795 = !DILocation(line: 0, scope: !7782)
!7796 = !DILocation(line: 4534, column: 3, scope: !7782)
!7797 = !DILocation(line: 4535, column: 3, scope: !7782)
!7798 = !DILocation(line: 4536, column: 30, scope: !7782)
!7799 = !DILocation(line: 4539, column: 3, scope: !7794)
!7800 = !DILocation(line: 0, scope: !7792)
!7801 = !DILocation(line: 0, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 4546, column: 9)
!7803 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 4545, column: 11)
!7804 = !DILocation(line: 0, scope: !7803)
!7805 = !DILocation(line: 0, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 4560, column: 11)
!7807 = !DILocation(line: 4539, column: 3, scope: !7793)
!7808 = !DILocation(line: 4543, column: 32, scope: !7792)
!7809 = !DILocation(line: 4543, column: 46, scope: !7792)
!7810 = !DILocation(line: 4545, column: 25, scope: !7803)
!7811 = !DILocation(line: 4545, column: 11, scope: !7792)
!7812 = !DILocation(line: 4547, column: 11, scope: !7802)
!7813 = !DILocation(line: 4548, column: 11, scope: !7802)
!7814 = !DILocation(line: 4554, column: 28, scope: !7802)
!7815 = !DILocation(line: 4555, column: 9, scope: !7802)
!7816 = !DILocation(line: 4557, column: 9, scope: !7803)
!7817 = !DILocation(line: 4560, column: 15, scope: !7806)
!7818 = !DILocation(line: 4560, column: 12, scope: !7806)
!7819 = !DILocation(line: 4560, column: 11, scope: !7792)
!7820 = !DILocation(line: 4561, column: 9, scope: !7806)
!7821 = !DILocation(line: 4563, column: 31, scope: !7806)
!7822 = !DILocation(line: 4563, column: 35, scope: !7806)
!7823 = !DILocation(line: 4563, column: 25, scope: !7806)
!7824 = !DILocation(line: 4565, column: 25, scope: !7792)
!7825 = distinct !{!7825, !7799, !7826}
!7826 = !DILocation(line: 4566, column: 5, scope: !7794)
!7827 = !DILocation(line: 4569, column: 1, scope: !7782)
!7828 = !DILocation(line: 4568, column: 3, scope: !7782)
!7829 = distinct !DISubprogram(name: "alloc_succs_info", scope: !3, file: !3, line: 4489, type: !7830, scopeLine: 4490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7832)
!7830 = !DISubroutineType(types: !7831)
!7831 = !{!1845}
!7832 = !{!7833}
!7833 = !DILocalVariable(name: "i", scope: !7834, file: !3, line: 4493, type: !638)
!7834 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 4492, column: 5)
!7835 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 4491, column: 7)
!7836 = !DILocation(line: 4491, column: 23, scope: !7835)
!7837 = !DILocation(line: 4491, column: 46, scope: !7835)
!7838 = !DILocation(line: 4491, column: 27, scope: !7835)
!7839 = !DILocation(line: 4491, column: 7, scope: !7829)
!7840 = !DILocation(line: 4495, column: 11, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7834, file: !3, line: 4495, column: 11)
!7842 = !DILocation(line: 4495, column: 56, scope: !7841)
!7843 = !DILocation(line: 4495, column: 37, scope: !7841)
!7844 = !DILocation(line: 4495, column: 11, scope: !7834)
!7845 = !DILocation(line: 4496, column: 9, scope: !7841)
!7846 = !DILocation(line: 4498, column: 11, scope: !7834)
!7847 = !DILocation(line: 0, scope: !7834)
!7848 = !DILocation(line: 4499, column: 43, scope: !7834)
!7849 = !DILocation(line: 4499, column: 23, scope: !7834)
!7850 = !DILocation(line: 4499, column: 7, scope: !7834)
!7851 = !DILocation(line: 4499, column: 32, scope: !7834)
!7852 = !DILocation(line: 4499, column: 41, scope: !7834)
!7853 = !DILocation(line: 4500, column: 46, scope: !7834)
!7854 = !DILocation(line: 4500, column: 23, scope: !7834)
!7855 = !DILocation(line: 4500, column: 32, scope: !7834)
!7856 = !DILocation(line: 4500, column: 44, scope: !7834)
!7857 = !DILocation(line: 4501, column: 43, scope: !7834)
!7858 = !DILocation(line: 4501, column: 23, scope: !7834)
!7859 = !DILocation(line: 4501, column: 32, scope: !7834)
!7860 = !DILocation(line: 4501, column: 41, scope: !7834)
!7861 = !DILocation(line: 4506, column: 49, scope: !7829)
!7862 = !DILocation(line: 4502, column: 5, scope: !7834)
!7863 = !DILocation(line: 4504, column: 24, scope: !7835)
!7864 = !DILocation(line: 4506, column: 27, scope: !7829)
!7865 = !DILocation(line: 4506, column: 11, scope: !7829)
!7866 = !DILocation(line: 4506, column: 3, scope: !7829)
!7867 = distinct !DISubprogram(name: "VEC_rtx_heap_safe_push", scope: !414, file: !414, line: 201, type: !7868, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7871)
!7868 = !DISubroutineType(types: !7869)
!7869 = !{!1843, !7870, !645}
!7870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!7871 = !{!7872, !7873}
!7872 = !DILocalVariable(name: "vec_", arg: 1, scope: !7867, file: !414, line: 201, type: !7870)
!7873 = !DILocalVariable(name: "obj_", arg: 2, scope: !7867, file: !414, line: 201, type: !645)
!7874 = !DILocation(line: 0, scope: !7867)
!7875 = !DILocation(line: 201, column: 1, scope: !7867)
!7876 = distinct !DISubprogram(name: "VEC_int_heap_safe_push", scope: !1162, file: !1162, line: 32, type: !7877, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7881)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{!1839, !7879, !7880}
!7879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!7880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !638)
!7881 = !{!7882, !7883}
!7882 = !DILocalVariable(name: "vec_", arg: 1, scope: !7876, file: !1162, line: 32, type: !7879)
!7883 = !DILocalVariable(name: "obj_", arg: 2, scope: !7876, file: !1162, line: 32, type: !7880)
!7884 = !DILocation(line: 0, scope: !7876)
!7885 = !DILocation(line: 32, column: 1, scope: !7876)
!7886 = distinct !DISubprogram(name: "bb_ends_ebb_p", scope: !3, file: !3, line: 4645, type: !2309, scopeLine: 4646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7887)
!7887 = !{!7888, !7889, !7890, !7891}
!7888 = !DILocalVariable(name: "bb", arg: 1, scope: !7886, file: !3, line: 4645, type: !1179)
!7889 = !DILocalVariable(name: "next_bb", scope: !7886, file: !3, line: 4647, type: !1179)
!7890 = !DILocalVariable(name: "e", scope: !7886, file: !3, line: 4648, type: !1196)
!7891 = !DILocalVariable(name: "ei", scope: !7886, file: !3, line: 4649, type: !3258)
!7892 = !DILocation(line: 0, scope: !7886)
!7893 = !DILocation(line: 4647, column: 25, scope: !7886)
!7894 = !DILocation(line: 4648, column: 3, scope: !7886)
!7895 = !DILocation(line: 4649, column: 3, scope: !7886)
!7896 = !DILocation(line: 4651, column: 18, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4651, column: 7)
!7898 = !DILocation(line: 4651, column: 15, scope: !7897)
!7899 = !DILocation(line: 4652, column: 7, scope: !7897)
!7900 = !DILocation(line: 4652, column: 24, scope: !7897)
!7901 = !DILocation(line: 4652, column: 51, scope: !7897)
!7902 = !DILocation(line: 4652, column: 10, scope: !7897)
!7903 = !DILocation(line: 4653, column: 7, scope: !7897)
!7904 = !DILocation(line: 4653, column: 11, scope: !7897)
!7905 = !DILocation(line: 4656, column: 4, scope: !7897)
!7906 = !DILocation(line: 4656, column: 8, scope: !7897)
!7907 = !DILocation(line: 4651, column: 7, scope: !7886)
!7908 = !DILocation(line: 4659, column: 8, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4659, column: 7)
!7910 = !DILocation(line: 4659, column: 7, scope: !7886)
!7911 = !DILocation(line: 4662, column: 3, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4662, column: 3)
!7913 = !DILocation(line: 0, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 4662, column: 3)
!7915 = !DILocation(line: 4662, column: 3, scope: !7914)
!7916 = !DILocation(line: 4663, column: 10, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 4663, column: 9)
!7918 = !DILocation(line: 4663, column: 13, scope: !7917)
!7919 = !DILocation(line: 4663, column: 19, scope: !7917)
!7920 = !DILocation(line: 4663, column: 36, scope: !7917)
!7921 = !DILocation(line: 4663, column: 9, scope: !7914)
!7922 = !DILocation(line: 4665, column: 2, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 4664, column: 7)
!7924 = distinct !{!7924, !7911, !7925}
!7925 = !DILocation(line: 4668, column: 7, scope: !7912)
!7926 = !DILocation(line: 4671, column: 1, scope: !7886)
!7927 = distinct !DISubprogram(name: "bb_next_bb", scope: !409, file: !409, line: 1465, type: !2296, scopeLine: 1466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7928)
!7928 = !{!7929}
!7929 = !DILocalVariable(name: "bb", arg: 1, scope: !7927, file: !409, line: 1465, type: !1179)
!7930 = !DILocation(line: 0, scope: !7927)
!7931 = !DILocation(line: 1467, column: 11, scope: !7927)
!7932 = !DILocation(line: 1467, column: 3, scope: !7927)
!7933 = !DILocation(line: 1470, column: 18, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7927, file: !409, line: 1468, column: 5)
!7935 = !DILocation(line: 1470, column: 7, scope: !7934)
!7936 = !DILocation(line: 1473, column: 14, scope: !7934)
!7937 = !DILocation(line: 1473, column: 7, scope: !7934)
!7938 = !DILocation(line: 1476, column: 14, scope: !7934)
!7939 = !DILocation(line: 1476, column: 34, scope: !7934)
!7940 = !DILocation(line: 1476, column: 7, scope: !7934)
!7941 = !DILocation(line: 1479, column: 18, scope: !7934)
!7942 = !DILocation(line: 1479, column: 7, scope: !7934)
!7943 = !DILocation(line: 0, scope: !7934)
!7944 = !DILocation(line: 1483, column: 1, scope: !7927)
!7945 = distinct !DISubprogram(name: "single_pred_p", scope: !155, file: !155, line: 634, type: !2292, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7946)
!7946 = !{!7947}
!7947 = !DILocalVariable(name: "bb", arg: 1, scope: !7945, file: !155, line: 634, type: !2287)
!7948 = !DILocation(line: 0, scope: !7945)
!7949 = !DILocation(line: 636, column: 10, scope: !7945)
!7950 = !DILocation(line: 636, column: 33, scope: !7945)
!7951 = !DILocation(line: 636, column: 3, scope: !7945)
!7952 = distinct !DISubprogram(name: "ei_start_1", scope: !155, file: !155, line: 696, type: !7953, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7955)
!7953 = !DISubroutineType(types: !7954)
!7954 = !{!3258, !3263}
!7955 = !{!7956, !7957}
!7956 = !DILocalVariable(name: "ev", arg: 1, scope: !7952, file: !155, line: 696, type: !3263)
!7957 = !DILocalVariable(name: "i", scope: !7952, file: !155, line: 698, type: !3258)
!7958 = !DILocation(line: 0, scope: !7952)
!7959 = !DILocation(line: 700, column: 5, scope: !7952)
!7960 = !DILocation(line: 700, column: 11, scope: !7952)
!7961 = !DILocation(line: 701, column: 5, scope: !7952)
!7962 = !DILocation(line: 701, column: 15, scope: !7952)
!7963 = !DILocation(line: 703, column: 3, scope: !7952)
!7964 = distinct !DISubprogram(name: "ei_cond", scope: !155, file: !155, line: 771, type: !7965, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7967)
!7965 = !DISubroutineType(types: !7966)
!7966 = !{!637, !3258, !2345}
!7967 = !{!7968, !7969}
!7968 = !DILocalVariable(name: "ei", arg: 1, scope: !7964, file: !155, line: 771, type: !3258)
!7969 = !DILocalVariable(name: "p", arg: 2, scope: !7964, file: !155, line: 771, type: !2345)
!7970 = !DILocation(line: 0, scope: !7964)
!7971 = !DILocation(line: 773, column: 8, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7964, file: !155, line: 773, column: 7)
!7973 = !DILocation(line: 773, column: 7, scope: !7964)
!7974 = !DILocation(line: 775, column: 12, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7972, file: !155, line: 774, column: 5)
!7976 = !DILocation(line: 776, column: 7, scope: !7975)
!7977 = !DILocation(line: 781, column: 7, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7972, file: !155, line: 779, column: 5)
!7979 = !DILocation(line: 0, scope: !7972)
!7980 = !DILocation(line: 783, column: 1, scope: !7964)
!7981 = distinct !DISubprogram(name: "ei_next", scope: !155, file: !155, line: 736, type: !7982, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7985)
!7982 = !DISubroutineType(types: !7983)
!7983 = !{null, !7984}
!7984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!7985 = !{!7986}
!7986 = !DILocalVariable(name: "i", arg: 1, scope: !7981, file: !155, line: 736, type: !7984)
!7987 = !DILocation(line: 0, scope: !7981)
!7988 = !DILocation(line: 738, column: 3, scope: !7981)
!7989 = !DILocation(line: 739, column: 11, scope: !7981)
!7990 = !DILocation(line: 740, column: 1, scope: !7981)
!7991 = distinct !DISubprogram(name: "in_same_ebb_p", scope: !3, file: !3, line: 4676, type: !7992, scopeLine: 4677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7994)
!7992 = !DISubroutineType(types: !7993)
!7993 = !{!637, !1892, !1892}
!7994 = !{!7995, !7996, !7997}
!7995 = !DILocalVariable(name: "insn", arg: 1, scope: !7991, file: !3, line: 4676, type: !1892)
!7996 = !DILocalVariable(name: "succ", arg: 2, scope: !7991, file: !3, line: 4676, type: !1892)
!7997 = !DILocalVariable(name: "ptr", scope: !7991, file: !3, line: 4678, type: !1179)
!7998 = !DILocation(line: 0, scope: !7991)
!7999 = !DILocation(line: 4678, column: 21, scope: !7991)
!8000 = !DILocation(line: 0, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 4682, column: 11)
!8002 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 4681, column: 5)
!8003 = distinct !DILexicalBlock(scope: !8004, file: !3, line: 4680, column: 3)
!8004 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 4680, column: 3)
!8005 = !DILocation(line: 4680, column: 3, scope: !7991)
!8006 = !DILocation(line: 4682, column: 18, scope: !8001)
!8007 = !DILocation(line: 4682, column: 15, scope: !8001)
!8008 = !DILocation(line: 4682, column: 11, scope: !8002)
!8009 = !DILocation(line: 4685, column: 11, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 4685, column: 11)
!8011 = !DILocation(line: 4685, column: 11, scope: !8002)
!8012 = !DILocation(line: 4688, column: 13, scope: !8002)
!8013 = !DILocation(line: 4680, column: 3, scope: !8003)
!8014 = distinct !{!8014, !8015, !8016}
!8015 = !DILocation(line: 4680, column: 3, scope: !8004)
!8016 = !DILocation(line: 4689, column: 5, scope: !8004)
!8017 = !DILocation(line: 0, scope: !8002)
!8018 = !DILocation(line: 4693, column: 1, scope: !7991)
!8019 = distinct !DISubprogram(name: "clear_outdated_rtx_info", scope: !3, file: !3, line: 4729, type: !2267, scopeLine: 4730, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8020)
!8020 = !{!8021, !8022}
!8021 = !DILocalVariable(name: "bb", arg: 1, scope: !8019, file: !3, line: 4729, type: !1179)
!8022 = !DILocalVariable(name: "insn", scope: !8019, file: !3, line: 4731, type: !645)
!8023 = !DILocation(line: 0, scope: !8019)
!8024 = !DILocation(line: 4733, column: 3, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 4733, column: 3)
!8026 = !DILocation(line: 0, scope: !8025)
!8027 = !DILocation(line: 4733, column: 3, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 4733, column: 3)
!8029 = !DILocation(line: 4734, column: 9, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 4734, column: 9)
!8031 = !DILocation(line: 4734, column: 9, scope: !8028)
!8032 = !DILocation(line: 4736, column: 23, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 4735, column: 7)
!8034 = !DILocation(line: 4737, column: 2, scope: !8033)
!8035 = !DILocation(line: 4737, column: 28, scope: !8033)
!8036 = !DILocation(line: 4738, column: 2, scope: !8033)
!8037 = !DILocation(line: 4738, column: 26, scope: !8033)
!8038 = !DILocation(line: 4739, column: 2, scope: !8033)
!8039 = !DILocation(line: 4739, column: 39, scope: !8033)
!8040 = !DILocation(line: 4744, column: 21, scope: !8033)
!8041 = !DILocation(line: 4744, column: 9, scope: !8033)
!8042 = !DILocation(line: 4745, column: 7, scope: !8033)
!8043 = distinct !{!8043, !8024, !8044}
!8044 = !DILocation(line: 4745, column: 7, scope: !8025)
!8045 = !DILocation(line: 4746, column: 1, scope: !8019)
!8046 = distinct !DISubprogram(name: "free_bb_note_pool", scope: !3, file: !3, line: 4781, type: !2396, scopeLine: 4782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!8047 = !DILocation(line: 4783, column: 3, scope: !8046)
!8048 = !DILocation(line: 4784, column: 1, scope: !8046)
!8049 = distinct !DISubprogram(name: "VEC_rtx_heap_free", scope: !414, file: !414, line: 201, type: !8050, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8052)
!8050 = !DISubroutineType(types: !8051)
!8051 = !{null, !7870}
!8052 = !{!8053}
!8053 = !DILocalVariable(name: "vec_", arg: 1, scope: !8049, file: !414, line: 201, type: !7870)
!8054 = !DILocation(line: 0, scope: !8049)
!8055 = !DILocation(line: 201, column: 1, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8049, file: !414, line: 201, column: 1)
!8057 = !DILocation(line: 201, column: 1, scope: !8049)
!8058 = distinct !DISubprogram(name: "alloc_sched_pools", scope: !3, file: !3, line: 4788, type: !2396, scopeLine: 4789, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8059)
!8059 = !{!8060}
!8060 = !DILocalVariable(name: "succs_size", scope: !8058, file: !3, line: 4790, type: !638)
!8061 = !DILocation(line: 4792, column: 16, scope: !8058)
!8062 = !DILocation(line: 4792, column: 23, scope: !8058)
!8063 = !DILocation(line: 0, scope: !8058)
!8064 = !DILocation(line: 4793, column: 27, scope: !8058)
!8065 = !DILocation(line: 4793, column: 25, scope: !8058)
!8066 = !DILocation(line: 4794, column: 24, scope: !8058)
!8067 = !DILocation(line: 4795, column: 23, scope: !8058)
!8068 = !DILocation(line: 4796, column: 27, scope: !8058)
!8069 = !DILocation(line: 4798, column: 22, scope: !8058)
!8070 = !DILocation(line: 4798, column: 20, scope: !8058)
!8071 = !DILocation(line: 4800, column: 1, scope: !8058)
!8072 = distinct !DISubprogram(name: "free_sched_pools", scope: !3, file: !3, line: 4804, type: !2396, scopeLine: 4805, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8073)
!8073 = !{!8074}
!8074 = !DILocalVariable(name: "i", scope: !8072, file: !3, line: 4806, type: !638)
!8075 = !DILocation(line: 4808, column: 20, scope: !8072)
!8076 = !DILocation(line: 4808, column: 3, scope: !8072)
!8077 = !DILocation(line: 4809, column: 3, scope: !8072)
!8078 = !DILocation(line: 0, scope: !8072)
!8079 = !DILocation(line: 4810, column: 8, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 4810, column: 3)
!8081 = !DILocation(line: 0, scope: !8080)
!8082 = !DILocation(line: 4810, column: 35, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 4810, column: 3)
!8084 = !DILocation(line: 4810, column: 17, scope: !8083)
!8085 = !DILocation(line: 4810, column: 3, scope: !8080)
!8086 = !DILocation(line: 4812, column: 7, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 4811, column: 5)
!8088 = !DILocation(line: 4813, column: 7, scope: !8087)
!8089 = !DILocation(line: 4814, column: 7, scope: !8087)
!8090 = !DILocation(line: 4810, column: 45, scope: !8083)
!8091 = !DILocation(line: 4810, column: 3, scope: !8083)
!8092 = distinct !{!8092, !8085, !8093}
!8093 = !DILocation(line: 4815, column: 5, scope: !8080)
!8094 = !DILocation(line: 4816, column: 9, scope: !8072)
!8095 = !DILocation(line: 4816, column: 3, scope: !8072)
!8096 = !DILocation(line: 4817, column: 1, scope: !8072)
!8097 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !1162, file: !1162, line: 32, type: !8098, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8100)
!8098 = !DISubroutineType(types: !8099)
!8099 = !{null, !7879}
!8100 = !{!8101}
!8101 = !DILocalVariable(name: "vec_", arg: 1, scope: !8097, file: !1162, line: 32, type: !7879)
!8102 = !DILocation(line: 0, scope: !8097)
!8103 = !DILocation(line: 32, column: 1, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8097, file: !1162, line: 32, column: 1)
!8105 = !DILocation(line: 32, column: 1, scope: !8097)
!8106 = distinct !DISubprogram(name: "sel_remove_empty_bb", scope: !3, file: !3, line: 5055, type: !8107, scopeLine: 5057, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8109)
!8107 = !DISubroutineType(types: !8108)
!8108 = !{null, !1179, !637, !637}
!8109 = !{!8110, !8111, !8112, !8113, !8114, !8117}
!8110 = !DILocalVariable(name: "empty_bb", arg: 1, scope: !8106, file: !3, line: 5055, type: !1179)
!8111 = !DILocalVariable(name: "merge_up_p", arg: 2, scope: !8106, file: !3, line: 5055, type: !637)
!8112 = !DILocalVariable(name: "remove_from_cfg_p", arg: 3, scope: !8106, file: !3, line: 5056, type: !637)
!8113 = !DILocalVariable(name: "merge_bb", scope: !8106, file: !3, line: 5058, type: !1179)
!8114 = !DILocalVariable(name: "e", scope: !8115, file: !3, line: 5070, type: !1196)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 5069, column: 5)
!8116 = distinct !DILexicalBlock(scope: !8106, file: !3, line: 5062, column: 7)
!8117 = !DILocalVariable(name: "ei", scope: !8115, file: !3, line: 5071, type: !3258)
!8118 = !DILocation(line: 0, scope: !8106)
!8119 = !DILocation(line: 5060, column: 3, scope: !8106)
!8120 = !DILocation(line: 5062, column: 7, scope: !8116)
!8121 = !DILocation(line: 5062, column: 7, scope: !8106)
!8122 = !DILocation(line: 5064, column: 28, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 5063, column: 5)
!8124 = !DILocation(line: 5065, column: 7, scope: !8123)
!8125 = !DILocation(line: 5071, column: 7, scope: !8115)
!8126 = !DILocation(line: 5073, column: 18, scope: !8115)
!8127 = !DILocation(line: 5077, column: 17, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8115, file: !3, line: 5077, column: 7)
!8129 = !DILocation(line: 0, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 5077, column: 7)
!8131 = !DILocation(line: 5077, column: 12, scope: !8128)
!8132 = !DILocation(line: 5078, column: 17, scope: !8130)
!8133 = !DILocation(line: 0, scope: !8115)
!8134 = !DILocation(line: 5077, column: 7, scope: !8128)
!8135 = !DILocation(line: 5080, column: 21, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 5080, column: 15)
!8137 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 5079, column: 9)
!8138 = !DILocation(line: 5080, column: 27, scope: !8136)
!8139 = !DILocation(line: 5080, column: 15, scope: !8137)
!8140 = !DILocation(line: 5081, column: 13, scope: !8136)
!8141 = !DILocation(line: 5083, column: 13, scope: !8136)
!8142 = !DILocation(line: 5077, column: 7, scope: !8130)
!8143 = distinct !{!8143, !8134, !8144}
!8144 = !DILocation(line: 5084, column: 9, scope: !8128)
!8145 = !DILocation(line: 5086, column: 7, scope: !8115)
!8146 = !DILocation(line: 5088, column: 5, scope: !8116)
!8147 = !DILocation(line: 0, scope: !8116)
!8148 = !DILocation(line: 5090, column: 3, scope: !8106)
!8149 = !DILocation(line: 5091, column: 3, scope: !8106)
!8150 = !DILocation(line: 5092, column: 1, scope: !8106)
!8151 = distinct !DISubprogram(name: "ei_safe_edge", scope: !155, file: !155, line: 761, type: !8152, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8154)
!8152 = !DISubroutineType(types: !8153)
!8153 = !{!1196, !3258}
!8154 = !{!8155}
!8155 = !DILocalVariable(name: "i", arg: 1, scope: !8151, file: !155, line: 761, type: !3258)
!8156 = !DILocation(line: 763, column: 11, scope: !8151)
!8157 = !DILocation(line: 763, column: 10, scope: !8151)
!8158 = !DILocation(line: 763, column: 26, scope: !8151)
!8159 = !DILocation(line: 763, column: 3, scope: !8151)
!8160 = distinct !DISubprogram(name: "move_bb_info", scope: !3, file: !3, line: 5040, type: !2168, scopeLine: 5041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8161)
!8161 = !{!8162, !8163}
!8162 = !DILocalVariable(name: "merge_bb", arg: 1, scope: !8160, file: !3, line: 5040, type: !1179)
!8163 = !DILocalVariable(name: "empty_bb", arg: 2, scope: !8160, file: !3, line: 5040, type: !1179)
!8164 = !DILocation(line: 0, scope: !8160)
!8165 = !DILocation(line: 5042, column: 3, scope: !8160)
!8166 = !DILocation(line: 5044, column: 22, scope: !8160)
!8167 = !DILocation(line: 5045, column: 9, scope: !8160)
!8168 = !DILocation(line: 5044, column: 3, scope: !8160)
!8169 = !DILocation(line: 5046, column: 3, scope: !8160)
!8170 = !DILocation(line: 5046, column: 27, scope: !8160)
!8171 = !DILocation(line: 5048, column: 1, scope: !8160)
!8172 = distinct !DISubprogram(name: "remove_empty_bb", scope: !3, file: !3, line: 5097, type: !8173, scopeLine: 5098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8175)
!8173 = !DISubroutineType(types: !8174)
!8174 = !{null, !1179, !637}
!8175 = !{!8176, !8177, !8178, !8181, !8182, !8185, !8188}
!8176 = !DILocalVariable(name: "empty_bb", arg: 1, scope: !8172, file: !3, line: 5097, type: !1179)
!8177 = !DILocalVariable(name: "remove_from_cfg_p", arg: 2, scope: !8172, file: !3, line: 5097, type: !637)
!8178 = !DILocalVariable(name: "pred", scope: !8179, file: !3, line: 5109, type: !1179)
!8179 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 5108, column: 5)
!8180 = distinct !DILexicalBlock(scope: !8172, file: !3, line: 5105, column: 7)
!8181 = !DILocalVariable(name: "succ", scope: !8179, file: !3, line: 5110, type: !1179)
!8182 = !DILocalVariable(name: "e", scope: !8183, file: !3, line: 5115, type: !1196)
!8183 = distinct !DILexicalBlock(scope: !8184, file: !3, line: 5114, column: 2)
!8184 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 5113, column: 11)
!8185 = !DILocalVariable(name: "e", scope: !8186, file: !3, line: 5140, type: !1196)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 5139, column: 9)
!8187 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 5138, column: 11)
!8188 = !DILocalVariable(name: "e", scope: !8189, file: !3, line: 5150, type: !1196)
!8189 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 5149, column: 2)
!8190 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 5148, column: 11)
!8191 = !DILocation(line: 0, scope: !8172)
!8192 = !DILocation(line: 5101, column: 3, scope: !8172)
!8193 = !DILocation(line: 5105, column: 7, scope: !8180)
!8194 = !DILocation(line: 5106, column: 7, scope: !8180)
!8195 = !DILocation(line: 5106, column: 11, scope: !8180)
!8196 = !DILocation(line: 5106, column: 40, scope: !8180)
!8197 = !DILocation(line: 5107, column: 4, scope: !8180)
!8198 = !DILocation(line: 5107, column: 7, scope: !8180)
!8199 = !DILocation(line: 5107, column: 36, scope: !8180)
!8200 = !DILocation(line: 5105, column: 7, scope: !8172)
!8201 = !DILocation(line: 5113, column: 11, scope: !8184)
!8202 = !DILocation(line: 5113, column: 40, scope: !8184)
!8203 = !DILocation(line: 5113, column: 11, scope: !8179)
!8204 = !DILocation(line: 5117, column: 4, scope: !8183)
!8205 = !DILocation(line: 5119, column: 8, scope: !8183)
!8206 = !DILocation(line: 0, scope: !8183)
!8207 = !DILocation(line: 5120, column: 11, scope: !8183)
!8208 = !DILocation(line: 5123, column: 21, scope: !8183)
!8209 = !DILocation(line: 0, scope: !8179)
!8210 = !DILocation(line: 5124, column: 2, scope: !8183)
!8211 = !DILocation(line: 0, scope: !8184)
!8212 = !DILocation(line: 5128, column: 11, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 5128, column: 11)
!8214 = !DILocation(line: 5128, column: 40, scope: !8213)
!8215 = !DILocation(line: 5128, column: 11, scope: !8179)
!8216 = !DILocation(line: 5132, column: 4, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 5129, column: 2)
!8218 = !DILocation(line: 5133, column: 11, scope: !8217)
!8219 = !DILocation(line: 5133, column: 36, scope: !8217)
!8220 = !DILocation(line: 5134, column: 2, scope: !8217)
!8221 = !DILocation(line: 0, scope: !8213)
!8222 = !DILocation(line: 5138, column: 11, scope: !8187)
!8223 = !DILocation(line: 5138, column: 40, scope: !8187)
!8224 = !DILocation(line: 5138, column: 52, scope: !8187)
!8225 = !DILocation(line: 5138, column: 44, scope: !8187)
!8226 = !DILocation(line: 5140, column: 20, scope: !8186)
!8227 = !DILocation(line: 0, scope: !8186)
!8228 = !DILocation(line: 5142, column: 18, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8186, file: !3, line: 5142, column: 15)
!8230 = !DILocation(line: 5142, column: 24, scope: !8229)
!8231 = !DILocation(line: 5142, column: 15, scope: !8186)
!8232 = !DILocation(line: 5143, column: 13, scope: !8229)
!8233 = !DILocation(line: 5145, column: 43, scope: !8229)
!8234 = !DILocation(line: 5145, column: 13, scope: !8229)
!8235 = !DILocation(line: 5148, column: 11, scope: !8190)
!8236 = !DILocation(line: 5148, column: 40, scope: !8190)
!8237 = !DILocation(line: 5148, column: 52, scope: !8190)
!8238 = !DILocation(line: 5148, column: 44, scope: !8190)
!8239 = !DILocation(line: 5150, column: 13, scope: !8189)
!8240 = !DILocation(line: 0, scope: !8189)
!8241 = !DILocation(line: 5152, column: 28, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 5152, column: 8)
!8243 = !DILocation(line: 5152, column: 8, scope: !8242)
!8244 = !DILocation(line: 5152, column: 34, scope: !8242)
!8245 = !DILocation(line: 5152, column: 8, scope: !8189)
!8246 = !DILocation(line: 5153, column: 6, scope: !8242)
!8247 = !DILocation(line: 5158, column: 3, scope: !8172)
!8248 = !DILocation(line: 5159, column: 1, scope: !8172)
!8249 = distinct !DISubprogram(name: "sel_split_edge", scope: !3, file: !3, line: 5295, type: !2300, scopeLine: 5296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8250)
!8250 = !{!8251, !8252, !8253, !8254, !8255, !8256, !8257, !8260}
!8251 = !DILocalVariable(name: "e", arg: 1, scope: !8249, file: !3, line: 5295, type: !1196)
!8252 = !DILocalVariable(name: "new_bb", scope: !8249, file: !3, line: 5297, type: !1179)
!8253 = !DILocalVariable(name: "src", scope: !8249, file: !3, line: 5297, type: !1179)
!8254 = !DILocalVariable(name: "other_bb", scope: !8249, file: !3, line: 5297, type: !1179)
!8255 = !DILocalVariable(name: "prev_max_uid", scope: !8249, file: !3, line: 5298, type: !638)
!8256 = !DILocalVariable(name: "jump", scope: !8249, file: !3, line: 5299, type: !645)
!8257 = !DILocalVariable(name: "i", scope: !8258, file: !3, line: 5308, type: !638)
!8258 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 5307, column: 5)
!8259 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 5305, column: 7)
!8260 = !DILocalVariable(name: "bb", scope: !8258, file: !3, line: 5309, type: !1179)
!8261 = !DILocation(line: 0, scope: !8249)
!8262 = !DILocation(line: 5301, column: 12, scope: !8249)
!8263 = !DILocation(line: 5302, column: 18, scope: !8249)
!8264 = !DILocation(line: 5303, column: 12, scope: !8249)
!8265 = !DILocation(line: 5305, column: 7, scope: !8259)
!8266 = !DILocation(line: 5306, column: 10, scope: !8259)
!8267 = !DILocation(line: 5306, column: 7, scope: !8259)
!8268 = !DILocation(line: 5309, column: 7, scope: !8258)
!8269 = !DILocation(line: 0, scope: !8258)
!8270 = !DILocation(line: 0, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 5316, column: 11)
!8272 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 5315, column: 13)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 5313, column: 7)
!8274 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 5313, column: 7)
!8275 = !DILocation(line: 5313, column: 12, scope: !8274)
!8276 = !DILocation(line: 5297, column: 28, scope: !8249)
!8277 = !DILocation(line: 0, scope: !8274)
!8278 = !DILocation(line: 5314, column: 12, scope: !8273)
!8279 = !DILocation(line: 5313, column: 7, scope: !8274)
!8280 = !DILocation(line: 5315, column: 14, scope: !8272)
!8281 = !DILocation(line: 5315, column: 18, scope: !8272)
!8282 = !DILocation(line: 5315, column: 13, scope: !8273)
!8283 = !DILocation(line: 5317, column: 36, scope: !8271)
!8284 = !DILocation(line: 5317, column: 42, scope: !8271)
!8285 = !DILocation(line: 5317, column: 13, scope: !8271)
!8286 = !DILocation(line: 5319, column: 13, scope: !8271)
!8287 = !DILocation(line: 5320, column: 24, scope: !8271)
!8288 = !DILocation(line: 5321, column: 11, scope: !8271)
!8289 = !DILocation(line: 5314, column: 66, scope: !8273)
!8290 = !DILocation(line: 5313, column: 7, scope: !8273)
!8291 = distinct !{!8291, !8279, !8292}
!8292 = !DILocation(line: 5321, column: 11, scope: !8274)
!8293 = !DILocation(line: 5322, column: 5, scope: !8259)
!8294 = !DILocation(line: 5322, column: 5, scope: !8258)
!8295 = !DILocation(line: 5325, column: 3, scope: !8249)
!8296 = !DILocation(line: 5327, column: 10, scope: !8249)
!8297 = !DILocation(line: 5328, column: 7, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 5328, column: 7)
!8299 = !DILocation(line: 5328, column: 7, scope: !8249)
!8300 = !DILocation(line: 5329, column: 5, scope: !8298)
!8301 = !DILocation(line: 5332, column: 7, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 5332, column: 7)
!8303 = !DILocation(line: 5332, column: 16, scope: !8302)
!8304 = !DILocation(line: 5332, column: 20, scope: !8302)
!8305 = !DILocation(line: 5332, column: 7, scope: !8249)
!8306 = !DILocation(line: 5333, column: 19, scope: !8302)
!8307 = !DILocation(line: 5333, column: 5, scope: !8302)
!8308 = !DILocation(line: 5335, column: 3, scope: !8249)
!8309 = distinct !DISubprogram(name: "VEC_basic_block_base_iterate", scope: !155, file: !155, line: 281, type: !8310, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8312)
!8310 = !DISubroutineType(types: !8311)
!8311 = !{!638, !6335, !7, !6324}
!8312 = !{!8313, !8314, !8315}
!8313 = !DILocalVariable(name: "vec_", arg: 1, scope: !8309, file: !155, line: 281, type: !6335)
!8314 = !DILocalVariable(name: "ix_", arg: 2, scope: !8309, file: !155, line: 281, type: !7)
!8315 = !DILocalVariable(name: "ptr", arg: 3, scope: !8309, file: !155, line: 281, type: !6324)
!8316 = !DILocation(line: 0, scope: !8309)
!8317 = !DILocation(line: 281, column: 1, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8309, file: !155, line: 281, column: 1)
!8319 = !DILocation(line: 281, column: 1, scope: !8309)
!8320 = !DILocation(line: 281, column: 1, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8318, file: !155, line: 281, column: 1)
!8322 = !DILocation(line: 281, column: 1, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8318, file: !155, line: 281, column: 1)
!8324 = !DILocation(line: 0, scope: !8318)
!8325 = distinct !DISubprogram(name: "sel_add_bb", scope: !3, file: !3, line: 4971, type: !2267, scopeLine: 4972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8326)
!8326 = !{!8327, !8328, !8331}
!8327 = !DILocalVariable(name: "bb", arg: 1, scope: !8325, file: !3, line: 4971, type: !1179)
!8328 = !DILocalVariable(name: "i", scope: !8329, file: !3, line: 5000, type: !638)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !3, line: 4999, column: 5)
!8330 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 4983, column: 7)
!8331 = !DILocalVariable(name: "temp_bb", scope: !8329, file: !3, line: 5001, type: !1179)
!8332 = !DILocation(line: 0, scope: !8325)
!8333 = !DILocation(line: 4974, column: 3, scope: !8325)
!8334 = !DILocation(line: 4975, column: 3, scope: !8325)
!8335 = !DILocation(line: 4976, column: 17, scope: !8325)
!8336 = !DILocation(line: 4976, column: 3, scope: !8325)
!8337 = !DILocation(line: 4981, column: 3, scope: !8325)
!8338 = !DILocation(line: 4983, column: 10, scope: !8330)
!8339 = !DILocation(line: 4983, column: 7, scope: !8325)
!8340 = !DILocation(line: 5003, column: 7, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 5003, column: 7)
!8342 = !DILocation(line: 4985, column: 7, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8330, file: !3, line: 4984, column: 5)
!8344 = !DILocation(line: 4988, column: 7, scope: !8343)
!8345 = !DILocation(line: 4992, column: 12, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 4992, column: 11)
!8347 = !DILocation(line: 4992, column: 32, scope: !8346)
!8348 = !DILocation(line: 4992, column: 35, scope: !8346)
!8349 = !DILocation(line: 4992, column: 50, scope: !8346)
!8350 = !DILocation(line: 4992, column: 11, scope: !8343)
!8351 = !DILocation(line: 4993, column: 2, scope: !8346)
!8352 = !DILocation(line: 4995, column: 7, scope: !8343)
!8353 = !DILocation(line: 4996, column: 5, scope: !8343)
!8354 = !DILocation(line: 0, scope: !8329)
!8355 = !DILocation(line: 0, scope: !8341)
!8356 = !DILocation(line: 5004, column: 12, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 5003, column: 7)
!8358 = !DILocation(line: 5006, column: 40, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 5005, column: 9)
!8360 = !DILocation(line: 5006, column: 11, scope: !8359)
!8361 = !DILocation(line: 5007, column: 21, scope: !8359)
!8362 = !DILocation(line: 5004, column: 66, scope: !8357)
!8363 = !DILocation(line: 5003, column: 7, scope: !8357)
!8364 = distinct !{!8364, !8340, !8365}
!8365 = !DILocation(line: 5008, column: 9, scope: !8341)
!8366 = !DILocation(line: 5012, column: 7, scope: !8329)
!8367 = !DILocation(line: 5013, column: 10, scope: !8329)
!8368 = !DILocation(line: 5015, column: 7, scope: !8329)
!8369 = !DILocation(line: 5018, column: 21, scope: !8325)
!8370 = !DILocation(line: 5018, column: 3, scope: !8325)
!8371 = !DILocation(line: 5019, column: 1, scope: !8325)
!8372 = distinct !DISubprogram(name: "find_new_jump", scope: !3, file: !3, line: 5274, type: !8373, scopeLine: 5275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8375)
!8373 = !DISubroutineType(types: !8374)
!8374 = !{!645, !1179, !1179, !638}
!8375 = !{!8376, !8377, !8378, !8379}
!8376 = !DILocalVariable(name: "from", arg: 1, scope: !8372, file: !3, line: 5274, type: !1179)
!8377 = !DILocalVariable(name: "jump_bb", arg: 2, scope: !8372, file: !3, line: 5274, type: !1179)
!8378 = !DILocalVariable(name: "prev_max_uid", arg: 3, scope: !8372, file: !3, line: 5274, type: !638)
!8379 = !DILocalVariable(name: "jump", scope: !8372, file: !3, line: 5276, type: !645)
!8380 = !DILocation(line: 0, scope: !8372)
!8381 = !DILocation(line: 5279, column: 7, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 5279, column: 7)
!8383 = !DILocation(line: 5279, column: 22, scope: !8382)
!8384 = !DILocation(line: 5279, column: 7, scope: !8372)
!8385 = !DILocation(line: 5283, column: 15, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 5283, column: 7)
!8387 = !DILocation(line: 5283, column: 13, scope: !8386)
!8388 = !DILocation(line: 5283, column: 7, scope: !8372)
!8389 = !DILocation(line: 5286, column: 15, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 5286, column: 7)
!8391 = !DILocation(line: 5287, column: 7, scope: !8390)
!8392 = !DILocation(line: 5287, column: 18, scope: !8390)
!8393 = !DILocation(line: 5287, column: 16, scope: !8390)
!8394 = !DILocation(line: 5286, column: 7, scope: !8372)
!8395 = !DILocation(line: 5289, column: 3, scope: !8372)
!8396 = !DILocation(line: 5290, column: 1, scope: !8372)
!8397 = distinct !DISubprogram(name: "sel_create_recovery_block", scope: !3, file: !3, line: 5358, type: !8398, scopeLine: 5359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8400)
!8398 = !DISubroutineType(types: !8399)
!8399 = !{!1179, !1892}
!8400 = !{!8401, !8402, !8403, !8404, !8405, !8406}
!8401 = !DILocalVariable(name: "orig_insn", arg: 1, scope: !8397, file: !3, line: 5358, type: !1892)
!8402 = !DILocalVariable(name: "first_bb", scope: !8397, file: !3, line: 5360, type: !1179)
!8403 = !DILocalVariable(name: "second_bb", scope: !8397, file: !3, line: 5360, type: !1179)
!8404 = !DILocalVariable(name: "recovery_block", scope: !8397, file: !3, line: 5360, type: !1179)
!8405 = !DILocalVariable(name: "before_recovery", scope: !8397, file: !3, line: 5361, type: !1179)
!8406 = !DILocalVariable(name: "jump", scope: !8397, file: !3, line: 5362, type: !645)
!8407 = !DILocation(line: 0, scope: !8397)
!8408 = !DILocation(line: 5361, column: 3, scope: !8397)
!8409 = !DILocation(line: 5361, column: 15, scope: !8397)
!8410 = !DILocation(line: 5364, column: 14, scope: !8397)
!8411 = !DILocation(line: 5365, column: 7, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 5365, column: 7)
!8413 = !DILocation(line: 5365, column: 7, scope: !8397)
!8414 = !DILocation(line: 5368, column: 7, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 5366, column: 5)
!8416 = !DILocation(line: 5369, column: 19, scope: !8415)
!8417 = !DILocation(line: 5370, column: 5, scope: !8415)
!8418 = !DILocation(line: 5372, column: 17, scope: !8412)
!8419 = !DILocation(line: 0, scope: !8412)
!8420 = !DILocation(line: 5374, column: 20, scope: !8397)
!8421 = !DILocation(line: 5375, column: 7, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 5375, column: 7)
!8423 = !DILocation(line: 5375, column: 7, scope: !8397)
!8424 = !DILocation(line: 5376, column: 40, scope: !8422)
!8425 = !DILocation(line: 5376, column: 5, scope: !8422)
!8426 = !DILocation(line: 5378, column: 3, scope: !8397)
!8427 = !DILocation(line: 5379, column: 3, scope: !8397)
!8428 = !DILocation(line: 5380, column: 7, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 5380, column: 7)
!8430 = !DILocation(line: 5380, column: 21, scope: !8429)
!8431 = !DILocation(line: 5380, column: 7, scope: !8397)
!8432 = !DILocation(line: 5381, column: 47, scope: !8429)
!8433 = !DILocation(line: 5381, column: 5, scope: !8429)
!8434 = !DILocation(line: 5383, column: 3, scope: !8397)
!8435 = !DILocation(line: 5385, column: 10, scope: !8397)
!8436 = !DILocation(line: 5386, column: 3, scope: !8397)
!8437 = !DILocation(line: 5387, column: 3, scope: !8397)
!8438 = !DILocation(line: 5390, column: 1, scope: !8397)
!8439 = !DILocation(line: 5389, column: 3, scope: !8397)
!8440 = distinct !DISubprogram(name: "copy_lv_set_from", scope: !3, file: !3, line: 4102, type: !2168, scopeLine: 4103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8441)
!8441 = !{!8442, !8443}
!8442 = !DILocalVariable(name: "bb", arg: 1, scope: !8440, file: !3, line: 4102, type: !1179)
!8443 = !DILocalVariable(name: "from_bb", arg: 2, scope: !8440, file: !3, line: 4102, type: !1179)
!8444 = !DILocation(line: 0, scope: !8440)
!8445 = !DILocation(line: 4104, column: 3, scope: !8440)
!8446 = !DILocation(line: 4106, column: 3, scope: !8440)
!8447 = !DILocation(line: 4107, column: 3, scope: !8440)
!8448 = !DILocation(line: 4107, column: 26, scope: !8440)
!8449 = !DILocation(line: 4108, column: 1, scope: !8440)
!8450 = distinct !DISubprogram(name: "sel_merge_blocks", scope: !3, file: !3, line: 5394, type: !2168, scopeLine: 5395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8451)
!8451 = !{!8452, !8453}
!8452 = !DILocalVariable(name: "a", arg: 1, scope: !8450, file: !3, line: 5394, type: !1179)
!8453 = !DILocalVariable(name: "b", arg: 2, scope: !8450, file: !3, line: 5394, type: !1179)
!8454 = !DILocation(line: 0, scope: !8450)
!8455 = !DILocation(line: 5396, column: 3, scope: !8450)
!8456 = !DILocation(line: 5397, column: 3, scope: !8450)
!8457 = !DILocation(line: 5399, column: 3, scope: !8450)
!8458 = !DILocation(line: 5400, column: 1, scope: !8450)
!8459 = distinct !DISubprogram(name: "change_loops_latches", scope: !3, file: !3, line: 5201, type: !2168, scopeLine: 5202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8460)
!8460 = !{!8461, !8462, !8463}
!8461 = !DILocalVariable(name: "from", arg: 1, scope: !8459, file: !3, line: 5201, type: !1179)
!8462 = !DILocalVariable(name: "to", arg: 2, scope: !8459, file: !3, line: 5201, type: !1179)
!8463 = !DILocalVariable(name: "loop", scope: !8464, file: !3, line: 5207, type: !1221)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 5206, column: 5)
!8465 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 5205, column: 7)
!8466 = !DILocation(line: 0, scope: !8459)
!8467 = !DILocation(line: 5203, column: 3, scope: !8459)
!8468 = !DILocation(line: 5205, column: 7, scope: !8465)
!8469 = !DILocation(line: 5205, column: 7, scope: !8459)
!8470 = !DILocation(line: 0, scope: !8464)
!8471 = !DILocation(line: 5209, column: 12, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 5209, column: 7)
!8473 = !DILocation(line: 0, scope: !8472)
!8474 = !DILocation(line: 5209, column: 7, scope: !8472)
!8475 = !DILocation(line: 5210, column: 13, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 5210, column: 13)
!8477 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 5209, column: 7)
!8478 = !DILocation(line: 5210, column: 48, scope: !8476)
!8479 = !DILocation(line: 5210, column: 57, scope: !8476)
!8480 = !DILocation(line: 5210, column: 63, scope: !8476)
!8481 = !DILocation(line: 5210, column: 13, scope: !8477)
!8482 = !DILocation(line: 5212, column: 13, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 5211, column: 11)
!8484 = !DILocation(line: 5213, column: 25, scope: !8483)
!8485 = !DILocation(line: 5214, column: 13, scope: !8483)
!8486 = !DILocation(line: 5209, column: 51, scope: !8477)
!8487 = !DILocation(line: 5209, column: 7, scope: !8477)
!8488 = distinct !{!8488, !8474, !8489}
!8489 = !DILocation(line: 5215, column: 11, scope: !8472)
!8490 = !DILocation(line: 5217, column: 1, scope: !8459)
!8491 = distinct !DISubprogram(name: "sel_redirect_edge_and_branch_force", scope: !3, file: !3, line: 5406, type: !8492, scopeLine: 5407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8494)
!8492 = !DISubroutineType(types: !8493)
!8493 = !{null, !1196, !1179}
!8494 = !{!8495, !8496, !8497, !8498, !8499, !8500}
!8495 = !DILocalVariable(name: "e", arg: 1, scope: !8491, file: !3, line: 5406, type: !1196)
!8496 = !DILocalVariable(name: "to", arg: 2, scope: !8491, file: !3, line: 5406, type: !1179)
!8497 = !DILocalVariable(name: "jump_bb", scope: !8491, file: !3, line: 5408, type: !1179)
!8498 = !DILocalVariable(name: "src", scope: !8491, file: !3, line: 5408, type: !1179)
!8499 = !DILocalVariable(name: "prev_max_uid", scope: !8491, file: !3, line: 5409, type: !638)
!8500 = !DILocalVariable(name: "jump", scope: !8491, file: !3, line: 5410, type: !645)
!8501 = !DILocation(line: 0, scope: !8491)
!8502 = !DILocation(line: 5412, column: 3, scope: !8491)
!8503 = !DILocation(line: 5414, column: 12, scope: !8491)
!8504 = !DILocation(line: 5415, column: 18, scope: !8491)
!8505 = !DILocation(line: 5416, column: 13, scope: !8491)
!8506 = !DILocation(line: 5418, column: 15, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 5418, column: 7)
!8508 = !DILocation(line: 5418, column: 7, scope: !8491)
!8509 = !DILocation(line: 5419, column: 5, scope: !8507)
!8510 = !DILocation(line: 5423, column: 7, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 5423, column: 7)
!8512 = !DILocation(line: 5424, column: 7, scope: !8511)
!8513 = !DILocation(line: 5424, column: 10, scope: !8511)
!8514 = !DILocation(line: 5423, column: 7, scope: !8491)
!8515 = !DILocation(line: 5425, column: 5, scope: !8511)
!8516 = !DILocation(line: 5427, column: 10, scope: !8491)
!8517 = !DILocation(line: 5428, column: 7, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 5428, column: 7)
!8519 = !DILocation(line: 5428, column: 7, scope: !8491)
!8520 = !DILocation(line: 5429, column: 5, scope: !8518)
!8521 = !DILocation(line: 5430, column: 1, scope: !8491)
!8522 = distinct !DISubprogram(name: "sel_register_cfg_hooks", scope: !3, file: !3, line: 5481, type: !2396, scopeLine: 5482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!8523 = !DILocation(line: 5483, column: 21, scope: !8522)
!8524 = !DILocation(line: 5485, column: 20, scope: !8522)
!8525 = !DILocation(line: 5486, column: 19, scope: !8522)
!8526 = !DILocation(line: 5488, column: 36, scope: !8522)
!8527 = !DILocation(line: 5490, column: 3, scope: !8522)
!8528 = !DILocation(line: 5492, column: 22, scope: !8522)
!8529 = !DILocation(line: 5493, column: 21, scope: !8522)
!8530 = !DILocation(line: 5494, column: 25, scope: !8522)
!8531 = !DILocation(line: 5495, column: 1, scope: !8522)
!8532 = distinct !DISubprogram(name: "sel_split_block", scope: !3, file: !3, line: 5222, type: !2520, scopeLine: 5223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8533)
!8533 = !{!8534, !8535, !8536, !8537}
!8534 = !DILocalVariable(name: "bb", arg: 1, scope: !8532, file: !3, line: 5222, type: !1179)
!8535 = !DILocalVariable(name: "after", arg: 2, scope: !8532, file: !3, line: 5222, type: !645)
!8536 = !DILocalVariable(name: "new_bb", scope: !8532, file: !3, line: 5224, type: !1179)
!8537 = !DILocalVariable(name: "insn", scope: !8532, file: !3, line: 5225, type: !1892)
!8538 = !DILocation(line: 0, scope: !8532)
!8539 = !DILocation(line: 5227, column: 12, scope: !8532)
!8540 = !DILocation(line: 5228, column: 3, scope: !8532)
!8541 = !DILocation(line: 5233, column: 3, scope: !8532)
!8542 = !DILocation(line: 5236, column: 3, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8532, file: !3, line: 5236, column: 3)
!8544 = !DILocation(line: 0, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 5237, column: 8)
!8546 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 5236, column: 3)
!8547 = !DILocation(line: 0, scope: !8543)
!8548 = !DILocation(line: 5236, column: 3, scope: !8546)
!8549 = !DILocation(line: 5237, column: 8, scope: !8545)
!8550 = !DILocation(line: 5237, column: 8, scope: !8546)
!8551 = !DILocation(line: 5238, column: 54, scope: !8545)
!8552 = !DILocation(line: 5238, column: 6, scope: !8545)
!8553 = !DILocation(line: 5238, column: 44, scope: !8545)
!8554 = distinct !{!8554, !8542, !8555}
!8555 = !DILocation(line: 5238, column: 54, scope: !8543)
!8556 = !DILocation(line: 5240, column: 7, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8532, file: !3, line: 5240, column: 7)
!8558 = !DILocation(line: 5240, column: 7, scope: !8532)
!8559 = !DILocation(line: 5242, column: 7, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 5241, column: 5)
!8561 = !DILocation(line: 5247, column: 7, scope: !8560)
!8562 = !DILocation(line: 5248, column: 7, scope: !8560)
!8563 = !DILocation(line: 5249, column: 5, scope: !8560)
!8564 = !DILocation(line: 5251, column: 8, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8532, file: !3, line: 5251, column: 7)
!8566 = !DILocation(line: 5252, column: 7, scope: !8565)
!8567 = !DILocation(line: 5252, column: 24, scope: !8565)
!8568 = !DILocation(line: 5252, column: 50, scope: !8565)
!8569 = !DILocation(line: 5252, column: 10, scope: !8565)
!8570 = !DILocation(line: 5251, column: 7, scope: !8532)
!8571 = !DILocation(line: 5253, column: 21, scope: !8565)
!8572 = !DILocation(line: 5253, column: 51, scope: !8565)
!8573 = !DILocation(line: 5253, column: 5, scope: !8565)
!8574 = !DILocation(line: 5255, column: 3, scope: !8532)
!8575 = distinct !DISubprogram(name: "sel_create_basic_block", scope: !3, file: !3, line: 5164, type: !2248, scopeLine: 5165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8576)
!8576 = !{!8577, !8578, !8579, !8580, !8581}
!8577 = !DILocalVariable(name: "headp", arg: 1, scope: !8575, file: !3, line: 5164, type: !642)
!8578 = !DILocalVariable(name: "endp", arg: 2, scope: !8575, file: !3, line: 5164, type: !642)
!8579 = !DILocalVariable(name: "after", arg: 3, scope: !8575, file: !3, line: 5164, type: !1179)
!8580 = !DILocalVariable(name: "new_bb", scope: !8575, file: !3, line: 5166, type: !1179)
!8581 = !DILocalVariable(name: "new_bb_note", scope: !8575, file: !3, line: 5167, type: !1892)
!8582 = !DILocation(line: 0, scope: !8575)
!8583 = !DILocation(line: 5169, column: 3, scope: !8575)
!8584 = !DILocation(line: 5172, column: 17, scope: !8575)
!8585 = !DILocation(line: 5174, column: 19, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 5174, column: 7)
!8587 = !DILocation(line: 5174, column: 7, scope: !8575)
!8588 = !DILocation(line: 5175, column: 29, scope: !8586)
!8589 = !DILocation(line: 5175, column: 14, scope: !8586)
!8590 = !DILocation(line: 5175, column: 5, scope: !8586)
!8591 = !DILocation(line: 5178, column: 46, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 5177, column: 5)
!8593 = !DILocation(line: 5178, column: 59, scope: !8592)
!8594 = !DILocation(line: 5178, column: 16, scope: !8592)
!8595 = !DILocation(line: 5180, column: 15, scope: !8592)
!8596 = !DILocation(line: 5180, column: 19, scope: !8592)
!8597 = !DILocation(line: 0, scope: !8586)
!8598 = !DILocation(line: 5183, column: 3, scope: !8575)
!8599 = !DILocation(line: 5185, column: 3, scope: !8575)
!8600 = distinct !DISubprogram(name: "sel_init_only_bb", scope: !3, file: !3, line: 5190, type: !2168, scopeLine: 5191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8601)
!8601 = !{!8602, !8603}
!8602 = !DILocalVariable(name: "bb", arg: 1, scope: !8600, file: !3, line: 5190, type: !1179)
!8603 = !DILocalVariable(name: "after", arg: 2, scope: !8600, file: !3, line: 5190, type: !1179)
!8604 = !DILocation(line: 0, scope: !8600)
!8605 = !DILocation(line: 5192, column: 3, scope: !8600)
!8606 = !DILocation(line: 5194, column: 3, scope: !8600)
!8607 = !DILocation(line: 5195, column: 3, scope: !8600)
!8608 = !DILocation(line: 5196, column: 1, scope: !8600)
!8609 = distinct !DISubprogram(name: "sel_create_empty_bb", scope: !3, file: !3, line: 5340, type: !2296, scopeLine: 5341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8610)
!8610 = !{!8611, !8612}
!8611 = !DILocalVariable(name: "after", arg: 1, scope: !8609, file: !3, line: 5340, type: !1179)
!8612 = !DILocalVariable(name: "new_bb", scope: !8609, file: !3, line: 5342, type: !1179)
!8613 = !DILocation(line: 0, scope: !8609)
!8614 = !DILocation(line: 5344, column: 12, scope: !8609)
!8615 = !DILocation(line: 5348, column: 3, scope: !8609)
!8616 = !DILocation(line: 5351, column: 3, scope: !8609)
!8617 = !DILocation(line: 5352, column: 3, scope: !8609)
!8618 = distinct !DISubprogram(name: "sel_unregister_cfg_hooks", scope: !3, file: !3, line: 5499, type: !2396, scopeLine: 5500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!8619 = !DILocation(line: 5501, column: 25, scope: !8618)
!8620 = !DILocation(line: 5502, column: 21, scope: !8618)
!8621 = !DILocation(line: 5503, column: 22, scope: !8618)
!8622 = !DILocation(line: 5505, column: 3, scope: !8618)
!8623 = !DILocation(line: 5506, column: 1, scope: !8618)
!8624 = distinct !DISubprogram(name: "recog_memoized", scope: !8625, file: !8625, line: 150, type: !2176, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8626)
!8625 = !DIFile(filename: "./recog.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!8626 = !{!8627}
!8627 = !DILocalVariable(name: "insn", arg: 1, scope: !8624, file: !8625, line: 150, type: !645)
!8628 = !DILocation(line: 0, scope: !8624)
!8629 = !DILocation(line: 152, column: 7, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8624, file: !8625, line: 152, column: 7)
!8631 = !DILocation(line: 152, column: 24, scope: !8630)
!8632 = !DILocation(line: 152, column: 7, scope: !8624)
!8633 = !DILocation(line: 153, column: 31, scope: !8630)
!8634 = !DILocation(line: 153, column: 24, scope: !8630)
!8635 = !DILocation(line: 153, column: 22, scope: !8630)
!8636 = !DILocation(line: 153, column: 5, scope: !8630)
!8637 = !DILocation(line: 154, column: 10, scope: !8624)
!8638 = !DILocation(line: 154, column: 3, scope: !8624)
!8639 = distinct !DISubprogram(name: "vinsn_create", scope: !3, file: !3, line: 1227, type: !8640, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8642)
!8640 = !DISubroutineType(types: !8641)
!8641 = !{!1939, !1892, !637}
!8642 = !{!8643, !8644, !8645}
!8643 = !DILocalVariable(name: "insn", arg: 1, scope: !8639, file: !3, line: 1227, type: !1892)
!8644 = !DILocalVariable(name: "force_unique_p", arg: 2, scope: !8639, file: !3, line: 1227, type: !637)
!8645 = !DILocalVariable(name: "vi", scope: !8639, file: !3, line: 1229, type: !1939)
!8646 = !DILocation(line: 0, scope: !8639)
!8647 = !DILocation(line: 1229, column: 16, scope: !8639)
!8648 = !DILocation(line: 1231, column: 3, scope: !8639)
!8649 = !DILocation(line: 1232, column: 3, scope: !8639)
!8650 = distinct !DISubprogram(name: "setup_nop_and_exit_insns", scope: !3, file: !3, line: 5606, type: !2396, scopeLine: 5607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!8651 = !DILocation(line: 5608, column: 3, scope: !8650)
!8652 = !DILocation(line: 5611, column: 17, scope: !8650)
!8653 = !DILocation(line: 5611, column: 15, scope: !8650)
!8654 = !DILocation(line: 5613, column: 3, scope: !8650)
!8655 = !DILocation(line: 5614, column: 14, scope: !8650)
!8656 = !DILocation(line: 5614, column: 3, scope: !8650)
!8657 = !DILocation(line: 5615, column: 15, scope: !8650)
!8658 = !DILocation(line: 5615, column: 13, scope: !8650)
!8659 = !DILocation(line: 5616, column: 3, scope: !8650)
!8660 = !DILocation(line: 5617, column: 3, scope: !8650)
!8661 = !DILocation(line: 5618, column: 1, scope: !8650)
!8662 = distinct !DISubprogram(name: "free_nop_and_exit_insns", scope: !3, file: !3, line: 5622, type: !2396, scopeLine: 5623, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!8663 = !DILocation(line: 5624, column: 13, scope: !8662)
!8664 = !DILocation(line: 5625, column: 15, scope: !8662)
!8665 = !DILocation(line: 5626, column: 1, scope: !8662)
!8666 = distinct !DISubprogram(name: "setup_nop_vinsn", scope: !3, file: !3, line: 5630, type: !2396, scopeLine: 5631, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!8667 = !DILocation(line: 5632, column: 29, scope: !8666)
!8668 = !DILocation(line: 5632, column: 15, scope: !8666)
!8669 = !DILocation(line: 5632, column: 13, scope: !8666)
!8670 = !DILocation(line: 5633, column: 3, scope: !8666)
!8671 = !DILocation(line: 5634, column: 1, scope: !8666)
!8672 = distinct !DISubprogram(name: "free_nop_vinsn", scope: !3, file: !3, line: 5638, type: !2396, scopeLine: 5639, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!8673 = !DILocation(line: 5640, column: 3, scope: !8672)
!8674 = !DILocation(line: 5641, column: 17, scope: !8672)
!8675 = !DILocation(line: 5641, column: 3, scope: !8672)
!8676 = !DILocation(line: 5642, column: 13, scope: !8672)
!8677 = !DILocation(line: 5643, column: 1, scope: !8672)
!8678 = distinct !DISubprogram(name: "sel_set_sched_flags", scope: !3, file: !3, line: 5647, type: !2396, scopeLine: 5648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!8679 = !DILocation(line: 5653, column: 7, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8678, file: !3, line: 5653, column: 7)
!8681 = !DILocation(line: 5653, column: 34, scope: !8680)
!8682 = !DILocation(line: 5653, column: 20, scope: !8680)
!8683 = !DILocation(line: 5653, column: 17, scope: !8680)
!8684 = !DILocation(line: 5654, column: 5, scope: !8680)
!8685 = !DILocation(line: 5655, column: 1, scope: !8678)
!8686 = distinct !DISubprogram(name: "sel_setup_sched_infos", scope: !3, file: !3, line: 5659, type: !2396, scopeLine: 5660, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!8687 = !DILocation(line: 5661, column: 3, scope: !8686)
!8688 = !DILocation(line: 5663, column: 35, scope: !8686)
!8689 = !DILocation(line: 5663, column: 3, scope: !8686)
!8690 = !DILocation(line: 5666, column: 42, scope: !8686)
!8691 = !DILocation(line: 5667, column: 35, scope: !8686)
!8692 = !DILocation(line: 5669, column: 5, scope: !8686)
!8693 = !DILocation(line: 5670, column: 43, scope: !8686)
!8694 = !DILocation(line: 5671, column: 39, scope: !8686)
!8695 = !DILocation(line: 5673, column: 21, scope: !8686)
!8696 = !DILocation(line: 5675, column: 22, scope: !8686)
!8697 = !DILocation(line: 5677, column: 5, scope: !8686)
!8698 = !DILocation(line: 5676, column: 3, scope: !8686)
!8699 = !DILocation(line: 5676, column: 23, scope: !8686)
!8700 = !DILocation(line: 5676, column: 48, scope: !8686)
!8701 = !DILocation(line: 5679, column: 3, scope: !8686)
!8702 = !DILocation(line: 5680, column: 1, scope: !8686)
!8703 = distinct !DISubprogram(name: "sel_estimate_number_of_insns", scope: !3, file: !3, line: 3785, type: !2172, scopeLine: 3786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8704)
!8704 = !{!8705, !8706, !8707, !8708}
!8705 = !DILocalVariable(name: "bb", arg: 1, scope: !8703, file: !3, line: 3785, type: !1179)
!8706 = !DILocalVariable(name: "res", scope: !8703, file: !3, line: 3787, type: !638)
!8707 = !DILocalVariable(name: "insn", scope: !8703, file: !3, line: 3788, type: !1892)
!8708 = !DILocalVariable(name: "next_tail", scope: !8703, file: !3, line: 3788, type: !1892)
!8709 = !DILocation(line: 0, scope: !8703)
!8710 = !DILocation(line: 3788, column: 17, scope: !8703)
!8711 = !DILocation(line: 3788, column: 55, scope: !8703)
!8712 = !DILocation(line: 3790, column: 3, scope: !8703)
!8713 = !DILocation(line: 3787, column: 7, scope: !8703)
!8714 = !DILocation(line: 3790, column: 15, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 3790, column: 3)
!8716 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 3790, column: 3)
!8717 = !DILocation(line: 3790, column: 3, scope: !8716)
!8718 = !DILocation(line: 3791, column: 9, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 3791, column: 9)
!8720 = !DILocation(line: 3791, column: 9, scope: !8715)
!8721 = !DILocation(line: 3790, column: 3, scope: !8715)
!8722 = distinct !{!8722, !8717, !8723}
!8723 = !DILocation(line: 3792, column: 10, scope: !8716)
!8724 = !DILocation(line: 3794, column: 3, scope: !8703)
!8725 = distinct !DISubprogram(name: "sel_luid_for_non_insn", scope: !3, file: !3, line: 3799, type: !2176, scopeLine: 3800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8726)
!8726 = !{!8727}
!8727 = !DILocalVariable(name: "x", arg: 1, scope: !8725, file: !3, line: 3799, type: !645)
!8728 = !DILocation(line: 0, scope: !8725)
!8729 = !DILocation(line: 3801, column: 3, scope: !8725)
!8730 = !DILocation(line: 3803, column: 3, scope: !8725)
!8731 = distinct !DISubprogram(name: "make_region_from_loop_preheader", scope: !3, file: !3, line: 5817, type: !6376, scopeLine: 5818, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8732)
!8732 = !{!8733, !8734, !8735, !8736, !8737}
!8733 = !DILocalVariable(name: "loop_blocks", arg: 1, scope: !8731, file: !3, line: 5817, type: !6378)
!8734 = !DILocalVariable(name: "i", scope: !8731, file: !3, line: 5819, type: !7)
!8735 = !DILocalVariable(name: "new_rgn_number", scope: !8731, file: !3, line: 5820, type: !638)
!8736 = !DILocalVariable(name: "bb", scope: !8731, file: !3, line: 5821, type: !1179)
!8737 = !DILocalVariable(name: "bb_ord_index", scope: !8731, file: !3, line: 5824, type: !638)
!8738 = !DILocation(line: 0, scope: !8731)
!8739 = !DILocation(line: 5821, column: 3, scope: !8731)
!8740 = !DILocation(line: 5824, column: 3, scope: !8731)
!8741 = !DILocation(line: 5824, column: 7, scope: !8731)
!8742 = !DILocation(line: 5826, column: 20, scope: !8731)
!8743 = !DILocation(line: 0, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 5829, column: 5)
!8745 = distinct !DILexicalBlock(scope: !8746, file: !3, line: 5828, column: 3)
!8746 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 5828, column: 3)
!8747 = !DILocation(line: 5828, column: 8, scope: !8746)
!8748 = !DILocation(line: 0, scope: !8746)
!8749 = !DILocation(line: 5828, column: 15, scope: !8745)
!8750 = !DILocation(line: 5828, column: 3, scope: !8746)
!8751 = !DILocation(line: 5832, column: 32, scope: !8744)
!8752 = !DILocation(line: 5832, column: 7, scope: !8744)
!8753 = !DILocation(line: 5828, column: 64, scope: !8745)
!8754 = !DILocation(line: 5828, column: 3, scope: !8745)
!8755 = distinct !{!8755, !8750, !8756}
!8756 = !DILocation(line: 5833, column: 5, scope: !8746)
!8757 = !DILocation(line: 5835, column: 3, scope: !8731)
!8758 = !DILocation(line: 5830, column: 7, scope: !8744)
!8759 = !DILocation(line: 5836, column: 3, scope: !8731)
!8760 = !DILocation(line: 5837, column: 1, scope: !8731)
!8761 = distinct !DISubprogram(name: "sel_create_new_region", scope: !3, file: !3, line: 5704, type: !2189, scopeLine: 5705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8762)
!8762 = !{!8763}
!8763 = !DILocalVariable(name: "new_rgn_number", scope: !8761, file: !3, line: 5706, type: !638)
!8764 = !DILocation(line: 5706, column: 24, scope: !8761)
!8765 = !DILocation(line: 0, scope: !8761)
!8766 = !DILocation(line: 5708, column: 3, scope: !8761)
!8767 = !DILocation(line: 5708, column: 34, scope: !8761)
!8768 = !DILocation(line: 5711, column: 22, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8761, file: !3, line: 5711, column: 7)
!8770 = !DILocation(line: 0, scope: !8769)
!8771 = !DILocation(line: 5711, column: 7, scope: !8761)
!8772 = !DILocation(line: 5712, column: 35, scope: !8769)
!8773 = !DILocation(line: 5713, column: 7, scope: !8769)
!8774 = !DILocation(line: 5712, column: 67, scope: !8769)
!8775 = !DILocation(line: 5712, column: 5, scope: !8769)
!8776 = !DILocation(line: 5712, column: 33, scope: !8769)
!8777 = !DILocation(line: 5715, column: 5, scope: !8769)
!8778 = !DILocation(line: 5715, column: 33, scope: !8769)
!8779 = !DILocation(line: 5719, column: 37, scope: !8761)
!8780 = !DILocation(line: 5720, column: 5, scope: !8761)
!8781 = !DILocation(line: 5719, column: 65, scope: !8761)
!8782 = !DILocation(line: 5719, column: 3, scope: !8761)
!8783 = !DILocation(line: 5719, column: 35, scope: !8761)
!8784 = !DILocation(line: 5722, column: 13, scope: !8761)
!8785 = !DILocation(line: 5724, column: 3, scope: !8761)
!8786 = distinct !DISubprogram(name: "sel_add_block_to_region", scope: !3, file: !3, line: 5686, type: !8787, scopeLine: 5687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8789)
!8787 = !DISubroutineType(types: !8788)
!8788 = !{null, !1179, !1839, !638}
!8789 = !{!8790, !8791, !8792}
!8790 = !DILocalVariable(name: "bb", arg: 1, scope: !8786, file: !3, line: 5686, type: !1179)
!8791 = !DILocalVariable(name: "bb_ord_index", arg: 2, scope: !8786, file: !3, line: 5686, type: !1839)
!8792 = !DILocalVariable(name: "rgn", arg: 3, scope: !8786, file: !3, line: 5686, type: !638)
!8793 = !DILocation(line: 0, scope: !8786)
!8794 = !DILocation(line: 5688, column: 3, scope: !8786)
!8795 = !DILocation(line: 5688, column: 23, scope: !8786)
!8796 = !DILocation(line: 5689, column: 3, scope: !8786)
!8797 = !DILocation(line: 5689, column: 28, scope: !8786)
!8798 = !DILocation(line: 5690, column: 3, scope: !8786)
!8799 = !DILocation(line: 5690, column: 26, scope: !8786)
!8800 = !DILocation(line: 5691, column: 3, scope: !8786)
!8801 = !DILocation(line: 5691, column: 30, scope: !8786)
!8802 = !DILocation(line: 5692, column: 29, scope: !8786)
!8803 = !DILocation(line: 5692, column: 3, scope: !8786)
!8804 = !DILocation(line: 5692, column: 27, scope: !8786)
!8805 = !DILocation(line: 5693, column: 56, scope: !8786)
!8806 = !DILocation(line: 5693, column: 3, scope: !8786)
!8807 = !DILocation(line: 5693, column: 16, scope: !8786)
!8808 = !DILocation(line: 5693, column: 35, scope: !8786)
!8809 = !DILocation(line: 5693, column: 33, scope: !8786)
!8810 = !DILocation(line: 5693, column: 50, scope: !8786)
!8811 = !DILocation(line: 5694, column: 18, scope: !8786)
!8812 = !DILocation(line: 5697, column: 26, scope: !8786)
!8813 = !DILocation(line: 5697, column: 45, scope: !8786)
!8814 = !DILocation(line: 5697, column: 43, scope: !8786)
!8815 = !DILocation(line: 5697, column: 3, scope: !8786)
!8816 = !DILocation(line: 5697, column: 24, scope: !8786)
!8817 = !DILocation(line: 5698, column: 1, scope: !8786)
!8818 = distinct !DISubprogram(name: "sel_init_pipelining", scope: !3, file: !3, line: 5867, type: !2396, scopeLine: 5868, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!8819 = !DILocation(line: 5870, column: 3, scope: !8818)
!8820 = !DILocation(line: 5874, column: 21, scope: !8818)
!8821 = !DILocation(line: 5876, column: 37, scope: !8818)
!8822 = !DILocation(line: 5876, column: 22, scope: !8818)
!8823 = !DILocation(line: 5876, column: 20, scope: !8818)
!8824 = !DILocation(line: 5877, column: 3, scope: !8818)
!8825 = !DILocation(line: 5879, column: 3, scope: !8818)
!8826 = !DILocation(line: 5880, column: 1, scope: !8818)
!8827 = distinct !DISubprogram(name: "recompute_rev_top_order", scope: !3, file: !3, line: 4699, type: !2396, scopeLine: 4700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8828)
!8828 = !{!8829, !8830, !8831}
!8829 = !DILocalVariable(name: "postorder", scope: !8827, file: !3, line: 4701, type: !1839)
!8830 = !DILocalVariable(name: "n_blocks", scope: !8827, file: !3, line: 4702, type: !638)
!8831 = !DILocalVariable(name: "i", scope: !8827, file: !3, line: 4702, type: !638)
!8832 = !DILocation(line: 4704, column: 8, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 4704, column: 7)
!8834 = !DILocation(line: 4704, column: 28, scope: !8833)
!8835 = !DILocation(line: 4706, column: 33, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 4705, column: 5)
!8837 = !DILocation(line: 0, scope: !8836)
!8838 = !DILocation(line: 4704, column: 31, scope: !8833)
!8839 = !DILocation(line: 4704, column: 57, scope: !8833)
!8840 = !DILocation(line: 4704, column: 55, scope: !8833)
!8841 = !DILocation(line: 4704, column: 7, scope: !8827)
!8842 = !DILocation(line: 4706, column: 31, scope: !8836)
!8843 = !DILocation(line: 4707, column: 29, scope: !8836)
!8844 = !DILocation(line: 4707, column: 27, scope: !8836)
!8845 = !DILocation(line: 4711, column: 15, scope: !8827)
!8846 = !DILocation(line: 0, scope: !8827)
!8847 = !DILocation(line: 4709, column: 5, scope: !8836)
!8848 = !DILocation(line: 4713, column: 14, scope: !8827)
!8849 = !DILocation(line: 4714, column: 3, scope: !8827)
!8850 = !DILocation(line: 4718, column: 8, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 4718, column: 3)
!8852 = !DILocation(line: 0, scope: !8851)
!8853 = !DILocation(line: 4718, column: 17, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 4718, column: 3)
!8855 = !DILocation(line: 4718, column: 3, scope: !8851)
!8856 = !DILocation(line: 4720, column: 7, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 4719, column: 5)
!8858 = !DILocation(line: 4721, column: 27, scope: !8857)
!8859 = !DILocation(line: 4721, column: 7, scope: !8857)
!8860 = !DILocation(line: 4721, column: 41, scope: !8857)
!8861 = !DILocation(line: 4718, column: 30, scope: !8854)
!8862 = !DILocation(line: 4718, column: 3, scope: !8854)
!8863 = distinct !{!8863, !8855, !8864}
!8864 = !DILocation(line: 4722, column: 5, scope: !8851)
!8865 = !DILocation(line: 4724, column: 3, scope: !8827)
!8866 = !DILocation(line: 4725, column: 1, scope: !8827)
!8867 = distinct !DISubprogram(name: "get_loop_nest_for_rgn", scope: !3, file: !3, line: 5884, type: !8868, scopeLine: 5885, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8870)
!8868 = !DISubroutineType(types: !8869)
!8869 = !{!1248, !7}
!8870 = !{!8871}
!8871 = !DILocalVariable(name: "rgn", arg: 1, scope: !8867, file: !3, line: 5884, type: !7)
!8872 = !DILocation(line: 0, scope: !8867)
!8873 = !DILocation(line: 5888, column: 13, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 5888, column: 7)
!8875 = !DILocation(line: 5888, column: 11, scope: !8874)
!8876 = !DILocation(line: 5888, column: 7, scope: !8867)
!8877 = !DILocation(line: 5889, column: 12, scope: !8874)
!8878 = !DILocation(line: 5889, column: 5, scope: !8874)
!8879 = !DILocation(line: 0, scope: !8874)
!8880 = !DILocation(line: 5892, column: 1, scope: !8867)
!8881 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !142, file: !142, line: 85, type: !8882, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8886)
!8882 = !DISubroutineType(types: !8883)
!8883 = !{!7, !8884}
!8884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8885, size: 64)
!8885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1241)
!8886 = !{!8887}
!8887 = !DILocalVariable(name: "vec_", arg: 1, scope: !8881, file: !142, line: 85, type: !8884)
!8888 = !DILocation(line: 0, scope: !8881)
!8889 = !DILocation(line: 85, column: 1, scope: !8881)
!8890 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !142, file: !142, line: 85, type: !8891, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8893)
!8891 = !DISubroutineType(types: !8892)
!8892 = !{!1248, !8884, !7}
!8893 = !{!8894, !8895}
!8894 = !DILocalVariable(name: "vec_", arg: 1, scope: !8890, file: !142, line: 85, type: !8884)
!8895 = !DILocalVariable(name: "ix_", arg: 2, scope: !8890, file: !142, line: 85, type: !7)
!8896 = !DILocation(line: 0, scope: !8890)
!8897 = !DILocation(line: 85, column: 1, scope: !8890)
!8898 = distinct !DISubprogram(name: "considered_for_pipelining_p", scope: !3, file: !3, line: 5896, type: !8899, scopeLine: 5897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8901)
!8899 = !DISubroutineType(types: !8900)
!8900 = !{!637, !1221}
!8901 = !{!8902, !8903}
!8902 = !DILocalVariable(name: "loop", arg: 1, scope: !8898, file: !3, line: 5896, type: !1221)
!8903 = !DILocalVariable(name: "rgn", scope: !8904, file: !3, line: 5909, type: !638)
!8904 = distinct !DILexicalBlock(scope: !8905, file: !3, line: 5908, column: 5)
!8905 = distinct !DILexicalBlock(scope: !8898, file: !3, line: 5907, column: 7)
!8906 = !DILocation(line: 0, scope: !8898)
!8907 = !DILocation(line: 5898, column: 7, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8898, file: !3, line: 5898, column: 7)
!8909 = !DILocation(line: 5898, column: 25, scope: !8908)
!8910 = !DILocation(line: 5898, column: 7, scope: !8898)
!8911 = !DILocation(line: 5907, column: 7, scope: !8905)
!8912 = !DILocation(line: 5907, column: 7, scope: !8898)
!8913 = !DILocation(line: 5909, column: 17, scope: !8904)
!8914 = !DILocation(line: 0, scope: !8904)
!8915 = !DILocation(line: 5911, column: 7, scope: !8904)
!8916 = !DILocation(line: 5916, column: 1, scope: !8898)
!8917 = distinct !DISubprogram(name: "loop_depth", scope: !142, file: !142, line: 425, type: !8918, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8922)
!8918 = !DISubroutineType(types: !8919)
!8919 = !{!7, !8920}
!8920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8921, size: 64)
!8921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1222)
!8922 = !{!8923}
!8923 = !DILocalVariable(name: "loop", arg: 1, scope: !8917, file: !142, line: 425, type: !8920)
!8924 = !DILocation(line: 0, scope: !8917)
!8925 = !DILocation(line: 427, column: 10, scope: !8917)
!8926 = !DILocation(line: 427, column: 3, scope: !8917)
!8927 = distinct !DISubprogram(name: "sel_finish_pipelining", scope: !3, file: !3, line: 5996, type: !2396, scopeLine: 5997, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8928)
!8928 = !{!8929, !8935}
!8929 = !DILocalVariable(name: "li", scope: !8927, file: !3, line: 5998, type: !8930)
!8930 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_iterator", file: !142, line: 515, baseType: !8931)
!8931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 508, size: 128, elements: !8932)
!8932 = !{!8933, !8934}
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "to_visit", scope: !8931, file: !142, line: 511, baseType: !1858, size: 64)
!8934 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !8931, file: !142, line: 514, baseType: !7, size: 32, offset: 64)
!8935 = !DILocalVariable(name: "loop", scope: !8927, file: !3, line: 5999, type: !1221)
!8936 = !DILocation(line: 5998, column: 3, scope: !8927)
!8937 = !DILocation(line: 5999, column: 3, scope: !8927)
!8938 = !DILocation(line: 0, scope: !8927)
!8939 = !DILocation(line: 6002, column: 3, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8927, file: !3, line: 6002, column: 3)
!8941 = !DILocation(line: 6002, column: 3, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8940, file: !3, line: 6002, column: 3)
!8943 = !DILocation(line: 6003, column: 11, scope: !8942)
!8944 = !DILocation(line: 6003, column: 15, scope: !8942)
!8945 = distinct !{!8945, !8939, !8946}
!8946 = !DILocation(line: 6003, column: 17, scope: !8940)
!8947 = !DILocation(line: 6005, column: 3, scope: !8927)
!8948 = !DILocation(line: 6007, column: 3, scope: !8927)
!8949 = !DILocation(line: 6009, column: 9, scope: !8927)
!8950 = !DILocation(line: 6009, column: 3, scope: !8927)
!8951 = !DILocation(line: 6010, column: 23, scope: !8927)
!8952 = !DILocation(line: 6011, column: 1, scope: !8927)
!8953 = distinct !DISubprogram(name: "fel_init", scope: !142, file: !142, line: 535, type: !8954, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8958)
!8954 = !DISubroutineType(types: !8955)
!8955 = !{null, !8956, !8957, !7}
!8956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8930, size: 64)
!8957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!8958 = !{!8959, !8960, !8961, !8962, !8963, !8964}
!8959 = !DILocalVariable(name: "li", arg: 1, scope: !8953, file: !142, line: 535, type: !8956)
!8960 = !DILocalVariable(name: "loop", arg: 2, scope: !8953, file: !142, line: 535, type: !8957)
!8961 = !DILocalVariable(name: "flags", arg: 3, scope: !8953, file: !142, line: 535, type: !7)
!8962 = !DILocalVariable(name: "aloop", scope: !8953, file: !142, line: 537, type: !1221)
!8963 = !DILocalVariable(name: "i", scope: !8953, file: !142, line: 538, type: !7)
!8964 = !DILocalVariable(name: "mn", scope: !8953, file: !142, line: 539, type: !638)
!8965 = !DILocation(line: 0, scope: !8953)
!8966 = !DILocation(line: 537, column: 3, scope: !8953)
!8967 = !DILocation(line: 541, column: 7, scope: !8953)
!8968 = !DILocation(line: 541, column: 11, scope: !8953)
!8969 = !DILocation(line: 542, column: 8, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8953, file: !142, line: 542, column: 7)
!8971 = !DILocation(line: 542, column: 7, scope: !8953)
!8972 = !DILocation(line: 544, column: 11, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8970, file: !142, line: 543, column: 5)
!8974 = !DILocation(line: 544, column: 20, scope: !8973)
!8975 = !DILocation(line: 545, column: 13, scope: !8973)
!8976 = !DILocation(line: 546, column: 7, scope: !8973)
!8977 = !DILocation(line: 549, column: 18, scope: !8953)
!8978 = !DILocation(line: 549, column: 7, scope: !8953)
!8979 = !DILocation(line: 549, column: 16, scope: !8953)
!8980 = !DILocation(line: 550, column: 15, scope: !8953)
!8981 = !DILocation(line: 550, column: 8, scope: !8953)
!8982 = !DILocation(line: 552, column: 13, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8953, file: !142, line: 552, column: 7)
!8984 = !DILocation(line: 552, column: 7, scope: !8953)
!8985 = !DILocation(line: 554, column: 7, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !142, line: 554, column: 7)
!8987 = distinct !DILexicalBlock(scope: !8983, file: !142, line: 553, column: 5)
!8988 = !DILocation(line: 0, scope: !8986)
!8989 = !DILocation(line: 554, column: 19, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8986, file: !142, line: 554, column: 7)
!8991 = !DILocation(line: 555, column: 6, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8990, file: !142, line: 555, column: 6)
!8993 = !DILocation(line: 555, column: 12, scope: !8992)
!8994 = !DILocation(line: 556, column: 6, scope: !8992)
!8995 = !DILocation(line: 556, column: 16, scope: !8992)
!8996 = !DILocation(line: 556, column: 22, scope: !8992)
!8997 = !DILocation(line: 557, column: 6, scope: !8992)
!8998 = !DILocation(line: 557, column: 16, scope: !8992)
!8999 = !DILocation(line: 557, column: 20, scope: !8992)
!9000 = !DILocation(line: 555, column: 6, scope: !8990)
!9001 = !DILocation(line: 558, column: 4, scope: !8992)
!9002 = !DILocation(line: 554, column: 75, scope: !8990)
!9003 = !DILocation(line: 554, column: 7, scope: !8990)
!9004 = distinct !{!9004, !8985, !9005}
!9005 = !DILocation(line: 558, column: 4, scope: !8986)
!9006 = !DILocation(line: 560, column: 18, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !8983, file: !142, line: 560, column: 12)
!9008 = !DILocation(line: 0, scope: !9007)
!9009 = !DILocation(line: 560, column: 12, scope: !8983)
!9010 = !DILocation(line: 563, column: 7, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9012, file: !142, line: 563, column: 7)
!9012 = distinct !DILexicalBlock(scope: !9007, file: !142, line: 561, column: 5)
!9013 = !DILocation(line: 590, column: 7, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9007, file: !142, line: 587, column: 5)
!9015 = !DILocation(line: 564, column: 5, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9011, file: !142, line: 563, column: 7)
!9017 = !DILocation(line: 564, column: 12, scope: !9016)
!9018 = !DILocation(line: 564, column: 18, scope: !9016)
!9019 = !DILocation(line: 568, column: 7, scope: !9012)
!9020 = !DILocation(line: 565, column: 20, scope: !9016)
!9021 = !DILocation(line: 565, column: 11, scope: !9016)
!9022 = !DILocation(line: 563, column: 7, scope: !9016)
!9023 = distinct !{!9023, !9010, !9024}
!9024 = !DILocation(line: 566, column: 2, scope: !9011)
!9025 = !DILocation(line: 570, column: 8, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !142, line: 570, column: 8)
!9027 = distinct !DILexicalBlock(scope: !9012, file: !142, line: 569, column: 2)
!9028 = !DILocation(line: 570, column: 15, scope: !9026)
!9029 = !DILocation(line: 570, column: 19, scope: !9026)
!9030 = !DILocation(line: 570, column: 8, scope: !9027)
!9031 = !DILocation(line: 571, column: 6, scope: !9026)
!9032 = !DILocation(line: 573, column: 15, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9027, file: !142, line: 573, column: 8)
!9034 = !DILocation(line: 573, column: 8, scope: !9033)
!9035 = !DILocation(line: 573, column: 8, scope: !9027)
!9036 = !DILocation(line: 575, column: 19, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !142, line: 575, column: 8)
!9038 = distinct !DILexicalBlock(scope: !9033, file: !142, line: 574, column: 6)
!9039 = !DILocation(line: 575, column: 13, scope: !9037)
!9040 = !DILocation(line: 576, column: 6, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9037, file: !142, line: 575, column: 8)
!9042 = !DILocation(line: 576, column: 13, scope: !9041)
!9043 = !DILocation(line: 576, column: 19, scope: !9041)
!9044 = !DILocation(line: 575, column: 8, scope: !9037)
!9045 = !DILocation(line: 577, column: 21, scope: !9041)
!9046 = !DILocation(line: 577, column: 12, scope: !9041)
!9047 = !DILocation(line: 575, column: 8, scope: !9041)
!9048 = distinct !{!9048, !9044, !9049}
!9049 = !DILocation(line: 578, column: 3, scope: !9037)
!9050 = !DILocation(line: 580, column: 14, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9033, file: !142, line: 580, column: 13)
!9052 = !DILocation(line: 580, column: 13, scope: !9033)
!9053 = !DILocation(line: 583, column: 14, scope: !9051)
!9054 = !DILocation(line: 583, column: 12, scope: !9051)
!9055 = distinct !{!9055, !9019, !9056}
!9056 = !DILocation(line: 584, column: 2, scope: !9012)
!9057 = !DILocation(line: 592, column: 8, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9059, file: !142, line: 592, column: 8)
!9059 = distinct !DILexicalBlock(scope: !9014, file: !142, line: 591, column: 2)
!9060 = !DILocation(line: 592, column: 15, scope: !9058)
!9061 = !DILocation(line: 592, column: 19, scope: !9058)
!9062 = !DILocation(line: 592, column: 8, scope: !9059)
!9063 = !DILocation(line: 593, column: 6, scope: !9058)
!9064 = !DILocation(line: 595, column: 15, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9059, file: !142, line: 595, column: 8)
!9066 = !DILocation(line: 595, column: 21, scope: !9065)
!9067 = !DILocation(line: 595, column: 8, scope: !9059)
!9068 = !DILocation(line: 599, column: 8, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9065, file: !142, line: 598, column: 6)
!9070 = !DILocation(line: 596, column: 21, scope: !9065)
!9071 = !DILocation(line: 596, column: 12, scope: !9065)
!9072 = !DILocation(line: 596, column: 6, scope: !9065)
!9073 = !DILocation(line: 599, column: 15, scope: !9069)
!9074 = !DILocation(line: 599, column: 21, scope: !9069)
!9075 = !DILocation(line: 599, column: 29, scope: !9069)
!9076 = !DILocation(line: 599, column: 39, scope: !9069)
!9077 = !DILocation(line: 599, column: 44, scope: !9069)
!9078 = !DILocation(line: 0, scope: !9069)
!9079 = !DILocation(line: 600, column: 11, scope: !9069)
!9080 = !DILocation(line: 600, column: 9, scope: !9069)
!9081 = distinct !{!9081, !9068, !9082}
!9082 = !DILocation(line: 600, column: 28, scope: !9069)
!9083 = !DILocation(line: 601, column: 18, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9069, file: !142, line: 601, column: 12)
!9085 = !DILocation(line: 601, column: 12, scope: !9069)
!9086 = !DILocation(line: 603, column: 23, scope: !9069)
!9087 = !DILocation(line: 603, column: 14, scope: !9069)
!9088 = distinct !{!9088, !9013, !9089}
!9089 = !DILocation(line: 605, column: 2, scope: !9014)
!9090 = !DILocation(line: 608, column: 3, scope: !8953)
!9091 = !DILocation(line: 609, column: 1, scope: !8953)
!9092 = distinct !DISubprogram(name: "fel_next", scope: !142, file: !142, line: 518, type: !9093, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9095)
!9093 = !DISubroutineType(types: !9094)
!9094 = !{null, !8956, !8957}
!9095 = !{!9096, !9097, !9098}
!9096 = !DILocalVariable(name: "li", arg: 1, scope: !9092, file: !142, line: 518, type: !8956)
!9097 = !DILocalVariable(name: "loop", arg: 2, scope: !9092, file: !142, line: 518, type: !8957)
!9098 = !DILocalVariable(name: "anum", scope: !9092, file: !142, line: 520, type: !638)
!9099 = !DILocation(line: 0, scope: !9092)
!9100 = !DILocation(line: 520, column: 3, scope: !9092)
!9101 = !DILocation(line: 522, column: 3, scope: !9092)
!9102 = !DILocation(line: 522, column: 10, scope: !9092)
!9103 = !DILocation(line: 524, column: 14, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9092, file: !142, line: 523, column: 5)
!9105 = !DILocation(line: 525, column: 25, scope: !9104)
!9106 = !DILocation(line: 525, column: 15, scope: !9104)
!9107 = !DILocation(line: 525, column: 13, scope: !9104)
!9108 = !DILocation(line: 526, column: 11, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9104, file: !142, line: 526, column: 11)
!9110 = !DILocation(line: 526, column: 11, scope: !9104)
!9111 = distinct !{!9111, !9101, !9112}
!9112 = !DILocation(line: 528, column: 5, scope: !9092)
!9113 = !DILocation(line: 530, column: 3, scope: !9092)
!9114 = !DILocation(line: 531, column: 9, scope: !9092)
!9115 = !DILocation(line: 532, column: 1, scope: !9092)
!9116 = distinct !DISubprogram(name: "VEC_loop_p_heap_free", scope: !142, file: !142, line: 86, type: !9117, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9120)
!9117 = !DISubroutineType(types: !9118)
!9118 = !{null, !9119}
!9119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!9120 = !{!9121}
!9121 = !DILocalVariable(name: "vec_", arg: 1, scope: !9116, file: !142, line: 86, type: !9119)
!9122 = !DILocation(line: 0, scope: !9116)
!9123 = !DILocation(line: 86, column: 1, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9116, file: !142, line: 86, column: 1)
!9125 = !DILocation(line: 86, column: 1, scope: !9116)
!9126 = distinct !DISubprogram(name: "sel_find_rgns", scope: !3, file: !3, line: 6016, type: !2396, scopeLine: 6017, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9127)
!9127 = !{!9128, !9131}
!9128 = !DILocalVariable(name: "loop", scope: !9129, file: !3, line: 6023, type: !1248)
!9129 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 6022, column: 5)
!9130 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 6021, column: 7)
!9131 = !DILocalVariable(name: "li", scope: !9129, file: !3, line: 6024, type: !8930)
!9132 = !DILocation(line: 6018, column: 3, scope: !9126)
!9133 = !DILocation(line: 6019, column: 3, scope: !9126)
!9134 = !DILocation(line: 6021, column: 7, scope: !9130)
!9135 = !DILocation(line: 6021, column: 7, scope: !9126)
!9136 = !DILocation(line: 6023, column: 7, scope: !9129)
!9137 = !DILocation(line: 6024, column: 7, scope: !9129)
!9138 = !DILocation(line: 6026, column: 7, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9129, file: !3, line: 6026, column: 7)
!9140 = !DILocation(line: 0, scope: !9129)
!9141 = !DILocation(line: 6026, column: 7, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9139, file: !3, line: 6026, column: 7)
!9143 = !DILocation(line: 6029, column: 2, scope: !9142)
!9144 = distinct !{!9144, !9138, !9145}
!9145 = !DILocation(line: 6029, column: 35, scope: !9139)
!9146 = !DILocation(line: 6030, column: 5, scope: !9130)
!9147 = !DILocation(line: 6030, column: 5, scope: !9129)
!9148 = !DILocation(line: 6035, column: 3, scope: !9126)
!9149 = !DILocation(line: 6038, column: 3, scope: !9126)
!9150 = !DILocation(line: 6039, column: 20, scope: !9126)
!9151 = !DILocation(line: 6040, column: 1, scope: !9126)
!9152 = distinct !DISubprogram(name: "make_regions_from_loop_nest", scope: !3, file: !3, line: 5844, type: !8899, scopeLine: 5845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9153)
!9153 = !{!9154, !9155, !9156}
!9154 = !DILocalVariable(name: "loop", arg: 1, scope: !9152, file: !3, line: 5844, type: !1221)
!9155 = !DILocalVariable(name: "cur_loop", scope: !9152, file: !3, line: 5846, type: !1221)
!9156 = !DILocalVariable(name: "rgn_number", scope: !9152, file: !3, line: 5847, type: !638)
!9157 = !DILocation(line: 0, scope: !9152)
!9158 = !DILocation(line: 5850, column: 25, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 5850, column: 3)
!9160 = !DILocation(line: 0, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 5851, column: 9)
!9162 = distinct !DILexicalBlock(scope: !9159, file: !3, line: 5850, column: 3)
!9163 = !DILocation(line: 5850, column: 8, scope: !9159)
!9164 = !DILocation(line: 0, scope: !9159)
!9165 = !DILocation(line: 5850, column: 3, scope: !9159)
!9166 = !DILocation(line: 5851, column: 11, scope: !9161)
!9167 = !DILocation(line: 5851, column: 9, scope: !9162)
!9168 = !DILocation(line: 5850, column: 63, scope: !9162)
!9169 = !DILocation(line: 5850, column: 3, scope: !9162)
!9170 = distinct !{!9170, !9165, !9171}
!9171 = !DILocation(line: 5852, column: 14, scope: !9159)
!9172 = !DILocation(line: 5856, column: 16, scope: !9152)
!9173 = !DILocation(line: 5858, column: 18, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 5858, column: 7)
!9175 = !DILocation(line: 5858, column: 7, scope: !9152)
!9176 = !DILocation(line: 5861, column: 3, scope: !9152)
!9177 = !DILocation(line: 5862, column: 3, scope: !9152)
!9178 = !DILocation(line: 5863, column: 1, scope: !9152)
!9179 = distinct !DISubprogram(name: "make_regions_from_the_rest", scope: !3, file: !3, line: 5921, type: !2396, scopeLine: 5922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9180)
!9180 = !{!9181, !9182, !9183, !9184, !9185, !9186, !9187}
!9181 = !DILocalVariable(name: "cur_rgn_blocks", scope: !9179, file: !3, line: 5923, type: !638)
!9182 = !DILocalVariable(name: "loop_hdr", scope: !9179, file: !3, line: 5924, type: !1839)
!9183 = !DILocalVariable(name: "i", scope: !9179, file: !3, line: 5925, type: !638)
!9184 = !DILocalVariable(name: "bb", scope: !9179, file: !3, line: 5927, type: !1179)
!9185 = !DILocalVariable(name: "e", scope: !9179, file: !3, line: 5928, type: !1196)
!9186 = !DILocalVariable(name: "ei", scope: !9179, file: !3, line: 5929, type: !3258)
!9187 = !DILocalVariable(name: "degree", scope: !9179, file: !3, line: 5930, type: !1839)
!9188 = !DILocation(line: 5923, column: 3, scope: !9179)
!9189 = !DILocation(line: 5928, column: 3, scope: !9179)
!9190 = !DILocation(line: 5929, column: 3, scope: !9179)
!9191 = !DILocation(line: 5933, column: 20, scope: !9179)
!9192 = !DILocation(line: 5933, column: 33, scope: !9179)
!9193 = !DILocation(line: 0, scope: !9179)
!9194 = !DILocation(line: 5933, column: 18, scope: !9179)
!9195 = !DILocation(line: 5942, column: 14, scope: !9179)
!9196 = !DILocation(line: 5943, column: 12, scope: !9179)
!9197 = !DILocation(line: 5948, column: 8, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 5948, column: 3)
!9199 = !DILocation(line: 0, scope: !9198)
!9200 = !DILocation(line: 5948, column: 19, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9198, file: !3, line: 5948, column: 3)
!9202 = !DILocation(line: 5948, column: 17, scope: !9201)
!9203 = !DILocation(line: 5948, column: 3, scope: !9198)
!9204 = !DILocation(line: 5949, column: 5, scope: !9201)
!9205 = !DILocation(line: 5949, column: 17, scope: !9201)
!9206 = !DILocation(line: 5948, column: 38, scope: !9201)
!9207 = !DILocation(line: 5948, column: 3, scope: !9201)
!9208 = distinct !{!9208, !9203, !9209}
!9209 = !DILocation(line: 5949, column: 20, scope: !9198)
!9210 = !DILocation(line: 5951, column: 3, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 5951, column: 3)
!9212 = !DILocation(line: 5951, column: 3, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9211, file: !3, line: 5951, column: 3)
!9214 = !DILocation(line: 0, scope: !9211)
!9215 = !DILocation(line: 5953, column: 15, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 5953, column: 11)
!9217 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 5952, column: 5)
!9218 = !DILocation(line: 5953, column: 11, scope: !9216)
!9219 = !DILocation(line: 5953, column: 27, scope: !9216)
!9220 = !DILocation(line: 5953, column: 48, scope: !9216)
!9221 = !DILocation(line: 5953, column: 30, scope: !9216)
!9222 = !DILocation(line: 5954, column: 4, scope: !9216)
!9223 = !DILocation(line: 5954, column: 13, scope: !9216)
!9224 = !DILocation(line: 5954, column: 19, scope: !9216)
!9225 = !DILocation(line: 5953, column: 11, scope: !9217)
!9226 = !DILocation(line: 5955, column: 15, scope: !9216)
!9227 = !DILocation(line: 5955, column: 2, scope: !9216)
!9228 = !DILocation(line: 5955, column: 22, scope: !9216)
!9229 = !DILocation(line: 0, scope: !9213)
!9230 = distinct !{!9230, !9210, !9231}
!9231 = !DILocation(line: 5956, column: 5, scope: !9211)
!9232 = !DILocation(line: 5961, column: 3, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 5961, column: 3)
!9234 = !DILocation(line: 0, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9236, file: !3, line: 5967, column: 4)
!9236 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 5966, column: 2)
!9237 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 5965, column: 11)
!9238 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 5962, column: 5)
!9239 = distinct !DILexicalBlock(scope: !9233, file: !3, line: 5961, column: 3)
!9240 = !DILocation(line: 0, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 5967, column: 4)
!9242 = !DILocation(line: 5961, column: 3, scope: !9239)
!9243 = !DILocation(line: 0, scope: !9233)
!9244 = !DILocation(line: 5963, column: 18, scope: !9238)
!9245 = !DILocation(line: 5963, column: 7, scope: !9238)
!9246 = !DILocation(line: 5963, column: 25, scope: !9238)
!9247 = !DILocation(line: 5965, column: 12, scope: !9237)
!9248 = !DILocation(line: 5965, column: 11, scope: !9238)
!9249 = !DILocation(line: 5967, column: 4, scope: !9235)
!9250 = !DILocation(line: 5967, column: 4, scope: !9241)
!9251 = !DILocation(line: 5968, column: 11, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9241, file: !3, line: 5968, column: 10)
!9253 = !DILocation(line: 5968, column: 10, scope: !9241)
!9254 = !DILocation(line: 5969, column: 19, scope: !9252)
!9255 = !DILocation(line: 5969, column: 8, scope: !9252)
!9256 = !DILocation(line: 5969, column: 25, scope: !9252)
!9257 = distinct !{!9257, !9249, !9258}
!9258 = !DILocation(line: 5969, column: 25, scope: !9235)
!9259 = !DILocation(line: 5972, column: 2, scope: !9237)
!9260 = !DILocation(line: 5972, column: 20, scope: !9237)
!9261 = !DILocation(line: 0, scope: !9239)
!9262 = distinct !{!9262, !9232, !9263}
!9263 = !DILocation(line: 5973, column: 5, scope: !9233)
!9264 = !DILocation(line: 5975, column: 41, scope: !9179)
!9265 = !DILocation(line: 5975, column: 3, scope: !9179)
!9266 = !DILocation(line: 5979, column: 3, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 5979, column: 3)
!9268 = !DILocation(line: 5979, column: 3, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9267, file: !3, line: 5979, column: 3)
!9270 = !DILocation(line: 0, scope: !9267)
!9271 = !DILocation(line: 5980, column: 20, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 5980, column: 9)
!9273 = !DILocation(line: 5980, column: 9, scope: !9272)
!9274 = !DILocation(line: 5980, column: 27, scope: !9272)
!9275 = !DILocation(line: 5980, column: 9, scope: !9269)
!9276 = !DILocation(line: 5982, column: 2, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9272, file: !3, line: 5981, column: 7)
!9278 = !DILocation(line: 5982, column: 15, scope: !9277)
!9279 = !DILocation(line: 5982, column: 31, scope: !9277)
!9280 = !DILocation(line: 5983, column: 2, scope: !9277)
!9281 = !DILocation(line: 5983, column: 29, scope: !9277)
!9282 = !DILocation(line: 5984, column: 42, scope: !9277)
!9283 = !DILocation(line: 5984, column: 2, scope: !9277)
!9284 = !DILocation(line: 5984, column: 26, scope: !9277)
!9285 = !DILocation(line: 5985, column: 9, scope: !9277)
!9286 = !DILocation(line: 5985, column: 41, scope: !9277)
!9287 = !DILocation(line: 5986, column: 2, scope: !9277)
!9288 = !DILocation(line: 5986, column: 32, scope: !9277)
!9289 = !DILocation(line: 5987, column: 41, scope: !9277)
!9290 = !DILocation(line: 5987, column: 2, scope: !9277)
!9291 = !DILocation(line: 5987, column: 29, scope: !9277)
!9292 = !DILocation(line: 5988, column: 2, scope: !9277)
!9293 = !DILocation(line: 5988, column: 26, scope: !9277)
!9294 = !DILocation(line: 5989, column: 7, scope: !9277)
!9295 = !DILocation(line: 0, scope: !9269)
!9296 = distinct !{!9296, !9266, !9297}
!9297 = !DILocation(line: 5989, column: 7, scope: !9267)
!9298 = !DILocation(line: 5991, column: 3, scope: !9179)
!9299 = !DILocation(line: 5992, column: 3, scope: !9179)
!9300 = !DILocation(line: 5993, column: 1, scope: !9179)
!9301 = distinct !DISubprogram(name: "sel_add_loop_preheaders", scope: !3, file: !3, line: 6046, type: !2396, scopeLine: 6047, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9302)
!9302 = !{!9303, !9304, !9305}
!9303 = !DILocalVariable(name: "i", scope: !9301, file: !3, line: 6048, type: !638)
!9304 = !DILocalVariable(name: "bb", scope: !9301, file: !3, line: 6049, type: !1179)
!9305 = !DILocalVariable(name: "preheader_blocks", scope: !9301, file: !3, line: 6050, type: !1874)
!9306 = !DILocation(line: 6049, column: 3, scope: !9301)
!9307 = !DILocation(line: 6050, column: 3, scope: !9301)
!9308 = !DILocation(line: 6051, column: 7, scope: !9301)
!9309 = !DILocation(line: 0, scope: !9301)
!9310 = !DILocation(line: 6050, column: 27, scope: !9301)
!9311 = !DILocation(line: 6053, column: 8, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 6053, column: 3)
!9313 = !DILocation(line: 6054, column: 8, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9312, file: !3, line: 6053, column: 3)
!9315 = !DILocation(line: 0, scope: !9312)
!9316 = !DILocation(line: 6053, column: 3, scope: !9312)
!9317 = !DILocation(line: 6057, column: 7, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9314, file: !3, line: 6056, column: 5)
!9319 = !DILocation(line: 6058, column: 19, scope: !9318)
!9320 = !DILocation(line: 6058, column: 7, scope: !9318)
!9321 = !DILocation(line: 6055, column: 9, scope: !9314)
!9322 = !DILocation(line: 6053, column: 3, scope: !9314)
!9323 = distinct !{!9323, !9316, !9324}
!9324 = !DILocation(line: 6059, column: 5, scope: !9312)
!9325 = !DILocation(line: 6061, column: 3, scope: !9301)
!9326 = !DILocation(line: 6062, column: 1, scope: !9301)
!9327 = distinct !DISubprogram(name: "VEC_basic_block_heap_safe_push", scope: !155, file: !155, line: 283, type: !9328, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9330)
!9328 = !DISubroutineType(types: !9329)
!9329 = !{!6324, !6378, !1179}
!9330 = !{!9331, !9332}
!9331 = !DILocalVariable(name: "vec_", arg: 1, scope: !9327, file: !155, line: 283, type: !6378)
!9332 = !DILocalVariable(name: "obj_", arg: 2, scope: !9327, file: !155, line: 283, type: !1179)
!9333 = !DILocation(line: 0, scope: !9327)
!9334 = !DILocation(line: 283, column: 1, scope: !9327)
!9335 = distinct !DISubprogram(name: "loop_outer", scope: !142, file: !142, line: 434, type: !9336, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9338)
!9336 = !DISubroutineType(types: !9337)
!9337 = !{!1221, !8920}
!9338 = !{!9339, !9340}
!9339 = !DILocalVariable(name: "loop", arg: 1, scope: !9335, file: !142, line: 434, type: !8920)
!9340 = !DILocalVariable(name: "n", scope: !9335, file: !142, line: 436, type: !7)
!9341 = !DILocation(line: 0, scope: !9335)
!9342 = !DILocation(line: 436, column: 16, scope: !9335)
!9343 = !DILocation(line: 438, column: 9, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9335, file: !142, line: 438, column: 7)
!9345 = !DILocation(line: 438, column: 7, scope: !9335)
!9346 = !DILocation(line: 441, column: 10, scope: !9335)
!9347 = !DILocation(line: 441, column: 3, scope: !9335)
!9348 = !DILocation(line: 442, column: 1, scope: !9335)
!9349 = distinct !DISubprogram(name: "_list_alloc", scope: !409, file: !409, line: 376, type: !9350, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!9350 = !DISubroutineType(types: !9351)
!9351 = !{!1879}
!9352 = !DILocation(line: 378, column: 32, scope: !9349)
!9353 = !DILocation(line: 378, column: 20, scope: !9349)
!9354 = !DILocation(line: 378, column: 10, scope: !9349)
!9355 = !DILocation(line: 378, column: 3, scope: !9349)
!9356 = distinct !DISubprogram(name: "fence_clear", scope: !3, file: !3, line: 570, type: !3911, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9357)
!9357 = !{!9358, !9359, !9360, !9361}
!9358 = !DILocalVariable(name: "f", arg: 1, scope: !9356, file: !3, line: 570, type: !3113)
!9359 = !DILocalVariable(name: "s", scope: !9356, file: !3, line: 572, type: !1998)
!9360 = !DILocalVariable(name: "dc", scope: !9356, file: !3, line: 573, type: !1900)
!9361 = !DILocalVariable(name: "tc", scope: !9356, file: !3, line: 574, type: !642)
!9362 = !DILocation(line: 0, scope: !9356)
!9363 = !DILocation(line: 572, column: 15, scope: !9356)
!9364 = !DILocation(line: 573, column: 15, scope: !9356)
!9365 = !DILocation(line: 574, column: 14, scope: !9356)
!9366 = !DILocation(line: 576, column: 3, scope: !9356)
!9367 = !DILocation(line: 578, column: 3, scope: !9356)
!9368 = !DILocation(line: 581, column: 9, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 581, column: 7)
!9370 = !DILocation(line: 581, column: 7, scope: !9356)
!9371 = !DILocation(line: 582, column: 5, scope: !9369)
!9372 = !DILocation(line: 584, column: 10, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 584, column: 7)
!9374 = !DILocation(line: 584, column: 7, scope: !9356)
!9375 = !DILocation(line: 585, column: 5, scope: !9373)
!9376 = !DILocation(line: 587, column: 10, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 587, column: 7)
!9378 = !DILocation(line: 587, column: 7, scope: !9356)
!9379 = !DILocation(line: 588, column: 5, scope: !9377)
!9380 = !DILocation(line: 589, column: 3, scope: !9356)
!9381 = !DILocation(line: 590, column: 9, scope: !9356)
!9382 = !DILocation(line: 590, column: 3, scope: !9356)
!9383 = !DILocation(line: 591, column: 25, scope: !9356)
!9384 = !DILocation(line: 592, column: 1, scope: !9356)
!9385 = distinct !DISubprogram(name: "delete_deps_context", scope: !3, file: !3, line: 477, type: !9386, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9388)
!9386 = !DISubroutineType(types: !9387)
!9387 = !{null, !1900}
!9388 = !{!9389}
!9389 = !DILocalVariable(name: "dc", arg: 1, scope: !9385, file: !3, line: 477, type: !1900)
!9390 = !DILocation(line: 0, scope: !9385)
!9391 = !DILocation(line: 479, column: 3, scope: !9385)
!9392 = !DILocation(line: 480, column: 9, scope: !9385)
!9393 = !DILocation(line: 480, column: 3, scope: !9385)
!9394 = !DILocation(line: 481, column: 1, scope: !9385)
!9395 = distinct !DISubprogram(name: "delete_target_context", scope: !3, file: !3, line: 386, type: !3205, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9396)
!9396 = !{!9397}
!9397 = !DILocalVariable(name: "tc", arg: 1, scope: !9395, file: !3, line: 386, type: !2005)
!9398 = !DILocation(line: 0, scope: !9395)
!9399 = !DILocation(line: 388, column: 3, scope: !9395)
!9400 = !DILocation(line: 390, column: 21, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 390, column: 7)
!9402 = !DILocation(line: 390, column: 7, scope: !9401)
!9403 = !DILocation(line: 390, column: 7, scope: !9395)
!9404 = !DILocation(line: 391, column: 5, scope: !9401)
!9405 = !DILocation(line: 392, column: 1, scope: !9395)
!9406 = distinct !DISubprogram(name: "VEC_rtx_gc_free", scope: !414, file: !414, line: 202, type: !9407, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9410)
!9407 = !DISubroutineType(types: !9408)
!9408 = !{null, !9409}
!9409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!9410 = !{!9411}
!9411 = !DILocalVariable(name: "vec_", arg: 1, scope: !9406, file: !414, line: 202, type: !9409)
!9412 = !DILocation(line: 0, scope: !9406)
!9413 = !DILocation(line: 202, column: 1, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9406, file: !414, line: 202, column: 1)
!9415 = !DILocation(line: 202, column: 1, scope: !9406)
!9416 = distinct !DISubprogram(name: "clear_deps_context", scope: !3, file: !3, line: 470, type: !9386, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9417)
!9417 = !{!9418}
!9418 = !DILocalVariable(name: "dc", arg: 1, scope: !9416, file: !3, line: 470, type: !1900)
!9419 = !DILocation(line: 0, scope: !9416)
!9420 = !DILocation(line: 472, column: 3, scope: !9416)
!9421 = !DILocation(line: 473, column: 1, scope: !9416)
!9422 = distinct !DISubprogram(name: "VEC_edge_base_iterate", scope: !155, file: !155, line: 150, type: !9423, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9425)
!9423 = !DISubroutineType(types: !9424)
!9424 = !{!638, !6929, !7, !2345}
!9425 = !{!9426, !9427, !9428}
!9426 = !DILocalVariable(name: "vec_", arg: 1, scope: !9422, file: !155, line: 150, type: !6929)
!9427 = !DILocalVariable(name: "ix_", arg: 2, scope: !9422, file: !155, line: 150, type: !7)
!9428 = !DILocalVariable(name: "ptr", arg: 3, scope: !9422, file: !155, line: 150, type: !2345)
!9429 = !DILocation(line: 0, scope: !9422)
!9430 = !DILocation(line: 150, column: 1, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9422, file: !155, line: 150, column: 1)
!9432 = !DILocation(line: 150, column: 1, scope: !9422)
!9433 = !DILocation(line: 150, column: 1, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9431, file: !155, line: 150, column: 1)
!9435 = !DILocation(line: 150, column: 1, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9431, file: !155, line: 150, column: 1)
!9437 = !DILocation(line: 0, scope: !9431)
!9438 = distinct !DISubprogram(name: "VEC_edge_heap_free", scope: !155, file: !155, line: 152, type: !9439, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9441)
!9439 = !DISubroutineType(types: !9440)
!9440 = !{null, !2332}
!9441 = !{!9442}
!9442 = !DILocalVariable(name: "vec_", arg: 1, scope: !9438, file: !155, line: 152, type: !2332)
!9443 = !DILocation(line: 0, scope: !9438)
!9444 = !DILocation(line: 152, column: 1, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9438, file: !155, line: 152, column: 1)
!9446 = !DILocation(line: 152, column: 1, scope: !9438)
!9447 = distinct !DISubprogram(name: "get_all_loop_exits", scope: !409, file: !409, line: 1115, type: !9448, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9450)
!9448 = !DISubroutineType(types: !9449)
!9449 = !{!2022, !1179}
!9450 = !{!9451, !9452, !9453, !9456, !9457, !9458, !9459, !9464, !9467}
!9451 = !DILocalVariable(name: "bb", arg: 1, scope: !9447, file: !409, line: 1115, type: !1179)
!9452 = !DILocalVariable(name: "exits", scope: !9447, file: !409, line: 1117, type: !2022)
!9453 = !DILocalVariable(name: "this_loop", scope: !9454, file: !409, line: 1133, type: !1221)
!9454 = distinct !DILexicalBlock(scope: !9455, file: !409, line: 1132, column: 5)
!9455 = distinct !DILexicalBlock(scope: !9447, file: !409, line: 1131, column: 7)
!9456 = !DILocalVariable(name: "pred_loop", scope: !9454, file: !409, line: 1134, type: !1221)
!9457 = !DILocalVariable(name: "i", scope: !9454, file: !409, line: 1135, type: !638)
!9458 = !DILocalVariable(name: "e", scope: !9454, file: !409, line: 1136, type: !1196)
!9459 = !DILocalVariable(name: "next_exits", scope: !9460, file: !409, line: 1153, type: !2022)
!9460 = distinct !DILexicalBlock(scope: !9461, file: !409, line: 1152, column: 4)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !409, line: 1150, column: 6)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !409, line: 1149, column: 7)
!9463 = distinct !DILexicalBlock(scope: !9454, file: !409, line: 1149, column: 7)
!9464 = !DILocalVariable(name: "j", scope: !9465, file: !409, line: 1157, type: !638)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !409, line: 1156, column: 8)
!9466 = distinct !DILexicalBlock(scope: !9460, file: !409, line: 1155, column: 10)
!9467 = !DILocalVariable(name: "ne", scope: !9465, file: !409, line: 1158, type: !1196)
!9468 = !DILocation(line: 0, scope: !9447)
!9469 = !DILocation(line: 1117, column: 3, scope: !9447)
!9470 = !DILocation(line: 1117, column: 20, scope: !9447)
!9471 = !DILocation(line: 1121, column: 3, scope: !9447)
!9472 = !DILocation(line: 1121, column: 10, scope: !9447)
!9473 = !DILocation(line: 1122, column: 3, scope: !9447)
!9474 = !DILocation(line: 1122, column: 6, scope: !9447)
!9475 = !DILocation(line: 1124, column: 12, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9447, file: !409, line: 1123, column: 5)
!9477 = !DILocation(line: 1127, column: 7, scope: !9476)
!9478 = distinct !{!9478, !9471, !9479}
!9479 = !DILocation(line: 1128, column: 5, scope: !9447)
!9480 = !DILocation(line: 1131, column: 7, scope: !9455)
!9481 = !DILocation(line: 1131, column: 7, scope: !9447)
!9482 = !DILocation(line: 0, scope: !9454)
!9483 = !DILocation(line: 1136, column: 7, scope: !9454)
!9484 = !DILocation(line: 1138, column: 28, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9454, file: !409, line: 1138, column: 7)
!9486 = !DILocation(line: 1138, column: 12, scope: !9485)
!9487 = !DILocation(line: 0, scope: !9485)
!9488 = !DILocation(line: 1139, column: 12, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9485, file: !409, line: 1138, column: 7)
!9490 = !DILocation(line: 1139, column: 22, scope: !9489)
!9491 = !DILocation(line: 1138, column: 7, scope: !9485)
!9492 = !DILocation(line: 1140, column: 24, scope: !9489)
!9493 = !DILocation(line: 1138, column: 7, scope: !9489)
!9494 = distinct !{!9494, !9491, !9495}
!9495 = !DILocation(line: 1141, column: 21, scope: !9485)
!9496 = !DILocation(line: 1144, column: 7, scope: !9454)
!9497 = !DILocation(line: 1146, column: 15, scope: !9454)
!9498 = !DILocation(line: 1146, column: 13, scope: !9454)
!9499 = !DILocation(line: 0, scope: !9465)
!9500 = !DILocation(line: 1149, column: 12, scope: !9463)
!9501 = !DILocation(line: 1149, column: 19, scope: !9462)
!9502 = !DILocation(line: 0, scope: !9463)
!9503 = !DILocation(line: 1149, column: 7, scope: !9463)
!9504 = !DILocation(line: 1150, column: 27, scope: !9461)
!9505 = !DILocation(line: 1150, column: 30, scope: !9461)
!9506 = !DILocation(line: 1150, column: 6, scope: !9461)
!9507 = !DILocation(line: 1151, column: 6, scope: !9461)
!9508 = !DILocation(line: 1151, column: 30, scope: !9461)
!9509 = !DILocation(line: 1151, column: 33, scope: !9461)
!9510 = !DILocation(line: 1151, column: 9, scope: !9461)
!9511 = !DILocation(line: 1150, column: 6, scope: !9462)
!9512 = !DILocation(line: 1153, column: 56, scope: !9460)
!9513 = !DILocation(line: 1153, column: 59, scope: !9460)
!9514 = !DILocation(line: 1153, column: 36, scope: !9460)
!9515 = !DILocation(line: 0, scope: !9460)
!9516 = !DILocation(line: 1155, column: 10, scope: !9466)
!9517 = !DILocation(line: 1155, column: 10, scope: !9460)
!9518 = !DILocation(line: 1158, column: 3, scope: !9465)
!9519 = !DILocation(line: 0, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9521, file: !409, line: 1162, column: 3)
!9521 = distinct !DILexicalBlock(scope: !9465, file: !409, line: 1162, column: 3)
!9522 = !DILocation(line: 1162, column: 8, scope: !9521)
!9523 = !DILocation(line: 0, scope: !9521)
!9524 = !DILocation(line: 1162, column: 15, scope: !9520)
!9525 = !DILocation(line: 1162, column: 3, scope: !9521)
!9526 = !DILocation(line: 1163, column: 5, scope: !9520)
!9527 = !DILocation(line: 1162, column: 55, scope: !9520)
!9528 = !DILocation(line: 1162, column: 3, scope: !9520)
!9529 = distinct !{!9529, !9525, !9530}
!9530 = !DILocation(line: 1163, column: 5, scope: !9521)
!9531 = !DILocation(line: 1166, column: 3, scope: !9465)
!9532 = !DILocation(line: 1169, column: 4, scope: !9465)
!9533 = !DILocation(line: 1171, column: 8, scope: !9466)
!9534 = !DILocation(line: 1149, column: 53, scope: !9462)
!9535 = !DILocation(line: 1149, column: 7, scope: !9462)
!9536 = distinct !{!9536, !9503, !9537}
!9537 = !DILocation(line: 1172, column: 4, scope: !9463)
!9538 = !DILocation(line: 1173, column: 5, scope: !9455)
!9539 = !DILocation(line: 1175, column: 10, scope: !9447)
!9540 = !DILocation(line: 1173, column: 5, scope: !9454)
!9541 = !DILocation(line: 1176, column: 1, scope: !9447)
!9542 = !DILocation(line: 1175, column: 3, scope: !9447)
!9543 = distinct !DISubprogram(name: "sel_bb_empty_or_nop_p", scope: !409, file: !409, line: 1089, type: !2309, scopeLine: 1090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9544)
!9544 = !{!9545, !9546, !9547}
!9545 = !DILocalVariable(name: "bb", arg: 1, scope: !9543, file: !409, line: 1089, type: !1179)
!9546 = !DILocalVariable(name: "first", scope: !9543, file: !409, line: 1091, type: !1892)
!9547 = !DILocalVariable(name: "last", scope: !9543, file: !409, line: 1091, type: !1892)
!9548 = !DILocation(line: 0, scope: !9543)
!9549 = !DILocation(line: 1091, column: 18, scope: !9543)
!9550 = !DILocation(line: 1093, column: 13, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9543, file: !409, line: 1093, column: 7)
!9552 = !DILocation(line: 1093, column: 7, scope: !9543)
!9553 = !DILocation(line: 1096, column: 8, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9543, file: !409, line: 1096, column: 7)
!9555 = !DILocation(line: 1096, column: 7, scope: !9543)
!9556 = !DILocation(line: 1099, column: 13, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9543, file: !409, line: 1099, column: 7)
!9558 = !DILocation(line: 1099, column: 10, scope: !9557)
!9559 = !DILocation(line: 1099, column: 7, scope: !9543)
!9560 = !DILocation(line: 1102, column: 10, scope: !9543)
!9561 = !DILocation(line: 1103, column: 13, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9543, file: !409, line: 1103, column: 7)
!9563 = !DILocation(line: 1107, column: 1, scope: !9543)
!9564 = distinct !DISubprogram(name: "inner_loop_header_p", scope: !409, file: !409, line: 1033, type: !2309, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9565)
!9565 = !{!9566, !9567}
!9566 = !DILocalVariable(name: "bb", arg: 1, scope: !9564, file: !409, line: 1033, type: !1179)
!9567 = !DILocalVariable(name: "inner_loop", scope: !9564, file: !409, line: 1035, type: !1221)
!9568 = !DILocation(line: 0, scope: !9564)
!9569 = !DILocation(line: 1037, column: 8, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9564, file: !409, line: 1037, column: 7)
!9571 = !DILocation(line: 1037, column: 7, scope: !9564)
!9572 = !DILocation(line: 1040, column: 13, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9564, file: !409, line: 1040, column: 7)
!9574 = !DILocation(line: 1040, column: 10, scope: !9573)
!9575 = !DILocation(line: 1040, column: 7, scope: !9564)
!9576 = !DILocation(line: 1043, column: 20, scope: !9564)
!9577 = !DILocation(line: 1044, column: 18, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9564, file: !409, line: 1044, column: 7)
!9579 = !DILocation(line: 1044, column: 7, scope: !9564)
!9580 = !DILocation(line: 1048, column: 25, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9564, file: !409, line: 1048, column: 7)
!9582 = !DILocation(line: 1048, column: 10, scope: !9581)
!9583 = !DILocation(line: 1049, column: 7, scope: !9581)
!9584 = !DILocation(line: 1049, column: 10, scope: !9581)
!9585 = !DILocation(line: 1048, column: 7, scope: !9564)
!9586 = !DILocation(line: 1052, column: 7, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9581, file: !409, line: 1050, column: 5)
!9588 = !DILocation(line: 1057, column: 1, scope: !9564)
!9589 = distinct !DISubprogram(name: "get_loop_exit_edges_unique_dests", scope: !409, file: !409, line: 1061, type: !9590, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9592)
!9590 = !DISubroutineType(types: !9591)
!9591 = !{!2022, !8920}
!9592 = !{!9593, !9594, !9595, !9596, !9600, !9601}
!9593 = !DILocalVariable(name: "loop", arg: 1, scope: !9589, file: !409, line: 1061, type: !8920)
!9594 = !DILocalVariable(name: "edges", scope: !9589, file: !409, line: 1063, type: !2022)
!9595 = !DILocalVariable(name: "exit", scope: !9589, file: !409, line: 1064, type: !1270)
!9596 = !DILocalVariable(name: "i", scope: !9597, file: !409, line: 1071, type: !638)
!9597 = distinct !DILexicalBlock(scope: !9598, file: !409, line: 1070, column: 5)
!9598 = distinct !DILexicalBlock(scope: !9599, file: !409, line: 1069, column: 3)
!9599 = distinct !DILexicalBlock(scope: !9589, file: !409, line: 1069, column: 3)
!9600 = !DILocalVariable(name: "e", scope: !9597, file: !409, line: 1072, type: !1196)
!9601 = !DILocalVariable(name: "was_dest", scope: !9597, file: !409, line: 1073, type: !637)
!9602 = !DILocation(line: 0, scope: !9589)
!9603 = !DILocation(line: 1063, column: 3, scope: !9589)
!9604 = !DILocation(line: 1063, column: 21, scope: !9589)
!9605 = !DILocation(line: 1066, column: 3, scope: !9589)
!9606 = !DILocation(line: 1069, column: 21, scope: !9599)
!9607 = !DILocation(line: 0, scope: !9597)
!9608 = !DILocation(line: 1069, column: 8, scope: !9599)
!9609 = !DILocation(line: 0, scope: !9599)
!9610 = !DILocation(line: 1069, column: 40, scope: !9598)
!9611 = !DILocation(line: 1069, column: 3, scope: !9599)
!9612 = !DILocation(line: 1072, column: 7, scope: !9597)
!9613 = !DILocation(line: 1075, column: 12, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9597, file: !409, line: 1075, column: 7)
!9615 = !DILocation(line: 0, scope: !9614)
!9616 = !DILocation(line: 1075, column: 19, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9614, file: !409, line: 1075, column: 7)
!9618 = !DILocation(line: 1075, column: 7, scope: !9614)
!9619 = !DILocation(line: 1076, column: 13, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9617, file: !409, line: 1076, column: 13)
!9621 = !DILocation(line: 1076, column: 16, scope: !9620)
!9622 = !DILocation(line: 1076, column: 30, scope: !9620)
!9623 = !DILocation(line: 1076, column: 33, scope: !9620)
!9624 = !DILocation(line: 1076, column: 21, scope: !9620)
!9625 = !DILocation(line: 1076, column: 13, scope: !9617)
!9626 = !DILocation(line: 1075, column: 53, scope: !9617)
!9627 = !DILocation(line: 1075, column: 7, scope: !9617)
!9628 = distinct !{!9628, !9618, !9629}
!9629 = !DILocation(line: 1080, column: 11, scope: !9614)
!9630 = !DILocation(line: 1082, column: 11, scope: !9597)
!9631 = !DILocation(line: 1083, column: 9, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9597, file: !409, line: 1082, column: 11)
!9633 = !DILocation(line: 1084, column: 5, scope: !9598)
!9634 = !DILocation(line: 1069, column: 3, scope: !9598)
!9635 = distinct !{!9635, !9611, !9636}
!9636 = !DILocation(line: 1084, column: 5, scope: !9599)
!9637 = !DILocation(line: 1085, column: 10, scope: !9589)
!9638 = !DILocation(line: 1086, column: 1, scope: !9589)
!9639 = !DILocation(line: 1085, column: 3, scope: !9589)
!9640 = distinct !DISubprogram(name: "VEC_edge_heap_safe_push", scope: !155, file: !155, line: 152, type: !9641, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9643)
!9641 = !DISubroutineType(types: !9642)
!9642 = !{!2345, !2332, !1196}
!9643 = !{!9644, !9645}
!9644 = !DILocalVariable(name: "vec_", arg: 1, scope: !9640, file: !155, line: 152, type: !2332)
!9645 = !DILocalVariable(name: "obj_", arg: 2, scope: !9640, file: !155, line: 152, type: !1196)
!9646 = !DILocation(line: 0, scope: !9640)
!9647 = !DILocation(line: 152, column: 1, scope: !9640)
!9648 = distinct !DISubprogram(name: "VEC_edge_base_ordered_remove", scope: !155, file: !155, line: 150, type: !9649, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9652)
!9649 = !DISubroutineType(types: !9650)
!9650 = !{!1196, !9651, !7}
!9651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!9652 = !{!9653, !9654, !9655, !9656}
!9653 = !DILocalVariable(name: "vec_", arg: 1, scope: !9648, file: !155, line: 150, type: !9651)
!9654 = !DILocalVariable(name: "ix_", arg: 2, scope: !9648, file: !155, line: 150, type: !7)
!9655 = !DILocalVariable(name: "slot_", scope: !9648, file: !155, line: 150, type: !2345)
!9656 = !DILocalVariable(name: "obj_", scope: !9648, file: !155, line: 150, type: !1196)
!9657 = !DILocation(line: 0, scope: !9648)
!9658 = !DILocation(line: 150, column: 1, scope: !9648)
!9659 = distinct !DISubprogram(name: "VEC_edge_heap_reserve", scope: !155, file: !155, line: 152, type: !9660, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9662)
!9660 = !DISubroutineType(types: !9661)
!9661 = !{!638, !2332, !638}
!9662 = !{!9663, !9664, !9665}
!9663 = !DILocalVariable(name: "vec_", arg: 1, scope: !9659, file: !155, line: 152, type: !2332)
!9664 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9659, file: !155, line: 152, type: !638)
!9665 = !DILocalVariable(name: "extend", scope: !9659, file: !155, line: 152, type: !638)
!9666 = !DILocation(line: 0, scope: !9659)
!9667 = !DILocation(line: 152, column: 1, scope: !9659)
!9668 = !DILocation(line: 152, column: 1, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9659, file: !155, line: 152, column: 1)
!9670 = distinct !DISubprogram(name: "VEC_edge_base_quick_push", scope: !155, file: !155, line: 150, type: !9671, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9673)
!9671 = !DISubroutineType(types: !9672)
!9672 = !{!2345, !9651, !1196}
!9673 = !{!9674, !9675, !9676}
!9674 = !DILocalVariable(name: "vec_", arg: 1, scope: !9670, file: !155, line: 150, type: !9651)
!9675 = !DILocalVariable(name: "obj_", arg: 2, scope: !9670, file: !155, line: 150, type: !1196)
!9676 = !DILocalVariable(name: "slot_", scope: !9670, file: !155, line: 150, type: !2345)
!9677 = !DILocation(line: 0, scope: !9670)
!9678 = !DILocation(line: 150, column: 1, scope: !9670)
!9679 = distinct !DISubprogram(name: "VEC_edge_base_space", scope: !155, file: !155, line: 150, type: !9680, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9682)
!9680 = !DISubroutineType(types: !9681)
!9681 = !{!638, !9651, !638}
!9682 = !{!9683, !9684}
!9683 = !DILocalVariable(name: "vec_", arg: 1, scope: !9679, file: !155, line: 150, type: !9651)
!9684 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9679, file: !155, line: 150, type: !638)
!9685 = !DILocation(line: 0, scope: !9679)
!9686 = !DILocation(line: 150, column: 1, scope: !9679)
!9687 = distinct !DISubprogram(name: "state_alloc", scope: !3, file: !3, line: 525, type: !3626, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!9688 = !DILocation(line: 527, column: 19, scope: !9687)
!9689 = !DILocation(line: 527, column: 10, scope: !9687)
!9690 = !DILocation(line: 527, column: 3, scope: !9687)
!9691 = distinct !DISubprogram(name: "alloc_deps_context", scope: !3, file: !3, line: 443, type: !3636, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!9692 = !DILocation(line: 445, column: 10, scope: !9691)
!9693 = !DILocation(line: 445, column: 3, scope: !9691)
!9694 = distinct !DISubprogram(name: "state_free", scope: !3, file: !3, line: 543, type: !9695, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9697)
!9695 = !DISubroutineType(types: !9696)
!9696 = !{null, !1998}
!9697 = !{!9698}
!9698 = !DILocalVariable(name: "state", arg: 1, scope: !9694, file: !3, line: 543, type: !1998)
!9699 = !DILocation(line: 0, scope: !9694)
!9700 = !DILocation(line: 545, column: 3, scope: !9694)
!9701 = !DILocation(line: 546, column: 1, scope: !9694)
!9702 = distinct !DISubprogram(name: "reset_deps_context", scope: !3, file: !3, line: 485, type: !9386, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9703)
!9703 = !{!9704}
!9704 = !DILocalVariable(name: "dc", arg: 1, scope: !9702, file: !3, line: 485, type: !1900)
!9705 = !DILocation(line: 0, scope: !9702)
!9706 = !DILocation(line: 487, column: 3, scope: !9702)
!9707 = !DILocation(line: 488, column: 3, scope: !9702)
!9708 = !DILocation(line: 489, column: 1, scope: !9702)
!9709 = distinct !DISubprogram(name: "state_copy", scope: !3, file: !3, line: 550, type: !9710, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9712)
!9710 = !DISubroutineType(types: !9711)
!9711 = !{null, !1998, !1998}
!9712 = !{!9713, !9714}
!9713 = !DILocalVariable(name: "to", arg: 1, scope: !9709, file: !3, line: 550, type: !1998)
!9714 = !DILocalVariable(name: "from", arg: 2, scope: !9709, file: !3, line: 550, type: !1998)
!9715 = !DILocation(line: 0, scope: !9709)
!9716 = !DILocation(line: 552, column: 21, scope: !9709)
!9717 = !DILocation(line: 552, column: 3, scope: !9709)
!9718 = !DILocation(line: 553, column: 1, scope: !9709)
!9719 = distinct !DISubprogram(name: "copy_deps_context", scope: !3, file: !3, line: 435, type: !9720, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9722)
!9720 = !DISubroutineType(types: !9721)
!9721 = !{null, !1900, !1900}
!9722 = !{!9723, !9724}
!9723 = !DILocalVariable(name: "to", arg: 1, scope: !9719, file: !3, line: 435, type: !1900)
!9724 = !DILocalVariable(name: "from", arg: 2, scope: !9719, file: !3, line: 435, type: !1900)
!9725 = !DILocation(line: 0, scope: !9719)
!9726 = !DILocation(line: 437, column: 3, scope: !9719)
!9727 = !DILocation(line: 438, column: 3, scope: !9719)
!9728 = !DILocation(line: 439, column: 1, scope: !9719)
!9729 = distinct !DISubprogram(name: "copy_target_context", scope: !3, file: !3, line: 397, type: !9730, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9732)
!9730 = !DISubroutineType(types: !9731)
!9731 = !{null, !2005, !2005}
!9732 = !{!9733, !9734, !9735}
!9733 = !DILocalVariable(name: "to", arg: 1, scope: !9729, file: !3, line: 397, type: !2005)
!9734 = !DILocalVariable(name: "from", arg: 2, scope: !9729, file: !3, line: 397, type: !2005)
!9735 = !DILocalVariable(name: "tmp", scope: !9729, file: !3, line: 399, type: !2005)
!9736 = !DILocation(line: 0, scope: !9729)
!9737 = !DILocation(line: 399, column: 14, scope: !9729)
!9738 = !DILocation(line: 401, column: 3, scope: !9729)
!9739 = !DILocation(line: 402, column: 3, scope: !9729)
!9740 = !DILocation(line: 404, column: 3, scope: !9729)
!9741 = !DILocation(line: 405, column: 3, scope: !9729)
!9742 = !DILocation(line: 406, column: 1, scope: !9729)
!9743 = distinct !DISubprogram(name: "VEC_expr_history_def_base_length", scope: !409, file: !409, line: 101, type: !9744, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9748)
!9744 = !DISubroutineType(types: !9745)
!9745 = !{!7, !9746}
!9746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9747, size: 64)
!9747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1973)
!9748 = !{!9749}
!9749 = !DILocalVariable(name: "vec_", arg: 1, scope: !9743, file: !409, line: 101, type: !9746)
!9750 = !DILocation(line: 0, scope: !9743)
!9751 = !DILocation(line: 101, column: 1, scope: !9743)
!9752 = distinct !DISubprogram(name: "VEC_expr_history_def_base_address", scope: !409, file: !409, line: 101, type: !9753, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9755)
!9753 = !DISubroutineType(types: !9754)
!9754 = !{!4708, !4919}
!9755 = !{!9756}
!9756 = !DILocalVariable(name: "vec_", arg: 1, scope: !9752, file: !409, line: 101, type: !4919)
!9757 = !DILocation(line: 0, scope: !9752)
!9758 = !DILocation(line: 101, column: 1, scope: !9752)
!9759 = distinct !DISubprogram(name: "VEC_expr_history_def_heap_reserve", scope: !409, file: !409, line: 102, type: !9760, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9762)
!9760 = !DISubroutineType(types: !9761)
!9761 = !{!638, !4866, !638}
!9762 = !{!9763, !9764, !9765}
!9763 = !DILocalVariable(name: "vec_", arg: 1, scope: !9759, file: !409, line: 102, type: !4866)
!9764 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9759, file: !409, line: 102, type: !638)
!9765 = !DILocalVariable(name: "extend", scope: !9759, file: !409, line: 102, type: !638)
!9766 = !DILocation(line: 0, scope: !9759)
!9767 = !DILocation(line: 102, column: 1, scope: !9759)
!9768 = !DILocation(line: 102, column: 1, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9759, file: !409, line: 102, column: 1)
!9770 = distinct !DISubprogram(name: "VEC_expr_history_def_base_quick_insert", scope: !409, file: !409, line: 101, type: !9771, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9773)
!9771 = !DISubroutineType(types: !9772)
!9772 = !{!4708, !4919, !7, !4928}
!9773 = !{!9774, !9775, !9776, !9777}
!9774 = !DILocalVariable(name: "vec_", arg: 1, scope: !9770, file: !409, line: 101, type: !4919)
!9775 = !DILocalVariable(name: "ix_", arg: 2, scope: !9770, file: !409, line: 101, type: !7)
!9776 = !DILocalVariable(name: "obj_", arg: 3, scope: !9770, file: !409, line: 101, type: !4928)
!9777 = !DILocalVariable(name: "slot_", scope: !9770, file: !409, line: 101, type: !4708)
!9778 = !DILocation(line: 0, scope: !9770)
!9779 = !DILocation(line: 101, column: 1, scope: !9770)
!9780 = !DILocation(line: 101, column: 1, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9770, file: !409, line: 101, column: 1)
!9782 = distinct !DISubprogram(name: "VEC_expr_history_def_base_space", scope: !409, file: !409, line: 101, type: !9783, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9785)
!9783 = !DISubroutineType(types: !9784)
!9784 = !{!638, !4919, !638}
!9785 = !{!9786, !9787}
!9786 = !DILocalVariable(name: "vec_", arg: 1, scope: !9782, file: !409, line: 101, type: !4919)
!9787 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9782, file: !409, line: 101, type: !638)
!9788 = !DILocation(line: 0, scope: !9782)
!9789 = !DILocation(line: 101, column: 1, scope: !9782)
!9790 = distinct !DISubprogram(name: "VEC_expr_history_def_heap_free", scope: !409, file: !409, line: 102, type: !5389, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9791)
!9791 = !{!9792}
!9792 = !DILocalVariable(name: "vec_", arg: 1, scope: !9790, file: !409, line: 102, type: !4866)
!9793 = !DILocation(line: 0, scope: !9790)
!9794 = !DILocation(line: 102, column: 1, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9790, file: !409, line: 102, column: 1)
!9796 = !DILocation(line: 102, column: 1, scope: !9790)
!9797 = distinct !DISubprogram(name: "_list_iter_remove_nofree", scope: !409, file: !409, line: 454, type: !5683, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9798)
!9798 = !{!9799}
!9799 = !DILocalVariable(name: "ip", arg: 1, scope: !9797, file: !409, line: 454, type: !5564)
!9800 = !DILocation(line: 0, scope: !9797)
!9801 = !DILocation(line: 456, column: 3, scope: !9797)
!9802 = !DILocation(line: 457, column: 28, scope: !9797)
!9803 = !DILocation(line: 457, column: 3, scope: !9797)
!9804 = !DILocation(line: 458, column: 17, scope: !9797)
!9805 = !DILocation(line: 459, column: 1, scope: !9797)
!9806 = distinct !DISubprogram(name: "_list_remove_nofree", scope: !409, file: !409, line: 391, type: !3014, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9807)
!9807 = !{!9808, !9809}
!9808 = !DILocalVariable(name: "lp", arg: 1, scope: !9806, file: !409, line: 391, type: !3016)
!9809 = !DILocalVariable(name: "n", scope: !9806, file: !409, line: 393, type: !1879)
!9810 = !DILocation(line: 0, scope: !9806)
!9811 = !DILocation(line: 393, column: 15, scope: !9806)
!9812 = !DILocation(line: 395, column: 9, scope: !9806)
!9813 = !DILocation(line: 395, column: 7, scope: !9806)
!9814 = !DILocation(line: 396, column: 1, scope: !9806)
!9815 = distinct !DISubprogram(name: "invalidate_av_set", scope: !3, file: !3, line: 4153, type: !2267, scopeLine: 4154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9816)
!9816 = !{!9817}
!9817 = !DILocalVariable(name: "bb", arg: 1, scope: !9815, file: !3, line: 4153, type: !1179)
!9818 = !DILocation(line: 0, scope: !9815)
!9819 = !DILocation(line: 4155, column: 3, scope: !9815)
!9820 = !DILocation(line: 4158, column: 3, scope: !9815)
!9821 = !DILocation(line: 4158, column: 20, scope: !9815)
!9822 = !DILocation(line: 4159, column: 1, scope: !9815)
!9823 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_base_index", scope: !398, file: !398, line: 825, type: !9824, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9877)
!9824 = !DISubroutineType(types: !9825)
!9825 = !{!9826, !9869, !7}
!9826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9827, size: 64)
!9827 = !DIDerivedType(tag: DW_TAG_typedef, name: "haifa_insn_data_def", file: !398, line: 822, baseType: !9828)
!9828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_haifa_insn_data", file: !398, line: 751, size: 768, elements: !9829)
!9829 = !{!9830, !9831, !9832, !9833, !9834, !9835, !9836, !9837, !9838, !9839, !9840, !9841, !9842, !9843, !9844, !9852, !9853, !9861, !9868}
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !9828, file: !398, line: 758, baseType: !638, size: 32)
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !9828, file: !398, line: 761, baseType: !638, size: 32, offset: 32)
!9832 = !DIDerivedType(tag: DW_TAG_member, name: "tick", scope: !9828, file: !398, line: 765, baseType: !638, size: 32, offset: 64)
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "inter_tick", scope: !9828, file: !398, line: 769, baseType: !638, size: 32, offset: 96)
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !9828, file: !398, line: 772, baseType: !638, size: 32, offset: 128)
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !9828, file: !398, line: 774, baseType: !1849, size: 16, offset: 160)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "fed_by_spec_load", scope: !9828, file: !398, line: 778, baseType: !7, size: 1, offset: 176, flags: DIFlagBitField, extraData: i64 176)
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "is_load_insn", scope: !9828, file: !398, line: 779, baseType: !7, size: 1, offset: 177, flags: DIFlagBitField, extraData: i64 176)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "priority_status", scope: !9828, file: !398, line: 784, baseType: !1611, size: 8, offset: 184)
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "todo_spec", scope: !9828, file: !398, line: 787, baseType: !1844, size: 32, offset: 192)
!9840 = !DIDerivedType(tag: DW_TAG_member, name: "done_spec", scope: !9828, file: !398, line: 790, baseType: !1844, size: 32, offset: 224)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "check_spec", scope: !9828, file: !398, line: 793, baseType: !1844, size: 32, offset: 256)
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_block", scope: !9828, file: !398, line: 796, baseType: !1179, size: 64, offset: 320)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pat", scope: !9828, file: !398, line: 799, baseType: !645, size: 64, offset: 384)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure", scope: !9828, file: !398, line: 804, baseType: !9845, size: 64, offset: 448)
!9845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9846, size: 64)
!9846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_pressure_data", file: !398, line: 711, size: 32, elements: !9847)
!9847 = !{!9848, !9849, !9850, !9851}
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "clobber_increase", scope: !9846, file: !398, line: 714, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!9849 = !DIDerivedType(tag: DW_TAG_member, name: "set_increase", scope: !9846, file: !398, line: 717, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "unused_set_increase", scope: !9846, file: !398, line: 720, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!9851 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9846, file: !398, line: 722, baseType: !638, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!9852 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg_pressure", scope: !9828, file: !398, line: 810, baseType: !1839, size: 64, offset: 512)
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "reg_use_list", scope: !9828, file: !398, line: 813, baseType: !9854, size: 64, offset: 576)
!9854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9855, size: 64)
!9855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_use_data", file: !398, line: 726, size: 256, elements: !9856)
!9856 = !{!9857, !9858, !9859, !9860}
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !9855, file: !398, line: 729, baseType: !638, size: 32)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !9855, file: !398, line: 731, baseType: !645, size: 64, offset: 64)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "next_regno_use", scope: !9855, file: !398, line: 733, baseType: !9854, size: 64, offset: 128)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "next_insn_use", scope: !9855, file: !398, line: 735, baseType: !9854, size: 64, offset: 192)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "reg_set_list", scope: !9828, file: !398, line: 816, baseType: !9862, size: 64, offset: 640)
!9862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9863, size: 64)
!9863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_set_data", file: !398, line: 741, size: 192, elements: !9864)
!9864 = !{!9865, !9866, !9867}
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !9863, file: !398, line: 744, baseType: !638, size: 32)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !9863, file: !398, line: 746, baseType: !645, size: 64, offset: 64)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "next_insn_set", scope: !9863, file: !398, line: 748, baseType: !9862, size: 64, offset: 128)
!9868 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure_excess_cost_change", scope: !9828, file: !398, line: 819, baseType: !638, size: 32, offset: 704)
!9869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9870, size: 64)
!9870 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_insn_data_def_base", file: !398, line: 825, baseType: !9871)
!9871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_insn_data_def_base", file: !398, line: 825, size: 832, elements: !9872)
!9872 = !{!9873, !9874, !9875}
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !9871, file: !398, line: 825, baseType: !7, size: 32)
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !9871, file: !398, line: 825, baseType: !7, size: 32, offset: 32)
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !9871, file: !398, line: 825, baseType: !9876, size: 768, offset: 64)
!9876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9827, size: 768, elements: !680)
!9877 = !{!9878, !9879}
!9878 = !DILocalVariable(name: "vec_", arg: 1, scope: !9823, file: !398, line: 825, type: !9869)
!9879 = !DILocalVariable(name: "ix_", arg: 2, scope: !9823, file: !398, line: 825, type: !7)
!9880 = !DILocation(line: 0, scope: !9823)
!9881 = !DILocation(line: 825, column: 1, scope: !9823)
!9882 = distinct !DISubprogram(name: "init_first_time_insn_data", scope: !3, file: !3, line: 2752, type: !3245, scopeLine: 2753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9883)
!9883 = !{!9884}
!9884 = !DILocalVariable(name: "insn", arg: 1, scope: !9882, file: !3, line: 2752, type: !1892)
!9885 = !DILocation(line: 0, scope: !9882)
!9886 = !DILocation(line: 2756, column: 3, scope: !9882)
!9887 = !DILocation(line: 2759, column: 22, scope: !9882)
!9888 = !DILocation(line: 2759, column: 3, scope: !9882)
!9889 = !DILocation(line: 2759, column: 20, scope: !9882)
!9890 = !DILocation(line: 2760, column: 3, scope: !9882)
!9891 = !DILocation(line: 2760, column: 28, scope: !9882)
!9892 = !DILocation(line: 2762, column: 8, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9882, file: !3, line: 2762, column: 7)
!9894 = !DILocation(line: 2762, column: 7, scope: !9882)
!9895 = !DILocation(line: 2764, column: 35, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9893, file: !3, line: 2763, column: 5)
!9897 = !DILocation(line: 2764, column: 7, scope: !9896)
!9898 = !DILocation(line: 2764, column: 33, scope: !9896)
!9899 = !DILocation(line: 2765, column: 32, scope: !9896)
!9900 = !DILocation(line: 2765, column: 7, scope: !9896)
!9901 = !DILocation(line: 2765, column: 30, scope: !9896)
!9902 = !DILocation(line: 2767, column: 11, scope: !9896)
!9903 = !DILocation(line: 2766, column: 7, scope: !9896)
!9904 = !DILocation(line: 2767, column: 9, scope: !9896)
!9905 = !DILocation(line: 2769, column: 19, scope: !9896)
!9906 = !DILocation(line: 2769, column: 7, scope: !9896)
!9907 = !DILocation(line: 2770, column: 5, scope: !9896)
!9908 = !DILocation(line: 2771, column: 1, scope: !9882)
!9909 = distinct !DISubprogram(name: "hash_transformed_insns", scope: !3, file: !3, line: 2721, type: !1099, scopeLine: 2722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9910)
!9910 = !{!9911}
!9911 = !DILocalVariable(name: "p", arg: 1, scope: !9909, file: !3, line: 2721, type: !1102)
!9912 = !DILocation(line: 0, scope: !9909)
!9913 = !DILocation(line: 2723, column: 10, scope: !9909)
!9914 = !DILocation(line: 2723, column: 3, scope: !9909)
!9915 = distinct !DISubprogram(name: "eq_transformed_insns", scope: !3, file: !3, line: 2728, type: !1107, scopeLine: 2729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9916)
!9916 = !{!9917, !9918, !9919, !9920}
!9917 = !DILocalVariable(name: "p", arg: 1, scope: !9915, file: !3, line: 2728, type: !1102)
!9918 = !DILocalVariable(name: "q", arg: 2, scope: !9915, file: !3, line: 2728, type: !1102)
!9919 = !DILocalVariable(name: "i1", scope: !9915, file: !3, line: 2730, type: !645)
!9920 = !DILocalVariable(name: "i2", scope: !9915, file: !3, line: 2731, type: !645)
!9921 = !DILocation(line: 0, scope: !9915)
!9922 = !DILocation(line: 2730, column: 12, scope: !9915)
!9923 = !DILocation(line: 2731, column: 12, scope: !9915)
!9924 = !DILocation(line: 2733, column: 7, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 2733, column: 7)
!9926 = !DILocation(line: 2733, column: 24, scope: !9925)
!9927 = !DILocation(line: 2733, column: 21, scope: !9925)
!9928 = !DILocation(line: 2733, column: 7, scope: !9915)
!9929 = !DILocation(line: 2735, column: 23, scope: !9915)
!9930 = !DILocation(line: 2735, column: 37, scope: !9915)
!9931 = !DILocation(line: 2735, column: 10, scope: !9915)
!9932 = !DILocation(line: 2735, column: 3, scope: !9915)
!9933 = !DILocation(line: 2736, column: 1, scope: !9915)
!9934 = distinct !DISubprogram(name: "free_transformed_insns", scope: !3, file: !3, line: 2740, type: !1112, scopeLine: 2741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9935)
!9935 = !{!9936, !9937}
!9936 = !DILocalVariable(name: "p", arg: 1, scope: !9934, file: !3, line: 2740, type: !642)
!9937 = !DILocalVariable(name: "pti", scope: !9934, file: !3, line: 2742, type: !2039)
!9938 = !DILocation(line: 0, scope: !9934)
!9939 = !DILocation(line: 2744, column: 22, scope: !9934)
!9940 = !DILocation(line: 2744, column: 3, scope: !9934)
!9941 = !DILocation(line: 2745, column: 22, scope: !9934)
!9942 = !DILocation(line: 2745, column: 3, scope: !9934)
!9943 = !DILocation(line: 2746, column: 3, scope: !9934)
!9944 = !DILocation(line: 2747, column: 1, scope: !9934)
!9945 = distinct !DISubprogram(name: "free_first_time_insn_data", scope: !3, file: !3, line: 2801, type: !3245, scopeLine: 2802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9946)
!9946 = !{!9947}
!9947 = !DILocalVariable(name: "insn", arg: 1, scope: !9945, file: !3, line: 2801, type: !1892)
!9948 = !DILocation(line: 0, scope: !9945)
!9949 = !DILocation(line: 2803, column: 3, scope: !9945)
!9950 = !DILocation(line: 2805, column: 3, scope: !9945)
!9951 = !DILocation(line: 2806, column: 26, scope: !9945)
!9952 = !DILocation(line: 2806, column: 3, scope: !9945)
!9953 = !DILocation(line: 2807, column: 3, scope: !9945)
!9954 = !DILocation(line: 2807, column: 20, scope: !9945)
!9955 = !DILocation(line: 2808, column: 3, scope: !9945)
!9956 = !DILocation(line: 2808, column: 28, scope: !9945)
!9957 = !DILocation(line: 2809, column: 1, scope: !9945)
!9958 = distinct !DISubprogram(name: "has_dependence_start_insn", scope: !3, file: !3, line: 3004, type: !3245, scopeLine: 3005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9959)
!9959 = !{!9960}
!9960 = !DILocalVariable(name: "insn", arg: 1, scope: !9958, file: !3, line: 3004, type: !1892)
!9961 = !DILocation(line: 0, scope: !9958)
!9962 = !DILocation(line: 3006, column: 3, scope: !9958)
!9963 = !DILocation(line: 3008, column: 29, scope: !9958)
!9964 = !DILocation(line: 3009, column: 1, scope: !9958)
!9965 = distinct !DISubprogram(name: "has_dependence_finish_insn", scope: !3, file: !3, line: 3013, type: !2396, scopeLine: 3014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!9966 = !DILocation(line: 3015, column: 3, scope: !9965)
!9967 = !DILocation(line: 3017, column: 29, scope: !9965)
!9968 = !DILocation(line: 3018, column: 1, scope: !9965)
!9969 = distinct !DISubprogram(name: "has_dependence_start_lhs", scope: !3, file: !3, line: 3022, type: !2392, scopeLine: 3023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9970)
!9970 = !{!9971}
!9971 = !DILocalVariable(name: "lhs", arg: 1, scope: !9969, file: !3, line: 3022, type: !645)
!9972 = !DILocation(line: 0, scope: !9969)
!9973 = !DILocation(line: 3024, column: 3, scope: !9969)
!9974 = !DILocation(line: 3026, column: 7, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 3026, column: 7)
!9976 = !DILocation(line: 3026, column: 43, scope: !9975)
!9977 = !DILocation(line: 3026, column: 7, scope: !9969)
!9978 = !DILocation(line: 3027, column: 31, scope: !9975)
!9979 = !DILocation(line: 3027, column: 5, scope: !9975)
!9980 = !DILocation(line: 3028, column: 1, scope: !9969)
!9981 = distinct !DISubprogram(name: "has_dependence_finish_lhs", scope: !3, file: !3, line: 3032, type: !2396, scopeLine: 3033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!9982 = !DILocation(line: 3034, column: 29, scope: !9981)
!9983 = !DILocation(line: 3035, column: 1, scope: !9981)
!9984 = distinct !DISubprogram(name: "has_dependence_start_rhs", scope: !3, file: !3, line: 3039, type: !2392, scopeLine: 3040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9985)
!9985 = !{!9986}
!9986 = !DILocalVariable(name: "rhs", arg: 1, scope: !9984, file: !3, line: 3039, type: !645)
!9987 = !DILocation(line: 0, scope: !9984)
!9988 = !DILocation(line: 3041, column: 3, scope: !9984)
!9989 = !DILocation(line: 3043, column: 7, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 3043, column: 7)
!9991 = !DILocation(line: 3043, column: 43, scope: !9990)
!9992 = !DILocation(line: 3043, column: 7, scope: !9984)
!9993 = !DILocation(line: 3044, column: 31, scope: !9990)
!9994 = !DILocation(line: 3044, column: 5, scope: !9990)
!9995 = !DILocation(line: 3045, column: 1, scope: !9984)
!9996 = distinct !DISubprogram(name: "has_dependence_finish_rhs", scope: !3, file: !3, line: 3049, type: !2396, scopeLine: 3050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!9997 = !DILocation(line: 3051, column: 3, scope: !9996)
!9998 = !DILocation(line: 3054, column: 29, scope: !9996)
!9999 = !DILocation(line: 3055, column: 1, scope: !9996)
!10000 = distinct !DISubprogram(name: "has_dependence_note_reg_set", scope: !3, file: !3, line: 3059, type: !2404, scopeLine: 3060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10001)
!10001 = !{!10002, !10003, !10004}
!10002 = !DILocalVariable(name: "regno", arg: 1, scope: !10000, file: !3, line: 3059, type: !638)
!10003 = !DILocalVariable(name: "reg_last", scope: !10000, file: !3, line: 3061, type: !1919)
!10004 = !DILocalVariable(name: "dsp", scope: !10005, file: !3, line: 3067, type: !6479)
!10005 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 3066, column: 5)
!10006 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 3063, column: 7)
!10007 = !DILocation(line: 0, scope: !10000)
!10008 = !DILocation(line: 3061, column: 52, scope: !10000)
!10009 = !DILocation(line: 3061, column: 56, scope: !10000)
!10010 = !DILocation(line: 3061, column: 32, scope: !10000)
!10011 = !DILocation(line: 3063, column: 60, scope: !10006)
!10012 = !DILocation(line: 3064, column: 12, scope: !10006)
!10013 = !DILocation(line: 3063, column: 8, scope: !10006)
!10014 = !DILocation(line: 3063, column: 7, scope: !10000)
!10015 = !DILocation(line: 3067, column: 70, scope: !10005)
!10016 = !DILocation(line: 3067, column: 20, scope: !10005)
!10017 = !DILocation(line: 0, scope: !10005)
!10018 = !DILocation(line: 3069, column: 21, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 3069, column: 11)
!10020 = !DILocation(line: 3069, column: 26, scope: !10019)
!10021 = !DILocation(line: 3070, column: 4, scope: !10019)
!10022 = !DILocation(line: 3070, column: 17, scope: !10019)
!10023 = !DILocation(line: 3070, column: 26, scope: !10019)
!10024 = !DILocation(line: 3069, column: 11, scope: !10005)
!10025 = !DILocation(line: 3071, column: 10, scope: !10019)
!10026 = !DILocation(line: 3071, column: 15, scope: !10019)
!10027 = !DILocation(line: 3071, column: 31, scope: !10019)
!10028 = !DILocation(line: 3071, column: 7, scope: !10019)
!10029 = !DILocation(line: 3071, column: 2, scope: !10019)
!10030 = !DILocation(line: 3073, column: 21, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 3073, column: 11)
!10032 = !DILocation(line: 3073, column: 11, scope: !10031)
!10033 = !DILocation(line: 3073, column: 11, scope: !10005)
!10034 = !DILocation(line: 3074, column: 10, scope: !10031)
!10035 = !DILocation(line: 3074, column: 15, scope: !10031)
!10036 = !DILocation(line: 3074, column: 31, scope: !10031)
!10037 = !DILocation(line: 3074, column: 7, scope: !10031)
!10038 = !DILocation(line: 3074, column: 2, scope: !10031)
!10039 = !DILocation(line: 3076, column: 1, scope: !10000)
!10040 = distinct !DISubprogram(name: "has_dependence_note_reg_clobber", scope: !3, file: !3, line: 3080, type: !2404, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10041)
!10041 = !{!10042, !10043, !10044}
!10042 = !DILocalVariable(name: "regno", arg: 1, scope: !10040, file: !3, line: 3080, type: !638)
!10043 = !DILocalVariable(name: "reg_last", scope: !10040, file: !3, line: 3082, type: !1919)
!10044 = !DILocalVariable(name: "dsp", scope: !10045, file: !3, line: 3088, type: !6479)
!10045 = distinct !DILexicalBlock(scope: !10046, file: !3, line: 3087, column: 5)
!10046 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3084, column: 7)
!10047 = !DILocation(line: 0, scope: !10040)
!10048 = !DILocation(line: 3082, column: 52, scope: !10040)
!10049 = !DILocation(line: 3082, column: 56, scope: !10040)
!10050 = !DILocation(line: 3082, column: 32, scope: !10040)
!10051 = !DILocation(line: 3084, column: 60, scope: !10046)
!10052 = !DILocation(line: 3085, column: 12, scope: !10046)
!10053 = !DILocation(line: 3084, column: 8, scope: !10046)
!10054 = !DILocation(line: 3084, column: 7, scope: !10040)
!10055 = !DILocation(line: 3088, column: 70, scope: !10045)
!10056 = !DILocation(line: 3088, column: 20, scope: !10045)
!10057 = !DILocation(line: 0, scope: !10045)
!10058 = !DILocation(line: 3090, column: 21, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 3090, column: 11)
!10060 = !DILocation(line: 3090, column: 11, scope: !10059)
!10061 = !DILocation(line: 3090, column: 11, scope: !10045)
!10062 = !DILocation(line: 3091, column: 10, scope: !10059)
!10063 = !DILocation(line: 3091, column: 15, scope: !10059)
!10064 = !DILocation(line: 3091, column: 31, scope: !10059)
!10065 = !DILocation(line: 3091, column: 7, scope: !10059)
!10066 = !DILocation(line: 3091, column: 2, scope: !10059)
!10067 = !DILocation(line: 3093, column: 21, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 3093, column: 11)
!10069 = !DILocation(line: 3093, column: 11, scope: !10068)
!10070 = !DILocation(line: 3093, column: 11, scope: !10045)
!10071 = !DILocation(line: 3094, column: 10, scope: !10068)
!10072 = !DILocation(line: 3094, column: 15, scope: !10068)
!10073 = !DILocation(line: 3094, column: 31, scope: !10068)
!10074 = !DILocation(line: 3094, column: 7, scope: !10068)
!10075 = !DILocation(line: 3094, column: 2, scope: !10068)
!10076 = !DILocation(line: 3096, column: 1, scope: !10040)
!10077 = distinct !DISubprogram(name: "has_dependence_note_reg_use", scope: !3, file: !3, line: 3100, type: !2404, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10078)
!10078 = !{!10079, !10080, !10081, !10084}
!10079 = !DILocalVariable(name: "regno", arg: 1, scope: !10077, file: !3, line: 3100, type: !638)
!10080 = !DILocalVariable(name: "reg_last", scope: !10077, file: !3, line: 3102, type: !1919)
!10081 = !DILocalVariable(name: "dsp", scope: !10082, file: !3, line: 3108, type: !6479)
!10082 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 3107, column: 5)
!10083 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 3104, column: 7)
!10084 = !DILocalVariable(name: "pro_spec_checked_ds", scope: !10085, file: !3, line: 3119, type: !1844)
!10085 = distinct !DILexicalBlock(scope: !10086, file: !3, line: 3118, column: 2)
!10086 = distinct !DILexicalBlock(scope: !10082, file: !3, line: 3117, column: 11)
!10087 = !DILocation(line: 0, scope: !10077)
!10088 = !DILocation(line: 3102, column: 52, scope: !10077)
!10089 = !DILocation(line: 3102, column: 56, scope: !10077)
!10090 = !DILocation(line: 3102, column: 32, scope: !10077)
!10091 = !DILocation(line: 3104, column: 60, scope: !10083)
!10092 = !DILocation(line: 3105, column: 12, scope: !10083)
!10093 = !DILocation(line: 3104, column: 8, scope: !10083)
!10094 = !DILocation(line: 3104, column: 7, scope: !10077)
!10095 = !DILocation(line: 3108, column: 70, scope: !10082)
!10096 = !DILocation(line: 3108, column: 20, scope: !10082)
!10097 = !DILocation(line: 0, scope: !10082)
!10098 = !DILocation(line: 3110, column: 21, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10082, file: !3, line: 3110, column: 11)
!10100 = !DILocation(line: 3110, column: 11, scope: !10099)
!10101 = !DILocation(line: 3110, column: 11, scope: !10082)
!10102 = !DILocation(line: 3111, column: 10, scope: !10099)
!10103 = !DILocation(line: 3111, column: 15, scope: !10099)
!10104 = !DILocation(line: 3111, column: 31, scope: !10099)
!10105 = !DILocation(line: 3111, column: 7, scope: !10099)
!10106 = !DILocation(line: 3111, column: 2, scope: !10099)
!10107 = !DILocation(line: 3113, column: 21, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10082, file: !3, line: 3113, column: 11)
!10109 = !DILocation(line: 3113, column: 11, scope: !10108)
!10110 = !DILocation(line: 3113, column: 11, scope: !10082)
!10111 = !DILocation(line: 3114, column: 10, scope: !10108)
!10112 = !DILocation(line: 3114, column: 15, scope: !10108)
!10113 = !DILocation(line: 3114, column: 31, scope: !10108)
!10114 = !DILocation(line: 3114, column: 7, scope: !10108)
!10115 = !DILocation(line: 3114, column: 2, scope: !10108)
!10116 = !DILocation(line: 3117, column: 21, scope: !10086)
!10117 = !DILocation(line: 3117, column: 11, scope: !10086)
!10118 = !DILocation(line: 3117, column: 11, scope: !10082)
!10119 = !DILocation(line: 3121, column: 26, scope: !10085)
!10120 = !DILocation(line: 0, scope: !10085)
!10121 = !DILocation(line: 3122, column: 26, scope: !10085)
!10122 = !DILocation(line: 3124, column: 28, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 3124, column: 8)
!10124 = !DILocation(line: 3124, column: 8, scope: !10085)
!10125 = !DILocation(line: 3126, column: 28, scope: !10123)
!10126 = !DILocation(line: 3126, column: 13, scope: !10123)
!10127 = !DILocation(line: 3126, column: 11, scope: !10123)
!10128 = !DILocation(line: 3126, column: 6, scope: !10123)
!10129 = !DILocation(line: 3130, column: 1, scope: !10077)
!10130 = distinct !DISubprogram(name: "has_dependence_note_mem_dep", scope: !3, file: !3, line: 3134, type: !10131, scopeLine: 3138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10133)
!10131 = !DISubroutineType(types: !10132)
!10132 = !{null, !645, !645, !1892, !1844}
!10133 = !{!10134, !10135, !10136, !10137, !10138}
!10134 = !DILocalVariable(name: "mem", arg: 1, scope: !10130, file: !3, line: 3134, type: !645)
!10135 = !DILocalVariable(name: "pending_mem", arg: 2, scope: !10130, file: !3, line: 3135, type: !645)
!10136 = !DILocalVariable(name: "pending_insn", arg: 3, scope: !10130, file: !3, line: 3136, type: !1892)
!10137 = !DILocalVariable(name: "ds", arg: 4, scope: !10130, file: !3, line: 3137, type: !1844)
!10138 = !DILocalVariable(name: "dsp", scope: !10139, file: !3, line: 3142, type: !6479)
!10139 = distinct !DILexicalBlock(scope: !10140, file: !3, line: 3141, column: 5)
!10140 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 3139, column: 7)
!10141 = !DILocation(line: 0, scope: !10130)
!10142 = !DILocation(line: 3139, column: 60, scope: !10140)
!10143 = !DILocation(line: 3140, column: 12, scope: !10140)
!10144 = !DILocation(line: 3139, column: 8, scope: !10140)
!10145 = !DILocation(line: 3139, column: 7, scope: !10130)
!10146 = !DILocation(line: 3142, column: 70, scope: !10139)
!10147 = !DILocation(line: 3142, column: 20, scope: !10139)
!10148 = !DILocation(line: 0, scope: !10139)
!10149 = !DILocation(line: 3144, column: 33, scope: !10139)
!10150 = !DILocation(line: 3144, column: 14, scope: !10139)
!10151 = !DILocation(line: 3144, column: 12, scope: !10139)
!10152 = !DILocation(line: 3145, column: 5, scope: !10139)
!10153 = !DILocation(line: 3146, column: 1, scope: !10130)
!10154 = distinct !DISubprogram(name: "has_dependence_note_dep", scope: !3, file: !3, line: 3150, type: !10155, scopeLine: 3152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10157)
!10155 = !DISubroutineType(types: !10156)
!10156 = !{null, !1892, !1844}
!10157 = !{!10158, !10159, !10160}
!10158 = !DILocalVariable(name: "pro", arg: 1, scope: !10154, file: !3, line: 3150, type: !1892)
!10159 = !DILocalVariable(name: "ds", arg: 2, scope: !10154, file: !3, line: 3151, type: !1844)
!10160 = !DILocalVariable(name: "dsp", scope: !10161, file: !3, line: 3156, type: !6479)
!10161 = distinct !DILexicalBlock(scope: !10162, file: !3, line: 3155, column: 5)
!10162 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 3153, column: 7)
!10163 = !DILocation(line: 0, scope: !10154)
!10164 = !DILocation(line: 3153, column: 60, scope: !10162)
!10165 = !DILocation(line: 3154, column: 12, scope: !10162)
!10166 = !DILocation(line: 3153, column: 8, scope: !10162)
!10167 = !DILocation(line: 3153, column: 7, scope: !10154)
!10168 = !DILocation(line: 3156, column: 70, scope: !10161)
!10169 = !DILocation(line: 3156, column: 20, scope: !10161)
!10170 = !DILocation(line: 0, scope: !10161)
!10171 = !DILocation(line: 3158, column: 33, scope: !10161)
!10172 = !DILocation(line: 3158, column: 14, scope: !10161)
!10173 = !DILocation(line: 3158, column: 12, scope: !10161)
!10174 = !DILocation(line: 3159, column: 5, scope: !10161)
!10175 = !DILocation(line: 3160, column: 1, scope: !10154)
!10176 = distinct !DISubprogram(name: "tick_check_note_mem_dep", scope: !3, file: !3, line: 3365, type: !10131, scopeLine: 3366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10177)
!10177 = !{!10178, !10179, !10180, !10181, !10182}
!10178 = !DILocalVariable(name: "mem1", arg: 1, scope: !10176, file: !3, line: 3365, type: !645)
!10179 = !DILocalVariable(name: "mem2", arg: 2, scope: !10176, file: !3, line: 3365, type: !645)
!10180 = !DILocalVariable(name: "pro", arg: 3, scope: !10176, file: !3, line: 3365, type: !1892)
!10181 = !DILocalVariable(name: "ds", arg: 4, scope: !10176, file: !3, line: 3365, type: !1844)
!10182 = !DILocalVariable(name: "dw", scope: !10176, file: !3, line: 3367, type: !10183)
!10183 = !DIDerivedType(tag: DW_TAG_typedef, name: "dw_t", file: !398, line: 221, baseType: !638)
!10184 = !DILocation(line: 0, scope: !10176)
!10185 = !DILocation(line: 3369, column: 9, scope: !10176)
!10186 = !DILocation(line: 3369, column: 23, scope: !10176)
!10187 = !DILocation(line: 3370, column: 11, scope: !10176)
!10188 = !DILocation(line: 3373, column: 3, scope: !10176)
!10189 = !DILocation(line: 3374, column: 1, scope: !10176)
!10190 = distinct !DISubprogram(name: "tick_check_note_dep", scope: !3, file: !3, line: 3358, type: !10155, scopeLine: 3359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10191)
!10191 = !{!10192, !10193}
!10192 = !DILocalVariable(name: "pro", arg: 1, scope: !10190, file: !3, line: 3358, type: !1892)
!10193 = !DILocalVariable(name: "ds", arg: 2, scope: !10190, file: !3, line: 3358, type: !1844)
!10194 = !DILocation(line: 0, scope: !10190)
!10195 = !DILocation(line: 3360, column: 3, scope: !10190)
!10196 = !DILocation(line: 3361, column: 1, scope: !10190)
!10197 = distinct !DISubprogram(name: "tick_check_dep_with_dw", scope: !3, file: !3, line: 3315, type: !10198, scopeLine: 3316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10200)
!10198 = !DISubroutineType(types: !10199)
!10199 = !{null, !1892, !1844, !10183}
!10200 = !{!10201, !10202, !10203, !10204, !10205, !10206, !10209, !10210, !10213}
!10201 = !DILocalVariable(name: "pro_insn", arg: 1, scope: !10197, file: !3, line: 3315, type: !1892)
!10202 = !DILocalVariable(name: "ds", arg: 2, scope: !10197, file: !3, line: 3315, type: !1844)
!10203 = !DILocalVariable(name: "dw", arg: 3, scope: !10197, file: !3, line: 3315, type: !10183)
!10204 = !DILocalVariable(name: "con_expr", scope: !10197, file: !3, line: 3317, type: !2366)
!10205 = !DILocalVariable(name: "con_insn", scope: !10197, file: !3, line: 3318, type: !1892)
!10206 = !DILocalVariable(name: "dt", scope: !10207, file: !3, line: 3322, type: !601)
!10207 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 3321, column: 5)
!10208 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 3320, column: 7)
!10209 = !DILocalVariable(name: "tick", scope: !10207, file: !3, line: 3323, type: !638)
!10210 = !DILocalVariable(name: "_dep", scope: !10211, file: !3, line: 3341, type: !10212)
!10211 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 3340, column: 7)
!10212 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_def", file: !398, line: 244, baseType: !4531)
!10213 = !DILocalVariable(name: "dep", scope: !10211, file: !3, line: 3341, type: !10214)
!10214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10212, size: 64)
!10215 = !DILocation(line: 0, scope: !10197)
!10216 = !DILocation(line: 3317, column: 37, scope: !10197)
!10217 = !DILocation(line: 3318, column: 21, scope: !10197)
!10218 = !DILocation(line: 3320, column: 16, scope: !10208)
!10219 = !DILocation(line: 3320, column: 7, scope: !10197)
!10220 = !DILocation(line: 3326, column: 5, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 3326, column: 4)
!10222 = !DILocation(line: 3329, column: 4, scope: !10221)
!10223 = !DILocation(line: 3329, column: 8, scope: !10221)
!10224 = !DILocation(line: 3330, column: 10, scope: !10221)
!10225 = !DILocation(line: 3330, column: 8, scope: !10221)
!10226 = !DILocation(line: 3330, column: 39, scope: !10221)
!10227 = !DILocation(line: 3326, column: 4, scope: !10207)
!10228 = !DILocation(line: 3334, column: 12, scope: !10207)
!10229 = !DILocation(line: 0, scope: !10207)
!10230 = !DILocation(line: 3335, column: 14, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 3335, column: 11)
!10232 = !DILocation(line: 3335, column: 11, scope: !10207)
!10233 = !DILocation(line: 3336, column: 41, scope: !10231)
!10234 = !DILocation(line: 3336, column: 9, scope: !10231)
!10235 = !DILocation(line: 3338, column: 7, scope: !10207)
!10236 = !DILocation(line: 3341, column: 2, scope: !10211)
!10237 = !DILocation(line: 0, scope: !10211)
!10238 = !DILocation(line: 3343, column: 2, scope: !10211)
!10239 = !DILocation(line: 3345, column: 9, scope: !10211)
!10240 = !DILocation(line: 3345, column: 39, scope: !10211)
!10241 = !DILocation(line: 3345, column: 37, scope: !10211)
!10242 = !DILocation(line: 3346, column: 7, scope: !10207)
!10243 = !DILocation(line: 3350, column: 34, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 3350, column: 11)
!10245 = !DILocation(line: 3350, column: 16, scope: !10244)
!10246 = !DILocation(line: 3351, column: 4, scope: !10244)
!10247 = !DILocation(line: 3351, column: 11, scope: !10244)
!10248 = !DILocation(line: 3351, column: 47, scope: !10244)
!10249 = !DILocation(line: 3351, column: 27, scope: !10244)
!10250 = !DILocation(line: 3352, column: 24, scope: !10244)
!10251 = !DILocation(line: 3352, column: 2, scope: !10244)
!10252 = !DILocation(line: 3354, column: 1, scope: !10197)
!10253 = distinct !DISubprogram(name: "single_pred_edge", scope: !155, file: !155, line: 653, type: !10254, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10256)
!10254 = !DISubroutineType(types: !10255)
!10255 = !{!1196, !2287}
!10256 = !{!10257}
!10257 = !DILocalVariable(name: "bb", arg: 1, scope: !10253, file: !155, line: 653, type: !2287)
!10258 = !DILocation(line: 0, scope: !10253)
!10259 = !DILocation(line: 655, column: 3, scope: !10253)
!10260 = !DILocation(line: 656, column: 10, scope: !10253)
!10261 = !DILocation(line: 656, column: 3, scope: !10253)
!10262 = distinct !DISubprogram(name: "single_succ_edge", scope: !155, file: !155, line: 643, type: !10254, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10263)
!10263 = !{!10264}
!10264 = !DILocalVariable(name: "bb", arg: 1, scope: !10262, file: !155, line: 643, type: !2287)
!10265 = !DILocation(line: 0, scope: !10262)
!10266 = !DILocation(line: 645, column: 3, scope: !10262)
!10267 = !DILocation(line: 646, column: 10, scope: !10262)
!10268 = !DILocation(line: 646, column: 3, scope: !10262)
!10269 = distinct !DISubprogram(name: "VEC_sel_global_bb_info_def_base_length", scope: !409, file: !409, line: 888, type: !10270, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10274)
!10270 = !DISubroutineType(types: !10271)
!10271 = !{!7, !10272}
!10272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10273, size: 64)
!10273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2045)
!10274 = !{!10275}
!10275 = !DILocalVariable(name: "vec_", arg: 1, scope: !10269, file: !409, line: 888, type: !10272)
!10276 = !DILocation(line: 0, scope: !10269)
!10277 = !DILocation(line: 888, column: 1, scope: !10269)
!10278 = distinct !DISubprogram(name: "VEC_sel_global_bb_info_def_heap_safe_grow", scope: !409, file: !409, line: 889, type: !7219, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10279)
!10279 = !{!10280, !10281}
!10280 = !DILocalVariable(name: "vec_", arg: 1, scope: !10278, file: !409, line: 889, type: !7221)
!10281 = !DILocalVariable(name: "size_", arg: 2, scope: !10278, file: !409, line: 889, type: !638)
!10282 = !DILocation(line: 0, scope: !10278)
!10283 = !DILocation(line: 889, column: 1, scope: !10278)
!10284 = distinct !DISubprogram(name: "VEC_sel_global_bb_info_def_base_address", scope: !409, file: !409, line: 888, type: !10285, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10287)
!10285 = !DISubroutineType(types: !10286)
!10286 = !{!7301, !7302}
!10287 = !{!10288}
!10288 = !DILocalVariable(name: "vec_", arg: 1, scope: !10284, file: !409, line: 888, type: !7302)
!10289 = !DILocation(line: 0, scope: !10284)
!10290 = !DILocation(line: 888, column: 1, scope: !10284)
!10291 = distinct !DISubprogram(name: "VEC_sel_global_bb_info_def_heap_reserve_exact", scope: !409, file: !409, line: 889, type: !10292, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10294)
!10292 = !DISubroutineType(types: !10293)
!10293 = !{!638, !7221, !638}
!10294 = !{!10295, !10296, !10297}
!10295 = !DILocalVariable(name: "vec_", arg: 1, scope: !10291, file: !409, line: 889, type: !7221)
!10296 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10291, file: !409, line: 889, type: !638)
!10297 = !DILocalVariable(name: "extend", scope: !10291, file: !409, line: 889, type: !638)
!10298 = !DILocation(line: 0, scope: !10291)
!10299 = !DILocation(line: 889, column: 1, scope: !10291)
!10300 = !DILocation(line: 889, column: 1, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10291, file: !409, line: 889, column: 1)
!10302 = distinct !DISubprogram(name: "VEC_sel_global_bb_info_def_base_space", scope: !409, file: !409, line: 888, type: !10303, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10305)
!10303 = !DISubroutineType(types: !10304)
!10304 = !{!638, !7302, !638}
!10305 = !{!10306, !10307}
!10306 = !DILocalVariable(name: "vec_", arg: 1, scope: !10302, file: !409, line: 888, type: !7302)
!10307 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10302, file: !409, line: 888, type: !638)
!10308 = !DILocation(line: 0, scope: !10302)
!10309 = !DILocation(line: 888, column: 1, scope: !10302)
!10310 = distinct !DISubprogram(name: "VEC_sel_insn_data_def_base_length", scope: !409, file: !409, line: 762, type: !10311, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10315)
!10311 = !DISubroutineType(types: !10312)
!10312 = !{!7, !10313}
!10313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10314, size: 64)
!10314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2062)
!10315 = !{!10316}
!10316 = !DILocalVariable(name: "vec_", arg: 1, scope: !10310, file: !409, line: 762, type: !10313)
!10317 = !DILocation(line: 0, scope: !10310)
!10318 = !DILocation(line: 762, column: 1, scope: !10310)
!10319 = distinct !DISubprogram(name: "VEC_sel_insn_data_def_base_space", scope: !409, file: !409, line: 762, type: !10320, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10322)
!10320 = !DISubroutineType(types: !10321)
!10321 = !{!638, !4177, !638}
!10322 = !{!10323, !10324}
!10323 = !DILocalVariable(name: "vec_", arg: 1, scope: !10319, file: !409, line: 762, type: !4177)
!10324 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10319, file: !409, line: 762, type: !638)
!10325 = !DILocation(line: 0, scope: !10319)
!10326 = !DILocation(line: 762, column: 1, scope: !10319)
!10327 = distinct !DISubprogram(name: "VEC_sel_insn_data_def_heap_safe_grow_cleared", scope: !409, file: !409, line: 763, type: !10328, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10331)
!10328 = !DISubroutineType(types: !10329)
!10329 = !{null, !10330, !638}
!10330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!10331 = !{!10332, !10333, !10334}
!10332 = !DILocalVariable(name: "vec_", arg: 1, scope: !10327, file: !409, line: 763, type: !10330)
!10333 = !DILocalVariable(name: "size_", arg: 2, scope: !10327, file: !409, line: 763, type: !638)
!10334 = !DILocalVariable(name: "oldsize", scope: !10327, file: !409, line: 763, type: !638)
!10335 = !DILocation(line: 0, scope: !10327)
!10336 = !DILocation(line: 763, column: 1, scope: !10327)
!10337 = distinct !DISubprogram(name: "VEC_sel_insn_data_def_heap_safe_grow", scope: !409, file: !409, line: 763, type: !10328, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10338)
!10338 = !{!10339, !10340}
!10339 = !DILocalVariable(name: "vec_", arg: 1, scope: !10337, file: !409, line: 763, type: !10330)
!10340 = !DILocalVariable(name: "size_", arg: 2, scope: !10337, file: !409, line: 763, type: !638)
!10341 = !DILocation(line: 0, scope: !10337)
!10342 = !DILocation(line: 763, column: 1, scope: !10337)
!10343 = distinct !DISubprogram(name: "VEC_sel_insn_data_def_base_address", scope: !409, file: !409, line: 762, type: !10344, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10346)
!10344 = !DISubroutineType(types: !10345)
!10345 = !{!2456, !4177}
!10346 = !{!10347}
!10347 = !DILocalVariable(name: "vec_", arg: 1, scope: !10343, file: !409, line: 762, type: !4177)
!10348 = !DILocation(line: 0, scope: !10343)
!10349 = !DILocation(line: 762, column: 1, scope: !10343)
!10350 = distinct !DISubprogram(name: "VEC_sel_insn_data_def_heap_reserve_exact", scope: !409, file: !409, line: 763, type: !10351, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10353)
!10351 = !DISubroutineType(types: !10352)
!10352 = !{!638, !10330, !638}
!10353 = !{!10354, !10355, !10356}
!10354 = !DILocalVariable(name: "vec_", arg: 1, scope: !10350, file: !409, line: 763, type: !10330)
!10355 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10350, file: !409, line: 763, type: !638)
!10356 = !DILocalVariable(name: "extend", scope: !10350, file: !409, line: 763, type: !638)
!10357 = !DILocation(line: 0, scope: !10350)
!10358 = !DILocation(line: 763, column: 1, scope: !10350)
!10359 = !DILocation(line: 763, column: 1, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10350, file: !409, line: 763, column: 1)
!10361 = distinct !DISubprogram(name: "VEC_sel_insn_data_def_heap_free", scope: !409, file: !409, line: 763, type: !10362, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10364)
!10362 = !DISubroutineType(types: !10363)
!10363 = !{null, !10330}
!10364 = !{!10365}
!10365 = !DILocalVariable(name: "vec_", arg: 1, scope: !10361, file: !409, line: 763, type: !10330)
!10366 = !DILocation(line: 0, scope: !10361)
!10367 = !DILocation(line: 763, column: 1, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10361, file: !409, line: 763, column: 1)
!10369 = !DILocation(line: 763, column: 1, scope: !10361)
!10370 = distinct !DISubprogram(name: "insn_is_the_only_one_in_bb_p", scope: !3, file: !3, line: 3487, type: !6142, scopeLine: 3488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10371)
!10371 = !{!10372}
!10372 = !DILocalVariable(name: "insn", arg: 1, scope: !10370, file: !3, line: 3487, type: !1892)
!10373 = !DILocation(line: 0, scope: !10370)
!10374 = !DILocation(line: 3489, column: 10, scope: !10370)
!10375 = !DILocation(line: 3489, column: 31, scope: !10370)
!10376 = !DILocation(line: 3489, column: 34, scope: !10370)
!10377 = !DILocation(line: 3489, column: 3, scope: !10370)
!10378 = distinct !DISubprogram(name: "create_initial_data_sets", scope: !3, file: !3, line: 4163, type: !2267, scopeLine: 4164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10379)
!10379 = !{!10380}
!10380 = !DILocalVariable(name: "bb", arg: 1, scope: !10378, file: !3, line: 4163, type: !1179)
!10381 = !DILocation(line: 0, scope: !10378)
!10382 = !DILocation(line: 4165, column: 7, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 4165, column: 7)
!10384 = !DILocation(line: 4165, column: 7, scope: !10378)
!10385 = !DILocation(line: 4166, column: 5, scope: !10383)
!10386 = !DILocation(line: 4166, column: 28, scope: !10383)
!10387 = !DILocation(line: 4168, column: 22, scope: !10383)
!10388 = !DILocation(line: 4168, column: 5, scope: !10383)
!10389 = !DILocation(line: 4168, column: 20, scope: !10383)
!10390 = !DILocation(line: 4169, column: 3, scope: !10378)
!10391 = !DILocation(line: 4170, column: 1, scope: !10378)
!10392 = distinct !DISubprogram(name: "init_insn_data", scope: !3, file: !3, line: 4018, type: !3245, scopeLine: 4019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10393)
!10393 = !{!10394, !10395, !10396}
!10394 = !DILocalVariable(name: "insn", arg: 1, scope: !10392, file: !3, line: 4018, type: !1892)
!10395 = !DILocalVariable(name: "expr", scope: !10392, file: !3, line: 4020, type: !2366)
!10396 = !DILocalVariable(name: "ssid", scope: !10392, file: !3, line: 4021, type: !2455)
!10397 = !DILocation(line: 0, scope: !10392)
!10398 = !DILocation(line: 4025, column: 3, scope: !10392)
!10399 = !DILocation(line: 4027, column: 3, scope: !10392)
!10400 = !DILocation(line: 4029, column: 10, scope: !10392)
!10401 = !DILocation(line: 4030, column: 3, scope: !10392)
!10402 = !DILocation(line: 4031, column: 34, scope: !10392)
!10403 = !DILocation(line: 4031, column: 3, scope: !10392)
!10404 = !DILocation(line: 4033, column: 7, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10392, file: !3, line: 4033, column: 7)
!10406 = !DILocation(line: 4033, column: 7, scope: !10392)
!10407 = !DILocation(line: 4034, column: 53, scope: !10405)
!10408 = !DILocation(line: 4034, column: 33, scope: !10405)
!10409 = !DILocation(line: 4034, column: 5, scope: !10405)
!10410 = !DILocation(line: 4036, column: 7, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10392, file: !3, line: 4036, column: 7)
!10412 = !DILocation(line: 4036, column: 7, scope: !10392)
!10413 = !DILocation(line: 4037, column: 5, scope: !10411)
!10414 = !DILocation(line: 4038, column: 1, scope: !10392)
!10415 = distinct !DISubprogram(name: "init_simplejump_data", scope: !3, file: !3, line: 4043, type: !3245, scopeLine: 4044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10416)
!10416 = !{!10417}
!10417 = !DILocalVariable(name: "insn", arg: 1, scope: !10415, file: !3, line: 4043, type: !1892)
!10418 = !DILocation(line: 0, scope: !10415)
!10419 = !DILocation(line: 4045, column: 14, scope: !10415)
!10420 = !DILocation(line: 4045, column: 32, scope: !10415)
!10421 = !DILocation(line: 4045, column: 3, scope: !10415)
!10422 = !DILocation(line: 4048, column: 23, scope: !10415)
!10423 = !DILocation(line: 4048, column: 3, scope: !10415)
!10424 = !DILocation(line: 4048, column: 21, scope: !10415)
!10425 = !DILocation(line: 4049, column: 3, scope: !10415)
!10426 = !DILocation(line: 4050, column: 1, scope: !10415)
!10427 = distinct !DISubprogram(name: "get_seqno_of_a_pred", scope: !3, file: !3, line: 3808, type: !7424, scopeLine: 3809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10428)
!10428 = !{!10429, !10430, !10431, !10434, !10437, !10438, !10439, !10441}
!10429 = !DILocalVariable(name: "insn", arg: 1, scope: !10427, file: !3, line: 3808, type: !1892)
!10430 = !DILocalVariable(name: "seqno", scope: !10427, file: !3, line: 3810, type: !638)
!10431 = !DILocalVariable(name: "bb", scope: !10432, file: !3, line: 3818, type: !1179)
!10432 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 3817, column: 5)
!10433 = distinct !DILexicalBlock(scope: !10427, file: !3, line: 3814, column: 7)
!10434 = !DILocalVariable(name: "succ", scope: !10435, file: !3, line: 3826, type: !1892)
!10435 = distinct !DILexicalBlock(scope: !10436, file: !3, line: 3822, column: 2)
!10436 = distinct !DILexicalBlock(scope: !10432, file: !3, line: 3820, column: 11)
!10437 = !DILocalVariable(name: "si", scope: !10435, file: !3, line: 3827, type: !3251)
!10438 = !DILocalVariable(name: "first", scope: !10435, file: !3, line: 3828, type: !637)
!10439 = !DILocalVariable(name: "preds", scope: !10440, file: !3, line: 3844, type: !2114)
!10440 = distinct !DILexicalBlock(scope: !10436, file: !3, line: 3843, column: 2)
!10441 = !DILocalVariable(name: "n", scope: !10440, file: !3, line: 3845, type: !638)
!10442 = !DILocation(line: 0, scope: !10427)
!10443 = !DILocation(line: 3812, column: 3, scope: !10427)
!10444 = !DILocation(line: 3814, column: 8, scope: !10433)
!10445 = !DILocation(line: 3814, column: 7, scope: !10427)
!10446 = !DILocation(line: 3815, column: 13, scope: !10433)
!10447 = !DILocation(line: 3815, column: 5, scope: !10433)
!10448 = !DILocation(line: 3818, column: 24, scope: !10432)
!10449 = !DILocation(line: 0, scope: !10432)
!10450 = !DILocation(line: 3820, column: 11, scope: !10436)
!10451 = !DILocation(line: 3821, column: 4, scope: !10436)
!10452 = !DILocation(line: 3821, column: 29, scope: !10436)
!10453 = !DILocation(line: 3821, column: 8, scope: !10436)
!10454 = !DILocation(line: 3820, column: 11, scope: !10432)
!10455 = !DILocation(line: 3826, column: 4, scope: !10435)
!10456 = !DILocation(line: 0, scope: !10435)
!10457 = !DILocation(line: 3826, column: 11, scope: !10435)
!10458 = !DILocation(line: 3827, column: 11, scope: !10435)
!10459 = !DILocation(line: 3830, column: 4, scope: !10435)
!10460 = !DILocation(line: 3832, column: 11, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 3832, column: 11)
!10462 = !DILocation(line: 3832, column: 11, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 3832, column: 11)
!10464 = !DILocation(line: 3835, column: 15, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10463, file: !3, line: 3834, column: 13)
!10466 = distinct !{!10466, !10460, !10467}
!10467 = !DILocation(line: 3837, column: 13, scope: !10461)
!10468 = !DILocation(line: 3839, column: 4, scope: !10435)
!10469 = !DILocation(line: 3840, column: 12, scope: !10435)
!10470 = !DILocation(line: 3841, column: 2, scope: !10436)
!10471 = !DILocation(line: 3841, column: 2, scope: !10435)
!10472 = !DILocation(line: 3844, column: 4, scope: !10440)
!10473 = !DILocation(line: 3845, column: 4, scope: !10440)
!10474 = !DILocation(line: 3847, column: 15, scope: !10440)
!10475 = !DILocation(line: 0, scope: !10440)
!10476 = !DILocation(line: 3847, column: 4, scope: !10440)
!10477 = !DILocation(line: 3848, column: 4, scope: !10440)
!10478 = !DILocation(line: 3850, column: 12, scope: !10440)
!10479 = !DILocation(line: 3852, column: 10, scope: !10440)
!10480 = !DILocation(line: 3852, column: 4, scope: !10440)
!10481 = !DILocation(line: 3853, column: 2, scope: !10436)
!10482 = !DILocation(line: 0, scope: !10433)
!10483 = !DILocation(line: 3856, column: 3, scope: !10427)
!10484 = distinct !DISubprogram(name: "single_pred", scope: !155, file: !155, line: 672, type: !6990, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10485)
!10485 = !{!10486}
!10486 = !DILocalVariable(name: "bb", arg: 1, scope: !10484, file: !155, line: 672, type: !2287)
!10487 = !DILocation(line: 0, scope: !10484)
!10488 = !DILocation(line: 674, column: 10, scope: !10484)
!10489 = !DILocation(line: 674, column: 33, scope: !10484)
!10490 = !DILocation(line: 674, column: 3, scope: !10484)
!10491 = distinct !DISubprogram(name: "df_lr_get_bb_info", scope: !2090, file: !2090, line: 1052, type: !10492, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10494)
!10492 = !DISubroutineType(types: !10493)
!10493 = !{!2088, !7}
!10494 = !{!10495}
!10495 = !DILocalVariable(name: "index", arg: 1, scope: !10491, file: !2090, line: 1052, type: !7)
!10496 = !DILocation(line: 0, scope: !10491)
!10497 = !DILocation(line: 1054, column: 15, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10491, file: !2090, line: 1054, column: 7)
!10499 = !DILocation(line: 1054, column: 22, scope: !10498)
!10500 = !DILocation(line: 1054, column: 13, scope: !10498)
!10501 = !DILocation(line: 1054, column: 7, scope: !10491)
!10502 = !DILocation(line: 1055, column: 44, scope: !10498)
!10503 = !DILocation(line: 1055, column: 37, scope: !10498)
!10504 = !DILocation(line: 1055, column: 5, scope: !10498)
!10505 = !DILocation(line: 0, scope: !10498)
!10506 = !DILocation(line: 1058, column: 1, scope: !10491)
!10507 = distinct !DISubprogram(name: "extend_region_bb_info", scope: !3, file: !3, line: 3894, type: !2396, scopeLine: 3895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!10508 = !DILocation(line: 3896, column: 3, scope: !10507)
!10509 = !DILocation(line: 3898, column: 1, scope: !10507)
!10510 = distinct !DISubprogram(name: "VEC_sel_region_bb_info_def_heap_safe_grow_cleared", scope: !409, file: !409, line: 923, type: !10511, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10514)
!10511 = !DISubroutineType(types: !10512)
!10512 = !{null, !10513, !638}
!10513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!10514 = !{!10515, !10516, !10517}
!10515 = !DILocalVariable(name: "vec_", arg: 1, scope: !10510, file: !409, line: 923, type: !10513)
!10516 = !DILocalVariable(name: "size_", arg: 2, scope: !10510, file: !409, line: 923, type: !638)
!10517 = !DILocalVariable(name: "oldsize", scope: !10510, file: !409, line: 923, type: !638)
!10518 = !DILocation(line: 0, scope: !10510)
!10519 = !DILocation(line: 923, column: 1, scope: !10510)
!10520 = distinct !DISubprogram(name: "VEC_sel_region_bb_info_def_base_length", scope: !409, file: !409, line: 922, type: !10521, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10525)
!10521 = !DISubroutineType(types: !10522)
!10522 = !{!7, !10523}
!10523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10524, size: 64)
!10524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2101)
!10525 = !{!10526}
!10526 = !DILocalVariable(name: "vec_", arg: 1, scope: !10520, file: !409, line: 922, type: !10523)
!10527 = !DILocation(line: 0, scope: !10520)
!10528 = !DILocation(line: 922, column: 1, scope: !10520)
!10529 = distinct !DISubprogram(name: "VEC_sel_region_bb_info_def_heap_safe_grow", scope: !409, file: !409, line: 923, type: !10511, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10530)
!10530 = !{!10531, !10532}
!10531 = !DILocalVariable(name: "vec_", arg: 1, scope: !10529, file: !409, line: 923, type: !10513)
!10532 = !DILocalVariable(name: "size_", arg: 2, scope: !10529, file: !409, line: 923, type: !638)
!10533 = !DILocation(line: 0, scope: !10529)
!10534 = !DILocation(line: 923, column: 1, scope: !10529)
!10535 = distinct !DISubprogram(name: "VEC_sel_region_bb_info_def_base_address", scope: !409, file: !409, line: 922, type: !10536, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10538)
!10536 = !DISubroutineType(types: !10537)
!10537 = !{!7153, !7154}
!10538 = !{!10539}
!10539 = !DILocalVariable(name: "vec_", arg: 1, scope: !10535, file: !409, line: 922, type: !7154)
!10540 = !DILocation(line: 0, scope: !10535)
!10541 = !DILocation(line: 922, column: 1, scope: !10535)
!10542 = distinct !DISubprogram(name: "VEC_sel_region_bb_info_def_heap_reserve_exact", scope: !409, file: !409, line: 923, type: !10543, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10545)
!10543 = !DISubroutineType(types: !10544)
!10544 = !{!638, !10513, !638}
!10545 = !{!10546, !10547, !10548}
!10546 = !DILocalVariable(name: "vec_", arg: 1, scope: !10542, file: !409, line: 923, type: !10513)
!10547 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10542, file: !409, line: 923, type: !638)
!10548 = !DILocalVariable(name: "extend", scope: !10542, file: !409, line: 923, type: !638)
!10549 = !DILocation(line: 0, scope: !10542)
!10550 = !DILocation(line: 923, column: 1, scope: !10542)
!10551 = !DILocation(line: 923, column: 1, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10542, file: !409, line: 923, column: 1)
!10553 = distinct !DISubprogram(name: "VEC_sel_region_bb_info_def_base_space", scope: !409, file: !409, line: 922, type: !10554, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10556)
!10554 = !DISubroutineType(types: !10555)
!10555 = !{!638, !7154, !638}
!10556 = !{!10557, !10558}
!10557 = !DILocalVariable(name: "vec_", arg: 1, scope: !10553, file: !409, line: 922, type: !7154)
!10558 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10553, file: !409, line: 922, type: !638)
!10559 = !DILocation(line: 0, scope: !10553)
!10560 = !DILocation(line: 922, column: 1, scope: !10553)
!10561 = distinct !DISubprogram(name: "VEC_sel_region_bb_info_def_heap_free", scope: !409, file: !409, line: 923, type: !10562, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10564)
!10562 = !DISubroutineType(types: !10563)
!10563 = !{null, !10513}
!10564 = !{!10565}
!10565 = !DILocalVariable(name: "vec_", arg: 1, scope: !10561, file: !409, line: 923, type: !10513)
!10566 = !DILocation(line: 0, scope: !10561)
!10567 = !DILocation(line: 923, column: 1, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10561, file: !409, line: 923, column: 1)
!10569 = !DILocation(line: 923, column: 1, scope: !10561)
!10570 = distinct !DISubprogram(name: "VEC_rtx_heap_alloc", scope: !414, file: !414, line: 201, type: !10571, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10573)
!10571 = !DISubroutineType(types: !10572)
!10572 = !{!1852, !638}
!10573 = !{!10574}
!10574 = !DILocalVariable(name: "alloc_", arg: 1, scope: !10570, file: !414, line: 201, type: !638)
!10575 = !DILocation(line: 0, scope: !10570)
!10576 = !DILocation(line: 201, column: 1, scope: !10570)
!10577 = distinct !DISubprogram(name: "VEC_int_heap_alloc", scope: !1162, file: !1162, line: 32, type: !10578, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10580)
!10578 = !DISubroutineType(types: !10579)
!10579 = !{!1858, !638}
!10580 = !{!10581}
!10581 = !DILocalVariable(name: "alloc_", arg: 1, scope: !10577, file: !1162, line: 32, type: !638)
!10582 = !DILocation(line: 0, scope: !10577)
!10583 = !DILocation(line: 32, column: 1, scope: !10577)
!10584 = distinct !DISubprogram(name: "VEC_rtx_heap_reserve", scope: !414, file: !414, line: 201, type: !10585, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10587)
!10585 = !DISubroutineType(types: !10586)
!10586 = !{!638, !7870, !638}
!10587 = !{!10588, !10589, !10590}
!10588 = !DILocalVariable(name: "vec_", arg: 1, scope: !10584, file: !414, line: 201, type: !7870)
!10589 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10584, file: !414, line: 201, type: !638)
!10590 = !DILocalVariable(name: "extend", scope: !10584, file: !414, line: 201, type: !638)
!10591 = !DILocation(line: 0, scope: !10584)
!10592 = !DILocation(line: 201, column: 1, scope: !10584)
!10593 = !DILocation(line: 201, column: 1, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10584, file: !414, line: 201, column: 1)
!10595 = distinct !DISubprogram(name: "VEC_rtx_base_quick_push", scope: !414, file: !414, line: 200, type: !10596, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10598)
!10596 = !DISubroutineType(types: !10597)
!10597 = !{!1843, !4040, !645}
!10598 = !{!10599, !10600, !10601}
!10599 = !DILocalVariable(name: "vec_", arg: 1, scope: !10595, file: !414, line: 200, type: !4040)
!10600 = !DILocalVariable(name: "obj_", arg: 2, scope: !10595, file: !414, line: 200, type: !645)
!10601 = !DILocalVariable(name: "slot_", scope: !10595, file: !414, line: 200, type: !1843)
!10602 = !DILocation(line: 0, scope: !10595)
!10603 = !DILocation(line: 200, column: 1, scope: !10595)
!10604 = distinct !DISubprogram(name: "VEC_rtx_base_space", scope: !414, file: !414, line: 200, type: !10605, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10607)
!10605 = !DISubroutineType(types: !10606)
!10606 = !{!638, !4040, !638}
!10607 = !{!10608, !10609}
!10608 = !DILocalVariable(name: "vec_", arg: 1, scope: !10604, file: !414, line: 200, type: !4040)
!10609 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10604, file: !414, line: 200, type: !638)
!10610 = !DILocation(line: 0, scope: !10604)
!10611 = !DILocation(line: 200, column: 1, scope: !10604)
!10612 = distinct !DISubprogram(name: "VEC_int_heap_reserve", scope: !1162, file: !1162, line: 32, type: !10613, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10615)
!10613 = !DISubroutineType(types: !10614)
!10614 = !{!638, !7879, !638}
!10615 = !{!10616, !10617, !10618}
!10616 = !DILocalVariable(name: "vec_", arg: 1, scope: !10612, file: !1162, line: 32, type: !7879)
!10617 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10612, file: !1162, line: 32, type: !638)
!10618 = !DILocalVariable(name: "extend", scope: !10612, file: !1162, line: 32, type: !638)
!10619 = !DILocation(line: 0, scope: !10612)
!10620 = !DILocation(line: 32, column: 1, scope: !10612)
!10621 = !DILocation(line: 32, column: 1, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10612, file: !1162, line: 32, column: 1)
!10623 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !1162, file: !1162, line: 31, type: !10624, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10626)
!10624 = !DISubroutineType(types: !10625)
!10625 = !{!1839, !7767, !638}
!10626 = !{!10627, !10628, !10629}
!10627 = !DILocalVariable(name: "vec_", arg: 1, scope: !10623, file: !1162, line: 31, type: !7767)
!10628 = !DILocalVariable(name: "obj_", arg: 2, scope: !10623, file: !1162, line: 31, type: !638)
!10629 = !DILocalVariable(name: "slot_", scope: !10623, file: !1162, line: 31, type: !1839)
!10630 = !DILocation(line: 0, scope: !10623)
!10631 = !DILocation(line: 31, column: 1, scope: !10623)
!10632 = distinct !DISubprogram(name: "VEC_int_base_space", scope: !1162, file: !1162, line: 31, type: !10633, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10635)
!10633 = !DISubroutineType(types: !10634)
!10634 = !{!638, !7767, !638}
!10635 = !{!10636, !10637}
!10636 = !DILocalVariable(name: "vec_", arg: 1, scope: !10632, file: !1162, line: 31, type: !7767)
!10637 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10632, file: !1162, line: 31, type: !638)
!10638 = !DILocation(line: 0, scope: !10632)
!10639 = !DILocation(line: 31, column: 1, scope: !10632)
!10640 = distinct !DISubprogram(name: "cfg_preds_1", scope: !3, file: !3, line: 4574, type: !10641, scopeLine: 4575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10643)
!10641 = !DISubroutineType(types: !10642)
!10642 = !{null, !1179, !7202, !1839, !1839}
!10643 = !{!10644, !10645, !10646, !10647, !10648, !10649, !10650, !10654}
!10644 = !DILocalVariable(name: "bb", arg: 1, scope: !10640, file: !3, line: 4574, type: !1179)
!10645 = !DILocalVariable(name: "preds", arg: 2, scope: !10640, file: !3, line: 4574, type: !7202)
!10646 = !DILocalVariable(name: "n", arg: 3, scope: !10640, file: !3, line: 4574, type: !1839)
!10647 = !DILocalVariable(name: "size", arg: 4, scope: !10640, file: !3, line: 4574, type: !1839)
!10648 = !DILocalVariable(name: "e", scope: !10640, file: !3, line: 4576, type: !1196)
!10649 = !DILocalVariable(name: "ei", scope: !10640, file: !3, line: 4577, type: !3258)
!10650 = !DILocalVariable(name: "pred_bb", scope: !10651, file: !3, line: 4583, type: !1179)
!10651 = distinct !DILexicalBlock(scope: !10652, file: !3, line: 4582, column: 5)
!10652 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 4581, column: 3)
!10653 = distinct !DILexicalBlock(scope: !10640, file: !3, line: 4581, column: 3)
!10654 = !DILocalVariable(name: "bb_end", scope: !10651, file: !3, line: 4584, type: !1892)
!10655 = !DILocation(line: 0, scope: !10640)
!10656 = !DILocation(line: 4576, column: 3, scope: !10640)
!10657 = !DILocation(line: 4577, column: 3, scope: !10640)
!10658 = !DILocation(line: 4579, column: 3, scope: !10640)
!10659 = !DILocation(line: 4581, column: 3, scope: !10653)
!10660 = !DILocation(line: 0, scope: !10652)
!10661 = !DILocation(line: 0, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 4593, column: 8)
!10663 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 4592, column: 2)
!10664 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 4589, column: 11)
!10665 = !DILocation(line: 4581, column: 3, scope: !10652)
!10666 = !DILocation(line: 4583, column: 29, scope: !10651)
!10667 = !DILocation(line: 4583, column: 32, scope: !10651)
!10668 = !DILocation(line: 0, scope: !10651)
!10669 = !DILocation(line: 4584, column: 23, scope: !10651)
!10670 = !DILocation(line: 4587, column: 7, scope: !10651)
!10671 = !DILocation(line: 4589, column: 11, scope: !10664)
!10672 = !DILocation(line: 4589, column: 11, scope: !10651)
!10673 = !DILocation(line: 4590, column: 2, scope: !10664)
!10674 = !DILocation(line: 4593, column: 8, scope: !10662)
!10675 = !DILocation(line: 4593, column: 14, scope: !10662)
!10676 = !DILocation(line: 4593, column: 11, scope: !10662)
!10677 = !DILocation(line: 4593, column: 8, scope: !10663)
!10678 = !DILocation(line: 4596, column: 5, scope: !10663)
!10679 = !DILocation(line: 4594, column: 15, scope: !10662)
!10680 = !DILocation(line: 4594, column: 13, scope: !10662)
!10681 = !DILocation(line: 4594, column: 6, scope: !10662)
!10682 = !DILocation(line: 4596, column: 17, scope: !10663)
!10683 = !DILocation(line: 4596, column: 4, scope: !10663)
!10684 = !DILocation(line: 4596, column: 21, scope: !10663)
!10685 = distinct !{!10685, !10659, !10686}
!10686 = !DILocation(line: 4598, column: 5, scope: !10653)
!10687 = !DILocation(line: 4600, column: 3, scope: !10640)
!10688 = !DILocation(line: 4601, column: 1, scope: !10640)
!10689 = distinct !DISubprogram(name: "ei_end_p", scope: !155, file: !155, line: 721, type: !10690, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10692)
!10690 = !DISubroutineType(types: !10691)
!10691 = !{!637, !3258}
!10692 = !{!10693}
!10693 = !DILocalVariable(name: "i", arg: 1, scope: !10689, file: !155, line: 721, type: !3258)
!10694 = !DILocation(line: 723, column: 22, scope: !10689)
!10695 = !DILocation(line: 723, column: 19, scope: !10689)
!10696 = !DILocation(line: 723, column: 10, scope: !10689)
!10697 = !DILocation(line: 723, column: 3, scope: !10689)
!10698 = distinct !DISubprogram(name: "ei_edge", scope: !155, file: !155, line: 752, type: !8152, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10699)
!10699 = !{!10700}
!10700 = !DILocalVariable(name: "i", arg: 1, scope: !10698, file: !155, line: 752, type: !3258)
!10701 = !DILocation(line: 754, column: 10, scope: !10698)
!10702 = !DILocation(line: 754, column: 3, scope: !10698)
!10703 = distinct !DISubprogram(name: "ei_container", scope: !155, file: !155, line: 685, type: !10704, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10706)
!10704 = !DISubroutineType(types: !10705)
!10705 = !{!1184, !3258}
!10706 = !{!10707}
!10707 = !DILocalVariable(name: "i", arg: 1, scope: !10703, file: !155, line: 685, type: !3258)
!10708 = !DILocation(line: 687, column: 3, scope: !10703)
!10709 = !DILocation(line: 688, column: 10, scope: !10703)
!10710 = !DILocation(line: 688, column: 3, scope: !10703)
!10711 = distinct !DISubprogram(name: "sel_remove_bb", scope: !3, file: !3, line: 5024, type: !8173, scopeLine: 5025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10712)
!10712 = !{!10713, !10714}
!10713 = !DILocalVariable(name: "bb", arg: 1, scope: !10711, file: !3, line: 5024, type: !1179)
!10714 = !DILocalVariable(name: "remove_from_cfg_p", arg: 2, scope: !10711, file: !3, line: 5024, type: !637)
!10715 = !DILocation(line: 0, scope: !10711)
!10716 = !DILocation(line: 5026, column: 3, scope: !10711)
!10717 = !DILocation(line: 5028, column: 3, scope: !10711)
!10718 = !DILocation(line: 5029, column: 3, scope: !10711)
!10719 = !DILocation(line: 5030, column: 21, scope: !10711)
!10720 = !DILocation(line: 5030, column: 47, scope: !10711)
!10721 = !DILocation(line: 5030, column: 3, scope: !10711)
!10722 = !DILocation(line: 5032, column: 7, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10711, file: !3, line: 5032, column: 7)
!10724 = !DILocation(line: 5032, column: 7, scope: !10711)
!10725 = !DILocation(line: 5033, column: 5, scope: !10723)
!10726 = !DILocation(line: 5035, column: 21, scope: !10711)
!10727 = !DILocation(line: 5035, column: 3, scope: !10711)
!10728 = !DILocation(line: 5036, column: 1, scope: !10711)
!10729 = distinct !DISubprogram(name: "remove_bb_from_region", scope: !3, file: !3, line: 4945, type: !2267, scopeLine: 4946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10730)
!10730 = !{!10731, !10732, !10733, !10734, !10735}
!10731 = !DILocalVariable(name: "bb", arg: 1, scope: !10729, file: !3, line: 4945, type: !1179)
!10732 = !DILocalVariable(name: "i", scope: !10729, file: !3, line: 4947, type: !638)
!10733 = !DILocalVariable(name: "pos", scope: !10729, file: !3, line: 4947, type: !638)
!10734 = !DILocalVariable(name: "bbi", scope: !10729, file: !3, line: 4947, type: !638)
!10735 = !DILocalVariable(name: "rgn", scope: !10729, file: !3, line: 4947, type: !638)
!10736 = !DILocation(line: 0, scope: !10729)
!10737 = !DILocation(line: 4949, column: 9, scope: !10729)
!10738 = !DILocation(line: 4950, column: 9, scope: !10729)
!10739 = !DILocation(line: 4951, column: 9, scope: !10729)
!10740 = !DILocation(line: 4951, column: 26, scope: !10729)
!10741 = !DILocation(line: 4953, column: 3, scope: !10729)
!10742 = !DILocation(line: 4956, column: 12, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10729, file: !3, line: 4956, column: 3)
!10744 = !DILocation(line: 4956, column: 8, scope: !10743)
!10745 = !DILocation(line: 0, scope: !10743)
!10746 = !DILocation(line: 4956, column: 40, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 4956, column: 3)
!10748 = !DILocation(line: 4956, column: 3, scope: !10743)
!10749 = !DILocation(line: 4957, column: 5, scope: !10747)
!10750 = !DILocation(line: 4957, column: 34, scope: !10747)
!10751 = !DILocation(line: 4956, column: 3, scope: !10747)
!10752 = distinct !{!10752, !10748, !10753}
!10753 = !DILocation(line: 4957, column: 34, scope: !10743)
!10754 = !DILocation(line: 4959, column: 12, scope: !10729)
!10755 = !DILocation(line: 4959, column: 25, scope: !10729)
!10756 = !DILocation(line: 4960, column: 31, scope: !10729)
!10757 = !DILocation(line: 4960, column: 12, scope: !10729)
!10758 = !DILocation(line: 4961, column: 13, scope: !10729)
!10759 = !DILocation(line: 4961, column: 37, scope: !10729)
!10760 = !DILocation(line: 4961, column: 12, scope: !10729)
!10761 = !DILocation(line: 4961, column: 44, scope: !10729)
!10762 = !DILocation(line: 4959, column: 3, scope: !10729)
!10763 = !DILocation(line: 4963, column: 3, scope: !10729)
!10764 = !DILocation(line: 4963, column: 22, scope: !10729)
!10765 = !DILocation(line: 4964, column: 8, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10729, file: !3, line: 4964, column: 3)
!10767 = !DILocation(line: 0, scope: !10766)
!10768 = !DILocation(line: 4964, column: 26, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10766, file: !3, line: 4964, column: 3)
!10770 = !DILocation(line: 4964, column: 23, scope: !10769)
!10771 = !DILocation(line: 4964, column: 3, scope: !10766)
!10772 = !DILocation(line: 4965, column: 5, scope: !10769)
!10773 = !DILocation(line: 4965, column: 19, scope: !10769)
!10774 = !DILocation(line: 4964, column: 3, scope: !10769)
!10775 = distinct !{!10775, !10771, !10776}
!10776 = !DILocation(line: 4965, column: 19, scope: !10766)
!10777 = !DILocation(line: 4966, column: 1, scope: !10729)
!10778 = distinct !DISubprogram(name: "return_bb_to_pool", scope: !3, file: !3, line: 4750, type: !2267, scopeLine: 4751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10779)
!10779 = !{!10780, !10781}
!10780 = !DILocalVariable(name: "bb", arg: 1, scope: !10778, file: !3, line: 4750, type: !1179)
!10781 = !DILocalVariable(name: "note", scope: !10778, file: !3, line: 4752, type: !645)
!10782 = !DILocation(line: 0, scope: !10778)
!10783 = !DILocation(line: 4752, column: 14, scope: !10778)
!10784 = !DILocation(line: 4754, column: 3, scope: !10778)
!10785 = !DILocation(line: 4760, column: 1, scope: !10778)
!10786 = distinct !DISubprogram(name: "delete_and_free_basic_block", scope: !3, file: !3, line: 4888, type: !2267, scopeLine: 4889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10787)
!10787 = !{!10788}
!10788 = !DILocalVariable(name: "bb", arg: 1, scope: !10786, file: !3, line: 4888, type: !1179)
!10789 = !DILocation(line: 0, scope: !10786)
!10790 = !DILocation(line: 4890, column: 3, scope: !10786)
!10791 = !DILocation(line: 4892, column: 7, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10786, file: !3, line: 4892, column: 7)
!10793 = !DILocation(line: 4892, column: 7, scope: !10786)
!10794 = !DILocation(line: 4893, column: 5, scope: !10792)
!10795 = !DILocation(line: 4895, column: 21, scope: !10786)
!10796 = !DILocation(line: 4895, column: 47, scope: !10786)
!10797 = !DILocation(line: 4895, column: 3, scope: !10786)
!10798 = !DILocation(line: 4900, column: 3, scope: !10786)
!10799 = !DILocation(line: 4905, column: 3, scope: !10786)
!10800 = !DILocation(line: 4906, column: 1, scope: !10786)
!10801 = distinct !DISubprogram(name: "VEC_basic_block_base_length", scope: !155, file: !155, line: 281, type: !10802, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10804)
!10802 = !DISubroutineType(types: !10803)
!10803 = !{!7, !6335}
!10804 = !{!10805}
!10805 = !DILocalVariable(name: "vec_", arg: 1, scope: !10801, file: !155, line: 281, type: !6335)
!10806 = !DILocation(line: 0, scope: !10801)
!10807 = !DILocation(line: 281, column: 1, scope: !10801)
!10808 = distinct !DISubprogram(name: "add_block_to_current_region", scope: !3, file: !3, line: 4910, type: !2267, scopeLine: 4911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10809)
!10809 = !{!10810, !10811, !10812, !10813, !10814}
!10810 = !DILocalVariable(name: "bb", arg: 1, scope: !10808, file: !3, line: 4910, type: !1179)
!10811 = !DILocalVariable(name: "i", scope: !10808, file: !3, line: 4912, type: !638)
!10812 = !DILocalVariable(name: "pos", scope: !10808, file: !3, line: 4912, type: !638)
!10813 = !DILocalVariable(name: "bbi", scope: !10808, file: !3, line: 4912, type: !638)
!10814 = !DILocalVariable(name: "rgn", scope: !10808, file: !3, line: 4912, type: !638)
!10815 = !DILocation(line: 0, scope: !10808)
!10816 = !DILocation(line: 4914, column: 9, scope: !10808)
!10817 = !DILocation(line: 4915, column: 9, scope: !10808)
!10818 = !DILocation(line: 4916, column: 7, scope: !10808)
!10819 = !DILocation(line: 4917, column: 9, scope: !10808)
!10820 = !DILocation(line: 4917, column: 26, scope: !10808)
!10821 = !DILocation(line: 4919, column: 3, scope: !10808)
!10822 = !DILocation(line: 4923, column: 3, scope: !10808)
!10823 = !DILocation(line: 4925, column: 12, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 4925, column: 3)
!10825 = !DILocation(line: 4925, column: 8, scope: !10824)
!10826 = !DILocation(line: 0, scope: !10824)
!10827 = !DILocation(line: 4925, column: 40, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10824, file: !3, line: 4925, column: 3)
!10829 = !DILocation(line: 4925, column: 3, scope: !10824)
!10830 = !DILocation(line: 4926, column: 5, scope: !10828)
!10831 = !DILocation(line: 4926, column: 34, scope: !10828)
!10832 = !DILocation(line: 4925, column: 3, scope: !10828)
!10833 = distinct !{!10833, !10829, !10834}
!10834 = !DILocation(line: 4926, column: 34, scope: !10824)
!10835 = !DILocation(line: 4928, column: 12, scope: !10808)
!10836 = !DILocation(line: 4928, column: 25, scope: !10808)
!10837 = !DILocation(line: 4928, column: 31, scope: !10808)
!10838 = !DILocation(line: 4929, column: 12, scope: !10808)
!10839 = !DILocation(line: 4930, column: 13, scope: !10808)
!10840 = !DILocation(line: 4930, column: 37, scope: !10808)
!10841 = !DILocation(line: 4930, column: 12, scope: !10808)
!10842 = !DILocation(line: 4930, column: 44, scope: !10808)
!10843 = !DILocation(line: 4928, column: 3, scope: !10808)
!10844 = !DILocation(line: 4933, column: 27, scope: !10808)
!10845 = !DILocation(line: 4933, column: 3, scope: !10808)
!10846 = !DILocation(line: 4933, column: 21, scope: !10808)
!10847 = !DILocation(line: 4934, column: 3, scope: !10808)
!10848 = !DILocation(line: 4934, column: 27, scope: !10808)
!10849 = !DILocation(line: 4935, column: 3, scope: !10808)
!10850 = !DILocation(line: 4935, column: 30, scope: !10808)
!10851 = !DILocation(line: 4937, column: 3, scope: !10808)
!10852 = !DILocation(line: 4937, column: 22, scope: !10808)
!10853 = !DILocation(line: 4939, column: 8, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 4939, column: 3)
!10855 = !DILocation(line: 0, scope: !10854)
!10856 = !DILocation(line: 4939, column: 26, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10854, file: !3, line: 4939, column: 3)
!10858 = !DILocation(line: 4939, column: 23, scope: !10857)
!10859 = !DILocation(line: 4939, column: 3, scope: !10854)
!10860 = !DILocation(line: 4940, column: 5, scope: !10857)
!10861 = !DILocation(line: 4940, column: 19, scope: !10857)
!10862 = !DILocation(line: 4939, column: 3, scope: !10857)
!10863 = distinct !{!10863, !10859, !10864}
!10864 = !DILocation(line: 4940, column: 19, scope: !10854)
!10865 = !DILocation(line: 4941, column: 1, scope: !10808)
!10866 = distinct !DISubprogram(name: "find_place_to_insert_bb", scope: !3, file: !3, line: 4823, type: !10867, scopeLine: 4824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10869)
!10867 = !DISubroutineType(types: !10868)
!10868 = !{!638, !1179, !638}
!10869 = !{!10870, !10871, !10872, !10873, !10874, !10875, !10878, !10879, !10880}
!10870 = !DILocalVariable(name: "bb", arg: 1, scope: !10866, file: !3, line: 4823, type: !1179)
!10871 = !DILocalVariable(name: "rgn", arg: 2, scope: !10866, file: !3, line: 4823, type: !638)
!10872 = !DILocalVariable(name: "has_preds_outside_rgn", scope: !10866, file: !3, line: 4825, type: !637)
!10873 = !DILocalVariable(name: "e", scope: !10866, file: !3, line: 4826, type: !1196)
!10874 = !DILocalVariable(name: "ei", scope: !10866, file: !3, line: 4827, type: !3258)
!10875 = !DILocalVariable(name: "i", scope: !10876, file: !3, line: 4842, type: !638)
!10876 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 4841, column: 5)
!10877 = distinct !DILexicalBlock(scope: !10866, file: !3, line: 4839, column: 7)
!10878 = !DILocalVariable(name: "bbi", scope: !10876, file: !3, line: 4842, type: !638)
!10879 = !DILocalVariable(name: "cur_bbi", scope: !10876, file: !3, line: 4842, type: !638)
!10880 = !DILocalVariable(name: "pred_bbi", scope: !10881, file: !3, line: 4874, type: !638)
!10881 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 4873, column: 5)
!10882 = distinct !DILexicalBlock(scope: !10866, file: !3, line: 4872, column: 7)
!10883 = !DILocation(line: 0, scope: !10866)
!10884 = !DILocation(line: 4826, column: 3, scope: !10866)
!10885 = !DILocation(line: 4827, column: 3, scope: !10866)
!10886 = !DILocation(line: 4830, column: 3, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10866, file: !3, line: 4830, column: 3)
!10888 = !DILocation(line: 0, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 4830, column: 3)
!10890 = !DILocation(line: 4830, column: 3, scope: !10889)
!10891 = !DILocation(line: 4831, column: 31, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 4831, column: 9)
!10893 = !DILocation(line: 4831, column: 34, scope: !10892)
!10894 = !DILocation(line: 4831, column: 10, scope: !10892)
!10895 = !DILocation(line: 4831, column: 9, scope: !10889)
!10896 = distinct !{!10896, !10886, !10897}
!10897 = !DILocation(line: 4835, column: 7, scope: !10887)
!10898 = !DILocation(line: 4839, column: 7, scope: !10877)
!10899 = !DILocation(line: 4840, column: 7, scope: !10877)
!10900 = !DILocation(line: 4840, column: 11, scope: !10877)
!10901 = !DILocation(line: 4840, column: 33, scope: !10877)
!10902 = !DILocation(line: 4840, column: 36, scope: !10877)
!10903 = !DILocation(line: 4840, column: 59, scope: !10877)
!10904 = !DILocation(line: 4839, column: 7, scope: !10866)
!10905 = !DILocation(line: 4842, column: 24, scope: !10876)
!10906 = !DILocation(line: 0, scope: !10876)
!10907 = !DILocation(line: 4844, column: 7, scope: !10876)
!10908 = !DILocation(line: 4845, column: 16, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10876, file: !3, line: 4845, column: 7)
!10910 = !DILocation(line: 0, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10912, file: !3, line: 4846, column: 9)
!10912 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 4845, column: 7)
!10913 = !DILocation(line: 0, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 4848, column: 15)
!10915 = !DILocation(line: 4845, column: 12, scope: !10909)
!10916 = !DILocation(line: 0, scope: !10909)
!10917 = !DILocation(line: 4845, column: 43, scope: !10912)
!10918 = !DILocation(line: 4845, column: 7, scope: !10909)
!10919 = !DILocation(line: 4847, column: 21, scope: !10911)
!10920 = !DILocation(line: 4848, column: 15, scope: !10914)
!10921 = !DILocation(line: 4849, column: 17, scope: !10914)
!10922 = !DILocation(line: 4849, column: 15, scope: !10914)
!10923 = !DILocation(line: 4848, column: 15, scope: !10911)
!10924 = !DILocation(line: 4845, column: 7, scope: !10912)
!10925 = distinct !{!10925, !10918, !10926}
!10926 = !DILocation(line: 4851, column: 9, scope: !10909)
!10927 = !DILocation(line: 4857, column: 12, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 4857, column: 12)
!10929 = !DILocation(line: 4857, column: 12, scope: !10877)
!10930 = !DILocation(line: 4861, column: 11, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10928, file: !3, line: 4858, column: 5)
!10932 = !DILocation(line: 4861, column: 9, scope: !10931)
!10933 = !DILocation(line: 4862, column: 7, scope: !10931)
!10934 = !DILocation(line: 4872, column: 7, scope: !10882)
!10935 = !DILocation(line: 4872, column: 30, scope: !10882)
!10936 = !DILocation(line: 4872, column: 7, scope: !10866)
!10937 = !DILocation(line: 4876, column: 7, scope: !10881)
!10938 = !DILocation(line: 4878, column: 18, scope: !10881)
!10939 = !DILocation(line: 4878, column: 37, scope: !10881)
!10940 = !DILocation(line: 4878, column: 42, scope: !10881)
!10941 = !DILocation(line: 0, scope: !10881)
!10942 = !DILocation(line: 4879, column: 14, scope: !10881)
!10943 = !DILocation(line: 4883, column: 12, scope: !10882)
!10944 = !DILocation(line: 4883, column: 30, scope: !10882)
!10945 = !DILocation(line: 4883, column: 5, scope: !10882)
!10946 = !DILocation(line: 4884, column: 1, scope: !10866)
!10947 = distinct !DISubprogram(name: "check_for_new_jump", scope: !3, file: !3, line: 5261, type: !10948, scopeLine: 5262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10950)
!10948 = !DISubroutineType(types: !10949)
!10949 = !{!645, !1179, !638}
!10950 = !{!10951, !10952, !10953}
!10951 = !DILocalVariable(name: "bb", arg: 1, scope: !10947, file: !3, line: 5261, type: !1179)
!10952 = !DILocalVariable(name: "prev_max_uid", arg: 2, scope: !10947, file: !3, line: 5261, type: !638)
!10953 = !DILocalVariable(name: "end", scope: !10947, file: !3, line: 5263, type: !645)
!10954 = !DILocation(line: 0, scope: !10947)
!10955 = !DILocation(line: 5265, column: 9, scope: !10947)
!10956 = !DILocation(line: 5266, column: 7, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10947, file: !3, line: 5266, column: 7)
!10958 = !DILocation(line: 5266, column: 11, scope: !10957)
!10959 = !DILocation(line: 5266, column: 14, scope: !10957)
!10960 = !DILocation(line: 5266, column: 29, scope: !10957)
!10961 = !DILocation(line: 5266, column: 7, scope: !10947)
!10962 = !DILocation(line: 5268, column: 3, scope: !10947)
!10963 = !DILocation(line: 5269, column: 1, scope: !10947)
!10964 = distinct !DISubprogram(name: "get_bb_note_from_pool", scope: !3, file: !3, line: 4764, type: !10965, scopeLine: 4765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10967)
!10965 = !DISubroutineType(types: !10966)
!10966 = !{!645}
!10967 = !{!10968}
!10968 = !DILocalVariable(name: "note", scope: !10969, file: !3, line: 4770, type: !645)
!10969 = distinct !DILexicalBlock(scope: !10970, file: !3, line: 4769, column: 5)
!10970 = distinct !DILexicalBlock(scope: !10964, file: !3, line: 4766, column: 7)
!10971 = !DILocation(line: 4766, column: 7, scope: !10970)
!10972 = !DILocation(line: 4766, column: 7, scope: !10964)
!10973 = !DILocation(line: 4770, column: 18, scope: !10969)
!10974 = !DILocation(line: 0, scope: !10969)
!10975 = !DILocation(line: 4772, column: 7, scope: !10969)
!10976 = !DILocation(line: 4772, column: 24, scope: !10969)
!10977 = !DILocation(line: 4773, column: 7, scope: !10969)
!10978 = !DILocation(line: 4773, column: 24, scope: !10969)
!10979 = !DILocation(line: 0, scope: !10970)
!10980 = !DILocation(line: 4777, column: 1, scope: !10964)
!10981 = distinct !DISubprogram(name: "VEC_rtx_base_pop", scope: !414, file: !414, line: 200, type: !10982, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10984)
!10982 = !DISubroutineType(types: !10983)
!10983 = !{!645, !4040}
!10984 = !{!10985, !10986}
!10985 = !DILocalVariable(name: "vec_", arg: 1, scope: !10981, file: !414, line: 200, type: !4040)
!10986 = !DILocalVariable(name: "obj_", scope: !10981, file: !414, line: 200, type: !645)
!10987 = !DILocation(line: 0, scope: !10981)
!10988 = !DILocation(line: 200, column: 1, scope: !10981)
!10989 = distinct !DISubprogram(name: "vinsn_init", scope: !3, file: !3, line: 1171, type: !10990, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10992)
!10990 = !DISubroutineType(types: !10991)
!10991 = !{null, !1939, !1892, !637}
!10992 = !{!10993, !10994, !10995, !10996, !11001, !11002}
!10993 = !DILocalVariable(name: "vi", arg: 1, scope: !10989, file: !3, line: 1171, type: !1939)
!10994 = !DILocalVariable(name: "insn", arg: 2, scope: !10989, file: !3, line: 1171, type: !1892)
!10995 = !DILocalVariable(name: "force_unique_p", arg: 3, scope: !10989, file: !3, line: 1171, type: !637)
!10996 = !DILocalVariable(name: "hrcf", scope: !10989, file: !3, line: 1173, type: !10997)
!10997 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_rtx_callback_function", file: !414, line: 1883, baseType: !10998)
!10998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10999, size: 64)
!10999 = !DISubroutineType(types: !11000)
!11000 = !{!638, !2498, !5, !1843, !6620}
!11001 = !DILocalVariable(name: "insn_class", scope: !10989, file: !3, line: 1174, type: !638)
!11002 = !DILocalVariable(name: "rhs", scope: !11003, file: !3, line: 1189, type: !645)
!11003 = distinct !DILexicalBlock(scope: !11004, file: !3, line: 1188, column: 5)
!11004 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 1187, column: 7)
!11005 = !DILocation(line: 0, scope: !10989)
!11006 = !DILocation(line: 1176, column: 3, scope: !10989)
!11007 = !DILocation(line: 1176, column: 23, scope: !10989)
!11008 = !DILocation(line: 1177, column: 3, scope: !10989)
!11009 = !DILocation(line: 1177, column: 20, scope: !10989)
!11010 = !DILocation(line: 1178, column: 7, scope: !10989)
!11011 = !DILocation(line: 1178, column: 12, scope: !10989)
!11012 = !DILocation(line: 1180, column: 7, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 1180, column: 7)
!11014 = !DILocation(line: 0, scope: !11013)
!11015 = !DILocation(line: 1180, column: 7, scope: !10989)
!11016 = !DILocation(line: 1181, column: 5, scope: !11013)
!11017 = !DILocation(line: 1183, column: 5, scope: !11013)
!11018 = !DILocation(line: 1186, column: 24, scope: !10989)
!11019 = !DILocation(line: 1186, column: 10, scope: !10989)
!11020 = !DILocation(line: 1187, column: 7, scope: !11004)
!11021 = !DILocation(line: 1187, column: 7, scope: !10989)
!11022 = !DILocation(line: 1189, column: 17, scope: !11003)
!11023 = !DILocation(line: 0, scope: !11003)
!11024 = !DILocation(line: 1191, column: 43, scope: !11003)
!11025 = !DILocation(line: 1191, column: 25, scope: !11003)
!11026 = !DILocation(line: 1191, column: 7, scope: !11003)
!11027 = !DILocation(line: 1191, column: 23, scope: !11003)
!11028 = !DILocation(line: 1193, column: 42, scope: !11003)
!11029 = !DILocation(line: 1193, column: 29, scope: !11003)
!11030 = !DILocation(line: 1193, column: 7, scope: !11003)
!11031 = !DILocation(line: 1193, column: 27, scope: !11003)
!11032 = !DILocation(line: 1196, column: 5, scope: !11003)
!11033 = !DILocation(line: 1199, column: 38, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11004, file: !3, line: 1198, column: 5)
!11035 = !DILocation(line: 1199, column: 25, scope: !11034)
!11036 = !DILocation(line: 1199, column: 7, scope: !11034)
!11037 = !DILocation(line: 1199, column: 23, scope: !11034)
!11038 = !DILocation(line: 1201, column: 7, scope: !11034)
!11039 = !DILocation(line: 1201, column: 27, scope: !11034)
!11040 = !DILocation(line: 1204, column: 16, scope: !10989)
!11041 = !DILocation(line: 1205, column: 18, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 1205, column: 7)
!11043 = !DILocation(line: 1206, column: 7, scope: !11042)
!11044 = !DILocation(line: 1206, column: 26, scope: !11042)
!11045 = !DILocation(line: 1206, column: 12, scope: !11042)
!11046 = !DILocation(line: 1207, column: 11, scope: !11042)
!11047 = !DILocation(line: 1207, column: 16, scope: !11042)
!11048 = !DILocation(line: 1207, column: 54, scope: !11042)
!11049 = !DILocation(line: 1208, column: 15, scope: !11042)
!11050 = !DILocation(line: 1205, column: 7, scope: !10989)
!11051 = !DILocation(line: 1209, column: 5, scope: !11042)
!11052 = !DILocation(line: 1209, column: 27, scope: !11042)
!11053 = !DILocation(line: 1211, column: 5, scope: !11042)
!11054 = !DILocation(line: 1211, column: 27, scope: !11042)
!11055 = !DILocation(line: 1212, column: 1, scope: !10989)
!11056 = distinct !DISubprogram(name: "init_id_from_df", scope: !3, file: !3, line: 2664, type: !11057, scopeLine: 2665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11059)
!11057 = !DISubroutineType(types: !11058)
!11058 = !{null, !2471, !1892, !637}
!11059 = !{!11060, !11061, !11062}
!11060 = !DILocalVariable(name: "id", arg: 1, scope: !11056, file: !3, line: 2664, type: !2471)
!11061 = !DILocalVariable(name: "insn", arg: 2, scope: !11056, file: !3, line: 2664, type: !1892)
!11062 = !DILocalVariable(name: "force_unique_p", arg: 3, scope: !11056, file: !3, line: 2664, type: !637)
!11063 = !DILocation(line: 0, scope: !11056)
!11064 = !DILocation(line: 2666, column: 3, scope: !11056)
!11065 = !DILocation(line: 2668, column: 3, scope: !11056)
!11066 = !DILocation(line: 2669, column: 3, scope: !11056)
!11067 = !DILocation(line: 2671, column: 7, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11056, file: !3, line: 2671, column: 7)
!11069 = !DILocation(line: 2671, column: 7, scope: !11056)
!11070 = !DILocation(line: 2674, column: 3, scope: !11056)
!11071 = !DILocation(line: 2675, column: 3, scope: !11056)
!11072 = !DILocation(line: 2676, column: 1, scope: !11056)
!11073 = distinct !DISubprogram(name: "deps_init_id", scope: !3, file: !3, line: 2680, type: !11057, scopeLine: 2681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11074)
!11074 = !{!11075, !11076, !11077, !11078, !11079}
!11075 = !DILocalVariable(name: "id", arg: 1, scope: !11073, file: !3, line: 2680, type: !2471)
!11076 = !DILocalVariable(name: "insn", arg: 2, scope: !11073, file: !3, line: 2680, type: !1892)
!11077 = !DILocalVariable(name: "force_unique_p", arg: 3, scope: !11073, file: !3, line: 2680, type: !637)
!11078 = !DILocalVariable(name: "_dc", scope: !11073, file: !3, line: 2682, type: !1902)
!11079 = !DILocalVariable(name: "dc", scope: !11073, file: !3, line: 2682, type: !1901)
!11080 = !DILocation(line: 0, scope: !11073)
!11081 = !DILocation(line: 2682, column: 3, scope: !11073)
!11082 = !DILocation(line: 2684, column: 27, scope: !11073)
!11083 = !DILocation(line: 2685, column: 24, scope: !11073)
!11084 = !DILocation(line: 2686, column: 36, scope: !11073)
!11085 = !DILocation(line: 2687, column: 33, scope: !11073)
!11086 = !DILocation(line: 2689, column: 3, scope: !11073)
!11087 = !DILocation(line: 2691, column: 3, scope: !11073)
!11088 = !DILocation(line: 2695, column: 7, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 2695, column: 7)
!11090 = !DILocation(line: 2695, column: 17, scope: !11089)
!11091 = !DILocation(line: 2695, column: 7, scope: !11073)
!11092 = !DILocation(line: 2696, column: 53, scope: !11089)
!11093 = !DILocation(line: 2696, column: 5, scope: !11089)
!11094 = !DILocation(line: 2698, column: 19, scope: !11073)
!11095 = !DILocation(line: 2700, column: 3, scope: !11073)
!11096 = !DILocation(line: 2702, column: 3, scope: !11073)
!11097 = !DILocation(line: 2704, column: 24, scope: !11073)
!11098 = !DILocation(line: 2705, column: 1, scope: !11073)
!11099 = distinct !DISubprogram(name: "hash_with_unspec_callback", scope: !3, file: !3, line: 1116, type: !10999, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11100)
!11100 = !{!11101, !11102, !11103, !11104}
!11101 = !DILocalVariable(name: "x", arg: 1, scope: !11099, file: !3, line: 1116, type: !2498)
!11102 = !DILocalVariable(name: "mode", arg: 2, scope: !11099, file: !3, line: 1116, type: !5)
!11103 = !DILocalVariable(name: "nx", arg: 3, scope: !11099, file: !3, line: 1117, type: !1843)
!11104 = !DILocalVariable(name: "nmode", arg: 4, scope: !11099, file: !3, line: 1117, type: !6620)
!11105 = !DILocation(line: 0, scope: !11099)
!11106 = !DILocation(line: 1119, column: 7, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 1119, column: 7)
!11108 = !DILocation(line: 1119, column: 20, scope: !11107)
!11109 = !DILocation(line: 1120, column: 24, scope: !11107)
!11110 = !DILocation(line: 1120, column: 10, scope: !11107)
!11111 = !DILocation(line: 1120, column: 7, scope: !11107)
!11112 = !DILocation(line: 1121, column: 10, scope: !11107)
!11113 = !DILocation(line: 1119, column: 7, scope: !11099)
!11114 = !DILocation(line: 1123, column: 13, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11107, file: !3, line: 1122, column: 5)
!11116 = !DILocation(line: 1123, column: 11, scope: !11115)
!11117 = !DILocation(line: 1124, column: 14, scope: !11115)
!11118 = !DILocation(line: 1125, column: 7, scope: !11115)
!11119 = !DILocation(line: 1129, column: 1, scope: !11099)
!11120 = distinct !DISubprogram(name: "setup_id_for_insn", scope: !3, file: !3, line: 2364, type: !11057, scopeLine: 2365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11121)
!11121 = !{!11122, !11123, !11124, !11125}
!11122 = !DILocalVariable(name: "id", arg: 1, scope: !11120, file: !3, line: 2364, type: !2471)
!11123 = !DILocalVariable(name: "insn", arg: 2, scope: !11120, file: !3, line: 2364, type: !1892)
!11124 = !DILocalVariable(name: "force_unique_p", arg: 3, scope: !11120, file: !3, line: 2364, type: !637)
!11125 = !DILocalVariable(name: "type", scope: !11120, file: !3, line: 2366, type: !638)
!11126 = !DILocation(line: 0, scope: !11120)
!11127 = !DILocation(line: 2371, column: 10, scope: !11120)
!11128 = !DILocation(line: 2374, column: 12, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 2374, column: 7)
!11130 = !DILocation(line: 2374, column: 24, scope: !11129)
!11131 = !DILocation(line: 2374, column: 20, scope: !11129)
!11132 = !DILocation(line: 2376, column: 30, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 2376, column: 12)
!11134 = !DILocation(line: 2376, column: 33, scope: !11133)
!11135 = !DILocation(line: 2376, column: 12, scope: !11129)
!11136 = !DILocation(line: 2378, column: 17, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11133, file: !3, line: 2378, column: 12)
!11138 = !DILocation(line: 2378, column: 12, scope: !11133)
!11139 = !DILocation(line: 2379, column: 12, scope: !11137)
!11140 = !DILocation(line: 2379, column: 5, scope: !11137)
!11141 = !DILocation(line: 0, scope: !11129)
!11142 = !DILocation(line: 2381, column: 3, scope: !11120)
!11143 = !DILocation(line: 2381, column: 19, scope: !11120)
!11144 = !DILocation(line: 2382, column: 25, scope: !11120)
!11145 = !DILocation(line: 2382, column: 3, scope: !11120)
!11146 = !DILocation(line: 2382, column: 23, scope: !11120)
!11147 = !DILocation(line: 2383, column: 25, scope: !11120)
!11148 = !DILocation(line: 2383, column: 3, scope: !11120)
!11149 = !DILocation(line: 2383, column: 23, scope: !11120)
!11150 = !DILocation(line: 2384, column: 29, scope: !11120)
!11151 = !DILocation(line: 2384, column: 3, scope: !11120)
!11152 = !DILocation(line: 2384, column: 27, scope: !11120)
!11153 = !DILocation(line: 2385, column: 1, scope: !11120)
!11154 = distinct !DISubprogram(name: "setup_id_lhs_rhs", scope: !3, file: !3, line: 2541, type: !11057, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11155)
!11155 = !{!11156, !11157, !11158, !11159}
!11156 = !DILocalVariable(name: "id", arg: 1, scope: !11154, file: !3, line: 2541, type: !2471)
!11157 = !DILocalVariable(name: "insn", arg: 2, scope: !11154, file: !3, line: 2541, type: !1892)
!11158 = !DILocalVariable(name: "force_unique_p", arg: 3, scope: !11154, file: !3, line: 2541, type: !637)
!11159 = !DILocalVariable(name: "pat", scope: !11154, file: !3, line: 2543, type: !645)
!11160 = !DILocation(line: 0, scope: !11154)
!11161 = !DILocation(line: 2543, column: 13, scope: !11154)
!11162 = !DILocation(line: 2545, column: 7, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 2545, column: 7)
!11164 = !DILocation(line: 2546, column: 7, scope: !11163)
!11165 = !DILocation(line: 2546, column: 10, scope: !11163)
!11166 = !DILocation(line: 2546, column: 25, scope: !11163)
!11167 = !DILocation(line: 2547, column: 11, scope: !11163)
!11168 = !DILocation(line: 2547, column: 7, scope: !11163)
!11169 = !DILocation(line: 2549, column: 24, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 2548, column: 5)
!11171 = !DILocation(line: 2549, column: 7, scope: !11170)
!11172 = !DILocation(line: 2549, column: 22, scope: !11170)
!11173 = !DILocation(line: 2550, column: 24, scope: !11170)
!11174 = !DILocation(line: 2550, column: 7, scope: !11170)
!11175 = !DILocation(line: 2550, column: 22, scope: !11170)
!11176 = !DILocation(line: 2551, column: 5, scope: !11170)
!11177 = !DILocation(line: 2553, column: 22, scope: !11163)
!11178 = !DILocation(line: 2553, column: 37, scope: !11163)
!11179 = !DILocation(line: 2553, column: 5, scope: !11163)
!11180 = !DILocation(line: 2553, column: 20, scope: !11163)
!11181 = !DILocation(line: 2554, column: 1, scope: !11154)
!11182 = distinct !DISubprogram(name: "maybe_downgrade_id_to_use", scope: !3, file: !3, line: 2558, type: !11183, scopeLine: 2559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11185)
!11183 = !DISubroutineType(types: !11184)
!11184 = !{null, !2471, !1892}
!11185 = !{!11186, !11187, !11188, !11189, !11190, !11251, !11252, !11253}
!11186 = !DILocalVariable(name: "id", arg: 1, scope: !11182, file: !3, line: 2558, type: !2471)
!11187 = !DILocalVariable(name: "insn", arg: 2, scope: !11182, file: !3, line: 2558, type: !1892)
!11188 = !DILocalVariable(name: "must_be_use", scope: !11182, file: !3, line: 2560, type: !637)
!11189 = !DILocalVariable(name: "uid", scope: !11182, file: !3, line: 2561, type: !7)
!11190 = !DILocalVariable(name: "rec", scope: !11182, file: !3, line: 2562, type: !11191)
!11191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11192, size: 64)
!11192 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_ref", file: !2090, line: 429, baseType: !11193)
!11193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11194, size: 64)
!11194 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "df_ref_d", file: !2090, line: 422, size: 704, elements: !11195)
!11195 = !{!11196, !11234, !11239, !11244}
!11196 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11194, file: !2090, line: 424, baseType: !11197, size: 512)
!11197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_base_ref", file: !2090, line: 356, size: 512, elements: !11198)
!11198 = !{!11199, !11200, !11201, !11202, !11203, !11209, !11229, !11230, !11231, !11232, !11233}
!11199 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !11197, file: !2090, line: 360, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!11200 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11197, file: !2090, line: 362, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!11201 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11197, file: !2090, line: 364, baseType: !638, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!11202 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !11197, file: !2090, line: 365, baseType: !645, size: 64, offset: 64)
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !11197, file: !2090, line: 366, baseType: !11204, size: 64, offset: 128)
!11204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11205, size: 64)
!11205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_link", file: !2090, line: 449, size: 128, elements: !11206)
!11206 = !{!11207, !11208}
!11207 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !11205, file: !2090, line: 451, baseType: !11192, size: 64)
!11208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11205, file: !2090, line: 452, baseType: !11204, size: 64, offset: 64)
!11209 = !DIDerivedType(tag: DW_TAG_member, name: "insn_info", scope: !11197, file: !2090, line: 370, baseType: !11210, size: 64, offset: 192)
!11210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11211, size: 64)
!11211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_insn_info", file: !2090, line: 433, size: 384, elements: !11212)
!11212 = !{!11213, !11214, !11215, !11216, !11217, !11228}
!11213 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !11211, file: !2090, line: 435, baseType: !645, size: 64)
!11214 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !11211, file: !2090, line: 436, baseType: !11191, size: 64, offset: 64)
!11215 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !11211, file: !2090, line: 437, baseType: !11191, size: 64, offset: 128)
!11216 = !DIDerivedType(tag: DW_TAG_member, name: "eq_uses", scope: !11211, file: !2090, line: 439, baseType: !11191, size: 64, offset: 192)
!11217 = !DIDerivedType(tag: DW_TAG_member, name: "mw_hardregs", scope: !11211, file: !2090, line: 440, baseType: !11218, size: 64, offset: 256)
!11218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11219, size: 64)
!11219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11220, size: 64)
!11220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_mw_hardreg", file: !2090, line: 339, size: 192, elements: !11221)
!11221 = !{!11222, !11223, !11224, !11225, !11226, !11227}
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "mw_reg", scope: !11220, file: !2090, line: 341, baseType: !645, size: 64)
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11220, file: !2090, line: 344, baseType: !7, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!11224 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11220, file: !2090, line: 346, baseType: !638, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 64)
!11225 = !DIDerivedType(tag: DW_TAG_member, name: "start_regno", scope: !11220, file: !2090, line: 347, baseType: !7, size: 32, offset: 96)
!11226 = !DIDerivedType(tag: DW_TAG_member, name: "end_regno", scope: !11220, file: !2090, line: 348, baseType: !7, size: 32, offset: 128)
!11227 = !DIDerivedType(tag: DW_TAG_member, name: "mw_order", scope: !11220, file: !2090, line: 349, baseType: !7, size: 32, offset: 160)
!11228 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !11211, file: !2090, line: 444, baseType: !638, size: 32, offset: 320)
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "next_reg", scope: !11197, file: !2090, line: 374, baseType: !11193, size: 64, offset: 256)
!11230 = !DIDerivedType(tag: DW_TAG_member, name: "prev_reg", scope: !11197, file: !2090, line: 375, baseType: !11193, size: 64, offset: 320)
!11231 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !11197, file: !2090, line: 376, baseType: !7, size: 32, offset: 384)
!11232 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11197, file: !2090, line: 379, baseType: !638, size: 32, offset: 416)
!11233 = !DIDerivedType(tag: DW_TAG_member, name: "ref_order", scope: !11197, file: !2090, line: 382, baseType: !7, size: 32, offset: 448)
!11234 = !DIDerivedType(tag: DW_TAG_member, name: "regular_ref", scope: !11194, file: !2090, line: 425, baseType: !11235, size: 576)
!11235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_regular_ref", file: !2090, line: 398, size: 576, elements: !11236)
!11236 = !{!11237, !11238}
!11237 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11235, file: !2090, line: 400, baseType: !11197, size: 512)
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !11235, file: !2090, line: 405, baseType: !1843, size: 64, offset: 512)
!11239 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_ref", scope: !11194, file: !2090, line: 426, baseType: !11240, size: 576)
!11240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_artificial_ref", file: !2090, line: 388, size: 576, elements: !11241)
!11241 = !{!11242, !11243}
!11242 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11240, file: !2090, line: 390, baseType: !11197, size: 512)
!11243 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !11240, file: !2090, line: 394, baseType: !1179, size: 64, offset: 512)
!11244 = !DIDerivedType(tag: DW_TAG_member, name: "extract_ref", scope: !11194, file: !2090, line: 427, baseType: !11245, size: 704)
!11245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_extract_ref", file: !2090, line: 413, size: 704, elements: !11246)
!11246 = !{!11247, !11248, !11249, !11250}
!11247 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11245, file: !2090, line: 415, baseType: !11235, size: 576)
!11248 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !11245, file: !2090, line: 416, baseType: !638, size: 32, offset: 576)
!11249 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !11245, file: !2090, line: 417, baseType: !638, size: 32, offset: 608)
!11250 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !11245, file: !2090, line: 418, baseType: !5, size: 32, offset: 640)
!11251 = !DILocalVariable(name: "lhs", scope: !11182, file: !3, line: 2563, type: !645)
!11252 = !DILocalVariable(name: "rhs", scope: !11182, file: !3, line: 2564, type: !645)
!11253 = !DILocalVariable(name: "def", scope: !11254, file: !3, line: 2578, type: !11192)
!11254 = distinct !DILexicalBlock(scope: !11255, file: !3, line: 2577, column: 5)
!11255 = distinct !DILexicalBlock(scope: !11256, file: !3, line: 2576, column: 3)
!11256 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 2576, column: 3)
!11257 = !DILocation(line: 0, scope: !11182)
!11258 = !DILocation(line: 2561, column: 18, scope: !11182)
!11259 = !DILocation(line: 2563, column: 13, scope: !11182)
!11260 = !DILocation(line: 2564, column: 13, scope: !11182)
!11261 = !DILocation(line: 2567, column: 7, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 2567, column: 7)
!11263 = !DILocation(line: 2567, column: 23, scope: !11262)
!11264 = !DILocation(line: 2567, column: 7, scope: !11182)
!11265 = !DILocation(line: 2570, column: 8, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 2570, column: 7)
!11267 = !DILocation(line: 2570, column: 12, scope: !11266)
!11268 = !DILocation(line: 2570, column: 16, scope: !11266)
!11269 = !DILocation(line: 2570, column: 7, scope: !11182)
!11270 = !DILocation(line: 2572, column: 23, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 2571, column: 5)
!11272 = !DILocation(line: 2573, column: 7, scope: !11271)
!11273 = !DILocation(line: 2576, column: 14, scope: !11256)
!11274 = !DILocation(line: 2576, column: 8, scope: !11256)
!11275 = !DILocation(line: 0, scope: !11256)
!11276 = !DILocation(line: 2576, column: 38, scope: !11255)
!11277 = !DILocation(line: 2576, column: 3, scope: !11256)
!11278 = !DILocation(line: 0, scope: !11254)
!11279 = !DILocation(line: 2580, column: 11, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11254, file: !3, line: 2580, column: 11)
!11281 = !DILocation(line: 2581, column: 11, scope: !11280)
!11282 = !DILocation(line: 2581, column: 14, scope: !11280)
!11283 = !DILocation(line: 2582, column: 11, scope: !11280)
!11284 = !DILocation(line: 2582, column: 34, scope: !11280)
!11285 = !DILocation(line: 2582, column: 52, scope: !11280)
!11286 = !DILocation(line: 2582, column: 14, scope: !11280)
!11287 = !DILocation(line: 2580, column: 11, scope: !11254)
!11288 = !DILocation(line: 2591, column: 11, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11254, file: !3, line: 2591, column: 11)
!11290 = !DILocation(line: 0, scope: !11255)
!11291 = !DILocation(line: 2576, column: 47, scope: !11255)
!11292 = !DILocation(line: 2576, column: 3, scope: !11255)
!11293 = distinct !{!11293, !11277, !11294}
!11294 = !DILocation(line: 2597, column: 5, scope: !11256)
!11295 = !DILocation(line: 2599, column: 7, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 2599, column: 7)
!11297 = !DILocation(line: 2599, column: 7, scope: !11182)
!11298 = !DILocation(line: 2600, column: 21, scope: !11296)
!11299 = !DILocation(line: 2600, column: 5, scope: !11296)
!11300 = !DILocation(line: 2601, column: 1, scope: !11182)
!11301 = distinct !DISubprogram(name: "setup_id_reg_sets", scope: !3, file: !3, line: 2605, type: !11183, scopeLine: 2606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11302)
!11302 = !{!11303, !11304, !11305, !11306, !11307, !11308, !11312, !11313, !11317}
!11303 = !DILocalVariable(name: "id", arg: 1, scope: !11301, file: !3, line: 2605, type: !2471)
!11304 = !DILocalVariable(name: "insn", arg: 2, scope: !11301, file: !3, line: 2605, type: !1892)
!11305 = !DILocalVariable(name: "uid", scope: !11301, file: !3, line: 2607, type: !7)
!11306 = !DILocalVariable(name: "rec", scope: !11301, file: !3, line: 2608, type: !11191)
!11307 = !DILocalVariable(name: "tmp", scope: !11301, file: !3, line: 2609, type: !1841)
!11308 = !DILocalVariable(name: "def", scope: !11309, file: !3, line: 2613, type: !11192)
!11309 = distinct !DILexicalBlock(scope: !11310, file: !3, line: 2612, column: 5)
!11310 = distinct !DILexicalBlock(scope: !11311, file: !3, line: 2611, column: 3)
!11311 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 2611, column: 3)
!11312 = !DILocalVariable(name: "regno", scope: !11309, file: !3, line: 2614, type: !7)
!11313 = !DILocalVariable(name: "use", scope: !11314, file: !3, line: 2639, type: !11192)
!11314 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 2638, column: 5)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !3, line: 2637, column: 3)
!11316 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 2637, column: 3)
!11317 = !DILocalVariable(name: "regno", scope: !11314, file: !3, line: 2640, type: !7)
!11318 = !DILocation(line: 0, scope: !11301)
!11319 = !DILocation(line: 2607, column: 18, scope: !11301)
!11320 = !DILocation(line: 2609, column: 16, scope: !11301)
!11321 = !DILocation(line: 2611, column: 14, scope: !11311)
!11322 = !DILocation(line: 0, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 2617, column: 11)
!11324 = !DILocation(line: 0, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11326, file: !3, line: 2621, column: 9)
!11326 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 2620, column: 16)
!11327 = !DILocation(line: 2611, column: 8, scope: !11311)
!11328 = !DILocation(line: 0, scope: !11311)
!11329 = !DILocation(line: 2611, column: 38, scope: !11310)
!11330 = !DILocation(line: 2611, column: 3, scope: !11311)
!11331 = !DILocation(line: 0, scope: !11309)
!11332 = !DILocation(line: 2614, column: 28, scope: !11309)
!11333 = !DILocation(line: 2617, column: 11, scope: !11323)
!11334 = !DILocation(line: 2617, column: 11, scope: !11309)
!11335 = !DILocation(line: 2619, column: 9, scope: !11323)
!11336 = !DILocation(line: 2620, column: 18, scope: !11326)
!11337 = !DILocation(line: 2620, column: 16, scope: !11323)
!11338 = !DILocation(line: 2622, column: 4, scope: !11325)
!11339 = !DILocation(line: 2627, column: 8, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 2627, column: 8)
!11341 = !DILocation(line: 2627, column: 8, scope: !11325)
!11342 = !DILocation(line: 2628, column: 6, scope: !11340)
!11343 = !DILocation(line: 2632, column: 11, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 2632, column: 11)
!11345 = !DILocation(line: 2633, column: 20, scope: !11344)
!11346 = !DILocation(line: 2633, column: 11, scope: !11344)
!11347 = !DILocation(line: 2634, column: 9, scope: !11344)
!11348 = !DILocation(line: 2611, column: 47, scope: !11310)
!11349 = !DILocation(line: 2611, column: 3, scope: !11310)
!11350 = distinct !{!11350, !11330, !11351}
!11351 = !DILocation(line: 2635, column: 5, scope: !11311)
!11352 = !DILocation(line: 2637, column: 14, scope: !11316)
!11353 = !DILocation(line: 0, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 2647, column: 2)
!11355 = distinct !DILexicalBlock(scope: !11356, file: !3, line: 2646, column: 16)
!11356 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 2644, column: 11)
!11357 = !DILocation(line: 2637, column: 8, scope: !11316)
!11358 = !DILocation(line: 0, scope: !11316)
!11359 = !DILocation(line: 2637, column: 38, scope: !11315)
!11360 = !DILocation(line: 2637, column: 3, scope: !11316)
!11361 = !DILocation(line: 0, scope: !11314)
!11362 = !DILocation(line: 2640, column: 28, scope: !11314)
!11363 = !DILocation(line: 2644, column: 11, scope: !11356)
!11364 = !DILocation(line: 2644, column: 11, scope: !11314)
!11365 = !DILocation(line: 2645, column: 9, scope: !11356)
!11366 = !DILocation(line: 2646, column: 18, scope: !11355)
!11367 = !DILocation(line: 2646, column: 16, scope: !11356)
!11368 = !DILocation(line: 2648, column: 4, scope: !11354)
!11369 = !DILocation(line: 2653, column: 8, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11354, file: !3, line: 2653, column: 8)
!11371 = !DILocation(line: 2653, column: 8, scope: !11354)
!11372 = !DILocation(line: 2654, column: 6, scope: !11370)
!11373 = !DILocation(line: 2637, column: 47, scope: !11315)
!11374 = !DILocation(line: 2637, column: 3, scope: !11315)
!11375 = distinct !{!11375, !11360, !11376}
!11376 = !DILocation(line: 2657, column: 5, scope: !11316)
!11377 = !DILocation(line: 2659, column: 3, scope: !11301)
!11378 = !DILocation(line: 2660, column: 1, scope: !11301)
!11379 = distinct !DISubprogram(name: "lhs_and_rhs_separable_p", scope: !3, file: !3, line: 1133, type: !11380, scopeLine: 1134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11382)
!11380 = !DISubroutineType(types: !11381)
!11381 = !{!637, !645, !645}
!11382 = !{!11383, !11384}
!11383 = !DILocalVariable(name: "lhs", arg: 1, scope: !11379, file: !3, line: 1133, type: !645)
!11384 = !DILocalVariable(name: "rhs", arg: 2, scope: !11379, file: !3, line: 1133, type: !645)
!11385 = !DILocation(line: 0, scope: !11379)
!11386 = !DILocation(line: 1135, column: 11, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 1135, column: 7)
!11388 = !DILocation(line: 1135, column: 26, scope: !11387)
!11389 = !DILocation(line: 1135, column: 19, scope: !11387)
!11390 = !DILocation(line: 1142, column: 7, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 1142, column: 7)
!11392 = !DILocation(line: 1142, column: 7, scope: !11379)
!11393 = !DILocation(line: 1146, column: 7, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 1146, column: 7)
!11395 = !DILocation(line: 1146, column: 7, scope: !11379)
!11396 = !DILocation(line: 1150, column: 7, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 1150, column: 7)
!11398 = !DILocation(line: 1150, column: 7, scope: !11379)
!11399 = !DILocation(line: 1156, column: 7, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 1156, column: 7)
!11401 = !DILocation(line: 1156, column: 7, scope: !11379)
!11402 = !DILocation(line: 1161, column: 8, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 1161, column: 7)
!11404 = !DILocation(line: 1161, column: 20, scope: !11403)
!11405 = !DILocation(line: 1161, column: 7, scope: !11379)
!11406 = !DILocation(line: 1164, column: 3, scope: !11379)
!11407 = !DILocation(line: 1165, column: 1, scope: !11379)
!11408 = distinct !DISubprogram(name: "deps_init_id_start_insn", scope: !3, file: !3, line: 2389, type: !3245, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11409)
!11409 = !{!11410}
!11410 = !DILocalVariable(name: "insn", arg: 1, scope: !11408, file: !3, line: 2389, type: !1892)
!11411 = !DILocation(line: 0, scope: !11408)
!11412 = !DILocation(line: 2391, column: 3, scope: !11408)
!11413 = !DILocation(line: 2393, column: 40, scope: !11408)
!11414 = !DILocation(line: 2394, column: 40, scope: !11408)
!11415 = !DILocation(line: 2393, column: 3, scope: !11408)
!11416 = !DILocation(line: 2395, column: 27, scope: !11408)
!11417 = !DILocation(line: 2396, column: 1, scope: !11408)
!11418 = distinct !DISubprogram(name: "deps_init_id_finish_insn", scope: !3, file: !3, line: 2487, type: !2396, scopeLine: 2488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11419)
!11419 = !{!11420, !11423}
!11420 = !DILocalVariable(name: "lhs", scope: !11421, file: !3, line: 2493, type: !645)
!11421 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 2492, column: 5)
!11422 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 2491, column: 7)
!11423 = !DILocalVariable(name: "rhs", scope: !11421, file: !3, line: 2494, type: !645)
!11424 = !DILocation(line: 2489, column: 3, scope: !11418)
!11425 = !DILocation(line: 2491, column: 7, scope: !11422)
!11426 = !DILocation(line: 2491, column: 41, scope: !11422)
!11427 = !DILocation(line: 2491, column: 7, scope: !11418)
!11428 = !DILocation(line: 2493, column: 17, scope: !11421)
!11429 = !DILocation(line: 0, scope: !11421)
!11430 = !DILocation(line: 2494, column: 17, scope: !11421)
!11431 = !DILocation(line: 2496, column: 15, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11421, file: !3, line: 2496, column: 11)
!11433 = !DILocation(line: 2496, column: 30, scope: !11432)
!11434 = !DILocation(line: 2496, column: 23, scope: !11432)
!11435 = !DILocation(line: 2496, column: 42, scope: !11432)
!11436 = !DILocation(line: 2497, column: 4, scope: !11432)
!11437 = !DILocation(line: 2497, column: 25, scope: !11432)
!11438 = !DILocation(line: 2496, column: 11, scope: !11421)
!11439 = !DILocation(line: 2503, column: 4, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 2498, column: 2)
!11441 = !DILocation(line: 2504, column: 4, scope: !11440)
!11442 = !DILocation(line: 2506, column: 4, scope: !11440)
!11443 = !DILocation(line: 2506, column: 38, scope: !11440)
!11444 = !DILocation(line: 2507, column: 2, scope: !11440)
!11445 = !DILocation(line: 2510, column: 27, scope: !11418)
!11446 = !DILocation(line: 2511, column: 1, scope: !11418)
!11447 = distinct !DISubprogram(name: "deps_init_id_start_lhs", scope: !3, file: !3, line: 2400, type: !2392, scopeLine: 2401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11448)
!11448 = !{!11449}
!11449 = !DILocalVariable(name: "lhs", arg: 1, scope: !11447, file: !3, line: 2400, type: !645)
!11450 = !DILocation(line: 0, scope: !11447)
!11451 = !DILocation(line: 2402, column: 3, scope: !11447)
!11452 = !DILocation(line: 2403, column: 3, scope: !11447)
!11453 = !DILocation(line: 2405, column: 7, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11447, file: !3, line: 2405, column: 7)
!11455 = !DILocation(line: 2405, column: 41, scope: !11454)
!11456 = !DILocation(line: 2405, column: 7, scope: !11447)
!11457 = !DILocation(line: 2407, column: 7, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11454, file: !3, line: 2406, column: 5)
!11459 = !DILocation(line: 2407, column: 40, scope: !11458)
!11460 = !DILocation(line: 2408, column: 31, scope: !11458)
!11461 = !DILocation(line: 2409, column: 5, scope: !11458)
!11462 = !DILocation(line: 2410, column: 1, scope: !11447)
!11463 = distinct !DISubprogram(name: "deps_init_id_finish_lhs", scope: !3, file: !3, line: 2414, type: !2396, scopeLine: 2415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!11464 = !DILocation(line: 2416, column: 27, scope: !11463)
!11465 = !DILocation(line: 2417, column: 1, scope: !11463)
!11466 = distinct !DISubprogram(name: "deps_init_id_start_rhs", scope: !3, file: !3, line: 2464, type: !2392, scopeLine: 2465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11467)
!11467 = !{!11468}
!11468 = !DILocalVariable(name: "rhs", arg: 1, scope: !11466, file: !3, line: 2464, type: !645)
!11469 = !DILocation(line: 0, scope: !11466)
!11470 = !DILocation(line: 2466, column: 3, scope: !11466)
!11471 = !DILocation(line: 2469, column: 7, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 2469, column: 7)
!11473 = !DILocation(line: 2469, column: 40, scope: !11472)
!11474 = !DILocation(line: 2469, column: 7, scope: !11466)
!11475 = !DILocation(line: 2471, column: 7, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11472, file: !3, line: 2470, column: 5)
!11477 = !DILocation(line: 2471, column: 40, scope: !11476)
!11478 = !DILocation(line: 2472, column: 31, scope: !11476)
!11479 = !DILocation(line: 2473, column: 5, scope: !11476)
!11480 = !DILocation(line: 2474, column: 1, scope: !11466)
!11481 = distinct !DISubprogram(name: "deps_init_id_finish_rhs", scope: !3, file: !3, line: 2478, type: !2396, scopeLine: 2479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!11482 = !DILocation(line: 2480, column: 3, scope: !11481)
!11483 = !DILocation(line: 2482, column: 27, scope: !11481)
!11484 = !DILocation(line: 2483, column: 1, scope: !11481)
!11485 = distinct !DISubprogram(name: "deps_init_id_note_reg_set", scope: !3, file: !3, line: 2421, type: !2404, scopeLine: 2422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11486)
!11486 = !{!11487}
!11487 = !DILocalVariable(name: "regno", arg: 1, scope: !11485, file: !3, line: 2421, type: !638)
!11488 = !DILocation(line: 0, scope: !11485)
!11489 = !DILocation(line: 2423, column: 3, scope: !11485)
!11490 = !DILocation(line: 2425, column: 25, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 2425, column: 7)
!11492 = !DILocation(line: 2425, column: 31, scope: !11491)
!11493 = !DILocation(line: 2425, column: 7, scope: !11485)
!11494 = !DILocation(line: 2426, column: 35, scope: !11491)
!11495 = !DILocation(line: 2426, column: 5, scope: !11491)
!11496 = !DILocation(line: 2428, column: 7, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 2428, column: 7)
!11498 = !DILocation(line: 2428, column: 41, scope: !11497)
!11499 = !DILocation(line: 2428, column: 7, scope: !11485)
!11500 = !DILocation(line: 2429, column: 5, scope: !11497)
!11501 = !DILocation(line: 2434, column: 7, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 2434, column: 7)
!11503 = !DILocation(line: 2434, column: 7, scope: !11485)
!11504 = !DILocation(line: 2435, column: 35, scope: !11502)
!11505 = !DILocation(line: 2435, column: 5, scope: !11502)
!11506 = !DILocation(line: 2437, column: 1, scope: !11485)
!11507 = distinct !DISubprogram(name: "deps_init_id_note_reg_clobber", scope: !3, file: !3, line: 2441, type: !2404, scopeLine: 2442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11508)
!11508 = !{!11509}
!11509 = !DILocalVariable(name: "regno", arg: 1, scope: !11507, file: !3, line: 2441, type: !638)
!11510 = !DILocation(line: 0, scope: !11507)
!11511 = !DILocation(line: 2443, column: 3, scope: !11507)
!11512 = !DILocation(line: 2445, column: 25, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 2445, column: 7)
!11514 = !DILocation(line: 2445, column: 31, scope: !11513)
!11515 = !DILocation(line: 2445, column: 7, scope: !11507)
!11516 = !DILocation(line: 2446, column: 35, scope: !11513)
!11517 = !DILocation(line: 2446, column: 5, scope: !11513)
!11518 = !DILocation(line: 2448, column: 7, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 2448, column: 7)
!11520 = !DILocation(line: 2448, column: 41, scope: !11519)
!11521 = !DILocation(line: 2448, column: 7, scope: !11507)
!11522 = !DILocation(line: 2449, column: 5, scope: !11519)
!11523 = !DILocation(line: 2450, column: 1, scope: !11507)
!11524 = distinct !DISubprogram(name: "deps_init_id_note_reg_use", scope: !3, file: !3, line: 2454, type: !2404, scopeLine: 2455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11525)
!11525 = !{!11526}
!11526 = !DILocalVariable(name: "regno", arg: 1, scope: !11524, file: !3, line: 2454, type: !638)
!11527 = !DILocation(line: 0, scope: !11524)
!11528 = !DILocation(line: 2456, column: 3, scope: !11524)
!11529 = !DILocation(line: 2458, column: 7, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 2458, column: 7)
!11531 = !DILocation(line: 2458, column: 41, scope: !11530)
!11532 = !DILocation(line: 2458, column: 7, scope: !11524)
!11533 = !DILocation(line: 2459, column: 5, scope: !11530)
!11534 = !DILocation(line: 2460, column: 1, scope: !11524)
!11535 = distinct !DISubprogram(name: "number_of_loops", scope: !142, file: !142, line: 459, type: !11536, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!11536 = !DISubroutineType(types: !11537)
!11537 = !{!7}
!11538 = !DILocation(line: 461, column: 8, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11535, file: !142, line: 461, column: 7)
!11540 = !DILocation(line: 461, column: 7, scope: !11535)
!11541 = !DILocation(line: 464, column: 10, scope: !11535)
!11542 = !DILocation(line: 464, column: 3, scope: !11535)
!11543 = !DILocation(line: 0, scope: !11535)
!11544 = !DILocation(line: 465, column: 1, scope: !11535)
!11545 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !142, file: !142, line: 85, type: !11546, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11548)
!11546 = !DISubroutineType(types: !11547)
!11547 = !{!638, !8884, !7, !8957}
!11548 = !{!11549, !11550, !11551}
!11549 = !DILocalVariable(name: "vec_", arg: 1, scope: !11545, file: !142, line: 85, type: !8884)
!11550 = !DILocalVariable(name: "ix_", arg: 2, scope: !11545, file: !142, line: 85, type: !7)
!11551 = !DILocalVariable(name: "ptr", arg: 3, scope: !11545, file: !142, line: 85, type: !8957)
!11552 = !DILocation(line: 0, scope: !11545)
!11553 = !DILocation(line: 85, column: 1, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11545, file: !142, line: 85, column: 1)
!11555 = !DILocation(line: 85, column: 1, scope: !11545)
!11556 = !DILocation(line: 85, column: 1, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11554, file: !142, line: 85, column: 1)
!11558 = !DILocation(line: 85, column: 1, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11554, file: !142, line: 85, column: 1)
!11560 = !DILocation(line: 0, scope: !11554)
!11561 = distinct !DISubprogram(name: "VEC_int_base_iterate", scope: !1162, file: !1162, line: 31, type: !11562, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11564)
!11562 = !DISubroutineType(types: !11563)
!11563 = !{!638, !4186, !7, !1839}
!11564 = !{!11565, !11566, !11567}
!11565 = !DILocalVariable(name: "vec_", arg: 1, scope: !11561, file: !1162, line: 31, type: !4186)
!11566 = !DILocalVariable(name: "ix_", arg: 2, scope: !11561, file: !1162, line: 31, type: !7)
!11567 = !DILocalVariable(name: "ptr", arg: 3, scope: !11561, file: !1162, line: 31, type: !1839)
!11568 = !DILocation(line: 0, scope: !11561)
!11569 = !DILocation(line: 31, column: 1, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11561, file: !1162, line: 31, column: 1)
!11571 = !DILocation(line: 31, column: 1, scope: !11561)
!11572 = !DILocation(line: 31, column: 1, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11570, file: !1162, line: 31, column: 1)
!11574 = !DILocation(line: 31, column: 1, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11570, file: !1162, line: 31, column: 1)
!11576 = !DILocation(line: 0, scope: !11570)
!11577 = distinct !DISubprogram(name: "get_loop", scope: !142, file: !142, line: 417, type: !11578, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11580)
!11578 = !DISubroutineType(types: !11579)
!11579 = !{!1221, !7}
!11580 = !{!11581}
!11581 = !DILocalVariable(name: "num", arg: 1, scope: !11577, file: !142, line: 417, type: !7)
!11582 = !DILocation(line: 0, scope: !11577)
!11583 = !DILocation(line: 419, column: 10, scope: !11577)
!11584 = !DILocation(line: 419, column: 3, scope: !11577)
!11585 = distinct !DISubprogram(name: "make_region_from_loop", scope: !3, file: !3, line: 5750, type: !11586, scopeLine: 5751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11588)
!11586 = !DISubroutineType(types: !11587)
!11587 = !{!638, !1221}
!11588 = !{!11589, !11590, !11591, !11592, !11593, !11594, !11595}
!11589 = !DILocalVariable(name: "loop", arg: 1, scope: !11585, file: !3, line: 5750, type: !1221)
!11590 = !DILocalVariable(name: "i", scope: !11585, file: !3, line: 5752, type: !7)
!11591 = !DILocalVariable(name: "new_rgn_number", scope: !11585, file: !3, line: 5753, type: !638)
!11592 = !DILocalVariable(name: "inner", scope: !11585, file: !3, line: 5754, type: !1221)
!11593 = !DILocalVariable(name: "bb_ord_index", scope: !11585, file: !3, line: 5757, type: !638)
!11594 = !DILocalVariable(name: "loop_blocks", scope: !11585, file: !3, line: 5758, type: !6324)
!11595 = !DILocalVariable(name: "preheader_block", scope: !11585, file: !3, line: 5759, type: !1179)
!11596 = !DILocation(line: 0, scope: !11585)
!11597 = !DILocation(line: 5757, column: 3, scope: !11585)
!11598 = !DILocation(line: 5757, column: 7, scope: !11585)
!11599 = !DILocation(line: 5761, column: 13, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 5761, column: 7)
!11601 = !DILocation(line: 5762, column: 20, scope: !11600)
!11602 = !DILocation(line: 5762, column: 7, scope: !11600)
!11603 = !DILocation(line: 5761, column: 7, scope: !11585)
!11604 = !DILocation(line: 0, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11606, file: !3, line: 5767, column: 9)
!11606 = distinct !DILexicalBlock(scope: !11607, file: !3, line: 5766, column: 3)
!11607 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 5766, column: 3)
!11608 = !DILocation(line: 5766, column: 8, scope: !11607)
!11609 = !DILocation(line: 0, scope: !11607)
!11610 = !DILocation(line: 5766, column: 3, scope: !11607)
!11611 = !DILocation(line: 5767, column: 45, scope: !11605)
!11612 = !DILocation(line: 5767, column: 9, scope: !11605)
!11613 = !DILocation(line: 5767, column: 9, scope: !11606)
!11614 = !DILocation(line: 5766, column: 3, scope: !11606)
!11615 = distinct !{!11615, !11610, !11616}
!11616 = !DILocation(line: 5768, column: 15, scope: !11607)
!11617 = !DILocation(line: 5770, column: 18, scope: !11585)
!11618 = !DILocation(line: 5770, column: 9, scope: !11585)
!11619 = !DILocation(line: 5770, column: 16, scope: !11585)
!11620 = !DILocation(line: 5771, column: 28, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 5771, column: 7)
!11622 = !DILocation(line: 5771, column: 26, scope: !11621)
!11623 = !DILocation(line: 5771, column: 7, scope: !11585)
!11624 = !DILocation(line: 5774, column: 17, scope: !11585)
!11625 = !DILocation(line: 0, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11627, file: !3, line: 5776, column: 3)
!11627 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 5776, column: 3)
!11628 = !DILocation(line: 5776, column: 8, scope: !11627)
!11629 = !DILocation(line: 0, scope: !11627)
!11630 = !DILocation(line: 5776, column: 17, scope: !11626)
!11631 = !DILocation(line: 5776, column: 3, scope: !11627)
!11632 = !DILocation(line: 5777, column: 9, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11626, file: !3, line: 5777, column: 9)
!11634 = !DILocation(line: 5777, column: 25, scope: !11633)
!11635 = !DILocation(line: 5777, column: 31, scope: !11633)
!11636 = !DILocation(line: 5777, column: 9, scope: !11626)
!11637 = !DILocation(line: 5779, column: 8, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 5778, column: 7)
!11639 = !DILocation(line: 5779, column: 2, scope: !11638)
!11640 = !DILocation(line: 5780, column: 2, scope: !11638)
!11641 = !DILocation(line: 5776, column: 37, scope: !11626)
!11642 = !DILocation(line: 5776, column: 3, scope: !11626)
!11643 = distinct !{!11643, !11631, !11644}
!11644 = !DILocation(line: 5781, column: 7, scope: !11627)
!11645 = !DILocation(line: 5783, column: 21, scope: !11585)
!11646 = !DILocation(line: 5783, column: 49, scope: !11585)
!11647 = !DILocation(line: 5784, column: 3, scope: !11585)
!11648 = !DILocation(line: 5785, column: 3, scope: !11585)
!11649 = !DILocation(line: 5787, column: 20, scope: !11585)
!11650 = !DILocation(line: 5789, column: 3, scope: !11585)
!11651 = !DILocation(line: 5790, column: 12, scope: !11585)
!11652 = !DILocation(line: 5790, column: 47, scope: !11585)
!11653 = !DILocation(line: 5790, column: 3, scope: !11585)
!11654 = !DILocation(line: 0, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 5793, column: 5)
!11656 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 5792, column: 3)
!11657 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 5792, column: 3)
!11658 = !DILocation(line: 5792, column: 8, scope: !11657)
!11659 = !DILocation(line: 0, scope: !11657)
!11660 = !DILocation(line: 5792, column: 25, scope: !11656)
!11661 = !DILocation(line: 5792, column: 17, scope: !11656)
!11662 = !DILocation(line: 5792, column: 3, scope: !11657)
!11663 = !DILocation(line: 5801, column: 13, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 5801, column: 11)
!11665 = !DILocation(line: 5801, column: 11, scope: !11655)
!11666 = !DILocation(line: 5803, column: 4, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 5802, column: 2)
!11668 = !DILocation(line: 5805, column: 13, scope: !11667)
!11669 = !DILocation(line: 5805, column: 31, scope: !11667)
!11670 = !DILocation(line: 5805, column: 47, scope: !11667)
!11671 = !DILocation(line: 5805, column: 4, scope: !11667)
!11672 = !DILocation(line: 5806, column: 2, scope: !11667)
!11673 = !DILocation(line: 5792, column: 37, scope: !11656)
!11674 = !DILocation(line: 5792, column: 3, scope: !11656)
!11675 = distinct !{!11675, !11662, !11676}
!11676 = !DILocation(line: 5807, column: 5, scope: !11657)
!11677 = !DILocation(line: 5809, column: 9, scope: !11585)
!11678 = !DILocation(line: 5799, column: 7, scope: !11655)
!11679 = !DILocation(line: 5809, column: 3, scope: !11585)
!11680 = !DILocation(line: 5810, column: 3, scope: !11585)
!11681 = !DILocation(line: 5812, column: 3, scope: !11585)
!11682 = !DILocation(line: 5813, column: 1, scope: !11585)
!11683 = distinct !DISubprogram(name: "VEC_loop_p_heap_safe_push", scope: !142, file: !142, line: 86, type: !11684, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11686)
!11684 = !DISubroutineType(types: !11685)
!11685 = !{!8957, !9119, !1248}
!11686 = !{!11687, !11688}
!11687 = !DILocalVariable(name: "vec_", arg: 1, scope: !11683, file: !142, line: 86, type: !9119)
!11688 = !DILocalVariable(name: "obj_", arg: 2, scope: !11683, file: !142, line: 86, type: !1248)
!11689 = !DILocation(line: 0, scope: !11683)
!11690 = !DILocation(line: 86, column: 1, scope: !11683)
!11691 = distinct !DISubprogram(name: "bb_top_order_comparator", scope: !3, file: !3, line: 5730, type: !1107, scopeLine: 5731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11692)
!11692 = !{!11693, !11694, !11695, !11696}
!11693 = !DILocalVariable(name: "x", arg: 1, scope: !11691, file: !3, line: 5730, type: !1102)
!11694 = !DILocalVariable(name: "y", arg: 2, scope: !11691, file: !3, line: 5730, type: !1102)
!11695 = !DILocalVariable(name: "bb1", scope: !11691, file: !3, line: 5732, type: !1179)
!11696 = !DILocalVariable(name: "bb2", scope: !11691, file: !3, line: 5733, type: !1179)
!11697 = !DILocation(line: 0, scope: !11691)
!11698 = !DILocation(line: 5732, column: 22, scope: !11691)
!11699 = !DILocation(line: 5732, column: 21, scope: !11691)
!11700 = !DILocation(line: 5733, column: 22, scope: !11691)
!11701 = !DILocation(line: 5733, column: 21, scope: !11691)
!11702 = !DILocation(line: 5735, column: 3, scope: !11691)
!11703 = !DILocation(line: 5741, column: 7, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 5741, column: 7)
!11705 = !DILocation(line: 5741, column: 32, scope: !11704)
!11706 = !DILocation(line: 5741, column: 66, scope: !11704)
!11707 = !DILocation(line: 5741, column: 41, scope: !11704)
!11708 = !DILocation(line: 5741, column: 39, scope: !11704)
!11709 = !DILocation(line: 0, scope: !11704)
!11710 = !DILocation(line: 5745, column: 1, scope: !11691)
!11711 = distinct !DISubprogram(name: "SET_BIT", scope: !2317, file: !2317, line: 63, type: !11712, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11714)
!11712 = !DISubroutineType(types: !11713)
!11713 = !{null, !2316, !7}
!11714 = !{!11715, !11716, !11717}
!11715 = !DILocalVariable(name: "map", arg: 1, scope: !11711, file: !2317, line: 63, type: !2316)
!11716 = !DILocalVariable(name: "bitno", arg: 2, scope: !11711, file: !2317, line: 63, type: !7)
!11717 = !DILocalVariable(name: "oldbit", scope: !11718, file: !2317, line: 67, type: !637)
!11718 = distinct !DILexicalBlock(scope: !11719, file: !2317, line: 66, column: 5)
!11719 = distinct !DILexicalBlock(scope: !11711, file: !2317, line: 65, column: 7)
!11720 = !DILocation(line: 0, scope: !11711)
!11721 = !DILocation(line: 65, column: 12, scope: !11719)
!11722 = !DILocation(line: 65, column: 7, scope: !11719)
!11723 = !DILocation(line: 65, column: 7, scope: !11711)
!11724 = !DILocation(line: 73, column: 40, scope: !11711)
!11725 = !DILocation(line: 73, column: 29, scope: !11711)
!11726 = !DILocation(line: 72, column: 19, scope: !11711)
!11727 = !DILocation(line: 72, column: 3, scope: !11711)
!11728 = !DILocation(line: 68, column: 16, scope: !11718)
!11729 = !DILocation(line: 69, column: 12, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11718, file: !2317, line: 69, column: 11)
!11731 = !DILocation(line: 69, column: 11, scope: !11718)
!11732 = !DILocation(line: 70, column: 2, scope: !11730)
!11733 = !DILocation(line: 70, column: 41, scope: !11730)
!11734 = !DILocation(line: 73, column: 5, scope: !11711)
!11735 = !DILocation(line: 74, column: 1, scope: !11711)
!11736 = distinct !DISubprogram(name: "VEC_loop_p_heap_reserve", scope: !142, file: !142, line: 86, type: !11737, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11739)
!11737 = !DISubroutineType(types: !11738)
!11738 = !{!638, !9119, !638}
!11739 = !{!11740, !11741, !11742}
!11740 = !DILocalVariable(name: "vec_", arg: 1, scope: !11736, file: !142, line: 86, type: !9119)
!11741 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11736, file: !142, line: 86, type: !638)
!11742 = !DILocalVariable(name: "extend", scope: !11736, file: !142, line: 86, type: !638)
!11743 = !DILocation(line: 0, scope: !11736)
!11744 = !DILocation(line: 86, column: 1, scope: !11736)
!11745 = !DILocation(line: 86, column: 1, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11736, file: !142, line: 86, column: 1)
!11747 = distinct !DISubprogram(name: "VEC_loop_p_base_quick_push", scope: !142, file: !142, line: 85, type: !11748, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11751)
!11748 = !DISubroutineType(types: !11749)
!11749 = !{!8957, !11750, !1248}
!11750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!11751 = !{!11752, !11753, !11754}
!11752 = !DILocalVariable(name: "vec_", arg: 1, scope: !11747, file: !142, line: 85, type: !11750)
!11753 = !DILocalVariable(name: "obj_", arg: 2, scope: !11747, file: !142, line: 85, type: !1248)
!11754 = !DILocalVariable(name: "slot_", scope: !11747, file: !142, line: 85, type: !8957)
!11755 = !DILocation(line: 0, scope: !11747)
!11756 = !DILocation(line: 85, column: 1, scope: !11747)
!11757 = distinct !DISubprogram(name: "VEC_loop_p_base_space", scope: !142, file: !142, line: 85, type: !11758, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11760)
!11758 = !DISubroutineType(types: !11759)
!11759 = !{!638, !11750, !638}
!11760 = !{!11761, !11762}
!11761 = !DILocalVariable(name: "vec_", arg: 1, scope: !11757, file: !142, line: 85, type: !11750)
!11762 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11757, file: !142, line: 85, type: !638)
!11763 = !DILocation(line: 0, scope: !11757)
!11764 = !DILocation(line: 85, column: 1, scope: !11757)
!11765 = distinct !DISubprogram(name: "VEC_basic_block_heap_reserve", scope: !155, file: !155, line: 283, type: !11766, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11768)
!11766 = !DISubroutineType(types: !11767)
!11767 = !{!638, !6378, !638}
!11768 = !{!11769, !11770, !11771}
!11769 = !DILocalVariable(name: "vec_", arg: 1, scope: !11765, file: !155, line: 283, type: !6378)
!11770 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11765, file: !155, line: 283, type: !638)
!11771 = !DILocalVariable(name: "extend", scope: !11765, file: !155, line: 283, type: !638)
!11772 = !DILocation(line: 0, scope: !11765)
!11773 = !DILocation(line: 283, column: 1, scope: !11765)
!11774 = !DILocation(line: 283, column: 1, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11765, file: !155, line: 283, column: 1)
!11776 = distinct !DISubprogram(name: "VEC_basic_block_base_space", scope: !155, file: !155, line: 281, type: !11777, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11779)
!11777 = !DISubroutineType(types: !11778)
!11778 = !{!638, !6325, !638}
!11779 = !{!11780, !11781}
!11780 = !DILocalVariable(name: "vec_", arg: 1, scope: !11776, file: !155, line: 281, type: !6325)
!11781 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11776, file: !155, line: 281, type: !638)
!11782 = !DILocation(line: 0, scope: !11776)
!11783 = !DILocation(line: 281, column: 1, scope: !11776)
