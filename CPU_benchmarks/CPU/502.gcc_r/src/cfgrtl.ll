; ModuleID = 'cfgrtl.bc'
source_filename = "cfgrtl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type opaque
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.cfg_hooks = type { i8*, i32 ()*, void (%struct.basic_block_def*, %struct._IO_FILE*, i32, i32)*, %struct.basic_block_def* (i8*, i8*, %struct.basic_block_def*)*, %struct.edge_def* (%struct.edge_def*, %struct.basic_block_def*)*, %struct.basic_block_def* (%struct.edge_def*, %struct.basic_block_def*)*, i8 (%struct.edge_def*)*, void (%struct.basic_block_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, i8*)*, i8 (%struct.basic_block_def*, %struct.basic_block_def*)*, i8 (%struct.basic_block_def*, %struct.basic_block_def*)*, void (%struct.basic_block_def*, %struct.basic_block_def*)*, void (%struct.edge_def*, i32, i32)*, i8 (%struct.basic_block_def*, i32)*, i8 (%struct.basic_block_def*)*, %struct.basic_block_def* (%struct.basic_block_def*)*, %struct.basic_block_def* (%struct.edge_def*)*, void (%struct.edge_def*)*, void (%struct.edge_def*)*, i8 (%struct.basic_block_def*)*, i8 (%struct.basic_block_def*)*, i32 (%struct.simple_bitmap_def*)*, void (%struct.edge_def*)*, void (%struct.edge_def*)*, i8 (%struct.loop*, %struct.edge_def*, i32, %struct.simple_bitmap_def*, %struct.edge_def*, %struct.VEC_edge_heap**, i32)*, void (%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, i8*)*, void (%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.edge_def*)*, void (%struct.basic_block_def*, %struct.edge_def**, %struct.edge_def**)*, void (%struct.edge_def*)* }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.VEC_edge_heap = type { %struct.VEC_edge_base }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@x_rtl = external dso_local global %struct.rtl_data, align 8
@.str = private unnamed_addr constant [9 x i8] c"cfgrtl.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"*free_cfg\00", align 1
@pass_free_cfg = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i8 ()* null, i32 ()* @rest_of_pass_free_cfg, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 8, i32 0, i32 0 } }, align 8, !dbg !0
@optimize = external dso_local local_unnamed_addr global i32, align 4
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [19 x i8] c"Removing jump %i.\0A\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"Redirecting jump %i from %i to %i.\0A\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"Replacing insn %i by jump %i\0A\00", align 1
@flag_reorder_blocks_and_partition = external dso_local local_unnamed_addr global i32, align 4
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str.6 = private unnamed_addr constant [7 x i8] c"(nil)\0A\00", align 1
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@.str.7 = private unnamed_addr constant [26 x i8] c";; Start of basic block (\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c") -> %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c";; Pred edge \00", align 1
@.str.11 = private unnamed_addr constant [37 x i8] c";; Insn is not within a basic block\0A\00", align 1
@.str.12 = private unnamed_addr constant [37 x i8] c";; Insn is in multiple basic blocks\0A\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c";; End of basic block %d -> (\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c";; Succ edge \00", align 1
@.str.16 = private unnamed_addr constant [36 x i8] c"\0A;; Insns in epilogue delay list:\0A\0A\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"Purged edges from bb %i\0A\00", align 1
@.str.18 = private unnamed_addr constant [38 x i8] c"Purged non-fallthru edges from bb %i\0A\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"rtl\00", align 1
@rtl_cfg_hooks = dso_local local_unnamed_addr global %struct.cfg_hooks { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i32 ()* @rtl_verify_flow_info, void (%struct.basic_block_def*, %struct._IO_FILE*, i32, i32)* @rtl_dump_bb, %struct.basic_block_def* (i8*, i8*, %struct.basic_block_def*)* @rtl_create_basic_block, %struct.edge_def* (%struct.edge_def*, %struct.basic_block_def*)* @rtl_redirect_edge_and_branch, %struct.basic_block_def* (%struct.edge_def*, %struct.basic_block_def*)* @rtl_redirect_edge_and_branch_force, i8 (%struct.edge_def*)* @rtl_can_remove_branch_p, void (%struct.basic_block_def*)* @rtl_delete_block, %struct.basic_block_def* (%struct.basic_block_def*, i8*)* @rtl_split_block, i8 (%struct.basic_block_def*, %struct.basic_block_def*)* @rtl_move_block_after, i8 (%struct.basic_block_def*, %struct.basic_block_def*)* @rtl_can_merge_blocks, void (%struct.basic_block_def*, %struct.basic_block_def*)* @rtl_merge_blocks, void (%struct.edge_def*, i32, i32)* @rtl_predict_edge, i8 (%struct.basic_block_def*, i32)* @rtl_predicted_by_p, i8 (%struct.basic_block_def*)* null, %struct.basic_block_def* (%struct.basic_block_def*)* null, %struct.basic_block_def* (%struct.edge_def*)* @rtl_split_edge, void (%struct.edge_def*)* @rtl_make_forwarder_block, void (%struct.edge_def*)* @rtl_tidy_fallthru_edge, i8 (%struct.basic_block_def*)* @rtl_block_ends_with_call_p, i8 (%struct.basic_block_def*)* @rtl_block_ends_with_condjump_p, i32 (%struct.simple_bitmap_def*)* @rtl_flow_call_edges_add, void (%struct.edge_def*)* null, void (%struct.edge_def*)* null, i8 (%struct.loop*, %struct.edge_def*, i32, %struct.simple_bitmap_def*, %struct.edge_def*, %struct.VEC_edge_heap**, i32)* null, void (%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, i8*)* null, void (%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.edge_def*)* null, void (%struct.basic_block_def*, %struct.edge_def**, %struct.edge_def**)* null, void (%struct.edge_def*)* null }, align 8, !dbg !2093
@.str.20 = private unnamed_addr constant [15 x i8] c"cfglayout mode\00", align 1
@cfg_layout_rtl_cfg_hooks = dso_local local_unnamed_addr global %struct.cfg_hooks { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i32 0, i32 0), i32 ()* @rtl_verify_flow_info_1, void (%struct.basic_block_def*, %struct._IO_FILE*, i32, i32)* @rtl_dump_bb, %struct.basic_block_def* (i8*, i8*, %struct.basic_block_def*)* @cfg_layout_create_basic_block, %struct.edge_def* (%struct.edge_def*, %struct.basic_block_def*)* @cfg_layout_redirect_edge_and_branch, %struct.basic_block_def* (%struct.edge_def*, %struct.basic_block_def*)* @cfg_layout_redirect_edge_and_branch_force, i8 (%struct.edge_def*)* @rtl_can_remove_branch_p, void (%struct.basic_block_def*)* @cfg_layout_delete_block, %struct.basic_block_def* (%struct.basic_block_def*, i8*)* @cfg_layout_split_block, i8 (%struct.basic_block_def*, %struct.basic_block_def*)* @rtl_move_block_after, i8 (%struct.basic_block_def*, %struct.basic_block_def*)* @cfg_layout_can_merge_blocks_p, void (%struct.basic_block_def*, %struct.basic_block_def*)* @cfg_layout_merge_blocks, void (%struct.edge_def*, i32, i32)* @rtl_predict_edge, i8 (%struct.basic_block_def*, i32)* @rtl_predicted_by_p, i8 (%struct.basic_block_def*)* @cfg_layout_can_duplicate_bb_p, %struct.basic_block_def* (%struct.basic_block_def*)* @cfg_layout_duplicate_bb, %struct.basic_block_def* (%struct.edge_def*)* @cfg_layout_split_edge, void (%struct.edge_def*)* @rtl_make_forwarder_block, void (%struct.edge_def*)* null, i8 (%struct.basic_block_def*)* @rtl_block_ends_with_call_p, i8 (%struct.basic_block_def*)* @rtl_block_ends_with_condjump_p, i32 (%struct.simple_bitmap_def*)* @rtl_flow_call_edges_add, void (%struct.edge_def*)* null, void (%struct.edge_def*)* null, i8 (%struct.loop*, %struct.edge_def*, i32, %struct.simple_bitmap_def*, %struct.edge_def*, %struct.VEC_edge_heap**, i32)* @duplicate_loop_to_header_edge, void (%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, i8*)* @rtl_lv_add_condition_to_bb, void (%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.edge_def*)* null, void (%struct.basic_block_def*, %struct.edge_def**, %struct.edge_def**)* @rtl_extract_cond_bb_edges, void (%struct.edge_def*)* null }, align 8, !dbg !2216
@.str.21 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.22 = private unnamed_addr constant [54 x i8] c"insn %d outside of basic blocks has non-NULL bb field\00", align 1
@.str.23 = private unnamed_addr constant [54 x i8] c"end insn %d for block %d not found in the insn stream\00", align 1
@.str.24 = private unnamed_addr constant [48 x i8] c"insn %d is in multiple basic blocks (%d and %d)\00", align 1
@.str.25 = private unnamed_addr constant [55 x i8] c"head insn %d for block %d not found in the insn stream\00", align 1
@.str.26 = private unnamed_addr constant [31 x i8] c"missing barrier after block %i\00", align 1
@.str.27 = private unnamed_addr constant [55 x i8] c"verify_flow_info: Incorrect blocks for fallthru %i->%i\00", align 1
@.str.28 = private unnamed_addr constant [44 x i8] c"verify_flow_info: Incorrect fallthru %i->%i\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"wrong insn in the fallthru edge\00", align 1
@.str.30 = private unnamed_addr constant [41 x i8] c"basic blocks not laid down consecutively\00", align 1
@.str.31 = private unnamed_addr constant [25 x i8] c"insn outside basic block\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"return not followed by barrier\00", align 1
@.str.33 = private unnamed_addr constant [61 x i8] c"number of bb notes in insn chain (%d) != n_basic_blocks (%d)\00", align 1
@currently_expanding_to_rtl = external dso_local local_unnamed_addr global i32, align 4
@.str.34 = private unnamed_addr constant [30 x i8] c"Edge %i->%i redirected to %i\0A\00", align 1
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@.str.35 = private unnamed_addr constant [19 x i8] c"deleting block %d\0A\00", align 1
@.str.36 = private unnamed_addr constant [32 x i8] c"merging block %d into block %d\0A\00", align 1
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@.str.37 = private unnamed_addr constant [33 x i8] c"BB_RTL flag not set for block %d\00", align 1
@.str.38 = private unnamed_addr constant [48 x i8] c"insn %d basic block pointer is %d, should be %d\00", align 1
@.str.39 = private unnamed_addr constant [52 x i8] c"insn %d in header of bb %d has non-NULL basic block\00", align 1
@.str.40 = private unnamed_addr constant [52 x i8] c"insn %d in footer of bb %d has non-NULL basic block\00", align 1
@.str.41 = private unnamed_addr constant [56 x i8] c"verify_flow_info: REG_BR_PROB does not match cfg %wi %i\00", align 1
@.str.42 = private unnamed_addr constant [47 x i8] c"fallthru edge crosses section boundary (bb %i)\00", align 1
@.str.43 = private unnamed_addr constant [47 x i8] c"missing REG_EH_REGION note in the end of bb %i\00", align 1
@.str.44 = private unnamed_addr constant [21 x i8] c"too many eh edges %i\00", align 1
@.str.45 = private unnamed_addr constant [42 x i8] c"too many outgoing branch edges from bb %i\00", align 1
@.str.46 = private unnamed_addr constant [42 x i8] c"fallthru edge after unconditional jump %i\00", align 1
@.str.47 = private unnamed_addr constant [57 x i8] c"wrong number of branch edges after unconditional jump %i\00", align 1
@.str.48 = private unnamed_addr constant [55 x i8] c"wrong amount of branch edges after conditional jump %i\00", align 1
@.str.49 = private unnamed_addr constant [38 x i8] c"call edges for non-call insn in bb %i\00", align 1
@.str.50 = private unnamed_addr constant [39 x i8] c"abnormal edges for no purpose in bb %i\00", align 1
@.str.51 = private unnamed_addr constant [57 x i8] c"insn %d inside basic block %d but block_for_insn is NULL\00", align 1
@.str.52 = private unnamed_addr constant [55 x i8] c"insn %d inside basic block %d but block_for_insn is %i\00", align 1
@.str.53 = private unnamed_addr constant [46 x i8] c"NOTE_INSN_BASIC_BLOCK is missing for block %d\00", align 1
@.str.54 = private unnamed_addr constant [53 x i8] c"NOTE_INSN_BASIC_BLOCK %d in middle of basic block %d\00", align 1
@.str.55 = private unnamed_addr constant [19 x i8] c"in basic block %d:\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"flow control insn inside a basic block\00", align 1
@.str.57 = private unnamed_addr constant [41 x i8] c"Redirecting entry edge from bb %i to %i\0A\00", align 1
@.str.58 = private unnamed_addr constant [59 x i8] c"Fallthru edge unified with branch %i->%i redirected to %i\0A\00", align 1
@.str.59 = private unnamed_addr constant [39 x i8] c"Fallthru edge %i->%i redirected to %i\0A\00", align 1
@cfg_layout_function_footer = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@.str.60 = private unnamed_addr constant [26 x i8] c"Merged blocks %d and %d.\0A\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2248 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2261, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2262, metadata !DIExpression()), !dbg !2263
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2264
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2265
  ret i32 %call, !dbg !2266
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2267 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2269
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2270
  ret i32 %call, !dbg !2271
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2272 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2276, metadata !DIExpression()), !dbg !2277
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2278
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2278
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2278
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2278
  %cmp = icmp uge i8* %0, %1, !dbg !2278
  %conv1 = zext i1 %cmp to i64, !dbg !2278
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2278
  %tobool = icmp eq i64 %expval, 0, !dbg !2278
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2278

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2278
  br label %cond.end, !dbg !2278

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2278
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2278
  %2 = load i8, i8* %0, align 1, !dbg !2278
  %conv3 = zext i8 %2 to i32, !dbg !2278
  br label %cond.end, !dbg !2278

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2278
  ret i32 %cond, !dbg !2279
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2280 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2282, metadata !DIExpression()), !dbg !2283
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2284
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2284
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2284
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2284
  %cmp = icmp uge i8* %0, %1, !dbg !2284
  %conv1 = zext i1 %cmp to i64, !dbg !2284
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2284
  %tobool = icmp eq i64 %expval, 0, !dbg !2284
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2284

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2284
  br label %cond.end, !dbg !2284

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2284
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2284
  %2 = load i8, i8* %0, align 1, !dbg !2284
  %conv3 = zext i8 %2 to i32, !dbg !2284
  br label %cond.end, !dbg !2284

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2284
  ret i32 %cond, !dbg !2285
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2286 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2287
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2287
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2287
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2287
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2287
  %cmp = icmp uge i8* %1, %2, !dbg !2287
  %conv1 = zext i1 %cmp to i64, !dbg !2287
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2287
  %tobool = icmp eq i64 %expval, 0, !dbg !2287
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2287

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2287
  br label %cond.end, !dbg !2287

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2287
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2287
  %3 = load i8, i8* %1, align 1, !dbg !2287
  %conv3 = zext i8 %3 to i32, !dbg !2287
  br label %cond.end, !dbg !2287

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2287
  ret i32 %cond, !dbg !2288
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2289 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2293, metadata !DIExpression()), !dbg !2294
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2295
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2296
  ret i32 %call, !dbg !2297
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2298 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2302, metadata !DIExpression()), !dbg !2304
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2303, metadata !DIExpression()), !dbg !2304
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2305
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2305
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2305
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2305
  %cmp = icmp uge i8* %0, %1, !dbg !2305
  %conv1 = zext i1 %cmp to i64, !dbg !2305
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2305
  %tobool = icmp eq i64 %expval, 0, !dbg !2305
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2305

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2305
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2305
  br label %cond.end, !dbg !2305

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2305
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2305
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2305
  store i8 %conv2, i8* %0, align 1, !dbg !2305
  %conv6 = and i32 %__c, 255, !dbg !2305
  br label %cond.end, !dbg !2305

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2305
  ret i32 %cond, !dbg !2306
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2307 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2309, metadata !DIExpression()), !dbg !2311
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2310, metadata !DIExpression()), !dbg !2311
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2312
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2312
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2312
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2312
  %cmp = icmp uge i8* %0, %1, !dbg !2312
  %conv1 = zext i1 %cmp to i64, !dbg !2312
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2312
  %tobool = icmp eq i64 %expval, 0, !dbg !2312
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2312

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2312
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2312
  br label %cond.end, !dbg !2312

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2312
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2312
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2312
  store i8 %conv2, i8* %0, align 1, !dbg !2312
  %conv6 = and i32 %__c, 255, !dbg !2312
  br label %cond.end, !dbg !2312

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2312
  ret i32 %cond, !dbg !2313
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2314 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2316, metadata !DIExpression()), !dbg !2317
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2318
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2318
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2318
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2318
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2318
  %cmp = icmp uge i8* %1, %2, !dbg !2318
  %conv1 = zext i1 %cmp to i64, !dbg !2318
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2318
  %tobool = icmp eq i64 %expval, 0, !dbg !2318
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2318

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2318
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2318
  br label %cond.end, !dbg !2318

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2318
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2318
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2318
  store i8 %conv4, i8* %1, align 1, !dbg !2318
  %conv6 = and i32 %__c, 255, !dbg !2318
  br label %cond.end, !dbg !2318

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2318
  ret i32 %cond, !dbg !2319
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2320 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2326, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2327, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2328, metadata !DIExpression()), !dbg !2329
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2330
  ret i64 %call, !dbg !2331
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2332 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2334, metadata !DIExpression()), !dbg !2335
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2336
  %0 = load i32, i32* %_flags, align 8, !dbg !2336
  %and = lshr i32 %0, 4, !dbg !2336
  %and.lobit = and i32 %and, 1, !dbg !2336
  ret i32 %and.lobit, !dbg !2337
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2338 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2340, metadata !DIExpression()), !dbg !2341
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2342
  %0 = load i32, i32* %_flags, align 8, !dbg !2342
  %and = lshr i32 %0, 5, !dbg !2342
  %and.lobit = and i32 %and, 1, !dbg !2342
  ret i32 %and.lobit, !dbg !2343
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2344 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2347, metadata !DIExpression()), !dbg !2348
  %__c.off = add i32 %__c, 128, !dbg !2349
  %0 = icmp ult i32 %__c.off, 384, !dbg !2349
  br i1 %0, label %cond.true, label %cond.end, !dbg !2349

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2350
  %1 = load i32*, i32** %call, align 8, !dbg !2351
  %idxprom = sext i32 %__c to i64, !dbg !2352
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2352
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2352
  br label %cond.end, !dbg !2353

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2353
  ret i32 %cond, !dbg !2354
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2355 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2357, metadata !DIExpression()), !dbg !2358
  %__c.off = add i32 %__c, 128, !dbg !2359
  %0 = icmp ult i32 %__c.off, 384, !dbg !2359
  br i1 %0, label %cond.true, label %cond.end, !dbg !2359

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2360
  %1 = load i32*, i32** %call, align 8, !dbg !2361
  %idxprom = sext i32 %__c to i64, !dbg !2362
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2362
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2362
  br label %cond.end, !dbg !2363

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2363
  ret i32 %cond, !dbg !2364
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2365 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2370, metadata !DIExpression()), !dbg !2371
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2372
  %conv = trunc i64 %call to i32, !dbg !2373
  ret i32 %conv, !dbg !2374
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2375 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2379, metadata !DIExpression()), !dbg !2380
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2381
  ret i64 %call, !dbg !2382
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2383 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2388, metadata !DIExpression()), !dbg !2389
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2390
  ret i64 %call, !dbg !2391
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2392 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2398, metadata !DIExpression()), !dbg !2408
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2399, metadata !DIExpression()), !dbg !2408
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2400, metadata !DIExpression()), !dbg !2408
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2401, metadata !DIExpression()), !dbg !2408
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2402, metadata !DIExpression()), !dbg !2408
  call void @llvm.dbg.value(metadata i64 0, metadata !2403, metadata !DIExpression()), !dbg !2408
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2404, metadata !DIExpression()), !dbg !2408
  br label %while.cond, !dbg !2409

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2410
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2408
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2404, metadata !DIExpression()), !dbg !2408
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2403, metadata !DIExpression()), !dbg !2408
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2411
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2409

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2412
  %div = lshr i64 %add, 1, !dbg !2414
  call void @llvm.dbg.value(metadata i64 %div, metadata !2405, metadata !DIExpression()), !dbg !2408
  %mul = mul i64 %div, %__size, !dbg !2415
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2416
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2406, metadata !DIExpression()), !dbg !2408
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2417
  call void @llvm.dbg.value(metadata i32 %call, metadata !2407, metadata !DIExpression()), !dbg !2408
  %cmp1 = icmp slt i32 %call, 0, !dbg !2418
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2420

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2421
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2423

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2424
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2403, metadata !DIExpression()), !dbg !2408
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2408
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2408
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2404, metadata !DIExpression()), !dbg !2408
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2403, metadata !DIExpression()), !dbg !2408
  br label %while.cond, !dbg !2409, !llvm.loop !2425

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2408
  ret i8* %retval.0, !dbg !2427
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2428 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2434, metadata !DIExpression()), !dbg !2435
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2436
  ret double %call, !dbg !2437
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2438 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2447, metadata !DIExpression()), !dbg !2450
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2448, metadata !DIExpression()), !dbg !2450
  call void @llvm.dbg.value(metadata i32 %base, metadata !2449, metadata !DIExpression()), !dbg !2450
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2451
  ret i64 %call, !dbg !2452
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2453 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2459, metadata !DIExpression()), !dbg !2462
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2460, metadata !DIExpression()), !dbg !2462
  call void @llvm.dbg.value(metadata i32 %base, metadata !2461, metadata !DIExpression()), !dbg !2462
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2463
  ret i64 %call, !dbg !2464
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2465 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2476, metadata !DIExpression()), !dbg !2479
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2477, metadata !DIExpression()), !dbg !2479
  call void @llvm.dbg.value(metadata i32 %base, metadata !2478, metadata !DIExpression()), !dbg !2479
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2480
  ret i64 %call, !dbg !2481
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2482 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2486, metadata !DIExpression()), !dbg !2489
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2487, metadata !DIExpression()), !dbg !2489
  call void @llvm.dbg.value(metadata i32 %base, metadata !2488, metadata !DIExpression()), !dbg !2489
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2490
  ret i64 %call, !dbg !2491
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2492 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2532, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2533, metadata !DIExpression()), !dbg !2534
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2535
  ret i32 %call, !dbg !2536
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2537 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2539, metadata !DIExpression()), !dbg !2541
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2540, metadata !DIExpression()), !dbg !2541
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2542
  ret i32 %call, !dbg !2543
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2544 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2548, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2549, metadata !DIExpression()), !dbg !2550
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2551
  ret i32 %call, !dbg !2552
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2553 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2557, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2558, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2559, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2560, metadata !DIExpression()), !dbg !2561
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2562
  ret i32 %call, !dbg !2563
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2564 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2568, metadata !DIExpression()), !dbg !2571
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2569, metadata !DIExpression()), !dbg !2571
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2570, metadata !DIExpression()), !dbg !2571
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2570, metadata !DIExpression(DW_OP_deref)), !dbg !2571
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2572
  ret i32 %call, !dbg !2573
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2574 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2578, metadata !DIExpression()), !dbg !2582
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2579, metadata !DIExpression()), !dbg !2582
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2580, metadata !DIExpression()), !dbg !2582
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2581, metadata !DIExpression()), !dbg !2582
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2581, metadata !DIExpression(DW_OP_deref)), !dbg !2582
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2583
  ret i32 %call, !dbg !2584
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2585 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2609, metadata !DIExpression()), !dbg !2611
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2610, metadata !DIExpression()), !dbg !2611
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2612
  ret i32 %call, !dbg !2613
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2614 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2616, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2617, metadata !DIExpression()), !dbg !2618
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2619
  ret i32 %call, !dbg !2620
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2621 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2625, metadata !DIExpression()), !dbg !2627
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2626, metadata !DIExpression()), !dbg !2627
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2628
  ret i32 %call, !dbg !2629
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2630 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2634, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2635, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2636, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2637, metadata !DIExpression()), !dbg !2638
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2639
  ret i32 %call, !dbg !2640
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !2641 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2645, metadata !DIExpression()), !dbg !2664
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2665
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !2665
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2665
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !2646, metadata !DIExpression()), !dbg !2664
  call void @llvm.dbg.value(metadata i8 1, metadata !2648, metadata !DIExpression()), !dbg !2664
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !2666
  %bf.load = load i32, i32* %2, align 8, !dbg !2666
  %bf.clear = and i32 %bf.load, 65535, !dbg !2666
  %cmp = icmp eq i32 %bf.clear, 12, !dbg !2666
  br i1 %cmp, label %if.then, label %if.end14, !dbg !2667

if.then:                                          ; preds = %entry
  %call = tail call fastcc i32 @can_delete_label_p(%struct.rtx_def* %insn) #7, !dbg !2668
  %tobool = icmp eq i32 %call, 0, !dbg !2668
  br i1 %tobool, label %if.then1, label %if.end, !dbg !2669

if.then1:                                         ; preds = %if.then
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !2670
  %rt_str = getelementptr inbounds %union.u, %union.u* %u2, i64 1, i32 0, i32 0, i64 2, i32 0, !dbg !2670
  %3 = bitcast i8** %rt_str to i64*, !dbg !2670
  %4 = load i64, i64* %3, align 8, !dbg !2670
  call void @llvm.dbg.value(metadata i8 0, metadata !2648, metadata !DIExpression()), !dbg !2664
  %bf.load5 = load i32, i32* %2, align 8, !dbg !2671
  %bf.clear6 = and i32 %bf.load5, -65536, !dbg !2671
  %bf.set = or i32 %bf.clear6, 13, !dbg !2671
  store i32 %bf.set, i32* %2, align 8, !dbg !2671
  %5 = getelementptr inbounds %union.u, %union.u* %u2, i64 1, i32 0, i32 0, i64 0, !dbg !2672
  %rt_int = bitcast %union.rtunion_def* %5 to i32*, !dbg !2672
  store i32 1, i32* %rt_int, align 8, !dbg !2673
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 2, !dbg !2674
  store i64 %4, i64* %arrayidx12, align 8, !dbg !2675
  br label %if.end, !dbg !2676

if.end:                                           ; preds = %if.then, %if.then1
  %really_delete.0 = phi i8 [ 1, %if.then ], [ 0, %if.then1 ], !dbg !2664
  call void @llvm.dbg.value(metadata i8 %really_delete.0, metadata !2648, metadata !DIExpression()), !dbg !2664
  tail call void @remove_node_from_expr_list(%struct.rtx_def* %insn, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 10)) #6, !dbg !2677
  br label %if.end14, !dbg !2678

if.end14:                                         ; preds = %if.end, %entry
  %really_delete.1 = phi i8 [ %really_delete.0, %if.end ], [ 1, %entry ], !dbg !2679
  call void @llvm.dbg.value(metadata i8 %really_delete.1, metadata !2648, metadata !DIExpression()), !dbg !2664
  %tobool15 = icmp eq i8 %really_delete.1, 0, !dbg !2680
  br i1 %tobool15, label %if.end14.if.end23_crit_edge, label %if.then16, !dbg !2682

if.end14.if.end23_crit_edge:                      ; preds = %if.end14
  %bf.load24.pre = load i32, i32* %2, align 8, !dbg !2683
  br label %if.end23, !dbg !2682

if.then16:                                        ; preds = %if.end14
  %bf.load17 = load i32, i32* %2, align 8, !dbg !2685
  %bf.clear18 = and i32 %bf.load17, 134217728, !dbg !2685
  %tobool19 = icmp eq i32 %bf.clear18, 0, !dbg !2685
  br i1 %tobool19, label %cond.end, label %cond.true, !dbg !2685

cond.true:                                        ; preds = %if.then16
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2685
  br label %cond.end, !dbg !2685

cond.end:                                         ; preds = %if.then16, %cond.true
  tail call void @remove_insn(%struct.rtx_def* %insn) #6, !dbg !2687
  %bf.load20 = load i32, i32* %2, align 8, !dbg !2688
  %bf.set22 = or i32 %bf.load20, 134217728, !dbg !2688
  store i32 %bf.set22, i32* %2, align 8, !dbg !2688
  br label %if.end23, !dbg !2689

if.end23:                                         ; preds = %if.end14.if.end23_crit_edge, %cond.end
  %bf.load24 = phi i32 [ %bf.load24.pre, %if.end14.if.end23_crit_edge ], [ %bf.set22, %cond.end ], !dbg !2683
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !2683
  %cmp26 = icmp eq i32 %bf.clear25, 9, !dbg !2683
  br i1 %cmp26, label %if.then27, label %if.end68, !dbg !2690

if.then27:                                        ; preds = %if.end23
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !2691
  %arrayidx30 = getelementptr inbounds %union.u, %union.u* %u28, i64 1, i32 0, i32 1, !dbg !2691
  %rt_rtx31 = bitcast %struct.object_block** %arrayidx30 to %struct.rtx_def**, !dbg !2691
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !2691
  %tobool32 = icmp eq %struct.rtx_def* %6, null, !dbg !2691
  br i1 %tobool32, label %if.end49, label %land.lhs.true, !dbg !2694

land.lhs.true:                                    ; preds = %if.then27
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !2694
  %bf.load37 = load i32, i32* %7, align 8, !dbg !2695
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !2695
  %cmp39 = icmp eq i32 %bf.clear38, 12, !dbg !2695
  br i1 %cmp39, label %if.then40, label %if.end49, !dbg !2696

if.then40:                                        ; preds = %land.lhs.true
  %arrayidx47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 2, !dbg !2697
  %rt_int48 = bitcast i64* %arrayidx47 to i32*, !dbg !2697
  %8 = load i32, i32* %rt_int48, align 8, !dbg !2698
  %dec = add nsw i32 %8, -1, !dbg !2698
  store i32 %dec, i32* %rt_int48, align 8, !dbg !2698
  br label %if.end49, !dbg !2697

if.end49:                                         ; preds = %if.then27, %if.then40, %land.lhs.true
  br label %while.cond, !dbg !2699

while.cond:                                       ; preds = %while.body, %if.end49
  %call50 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 9, %struct.rtx_def* null) #6, !dbg !2700
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50, metadata !2647, metadata !DIExpression()), !dbg !2664
  %cmp51 = icmp eq %struct.rtx_def* %call50, null, !dbg !2701
  br i1 %cmp51, label %if.end68.loopexit, label %land.rhs, !dbg !2702

land.rhs:                                         ; preds = %while.cond
  %arrayidx54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call50, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2703
  %9 = bitcast %union.rtunion_def* %arrayidx54 to i32**, !dbg !2703
  %10 = load i32*, i32** %9, align 8, !dbg !2703
  %bf.load56 = load i32, i32* %10, align 8, !dbg !2703
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !2703
  %cmp58 = icmp eq i32 %bf.clear57, 12, !dbg !2703
  br i1 %cmp58, label %while.body, label %if.end68.loopexit, !dbg !2699

while.body:                                       ; preds = %land.rhs
  %arrayidx65 = getelementptr inbounds i32, i32* %10, i64 10, !dbg !2704
  %11 = load i32, i32* %arrayidx65, align 8, !dbg !2706
  %dec67 = add nsw i32 %11, -1, !dbg !2706
  store i32 %dec67, i32* %arrayidx65, align 8, !dbg !2706
  tail call void @remove_note(%struct.rtx_def* %insn, %struct.rtx_def* nonnull %call50) #6, !dbg !2707
  br label %while.cond, !dbg !2699, !llvm.loop !2708

if.end68.loopexit:                                ; preds = %land.rhs, %while.cond
  br label %if.end68, !dbg !2710

if.end68:                                         ; preds = %if.end68.loopexit, %if.end23
  br label %while.cond69, !dbg !2710

while.cond69:                                     ; preds = %while.body81, %if.end68
  %call70 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 10, %struct.rtx_def* null) #6, !dbg !2711
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call70, metadata !2647, metadata !DIExpression()), !dbg !2664
  %cmp71 = icmp eq %struct.rtx_def* %call70, null, !dbg !2712
  br i1 %cmp71, label %while.end91, label %land.rhs72, !dbg !2713

land.rhs72:                                       ; preds = %while.cond69
  %arrayidx75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call70, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2714
  %12 = bitcast %union.rtunion_def* %arrayidx75 to i32**, !dbg !2714
  %13 = load i32*, i32** %12, align 8, !dbg !2714
  %bf.load77 = load i32, i32* %13, align 8, !dbg !2714
  %bf.clear78 = and i32 %bf.load77, 65535, !dbg !2714
  %cmp79 = icmp eq i32 %bf.clear78, 12, !dbg !2714
  br i1 %cmp79, label %while.body81, label %while.end91, !dbg !2710

while.body81:                                     ; preds = %land.rhs72
  %arrayidx88 = getelementptr inbounds i32, i32* %13, i64 10, !dbg !2715
  %14 = load i32, i32* %arrayidx88, align 8, !dbg !2717
  %dec90 = add nsw i32 %14, -1, !dbg !2717
  store i32 %dec90, i32* %arrayidx88, align 8, !dbg !2717
  tail call void @remove_note(%struct.rtx_def* %insn, %struct.rtx_def* nonnull %call70) #6, !dbg !2718
  br label %while.cond69, !dbg !2710, !llvm.loop !2719

while.end91:                                      ; preds = %while.cond69, %land.rhs72
  %bf.load92 = load i32, i32* %2, align 8, !dbg !2721
  %bf.clear93 = and i32 %bf.load92, 65535, !dbg !2721
  %cmp94 = icmp eq i32 %bf.clear93, 9, !dbg !2721
  br i1 %cmp94, label %land.lhs.true95, label %if.end149, !dbg !2721

land.lhs.true95:                                  ; preds = %while.end91
  %u96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !2721
  %15 = getelementptr inbounds %union.u, %union.u* %u96, i64 1, i32 0, i32 0, i64 0, !dbg !2721
  %16 = bitcast %union.rtunion_def* %15 to i32**, !dbg !2721
  %17 = load i32*, i32** %16, align 8, !dbg !2721
  %bf.load100 = load i32, i32* %17, align 8, !dbg !2721
  %bf.clear101 = and i32 %bf.load100, 65535, !dbg !2721
  %cmp102 = icmp eq i32 %bf.clear101, 20, !dbg !2721
  br i1 %cmp102, label %if.then110, label %lor.lhs.false, !dbg !2721

lor.lhs.false:                                    ; preds = %land.lhs.true95
  %cmp109 = icmp eq i32 %bf.clear101, 21, !dbg !2721
  br i1 %cmp109, label %if.then110, label %if.end149, !dbg !2722

if.then110:                                       ; preds = %lor.lhs.false, %land.lhs.true95
  call void @llvm.dbg.value(metadata i32* %17, metadata !2654, metadata !DIExpression()), !dbg !2723
  %cmp121 = icmp eq i32 %bf.clear101, 21, !dbg !2724
  call void @llvm.dbg.value(metadata i1 %cmp121, metadata !2657, metadata !DIExpression()), !dbg !2723
  %u122 = getelementptr inbounds i32, i32* %17, i64 2, !dbg !2725
  %fld123 = bitcast i32* %u122 to [1 x %union.rtunion_def]*, !dbg !2725
  %idxprom = zext i1 %cmp121 to i64, !dbg !2725
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i64 0, i64 %idxprom, !dbg !2725
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtvec_def**, !dbg !2725
  %18 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2725
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %18, i64 0, i32 0, !dbg !2725
  %19 = load i32, i32* %num_elem, align 8, !dbg !2725
  call void @llvm.dbg.value(metadata i32 %19, metadata !2658, metadata !DIExpression()), !dbg !2723
  call void @llvm.dbg.value(metadata i32 0, metadata !2659, metadata !DIExpression()), !dbg !2723
  %20 = sext i32 %19 to i64, !dbg !2726
  br label %for.cond, !dbg !2726

for.cond:                                         ; preds = %for.inc, %if.then110
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then110 ], !dbg !2727
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2659, metadata !DIExpression()), !dbg !2723
  %cmp125 = icmp slt i64 %indvars.iv, %20, !dbg !2728
  br i1 %cmp125, label %for.body, label %if.end149.loopexit, !dbg !2729

for.body:                                         ; preds = %for.cond
  %21 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2730
  %arrayidx133 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %21, i64 0, i32 1, i64 %indvars.iv, !dbg !2730
  %22 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx133, align 8, !dbg !2730
  %arrayidx136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2730
  %rt_rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**, !dbg !2730
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx137, align 8, !dbg !2730
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !2660, metadata !DIExpression()), !dbg !2731
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 0, !dbg !2732
  %bf.load138 = load i32, i32* %24, align 8, !dbg !2732
  %bf.clear139 = and i32 %bf.load138, 65535, !dbg !2732
  %cmp140 = icmp eq i32 %bf.clear139, 13, !dbg !2732
  br i1 %cmp140, label %for.inc, label %if.then142, !dbg !2734

if.then142:                                       ; preds = %for.body
  %arrayidx145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 2, !dbg !2735
  %rt_int146 = bitcast i64* %arrayidx145 to i32*, !dbg !2735
  %25 = load i32, i32* %rt_int146, align 8, !dbg !2736
  %dec147 = add nsw i32 %25, -1, !dbg !2736
  store i32 %dec147, i32* %rt_int146, align 8, !dbg !2736
  br label %for.inc, !dbg !2735

for.inc:                                          ; preds = %for.body, %if.then142
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2737
  call void @llvm.dbg.value(metadata i32 undef, metadata !2659, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2723
  br label %for.cond, !dbg !2738, !llvm.loop !2739

if.end149.loopexit:                               ; preds = %for.cond
  br label %if.end149, !dbg !2741

if.end149:                                        ; preds = %if.end149.loopexit, %lor.lhs.false, %while.end91
  ret %struct.rtx_def* %1, !dbg !2741
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @can_delete_label_p(%struct.rtx_def* %label) unnamed_addr #4 !dbg !2742 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label, metadata !2746, metadata !DIExpression()), !dbg !2747
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %label, i64 0, i32 0, !dbg !2748
  %bf.load = load i32, i32* %0, align 8, !dbg !2748
  %bf.clear = and i32 %bf.load, 268435456, !dbg !2748
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !2748
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !2749

land.lhs.true:                                    ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %label, i64 0, i32 1, !dbg !2750
  %rt_str = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, i32 0, !dbg !2750
  %1 = load i8*, i8** %rt_str, align 8, !dbg !2750
  %cmp = icmp eq i8* %1, null, !dbg !2751
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2752

land.rhs:                                         ; preds = %land.lhs.true
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 5), align 8, !dbg !2753
  %call = tail call i32 @in_expr_list_p(%struct.rtx_def* %2, %struct.rtx_def* %label) #6, !dbg !2754
  %tobool1 = icmp eq i32 %call, 0, !dbg !2755
  %phitmp = zext i1 %tobool1 to i32
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs, %land.lhs.true
  %3 = phi i32 [ 0, %land.lhs.true ], [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %3, !dbg !2756
}

declare dso_local void @remove_node_from_expr_list(%struct.rtx_def*, %struct.rtx_def**) local_unnamed_addr #1

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

declare dso_local void @remove_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @remove_note(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @delete_insn_and_edges(%struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !2757 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2759, metadata !DIExpression()), !dbg !2762
  call void @llvm.dbg.value(metadata i8 0, metadata !2761, metadata !DIExpression()), !dbg !2762
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !2763
  %bf.load = load i32, i32* %0, align 8, !dbg !2763
  %bf.clear = and i32 %bf.load, 65535, !dbg !2763
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !2763
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !2763

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !2763
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !2763

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !2763
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !2763

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !2763
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !2765

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !2766
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !2766
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !2766
  %tobool = icmp eq %struct.basic_block_def* %1, null, !dbg !2766
  br i1 %tobool, label %if.end, label %land.lhs.true12, !dbg !2767

land.lhs.true12:                                  ; preds = %land.lhs.true
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 7, !dbg !2768
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2768
  %2 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2768
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %2, i64 0, i32 1, !dbg !2768
  %3 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !2768
  %cmp17 = icmp eq %struct.rtx_def* %3, %insn, !dbg !2769
  br label %if.end, !dbg !2770

if.end:                                           ; preds = %land.lhs.true, %land.lhs.true12, %lor.lhs.false8
  %purge.0 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false8 ], [ %cmp17, %land.lhs.true12 ]
  %call = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #7, !dbg !2771
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2760, metadata !DIExpression()), !dbg !2762
  br i1 %purge.0, label %if.then19, label %if.end25, !dbg !2772

if.then19:                                        ; preds = %if.end
  %arrayidx22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !2773
  %rt_bb23 = bitcast %struct.object_block** %arrayidx22 to %struct.basic_block_def**, !dbg !2773
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb23, align 8, !dbg !2773
  %call24 = tail call zeroext i8 @purge_dead_edges(%struct.basic_block_def* %4) #7, !dbg !2775
  br label %if.end25, !dbg !2775

if.end25:                                         ; preds = %if.then19, %if.end
  ret %struct.rtx_def* %call, !dbg !2776
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @purge_dead_edges(%struct.basic_block_def* %bb) local_unnamed_addr #4 !dbg !2777 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %ei82 = alloca %struct.edge_iterator, align 8
  %tmp103 = alloca %struct.edge_iterator, align 8
  %tmp306 = alloca %struct.edge_iterator, align 8
  %tmp322 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2779, metadata !DIExpression()), !dbg !2799
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !2800
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2800
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !2801
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2801
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2801
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !2801
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !2801
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !2781, metadata !DIExpression()), !dbg !2799
  call void @llvm.dbg.value(metadata i8 0, metadata !2783, metadata !DIExpression()), !dbg !2799
  %3 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2802
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !2802
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !2803
  %bf.load = load i32, i32* %4, align 8, !dbg !2803
  %bf.clear = and i32 %bf.load, 65535, !dbg !2803
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !2803
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2805

land.lhs.true:                                    ; preds = %entry
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 0, !dbg !2806
  %5 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !2806
  %cmp3 = icmp eq %struct.rtx_def* %2, %5, !dbg !2807
  br i1 %cmp3, label %if.end, label %do.body.preheader, !dbg !2808

do.body.preheader:                                ; preds = %land.lhs.true
  br label %do.body, !dbg !2809

do.body:                                          ; preds = %do.body, %do.body.preheader
  %insn.0 = phi %struct.rtx_def* [ %2, %do.body.preheader ], [ %7, %do.body ], !dbg !2799
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !2781, metadata !DIExpression()), !dbg !2799
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2810
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !2810
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2810
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !2781, metadata !DIExpression()), !dbg !2799
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !2811
  %bf.load4 = load i32, i32* %8, align 8, !dbg !2811
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !2811
  %cmp6 = icmp ne i32 %bf.clear5, 7, !dbg !2811
  %cmp9 = icmp ne i32 %bf.clear5, 13, !dbg !2812
  %9 = and i1 %cmp6, %cmp9, !dbg !2813
  %cmp13 = icmp eq %struct.rtx_def* %7, %5, !dbg !2814
  %or.cond5 = or i1 %9, %cmp13, !dbg !2813
  br i1 %or.cond5, label %if.end.loopexit, label %do.body, !dbg !2813, !llvm.loop !2815

if.end.loopexit:                                  ; preds = %do.body
  %.lcssa = phi %struct.rtx_def* [ %7, %do.body ], !dbg !2810
  %bf.load4.lcssa = phi i32 [ %bf.load4, %do.body ], !dbg !2811
  br label %if.end, !dbg !2817

if.end:                                           ; preds = %if.end.loopexit, %land.lhs.true, %entry
  %bf.load14 = phi i32 [ %bf.load, %land.lhs.true ], [ %bf.load, %entry ], [ %bf.load4.lcssa, %if.end.loopexit ], !dbg !2817
  %insn.1 = phi %struct.rtx_def* [ %2, %land.lhs.true ], [ %2, %entry ], [ %.lcssa, %if.end.loopexit ], !dbg !2799
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !2781, metadata !DIExpression()), !dbg !2799
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !2817
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !2817
  %cmp16 = icmp eq i32 %bf.clear15, 8, !dbg !2817
  br i1 %cmp16, label %land.lhs.true17, label %if.end37, !dbg !2818

land.lhs.true17:                                  ; preds = %if.end
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.1, i32 25, %struct.rtx_def* null) #6, !dbg !2819
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2782, metadata !DIExpression()), !dbg !2799
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !2820
  br i1 %tobool, label %if.end37, label %if.then18, !dbg !2821

if.then18:                                        ; preds = %land.lhs.true17
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, !dbg !2822
  %11 = getelementptr inbounds %union.u, %union.u* %u19, i64 1, i32 0, i32 0, i64 0, !dbg !2822
  %rt_rtx22 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !2822
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !2822
  %call23 = tail call i32 @may_trap_p(%struct.rtx_def* %12) #6, !dbg !2824
  %tobool24 = icmp eq i32 %call23, 0, !dbg !2824
  br i1 %tobool24, label %if.then35, label %lor.lhs.false25, !dbg !2825

lor.lhs.false25:                                  ; preds = %if.then18
  %call26 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %insn.1) #6, !dbg !2826
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call26, metadata !2786, metadata !DIExpression()), !dbg !2827
  %tobool27 = icmp eq %struct.rtx_def* %call26, null, !dbg !2828
  br i1 %tobool27, label %if.end37, label %land.lhs.true28, !dbg !2829

land.lhs.true28:                                  ; preds = %lor.lhs.false25
  %arrayidx31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call26, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2830
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !2830
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !2830
  %call33 = tail call i32 @may_trap_p(%struct.rtx_def* %13) #6, !dbg !2831
  %tobool34 = icmp eq i32 %call33, 0, !dbg !2831
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !2832

if.then35:                                        ; preds = %land.lhs.true28, %if.then18
  tail call void @remove_note(%struct.rtx_def* %insn.1, %struct.rtx_def* nonnull %call) #6, !dbg !2833
  br label %if.end37, !dbg !2833

if.end37:                                         ; preds = %land.lhs.true28, %lor.lhs.false25, %land.lhs.true17, %if.then35, %if.end
  %14 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !2834
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8, !dbg !2834
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !2834
  %call38 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !2834
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !2834
  %16 = extractvalue { i32, %struct.VEC_edge_gc** } %call38, 0, !dbg !2834
  store i32 %16, i32* %15, align 8, !dbg !2834
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !2834
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call38, 1, !dbg !2834
  store %struct.VEC_edge_gc** %18, %struct.VEC_edge_gc*** %17, align 8, !dbg !2834
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %14, i64 16, i1 false), !dbg !2834
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8, !dbg !2834
  %19 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !2835
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !2835
  br label %for.cond, !dbg !2836

for.cond:                                         ; preds = %if.end75, %if.end37
  %purged.0 = phi i8 [ 0, %if.end37 ], [ %purged.1, %if.end75 ], !dbg !2799
  call void @llvm.dbg.value(metadata i8 %purged.0, metadata !2783, metadata !DIExpression()), !dbg !2799
  %21 = load i32, i32* %19, align 8, !dbg !2837
  %22 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %20, align 8, !dbg !2837
  %call39 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %21, %struct.VEC_edge_gc** %22) #7, !dbg !2837
  call void @llvm.dbg.value(metadata %struct.edge_def* %call39, metadata !2780, metadata !DIExpression()), !dbg !2799
  store %struct.edge_def* %call39, %struct.edge_def** %e, align 8, !dbg !2838
  %tobool40 = icmp eq %struct.edge_def* %call39, null, !dbg !2839
  br i1 %tobool40, label %for.end, label %for.body, !dbg !2839

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !2789, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata %struct.edge_def* %call39, metadata !2780, metadata !DIExpression()), !dbg !2799
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call39, i64 0, i32 7, !dbg !2841
  %23 = load i32, i32* %flags, align 8, !dbg !2841
  %and = and i32 %23, 4, !dbg !2843
  %tobool41 = icmp eq i32 %and, 0, !dbg !2843
  br i1 %tobool41, label %if.else62, label %if.then42, !dbg !2844

if.then42:                                        ; preds = %for.body
  %bf.load43 = load i32, i32* %10, align 8, !dbg !2845
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !2845
  %cmp45 = icmp eq i32 %bf.clear44, 10, !dbg !2845
  br i1 %cmp45, label %if.else, label %if.end71, !dbg !2848

if.else:                                          ; preds = %if.then42
  %call47 = call zeroext i8 @can_nonlocal_goto(%struct.rtx_def* %insn.1) #6, !dbg !2849
  %tobool48 = icmp eq i8 %call47, 0, !dbg !2849
  br i1 %tobool48, label %if.else50, label %if.end71, !dbg !2851

if.else50:                                        ; preds = %if.else
  %24 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2852
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !2780, metadata !DIExpression()), !dbg !2799
  %flags51 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %24, i64 0, i32 7, !dbg !2854
  %25 = load i32, i32* %flags51, align 8, !dbg !2854
  %and52 = and i32 %25, 8, !dbg !2855
  %tobool53 = icmp eq i32 %and52, 0, !dbg !2855
  br i1 %tobool53, label %if.else58, label %land.lhs.true54, !dbg !2856

land.lhs.true54:                                  ; preds = %if.else50
  %call55 = call zeroext i8 @can_throw_internal(%struct.rtx_def* %insn.1) #6, !dbg !2857
  %tobool56 = icmp eq i8 %call55, 0, !dbg !2857
  br i1 %tobool56, label %if.else58, label %if.end71, !dbg !2858

if.else58:                                        ; preds = %land.lhs.true54, %if.else50
  call void @llvm.dbg.value(metadata i8 1, metadata !2789, metadata !DIExpression()), !dbg !2840
  br label %if.end71

if.else62:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %call39, metadata !2780, metadata !DIExpression()), !dbg !2799
  %and64 = and i32 %23, 8, !dbg !2859
  %tobool65 = icmp eq i32 %and64, 0, !dbg !2859
  br i1 %tobool65, label %if.end71, label %if.then66, !dbg !2861

if.then66:                                        ; preds = %if.else62
  %call67 = call zeroext i8 @can_throw_internal(%struct.rtx_def* %insn.1) #6, !dbg !2862
  %tobool68 = icmp eq i8 %call67, 0, !dbg !2863
  %conv69 = zext i1 %tobool68 to i8, !dbg !2863
  call void @llvm.dbg.value(metadata i8 %conv69, metadata !2789, metadata !DIExpression()), !dbg !2840
  br label %if.end71, !dbg !2864

if.end71:                                         ; preds = %land.lhs.true54, %if.else, %if.else62, %if.then66, %if.then42, %if.else58
  %remove.4 = phi i8 [ 1, %if.then42 ], [ 0, %if.else ], [ 1, %if.else58 ], [ 0, %land.lhs.true54 ], [ %conv69, %if.then66 ], [ 0, %if.else62 ], !dbg !2840
  call void @llvm.dbg.value(metadata i8 %remove.4, metadata !2789, metadata !DIExpression()), !dbg !2840
  %tobool72 = icmp eq i8 %remove.4, 0, !dbg !2865
  br i1 %tobool72, label %if.else74, label %if.then73, !dbg !2867

if.then73:                                        ; preds = %if.end71
  %26 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2868
  call void @llvm.dbg.value(metadata %struct.edge_def* %26, metadata !2780, metadata !DIExpression()), !dbg !2799
  call void @remove_edge(%struct.edge_def* %26) #6, !dbg !2870
  call void @df_set_bb_dirty(%struct.basic_block_def* %bb) #6, !dbg !2871
  call void @llvm.dbg.value(metadata i8 1, metadata !2783, metadata !DIExpression()), !dbg !2799
  br label %if.end75, !dbg !2872

if.else74:                                        ; preds = %if.end71
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2785, metadata !DIExpression(DW_OP_deref)), !dbg !2799
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !2873
  br label %if.end75

if.end75:                                         ; preds = %if.else74, %if.then73
  %purged.1 = phi i8 [ 1, %if.then73 ], [ %purged.0, %if.else74 ], !dbg !2799
  call void @llvm.dbg.value(metadata i8 %purged.1, metadata !2783, metadata !DIExpression()), !dbg !2799
  br label %for.cond, !dbg !2874, !llvm.loop !2875

for.end:                                          ; preds = %for.cond
  %purged.0.lcssa = phi i8 [ %purged.0, %for.cond ], !dbg !2799
  call void @llvm.dbg.value(metadata i8 %purged.0.lcssa, metadata !2783, metadata !DIExpression()), !dbg !2799
  call void @llvm.dbg.value(metadata i8 %purged.0.lcssa, metadata !2783, metadata !DIExpression()), !dbg !2799
  call void @llvm.dbg.value(metadata i8 %purged.0.lcssa, metadata !2783, metadata !DIExpression()), !dbg !2799
  %bf.load76 = load i32, i32* %10, align 8, !dbg !2877
  %bf.clear77 = and i32 %bf.load76, 65535, !dbg !2877
  %cmp78 = icmp eq i32 %bf.clear77, 9, !dbg !2877
  br i1 %cmp78, label %if.then80, label %if.else280, !dbg !2878

if.then80:                                        ; preds = %for.end
  %27 = bitcast %struct.edge_iterator* %ei82 to i8*, !dbg !2879
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8, !dbg !2879
  %call83 = call i32 @any_condjump_p(%struct.rtx_def* %insn.1) #6, !dbg !2880
  %tobool84 = icmp eq i32 %call83, 0, !dbg !2880
  br i1 %tobool84, label %land.lhs.true85, label %if.end92, !dbg !2882

land.lhs.true85:                                  ; preds = %if.then80
  %call86 = call i32 @returnjump_p(%struct.rtx_def* %insn.1) #6, !dbg !2883
  %tobool87 = icmp eq i32 %call86, 0, !dbg !2883
  br i1 %tobool87, label %land.lhs.true88, label %if.end92, !dbg !2884

land.lhs.true88:                                  ; preds = %land.lhs.true85
  %call89 = call i32 @simplejump_p(%struct.rtx_def* %insn.1) #6, !dbg !2885
  %tobool90 = icmp eq i32 %call89, 0, !dbg !2885
  br i1 %tobool90, label %cleanup, label %if.end92, !dbg !2886

if.end92:                                         ; preds = %land.lhs.true88, %land.lhs.true85, %if.then80
  %call93 = call i32 @simplejump_p(%struct.rtx_def* %insn.1) #6, !dbg !2887
  %tobool94 = icmp eq i32 %call93, 0, !dbg !2887
  br i1 %tobool94, label %if.end102, label %if.then95, !dbg !2889

if.then95:                                        ; preds = %if.end92
  %call96 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.1, i32 13, %struct.rtx_def* null) #6, !dbg !2890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call96, metadata !2793, metadata !DIExpression()), !dbg !2892
  %tobool97 = icmp eq %struct.rtx_def* %call96, null, !dbg !2893
  br i1 %tobool97, label %if.end99, label %if.then98, !dbg !2895

if.then98:                                        ; preds = %if.then95
  call void @remove_note(%struct.rtx_def* %insn.1, %struct.rtx_def* nonnull %call96) #6, !dbg !2896
  br label %if.end99, !dbg !2896

if.end99:                                         ; preds = %if.then95, %if.then98
  br label %while.cond, !dbg !2897

while.cond:                                       ; preds = %while.body, %if.end99
  %call100 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.1, i32 16, %struct.rtx_def* null) #6, !dbg !2898
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call100, metadata !2793, metadata !DIExpression()), !dbg !2892
  %tobool101 = icmp eq %struct.rtx_def* %call100, null, !dbg !2897
  br i1 %tobool101, label %if.end102.loopexit, label %while.body, !dbg !2897

while.body:                                       ; preds = %while.cond
  call void @remove_note(%struct.rtx_def* %insn.1, %struct.rtx_def* nonnull %call100) #6, !dbg !2899
  br label %while.cond, !dbg !2897, !llvm.loop !2900

if.end102.loopexit:                               ; preds = %while.cond
  br label %if.end102, !dbg !2902

if.end102:                                        ; preds = %if.end102.loopexit, %if.end92
  %28 = bitcast %struct.edge_iterator* %tmp103 to i8*, !dbg !2902
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #8, !dbg !2902
  %call105 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !2902
  %29 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp103, i64 0, i32 0, !dbg !2902
  %30 = extractvalue { i32, %struct.VEC_edge_gc** } %call105, 0, !dbg !2902
  store i32 %30, i32* %29, align 8, !dbg !2902
  %31 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp103, i64 0, i32 1, !dbg !2902
  %32 = extractvalue { i32, %struct.VEC_edge_gc** } %call105, 1, !dbg !2902
  store %struct.VEC_edge_gc** %32, %struct.VEC_edge_gc*** %31, align 8, !dbg !2902
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %28, i64 16, i1 false), !dbg !2902
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #8, !dbg !2902
  %33 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei82, i64 0, i32 0, !dbg !2904
  %34 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei82, i64 0, i32 1, !dbg !2904
  %u127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, !dbg !2906
  %arrayidx129 = getelementptr inbounds %union.u, %union.u* %u127, i64 1, i32 0, i32 1, !dbg !2906
  %rt_rtx130 = bitcast %struct.object_block** %arrayidx129 to %struct.rtx_def**, !dbg !2906
  br label %for.cond106.outer, !dbg !2910

for.cond106.outer:                                ; preds = %if.end158, %if.end102
  %purged.2.ph = phi i8 [ 1, %if.end158 ], [ %purged.0.lcssa, %if.end102 ]
  br label %for.cond106, !dbg !2911

for.cond106:                                      ; preds = %for.cond106.backedge, %for.cond106.outer
  call void @llvm.dbg.value(metadata i8 %purged.2.ph, metadata !2783, metadata !DIExpression()), !dbg !2799
  %35 = load i32, i32* %33, align 8, !dbg !2912
  %36 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %34, align 8, !dbg !2912
  %call107 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %35, %struct.VEC_edge_gc** %36) #7, !dbg !2912
  call void @llvm.dbg.value(metadata %struct.edge_def* %call107, metadata !2780, metadata !DIExpression()), !dbg !2799
  store %struct.edge_def* %call107, %struct.edge_def** %e, align 8, !dbg !2913
  %tobool108 = icmp eq %struct.edge_def* %call107, null, !dbg !2911
  br i1 %tobool108, label %for.end159, label %for.body109, !dbg !2911

for.body109:                                      ; preds = %for.cond106
  call void @llvm.dbg.value(metadata %struct.edge_def* %call107, metadata !2780, metadata !DIExpression()), !dbg !2799
  %flags110 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call107, i64 0, i32 7, !dbg !2914
  %37 = load i32, i32* %flags110, align 8, !dbg !2915
  %and111 = and i32 %37, -3, !dbg !2915
  store i32 %and111, i32* %flags110, align 8, !dbg !2915
  call void @llvm.dbg.value(metadata %struct.edge_def* %call107, metadata !2780, metadata !DIExpression()), !dbg !2799
  %and113 = and i32 %37, 1, !dbg !2916
  %tobool114 = icmp eq i32 %and113, 0, !dbg !2916
  br i1 %tobool114, label %if.else119, label %land.lhs.true115, !dbg !2917

land.lhs.true115:                                 ; preds = %for.body109
  %call116 = call i32 @any_condjump_p(%struct.rtx_def* %insn.1) #6, !dbg !2918
  %tobool117 = icmp eq i32 %call116, 0, !dbg !2918
  br i1 %tobool117, label %land.lhs.true115.if.else119_crit_edge, label %if.then118, !dbg !2919

land.lhs.true115.if.else119_crit_edge:            ; preds = %land.lhs.true115
  %.pre = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2920
  br label %if.else119, !dbg !2919

if.then118:                                       ; preds = %land.lhs.true115
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei82, metadata !2798, metadata !DIExpression(DW_OP_deref)), !dbg !2892
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei82) #7, !dbg !2921
  br label %for.cond106.backedge, !dbg !2923

for.cond106.backedge:                             ; preds = %if.then118, %if.then133, %if.then144, %if.then153
  br label %for.cond106, !dbg !2799, !llvm.loop !2924

if.else119:                                       ; preds = %land.lhs.true115.if.else119_crit_edge, %for.body109
  %38 = phi %struct.edge_def* [ %.pre, %land.lhs.true115.if.else119_crit_edge ], [ %call107, %for.body109 ], !dbg !2920
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !2780, metadata !DIExpression()), !dbg !2799
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i64 0, i32 1, !dbg !2926
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2926
  %40 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2927
  %cfg = getelementptr inbounds %struct.function, %struct.function* %40, i64 0, i32 1, !dbg !2927
  %41 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2927
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %41, i64 0, i32 1, !dbg !2927
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2927
  %cmp120 = icmp eq %struct.basic_block_def* %39, %42, !dbg !2928
  br i1 %cmp120, label %if.else134, label %land.lhs.true122, !dbg !2929

land.lhs.true122:                                 ; preds = %if.else119
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !2780, metadata !DIExpression()), !dbg !2799
  %il124 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i64 0, i32 7, !dbg !2930
  %rtl125 = bitcast %union.basic_block_il_dependent* %il124 to %struct.rtl_bb_info**, !dbg !2930
  %43 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl125, align 8, !dbg !2930
  %head_126 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %43, i64 0, i32 0, !dbg !2930
  %44 = load %struct.rtx_def*, %struct.rtx_def** %head_126, align 8, !dbg !2930
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx130, align 8, !dbg !2931
  %cmp131 = icmp eq %struct.rtx_def* %44, %45, !dbg !2932
  br i1 %cmp131, label %if.then133, label %if.else134, !dbg !2933

if.then133:                                       ; preds = %land.lhs.true122
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei82, metadata !2798, metadata !DIExpression(DW_OP_deref)), !dbg !2892
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei82) #7, !dbg !2934
  br label %for.cond106.backedge, !dbg !2936

if.else134:                                       ; preds = %if.else119, %land.lhs.true122
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !2780, metadata !DIExpression()), !dbg !2799
  br i1 %cmp120, label %land.lhs.true141, label %if.else145, !dbg !2937

land.lhs.true141:                                 ; preds = %if.else134
  %call142 = call i32 @returnjump_p(%struct.rtx_def* %insn.1) #6, !dbg !2939
  %tobool143 = icmp eq i32 %call142, 0, !dbg !2939
  br i1 %tobool143, label %land.lhs.true141.if.else145_crit_edge, label %if.then144, !dbg !2940

land.lhs.true141.if.else145_crit_edge:            ; preds = %land.lhs.true141
  %.pre3 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2941
  br label %if.else145, !dbg !2940

if.then144:                                       ; preds = %land.lhs.true141
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei82, metadata !2798, metadata !DIExpression(DW_OP_deref)), !dbg !2892
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei82) #7, !dbg !2943
  br label %for.cond106.backedge, !dbg !2945

if.else145:                                       ; preds = %land.lhs.true141.if.else145_crit_edge, %if.else134
  %46 = phi %struct.edge_def* [ %.pre3, %land.lhs.true141.if.else145_crit_edge ], [ %38, %if.else134 ], !dbg !2941
  call void @llvm.dbg.value(metadata %struct.edge_def* %46, metadata !2780, metadata !DIExpression()), !dbg !2799
  %flags146 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %46, i64 0, i32 7, !dbg !2946
  %47 = load i32, i32* %flags146, align 8, !dbg !2946
  %and147 = and i32 %47, 8, !dbg !2947
  %tobool148 = icmp eq i32 %and147, 0, !dbg !2947
  br i1 %tobool148, label %if.end158, label %land.lhs.true149, !dbg !2948

land.lhs.true149:                                 ; preds = %if.else145
  %call150 = call zeroext i8 @can_throw_internal(%struct.rtx_def* %insn.1) #6, !dbg !2949
  %tobool152 = icmp eq i8 %call150, 0, !dbg !2949
  br i1 %tobool152, label %if.end158, label %if.then153, !dbg !2950

if.then153:                                       ; preds = %land.lhs.true149
  %48 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2951
  call void @llvm.dbg.value(metadata %struct.edge_def* %48, metadata !2780, metadata !DIExpression()), !dbg !2799
  %flags154 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %48, i64 0, i32 7, !dbg !2953
  %49 = load i32, i32* %flags154, align 8, !dbg !2954
  %or = or i32 %49, 2, !dbg !2954
  store i32 %or, i32* %flags154, align 8, !dbg !2954
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei82, metadata !2798, metadata !DIExpression(DW_OP_deref)), !dbg !2892
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei82) #7, !dbg !2955
  br label %for.cond106.backedge, !dbg !2956

if.end158:                                        ; preds = %land.lhs.true149, %if.else145
  call void @df_set_bb_dirty(%struct.basic_block_def* %bb) #6, !dbg !2957
  call void @llvm.dbg.value(metadata i8 1, metadata !2783, metadata !DIExpression()), !dbg !2799
  %50 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2958
  call void @llvm.dbg.value(metadata %struct.edge_def* %50, metadata !2780, metadata !DIExpression()), !dbg !2799
  call void @remove_edge(%struct.edge_def* %50) #6, !dbg !2959
  br label %for.cond106.outer, !dbg !2960, !llvm.loop !2924

for.end159:                                       ; preds = %for.cond106
  %purged.2.ph.lcssa = phi i8 [ %purged.2.ph, %for.cond106 ]
  %51 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !2961
  %tobool161 = icmp eq %struct.VEC_edge_gc* %51, null, !dbg !2961
  br i1 %tobool161, label %cond.end, label %cond.true, !dbg !2961

cond.true:                                        ; preds = %for.end159
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %51, i64 0, i32 0, !dbg !2961
  br label %cond.end, !dbg !2961

cond.end:                                         ; preds = %for.end159, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %for.end159 ], !dbg !2961
  %call163 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !2961
  %cmp164 = icmp ne i32 %call163, 0, !dbg !2963
  %tobool167 = icmp ne i8 %purged.2.ph.lcssa, 0, !dbg !2964
  %or.cond = and i1 %cmp164, %tobool167, !dbg !2965
  br i1 %or.cond, label %if.end169, label %cleanup, !dbg !2965

if.end169:                                        ; preds = %cond.end
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2966
  %tobool170 = icmp eq %struct._IO_FILE* %52, null, !dbg !2966
  br i1 %tobool170, label %if.end173, label %if.then171, !dbg !2968

if.then171:                                       ; preds = %if.end169
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !2969
  %53 = load i32, i32* %index, align 8, !dbg !2969
  %call172 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %52, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0), i32 %53) #6, !dbg !2970
  br label %if.end173, !dbg !2970

if.end173:                                        ; preds = %if.end169, %if.then171
  %54 = load i32, i32* @optimize, align 4, !dbg !2971
  %tobool174 = icmp eq i32 %54, 0, !dbg !2971
  br i1 %tobool174, label %cleanup, label %if.end176, !dbg !2973

if.end176:                                        ; preds = %if.end173
  %call177 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !2974
  %tobool178 = icmp eq i8 %call177, 0, !dbg !2974
  br i1 %tobool178, label %if.else183, label %if.then179, !dbg !2976

if.then179:                                       ; preds = %if.end176
  %call180 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !2977
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call180, i64 0, i32 8, !dbg !2979
  store i32 10000, i32* %probability, align 4, !dbg !2980
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 8, !dbg !2981
  %55 = load i64, i64* %count, align 8, !dbg !2981
  %call181 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !2982
  %count182 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call181, i64 0, i32 9, !dbg !2983
  store i64 %55, i64* %count182, align 8, !dbg !2984
  br label %cleanup, !dbg !2985

if.else183:                                       ; preds = %if.end176
  %call184 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.1, i32 13, %struct.rtx_def* null) #6, !dbg !2986
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call184, metadata !2793, metadata !DIExpression()), !dbg !2892
  %tobool185 = icmp eq %struct.rtx_def* %call184, null, !dbg !2988
  br i1 %tobool185, label %cleanup, label %if.end187, !dbg !2990

if.end187:                                        ; preds = %if.else183
  %56 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !2991
  %tobool189 = icmp eq %struct.VEC_edge_gc* %56, null, !dbg !2991
  br i1 %tobool189, label %cond.end194, label %cond.true190, !dbg !2991

cond.true190:                                     ; preds = %if.end187
  %base192 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %56, i64 0, i32 0, !dbg !2991
  br label %cond.end194, !dbg !2991

cond.end194:                                      ; preds = %if.end187, %cond.true190
  %cond195 = phi %struct.VEC_edge_base* [ %base192, %cond.true190 ], [ null, %if.end187 ], !dbg !2991
  %call196 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond195, i32 0) #7, !dbg !2991
  %flags197 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call196, i64 0, i32 7, !dbg !2991
  %57 = load i32, i32* %flags197, align 8, !dbg !2991
  %and198 = and i32 %57, 1, !dbg !2991
  %tobool199 = icmp eq i32 %and198, 0, !dbg !2991
  %58 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !2991
  %tobool202 = icmp ne %struct.VEC_edge_gc* %58, null, !dbg !2991
  br i1 %tobool199, label %cond.false210, label %cond.true200, !dbg !2991

cond.true200:                                     ; preds = %cond.end194
  br i1 %tobool202, label %cond.true203, label %cond.end207, !dbg !2991

cond.true203:                                     ; preds = %cond.true200
  %base205 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %58, i64 0, i32 0, !dbg !2991
  br label %cond.end207, !dbg !2991

cond.end207:                                      ; preds = %cond.true200, %cond.true203
  %cond208 = phi %struct.VEC_edge_base* [ %base205, %cond.true203 ], [ null, %cond.true200 ], !dbg !2991
  %call209 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond208, i32 1) #7, !dbg !2991
  br label %cond.end220, !dbg !2991

cond.false210:                                    ; preds = %cond.end194
  br i1 %tobool202, label %cond.true213, label %cond.end217, !dbg !2991

cond.true213:                                     ; preds = %cond.false210
  %base215 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %58, i64 0, i32 0, !dbg !2991
  br label %cond.end217, !dbg !2991

cond.end217:                                      ; preds = %cond.false210, %cond.true213
  %cond218 = phi %struct.VEC_edge_base* [ %base215, %cond.true213 ], [ null, %cond.false210 ], !dbg !2991
  %call219 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond218, i32 0) #7, !dbg !2991
  br label %cond.end220, !dbg !2991

cond.end220:                                      ; preds = %cond.end217, %cond.end207
  %cond221 = phi %struct.edge_def* [ %call209, %cond.end207 ], [ %call219, %cond.end217 ], !dbg !2991
  call void @llvm.dbg.value(metadata %struct.edge_def* %cond221, metadata !2796, metadata !DIExpression()), !dbg !2892
  %59 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !2992
  %tobool223 = icmp eq %struct.VEC_edge_gc* %59, null, !dbg !2992
  br i1 %tobool223, label %cond.end228, label %cond.true224, !dbg !2992

cond.true224:                                     ; preds = %cond.end220
  %base226 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %59, i64 0, i32 0, !dbg !2992
  br label %cond.end228, !dbg !2992

cond.end228:                                      ; preds = %cond.end220, %cond.true224
  %cond229 = phi %struct.VEC_edge_base* [ %base226, %cond.true224 ], [ null, %cond.end220 ], !dbg !2992
  %call230 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond229, i32 0) #7, !dbg !2992
  %flags231 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call230, i64 0, i32 7, !dbg !2992
  %60 = load i32, i32* %flags231, align 8, !dbg !2992
  %and232 = and i32 %60, 1, !dbg !2992
  %tobool233 = icmp eq i32 %and232, 0, !dbg !2992
  %61 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !2992
  %tobool236 = icmp ne %struct.VEC_edge_gc* %61, null, !dbg !2992
  br i1 %tobool233, label %cond.false244, label %cond.true234, !dbg !2992

cond.true234:                                     ; preds = %cond.end228
  br i1 %tobool236, label %cond.true237, label %cond.end241, !dbg !2992

cond.true237:                                     ; preds = %cond.true234
  %base239 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %61, i64 0, i32 0, !dbg !2992
  br label %cond.end241, !dbg !2992

cond.end241:                                      ; preds = %cond.true234, %cond.true237
  %cond242 = phi %struct.VEC_edge_base* [ %base239, %cond.true237 ], [ null, %cond.true234 ], !dbg !2992
  %call243 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond242, i32 0) #7, !dbg !2992
  br label %cond.end254, !dbg !2992

cond.false244:                                    ; preds = %cond.end228
  br i1 %tobool236, label %cond.true247, label %cond.end251, !dbg !2992

cond.true247:                                     ; preds = %cond.false244
  %base249 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %61, i64 0, i32 0, !dbg !2992
  br label %cond.end251, !dbg !2992

cond.end251:                                      ; preds = %cond.false244, %cond.true247
  %cond252 = phi %struct.VEC_edge_base* [ %base249, %cond.true247 ], [ null, %cond.false244 ], !dbg !2992
  %call253 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond252, i32 1) #7, !dbg !2992
  br label %cond.end254, !dbg !2992

cond.end254:                                      ; preds = %cond.end251, %cond.end241
  %cond255 = phi %struct.edge_def* [ %call243, %cond.end241 ], [ %call253, %cond.end251 ], !dbg !2992
  call void @llvm.dbg.value(metadata %struct.edge_def* %cond255, metadata !2797, metadata !DIExpression()), !dbg !2892
  %arrayidx258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call184, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2993
  %rt_rtx259 = bitcast %union.rtunion_def* %arrayidx258 to %struct.rtx_def**, !dbg !2993
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx259, align 8, !dbg !2993
  %u260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i64 0, i32 1, !dbg !2993
  %arrayidx261 = bitcast %union.u* %u260 to i64*, !dbg !2993
  %63 = load i64, i64* %arrayidx261, align 8, !dbg !2993
  %conv262 = trunc i64 %63 to i32, !dbg !2993
  %probability263 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond221, i64 0, i32 8, !dbg !2994
  store i32 %conv262, i32* %probability263, align 4, !dbg !2995
  %sub = sub nsw i32 10000, %conv262, !dbg !2996
  %probability265 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond255, i64 0, i32 8, !dbg !2997
  store i32 %sub, i32* %probability265, align 4, !dbg !2998
  %count266 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 8, !dbg !2999
  %64 = load i64, i64* %count266, align 8, !dbg !2999
  %65 = load i32, i32* %probability263, align 4, !dbg !3000
  %conv268 = sext i32 %65 to i64, !dbg !3001
  %mul = mul nsw i64 %64, %conv268, !dbg !3002
  %div = sdiv i64 %mul, 10000, !dbg !3003
  %count269 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond221, i64 0, i32 9, !dbg !3004
  store i64 %div, i64* %count269, align 8, !dbg !3005
  %66 = load i64, i64* %count266, align 8, !dbg !3006
  %67 = load i32, i32* %probability265, align 4, !dbg !3007
  %conv272 = sext i32 %67 to i64, !dbg !3008
  %mul273 = mul nsw i64 %66, %conv272, !dbg !3009
  %div274 = sdiv i64 %mul273, 10000, !dbg !3010
  %count275 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond255, i64 0, i32 9, !dbg !3011
  store i64 %div274, i64* %count275, align 8, !dbg !3012
  br label %cleanup

cleanup:                                          ; preds = %if.else183, %if.end173, %land.lhs.true88, %if.then179, %cond.end254, %cond.end
  %retval.0 = phi i8 [ %purged.0.lcssa, %land.lhs.true88 ], [ %purged.2.ph.lcssa, %cond.end ], [ %purged.2.ph.lcssa, %if.end173 ], [ %purged.2.ph.lcssa, %if.else183 ], [ %purged.2.ph.lcssa, %cond.end254 ], [ %purged.2.ph.lcssa, %if.then179 ], !dbg !2892
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8, !dbg !3013
  br label %cleanup352

if.else280:                                       ; preds = %for.end
  %cmp283 = icmp eq i32 %bf.clear77, 10, !dbg !3014
  br i1 %cmp283, label %land.lhs.true285, label %if.end305, !dbg !3016

land.lhs.true285:                                 ; preds = %if.else280
  %bf.clear287 = and i32 %bf.load76, 16777216, !dbg !3017
  %tobool288 = icmp eq i32 %bf.clear287, 0, !dbg !3017
  br i1 %tobool288, label %if.end305, label %if.then289, !dbg !3018

if.then289:                                       ; preds = %land.lhs.true285
  %call290 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !3019
  %tobool291 = icmp eq i8 %call290, 0, !dbg !3019
  br i1 %tobool291, label %cond.true292, label %cond.end294, !dbg !3019

cond.true292:                                     ; preds = %if.then289
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2386, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3019
  br label %cond.end294, !dbg !3019

cond.end294:                                      ; preds = %if.then289, %cond.true292
  %call296 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !3021
  %flags297 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call296, i64 0, i32 7, !dbg !3021
  %68 = load i32, i32* %flags297, align 8, !dbg !3021
  %cmp298 = icmp eq i32 %68, 258, !dbg !3021
  br i1 %cmp298, label %cleanup352, label %cond.true300, !dbg !3021

cond.true300:                                     ; preds = %cond.end294
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2388, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3021
  br label %cleanup352, !dbg !3021

if.end305:                                        ; preds = %land.lhs.true285, %if.else280
  call void @llvm.dbg.value(metadata i8 0, metadata !2784, metadata !DIExpression()), !dbg !2799
  %69 = bitcast %struct.edge_iterator* %tmp306 to i8*, !dbg !3022
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #8, !dbg !3022
  %call308 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3022
  %70 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp306, i64 0, i32 0, !dbg !3022
  %71 = extractvalue { i32, %struct.VEC_edge_gc** } %call308, 0, !dbg !3022
  store i32 %71, i32* %70, align 8, !dbg !3022
  %72 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp306, i64 0, i32 1, !dbg !3022
  %73 = extractvalue { i32, %struct.VEC_edge_gc** } %call308, 1, !dbg !3022
  store %struct.VEC_edge_gc** %73, %struct.VEC_edge_gc*** %72, align 8, !dbg !3022
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %69, i64 16, i1 false), !dbg !3022
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #8, !dbg !3022
  br label %for.cond309, !dbg !3022

for.cond309:                                      ; preds = %for.inc, %if.end305
  %74 = load i32, i32* %19, align 8, !dbg !3024
  %75 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %20, align 8, !dbg !3024
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2780, metadata !DIExpression(DW_OP_deref)), !dbg !2799
  %call310 = call fastcc zeroext i8 @ei_cond(i32 %74, %struct.VEC_edge_gc** %75, %struct.edge_def** nonnull %e) #7, !dbg !3024
  %tobool311 = icmp eq i8 %call310, 0, !dbg !3022
  br i1 %tobool311, label %for.end318, label %for.body312, !dbg !3022

for.body312:                                      ; preds = %for.cond309
  %76 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3026
  call void @llvm.dbg.value(metadata %struct.edge_def* %76, metadata !2780, metadata !DIExpression()), !dbg !2799
  %flags313 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %76, i64 0, i32 7, !dbg !3028
  %77 = load i32, i32* %flags313, align 8, !dbg !3028
  %and314 = and i32 %77, 15, !dbg !3029
  %tobool315 = icmp eq i32 %and314, 0, !dbg !3029
  br i1 %tobool315, label %for.end318, label %for.inc, !dbg !3030

for.inc:                                          ; preds = %for.body312
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2785, metadata !DIExpression(DW_OP_deref)), !dbg !2799
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3024
  br label %for.cond309, !dbg !3024, !llvm.loop !3031

for.end318:                                       ; preds = %for.body312, %for.cond309
  %found.0 = phi i1 [ false, %for.cond309 ], [ true, %for.body312 ]
  br i1 %found.0, label %if.end321, label %cleanup352, !dbg !3033

if.end321:                                        ; preds = %for.end318
  %78 = bitcast %struct.edge_iterator* %tmp322 to i8*, !dbg !3034
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #8, !dbg !3034
  %call324 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3034
  %79 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp322, i64 0, i32 0, !dbg !3034
  %80 = extractvalue { i32, %struct.VEC_edge_gc** } %call324, 0, !dbg !3034
  store i32 %80, i32* %79, align 8, !dbg !3034
  %81 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp322, i64 0, i32 1, !dbg !3034
  %82 = extractvalue { i32, %struct.VEC_edge_gc** } %call324, 1, !dbg !3034
  store %struct.VEC_edge_gc** %82, %struct.VEC_edge_gc*** %81, align 8, !dbg !3034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %78, i64 16, i1 false), !dbg !3034
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #8, !dbg !3034
  br label %for.cond325, !dbg !3036

for.cond325:                                      ; preds = %if.end334, %if.end321
  %purged.3 = phi i8 [ %purged.0.lcssa, %if.end321 ], [ %purged.4, %if.end334 ], !dbg !3037
  call void @llvm.dbg.value(metadata i8 %purged.3, metadata !2783, metadata !DIExpression()), !dbg !2799
  %83 = load i32, i32* %19, align 8, !dbg !3038
  %84 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %20, align 8, !dbg !3038
  %call326 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %83, %struct.VEC_edge_gc** %84) #7, !dbg !3038
  call void @llvm.dbg.value(metadata %struct.edge_def* %call326, metadata !2780, metadata !DIExpression()), !dbg !2799
  store %struct.edge_def* %call326, %struct.edge_def** %e, align 8, !dbg !3040
  %tobool327 = icmp eq %struct.edge_def* %call326, null, !dbg !3041
  br i1 %tobool327, label %for.end335, label %for.body328, !dbg !3041

for.body328:                                      ; preds = %for.cond325
  call void @llvm.dbg.value(metadata %struct.edge_def* %call326, metadata !2780, metadata !DIExpression()), !dbg !2799
  %flags329 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call326, i64 0, i32 7, !dbg !3042
  %85 = load i32, i32* %flags329, align 8, !dbg !3042
  %and330 = and i32 %85, 17, !dbg !3045
  %tobool331 = icmp eq i32 %and330, 0, !dbg !3045
  br i1 %tobool331, label %if.then332, label %if.else333, !dbg !3046

if.then332:                                       ; preds = %for.body328
  call void @df_set_bb_dirty(%struct.basic_block_def* %bb) #6, !dbg !3047
  %86 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3049
  call void @llvm.dbg.value(metadata %struct.edge_def* %86, metadata !2780, metadata !DIExpression()), !dbg !2799
  call void @remove_edge(%struct.edge_def* %86) #6, !dbg !3050
  call void @llvm.dbg.value(metadata i8 1, metadata !2783, metadata !DIExpression()), !dbg !2799
  br label %if.end334, !dbg !3051

if.else333:                                       ; preds = %for.body328
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2785, metadata !DIExpression(DW_OP_deref)), !dbg !2799
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3052
  br label %if.end334

if.end334:                                        ; preds = %if.else333, %if.then332
  %purged.4 = phi i8 [ %purged.3, %if.else333 ], [ 1, %if.then332 ], !dbg !2799
  call void @llvm.dbg.value(metadata i8 %purged.4, metadata !2783, metadata !DIExpression()), !dbg !2799
  br label %for.cond325, !dbg !3053, !llvm.loop !3054

for.end335:                                       ; preds = %for.cond325
  %purged.3.lcssa = phi i8 [ %purged.3, %for.cond325 ], !dbg !3037
  call void @llvm.dbg.value(metadata i8 %purged.3.lcssa, metadata !2783, metadata !DIExpression()), !dbg !2799
  call void @llvm.dbg.value(metadata i8 %purged.3.lcssa, metadata !2783, metadata !DIExpression()), !dbg !2799
  call void @llvm.dbg.value(metadata i8 %purged.3.lcssa, metadata !2783, metadata !DIExpression()), !dbg !2799
  %call336 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !3056
  %tobool337 = icmp eq i8 %call336, 0, !dbg !3056
  br i1 %tobool337, label %cond.true338, label %cond.end340, !dbg !3056

cond.true338:                                     ; preds = %for.end335
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2424, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3056
  br label %cond.end340, !dbg !3056

cond.end340:                                      ; preds = %for.end335, %cond.true338
  %call342 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !3057
  %probability343 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call342, i64 0, i32 8, !dbg !3058
  store i32 10000, i32* %probability343, align 4, !dbg !3059
  %count344 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 8, !dbg !3060
  %87 = load i64, i64* %count344, align 8, !dbg !3060
  %call345 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !3061
  %count346 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call345, i64 0, i32 9, !dbg !3062
  store i64 %87, i64* %count346, align 8, !dbg !3063
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3064
  %tobool347 = icmp eq %struct._IO_FILE* %88, null, !dbg !3064
  br i1 %tobool347, label %cleanup352, label %if.then348, !dbg !3066

if.then348:                                       ; preds = %cond.end340
  %index349 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !3067
  %89 = load i32, i32* %index349, align 8, !dbg !3067
  %call350 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %88, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0), i32 %89) #6, !dbg !3068
  br label %cleanup352, !dbg !3068

cleanup352:                                       ; preds = %cond.end340, %if.then348, %for.end318, %cond.true300, %cond.end294, %cleanup
  %retval.1 = phi i8 [ %retval.0, %cleanup ], [ 0, %cond.end294 ], [ 0, %cond.true300 ], [ %purged.0.lcssa, %for.end318 ], [ %purged.3.lcssa, %if.then348 ], [ %purged.3.lcssa, %cond.end340 ], !dbg !2799
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !3069
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3069
  ret i8 %retval.1, !dbg !3069
}

; Function Attrs: nounwind uwtable
define dso_local void @delete_insn_chain(%struct.rtx_def* %start, %struct.rtx_def* %finish, i8 zeroext %clear_bb) local_unnamed_addr #4 !dbg !3070 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %start, metadata !3074, metadata !DIExpression()), !dbg !3078
  call void @llvm.dbg.value(metadata %struct.rtx_def* %finish, metadata !3075, metadata !DIExpression()), !dbg !3078
  call void @llvm.dbg.value(metadata i8 %clear_bb, metadata !3076, metadata !DIExpression()), !dbg !3078
  %tobool2 = icmp eq i8 %clear_bb, 0, !dbg !3079
  br i1 %tobool2, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !3082

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %while.cond, !dbg !3082

entry.split.us:                                   ; preds = %entry
  br label %while.cond.us, !dbg !3082

while.cond.us:                                    ; preds = %if.end.us, %entry.split.us
  %start.addr.0.us = phi %struct.rtx_def* [ %start, %entry.split.us ], [ %next.0.us, %if.end.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %start.addr.0.us, metadata !3074, metadata !DIExpression()), !dbg !3078
  call void @llvm.dbg.value(metadata %struct.rtx_def* undef, metadata !3077, metadata !DIExpression()), !dbg !3078
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %start.addr.0.us, i64 0, i32 0, !dbg !3083
  %bf.load.us = load i32, i32* %0, align 8, !dbg !3083
  %bf.clear.us = and i32 %bf.load.us, 65535, !dbg !3083
  %cmp.us = icmp eq i32 %bf.clear.us, 13, !dbg !3083
  br i1 %cmp.us, label %land.lhs.true.us, label %if.else.us, !dbg !3085

land.lhs.true.us:                                 ; preds = %while.cond.us
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %start.addr.0.us, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3086
  %rt_rtx.us = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !3086
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx.us, align 8, !dbg !3086
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3077, metadata !DIExpression()), !dbg !3078
  %call.us = tail call fastcc i32 @can_delete_note_p(%struct.rtx_def* %start.addr.0.us) #7, !dbg !3087
  %tobool.us = icmp eq i32 %call.us, 0, !dbg !3087
  br i1 %tobool.us, label %if.end.us, label %if.else.us, !dbg !3088

if.else.us:                                       ; preds = %land.lhs.true.us, %while.cond.us
  %call1.us = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %start.addr.0.us) #7, !dbg !3089
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1.us, metadata !3077, metadata !DIExpression()), !dbg !3078
  br label %if.end.us

if.end.us:                                        ; preds = %if.else.us, %land.lhs.true.us
  %next.0.us = phi %struct.rtx_def* [ %call1.us, %if.else.us ], [ %2, %land.lhs.true.us ], !dbg !3090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0.us, metadata !3077, metadata !DIExpression()), !dbg !3078
  %cmp12.us = icmp eq %struct.rtx_def* %start.addr.0.us, %finish, !dbg !3091
  br i1 %cmp12.us, label %while.end.us-lcssa.us, label %while.cond.us, !dbg !3093, !llvm.loop !3094

while.end.us-lcssa.us:                            ; preds = %if.end.us
  br label %while.end, !dbg !3096

while.cond:                                       ; preds = %if.end11, %entry.entry.split_crit_edge
  %start.addr.0 = phi %struct.rtx_def* [ %start, %entry.entry.split_crit_edge ], [ %next.0, %if.end11 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %start.addr.0, metadata !3074, metadata !DIExpression()), !dbg !3078
  call void @llvm.dbg.value(metadata %struct.rtx_def* undef, metadata !3077, metadata !DIExpression()), !dbg !3078
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %start.addr.0, i64 0, i32 0, !dbg !3083
  %bf.load = load i32, i32* %3, align 8, !dbg !3083
  %bf.clear = and i32 %bf.load, 65535, !dbg !3083
  %cmp = icmp eq i32 %bf.clear, 13, !dbg !3083
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3085

land.lhs.true:                                    ; preds = %while.cond
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %start.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3086
  %rt_rtx = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !3086
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3086
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3077, metadata !DIExpression()), !dbg !3078
  %call = tail call fastcc i32 @can_delete_note_p(%struct.rtx_def* %start.addr.0) #7, !dbg !3087
  %tobool = icmp eq i32 %call, 0, !dbg !3087
  br i1 %tobool, label %if.end, label %if.else, !dbg !3088

if.else:                                          ; preds = %land.lhs.true, %while.cond
  %call1 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %start.addr.0) #7, !dbg !3089
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !3077, metadata !DIExpression()), !dbg !3078
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.else
  %next.0 = phi %struct.rtx_def* [ %call1, %if.else ], [ %5, %land.lhs.true ], !dbg !3090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !3077, metadata !DIExpression()), !dbg !3078
  %bf.load4 = load i32, i32* %3, align 8, !dbg !3097
  %bf.clear5 = and i32 %bf.load4, 134217728, !dbg !3097
  %tobool6 = icmp eq i32 %bf.clear5, 0, !dbg !3097
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !3098

if.then7:                                         ; preds = %if.end
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %start.addr.0, i64 0, i32 1, i32 0, i32 1, !dbg !3099
  %rt_bb = bitcast %struct.object_block** %arrayidx10 to %struct.basic_block_def**, !dbg !3099
  store %struct.basic_block_def* null, %struct.basic_block_def** %rt_bb, align 8, !dbg !3099
  br label %if.end11, !dbg !3099

if.end11:                                         ; preds = %if.end, %if.then7
  %cmp12 = icmp eq %struct.rtx_def* %start.addr.0, %finish, !dbg !3091
  br i1 %cmp12, label %while.end.us-lcssa, label %while.cond, !dbg !3093, !llvm.loop !3094

while.end.us-lcssa:                               ; preds = %if.end11
  br label %while.end, !dbg !3096

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  ret void, !dbg !3096
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @can_delete_note_p(%struct.rtx_def* %note) unnamed_addr #4 !dbg !3100 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note, metadata !3102, metadata !DIExpression()), !dbg !3103
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note, i64 0, i32 1, !dbg !3104
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3104
  %rt_int = bitcast %union.rtunion_def* %0 to i32*, !dbg !3104
  %1 = load i32, i32* %rt_int, align 8, !dbg !3104
  switch i32 %1, label %sw.default [
    i32 0, label %return
    i32 10, label %return
    i32 6, label %return
  ], !dbg !3105

sw.default:                                       ; preds = %entry
  br label %return, !dbg !3106

return:                                           ; preds = %entry, %entry, %entry, %sw.default
  %retval.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !3108
  ret i32 %retval.0, !dbg !3109
}

; Function Attrs: nounwind uwtable
define dso_local %struct.basic_block_def* @create_basic_block_structure(%struct.rtx_def* %head, %struct.rtx_def* %end, %struct.rtx_def* %bb_note, %struct.basic_block_def* %after) local_unnamed_addr #4 !dbg !3110 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !3114, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end, metadata !3115, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_note, metadata !3116, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !3117, metadata !DIExpression()), !dbg !3124
  %tobool = icmp eq %struct.rtx_def* %bb_note, null, !dbg !3125
  br i1 %tobool, label %if.else18, label %land.lhs.true, !dbg !3126

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %bb_note, i64 0, i32 1, i32 0, i32 2, !dbg !3127
  %rt_bb = bitcast i64* %arrayidx to %struct.basic_block_def**, !dbg !3127
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3127
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !3118, metadata !DIExpression()), !dbg !3124
  %cmp = icmp eq %struct.basic_block_def* %0, null, !dbg !3128
  br i1 %cmp, label %if.else18, label %land.lhs.true1, !dbg !3129

land.lhs.true1:                                   ; preds = %land.lhs.true
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 2, !dbg !3130
  %1 = load i8*, i8** %aux, align 8, !dbg !3130
  %cmp2 = icmp eq i8* %1, null, !dbg !3131
  br i1 %cmp2, label %if.then, label %if.else18, !dbg !3132

if.then:                                          ; preds = %land.lhs.true1
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head, i64 0, i32 0, !dbg !3133
  %bf.load = load i32, i32* %2, align 8, !dbg !3133
  %bf.clear = and i32 %bf.load, 65535, !dbg !3133
  %cmp4 = icmp eq i32 %bf.clear, 12, !dbg !3133
  br i1 %cmp4, label %if.end, label %if.else, !dbg !3135

if.else:                                          ; preds = %if.then
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3136
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !3136
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3136
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3119, metadata !DIExpression()), !dbg !3138
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_note, metadata !3114, metadata !DIExpression()), !dbg !3124
  br label %if.end

if.end:                                           ; preds = %if.then, %if.else
  %after3.0 = phi %struct.rtx_def* [ %4, %if.else ], [ %head, %if.then ], !dbg !3139
  %head.addr.0 = phi %struct.rtx_def* [ %bb_note, %if.else ], [ %head, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.addr.0, metadata !3114, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after3.0, metadata !3119, metadata !DIExpression()), !dbg !3138
  %cmp9 = icmp eq %struct.rtx_def* %after3.0, %bb_note, !dbg !3140
  br i1 %cmp9, label %if.end47, label %land.lhs.true10, !dbg !3142

land.lhs.true10:                                  ; preds = %if.end
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after3.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3143
  %rt_rtx14 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !3143
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !3143
  %cmp15 = icmp eq %struct.rtx_def* %6, %bb_note, !dbg !3144
  br i1 %cmp15, label %if.end47, label %if.then16, !dbg !3145

if.then16:                                        ; preds = %land.lhs.true10
  tail call void @reorder_insns_nobb(%struct.rtx_def* nonnull %bb_note, %struct.rtx_def* nonnull %bb_note, %struct.rtx_def* %after3.0) #6, !dbg !3146
  br label %if.end47, !dbg !3146

if.else18:                                        ; preds = %land.lhs.true, %entry, %land.lhs.true1
  %call = tail call %struct.basic_block_def* @alloc_block() #6, !dbg !3147
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !3118, metadata !DIExpression()), !dbg !3124
  tail call void @init_rtl_bb_info(%struct.basic_block_def* %call) #7, !dbg !3149
  %tobool19 = icmp ne %struct.rtx_def* %head, null, !dbg !3150
  %tobool21 = icmp ne %struct.rtx_def* %end, null, !dbg !3152
  %or.cond = or i1 %tobool19, %tobool21, !dbg !3153
  br i1 %or.cond, label %if.else25, label %if.then22, !dbg !3153

if.then22:                                        ; preds = %if.else18
  %call23 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !3154
  %call24 = tail call %struct.rtx_def* @emit_note_after(i32 10, %struct.rtx_def* %call23) #6, !dbg !3155
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !3116, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !3115, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !3114, metadata !DIExpression()), !dbg !3124
  br label %if.end42, !dbg !3156

if.else25:                                        ; preds = %if.else18
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head, i64 0, i32 0, !dbg !3157
  %bf.load26 = load i32, i32* %7, align 8, !dbg !3157
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !3157
  %cmp28 = icmp eq i32 %bf.clear27, 12, !dbg !3157
  %or.cond1 = and i1 %cmp28, %tobool21, !dbg !3159
  br i1 %or.cond1, label %if.then31, label %if.else36, !dbg !3159

if.then31:                                        ; preds = %if.else25
  %call32 = tail call %struct.rtx_def* @emit_note_after(i32 10, %struct.rtx_def* %head) #6, !dbg !3160
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call32, metadata !3116, metadata !DIExpression()), !dbg !3124
  %cmp33 = icmp eq %struct.rtx_def* %head, %end, !dbg !3162
  %spec.select = select i1 %cmp33, %struct.rtx_def* %call32, %struct.rtx_def* %end, !dbg !3164
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !3115, metadata !DIExpression()), !dbg !3124
  br label %if.end42, !dbg !3165

if.else36:                                        ; preds = %if.else25
  %call37 = tail call %struct.rtx_def* @emit_note_before(i32 10, %struct.rtx_def* %head) #6, !dbg !3166
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !3116, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !3114, metadata !DIExpression()), !dbg !3124
  %tobool38 = icmp eq %struct.rtx_def* %end, null, !dbg !3168
  %spec.select2 = select i1 %tobool38, %struct.rtx_def* %call37, %struct.rtx_def* %end, !dbg !3170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select2, metadata !3115, metadata !DIExpression()), !dbg !3124
  br label %if.end42

if.end42:                                         ; preds = %if.then31, %if.else36, %if.then22
  %bb_note.addr.1 = phi %struct.rtx_def* [ %call24, %if.then22 ], [ %call32, %if.then31 ], [ %call37, %if.else36 ], !dbg !3171
  %end.addr.3 = phi %struct.rtx_def* [ %call24, %if.then22 ], [ %spec.select, %if.then31 ], [ %spec.select2, %if.else36 ], !dbg !3171
  %head.addr.2 = phi %struct.rtx_def* [ %call24, %if.then22 ], [ %head, %if.then31 ], [ %call37, %if.else36 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.addr.2, metadata !3114, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.addr.3, metadata !3115, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_note.addr.1, metadata !3116, metadata !DIExpression()), !dbg !3124
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %bb_note.addr.1, i64 0, i32 1, i32 0, i32 2, !dbg !3172
  %rt_bb46 = bitcast i64* %arrayidx45 to %struct.basic_block_def**, !dbg !3172
  store %struct.basic_block_def* %call, %struct.basic_block_def** %rt_bb46, align 8, !dbg !3173
  br label %if.end47

if.end47:                                         ; preds = %land.lhs.true10, %if.end, %if.then16, %if.end42
  %bb.0 = phi %struct.basic_block_def* [ %call, %if.end42 ], [ %0, %if.then16 ], [ %0, %land.lhs.true10 ], [ %0, %if.end ], !dbg !3174
  %bb_note.addr.2 = phi %struct.rtx_def* [ %bb_note.addr.1, %if.end42 ], [ %bb_note, %if.then16 ], [ %bb_note, %land.lhs.true10 ], [ %bb_note, %if.end ]
  %end.addr.4 = phi %struct.rtx_def* [ %end.addr.3, %if.end42 ], [ %end, %if.then16 ], [ %end, %land.lhs.true10 ], [ %end, %if.end ]
  %head.addr.3 = phi %struct.rtx_def* [ %head.addr.2, %if.end42 ], [ %head.addr.0, %if.then16 ], [ %head.addr.0, %land.lhs.true10 ], [ %head.addr.0, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.addr.3, metadata !3114, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.addr.4, metadata !3115, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_note.addr.2, metadata !3116, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3118, metadata !DIExpression()), !dbg !3124
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %end.addr.4, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3175
  %rt_rtx51 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !3175
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !3175
  %cmp52 = icmp eq %struct.rtx_def* %9, %bb_note.addr.2, !dbg !3177
  %spec.select3 = select i1 %cmp52, %struct.rtx_def* %bb_note.addr.2, %struct.rtx_def* %end.addr.4, !dbg !3178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select3, metadata !3115, metadata !DIExpression()), !dbg !3124
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !3179
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3179
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3179
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 0, !dbg !3179
  store %struct.rtx_def* %head.addr.3, %struct.rtx_def** %head_, align 8, !dbg !3180
  %11 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3181
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %11, i64 0, i32 1, !dbg !3181
  store %struct.rtx_def* %spec.select3, %struct.rtx_def** %end_, align 8, !dbg !3182
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3183
  %cfg = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 1, !dbg !3183
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3183
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 5, !dbg !3183
  %14 = load i32, i32* %x_last_basic_block, align 8, !dbg !3184
  %inc = add nsw i32 %14, 1, !dbg !3184
  store i32 %inc, i32* %x_last_basic_block, align 8, !dbg !3184
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3185
  store i32 %14, i32* %index, align 8, !dbg !3186
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 13, !dbg !3187
  store i32 513, i32* %flags, align 8, !dbg !3188
  tail call void @link_block(%struct.basic_block_def* %bb.0, %struct.basic_block_def* %after) #6, !dbg !3189
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3190
  %cfg58 = getelementptr inbounds %struct.function, %struct.function* %15, i64 0, i32 1, !dbg !3190
  %16 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg58, align 8, !dbg !3190
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %16, i64 0, i32 2, !dbg !3190
  %17 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3190
  %tobool59 = icmp eq %struct.VEC_basic_block_gc* %17, null, !dbg !3190
  br i1 %tobool59, label %cond.end, label %cond.true, !dbg !3190

cond.true:                                        ; preds = %if.end47
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %17, i64 0, i32 0, !dbg !3190
  br label %cond.end, !dbg !3190

cond.end:                                         ; preds = %if.end47, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %if.end47 ], !dbg !3190
  %18 = load i32, i32* %index, align 8, !dbg !3190
  %call64 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond, i32 %18, %struct.basic_block_def* %bb.0) #7, !dbg !3190
  %19 = load i32, i32* %index, align 8, !dbg !3191
  tail call void @df_bb_refs_record(i32 %19, i8 zeroext 0) #6, !dbg !3192
  tail call void @update_bb_for_insn(%struct.basic_block_def* %bb.0) #7, !dbg !3193
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3122, metadata !DIExpression()), !dbg !3194
  %20 = load i32, i32* %flags, align 8, !dbg !3195
  %and = and i32 %20, -97, !dbg !3195
  store i32 %and, i32* %flags, align 8, !dbg !3195
  %aux68 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 2, !dbg !3196
  %21 = bitcast i8** %aux68 to %struct.basic_block_def**, !dbg !3197
  store %struct.basic_block_def* %bb.0, %struct.basic_block_def** %21, align 8, !dbg !3197
  ret %struct.basic_block_def* %bb.0, !dbg !3198
}

declare dso_local void @reorder_insns_nobb(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.basic_block_def* @alloc_block() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @init_rtl_bb_info(%struct.basic_block_def* %bb) local_unnamed_addr #4 !dbg !3199 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3201, metadata !DIExpression()), !dbg !3202
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !3203
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3203
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3203
  %tobool = icmp eq %struct.rtl_bb_info* %0, null, !dbg !3203
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3203

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 3064, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3203
  br label %cond.end, !dbg !3203

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call i8* @ggc_alloc_cleared_stat(i64 40) #6, !dbg !3204
  %1 = bitcast %union.basic_block_il_dependent* %il to i8**, !dbg !3205
  store i8* %call, i8** %1, align 8, !dbg !3205
  ret void, !dbg !3206
}

declare dso_local %struct.rtx_def* @emit_note_after(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_last_insn() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_note_before(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @link_block(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %vec_, i32 %ix_, %struct.basic_block_def* %obj_) unnamed_addr #0 !dbg !3207 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !3212, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3213, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %obj_, metadata !3214, metadata !DIExpression()), !dbg !3216
  %idxprom = zext i32 %ix_ to i64, !dbg !3217
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3217
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !3217
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !3215, metadata !DIExpression()), !dbg !3216
  store %struct.basic_block_def* %obj_, %struct.basic_block_def** %arrayidx, align 8, !dbg !3217
  ret %struct.basic_block_def* %0, !dbg !3217
}

declare dso_local void @df_bb_refs_record(i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @update_bb_for_insn(%struct.basic_block_def* %bb) local_unnamed_addr #4 !dbg !3218 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3220, metadata !DIExpression()), !dbg !3221
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !3222
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3222
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3222
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !3222
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3222
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !3223
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3223
  tail call fastcc void @update_bb_for_insn_chain(%struct.rtx_def* %1, %struct.rtx_def* %2, %struct.basic_block_def* %bb) #7, !dbg !3224
  ret void, !dbg !3225
}

; Function Attrs: nounwind uwtable
define dso_local void @compute_bb_for_insn() local_unnamed_addr #4 !dbg !3226 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3236
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3236
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3236
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3236
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3236
  br label %for.cond, !dbg !3236

for.cond:                                         ; preds = %for.inc10, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre, %for.inc10 ], !dbg !3237
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc10 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3238
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3238
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3230, metadata !DIExpression()), !dbg !3239
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !3237
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3237
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !3237
  br i1 %cmp, label %for.end12, label %for.body, !dbg !3236

for.body:                                         ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !3240
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3240
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3240
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 1, !dbg !3240
  %6 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !3231, metadata !DIExpression()), !dbg !3241
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 0, !dbg !3242
  br label %for.cond5, !dbg !3244

for.cond5:                                        ; preds = %for.inc, %for.body
  %insn.0.in = phi %struct.rtx_def** [ %head_, %for.body ], [ %rt_rtx, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !3245
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3235, metadata !DIExpression()), !dbg !3241
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 1, !dbg !3246
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !3246
  store %struct.basic_block_def* %bb.0, %struct.basic_block_def** %rt_bb, align 8, !dbg !3249
  %cmp6 = icmp eq %struct.rtx_def* %insn.0, %6, !dbg !3250
  br i1 %cmp6, label %for.inc10, label %for.inc, !dbg !3252

for.inc:                                          ; preds = %for.cond5
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3253
  %rt_rtx = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !3253
  br label %for.cond5, !dbg !3254, !llvm.loop !3255

for.inc10:                                        ; preds = %for.cond5
  %.pre = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3237
  br label %for.cond, !dbg !3237, !llvm.loop !3258

for.end12:                                        ; preds = %for.cond
  ret void, !dbg !3260
}

; Function Attrs: nounwind uwtable
define dso_local i32 @free_bb_for_insn() local_unnamed_addr #4 !dbg !3261 {
entry:
  %call = tail call %struct.rtx_def* @get_insns() #6, !dbg !3264
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3263, metadata !DIExpression()), !dbg !3266
  br label %for.cond, !dbg !3267

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0 = phi %struct.rtx_def* [ %call, %entry ], [ %2, %for.inc ], !dbg !3268
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3263, metadata !DIExpression()), !dbg !3266
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !3269
  br i1 %tobool, label %for.end, label %for.body, !dbg !3269

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3270
  %bf.load = load i32, i32* %0, align 8, !dbg !3270
  %bf.clear = and i32 %bf.load, 65535, !dbg !3270
  %cmp = icmp eq i32 %bf.clear, 11, !dbg !3270
  br i1 %cmp, label %for.inc, label %if.then, !dbg !3273

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 1, !dbg !3274
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !3274
  store %struct.basic_block_def* null, %struct.basic_block_def** %rt_bb, align 8, !dbg !3275
  br label %for.inc, !dbg !3274

for.inc:                                          ; preds = %for.body, %if.then
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3276
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !3276
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3276
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3263, metadata !DIExpression()), !dbg !3266
  br label %for.cond, !dbg !3277, !llvm.loop !3278

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !3280
}

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_pass_free_cfg() #4 !dbg !3281 {
entry:
  %call = tail call i32 @free_bb_for_insn() #7, !dbg !3282
  ret i32 0, !dbg !3283
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @entry_of_function() local_unnamed_addr #4 !dbg !3284 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3287
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3287
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3287
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !3287
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !3287
  %cmp = icmp sgt i32 %2, 2, !dbg !3288
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3287

cond.true:                                        ; preds = %entry
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3289
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3289
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 6, !dbg !3289
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !3289
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 7, !dbg !3289
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3289
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3289
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 0, !dbg !3289
  %6 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3289
  br label %cond.end, !dbg !3287

cond.false:                                       ; preds = %entry
  %call = tail call %struct.rtx_def* @get_insns() #6, !dbg !3290
  br label %cond.end, !dbg !3287

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %6, %cond.true ], [ %call, %cond.false ], !dbg !3287
  ret %struct.rtx_def* %cond, !dbg !3291
}

; Function Attrs: nounwind uwtable
define dso_local void @emit_insn_at_entry(%struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !3292 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3296, metadata !DIExpression()), !dbg !3299
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3300
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3300
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3300
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3300
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3300
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 1, !dbg !3300
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3300
  %3 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !3300
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !3300
  %call1 = tail call fastcc %struct.edge_def* @ei_safe_edge(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !3301
  call void @llvm.dbg.value(metadata %struct.edge_def* %call1, metadata !3298, metadata !DIExpression()), !dbg !3299
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 7, !dbg !3302
  %5 = load i32, i32* %flags, align 8, !dbg !3302
  %and = and i32 %5, 1, !dbg !3302
  %tobool = icmp eq i32 %and, 0, !dbg !3302
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3302

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 466, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3302
  br label %cond.end, !dbg !3302

cond.end:                                         ; preds = %entry, %cond.true
  tail call void @insert_insn_on_edge(%struct.rtx_def* %insn, %struct.edge_def* %call1) #7, !dbg !3303
  tail call void @commit_edge_insertions() #7, !dbg !3304
  ret void, !dbg !3305
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !3306 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !3310, metadata !DIExpression()), !dbg !3312
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !3313
  store i32 0, i32* %index, align 8, !dbg !3314
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !3315
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !3316
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !3317
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !3317
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !3317
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_safe_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !3318 {
entry:
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !3323
  %tobool = icmp eq i8 %call, 0, !dbg !3323
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3324

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !3325
  br label %cond.end, !dbg !3324

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.edge_def* [ %call1, %cond.true ], [ null, %entry ], !dbg !3324
  ret %struct.edge_def* %cond, !dbg !3326
}

; Function Attrs: nounwind uwtable
define dso_local void @insert_insn_on_edge(%struct.rtx_def* %pattern, %struct.edge_def* %e) local_unnamed_addr #4 !dbg !3327 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !3331, metadata !DIExpression()), !dbg !3333
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3332, metadata !DIExpression()), !dbg !3333
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !3334
  %0 = load i32, i32* %flags, align 8, !dbg !3334
  %and = and i32 %0, 2, !dbg !3334
  %tobool = icmp eq i32 %and, 0, !dbg !3334
  br i1 %tobool, label %cond.end17, label %land.lhs.true, !dbg !3334

land.lhs.true:                                    ; preds = %entry
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !3334
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3334
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 1, !dbg !3334
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3334
  %tobool1 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !3334
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !3334

cond.true:                                        ; preds = %land.lhs.true
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !3334
  br label %cond.end, !dbg !3334

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %land.lhs.true ], !dbg !3334
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3334
  %cmp = icmp ugt i32 %call, 1, !dbg !3334
  br i1 %cmp, label %land.lhs.true4, label %cond.end17, !dbg !3334

land.lhs.true4:                                   ; preds = %cond.end
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !3334
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3334
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 0, !dbg !3334
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3334
  %tobool5 = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !3334
  br i1 %tobool5, label %cond.end11, label %cond.true6, !dbg !3334

cond.true6:                                       ; preds = %land.lhs.true4
  %base9 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !3334
  br label %cond.end11, !dbg !3334

cond.end11:                                       ; preds = %land.lhs.true4, %cond.true6
  %cond12 = phi %struct.VEC_edge_base* [ %base9, %cond.true6 ], [ null, %land.lhs.true4 ], !dbg !3334
  %call13 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond12) #7, !dbg !3334
  %cmp14 = icmp ugt i32 %call13, 1, !dbg !3334
  br i1 %cmp14, label %cond.true15, label %cond.end17, !dbg !3334

cond.true15:                                      ; preds = %cond.end11
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1424, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3334
  br label %cond.end17, !dbg !3334

cond.end17:                                       ; preds = %entry, %cond.end, %cond.end11, %cond.true15
  %insns = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 2, !dbg !3335
  %r = bitcast %union.edge_def_insns* %insns to %struct.rtx_def**, !dbg !3337
  %5 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !3337
  %cmp19 = icmp eq %struct.rtx_def* %5, null, !dbg !3338
  br i1 %cmp19, label %if.then, label %if.else, !dbg !3339

if.then:                                          ; preds = %cond.end17
  tail call void @start_sequence() #6, !dbg !3340
  br label %if.end, !dbg !3340

if.else:                                          ; preds = %cond.end17
  tail call void @push_to_sequence(%struct.rtx_def* nonnull %5) #6, !dbg !3341
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call22 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %pattern) #6, !dbg !3342
  %call23 = tail call %struct.rtx_def* @get_insns() #6, !dbg !3343
  store %struct.rtx_def* %call23, %struct.rtx_def** %r, align 8, !dbg !3344
  tail call void @end_sequence() #6, !dbg !3345
  ret void, !dbg !3346
}

; Function Attrs: nounwind uwtable
define dso_local void @commit_edge_insertions() local_unnamed_addr #4 !dbg !3347 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !3351, metadata !DIExpression()), !dbg !3357
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3358
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3358
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3358
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3358
  %2 = bitcast %struct.edge_def** %e to i8*, !dbg !3359
  %3 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3359
  %4 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3360
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3360
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3360
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3362
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3362
  br label %for.cond, !dbg !3358

for.cond:                                         ; preds = %for.end, %entry
  %9 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.end ], !dbg !3364
  %changed.0 = phi i8 [ 0, %entry ], [ %changed.1.lcssa, %for.end ], !dbg !3365
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %entry ], [ %next_bb, %for.end ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3366
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3349, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !3351, metadata !DIExpression()), !dbg !3357
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 1, !dbg !3364
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3364
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %10, !dbg !3364
  br i1 %cmp, label %for.end8, label %for.body, !dbg !3358

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3367
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !3368
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !3369
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !3369
  %call = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3369
  %11 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !3369
  store i32 %11, i32* %5, align 8, !dbg !3369
  %12 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !3369
  store %struct.VEC_edge_gc** %12, %struct.VEC_edge_gc*** %6, align 8, !dbg !3369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !3369
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !3369
  br label %for.cond3, !dbg !3369

for.cond3:                                        ; preds = %for.inc, %for.body
  %changed.1 = phi i8 [ %changed.0, %for.body ], [ %changed.2, %for.inc ], !dbg !3357
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !3351, metadata !DIExpression()), !dbg !3357
  %13 = load i32, i32* %7, align 8, !dbg !3370
  %14 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !3370
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3352, metadata !DIExpression(DW_OP_deref)), !dbg !3359
  %call4 = call fastcc zeroext i8 @ei_cond(i32 %13, %struct.VEC_edge_gc** %14, %struct.edge_def** nonnull %e) #7, !dbg !3370
  %tobool = icmp eq i8 %call4, 0, !dbg !3369
  br i1 %tobool, label %for.end, label %for.body5, !dbg !3369

for.body5:                                        ; preds = %for.cond3
  %15 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3371
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !3352, metadata !DIExpression()), !dbg !3359
  %insns = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i64 0, i32 2, !dbg !3373
  %r = bitcast %union.edge_def_insns* %insns to %struct.rtx_def**, !dbg !3374
  %16 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !3374
  %tobool6 = icmp eq %struct.rtx_def* %16, null, !dbg !3371
  br i1 %tobool6, label %for.inc, label %if.then, !dbg !3375

if.then:                                          ; preds = %for.body5
  call void @llvm.dbg.value(metadata i8 1, metadata !3351, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !3352, metadata !DIExpression()), !dbg !3359
  call void @commit_one_edge_insertion(%struct.edge_def* %15) #7, !dbg !3376
  br label %for.inc, !dbg !3378

for.inc:                                          ; preds = %for.body5, %if.then
  %changed.2 = phi i8 [ 1, %if.then ], [ %changed.1, %for.body5 ], !dbg !3357
  call void @llvm.dbg.value(metadata i8 %changed.2, metadata !3351, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3356, metadata !DIExpression(DW_OP_deref)), !dbg !3359
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3370
  br label %for.cond3, !dbg !3370, !llvm.loop !3379

for.end:                                          ; preds = %for.cond3
  %changed.1.lcssa = phi i8 [ %changed.1, %for.cond3 ], !dbg !3357
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !3351, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !3351, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !3351, metadata !DIExpression()), !dbg !3357
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !3381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3381
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !3364
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3364
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3382
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3364
  br label %for.cond, !dbg !3364, !llvm.loop !3383

for.end8:                                         ; preds = %for.cond
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !3365
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !3351, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !3351, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !3351, metadata !DIExpression()), !dbg !3357
  %tobool9 = icmp eq i8 %changed.0.lcssa, 0, !dbg !3385
  br i1 %tobool9, label %cleanup.cont, label %if.end11, !dbg !3387

if.end11:                                         ; preds = %for.end8
  %call12 = call i32 @current_ir_type() #6, !dbg !3388
  %cmp13 = icmp eq i32 %call12, 2, !dbg !3390
  br i1 %cmp13, label %cleanup.cont, label %if.end15, !dbg !3391

if.end15:                                         ; preds = %if.end11
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3392
  %cfg17 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 1, !dbg !3392
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg17, align 8, !dbg !3392
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 5, !dbg !3392
  %19 = load i32, i32* %x_last_basic_block, align 8, !dbg !3392
  %call18 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %19) #6, !dbg !3393
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call18, metadata !3350, metadata !DIExpression()), !dbg !3357
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call18) #6, !dbg !3394
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3395
  %cfg20 = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, i32 1, !dbg !3395
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg20, align 8, !dbg !3395
  %x_entry_block_ptr21 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 0, !dbg !3395
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr21, align 8, !dbg !3395
  br label %for.cond23, !dbg !3395

for.cond23:                                       ; preds = %for.inc36, %if.end15
  %.pre24 = phi %struct.function* [ %20, %if.end15 ], [ %.pre2, %for.inc36 ]
  %23 = phi %struct.control_flow_graph* [ %21, %if.end15 ], [ %.pre3, %for.inc36 ], !dbg !3397
  %.pn = phi %struct.basic_block_def* [ %22, %if.end15 ], [ %bb.1, %for.inc36 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3399
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !3399
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !3349, metadata !DIExpression()), !dbg !3357
  %x_exit_block_ptr26 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %23, i64 0, i32 1, !dbg !3397
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr26, align 8, !dbg !3397
  %cmp27 = icmp eq %struct.basic_block_def* %bb.1, %24, !dbg !3397
  br i1 %cmp27, label %for.end38, label %for.body28, !dbg !3395

for.body28:                                       ; preds = %for.cond23
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 2, !dbg !3400
  %25 = load i8*, i8** %aux, align 8, !dbg !3400
  %tobool29 = icmp eq i8* %25, null, !dbg !3402
  br i1 %tobool29, label %for.inc36, label %if.then30, !dbg !3403

if.then30:                                        ; preds = %for.body28
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !3404
  %26 = load i32, i32* %index, align 8, !dbg !3404
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call18, i32 %26) #7, !dbg !3406
  %27 = load i8*, i8** %aux, align 8, !dbg !3407
  %28 = bitcast i8** %aux to i8*, !dbg !3407
  %cmp33 = icmp eq i8* %27, %28, !dbg !3407
  br i1 %cmp33, label %cond.end, label %cond.true, !dbg !3407

cond.true:                                        ; preds = %if.then30
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1594, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3407
  br label %cond.end, !dbg !3407

cond.end:                                         ; preds = %if.then30, %cond.true
  store i8* null, i8** %aux, align 8, !dbg !3408
  %.pre2.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3397
  br label %for.inc36, !dbg !3409

for.inc36:                                        ; preds = %for.body28, %cond.end
  %.pre2 = phi %struct.function* [ %.pre24, %for.body28 ], [ %.pre2.pre, %cond.end ], !dbg !3397
  %cfg25.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre2, i64 0, i32 1, !dbg !3410
  %.pre3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg25.phi.trans.insert, align 8, !dbg !3397
  br label %for.cond23, !dbg !3397, !llvm.loop !3411

for.end38:                                        ; preds = %for.cond23
  call void @find_many_sub_basic_blocks(%struct.simple_bitmap_def* %call18) #6, !dbg !3413
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call18, i64 0, i32 0, !dbg !3414
  %29 = load i8*, i8** %popcount, align 8, !dbg !3414
  call void @free(i8* %29) #6, !dbg !3414
  %30 = bitcast %struct.simple_bitmap_def* %call18 to i8*, !dbg !3414
  call void @free(i8* %30) #6, !dbg !3414
  br label %cleanup.cont, !dbg !3415

cleanup.cont:                                     ; preds = %for.end8, %for.end38, %if.end11
  ret void, !dbg !3415
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_bb_for_insn_chain(%struct.rtx_def* %begin, %struct.rtx_def* %end, %struct.basic_block_def* %bb) unnamed_addr #4 !dbg !3416 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %begin, metadata !3420, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end, metadata !3421, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3422, metadata !DIExpression()), !dbg !3424
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %end, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3425
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !3425
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3425
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3421, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata %struct.rtx_def* %begin, metadata !3423, metadata !DIExpression()), !dbg !3424
  br label %for.cond, !dbg !3426

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0 = phi %struct.rtx_def* [ %begin, %entry ], [ %4, %for.inc ], !dbg !3428
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3423, metadata !DIExpression()), !dbg !3424
  %cmp = icmp eq %struct.rtx_def* %insn.0, %1, !dbg !3429
  br i1 %cmp, label %for.end, label %for.body, !dbg !3431

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3432
  %bf.load = load i32, i32* %2, align 8, !dbg !3432
  %bf.clear = and i32 %bf.load, 65535, !dbg !3432
  %cmp1 = icmp eq i32 %bf.clear, 11, !dbg !3432
  br i1 %cmp1, label %for.inc, label %if.then, !dbg !3434

if.then:                                          ; preds = %for.body
  tail call void @df_insn_change_bb(%struct.rtx_def* %insn.0, %struct.basic_block_def* %bb) #6, !dbg !3435
  br label %for.inc, !dbg !3435

for.inc:                                          ; preds = %for.body, %if.then
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3436
  %rt_rtx5 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !3436
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !3436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3423, metadata !DIExpression()), !dbg !3424
  br label %for.cond, !dbg !3437, !llvm.loop !3438

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3440
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @block_label(%struct.basic_block_def* %block) local_unnamed_addr #4 !dbg !3441 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !3445, metadata !DIExpression()), !dbg !3446
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3447
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3447
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3447
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !3447
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3447
  %cmp = icmp eq %struct.basic_block_def* %2, %block, !dbg !3449
  br i1 %cmp, label %return, label %if.end, !dbg !3450

if.end:                                           ; preds = %entry
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 7, !dbg !3451
  %3 = bitcast %union.basic_block_il_dependent* %il to i32***, !dbg !3451
  %4 = load i32**, i32*** %3, align 8, !dbg !3451
  %5 = load i32*, i32** %4, align 8, !dbg !3451
  %bf.load = load i32, i32* %5, align 8, !dbg !3451
  %bf.clear = and i32 %bf.load, 65535, !dbg !3451
  %cmp1 = icmp eq i32 %bf.clear, 12, !dbg !3451
  br i1 %cmp1, label %if.end.if.end10_crit_edge, label %if.then2, !dbg !3453

if.end.if.end10_crit_edge:                        ; preds = %if.end
  %6 = bitcast i32** %4 to %struct.rtl_bb_info*, !dbg !3453
  br label %if.end10, !dbg !3453

if.then2:                                         ; preds = %if.end
  %call = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !3454
  %rtl4 = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3456
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl4, align 8, !dbg !3456
  %head_5 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 0, !dbg !3456
  %8 = load %struct.rtx_def*, %struct.rtx_def** %head_5, align 8, !dbg !3456
  %call6 = tail call %struct.rtx_def* @emit_label_before(%struct.rtx_def* %call, %struct.rtx_def* %8) #6, !dbg !3457
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl4, align 8, !dbg !3458
  %head_9 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 0, !dbg !3458
  store %struct.rtx_def* %call6, %struct.rtx_def** %head_9, align 8, !dbg !3459
  %.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl4, align 8, !dbg !3460
  br label %if.end10, !dbg !3461

if.end10:                                         ; preds = %if.end.if.end10_crit_edge, %if.then2
  %10 = phi %struct.rtl_bb_info* [ %.pre, %if.then2 ], [ %6, %if.end.if.end10_crit_edge ], !dbg !3460
  %head_13 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 0, !dbg !3460
  %11 = load %struct.rtx_def*, %struct.rtx_def** %head_13, align 8, !dbg !3460
  br label %return, !dbg !3462

return:                                           ; preds = %entry, %if.end10
  %retval.0 = phi %struct.rtx_def* [ %11, %if.end10 ], [ null, %entry ], !dbg !3446
  ret %struct.rtx_def* %retval.0, !dbg !3463
}

declare dso_local %struct.rtx_def* @emit_label_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_label_rtx() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.edge_def* @try_redirect_by_replacing_jump(%struct.edge_def* %e, %struct.basic_block_def* %target, i8 zeroext %in_cfglayout) local_unnamed_addr #4 !dbg !3464 {
entry:
  %label = alloca %struct.rtx_def*, align 8
  %table = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3468, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target, metadata !3469, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i8 %in_cfglayout, metadata !3470, metadata !DIExpression()), !dbg !3493
  %src1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !3494
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3494
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !3471, metadata !DIExpression()), !dbg !3493
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !3495
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3495
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3495
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !3495
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3495
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3472, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i32 0, metadata !3475, metadata !DIExpression()), !dbg !3493
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %2, i32 29, %struct.rtx_def* null) #6, !dbg !3496
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !3496
  br i1 %tobool, label %lor.lhs.false, label %cleanup, !dbg !3498

lor.lhs.false:                                    ; preds = %entry
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 13, !dbg !3499
  %3 = load i32, i32* %flags, align 8, !dbg !3499
  %flags2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %target, i64 0, i32 13, !dbg !3500
  %4 = load i32, i32* %flags2, align 8, !dbg !3500
  %5 = xor i32 %3, %4, !dbg !3501
  %6 = and i32 %5, 96, !dbg !3501
  %cmp = icmp eq i32 %6, 0, !dbg !3501
  br i1 %cmp, label %if.end, label %cleanup, !dbg !3502

if.end:                                           ; preds = %lor.lhs.false
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 1, !dbg !3503
  %7 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3503
  %tobool4 = icmp eq %struct.VEC_edge_gc* %7, null, !dbg !3503
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !3503

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !3503
  br label %cond.end, !dbg !3503

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3503
  %call6 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3503
  %cmp7 = icmp ugt i32 %call6, 2, !dbg !3505
  br i1 %cmp7, label %cleanup, label %lor.lhs.false8, !dbg !3506

lor.lhs.false8:                                   ; preds = %cond.end
  %8 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3507
  %tobool10 = icmp eq %struct.VEC_edge_gc* %8, null, !dbg !3507
  br i1 %tobool10, label %cond.end15, label %cond.true11, !dbg !3507

cond.true11:                                      ; preds = %lor.lhs.false8
  %base13 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %8, i64 0, i32 0, !dbg !3507
  br label %cond.end15, !dbg !3507

cond.end15:                                       ; preds = %lor.lhs.false8, %cond.true11
  %cond16 = phi %struct.VEC_edge_base* [ %base13, %cond.true11 ], [ null, %lor.lhs.false8 ], !dbg !3507
  %call17 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond16) #7, !dbg !3507
  %cmp18 = icmp eq i32 %call17, 2, !dbg !3508
  br i1 %cmp18, label %land.lhs.true, label %if.end41, !dbg !3509

land.lhs.true:                                    ; preds = %cond.end15
  %9 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3510
  %tobool20 = icmp eq %struct.VEC_edge_gc* %9, null, !dbg !3510
  br i1 %tobool20, label %cond.end25, label %cond.true21, !dbg !3510

cond.true21:                                      ; preds = %land.lhs.true
  %base23 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %9, i64 0, i32 0, !dbg !3510
  br label %cond.end25, !dbg !3510

cond.end25:                                       ; preds = %land.lhs.true, %cond.true21
  %cond26 = phi %struct.VEC_edge_base* [ %base23, %cond.true21 ], [ null, %land.lhs.true ], !dbg !3510
  br i1 %tobool20, label %cond.end33, label %cond.true29, !dbg !3510

cond.true29:                                      ; preds = %cond.end25
  %base31 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %9, i64 0, i32 0, !dbg !3510
  br label %cond.end33, !dbg !3510

cond.end33:                                       ; preds = %cond.end25, %cond.true29
  %cond34 = phi %struct.VEC_edge_base* [ %base31, %cond.true29 ], [ null, %cond.end25 ], !dbg !3510
  %call35 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond34, i32 0) #7, !dbg !3510
  %cmp36 = icmp eq %struct.edge_def* %call35, %e, !dbg !3510
  %conv = zext i1 %cmp36 to i32, !dbg !3510
  %call37 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond26, i32 %conv) #7, !dbg !3510
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call37, i64 0, i32 1, !dbg !3511
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3511
  %cmp38 = icmp eq %struct.basic_block_def* %10, %target, !dbg !3512
  br i1 %cmp38, label %if.end41, label %cleanup, !dbg !3513

if.end41:                                         ; preds = %cond.end33, %cond.end15
  %call42 = tail call i32 @onlyjump_p(%struct.rtx_def* %2) #6, !dbg !3514
  %tobool43 = icmp eq i32 %call42, 0, !dbg !3514
  br i1 %tobool43, label %cleanup, label %if.end45, !dbg !3516

if.end45:                                         ; preds = %if.end41
  %11 = load i32, i32* @optimize, align 4, !dbg !3517
  %tobool46 = icmp eq i32 %11, 0, !dbg !3517
  %12 = load i32, i32* @reload_completed, align 4, !dbg !3519
  %tobool48 = icmp ne i32 %12, 0, !dbg !3519
  %or.cond = or i1 %tobool46, %tobool48, !dbg !3520
  br i1 %or.cond, label %land.lhs.true49, label %if.end54, !dbg !3520

land.lhs.true49:                                  ; preds = %if.end45
  %call50 = tail call zeroext i8 @tablejump_p(%struct.rtx_def* %2, %struct.rtx_def** null, %struct.rtx_def** null) #6, !dbg !3521
  %tobool52 = icmp eq i8 %call50, 0, !dbg !3521
  br i1 %tobool52, label %if.end54, label %cleanup, !dbg !3522

if.end54:                                         ; preds = %land.lhs.true49, %if.end45
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !3523
  %bf.load = load i32, i32* %13, align 8, !dbg !3523
  %bf.clear = and i32 %bf.load, 65535, !dbg !3523
  %cmp55 = icmp eq i32 %bf.clear, 8, !dbg !3523
  br i1 %cmp55, label %cond.true72, label %lor.lhs.false57, !dbg !3523

lor.lhs.false57:                                  ; preds = %if.end54
  %cmp60 = icmp eq i32 %bf.clear, 7, !dbg !3523
  br i1 %cmp60, label %cond.true72, label %lor.lhs.false62, !dbg !3523

lor.lhs.false62:                                  ; preds = %lor.lhs.false57
  %cmp65 = icmp eq i32 %bf.clear, 9, !dbg !3523
  br i1 %cmp65, label %cond.true72, label %lor.lhs.false67, !dbg !3523

lor.lhs.false67:                                  ; preds = %lor.lhs.false62
  %cmp70 = icmp eq i32 %bf.clear, 10, !dbg !3523
  br i1 %cmp70, label %cond.true72, label %cond.end91, !dbg !3523

cond.true72:                                      ; preds = %lor.lhs.false67, %lor.lhs.false62, %lor.lhs.false57, %if.end54
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, !dbg !3523
  %14 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3523
  %15 = bitcast %union.rtunion_def* %14 to i32**, !dbg !3523
  %16 = load i32*, i32** %15, align 8, !dbg !3523
  %bf.load73 = load i32, i32* %16, align 8, !dbg !3523
  %bf.clear74 = and i32 %bf.load73, 65535, !dbg !3523
  %cmp75 = icmp eq i32 %bf.clear74, 23, !dbg !3523
  %17 = bitcast i32* %16 to %struct.rtx_def*, !dbg !3523
  br i1 %cmp75, label %cond.end91, label %cond.false82, !dbg !3523

cond.false82:                                     ; preds = %cond.true72
  %call87 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %2, %struct.rtx_def* %17) #6, !dbg !3523
  br label %cond.end91, !dbg !3523

cond.end91:                                       ; preds = %lor.lhs.false67, %cond.false82, %cond.true72
  %cond92 = phi %struct.rtx_def* [ %call87, %cond.false82 ], [ %17, %cond.true72 ], [ null, %lor.lhs.false67 ], !dbg !3523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond92, metadata !3474, metadata !DIExpression()), !dbg !3493
  %tobool93 = icmp eq %struct.rtx_def* %cond92, null, !dbg !3524
  br i1 %tobool93, label %cleanup, label %lor.lhs.false94, !dbg !3526

lor.lhs.false94:                                  ; preds = %cond.end91
  %call95 = tail call i32 @side_effects_p(%struct.rtx_def* nonnull %cond92) #6, !dbg !3527
  %tobool96 = icmp eq i32 %call95, 0, !dbg !3527
  br i1 %tobool96, label %if.end98, label %cleanup, !dbg !3528

if.end98:                                         ; preds = %lor.lhs.false94
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3473, metadata !DIExpression()), !dbg !3493
  %tobool100 = icmp eq i8 %in_cfglayout, 0, !dbg !3529
  br i1 %tobool100, label %lor.lhs.false101, label %if.then105, !dbg !3530

lor.lhs.false101:                                 ; preds = %if.end98
  %call102 = tail call zeroext i8 @can_fallthru(%struct.basic_block_def* %0, %struct.basic_block_def* %target) #6, !dbg !3531
  %tobool104 = icmp eq i8 %call102, 0, !dbg !3531
  br i1 %tobool104, label %if.else191, label %if.then105, !dbg !3532

if.then105:                                       ; preds = %lor.lhs.false101, %if.end98
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3533
  %tobool106 = icmp eq %struct._IO_FILE* %18, null, !dbg !3533
  br i1 %tobool106, label %if.end112, label %if.then107, !dbg !3535

if.then107:                                       ; preds = %if.then105
  %arrayidx110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3536
  %rt_int = bitcast %union.rtunion_def* %arrayidx110 to i32*, !dbg !3536
  %19 = load i32, i32* %rt_int, align 8, !dbg !3536
  %call111 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 %19) #6, !dbg !3537
  br label %if.end112, !dbg !3537

if.end112:                                        ; preds = %if.then105, %if.then107
  call void @llvm.dbg.value(metadata i32 1, metadata !3475, metadata !DIExpression()), !dbg !3493
  br i1 %tobool100, label %if.else183, label %if.then114, !dbg !3538

if.then114:                                       ; preds = %if.end112
  %20 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3539
  %footer = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %20, i64 0, i32 3, !dbg !3540
  %21 = load %struct.rtx_def*, %struct.rtx_def** %footer, align 8, !dbg !3540
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !3476, metadata !DIExpression()), !dbg !3541
  %end_120 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %20, i64 0, i32 1, !dbg !3542
  %22 = load %struct.rtx_def*, %struct.rtx_def** %end_120, align 8, !dbg !3542
  tail call void @delete_insn_chain(%struct.rtx_def* %2, %struct.rtx_def* %22, i8 zeroext 0) #7, !dbg !3543
  br label %while.cond, !dbg !3544

while.cond:                                       ; preds = %if.end178, %if.then114
  %insn115.0 = phi %struct.rtx_def* [ %21, %if.then114 ], [ %39, %if.end178 ], !dbg !3541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn115.0, metadata !3476, metadata !DIExpression()), !dbg !3541
  %tobool121 = icmp eq %struct.rtx_def* %insn115.0, null, !dbg !3544
  br i1 %tobool121, label %if.end354.loopexit, label %while.body, !dbg !3544

while.body:                                       ; preds = %while.cond
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn115.0, i64 0, i32 0, !dbg !3545
  %bf.load122 = load i32, i32* %23, align 8, !dbg !3545
  %bf.clear123 = and i32 %bf.load122, 65535, !dbg !3545
  %cmp124 = icmp eq i32 %bf.clear123, 11, !dbg !3545
  br i1 %cmp124, label %if.then126, label %if.end172, !dbg !3548

if.then126:                                       ; preds = %while.body
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn115.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3549
  %rt_rtx130 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !3549
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx130, align 8, !dbg !3549
  %tobool131 = icmp eq %struct.rtx_def* %25, null, !dbg !3549
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn115.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3552
  %27 = bitcast %union.rtunion_def* %26 to i64*, !dbg !3552
  %28 = load i64, i64* %27, align 8, !dbg !3552
  br i1 %tobool131, label %if.else, label %if.then132, !dbg !3553

if.then132:                                       ; preds = %if.then126
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3554
  %30 = bitcast %union.rtunion_def* %29 to i64*, !dbg !3555
  store i64 %28, i64* %30, align 8, !dbg !3555
  br label %if.end152, !dbg !3554

if.else:                                          ; preds = %if.then126
  %31 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3556
  %footer151 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %31, i64 0, i32 3, !dbg !3557
  %32 = bitcast %struct.rtx_def** %footer151 to i64*, !dbg !3558
  store i64 %28, i64* %32, align 8, !dbg !3558
  br label %if.end152

if.end152:                                        ; preds = %if.else, %if.then132
  %rt_rtx156 = bitcast %union.rtunion_def* %26 to %struct.rtx_def**, !dbg !3559
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx156, align 8, !dbg !3559
  %tobool157 = icmp eq %struct.rtx_def* %33, null, !dbg !3559
  br i1 %tobool157, label %if.end172, label %if.then158, !dbg !3561

if.then158:                                       ; preds = %if.end152
  %34 = bitcast %union.rtunion_def* %24 to i64*, !dbg !3562
  %35 = load i64, i64* %34, align 8, !dbg !3562
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3563
  %37 = bitcast %union.rtunion_def* %36 to i64*, !dbg !3564
  store i64 %35, i64* %37, align 8, !dbg !3564
  br label %if.end172, !dbg !3563

if.end172:                                        ; preds = %if.end152, %if.then158, %while.body
  %bf.load173 = load i32, i32* %23, align 8, !dbg !3565
  %bf.clear174 = and i32 %bf.load173, 65535, !dbg !3565
  %cmp175 = icmp eq i32 %bf.clear174, 12, !dbg !3565
  br i1 %cmp175, label %if.end354.loopexit, label %if.end178, !dbg !3567

if.end178:                                        ; preds = %if.end172
  %38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn115.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3568
  %rt_rtx182 = bitcast %union.rtunion_def* %38 to %struct.rtx_def**, !dbg !3568
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx182, align 8, !dbg !3568
  call void @llvm.dbg.value(metadata %struct.rtx_def* %39, metadata !3476, metadata !DIExpression()), !dbg !3541
  br label %while.cond, !dbg !3544, !llvm.loop !3569

if.else183:                                       ; preds = %if.end112
  %il184 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %target, i64 0, i32 7, !dbg !3571
  %rtl185 = bitcast %union.basic_block_il_dependent* %il184 to %struct.rtl_bb_info**, !dbg !3571
  %40 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl185, align 8, !dbg !3571
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %40, i64 0, i32 0, !dbg !3571
  %41 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3571
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3571
  %rt_rtx189 = bitcast %union.rtunion_def* %42 to %struct.rtx_def**, !dbg !3571
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx189, align 8, !dbg !3571
  tail call void @delete_insn_chain(%struct.rtx_def* %2, %struct.rtx_def* %43, i8 zeroext 0) #7, !dbg !3572
  br label %if.end354

if.else191:                                       ; preds = %lor.lhs.false101
  %call192 = tail call i32 @simplejump_p(%struct.rtx_def* %2) #6, !dbg !3573
  %tobool193 = icmp eq i32 %call192, 0, !dbg !3573
  br i1 %tobool193, label %if.else221, label %if.then194, !dbg !3574

if.then194:                                       ; preds = %if.else191
  %dest195 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !3575
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %dest195, align 8, !dbg !3575
  %cmp196 = icmp eq %struct.basic_block_def* %44, %target, !dbg !3578
  br i1 %cmp196, label %cleanup, label %if.end199, !dbg !3579

if.end199:                                        ; preds = %if.then194
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3580
  %tobool200 = icmp eq %struct._IO_FILE* %45, null, !dbg !3580
  br i1 %tobool200, label %if.end209, label %if.then201, !dbg !3582

if.then201:                                       ; preds = %if.end199
  %arrayidx204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3583
  %rt_int205 = bitcast %union.rtunion_def* %arrayidx204 to i32*, !dbg !3583
  %46 = load i32, i32* %rt_int205, align 8, !dbg !3583
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %44, i64 0, i32 9, !dbg !3584
  %47 = load i32, i32* %index, align 8, !dbg !3584
  %index207 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %target, i64 0, i32 9, !dbg !3585
  %48 = load i32, i32* %index207, align 8, !dbg !3585
  %call208 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %45, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i32 %46, i32 %47, i32 %48) #6, !dbg !3586
  br label %if.end209, !dbg !3586

if.end209:                                        ; preds = %if.end199, %if.then201
  %call210 = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* %target) #7, !dbg !3587
  %call211 = tail call i32 @redirect_jump(%struct.rtx_def* %2, %struct.rtx_def* %call210, i32 0) #6, !dbg !3589
  %tobool212 = icmp eq i32 %call211, 0, !dbg !3589
  br i1 %tobool212, label %if.then213, label %if.end354, !dbg !3590

if.then213:                                       ; preds = %if.end209
  %49 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3591
  %cfg = getelementptr inbounds %struct.function, %struct.function* %49, i64 0, i32 1, !dbg !3591
  %50 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3591
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %50, i64 0, i32 1, !dbg !3591
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3591
  %cmp214 = icmp eq %struct.basic_block_def* %51, %target, !dbg !3591
  br i1 %cmp214, label %cleanup, label %cond.true216, !dbg !3591

cond.true216:                                     ; preds = %if.then213
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 837, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3591
  br label %cleanup, !dbg !3591

if.else221:                                       ; preds = %if.else191
  %52 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3593
  %cfg223 = getelementptr inbounds %struct.function, %struct.function* %52, i64 0, i32 1, !dbg !3593
  %53 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg223, align 8, !dbg !3593
  %x_exit_block_ptr224 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %53, i64 0, i32 1, !dbg !3593
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr224, align 8, !dbg !3593
  %cmp225 = icmp eq %struct.basic_block_def* %54, %target, !dbg !3594
  br i1 %cmp225, label %cleanup, label %if.else228, !dbg !3595

if.else228:                                       ; preds = %if.else221
  %call229 = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* %target) #7, !dbg !3596
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call229, metadata !3481, metadata !DIExpression()), !dbg !3597
  %55 = bitcast %struct.rtx_def** %label to i8*, !dbg !3598
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #8, !dbg !3598
  %56 = bitcast %struct.rtx_def** %table to i8*, !dbg !3598
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8, !dbg !3598
  %call230 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call229) #6, !dbg !3599
  %call231 = tail call %struct.rtx_def* @emit_jump_insn_after_noloc(%struct.rtx_def* %call230, %struct.rtx_def* %2) #6, !dbg !3600
  %57 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3601
  %end_234 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %57, i64 0, i32 1, !dbg !3601
  %58 = load %struct.rtx_def*, %struct.rtx_def** %end_234, align 8, !dbg !3601
  %u235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i64 0, i32 1, !dbg !3601
  %arrayidx237 = getelementptr inbounds %union.u, %union.u* %u235, i64 1, i32 0, i32 1, !dbg !3601
  %rt_rtx238 = bitcast %struct.object_block** %arrayidx237 to %struct.rtx_def**, !dbg !3601
  store %struct.rtx_def* %call229, %struct.rtx_def** %rt_rtx238, align 8, !dbg !3602
  %arrayidx241 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call229, i64 0, i32 1, i32 0, i32 2, !dbg !3603
  %rt_int242 = bitcast i64* %arrayidx241 to i32*, !dbg !3603
  %59 = load i32, i32* %rt_int242, align 8, !dbg !3604
  %inc = add nsw i32 %59, 1, !dbg !3604
  store i32 %inc, i32* %rt_int242, align 8, !dbg !3604
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3605
  %tobool243 = icmp eq %struct._IO_FILE* %60, null, !dbg !3605
  br i1 %tobool243, label %if.end257, label %if.then244, !dbg !3607

if.then244:                                       ; preds = %if.else228
  %arrayidx247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3608
  %rt_int248 = bitcast %union.rtunion_def* %arrayidx247 to i32*, !dbg !3608
  %61 = load i32, i32* %rt_int248, align 8, !dbg !3608
  %62 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3609
  %end_251 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %62, i64 0, i32 1, !dbg !3609
  %63 = load %struct.rtx_def*, %struct.rtx_def** %end_251, align 8, !dbg !3609
  %arrayidx254 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3609
  %rt_int255 = bitcast %union.rtunion_def* %arrayidx254 to i32*, !dbg !3609
  %64 = load i32, i32* %rt_int255, align 8, !dbg !3609
  %call256 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %60, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i32 %61, i32 %64) #6, !dbg !3610
  br label %if.end257, !dbg !3610

if.end257:                                        ; preds = %if.else228, %if.then244
  tail call void @delete_insn_chain(%struct.rtx_def* %2, %struct.rtx_def* %2, i8 zeroext 0) #7, !dbg !3611
  call void @llvm.dbg.value(metadata %struct.rtx_def** %label, metadata !3486, metadata !DIExpression(DW_OP_deref)), !dbg !3597
  call void @llvm.dbg.value(metadata %struct.rtx_def** %table, metadata !3487, metadata !DIExpression(DW_OP_deref)), !dbg !3597
  %call258 = call zeroext i8 @tablejump_p(%struct.rtx_def* %2, %struct.rtx_def** nonnull %label, %struct.rtx_def** nonnull %table) #6, !dbg !3612
  %tobool259 = icmp eq i8 %call258, 0, !dbg !3612
  br i1 %tobool259, label %if.end261, label %if.then260, !dbg !3614

if.then260:                                       ; preds = %if.end257
  %65 = load %struct.rtx_def*, %struct.rtx_def** %label, align 8, !dbg !3615
  call void @llvm.dbg.value(metadata %struct.rtx_def* %65, metadata !3486, metadata !DIExpression()), !dbg !3597
  %66 = load %struct.rtx_def*, %struct.rtx_def** %table, align 8, !dbg !3616
  call void @llvm.dbg.value(metadata %struct.rtx_def* %66, metadata !3487, metadata !DIExpression()), !dbg !3597
  call void @delete_insn_chain(%struct.rtx_def* %65, %struct.rtx_def* %66, i8 zeroext 0) #7, !dbg !3617
  br label %if.end261, !dbg !3617

if.end261:                                        ; preds = %if.end257, %if.then260
  %67 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3618
  %end_264 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %67, i64 0, i32 1, !dbg !3618
  %68 = load %struct.rtx_def*, %struct.rtx_def** %end_264, align 8, !dbg !3618
  %call265 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %68) #6, !dbg !3619
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call265, metadata !3485, metadata !DIExpression()), !dbg !3597
  %tobool266 = icmp eq %struct.rtx_def* %call265, null, !dbg !3620
  br i1 %tobool266, label %if.then272, label %lor.lhs.false267, !dbg !3621

lor.lhs.false267:                                 ; preds = %if.end261
  %69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call265, i64 0, i32 0, !dbg !3622
  %bf.load268 = load i32, i32* %69, align 8, !dbg !3622
  %bf.clear269 = and i32 %bf.load268, 65535, !dbg !3622
  %cmp270 = icmp eq i32 %bf.clear269, 11, !dbg !3622
  br i1 %cmp270, label %if.else277, label %if.then272, !dbg !3623

if.then272:                                       ; preds = %if.end261, %lor.lhs.false267
  %70 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3624
  %end_275 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %70, i64 0, i32 1, !dbg !3624
  %71 = load %struct.rtx_def*, %struct.rtx_def** %end_275, align 8, !dbg !3624
  %call276 = call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %71) #6, !dbg !3625
  br label %if.end351, !dbg !3625

if.else277:                                       ; preds = %lor.lhs.false267
  %72 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3626
  %end_280 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %72, i64 0, i32 1, !dbg !3626
  %73 = load %struct.rtx_def*, %struct.rtx_def** %end_280, align 8, !dbg !3626
  %74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3626
  %rt_rtx284 = bitcast %union.rtunion_def* %74 to %struct.rtx_def**, !dbg !3626
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx284, align 8, !dbg !3626
  %cmp285 = icmp eq %struct.rtx_def* %call265, %75, !dbg !3627
  br i1 %cmp285, label %if.end351, label %if.then287, !dbg !3628

if.then287:                                       ; preds = %if.else277
  call void @llvm.dbg.value(metadata %struct.rtx_def* %73, metadata !3488, metadata !DIExpression()), !dbg !3629
  %76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call265, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3630
  %rt_rtx301 = bitcast %union.rtunion_def* %76 to %struct.rtx_def**, !dbg !3630
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx301, align 8, !dbg !3630
  call fastcc void @update_bb_for_insn_chain(%struct.rtx_def* %75, %struct.rtx_def* %77, %struct.basic_block_def* %0) #7, !dbg !3631
  %78 = bitcast %union.rtunion_def* %74 to i64*, !dbg !3632
  %79 = load i64, i64* %78, align 8, !dbg !3632
  %80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3633
  %rt_rtx309 = bitcast %union.rtunion_def* %80 to %struct.rtx_def**, !dbg !3633
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx309, align 8, !dbg !3633
  %82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3633
  %83 = bitcast %union.rtunion_def* %82 to i64*, !dbg !3634
  store i64 %79, i64* %83, align 8, !dbg !3634
  %84 = bitcast %union.rtunion_def* %80 to i64*, !dbg !3635
  %85 = load i64, i64* %84, align 8, !dbg !3635
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx284, align 8, !dbg !3636
  %87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3636
  %88 = bitcast %union.rtunion_def* %87 to i64*, !dbg !3637
  store i64 %85, i64* %88, align 8, !dbg !3637
  store %struct.rtx_def* %call265, %struct.rtx_def** %rt_rtx284, align 8, !dbg !3638
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx301, align 8, !dbg !3639
  %90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3639
  %rt_rtx337 = bitcast %union.rtunion_def* %90 to %struct.rtx_def**, !dbg !3639
  store %struct.rtx_def* %73, %struct.rtx_def** %rt_rtx337, align 8, !dbg !3640
  %91 = bitcast %union.rtunion_def* %76 to i64*, !dbg !3641
  %92 = load i64, i64* %91, align 8, !dbg !3641
  store i64 %92, i64* %84, align 8, !dbg !3642
  store %struct.rtx_def* %73, %struct.rtx_def** %rt_rtx301, align 8, !dbg !3643
  br label %if.end351, !dbg !3644

if.end351:                                        ; preds = %if.else277, %if.then287, %if.then272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8, !dbg !3645
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #8, !dbg !3645
  br label %if.end354

if.end354.loopexit:                               ; preds = %if.end172, %while.cond
  br label %if.end354, !dbg !3646

if.end354:                                        ; preds = %if.end354.loopexit, %if.end209, %if.end351, %if.else183
  %fallthru.0 = phi i32 [ 1, %if.else183 ], [ 0, %if.end209 ], [ 0, %if.end351 ], [ 1, %if.end354.loopexit ], !dbg !3493
  call void @llvm.dbg.value(metadata i32 %fallthru.0, metadata !3475, metadata !DIExpression()), !dbg !3493
  %call355 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %0) #7, !dbg !3646
  %tobool356 = icmp eq i8 %call355, 0, !dbg !3646
  br i1 %tobool356, label %if.then357, label %if.end358, !dbg !3648

if.then357:                                       ; preds = %if.end354
  call void @remove_edge(%struct.edge_def* %e) #6, !dbg !3649
  br label %if.end358, !dbg !3649

if.end358:                                        ; preds = %if.end354, %if.then357
  %call359 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %0) #7, !dbg !3650
  %tobool360 = icmp eq i8 %call359, 0, !dbg !3650
  br i1 %tobool360, label %cond.true361, label %cond.end363, !dbg !3650

cond.true361:                                     ; preds = %if.end358
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 898, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3650
  br label %cond.end363, !dbg !3650

cond.end363:                                      ; preds = %if.end358, %cond.true361
  %call365 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %0) #7, !dbg !3651
  call void @llvm.dbg.value(metadata %struct.edge_def* %call365, metadata !3468, metadata !DIExpression()), !dbg !3493
  %tobool366 = icmp eq i32 %fallthru.0, 0, !dbg !3652
  %flags368 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call365, i64 0, i32 7, !dbg !3654
  br i1 %tobool366, label %if.else369, label %if.then367, !dbg !3655

if.then367:                                       ; preds = %cond.end363
  br label %if.end371, !dbg !3656

if.else369:                                       ; preds = %cond.end363
  br label %if.end371

if.end371:                                        ; preds = %if.else369, %if.then367
  %storemerge = phi i32 [ 0, %if.else369 ], [ 1, %if.then367 ], !dbg !3654
  store i32 %storemerge, i32* %flags368, align 8, !dbg !3654
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call365, i64 0, i32 8, !dbg !3657
  store i32 10000, i32* %probability, align 4, !dbg !3658
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 8, !dbg !3659
  %93 = load i64, i64* %count, align 8, !dbg !3659
  %count372 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call365, i64 0, i32 9, !dbg !3660
  store i64 %93, i64* %count372, align 8, !dbg !3661
  %dest373 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call365, i64 0, i32 1, !dbg !3662
  %94 = load %struct.basic_block_def*, %struct.basic_block_def** %dest373, align 8, !dbg !3662
  %cmp374 = icmp eq %struct.basic_block_def* %94, %target, !dbg !3664
  br i1 %cmp374, label %cleanup, label %if.then376, !dbg !3665

if.then376:                                       ; preds = %if.end371
  call void @redirect_edge_succ(%struct.edge_def* %call365, %struct.basic_block_def* %target) #6, !dbg !3666
  br label %cleanup, !dbg !3666

cleanup:                                          ; preds = %cond.end33, %land.lhs.true49, %if.end371, %lor.lhs.false94, %cond.end91, %if.end41, %lor.lhs.false, %entry, %if.then376, %if.else221, %cond.true216, %if.then213, %if.then194, %cond.end
  %retval.0 = phi %struct.edge_def* [ null, %lor.lhs.false ], [ null, %entry ], [ null, %cond.end33 ], [ null, %cond.end ], [ null, %if.end41 ], [ null, %land.lhs.true49 ], [ null, %lor.lhs.false94 ], [ null, %cond.end91 ], [ null, %if.then194 ], [ null, %if.then213 ], [ null, %cond.true216 ], [ null, %if.else221 ], [ %call365, %if.then376 ], [ %call365, %if.end371 ], !dbg !3493
  ret %struct.edge_def* %retval.0, !dbg !3667
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !3668 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !3674, metadata !DIExpression()), !dbg !3675
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !3676
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3676

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !3676
  %0 = load i32, i32* %num, align 8, !dbg !3676
  br label %cond.end, !dbg !3676

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3676
  ret i32 %cond, !dbg !3676
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3677 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !3681, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3682, metadata !DIExpression()), !dbg !3683
  br label %land.end, !dbg !3684

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3684
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3684
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !3684
  ret %struct.edge_def* %0, !dbg !3684
}

declare dso_local i32 @onlyjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @tablejump_p(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def**) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @side_effects_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @can_fallthru(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #1

declare dso_local i32 @simplejump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @redirect_jump(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_jump_insn_after_noloc(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_jump(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_barrier_after(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3685 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3687, metadata !DIExpression()), !dbg !3688
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !3689
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3689
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !3689
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3689

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !3689
  br label %cond.end, !dbg !3689

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3689
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3689
  %cmp = icmp eq i32 %call, 1, !dbg !3690
  %conv2 = zext i1 %cmp to i8, !dbg !3689
  ret i8 %conv2, !dbg !3691
}

declare dso_local void @remove_edge(%struct.edge_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3692 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3696, metadata !DIExpression()), !dbg !3697
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !3698
  %tobool = icmp eq i8 %call, 0, !dbg !3698
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3698

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3698
  br label %cond.end, !dbg !3698

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !3699
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3699
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !3699
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !3699

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !3699
  br label %cond.end5, !dbg !3699

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !3699
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !3699
  ret %struct.edge_def* %call7, !dbg !3700
}

declare dso_local void @redirect_edge_succ(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.basic_block_def* @force_nonfallthru(%struct.edge_def* %e) local_unnamed_addr #4 !dbg !3701 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3703, metadata !DIExpression()), !dbg !3704
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !3705
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3705
  %call = tail call fastcc %struct.basic_block_def* @force_nonfallthru_and_redirect(%struct.edge_def* %e, %struct.basic_block_def* %0) #7, !dbg !3706
  ret %struct.basic_block_def* %call, !dbg !3707
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @force_nonfallthru_and_redirect(%struct.edge_def* %e, %struct.basic_block_def* %target) unnamed_addr #4 !dbg !3708 {
entry:
  %note = alloca %struct.rtx_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp97 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3710, metadata !DIExpression()), !dbg !3742
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target, metadata !3711, metadata !DIExpression()), !dbg !3742
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !3713, metadata !DIExpression()), !dbg !3742
  %src1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !3743
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3743
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !3714, metadata !DIExpression()), !dbg !3742
  %1 = bitcast %struct.rtx_def** %note to i8*, !dbg !3744
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3744
  call void @llvm.dbg.value(metadata i32 0, metadata !3717, metadata !DIExpression()), !dbg !3742
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3745
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !3745
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3745
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !3745
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3745
  %cmp = icmp eq %struct.basic_block_def* %0, %4, !dbg !3746
  br i1 %cmp, label %if.end60, label %land.lhs.true, !dbg !3747

land.lhs.true:                                    ; preds = %entry
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !3748
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3748
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !3749
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3749
  %cmp5 = icmp eq %struct.basic_block_def* %5, %6, !dbg !3750
  br i1 %cmp5, label %if.end60, label %land.lhs.true6, !dbg !3751

land.lhs.true6:                                   ; preds = %land.lhs.true
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !3752
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3752
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3752
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 1, !dbg !3752
  %8 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3752
  %call = tail call i32 @any_condjump_p(%struct.rtx_def* %8) #6, !dbg !3753
  %tobool = icmp eq i32 %call, 0, !dbg !3753
  br i1 %tobool, label %if.end60, label %land.lhs.true8, !dbg !3754

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3755
  %il10 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 7, !dbg !3755
  %rtl11 = bitcast %union.basic_block_il_dependent* %il10 to %struct.rtl_bb_info**, !dbg !3755
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl11, align 8, !dbg !3755
  %end_12 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 1, !dbg !3755
  %11 = load %struct.rtx_def*, %struct.rtx_def** %end_12, align 8, !dbg !3755
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, !dbg !3755
  %arrayidx = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !3755
  %rt_rtx = bitcast %struct.object_block** %arrayidx to %struct.rtx_def**, !dbg !3755
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3755
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3756
  %il14 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i64 0, i32 7, !dbg !3756
  %rtl15 = bitcast %union.basic_block_il_dependent* %il14 to %struct.rtl_bb_info**, !dbg !3756
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl15, align 8, !dbg !3756
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 0, !dbg !3756
  %15 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3756
  %cmp16 = icmp eq %struct.rtx_def* %12, %15, !dbg !3757
  br i1 %cmp16, label %if.then, label %if.end60, !dbg !3758

if.then:                                          ; preds = %land.lhs.true8
  %call19 = tail call %struct.edge_def* @unchecked_make_edge(%struct.basic_block_def* %9, %struct.basic_block_def* %target, i32 0) #6, !dbg !3759
  call void @llvm.dbg.value(metadata %struct.edge_def* %call19, metadata !3722, metadata !DIExpression()), !dbg !3760
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3761
  %il21 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 7, !dbg !3761
  %rtl22 = bitcast %union.basic_block_il_dependent* %il21 to %struct.rtl_bb_info**, !dbg !3761
  %17 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl22, align 8, !dbg !3761
  %end_23 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %17, i64 0, i32 1, !dbg !3761
  %18 = load %struct.rtx_def*, %struct.rtx_def** %end_23, align 8, !dbg !3761
  %call24 = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* %target) #7, !dbg !3762
  %call25 = tail call i32 @redirect_jump(%struct.rtx_def* %18, %struct.rtx_def* %call24, i32 0) #6, !dbg !3763
  %conv = trunc i32 %call25 to i8, !dbg !3763
  call void @llvm.dbg.value(metadata i8 %conv, metadata !3723, metadata !DIExpression()), !dbg !3760
  %tobool26 = icmp eq i8 %conv, 0, !dbg !3764
  br i1 %tobool26, label %cond.true, label %cond.end, !dbg !3764

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1127, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3764
  br label %cond.end, !dbg !3764

cond.end:                                         ; preds = %if.then, %cond.true
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3765
  %il28 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i64 0, i32 7, !dbg !3765
  %rtl29 = bitcast %union.basic_block_il_dependent* %il28 to %struct.rtl_bb_info**, !dbg !3765
  %20 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl29, align 8, !dbg !3765
  %end_30 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %20, i64 0, i32 1, !dbg !3765
  %21 = load %struct.rtx_def*, %struct.rtx_def** %end_30, align 8, !dbg !3765
  %call31 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %21, i32 13, %struct.rtx_def* null) #6, !dbg !3766
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !3719, metadata !DIExpression()), !dbg !3760
  %tobool32 = icmp eq %struct.rtx_def* %call31, null, !dbg !3767
  br i1 %tobool32, label %if.end60, label %if.then33, !dbg !3768

if.then33:                                        ; preds = %cond.end
  %arrayidx36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call31, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3769
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !3769
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !3769
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, !dbg !3769
  %arrayidx39 = bitcast %union.u* %u38 to i64*, !dbg !3769
  %23 = load i64, i64* %arrayidx39, align 8, !dbg !3769
  %conv40 = trunc i64 %23 to i32, !dbg !3769
  call void @llvm.dbg.value(metadata i32 %conv40, metadata !3724, metadata !DIExpression()), !dbg !3770
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 8, !dbg !3771
  store i32 %conv40, i32* %probability, align 4, !dbg !3772
  %count = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 9, !dbg !3773
  %24 = load i64, i64* %count, align 8, !dbg !3773
  %sext = shl i64 %23, 32, !dbg !3774
  %conv41 = ashr exact i64 %sext, 32, !dbg !3774
  %mul = mul nsw i64 %24, %conv41, !dbg !3775
  %div = sdiv i64 %mul, 10000, !dbg !3776
  %count42 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 9, !dbg !3777
  store i64 %div, i64* %count42, align 8, !dbg !3778
  %probability44 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 8, !dbg !3779
  store i32 0, i32* %probability44, align 4, !dbg !3780
  %25 = load i64, i64* %count42, align 8, !dbg !3781
  %26 = load i64, i64* %count, align 8, !dbg !3782
  %sub47 = sub nsw i64 %26, %25, !dbg !3782
  store i64 %sub47, i64* %count, align 8, !dbg !3782
  br i1 false, label %if.then51, label %if.end, !dbg !3783

if.then51:                                        ; preds = %if.then33
  br label %if.end, !dbg !3784

if.end:                                           ; preds = %if.then51, %if.then33
  %cmp54 = icmp slt i64 %sub47, 0, !dbg !3786
  br i1 %cmp54, label %if.then56, label %if.end60, !dbg !3788

if.then56:                                        ; preds = %if.end
  store i64 0, i64* %count, align 8, !dbg !3789
  br label %if.end60, !dbg !3790

if.end60:                                         ; preds = %cond.end, %land.lhs.true6, %land.lhs.true, %entry, %if.then56, %if.end, %land.lhs.true8
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !3791
  %27 = load i32, i32* %flags, align 8, !dbg !3791
  %and = and i32 %27, 2, !dbg !3792
  %tobool61 = icmp eq i32 %and, 0, !dbg !3792
  br i1 %tobool61, label %if.else, label %if.then62, !dbg !3793

if.then62:                                        ; preds = %if.end60
  %dest63 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !3794
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %dest63, align 8, !dbg !3794
  %cmp64 = icmp eq %struct.basic_block_def* %28, %target, !dbg !3794
  br i1 %cmp64, label %cond.end68, label %cond.true66, !dbg !3794

cond.true66:                                      ; preds = %if.then62
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1152, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3794
  %.pre = load i32, i32* %flags, align 8, !dbg !3796
  br label %cond.end68, !dbg !3794

cond.end68:                                       ; preds = %if.then62, %cond.true66
  %29 = phi i32 [ %27, %if.then62 ], [ %.pre, %cond.true66 ], !dbg !3796
  %and71 = and i32 %29, -66, !dbg !3797
  call void @llvm.dbg.value(metadata i32 %and71, metadata !3717, metadata !DIExpression()), !dbg !3742
  %and73 = and i32 %29, 65, !dbg !3798
  store i32 %and73, i32* %flags, align 8, !dbg !3798
  br label %if.end135, !dbg !3799

if.else:                                          ; preds = %if.end60
  %and75 = and i32 %27, 1, !dbg !3800
  %tobool76 = icmp eq i32 %and75, 0, !dbg !3800
  br i1 %tobool76, label %cond.true77, label %cond.end79, !dbg !3800

cond.true77:                                      ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1158, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3800
  br label %cond.end79, !dbg !3800

cond.end79:                                       ; preds = %if.else, %cond.true77
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3801
  %31 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3802
  %cfg83 = getelementptr inbounds %struct.function, %struct.function* %31, i64 0, i32 1, !dbg !3802
  %32 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg83, align 8, !dbg !3802
  %x_entry_block_ptr84 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %32, i64 0, i32 0, !dbg !3802
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr84, align 8, !dbg !3802
  %cmp85 = icmp eq %struct.basic_block_def* %30, %33, !dbg !3803
  br i1 %cmp85, label %if.then87, label %if.end135, !dbg !3804

if.then87:                                        ; preds = %cond.end79
  %34 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3805
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #8, !dbg !3805
  call void @llvm.dbg.value(metadata i8 0, metadata !3733, metadata !DIExpression()), !dbg !3806
  %dest88 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !3807
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %dest88, align 8, !dbg !3807
  %il89 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i64 0, i32 7, !dbg !3807
  %36 = bitcast %union.basic_block_il_dependent* %il89 to i8***, !dbg !3807
  %37 = load i8**, i8*** %36, align 8, !dbg !3807
  %38 = load i8*, i8** %37, align 8, !dbg !3807
  %call95 = tail call %struct.basic_block_def* @create_basic_block(i8* %38, i8* null, %struct.basic_block_def* %30) #6, !dbg !3808
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call95, metadata !3734, metadata !DIExpression()), !dbg !3806
  store %struct.basic_block_def* %call95, %struct.basic_block_def** %src1, align 8, !dbg !3809
  %39 = bitcast %struct.edge_iterator* %tmp97 to i8*, !dbg !3810
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #8, !dbg !3810
  %40 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3810
  %cfg99 = getelementptr inbounds %struct.function, %struct.function* %40, i64 0, i32 1, !dbg !3810
  %41 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg99, align 8, !dbg !3810
  %x_entry_block_ptr100 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %41, i64 0, i32 0, !dbg !3810
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr100, align 8, !dbg !3810
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %42, i64 0, i32 1, !dbg !3810
  %call101 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3810
  %43 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp97, i64 0, i32 0, !dbg !3810
  %44 = extractvalue { i32, %struct.VEC_edge_gc** } %call101, 0, !dbg !3810
  store i32 %44, i32* %43, align 8, !dbg !3810
  %45 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp97, i64 0, i32 1, !dbg !3810
  %46 = extractvalue { i32, %struct.VEC_edge_gc** } %call101, 1, !dbg !3810
  store %struct.VEC_edge_gc** %46, %struct.VEC_edge_gc*** %45, align 8, !dbg !3810
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %39, i64 16, i1 false), !dbg !3810
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #8, !dbg !3810
  %47 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3812
  %48 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3812
  br label %for.cond, !dbg !3814

for.cond:                                         ; preds = %if.else121, %if.then87
  %49 = load i32, i32* %47, align 8, !dbg !3815
  %50 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %48, align 8, !dbg !3815
  %call102 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %49, %struct.VEC_edge_gc** %50) #7, !dbg !3815
  call void @llvm.dbg.value(metadata %struct.edge_def* %call102, metadata !3727, metadata !DIExpression()), !dbg !3806
  %tobool103 = icmp eq %struct.edge_def* %call102, null, !dbg !3816
  br i1 %tobool103, label %for.end.loopexit, label %for.body, !dbg !3816

for.body:                                         ; preds = %for.cond
  %cmp104 = icmp eq %struct.edge_def* %call102, %e, !dbg !3817
  br i1 %cmp104, label %if.then106, label %if.else121, !dbg !3820

if.then106:                                       ; preds = %for.body
  %51 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3821
  %cfg108 = getelementptr inbounds %struct.function, %struct.function* %51, i64 0, i32 1, !dbg !3821
  %52 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg108, align 8, !dbg !3821
  %x_entry_block_ptr109 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %52, i64 0, i32 0, !dbg !3821
  %53 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr109, align 8, !dbg !3821
  %succs110 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %53, i64 0, i32 1, !dbg !3821
  %54 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs110, align 8, !dbg !3821
  %tobool111 = icmp eq %struct.VEC_edge_gc* %54, null, !dbg !3821
  br i1 %tobool111, label %cond.end118, label %cond.true112, !dbg !3821

cond.true112:                                     ; preds = %if.then106
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %54, i64 0, i32 0, !dbg !3821
  br label %cond.end118, !dbg !3821

cond.end118:                                      ; preds = %if.then106, %cond.true112
  %cond119 = phi %struct.VEC_edge_base* [ %base, %cond.true112 ], [ null, %if.then106 ], !dbg !3821
  %55 = load i32, i32* %47, align 8, !dbg !3821
  %call120 = call fastcc %struct.edge_def* @VEC_edge_base_unordered_remove(%struct.VEC_edge_base* %cond119, i32 %55) #7, !dbg !3821
  call void @llvm.dbg.value(metadata i8 1, metadata !3733, metadata !DIExpression()), !dbg !3806
  br label %for.end, !dbg !3823

if.else121:                                       ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3732, metadata !DIExpression(DW_OP_deref)), !dbg !3806
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3824
  br label %for.cond, !dbg !3825, !llvm.loop !3826

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !3828

for.end:                                          ; preds = %for.end.loopexit, %cond.end118
  %found.0 = phi i1 [ true, %cond.end118 ], [ false, %for.end.loopexit ]
  br i1 %found.0, label %cond.end126, label %cond.true124, !dbg !3828

cond.true124:                                     ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1185, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3828
  br label %cond.end126, !dbg !3828

cond.end126:                                      ; preds = %for.end, %cond.true124
  %succs128 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call95, i64 0, i32 1, !dbg !3829
  %call129 = call fastcc %struct.edge_def** @VEC_edge_gc_safe_push(%struct.VEC_edge_gc** nonnull %succs128, %struct.edge_def* %e) #7, !dbg !3829
  %56 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3830
  %cfg131 = getelementptr inbounds %struct.function, %struct.function* %56, i64 0, i32 1, !dbg !3830
  %57 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg131, align 8, !dbg !3830
  %x_entry_block_ptr132 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %57, i64 0, i32 0, !dbg !3830
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr132, align 8, !dbg !3830
  %call133 = call %struct.edge_def* @make_single_succ_edge(%struct.basic_block_def* %58, %struct.basic_block_def* %call95, i32 1) #6, !dbg !3831
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #8, !dbg !3832
  br label %if.end135, !dbg !3833

if.end135:                                        ; preds = %cond.end79, %cond.end126, %cond.end68
  %abnormal_edge_flags.0 = phi i32 [ %and71, %cond.end68 ], [ 0, %cond.end126 ], [ 0, %cond.end79 ], !dbg !3742
  call void @llvm.dbg.value(metadata i32 %abnormal_edge_flags.0, metadata !3717, metadata !DIExpression()), !dbg !3742
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3834
  %succs137 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %59, i64 0, i32 1, !dbg !3834
  %60 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs137, align 8, !dbg !3834
  %tobool138 = icmp eq %struct.VEC_edge_gc* %60, null, !dbg !3834
  br i1 %tobool138, label %cond.end144, label %cond.true139, !dbg !3834

cond.true139:                                     ; preds = %if.end135
  %base142 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %60, i64 0, i32 0, !dbg !3834
  br label %cond.end144, !dbg !3834

cond.end144:                                      ; preds = %if.end135, %cond.true139
  %cond145 = phi %struct.VEC_edge_base* [ %base142, %cond.true139 ], [ null, %if.end135 ], !dbg !3834
  %call146 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond145) #7, !dbg !3834
  %cmp147 = icmp ugt i32 %call146, 1, !dbg !3835
  %tobool149 = icmp ne i32 %abnormal_edge_flags.0, 0, !dbg !3836
  %or.cond = or i1 %cmp147, %tobool149, !dbg !3837
  %61 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3838
  br i1 %or.cond, label %if.then150, label %if.end226, !dbg !3837

if.then150:                                       ; preds = %cond.end144
  %il152 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %61, i64 0, i32 7, !dbg !3839
  %rtl153 = bitcast %union.basic_block_il_dependent* %il152 to %struct.rtl_bb_info**, !dbg !3839
  %62 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl153, align 8, !dbg !3839
  %end_154 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %62, i64 0, i32 1, !dbg !3839
  %63 = load %struct.rtx_def*, %struct.rtx_def** %end_154, align 8, !dbg !3839
  call void @llvm.dbg.value(metadata %struct.rtx_def** %note, metadata !3715, metadata !DIExpression(DW_OP_deref)), !dbg !3742
  %call155 = call zeroext i8 @tablejump_p(%struct.rtx_def* %63, %struct.rtx_def** null, %struct.rtx_def** nonnull %note) #6, !dbg !3841
  %tobool156 = icmp eq i8 %call155, 0, !dbg !3841
  br i1 %tobool156, label %if.then157, label %if.then150.if.end162_crit_edge, !dbg !3842

if.then150.if.end162_crit_edge:                   ; preds = %if.then150
  %.pre1 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !3843
  %.pre2 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3844
  %.pre3 = bitcast %struct.rtx_def** %note to i64*, !dbg !3845
  br label %if.end162, !dbg !3842

if.then157:                                       ; preds = %if.then150
  %64 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3846
  %il159 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %64, i64 0, i32 7, !dbg !3846
  %rtl160 = bitcast %union.basic_block_il_dependent* %il159 to %struct.rtl_bb_info**, !dbg !3846
  %65 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl160, align 8, !dbg !3846
  %end_161 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %65, i64 0, i32 1, !dbg !3846
  %66 = bitcast %struct.rtx_def** %end_161 to i64*, !dbg !3846
  %67 = load i64, i64* %66, align 8, !dbg !3846
  %68 = bitcast %struct.rtx_def** %note to i64*, !dbg !3847
  store i64 %67, i64* %68, align 8, !dbg !3847
  %69 = inttoptr i64 %67 to %struct.rtx_def*, !dbg !3848
  br label %if.end162, !dbg !3848

if.end162:                                        ; preds = %if.then150.if.end162_crit_edge, %if.then157
  %.pre-phi = phi i64* [ %.pre3, %if.then150.if.end162_crit_edge ], [ %68, %if.then157 ], !dbg !3845
  %70 = phi %struct.basic_block_def* [ %.pre2, %if.then150.if.end162_crit_edge ], [ %64, %if.then157 ], !dbg !3844
  %71 = phi %struct.rtx_def* [ %.pre1, %if.then150.if.end162_crit_edge ], [ %69, %if.then157 ], !dbg !3843
  call void @llvm.dbg.value(metadata %struct.rtx_def* %71, metadata !3715, metadata !DIExpression()), !dbg !3742
  %72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3843
  %73 = bitcast %union.rtunion_def* %72 to i64*, !dbg !3843
  %74 = load i64, i64* %73, align 8, !dbg !3843
  store i64 %74, i64* %.pre-phi, align 8, !dbg !3845
  %.cast = inttoptr i64 %74 to i8*, !dbg !3849
  %call168 = call %struct.basic_block_def* @create_basic_block(i8* %.cast, i8* null, %struct.basic_block_def* %70) #6, !dbg !3850
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call168, metadata !3712, metadata !DIExpression()), !dbg !3742
  %count169 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 9, !dbg !3851
  %75 = load i64, i64* %count169, align 8, !dbg !3851
  %count170 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call168, i64 0, i32 8, !dbg !3852
  store i64 %75, i64* %count170, align 8, !dbg !3853
  %76 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3854
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %76, i64 0, i32 11, !dbg !3854
  %77 = load i32, i32* %frequency, align 8, !dbg !3854
  %probability172 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 8, !dbg !3854
  %78 = load i32, i32* %probability172, align 4, !dbg !3854
  %mul173 = mul nsw i32 %77, %78, !dbg !3854
  %add = add nsw i32 %mul173, 5000, !dbg !3854
  %div174 = sdiv i32 %add, 10000, !dbg !3854
  %frequency175 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call168, i64 0, i32 11, !dbg !3855
  store i32 %div174, i32* %frequency175, align 8, !dbg !3856
  %loop_depth = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %target, i64 0, i32 10, !dbg !3857
  %79 = load i32, i32* %loop_depth, align 4, !dbg !3857
  %loop_depth176 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call168, i64 0, i32 10, !dbg !3858
  store i32 %79, i32* %loop_depth176, align 4, !dbg !3859
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call168, metadata !3735, metadata !DIExpression()), !dbg !3860
  %flags177 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call168, i64 0, i32 13, !dbg !3861
  %80 = load i32, i32* %flags177, align 8, !dbg !3861
  %and178 = and i32 %80, -97, !dbg !3861
  %81 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3861
  %flags180 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %81, i64 0, i32 13, !dbg !3861
  %82 = load i32, i32* %flags180, align 8, !dbg !3861
  %and181 = and i32 %82, 96, !dbg !3861
  %or = or i32 %and178, %and181, !dbg !3861
  store i32 %or, i32* %flags177, align 8, !dbg !3861
  %83 = load i32, i32* @flag_reorder_blocks_and_partition, align 4, !dbg !3862
  %tobool183 = icmp eq i32 %83, 0, !dbg !3862
  br i1 %tobool183, label %if.end216, label %land.lhs.true184, !dbg !3864

land.lhs.true184:                                 ; preds = %if.end162
  %84 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 110), align 1, !dbg !3865
  %tobool186 = icmp eq i8 %84, 0, !dbg !3866
  br i1 %tobool186, label %if.end216, label %land.lhs.true187, !dbg !3867

land.lhs.true187:                                 ; preds = %land.lhs.true184
  %il188 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call168, i64 0, i32 7, !dbg !3868
  %rtl189 = bitcast %union.basic_block_il_dependent* %il188 to %struct.rtl_bb_info**, !dbg !3868
  %85 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl189, align 8, !dbg !3868
  %end_190 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %85, i64 0, i32 1, !dbg !3868
  %86 = bitcast %struct.rtx_def** %end_190 to i32**, !dbg !3868
  %87 = load i32*, i32** %86, align 8, !dbg !3868
  %bf.load = load i32, i32* %87, align 8, !dbg !3868
  %bf.clear = and i32 %bf.load, 65535, !dbg !3868
  %cmp191 = icmp eq i32 %bf.clear, 9, !dbg !3868
  br i1 %cmp191, label %land.lhs.true193, label %if.end216, !dbg !3869

land.lhs.true193:                                 ; preds = %land.lhs.true187
  %88 = bitcast i32* %87 to %struct.rtx_def*, !dbg !3869
  %call197 = call i32 @any_condjump_p(%struct.rtx_def* %88) #6, !dbg !3870
  %tobool198 = icmp eq i32 %call197, 0, !dbg !3870
  br i1 %tobool198, label %land.lhs.true199, label %if.end216, !dbg !3871

land.lhs.true199:                                 ; preds = %land.lhs.true193
  %succs200 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call168, i64 0, i32 1, !dbg !3872
  %89 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs200, align 8, !dbg !3872
  %tobool201 = icmp eq %struct.VEC_edge_gc* %89, null, !dbg !3872
  br i1 %tobool201, label %cond.end206, label %cond.true202, !dbg !3872

cond.true202:                                     ; preds = %land.lhs.true199
  %base204 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %89, i64 0, i32 0, !dbg !3872
  br label %cond.end206, !dbg !3872

cond.end206:                                      ; preds = %land.lhs.true199, %cond.true202
  %cond207 = phi %struct.VEC_edge_base* [ %base204, %cond.true202 ], [ null, %land.lhs.true199 ], !dbg !3872
  %call208 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond207, i32 0) #7, !dbg !3872
  %flags209 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call208, i64 0, i32 7, !dbg !3873
  %90 = load i32, i32* %flags209, align 8, !dbg !3873
  %and210 = and i32 %90, 8192, !dbg !3874
  %tobool211 = icmp eq i32 %and210, 0, !dbg !3874
  br i1 %tobool211, label %if.end216, label %if.then212, !dbg !3875

if.then212:                                       ; preds = %cond.end206
  %91 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl189, align 8, !dbg !3876
  %end_215 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %91, i64 0, i32 1, !dbg !3876
  %92 = load %struct.rtx_def*, %struct.rtx_def** %end_215, align 8, !dbg !3876
  call void @add_reg_note(%struct.rtx_def* %92, i32 29, %struct.rtx_def* null) #6, !dbg !3877
  br label %if.end216, !dbg !3877

if.end216:                                        ; preds = %cond.end206, %land.lhs.true193, %land.lhs.true184, %if.end162, %if.then212, %land.lhs.true187
  %93 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3878
  %call218 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %93, %struct.basic_block_def* %call168, i32 1) #6, !dbg !3879
  call void @llvm.dbg.value(metadata %struct.edge_def* %call218, metadata !3716, metadata !DIExpression()), !dbg !3742
  %94 = load i32, i32* %probability172, align 4, !dbg !3880
  %probability220 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call218, i64 0, i32 8, !dbg !3881
  store i32 %94, i32* %probability220, align 4, !dbg !3882
  %95 = load i64, i64* %count169, align 8, !dbg !3883
  %count222 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call218, i64 0, i32 9, !dbg !3884
  store i64 %95, i64* %count222, align 8, !dbg !3885
  call void @redirect_edge_pred(%struct.edge_def* %e, %struct.basic_block_def* %call168) #6, !dbg !3886
  store i32 10000, i32* %probability172, align 4, !dbg !3887
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call168, metadata !3713, metadata !DIExpression()), !dbg !3742
  br label %if.end226, !dbg !3888

if.end226:                                        ; preds = %cond.end144, %if.end216
  %new_bb.0 = phi %struct.basic_block_def* [ %call168, %if.end216 ], [ null, %cond.end144 ], !dbg !3742
  %jump_block.0 = phi %struct.basic_block_def* [ %call168, %if.end216 ], [ %61, %cond.end144 ], !dbg !3838
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %jump_block.0, metadata !3712, metadata !DIExpression()), !dbg !3742
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.0, metadata !3713, metadata !DIExpression()), !dbg !3742
  %goto_locus = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 5, !dbg !3889
  %96 = load i32, i32* %goto_locus, align 8, !dbg !3889
  %tobool227 = icmp eq i32 %96, 0, !dbg !3891
  br i1 %tobool227, label %if.end234, label %land.lhs.true228, !dbg !3892

land.lhs.true228:                                 ; preds = %if.end226
  %goto_block = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 4, !dbg !3893
  %97 = load %union.tree_node*, %union.tree_node** %goto_block, align 8, !dbg !3893
  %cmp229 = icmp eq %union.tree_node* %97, null, !dbg !3894
  br i1 %cmp229, label %if.then231, label %if.end234, !dbg !3895

if.then231:                                       ; preds = %land.lhs.true228
  call void @llvm.dbg.value(metadata i32 %96, metadata !3718, metadata !DIExpression()), !dbg !3742
  br label %if.end234, !dbg !3896

if.end234:                                        ; preds = %if.end226, %land.lhs.true228, %if.then231
  %loc.0 = phi i32 [ %96, %if.then231 ], [ 0, %land.lhs.true228 ], [ 0, %if.end226 ], !dbg !3897
  call void @llvm.dbg.value(metadata i32 %loc.0, metadata !3718, metadata !DIExpression()), !dbg !3742
  %98 = load i32, i32* %flags, align 8, !dbg !3898
  %and236 = and i32 %98, -2, !dbg !3898
  store i32 %and236, i32* %flags, align 8, !dbg !3898
  %99 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3899
  %cfg238 = getelementptr inbounds %struct.function, %struct.function* %99, i64 0, i32 1, !dbg !3899
  %100 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg238, align 8, !dbg !3899
  %x_exit_block_ptr239 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %100, i64 0, i32 1, !dbg !3899
  %101 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr239, align 8, !dbg !3899
  %cmp240 = icmp eq %struct.basic_block_def* %101, %target, !dbg !3900
  br i1 %cmp240, label %if.then242, label %if.else248, !dbg !3901

if.then242:                                       ; preds = %if.end234
  %call243 = call %struct.rtx_def* @gen_return() #6, !dbg !3902
  %il244 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %jump_block.0, i64 0, i32 7, !dbg !3904
  %rtl245 = bitcast %union.basic_block_il_dependent* %il244 to %struct.rtl_bb_info**, !dbg !3904
  %102 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl245, align 8, !dbg !3904
  %end_246 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %102, i64 0, i32 1, !dbg !3904
  %103 = load %struct.rtx_def*, %struct.rtx_def** %end_246, align 8, !dbg !3904
  %call247 = call %struct.rtx_def* @emit_jump_insn_after_setloc(%struct.rtx_def* %call243, %struct.rtx_def* %103, i32 %loc.0) #6, !dbg !3905
  br label %if.end265, !dbg !3906

if.else248:                                       ; preds = %if.end234
  %call249 = call %struct.rtx_def* @block_label(%struct.basic_block_def* %target) #7, !dbg !3907
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call249, metadata !3739, metadata !DIExpression()), !dbg !3908
  %call250 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call249) #6, !dbg !3909
  %il251 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %jump_block.0, i64 0, i32 7, !dbg !3910
  %rtl252 = bitcast %union.basic_block_il_dependent* %il251 to %struct.rtl_bb_info**, !dbg !3910
  %104 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl252, align 8, !dbg !3910
  %end_253 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %104, i64 0, i32 1, !dbg !3910
  %105 = load %struct.rtx_def*, %struct.rtx_def** %end_253, align 8, !dbg !3910
  %call254 = call %struct.rtx_def* @emit_jump_insn_after_setloc(%struct.rtx_def* %call250, %struct.rtx_def* %105, i32 %loc.0) #6, !dbg !3911
  %106 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl252, align 8, !dbg !3912
  %end_257 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %106, i64 0, i32 1, !dbg !3912
  %107 = load %struct.rtx_def*, %struct.rtx_def** %end_257, align 8, !dbg !3912
  %u258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i64 0, i32 1, !dbg !3912
  %arrayidx260 = getelementptr inbounds %union.u, %union.u* %u258, i64 1, i32 0, i32 1, !dbg !3912
  %rt_rtx261 = bitcast %struct.object_block** %arrayidx260 to %struct.rtx_def**, !dbg !3912
  store %struct.rtx_def* %call249, %struct.rtx_def** %rt_rtx261, align 8, !dbg !3913
  %arrayidx264 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call249, i64 0, i32 1, i32 0, i32 2, !dbg !3914
  %rt_int = bitcast i64* %arrayidx264 to i32*, !dbg !3914
  %108 = load i32, i32* %rt_int, align 8, !dbg !3915
  %inc = add nsw i32 %108, 1, !dbg !3915
  store i32 %inc, i32* %rt_int, align 8, !dbg !3915
  br label %if.end265

if.end265:                                        ; preds = %if.else248, %if.then242
  %rtl267.pre-phi = phi %struct.rtl_bb_info** [ %rtl252, %if.else248 ], [ %rtl245, %if.then242 ], !dbg !3916
  %109 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl267.pre-phi, align 8, !dbg !3916
  %end_268 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %109, i64 0, i32 1, !dbg !3916
  %110 = load %struct.rtx_def*, %struct.rtx_def** %end_268, align 8, !dbg !3916
  %call269 = call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %110) #6, !dbg !3917
  %call270 = call %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def* %e, %struct.basic_block_def* %target) #6, !dbg !3918
  %tobool271 = icmp eq i32 %abnormal_edge_flags.0, 0, !dbg !3919
  br i1 %tobool271, label %if.end274, label %if.then272, !dbg !3921

if.then272:                                       ; preds = %if.end265
  %call273 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %0, %struct.basic_block_def* %target, i32 %abnormal_edge_flags.0) #6, !dbg !3922
  br label %if.end274, !dbg !3922

if.end274:                                        ; preds = %if.end265, %if.then272
  call void @df_mark_solutions_dirty() #6, !dbg !3923
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3924
  ret %struct.basic_block_def* %new_bb.0, !dbg !3925
}

declare dso_local void @start_sequence() local_unnamed_addr #1

declare dso_local void @push_to_sequence(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @end_sequence() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @commit_one_edge_insertion(%struct.edge_def* %e) local_unnamed_addr #4 !dbg !3926 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3928, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !3929, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !3930, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !3934, metadata !DIExpression()), !dbg !3935
  %insns1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 2, !dbg !3936
  %r = bitcast %union.edge_def_insns* %insns1 to %struct.rtx_def**, !dbg !3937
  %0 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !3937
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !3931, metadata !DIExpression()), !dbg !3935
  store %struct.rtx_def* null, %struct.rtx_def** %r, align 8, !dbg !3938
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !3939
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3939
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %1) #7, !dbg !3943
  %tobool5 = icmp eq i8 %call, 0, !dbg !3943
  br i1 %tobool5, label %if.else46, label %land.lhs.true6, !dbg !3944

land.lhs.true6:                                   ; preds = %entry
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3945
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3946
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !3946
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3946
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !3946
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3946
  %cmp = icmp eq %struct.basic_block_def* %2, %5, !dbg !3947
  br i1 %cmp, label %if.else46, label %if.then9, !dbg !3948

if.then9:                                         ; preds = %land.lhs.true6
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !3934, metadata !DIExpression()), !dbg !3935
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 7, !dbg !3949
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3949
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3949
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 0, !dbg !3949
  %7 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3949
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !3932, metadata !DIExpression()), !dbg !3935
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !3951
  %bf.load = load i32, i32* %8, align 8, !dbg !3951
  %bf.clear = and i32 %bf.load, 65535, !dbg !3951
  %cmp11 = icmp eq i32 %bf.clear, 12, !dbg !3951
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !3953

if.then13:                                        ; preds = %if.then9
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3954
  %rt_rtx = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !3954
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !3932, metadata !DIExpression()), !dbg !3935
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !3955
  %bf.load14.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !3957
  br label %if.end, !dbg !3958

if.end:                                           ; preds = %if.then13, %if.then9
  %bf.load14 = phi i32 [ %bf.load14.pre, %if.then13 ], [ %bf.load, %if.then9 ], !dbg !3957
  %tmp.0 = phi %struct.rtx_def* [ %10, %if.then13 ], [ %7, %if.then9 ], !dbg !3959
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0, metadata !3932, metadata !DIExpression()), !dbg !3935
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !3957
  %cmp16 = icmp eq i32 %bf.clear15, 13, !dbg !3957
  br i1 %cmp16, label %land.lhs.true18, label %if.end29, !dbg !3957

land.lhs.true18:                                  ; preds = %if.end
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp.0, i64 0, i32 1, !dbg !3957
  %11 = getelementptr inbounds %union.u, %union.u* %u19, i64 1, i32 0, i32 0, i64 0, !dbg !3957
  %rt_int = bitcast %union.rtunion_def* %11 to i32*, !dbg !3957
  %12 = load i32, i32* %rt_int, align 8, !dbg !3957
  %cmp22 = icmp eq i32 %12, 10, !dbg !3957
  br i1 %cmp22, label %if.then24, label %if.end29, !dbg !3960

if.then24:                                        ; preds = %land.lhs.true18
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3961
  %rt_rtx28 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !3961
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !3961
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !3932, metadata !DIExpression()), !dbg !3935
  br label %if.end29, !dbg !3962

if.end29:                                         ; preds = %if.then24, %land.lhs.true18, %if.end
  %tmp.1 = phi %struct.rtx_def* [ %14, %if.then24 ], [ %tmp.0, %land.lhs.true18 ], [ %tmp.0, %if.end ], !dbg !3959
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.1, metadata !3932, metadata !DIExpression()), !dbg !3935
  %cmp33 = icmp eq %struct.rtx_def* %tmp.1, %7, !dbg !3963
  br i1 %cmp33, label %if.end122, label %if.else, !dbg !3965

if.else:                                          ; preds = %if.end29
  %tobool36 = icmp eq %struct.rtx_def* %tmp.1, null, !dbg !3966
  br i1 %tobool36, label %if.else42, label %if.then37, !dbg !3968

if.then37:                                        ; preds = %if.else
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3969
  %rt_rtx41 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !3969
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !3969
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !3930, metadata !DIExpression()), !dbg !3935
  br label %if.end122, !dbg !3970

if.else42:                                        ; preds = %if.else
  %call43 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !3971
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call43, metadata !3930, metadata !DIExpression()), !dbg !3935
  br label %if.end122

if.else46:                                        ; preds = %land.lhs.true6, %entry
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !3972
  %17 = load i32, i32* %flags, align 8, !dbg !3972
  %and = and i32 %17, 2, !dbg !3974
  %cmp47 = icmp eq i32 %and, 0, !dbg !3975
  br i1 %cmp47, label %land.lhs.true49, label %if.else79, !dbg !3976

land.lhs.true49:                                  ; preds = %if.else46
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !3977
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3977
  %call50 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %18) #7, !dbg !3978
  %tobool52 = icmp eq i8 %call50, 0, !dbg !3978
  br i1 %tobool52, label %if.else79, label %land.lhs.true53, !dbg !3979

land.lhs.true53:                                  ; preds = %land.lhs.true49
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3980
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3981
  %cfg56 = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, i32 1, !dbg !3981
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg56, align 8, !dbg !3981
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 0, !dbg !3981
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3981
  %cmp57 = icmp eq %struct.basic_block_def* %19, %22, !dbg !3982
  br i1 %cmp57, label %if.else79, label %if.then59, !dbg !3983

if.then59:                                        ; preds = %land.lhs.true53
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %19, metadata !3934, metadata !DIExpression()), !dbg !3935
  %il61 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i64 0, i32 7, !dbg !3984
  %rtl62 = bitcast %union.basic_block_il_dependent* %il61 to %struct.rtl_bb_info**, !dbg !3984
  %23 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl62, align 8, !dbg !3984
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %23, i64 0, i32 1, !dbg !3984
  %24 = bitcast %struct.rtx_def** %end_ to i32**, !dbg !3984
  %25 = load i32*, i32** %24, align 8, !dbg !3984
  %bf.load63 = load i32, i32* %25, align 8, !dbg !3984
  %bf.clear64 = and i32 %bf.load63, 65535, !dbg !3984
  %cmp65 = icmp eq i32 %bf.clear64, 9, !dbg !3984
  %26 = bitcast i32* %25 to %struct.rtx_def*, !dbg !3987
  br i1 %cmp65, label %if.then67, label %if.else71, !dbg !3987

if.then67:                                        ; preds = %if.then59
  call void @llvm.dbg.value(metadata %struct.rtx_def* %26, metadata !3929, metadata !DIExpression()), !dbg !3935
  br label %if.end122, !dbg !3988

if.else71:                                        ; preds = %if.then59
  %27 = load i32, i32* %flags, align 8, !dbg !3989
  %and73 = and i32 %27, 1, !dbg !3989
  %tobool74 = icmp eq i32 %and73, 0, !dbg !3989
  br i1 %tobool74, label %cond.true, label %cond.end, !dbg !3989

cond.true:                                        ; preds = %if.else71
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1492, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3989
  %.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl62, align 8, !dbg !3991
  %end_77.phi.trans.insert = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %.pre, i64 0, i32 1, !dbg !3992
  %.pre2 = load %struct.rtx_def*, %struct.rtx_def** %end_77.phi.trans.insert, align 8, !dbg !3991
  br label %cond.end, !dbg !3989

cond.end:                                         ; preds = %if.else71, %cond.true
  %28 = phi %struct.rtx_def* [ %26, %if.else71 ], [ %.pre2, %cond.true ], !dbg !3991
  call void @llvm.dbg.value(metadata %struct.rtx_def* %28, metadata !3930, metadata !DIExpression()), !dbg !3935
  br label %if.end122

if.else79:                                        ; preds = %land.lhs.true53, %land.lhs.true49, %if.else46
  %call80 = tail call %struct.basic_block_def* @split_edge(%struct.edge_def* %e) #6, !dbg !3993
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call80, metadata !3934, metadata !DIExpression()), !dbg !3935
  %il81 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call80, i64 0, i32 7, !dbg !3995
  %rtl82 = bitcast %union.basic_block_il_dependent* %il81 to %struct.rtl_bb_info**, !dbg !3995
  %29 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl82, align 8, !dbg !3995
  %end_83 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %29, i64 0, i32 1, !dbg !3995
  %30 = load %struct.rtx_def*, %struct.rtx_def** %end_83, align 8, !dbg !3995
  call void @llvm.dbg.value(metadata %struct.rtx_def* %30, metadata !3930, metadata !DIExpression()), !dbg !3935
  %31 = load i32, i32* @flag_reorder_blocks_and_partition, align 4, !dbg !3996
  %tobool84 = icmp eq i32 %31, 0, !dbg !3996
  br i1 %tobool84, label %if.end122, label %land.lhs.true85, !dbg !3998

land.lhs.true85:                                  ; preds = %if.else79
  %32 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 110), align 1, !dbg !3999
  %tobool87 = icmp eq i8 %32, 0, !dbg !4000
  br i1 %tobool87, label %if.end122, label %land.lhs.true88, !dbg !4001

land.lhs.true88:                                  ; preds = %land.lhs.true85
  %src89 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !4002
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %src89, align 8, !dbg !4002
  %34 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4003
  %cfg91 = getelementptr inbounds %struct.function, %struct.function* %34, i64 0, i32 1, !dbg !4003
  %35 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg91, align 8, !dbg !4003
  %x_entry_block_ptr92 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %35, i64 0, i32 0, !dbg !4003
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr92, align 8, !dbg !4003
  %cmp93 = icmp eq %struct.basic_block_def* %33, %36, !dbg !4004
  br i1 %cmp93, label %if.end122, label %land.lhs.true95, !dbg !4005

land.lhs.true95:                                  ; preds = %land.lhs.true88
  %flags97 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i64 0, i32 13, !dbg !4006
  %37 = load i32, i32* %flags97, align 8, !dbg !4006
  %and98 = and i32 %37, 96, !dbg !4006
  %cmp99 = icmp eq i32 %and98, 64, !dbg !4007
  br i1 %cmp99, label %land.lhs.true101, label %if.end122, !dbg !4008

land.lhs.true101:                                 ; preds = %land.lhs.true95
  %38 = load i32, i32* %flags, align 8, !dbg !4009
  %and103 = and i32 %38, 8192, !dbg !4010
  %tobool104 = icmp eq i32 %and103, 0, !dbg !4010
  br i1 %tobool104, label %land.lhs.true105, label %if.end122, !dbg !4011

land.lhs.true105:                                 ; preds = %land.lhs.true101
  %39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i64 0, i32 0, !dbg !4012
  %bf.load106 = load i32, i32* %39, align 8, !dbg !4012
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !4012
  %cmp108 = icmp eq i32 %bf.clear107, 9, !dbg !4012
  br i1 %cmp108, label %land.lhs.true110, label %if.end122, !dbg !4013

land.lhs.true110:                                 ; preds = %land.lhs.true105
  %call111 = tail call i32 @any_condjump_p(%struct.rtx_def* %30) #6, !dbg !4014
  %tobool112 = icmp eq i32 %call111, 0, !dbg !4014
  br i1 %tobool112, label %land.lhs.true113, label %if.end122, !dbg !4015

land.lhs.true113:                                 ; preds = %land.lhs.true110
  %call114 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %call80) #7, !dbg !4016
  %flags115 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call114, i64 0, i32 7, !dbg !4017
  %40 = load i32, i32* %flags115, align 8, !dbg !4017
  %and116 = and i32 %40, 8192, !dbg !4018
  %tobool117 = icmp eq i32 %and116, 0, !dbg !4018
  br i1 %tobool117, label %if.end122, label %if.then118, !dbg !4019

if.then118:                                       ; preds = %land.lhs.true113
  tail call void @add_reg_note(%struct.rtx_def* %30, i32 29, %struct.rtx_def* null) #6, !dbg !4020
  br label %if.end122, !dbg !4020

if.end122:                                        ; preds = %land.lhs.true113, %land.lhs.true110, %land.lhs.true101, %land.lhs.true88, %land.lhs.true85, %if.else79, %if.then37, %if.else42, %if.end29, %land.lhs.true95, %land.lhs.true105, %if.then118, %if.then67, %cond.end
  %bb.2 = phi %struct.basic_block_def* [ %2, %if.then37 ], [ %2, %if.else42 ], [ %2, %if.end29 ], [ %19, %cond.end ], [ %19, %if.then67 ], [ %call80, %if.then118 ], [ %call80, %land.lhs.true113 ], [ %call80, %land.lhs.true110 ], [ %call80, %land.lhs.true105 ], [ %call80, %land.lhs.true101 ], [ %call80, %land.lhs.true95 ], [ %call80, %land.lhs.true88 ], [ %call80, %land.lhs.true85 ], [ %call80, %if.else79 ], !dbg !3935
  %after.5 = phi %struct.rtx_def* [ %16, %if.then37 ], [ %call43, %if.else42 ], [ null, %if.end29 ], [ %28, %cond.end ], [ null, %if.then67 ], [ %30, %if.then118 ], [ %30, %land.lhs.true113 ], [ %30, %land.lhs.true110 ], [ %30, %land.lhs.true105 ], [ %30, %land.lhs.true101 ], [ %30, %land.lhs.true95 ], [ %30, %land.lhs.true88 ], [ %30, %land.lhs.true85 ], [ %30, %if.else79 ], !dbg !4021
  %before.4 = phi %struct.rtx_def* [ null, %if.then37 ], [ null, %if.else42 ], [ %7, %if.end29 ], [ null, %cond.end ], [ %26, %if.then67 ], [ null, %if.then118 ], [ null, %land.lhs.true113 ], [ null, %land.lhs.true110 ], [ null, %land.lhs.true105 ], [ null, %land.lhs.true101 ], [ null, %land.lhs.true95 ], [ null, %land.lhs.true88 ], [ null, %land.lhs.true85 ], [ null, %if.else79 ], !dbg !3935
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before.4, metadata !3929, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after.5, metadata !3930, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.2, metadata !3934, metadata !DIExpression()), !dbg !3935
  %tobool123 = icmp eq %struct.rtx_def* %before.4, null, !dbg !4022
  br i1 %tobool123, label %if.else127, label %if.then124, !dbg !4024

if.then124:                                       ; preds = %if.end122
  %call125 = tail call %struct.rtx_def* @emit_insn_before_noloc(%struct.rtx_def* %0, %struct.rtx_def* nonnull %before.4, %struct.basic_block_def* %bb.2) #6, !dbg !4025
  %call126 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* nonnull %before.4) #6, !dbg !4027
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call126, metadata !3933, metadata !DIExpression()), !dbg !3935
  br label %if.end129, !dbg !4028

if.else127:                                       ; preds = %if.end122
  %call128 = tail call %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def* %0, %struct.rtx_def* %after.5, %struct.basic_block_def* %bb.2) #6, !dbg !4029
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call128, metadata !3933, metadata !DIExpression()), !dbg !3935
  br label %if.end129

if.end129:                                        ; preds = %if.else127, %if.then124
  %last.0 = phi %struct.rtx_def* [ %call126, %if.then124 ], [ %call128, %if.else127 ], !dbg !4030
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !3933, metadata !DIExpression()), !dbg !3935
  %call130 = tail call i32 @returnjump_p(%struct.rtx_def* %last.0) #6, !dbg !4031
  %tobool131 = icmp eq i32 %call130, 0, !dbg !4031
  br i1 %tobool131, label %if.else159, label %if.then132, !dbg !4033

if.then132:                                       ; preds = %if.end129
  %call133 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb.2) #7, !dbg !4034
  call void @llvm.dbg.value(metadata %struct.edge_def* %call133, metadata !3928, metadata !DIExpression()), !dbg !3935
  %dest134 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call133, i64 0, i32 1, !dbg !4036
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %dest134, align 8, !dbg !4036
  %42 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4036
  %cfg136 = getelementptr inbounds %struct.function, %struct.function* %42, i64 0, i32 1, !dbg !4036
  %43 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg136, align 8, !dbg !4036
  %x_exit_block_ptr137 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %43, i64 0, i32 1, !dbg !4036
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr137, align 8, !dbg !4036
  %cmp138 = icmp eq %struct.basic_block_def* %41, %44, !dbg !4036
  br i1 %cmp138, label %land.lhs.true140, label %cond.true148, !dbg !4036

land.lhs.true140:                                 ; preds = %if.then132
  %call141 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb.2) #7, !dbg !4036
  %tobool143 = icmp eq i8 %call141, 0, !dbg !4036
  br i1 %tobool143, label %cond.true148, label %land.lhs.true144, !dbg !4036

land.lhs.true144:                                 ; preds = %land.lhs.true140
  %flags145 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call133, i64 0, i32 7, !dbg !4036
  %45 = load i32, i32* %flags145, align 8, !dbg !4036
  %and146 = and i32 %45, 1, !dbg !4036
  %tobool147 = icmp eq i32 %and146, 0, !dbg !4036
  br i1 %tobool147, label %cond.true148, label %cond.end150, !dbg !4036

cond.true148:                                     ; preds = %land.lhs.true144, %land.lhs.true140, %if.then132
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1534, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4036
  %flags152.phi.trans.insert = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call133, i64 0, i32 7, !dbg !4037
  %.pre3 = load i32, i32* %flags152.phi.trans.insert, align 8, !dbg !4038
  br label %cond.end150, !dbg !4036

cond.end150:                                      ; preds = %land.lhs.true144, %cond.true148
  %46 = phi i32 [ %45, %land.lhs.true144 ], [ %.pre3, %cond.true148 ], !dbg !4038
  %flags152 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call133, i64 0, i32 7, !dbg !4039
  %and153 = and i32 %46, -2, !dbg !4038
  store i32 %and153, i32* %flags152, align 8, !dbg !4038
  %call154 = tail call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %last.0) #6, !dbg !4040
  br i1 %tobool123, label %if.end168, label %if.then156, !dbg !4041

if.then156:                                       ; preds = %cond.end150
  %call157 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* nonnull %before.4) #7, !dbg !4042
  br label %if.end168, !dbg !4042

if.else159:                                       ; preds = %if.end129
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 0, !dbg !4044
  %bf.load160 = load i32, i32* %47, align 8, !dbg !4044
  %bf.clear161 = and i32 %bf.load160, 65535, !dbg !4044
  %cmp162 = icmp eq i32 %bf.clear161, 9, !dbg !4044
  br i1 %cmp162, label %cond.true164, label %if.end168, !dbg !4044

cond.true164:                                     ; preds = %if.else159
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1543, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4044
  br label %if.end168, !dbg !4044

if.end168:                                        ; preds = %cond.end150, %cond.true164, %if.else159, %if.then156
  %call169 = tail call i32 @current_ir_type() #6, !dbg !4045
  %cmp170 = icmp eq i32 %call169, 2, !dbg !4047
  br i1 %cmp170, label %if.end174, label %if.then172, !dbg !4048

if.then172:                                       ; preds = %if.end168
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.2, i64 0, i32 2, !dbg !4049
  %48 = bitcast i8** %aux to i8***, !dbg !4050
  store i8** %aux, i8*** %48, align 8, !dbg !4050
  br label %if.end174, !dbg !4051

if.end174:                                        ; preds = %if.end168, %if.then172
  ret void, !dbg !4052
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4053 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4055, metadata !DIExpression()), !dbg !4056
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !4057
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4057
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4057
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4057

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !4057
  br label %cond.end, !dbg !4057

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4057
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4057
  %cmp = icmp eq i32 %call, 1, !dbg !4058
  %conv2 = zext i1 %cmp to i8, !dbg !4057
  ret i8 %conv2, !dbg !4059
}

declare dso_local %struct.basic_block_def* @split_edge(%struct.edge_def*) local_unnamed_addr #1

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @add_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn_before_noloc(%struct.rtx_def*, %struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def*, %struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @returnjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @current_ir_type() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !4060 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !4065, metadata !DIExpression()), !dbg !4066
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !4067
  %tobool = icmp eq i8 %call, 0, !dbg !4067
  br i1 %tobool, label %if.then, label %if.else, !dbg !4069

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !4070
  br label %return, !dbg !4072

if.else:                                          ; preds = %entry
  br label %return, !dbg !4073

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !4075
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !4075
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !4075
  ret i8 %retval.0, !dbg !4076
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !4077 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !4082, metadata !DIExpression()), !dbg !4083
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !4084
  %0 = load i32, i32* %index, align 8, !dbg !4084
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !4084
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4084
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !4084
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4084
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4084

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !4084
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4084
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !4084
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4084
  br label %cond.end, !dbg !4084

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4084
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4084
  %cmp = icmp ult i32 %0, %call2, !dbg !4084
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !4084

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4084
  br label %cond.end5, !dbg !4084

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !4085
  %inc = add i32 %5, 1, !dbg !4085
  store i32 %inc, i32* %index, align 8, !dbg !4085
  ret void, !dbg !4086
}

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #1

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !4087 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !4091, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !4092, metadata !DIExpression()), !dbg !4096
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !4097
  %0 = load i8*, i8** %popcount, align 8, !dbg !4097
  %tobool = icmp eq i8* %0, null, !dbg !4098
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !4099

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !4100
  %.pre2 = zext i32 %.pre to i64, !dbg !4101
  %.pre3 = shl i64 1, %.pre2, !dbg !4101
  %.pre4 = lshr i32 %bitno, 6, !dbg !4102
  %.pre5 = zext i32 %.pre4 to i64, !dbg !4103
  br label %if.end7, !dbg !4099

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !4104
  %idxprom = zext i32 %div to i64, !dbg !4104
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !4104
  %1 = load i64, i64* %arrayidx, align 8, !dbg !4104
  %rem = and i32 %bitno, 63, !dbg !4104
  %sh_prom = zext i32 %rem to i64, !dbg !4104
  %2 = shl i64 1, %sh_prom, !dbg !4105
  %3 = and i64 %1, %2, !dbg !4105
  %tobool1 = icmp eq i64 %3, 0, !dbg !4105
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !4107

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !4108
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !4109
  %inc = add i8 %4, 1, !dbg !4109
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !4109
  br label %if.end7, !dbg !4108

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !4103
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !4101
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !4103
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !4110
  %or = or i64 %5, %shl.pre-phi, !dbg !4110
  store i64 %or, i64* %arrayidx13, align 8, !dbg !4110
  ret void, !dbg !4111
}

declare dso_local void @find_many_sub_basic_blocks(%struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local void @free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @print_rtl_with_bb(%struct._IO_FILE* %outf, %struct.rtx_def* %rtx_first) local_unnamed_addr #4 !dbg !724 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp85 = alloca %struct.edge_iterator, align 8
  %e137 = alloca %struct.edge_def*, align 8
  %ei138 = alloca %struct.edge_iterator, align 8
  %tmp141 = alloca %struct.edge_iterator, align 8
  %tmp157 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outf, metadata !2015, metadata !DIExpression()), !dbg !4112
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rtx_first, metadata !2016, metadata !DIExpression()), !dbg !4112
  %cmp = icmp eq %struct.rtx_def* %rtx_first, null, !dbg !4113
  br i1 %cmp, label %if.then, label %if.else, !dbg !4114

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !4115
  br label %if.end179, !dbg !4115

if.else:                                          ; preds = %entry
  %call1 = tail call i32 @get_max_uid() #6, !dbg !4116
  call void @llvm.dbg.value(metadata i32 %call1, metadata !2018, metadata !DIExpression()), !dbg !4117
  %conv = sext i32 %call1 to i64, !dbg !4118
  %call2 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !4118
  %0 = bitcast i8* %call2 to %struct.basic_block_def**, !dbg !4118
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %0, metadata !2021, metadata !DIExpression()), !dbg !4117
  %call4 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !4119
  %1 = bitcast i8* %call4 to %struct.basic_block_def**, !dbg !4119
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %1, metadata !2023, metadata !DIExpression()), !dbg !4117
  %call6 = tail call i8* @xcalloc(i64 %conv, i64 4) #6, !dbg !4120
  %2 = bitcast i8* %call6 to i32*, !dbg !4120
  call void @llvm.dbg.value(metadata i32* %2, metadata !2024, metadata !DIExpression()), !dbg !4117
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !4121
  %tobool = icmp eq %struct.df* %3, null, !dbg !4121
  br i1 %tobool, label %if.end, label %if.then7, !dbg !4123

if.then7:                                         ; preds = %if.else
  tail call void @df_dump_start(%struct._IO_FILE* %outf) #6, !dbg !4124
  br label %if.end, !dbg !4124

if.end:                                           ; preds = %if.else, %if.then7
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4125
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !4125
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4125
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !4125
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4125
  br label %for.cond, !dbg !4125

for.cond:                                         ; preds = %for.inc54, %if.end
  %7 = phi %struct.control_flow_graph* [ %5, %if.end ], [ %.pre2, %for.inc54 ], !dbg !4126
  %.pn = phi %struct.basic_block_def* [ %6, %if.end ], [ %bb.0, %for.inc54 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 5, !dbg !4127
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4127
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2026, metadata !DIExpression()), !dbg !4117
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 0, !dbg !4126
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4126
  %cmp10 = icmp eq %struct.basic_block_def* %bb.0, %8, !dbg !4126
  br i1 %cmp10, label %for.cond57.preheader, label %for.body, !dbg !4125

for.cond57.preheader:                             ; preds = %for.cond
  %9 = bitcast %struct.edge_def** %e to i8*, !dbg !4128
  %10 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4128
  %11 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4129
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4129
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4129
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4131
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4131
  %16 = bitcast %struct.edge_iterator* %tmp85 to i8*, !dbg !4133
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp85, i64 0, i32 0, !dbg !4133
  %18 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp85, i64 0, i32 1, !dbg !4133
  %19 = bitcast %struct.edge_def** %e137 to i8*, !dbg !4135
  %20 = bitcast %struct.edge_iterator* %ei138 to i8*, !dbg !4135
  %21 = bitcast %struct.edge_iterator* %tmp141 to i8*, !dbg !4136
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp141, i64 0, i32 0, !dbg !4136
  %23 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp141, i64 0, i32 1, !dbg !4136
  %24 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei138, i64 0, i32 0, !dbg !4138
  %25 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei138, i64 0, i32 1, !dbg !4138
  %26 = bitcast %struct.edge_iterator* %tmp157 to i8*, !dbg !4140
  %27 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp157, i64 0, i32 0, !dbg !4140
  %28 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp157, i64 0, i32 1, !dbg !4140
  br label %for.cond57, !dbg !4142

for.body:                                         ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !4143
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4143
  %29 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4143
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %29, i64 0, i32 0, !dbg !4143
  %30 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !4143
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4143
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4143
  %31 = load i32, i32* %rt_int, align 8, !dbg !4143
  %idxprom = sext i32 %31 to i64, !dbg !4144
  %arrayidx12 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %0, i64 %idxprom, !dbg !4144
  store %struct.basic_block_def* %bb.0, %struct.basic_block_def** %arrayidx12, align 8, !dbg !4145
  %32 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4146
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %32, i64 0, i32 1, !dbg !4146
  %33 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4146
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4146
  %rt_int18 = bitcast %union.rtunion_def* %arrayidx17 to i32*, !dbg !4146
  %34 = load i32, i32* %rt_int18, align 8, !dbg !4146
  %idxprom19 = sext i32 %34 to i64, !dbg !4147
  %arrayidx20 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %1, i64 %idxprom19, !dbg !4147
  store %struct.basic_block_def* %bb.0, %struct.basic_block_def** %arrayidx20, align 8, !dbg !4148
  %35 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4149
  %head_23 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %35, i64 0, i32 0, !dbg !4149
  br label %for.cond24, !dbg !4150

for.cond24:                                       ; preds = %for.inc, %for.body
  %x.0.in = phi %struct.rtx_def** [ %head_23, %for.body ], [ %rt_rtx, %for.inc ]
  %x.0 = load %struct.rtx_def*, %struct.rtx_def** %x.0.in, align 8, !dbg !4151
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !2027, metadata !DIExpression()), !dbg !4152
  %cmp25 = icmp eq %struct.rtx_def* %x.0, null, !dbg !4153
  br i1 %cmp25, label %for.inc54, label %for.body27, !dbg !4154

for.body27:                                       ; preds = %for.cond24
  call void @llvm.dbg.value(metadata i32 2, metadata !2031, metadata !DIExpression()), !dbg !4155
  %arrayidx30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4156
  %rt_int31 = bitcast %union.rtunion_def* %arrayidx30 to i32*, !dbg !4156
  %36 = load i32, i32* %rt_int31, align 8, !dbg !4156
  %idxprom32 = sext i32 %36 to i64, !dbg !4158
  %arrayidx33 = getelementptr inbounds i32, i32* %2, i64 %idxprom32, !dbg !4158
  %37 = load i32, i32* %arrayidx33, align 4, !dbg !4158
  %cmp34 = icmp eq i32 %37, 0, !dbg !4159
  %spec.select = select i1 %cmp34, i32 1, i32 2, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2031, metadata !DIExpression()), !dbg !4155
  store i32 %spec.select, i32* %arrayidx33, align 4, !dbg !4161
  %38 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4162
  %end_46 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %38, i64 0, i32 1, !dbg !4162
  %39 = load %struct.rtx_def*, %struct.rtx_def** %end_46, align 8, !dbg !4162
  %cmp47 = icmp eq %struct.rtx_def* %x.0, %39, !dbg !4164
  br i1 %cmp47, label %for.inc54, label %for.inc

for.inc:                                          ; preds = %for.body27
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4165
  %rt_rtx = bitcast %union.rtunion_def* %40 to %struct.rtx_def**, !dbg !4165
  br label %for.cond24, !dbg !4166, !llvm.loop !4167

for.inc54:                                        ; preds = %for.cond24, %for.body27
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4126
  %cfg9.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4169
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9.phi.trans.insert, align 8, !dbg !4126
  br label %for.cond, !dbg !4126, !llvm.loop !4170

for.cond57:                                       ; preds = %for.cond57.preheader, %for.inc173
  %tmp_rtx.0 = phi %struct.rtx_def* [ %76, %for.inc173 ], [ %rtx_first, %for.cond57.preheader ], !dbg !4172
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp_rtx.0, metadata !2017, metadata !DIExpression()), !dbg !4112
  %cmp58 = icmp eq %struct.rtx_def* %tmp_rtx.0, null, !dbg !4173
  br i1 %cmp58, label %for.end178, label %for.body60, !dbg !4142

for.body60:                                       ; preds = %for.cond57
  %arrayidx63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp_rtx.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4174
  %rt_int64 = bitcast %union.rtunion_def* %arrayidx63 to i32*, !dbg !4174
  %41 = load i32, i32* %rt_int64, align 8, !dbg !4174
  %idxprom65 = sext i32 %41 to i64, !dbg !4175
  %arrayidx66 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %0, i64 %idxprom65, !dbg !4175
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx66, align 8, !dbg !4175
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %42, metadata !2026, metadata !DIExpression()), !dbg !4117
  %cmp67 = icmp eq %struct.basic_block_def* %42, null, !dbg !4176
  br i1 %cmp67, label %if.end96, label %if.then69, !dbg !4177

if.then69:                                        ; preds = %for.body60
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !4178
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8, !dbg !4179
  %call70 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !4180
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8, !dbg !4181
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %42, i64 0, i32 0, !dbg !4181
  %call71 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %preds) #7, !dbg !4181
  %43 = extractvalue { i32, %struct.VEC_edge_gc** } %call71, 0, !dbg !4181
  store i32 %43, i32* %12, align 8, !dbg !4181
  %44 = extractvalue { i32, %struct.VEC_edge_gc** } %call71, 1, !dbg !4181
  store %struct.VEC_edge_gc** %44, %struct.VEC_edge_gc*** %13, align 8, !dbg !4181
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %11, i64 16, i1 false), !dbg !4181
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8, !dbg !4181
  br label %for.cond72, !dbg !4181

for.cond72:                                       ; preds = %for.body75, %if.then69
  %45 = load i32, i32* %14, align 8, !dbg !4182
  %46 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %15, align 8, !dbg !4182
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2039, metadata !DIExpression(DW_OP_deref)), !dbg !4128
  %call73 = call fastcc zeroext i8 @ei_cond(i32 %45, %struct.VEC_edge_gc** %46, %struct.edge_def** nonnull %e) #7, !dbg !4182
  %tobool74 = icmp eq i8 %call73, 0, !dbg !4181
  br i1 %tobool74, label %for.end78, label %for.body75, !dbg !4181

for.body75:                                       ; preds = %for.cond72
  %47 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4183
  call void @llvm.dbg.value(metadata %struct.edge_def* %47, metadata !2039, metadata !DIExpression()), !dbg !4128
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %47, i64 0, i32 0, !dbg !4184
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4184
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %48, i64 0, i32 9, !dbg !4185
  %49 = load i32, i32* %index, align 8, !dbg !4185
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i32 %49) #6, !dbg !4186
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2042, metadata !DIExpression(DW_OP_deref)), !dbg !4128
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4182
  br label %for.cond72, !dbg !4182, !llvm.loop !4187

for.end78:                                        ; preds = %for.cond72
  %index79 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %42, i64 0, i32 9, !dbg !4189
  %50 = load i32, i32* %index79, align 8, !dbg !4189
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i32 %50) #6, !dbg !4190
  %51 = load %struct.df*, %struct.df** @df, align 8, !dbg !4191
  %tobool81 = icmp eq %struct.df* %51, null, !dbg !4191
  br i1 %tobool81, label %if.end84, label %if.then82, !dbg !4193

if.then82:                                        ; preds = %for.end78
  call void @df_dump_top(%struct.basic_block_def* nonnull %42, %struct._IO_FILE* %outf) #6, !dbg !4194
  %call83 = call i32 @putc(i32 10, %struct._IO_FILE* %outf) #6, !dbg !4196
  br label %if.end84, !dbg !4197

if.end84:                                         ; preds = %for.end78, %if.then82
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8, !dbg !4198
  %call87 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %preds) #7, !dbg !4198
  %52 = extractvalue { i32, %struct.VEC_edge_gc** } %call87, 0, !dbg !4198
  store i32 %52, i32* %17, align 8, !dbg !4198
  %53 = extractvalue { i32, %struct.VEC_edge_gc** } %call87, 1, !dbg !4198
  store %struct.VEC_edge_gc** %53, %struct.VEC_edge_gc*** %18, align 8, !dbg !4198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %16, i64 16, i1 false), !dbg !4198
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8, !dbg !4198
  br label %for.cond88, !dbg !4198

for.cond88:                                       ; preds = %for.body91, %if.end84
  %54 = load i32, i32* %14, align 8, !dbg !4199
  %55 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %15, align 8, !dbg !4199
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2039, metadata !DIExpression(DW_OP_deref)), !dbg !4128
  %call89 = call fastcc zeroext i8 @ei_cond(i32 %54, %struct.VEC_edge_gc** %55, %struct.edge_def** nonnull %e) #7, !dbg !4199
  %tobool90 = icmp eq i8 %call89, 0, !dbg !4198
  br i1 %tobool90, label %for.end95, label %for.body91, !dbg !4198

for.body91:                                       ; preds = %for.cond88
  %call92 = call i32 @fputs(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), %struct._IO_FILE* %outf) #6, !dbg !4201
  %56 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4203
  call void @llvm.dbg.value(metadata %struct.edge_def* %56, metadata !2039, metadata !DIExpression()), !dbg !4128
  call void @dump_edge_info(%struct._IO_FILE* %outf, %struct.edge_def* %56, i32 0) #6, !dbg !4204
  %call93 = call i32 @fputc(i32 10, %struct._IO_FILE* %outf) #6, !dbg !4205
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2042, metadata !DIExpression(DW_OP_deref)), !dbg !4128
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4199
  br label %for.cond88, !dbg !4199, !llvm.loop !4206

for.end95:                                        ; preds = %for.cond88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8, !dbg !4208
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !4208
  %.pre3 = load i32, i32* %rt_int64, align 8, !dbg !4209
  %.pre4 = sext i32 %.pre3 to i64, !dbg !4211
  br label %if.end96, !dbg !4212

if.end96:                                         ; preds = %for.body60, %for.end95
  %idxprom101.pre-phi = phi i64 [ %idxprom65, %for.body60 ], [ %.pre4, %for.end95 ], !dbg !4211
  %arrayidx102 = getelementptr inbounds i32, i32* %2, i64 %idxprom101.pre-phi, !dbg !4211
  %57 = load i32, i32* %arrayidx102, align 4, !dbg !4211
  %cmp103 = icmp eq i32 %57, 0, !dbg !4213
  br i1 %cmp103, label %land.lhs.true, label %if.else114, !dbg !4214

land.lhs.true:                                    ; preds = %if.end96
  %58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp_rtx.0, i64 0, i32 0, !dbg !4215
  %bf.load = load i32, i32* %58, align 8, !dbg !4215
  %bf.clear = and i32 %bf.load, 65535, !dbg !4215
  %cmp105 = icmp eq i32 %bf.clear, 13, !dbg !4215
  br i1 %cmp105, label %if.else114, label %land.lhs.true107, !dbg !4216

land.lhs.true107:                                 ; preds = %land.lhs.true
  %cmp110 = icmp eq i32 %bf.clear, 11, !dbg !4217
  br i1 %cmp110, label %if.else114, label %if.then112, !dbg !4218

if.then112:                                       ; preds = %land.lhs.true107
  %call113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !4219
  br label %if.end126, !dbg !4219

if.else114:                                       ; preds = %land.lhs.true107, %land.lhs.true, %if.end96
  %cmp121 = icmp eq i32 %57, 2, !dbg !4220
  br i1 %cmp121, label %if.then123, label %if.end126, !dbg !4222

if.then123:                                       ; preds = %if.else114
  %call124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4223
  br label %if.end126, !dbg !4223

if.end126:                                        ; preds = %if.else114, %if.then123, %if.then112
  %call127 = call i32 @print_rtl_single(%struct._IO_FILE* %outf, %struct.rtx_def* nonnull %tmp_rtx.0) #6, !dbg !4224
  call void @llvm.dbg.value(metadata i32 %call127, metadata !2035, metadata !DIExpression()), !dbg !4225
  %59 = load i32, i32* %rt_int64, align 8, !dbg !4226
  %idxprom132 = sext i32 %59 to i64, !dbg !4227
  %arrayidx133 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %1, i64 %idxprom132, !dbg !4227
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx133, align 8, !dbg !4227
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %60, metadata !2026, metadata !DIExpression()), !dbg !4117
  %cmp134 = icmp eq %struct.basic_block_def* %60, null, !dbg !4228
  br i1 %cmp134, label %if.end168, label %if.then136, !dbg !4229

if.then136:                                       ; preds = %if.end126
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8, !dbg !4230
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8, !dbg !4231
  %index139 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %60, i64 0, i32 9, !dbg !4232
  %61 = load i32, i32* %index139, align 8, !dbg !4232
  %call140 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0), i32 %61) #6, !dbg !4233
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #8, !dbg !4234
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %60, i64 0, i32 1, !dbg !4234
  %call142 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !4234
  %62 = extractvalue { i32, %struct.VEC_edge_gc** } %call142, 0, !dbg !4234
  store i32 %62, i32* %22, align 8, !dbg !4234
  %63 = extractvalue { i32, %struct.VEC_edge_gc** } %call142, 1, !dbg !4234
  store %struct.VEC_edge_gc** %63, %struct.VEC_edge_gc*** %23, align 8, !dbg !4234
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %21, i64 16, i1 false), !dbg !4234
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #8, !dbg !4234
  br label %for.cond143, !dbg !4234

for.cond143:                                      ; preds = %for.body146, %if.then136
  %64 = load i32, i32* %24, align 8, !dbg !4235
  %65 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %25, align 8, !dbg !4235
  call void @llvm.dbg.value(metadata %struct.edge_def** %e137, metadata !2049, metadata !DIExpression(DW_OP_deref)), !dbg !4135
  %call144 = call fastcc zeroext i8 @ei_cond(i32 %64, %struct.VEC_edge_gc** %65, %struct.edge_def** nonnull %e137) #7, !dbg !4235
  %tobool145 = icmp eq i8 %call144, 0, !dbg !4234
  br i1 %tobool145, label %for.end150, label %for.body146, !dbg !4234

for.body146:                                      ; preds = %for.cond143
  %66 = load %struct.edge_def*, %struct.edge_def** %e137, align 8, !dbg !4236
  call void @llvm.dbg.value(metadata %struct.edge_def* %66, metadata !2049, metadata !DIExpression()), !dbg !4135
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %66, i64 0, i32 1, !dbg !4237
  %67 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4237
  %index147 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %67, i64 0, i32 9, !dbg !4238
  %68 = load i32, i32* %index147, align 8, !dbg !4238
  %call148 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i32 %68) #6, !dbg !4239
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei138, metadata !2052, metadata !DIExpression(DW_OP_deref)), !dbg !4135
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei138) #7, !dbg !4235
  br label %for.cond143, !dbg !4235, !llvm.loop !4240

for.end150:                                       ; preds = %for.cond143
  %call151 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4242
  %69 = load %struct.df*, %struct.df** @df, align 8, !dbg !4243
  %tobool152 = icmp eq %struct.df* %69, null, !dbg !4243
  br i1 %tobool152, label %if.end155, label %if.then153, !dbg !4245

if.then153:                                       ; preds = %for.end150
  call void @df_dump_bottom(%struct.basic_block_def* nonnull %60, %struct._IO_FILE* %outf) #6, !dbg !4246
  %call154 = call i32 @putc(i32 10, %struct._IO_FILE* %outf) #6, !dbg !4248
  br label %if.end155, !dbg !4249

if.end155:                                        ; preds = %for.end150, %if.then153
  %call156 = call i32 @putc(i32 10, %struct._IO_FILE* %outf) #6, !dbg !4250
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8, !dbg !4251
  %call159 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !4251
  %70 = extractvalue { i32, %struct.VEC_edge_gc** } %call159, 0, !dbg !4251
  store i32 %70, i32* %27, align 8, !dbg !4251
  %71 = extractvalue { i32, %struct.VEC_edge_gc** } %call159, 1, !dbg !4251
  store %struct.VEC_edge_gc** %71, %struct.VEC_edge_gc*** %28, align 8, !dbg !4251
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %26, i64 16, i1 false), !dbg !4251
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8, !dbg !4251
  br label %for.cond160, !dbg !4251

for.cond160:                                      ; preds = %for.body163, %if.end155
  %72 = load i32, i32* %24, align 8, !dbg !4252
  %73 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %25, align 8, !dbg !4252
  call void @llvm.dbg.value(metadata %struct.edge_def** %e137, metadata !2049, metadata !DIExpression(DW_OP_deref)), !dbg !4135
  %call161 = call fastcc zeroext i8 @ei_cond(i32 %72, %struct.VEC_edge_gc** %73, %struct.edge_def** nonnull %e137) #7, !dbg !4252
  %tobool162 = icmp eq i8 %call161, 0, !dbg !4251
  br i1 %tobool162, label %for.end167, label %for.body163, !dbg !4251

for.body163:                                      ; preds = %for.cond160
  %call164 = call i32 @fputs(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0), %struct._IO_FILE* %outf) #6, !dbg !4254
  %74 = load %struct.edge_def*, %struct.edge_def** %e137, align 8, !dbg !4256
  call void @llvm.dbg.value(metadata %struct.edge_def* %74, metadata !2049, metadata !DIExpression()), !dbg !4135
  call void @dump_edge_info(%struct._IO_FILE* %outf, %struct.edge_def* %74, i32 1) #6, !dbg !4257
  %call165 = call i32 @fputc(i32 10, %struct._IO_FILE* %outf) #6, !dbg !4258
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei138, metadata !2052, metadata !DIExpression(DW_OP_deref)), !dbg !4135
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei138) #7, !dbg !4252
  br label %for.cond160, !dbg !4252, !llvm.loop !4259

for.end167:                                       ; preds = %for.cond160
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8, !dbg !4261
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8, !dbg !4261
  br label %if.end168, !dbg !4262

if.end168:                                        ; preds = %if.end126, %for.end167
  %tobool169 = icmp eq i32 %call127, 0, !dbg !4263
  br i1 %tobool169, label %for.inc173, label %if.then170, !dbg !4265

if.then170:                                       ; preds = %if.end168
  %call171 = call i32 @putc(i32 10, %struct._IO_FILE* %outf) #6, !dbg !4266
  br label %for.inc173, !dbg !4266

for.inc173:                                       ; preds = %if.end168, %if.then170
  %75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp_rtx.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4267
  %rt_rtx177 = bitcast %union.rtunion_def* %75 to %struct.rtx_def**, !dbg !4267
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx177, align 8, !dbg !4267
  call void @llvm.dbg.value(metadata %struct.rtx_def* %76, metadata !2017, metadata !DIExpression()), !dbg !4112
  br label %for.cond57, !dbg !4268, !llvm.loop !4269

for.end178:                                       ; preds = %for.cond57
  call void @free(i8* %call2) #6, !dbg !4271
  call void @free(i8* %call4) #6, !dbg !4272
  call void @free(i8* %call6) #6, !dbg !4273
  br label %if.end179

if.end179:                                        ; preds = %for.end178, %if.then
  %77 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 27), align 8, !dbg !4274
  %cmp180 = icmp eq %struct.rtx_def* %77, null, !dbg !4276
  br i1 %cmp180, label %if.end199, label %if.then182, !dbg !4277

if.then182:                                       ; preds = %if.end179
  %call183 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !4278
  br label %for.cond184, !dbg !4280

for.cond184:                                      ; preds = %for.body187, %if.then182
  %tmp_rtx.1.in = phi %struct.rtx_def** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 27), %if.then182 ], [ %rt_rtx197, %for.body187 ]
  %tmp_rtx.1 = load %struct.rtx_def*, %struct.rtx_def** %tmp_rtx.1.in, align 8, !dbg !4282
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp_rtx.1, metadata !2017, metadata !DIExpression()), !dbg !4112
  %cmp185 = icmp eq %struct.rtx_def* %tmp_rtx.1, null, !dbg !4283
  br i1 %cmp185, label %if.end199.loopexit, label %for.body187, !dbg !4285

for.body187:                                      ; preds = %for.cond184
  %arrayidx190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp_rtx.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4286
  %rt_rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**, !dbg !4286
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx191, align 8, !dbg !4286
  %call192 = call i32 @print_rtl_single(%struct._IO_FILE* %outf, %struct.rtx_def* %78) #6, !dbg !4287
  %79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp_rtx.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4288
  %rt_rtx197 = bitcast %union.rtunion_def* %79 to %struct.rtx_def**, !dbg !4288
  br label %for.cond184, !dbg !4289, !llvm.loop !4290

if.end199.loopexit:                               ; preds = %for.cond184
  br label %if.end199, !dbg !4292

if.end199:                                        ; preds = %if.end199.loopexit, %if.end179
  ret void, !dbg !4292
}

declare dso_local i32 @get_max_uid() local_unnamed_addr #1

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #1

declare dso_local void @df_dump_start(%struct._IO_FILE*) local_unnamed_addr #1

declare dso_local void @df_dump_top(%struct.basic_block_def*, %struct._IO_FILE*) local_unnamed_addr #1

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) local_unnamed_addr #1

declare dso_local void @dump_edge_info(%struct._IO_FILE*, %struct.edge_def*, i32) local_unnamed_addr #1

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) local_unnamed_addr #1

declare dso_local i32 @print_rtl_single(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @df_dump_bottom(%struct.basic_block_def*, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @update_br_prob_note(%struct.basic_block_def* %bb) local_unnamed_addr #4 !dbg !4293 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4295, metadata !DIExpression()), !dbg !4297
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !4298
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4298
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4298
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !4298
  %1 = bitcast %struct.rtx_def** %end_ to i32**, !dbg !4298
  %2 = load i32*, i32** %1, align 8, !dbg !4298
  %bf.load = load i32, i32* %2, align 8, !dbg !4298
  %bf.clear = and i32 %bf.load, 65535, !dbg !4298
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !4298
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !4300

if.end:                                           ; preds = %entry
  %3 = bitcast i32* %2 to %struct.rtx_def*, !dbg !4300
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %3, i32 13, %struct.rtx_def* null) #6, !dbg !4301
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4296, metadata !DIExpression()), !dbg !4297
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !4302
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !4304

lor.lhs.false:                                    ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4305
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4305
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4305
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, !dbg !4305
  %arrayidx5 = bitcast %union.u* %u4 to i64*, !dbg !4305
  %5 = load i64, i64* %arrayidx5, align 8, !dbg !4305
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4306
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4306
  %tobool6 = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !4306
  br i1 %tobool6, label %cond.end, label %cond.true, !dbg !4306

cond.true:                                        ; preds = %lor.lhs.false
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !4306
  br label %cond.end, !dbg !4306

cond.end:                                         ; preds = %lor.lhs.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %lor.lhs.false ], !dbg !4306
  %call8 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #7, !dbg !4306
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call8, i64 0, i32 7, !dbg !4306
  %7 = load i32, i32* %flags, align 8, !dbg !4306
  %and = and i32 %7, 1, !dbg !4306
  %tobool9 = icmp eq i32 %and, 0, !dbg !4306
  %8 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4306
  %tobool12 = icmp ne %struct.VEC_edge_gc* %8, null, !dbg !4306
  br i1 %tobool9, label %cond.false20, label %cond.true10, !dbg !4306

cond.true10:                                      ; preds = %cond.end
  br i1 %tobool12, label %cond.true13, label %cond.end17, !dbg !4306

cond.true13:                                      ; preds = %cond.true10
  %base15 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %8, i64 0, i32 0, !dbg !4306
  br label %cond.end17, !dbg !4306

cond.end17:                                       ; preds = %cond.true10, %cond.true13
  %cond18 = phi %struct.VEC_edge_base* [ %base15, %cond.true13 ], [ null, %cond.true10 ], !dbg !4306
  %call19 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond18, i32 1) #7, !dbg !4306
  br label %cond.end30, !dbg !4306

cond.false20:                                     ; preds = %cond.end
  br i1 %tobool12, label %cond.true23, label %cond.end27, !dbg !4306

cond.true23:                                      ; preds = %cond.false20
  %base25 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %8, i64 0, i32 0, !dbg !4306
  br label %cond.end27, !dbg !4306

cond.end27:                                       ; preds = %cond.false20, %cond.true23
  %cond28 = phi %struct.VEC_edge_base* [ %base25, %cond.true23 ], [ null, %cond.false20 ], !dbg !4306
  %call29 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond28, i32 0) #7, !dbg !4306
  br label %cond.end30, !dbg !4306

cond.end30:                                       ; preds = %cond.end27, %cond.end17
  %cond31 = phi %struct.edge_def* [ %call19, %cond.end17 ], [ %call29, %cond.end27 ], !dbg !4306
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond31, i64 0, i32 8, !dbg !4307
  %9 = load i32, i32* %probability, align 4, !dbg !4307
  %conv = sext i32 %9 to i64, !dbg !4306
  %cmp32 = icmp eq i64 %5, %conv, !dbg !4308
  br i1 %cmp32, label %cleanup.cont, label %if.end35, !dbg !4309

if.end35:                                         ; preds = %cond.end30
  %10 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4310
  %tobool37 = icmp eq %struct.VEC_edge_gc* %10, null, !dbg !4310
  br i1 %tobool37, label %cond.end42, label %cond.true38, !dbg !4310

cond.true38:                                      ; preds = %if.end35
  %base40 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %10, i64 0, i32 0, !dbg !4310
  br label %cond.end42, !dbg !4310

cond.end42:                                       ; preds = %if.end35, %cond.true38
  %cond43 = phi %struct.VEC_edge_base* [ %base40, %cond.true38 ], [ null, %if.end35 ], !dbg !4310
  %call44 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond43, i32 0) #7, !dbg !4310
  %flags45 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call44, i64 0, i32 7, !dbg !4310
  %11 = load i32, i32* %flags45, align 8, !dbg !4310
  %and46 = and i32 %11, 1, !dbg !4310
  %tobool47 = icmp eq i32 %and46, 0, !dbg !4310
  %12 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4310
  %tobool50 = icmp ne %struct.VEC_edge_gc* %12, null, !dbg !4310
  br i1 %tobool47, label %cond.false58, label %cond.true48, !dbg !4310

cond.true48:                                      ; preds = %cond.end42
  br i1 %tobool50, label %cond.true51, label %cond.end55, !dbg !4310

cond.true51:                                      ; preds = %cond.true48
  %base53 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %12, i64 0, i32 0, !dbg !4310
  br label %cond.end55, !dbg !4310

cond.end55:                                       ; preds = %cond.true48, %cond.true51
  %cond56 = phi %struct.VEC_edge_base* [ %base53, %cond.true51 ], [ null, %cond.true48 ], !dbg !4310
  %call57 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond56, i32 1) #7, !dbg !4310
  br label %cond.end68, !dbg !4310

cond.false58:                                     ; preds = %cond.end42
  br i1 %tobool50, label %cond.true61, label %cond.end65, !dbg !4310

cond.true61:                                      ; preds = %cond.false58
  %base63 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %12, i64 0, i32 0, !dbg !4310
  br label %cond.end65, !dbg !4310

cond.end65:                                       ; preds = %cond.false58, %cond.true61
  %cond66 = phi %struct.VEC_edge_base* [ %base63, %cond.true61 ], [ null, %cond.false58 ], !dbg !4310
  %call67 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond66, i32 0) #7, !dbg !4310
  br label %cond.end68, !dbg !4310

cond.end68:                                       ; preds = %cond.end65, %cond.end55
  %cond69 = phi %struct.edge_def* [ %call57, %cond.end55 ], [ %call67, %cond.end65 ], !dbg !4310
  %probability70 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond69, i64 0, i32 8, !dbg !4310
  %13 = load i32, i32* %probability70, align 4, !dbg !4310
  %conv71 = sext i32 %13 to i64, !dbg !4310
  %call72 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv71) #6, !dbg !4310
  store %struct.rtx_def* %call72, %struct.rtx_def** %rt_rtx, align 8, !dbg !4311
  br label %cleanup.cont, !dbg !4312

cleanup.cont:                                     ; preds = %if.end, %cond.end68, %entry, %cond.end30
  ret void, !dbg !4312
}

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_last_bb_insn(%struct.basic_block_def* %bb) local_unnamed_addr #4 !dbg !4313 {
entry:
  %tmp = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4315, metadata !DIExpression()), !dbg !4318
  %0 = bitcast %struct.rtx_def** %tmp to i8*, !dbg !4319
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4319
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !4320
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4320
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4320
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !4320
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4320
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4317, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tmp, metadata !4316, metadata !DIExpression(DW_OP_deref)), !dbg !4318
  %call = call zeroext i8 @tablejump_p(%struct.rtx_def* %2, %struct.rtx_def** null, %struct.rtx_def** nonnull %tmp) #6, !dbg !4321
  %tobool = icmp eq i8 %call, 0, !dbg !4321
  %3 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !4323
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !4316, metadata !DIExpression()), !dbg !4318
  %spec.select = select i1 %tobool, %struct.rtx_def* %2, %struct.rtx_def* %3, !dbg !4324
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !4317, metadata !DIExpression()), !dbg !4318
  %call1 = call %struct.rtx_def* @next_nonnote_insn_bb(%struct.rtx_def* %spec.select) #6, !dbg !4325
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4316, metadata !DIExpression()), !dbg !4318
  br label %while.cond, !dbg !4326

while.cond:                                       ; preds = %while.body, %entry
  %4 = phi %struct.rtx_def* [ %call1, %entry ], [ %call3, %while.body ], !dbg !4318
  %end.1 = phi %struct.rtx_def* [ %spec.select, %entry ], [ %4, %while.body ], !dbg !4318
  store %struct.rtx_def* %4, %struct.rtx_def** %tmp, align 8, !dbg !4318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.1, metadata !4317, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4316, metadata !DIExpression()), !dbg !4318
  %tobool2 = icmp eq %struct.rtx_def* %4, null, !dbg !4327
  br i1 %tobool2, label %while.end, label %land.rhs, !dbg !4328

land.rhs:                                         ; preds = %while.cond
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !4328
  %bf.load = load i32, i32* %5, align 8, !dbg !4329
  %bf.clear = and i32 %bf.load, 65535, !dbg !4329
  %cmp = icmp eq i32 %bf.clear, 11, !dbg !4329
  br i1 %cmp, label %while.body, label %while.end, !dbg !4326

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4316, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4317, metadata !DIExpression()), !dbg !4318
  %call3 = call %struct.rtx_def* @next_nonnote_insn_bb(%struct.rtx_def* nonnull %4) #6, !dbg !4330
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !4316, metadata !DIExpression()), !dbg !4318
  br label %while.cond, !dbg !4326, !llvm.loop !4332

while.end:                                        ; preds = %while.cond, %land.rhs
  %end.1.lcssa = phi %struct.rtx_def* [ %end.1, %while.cond ], [ %end.1, %land.rhs ], !dbg !4318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.1.lcssa, metadata !4317, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.1.lcssa, metadata !4317, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.1.lcssa, metadata !4317, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.1.lcssa, metadata !4317, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.1.lcssa, metadata !4317, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.1.lcssa, metadata !4317, metadata !DIExpression()), !dbg !4318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4334
  ret %struct.rtx_def* %end.1.lcssa, !dbg !4335
}

declare dso_local %struct.rtx_def* @next_nonnote_insn_bb(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @may_trap_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @can_nonlocal_goto(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @can_throw_internal(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @df_set_bb_dirty(%struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @purge_all_dead_edges() local_unnamed_addr #4 !dbg !4336 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !4338, metadata !DIExpression()), !dbg !4344
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4345
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4345
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4345
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !4345
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4345
  br label %for.cond, !dbg !4345

for.cond:                                         ; preds = %for.body, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.body ], !dbg !4346
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.body ]
  %purged.0 = phi i32 [ 0, %entry ], [ %or, %for.body ], !dbg !4344
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4347
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4347
  call void @llvm.dbg.value(metadata i32 %purged.0, metadata !4338, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4339, metadata !DIExpression()), !dbg !4344
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !4346
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4346
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !4346
  br i1 %cmp, label %for.end, label %for.body, !dbg !4345

for.body:                                         ; preds = %for.cond
  %call = tail call zeroext i8 @purge_dead_edges(%struct.basic_block_def* %bb.0) #7, !dbg !4348
  call void @llvm.dbg.value(metadata i8 %call, metadata !4340, metadata !DIExpression()), !dbg !4349
  %conv = zext i8 %call to i32, !dbg !4350
  %or = or i32 %purged.0, %conv, !dbg !4351
  call void @llvm.dbg.value(metadata i32 %or, metadata !4338, metadata !DIExpression()), !dbg !4344
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4346
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4352
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !4346
  br label %for.cond, !dbg !4346, !llvm.loop !4353

for.end:                                          ; preds = %for.cond
  %purged.0.lcssa = phi i32 [ %purged.0, %for.cond ], !dbg !4344
  call void @llvm.dbg.value(metadata i32 %purged.0.lcssa, metadata !4338, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %purged.0.lcssa, metadata !4338, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %purged.0.lcssa, metadata !4338, metadata !DIExpression()), !dbg !4344
  %conv4 = trunc i32 %purged.0.lcssa to i8, !dbg !4355
  ret i8 %conv4, !dbg !4356
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @insert_insn_end_bb_new(%struct.rtx_def* %pat, %struct.basic_block_def* %bb) local_unnamed_addr #4 !dbg !4357 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !4361, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4362, metadata !DIExpression()), !dbg !4366
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !4367
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4367
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4367
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !4367
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4367
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4363, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !4365, metadata !DIExpression()), !dbg !4366
  br label %while.cond, !dbg !4368

while.cond:                                       ; preds = %while.body, %entry
  %pat_end.0 = phi %struct.rtx_def* [ %pat, %entry ], [ %3, %while.body ], !dbg !4366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat_end.0, metadata !4365, metadata !DIExpression()), !dbg !4366
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat_end.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4369
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !4369
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4369
  %cmp = icmp eq %struct.rtx_def* %3, null, !dbg !4370
  br i1 %cmp, label %while.end, label %while.body, !dbg !4368

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !4365, metadata !DIExpression()), !dbg !4366
  br label %while.cond, !dbg !4368, !llvm.loop !4371

while.end:                                        ; preds = %while.cond
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4373
  %bf.load = load i32, i32* %4, align 8, !dbg !4373
  %bf.clear = and i32 %bf.load, 65535, !dbg !4373
  %cmp5 = icmp eq i32 %bf.clear, 9, !dbg !4373
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !4375

lor.lhs.false:                                    ; preds = %while.end
  %cmp8 = icmp eq i32 %bf.clear, 8, !dbg !4376
  br i1 %cmp8, label %land.lhs.true, label %if.else, !dbg !4377

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !4378
  %tobool = icmp eq i8 %call, 0, !dbg !4378
  br i1 %tobool, label %if.then, label %lor.lhs.false9, !dbg !4379

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !4380
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 7, !dbg !4381
  %5 = load i32, i32* %flags, align 8, !dbg !4381
  %and = and i32 %5, 2, !dbg !4382
  %tobool11 = icmp eq i32 %and, 0, !dbg !4382
  br i1 %tobool11, label %lor.lhs.false9.if.else_crit_edge, label %if.then, !dbg !4383

lor.lhs.false9.if.else_crit_edge:                 ; preds = %lor.lhs.false9
  %bf.load30.pre = load i32, i32* %4, align 8, !dbg !4384
  br label %if.else, !dbg !4383

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %while.end
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !4386
  %6 = getelementptr inbounds %union.u, %union.u* %u12, i64 1, i32 0, i32 0, i64 0, !dbg !4386
  %7 = bitcast %union.rtunion_def* %6 to i32**, !dbg !4386
  %8 = load i32*, i32** %7, align 8, !dbg !4386
  %bf.load16 = load i32, i32* %8, align 8, !dbg !4386
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !4386
  %cmp18 = icmp eq i32 %bf.clear17, 20, !dbg !4389
  br i1 %cmp18, label %if.then27, label %lor.lhs.false19, !dbg !4390

lor.lhs.false19:                                  ; preds = %if.then
  %cmp26 = icmp eq i32 %bf.clear17, 21, !dbg !4391
  br i1 %cmp26, label %if.then27, label %if.end, !dbg !4392

if.then27:                                        ; preds = %lor.lhs.false19, %if.then
  %call28 = tail call %struct.rtx_def* @prev_real_insn(%struct.rtx_def* %1) #6, !dbg !4393
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !4363, metadata !DIExpression()), !dbg !4366
  br label %if.end, !dbg !4394

if.end:                                           ; preds = %if.then27, %lor.lhs.false19
  %insn.0 = phi %struct.rtx_def* [ %call28, %if.then27 ], [ %1, %lor.lhs.false19 ], !dbg !4366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4363, metadata !DIExpression()), !dbg !4366
  %call29 = tail call %struct.rtx_def* @emit_insn_before_noloc(%struct.rtx_def* %pat, %struct.rtx_def* %insn.0, %struct.basic_block_def* %bb) #6, !dbg !4395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call29, metadata !4364, metadata !DIExpression()), !dbg !4366
  br label %if.end66, !dbg !4396

if.else:                                          ; preds = %lor.lhs.false9.if.else_crit_edge, %lor.lhs.false
  %bf.load30 = phi i32 [ %bf.load30.pre, %lor.lhs.false9.if.else_crit_edge ], [ %bf.load, %lor.lhs.false ], !dbg !4384
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !4384
  %cmp32 = icmp eq i32 %bf.clear31, 10, !dbg !4384
  br i1 %cmp32, label %land.lhs.true33, label %if.else63, !dbg !4397

land.lhs.true33:                                  ; preds = %if.else
  %call34 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !4398
  %tobool35 = icmp eq i8 %call34, 0, !dbg !4398
  br i1 %tobool35, label %if.then41, label %lor.lhs.false36, !dbg !4399

lor.lhs.false36:                                  ; preds = %land.lhs.true33
  %call37 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !4400
  %flags38 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call37, i64 0, i32 7, !dbg !4401
  %9 = load i32, i32* %flags38, align 8, !dbg !4401
  %and39 = and i32 %9, 2, !dbg !4402
  %tobool40 = icmp eq i32 %and39, 0, !dbg !4402
  br i1 %tobool40, label %if.else63, label %if.then41, !dbg !4403

if.then41:                                        ; preds = %lor.lhs.false36, %land.lhs.true33
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4404
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 0, !dbg !4404
  %11 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !4404
  %call44 = tail call %struct.rtx_def* @find_first_parameter_load(%struct.rtx_def* %1, %struct.rtx_def* %11) #6, !dbg !4406
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !4363, metadata !DIExpression()), !dbg !4366
  br label %while.cond45, !dbg !4407

while.cond45:                                     ; preds = %while.body56, %if.then41
  %insn.1 = phi %struct.rtx_def* [ %call44, %if.then41 ], [ %16, %while.body56 ], !dbg !4408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !4363, metadata !DIExpression()), !dbg !4366
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !4409
  %bf.load46 = load i32, i32* %12, align 8, !dbg !4409
  %bf.clear47 = and i32 %bf.load46, 65535, !dbg !4409
  %cmp48 = icmp eq i32 %bf.clear47, 12, !dbg !4409
  br i1 %cmp48, label %while.body56, label %lor.rhs, !dbg !4410

lor.rhs:                                          ; preds = %while.cond45
  %cmp51 = icmp eq i32 %bf.clear47, 13, !dbg !4411
  br i1 %cmp51, label %land.rhs, label %while.end61, !dbg !4411

land.rhs:                                         ; preds = %lor.rhs
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, !dbg !4411
  %13 = getelementptr inbounds %union.u, %union.u* %u52, i64 1, i32 0, i32 0, i64 0, !dbg !4411
  %rt_int = bitcast %union.rtunion_def* %13 to i32*, !dbg !4411
  %14 = load i32, i32* %rt_int, align 8, !dbg !4411
  %cmp55 = icmp eq i32 %14, 10, !dbg !4411
  br i1 %cmp55, label %while.body56, label %while.end61, !dbg !4407

while.body56:                                     ; preds = %while.cond45, %land.rhs
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4412
  %rt_rtx60 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !4412
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx60, align 8, !dbg !4412
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !4363, metadata !DIExpression()), !dbg !4366
  br label %while.cond45, !dbg !4407, !llvm.loop !4413

while.end61:                                      ; preds = %lor.rhs, %land.rhs
  %insn.1.lcssa = phi %struct.rtx_def* [ %insn.1, %lor.rhs ], [ %insn.1, %land.rhs ], !dbg !4408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !4363, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !4363, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !4363, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !4363, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !4363, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !4363, metadata !DIExpression()), !dbg !4366
  %call62 = tail call %struct.rtx_def* @emit_insn_before_noloc(%struct.rtx_def* %pat, %struct.rtx_def* %insn.1.lcssa, %struct.basic_block_def* %bb) #6, !dbg !4414
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call62, metadata !4364, metadata !DIExpression()), !dbg !4366
  br label %if.end66, !dbg !4415

if.else63:                                        ; preds = %lor.lhs.false36, %if.else
  %call64 = tail call %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def* %pat, %struct.rtx_def* %1, %struct.basic_block_def* %bb) #6, !dbg !4416
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64, metadata !4364, metadata !DIExpression()), !dbg !4366
  br label %if.end66

if.end66:                                         ; preds = %while.end61, %if.else63, %if.end
  %new_insn.1 = phi %struct.rtx_def* [ %call29, %if.end ], [ %call62, %while.end61 ], [ %call64, %if.else63 ], !dbg !4417
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insn.1, metadata !4364, metadata !DIExpression()), !dbg !4366
  ret %struct.rtx_def* %new_insn.1, !dbg !4418
}

declare dso_local %struct.rtx_def* @prev_real_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @find_first_parameter_load(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @rtl_verify_flow_info() #4 !dbg !4419 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %call = tail call i32 @rtl_verify_flow_info_1() #7, !dbg !4446
  call void @llvm.dbg.value(metadata i32 %call, metadata !4422, metadata !DIExpression()), !dbg !4447
  %call1 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !4448
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4424, metadata !DIExpression()), !dbg !4447
  %call2 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4449
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !4427, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.basic_block_def* undef, metadata !4429, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !4430, metadata !DIExpression()), !dbg !4447
  %call3 = tail call i32 @get_max_uid() #6, !dbg !4450
  call void @llvm.dbg.value(metadata i32 %call3, metadata !4431, metadata !DIExpression()), !dbg !4447
  %conv = sext i32 %call3 to i64, !dbg !4451
  %call4 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !4451
  %0 = bitcast i8* %call4 to %struct.basic_block_def**, !dbg !4451
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %0, metadata !4425, metadata !DIExpression()), !dbg !4447
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4452
  %cfg6 = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !4452
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg6, align 8, !dbg !4452
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 1, !dbg !4452
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4452
  %4 = bitcast %struct.edge_def** %e to i8*, !dbg !4453
  %5 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4453
  %6 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4454
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4454
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4454
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4456
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4456
  br label %for.cond, !dbg !4452

for.cond:                                         ; preds = %if.end214, %entry
  %11 = phi %struct.control_flow_graph* [ %2, %entry ], [ %.pre8, %if.end214 ], !dbg !4458
  %last_head.0 = phi %struct.rtx_def* [ %call1, %entry ], [ %32, %if.end214 ], !dbg !4447
  %err.0 = phi i32 [ %call, %entry ], [ %err.13, %if.end214 ], !dbg !4447
  %.pn = phi %struct.basic_block_def* [ %3, %entry ], [ %bb.0, %if.end214 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 5, !dbg !4459
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4459
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4421, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.0, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_head.0, metadata !4424, metadata !DIExpression()), !dbg !4447
  %x_entry_block_ptr9 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 0, !dbg !4458
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr9, align 8, !dbg !4458
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %12, !dbg !4458
  br i1 %cmp, label %for.cond218.preheader, label %for.body, !dbg !4452

for.cond218.preheader:                            ; preds = %for.cond
  %last_head.0.lcssa = phi %struct.rtx_def* [ %last_head.0, %for.cond ], !dbg !4447
  %err.0.lcssa = phi i32 [ %err.0, %for.cond ], !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_head.0.lcssa, metadata !4424, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.0.lcssa, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_head.0.lcssa, metadata !4424, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.0.lcssa, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_head.0.lcssa, metadata !4424, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.0.lcssa, metadata !4422, metadata !DIExpression()), !dbg !4447
  br label %for.cond218, !dbg !4460

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4462
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !4463
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !4464
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4464
  %13 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4464
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %13, i64 0, i32 0, !dbg !4464
  %14 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !4464
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !4438, metadata !DIExpression()), !dbg !4453
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %13, i64 0, i32 1, !dbg !4465
  %15 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4465
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !4439, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_head.0, metadata !4423, metadata !DIExpression()), !dbg !4447
  br label %for.cond13, !dbg !4466

for.cond13:                                       ; preds = %for.inc, %for.body
  %x.0 = phi %struct.rtx_def* [ %last_head.0, %for.body ], [ %20, %for.inc ], !dbg !4468
  %err.1 = phi i32 [ %err.0, %for.body ], [ %err.2, %for.inc ], !dbg !4469
  call void @llvm.dbg.value(metadata i32 %err.1, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !4423, metadata !DIExpression()), !dbg !4447
  %cond = icmp eq %struct.rtx_def* %x.0, null, !dbg !4470
  br i1 %cond, label %if.then31.loopexit, label %for.body16, !dbg !4470

for.body16:                                       ; preds = %for.cond13
  %cmp17 = icmp eq %struct.rtx_def* %x.0, %15, !dbg !4471
  br i1 %cmp17, label %for.end, label %if.end, !dbg !4475

if.end:                                           ; preds = %for.body16
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !4476
  %bf.load = load i32, i32* %16, align 8, !dbg !4476
  %bf.clear = and i32 %bf.load, 65535, !dbg !4476
  %cmp19 = icmp eq i32 %bf.clear, 11, !dbg !4476
  br i1 %cmp19, label %for.inc, label %land.lhs.true, !dbg !4478

land.lhs.true:                                    ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 1, !dbg !4479
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !4479
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4479
  %cmp21 = icmp eq %struct.basic_block_def* %17, null, !dbg !4480
  br i1 %cmp21, label %for.inc, label %if.then23, !dbg !4481

if.then23:                                        ; preds = %land.lhs.true
  %arrayidx26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4482
  %rt_int = bitcast %union.rtunion_def* %arrayidx26 to i32*, !dbg !4482
  %18 = load i32, i32* %rt_int, align 8, !dbg !4482
  call void (i8*, ...) @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.22, i64 0, i64 0), i32 %18) #6, !dbg !4484
  call void @llvm.dbg.value(metadata i32 1, metadata !4422, metadata !DIExpression()), !dbg !4447
  br label %for.inc, !dbg !4485

for.inc:                                          ; preds = %land.lhs.true, %if.end, %if.then23
  %err.2 = phi i32 [ %err.1, %if.end ], [ 1, %if.then23 ], [ %err.1, %land.lhs.true ], !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.2, metadata !4422, metadata !DIExpression()), !dbg !4447
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4486
  %rt_rtx = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !4486
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4486
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !4423, metadata !DIExpression()), !dbg !4447
  br label %for.cond13, !dbg !4487, !llvm.loop !4488

for.end:                                          ; preds = %for.body16
  %x.0.lcssa20 = phi %struct.rtx_def* [ %x.0, %for.body16 ], !dbg !4468
  %err.1.lcssa19 = phi i32 [ %err.1, %for.body16 ], !dbg !4469
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0.lcssa20, metadata !4423, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.1.lcssa19, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0.lcssa20, metadata !4423, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.1.lcssa19, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0.lcssa20, metadata !4423, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.1.lcssa19, metadata !4422, metadata !DIExpression()), !dbg !4447
  br label %if.end36, !dbg !4490

if.then31.loopexit:                               ; preds = %for.cond13
  %x.0.lcssa = phi %struct.rtx_def* [ %x.0, %for.cond13 ], !dbg !4468
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0.lcssa, metadata !4423, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0.lcssa, metadata !4423, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0.lcssa, metadata !4423, metadata !DIExpression()), !dbg !4447
  %arrayidx34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4491
  %rt_int35 = bitcast %union.rtunion_def* %arrayidx34 to i32*, !dbg !4491
  %21 = load i32, i32* %rt_int35, align 8, !dbg !4491
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !4494
  %22 = load i32, i32* %index, align 8, !dbg !4494
  call void (i8*, ...) @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.23, i64 0, i64 0), i32 %21, i32 %22) #6, !dbg !4495
  call void @llvm.dbg.value(metadata i32 1, metadata !4422, metadata !DIExpression()), !dbg !4447
  br label %if.end36, !dbg !4496

if.end36:                                         ; preds = %for.end, %if.then31.loopexit
  %x.021 = phi %struct.rtx_def* [ %x.0.lcssa20, %for.end ], [ %x.0.lcssa, %if.then31.loopexit ]
  %err.3 = phi i32 [ %err.1.lcssa19, %for.end ], [ 1, %if.then31.loopexit ], !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.3, metadata !4422, metadata !DIExpression()), !dbg !4447
  %index53 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !4497
  br label %for.cond37, !dbg !4503

for.cond37:                                       ; preds = %for.inc72, %if.end36
  %x.1 = phi %struct.rtx_def* [ %x.021, %if.end36 ], [ %28, %for.inc72 ], !dbg !4453
  %err.4 = phi i32 [ %err.3, %if.end36 ], [ %err.5, %for.inc72 ], !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.4, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1, metadata !4423, metadata !DIExpression()), !dbg !4447
  %cmp38 = icmp eq %struct.rtx_def* %x.1, null, !dbg !4504
  br i1 %cmp38, label %for.end77, label %for.body40, !dbg !4505

for.body40:                                       ; preds = %for.cond37
  %arrayidx43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4506
  %rt_int44 = bitcast %union.rtunion_def* %arrayidx43 to i32*, !dbg !4506
  %23 = load i32, i32* %rt_int44, align 8, !dbg !4506
  %idxprom = sext i32 %23 to i64, !dbg !4507
  %arrayidx45 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %0, i64 %idxprom, !dbg !4507
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx45, align 8, !dbg !4507
  %cmp46 = icmp eq %struct.basic_block_def* %24, null, !dbg !4508
  br i1 %cmp46, label %if.end61, label %if.then48, !dbg !4509

if.then48:                                        ; preds = %for.body40
  %25 = load i32, i32* %index53, align 8, !dbg !4510
  %index60 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i64 0, i32 9, !dbg !4511
  %26 = load i32, i32* %index60, align 8, !dbg !4511
  call void (i8*, ...) @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.24, i64 0, i64 0), i32 %23, i32 %25, i32 %26) #6, !dbg !4512
  call void @llvm.dbg.value(metadata i32 1, metadata !4422, metadata !DIExpression()), !dbg !4447
  %.pre9 = load i32, i32* %rt_int44, align 8, !dbg !4513
  %.pre15 = sext i32 %.pre9 to i64, !dbg !4514
  br label %if.end61, !dbg !4515

if.end61:                                         ; preds = %for.body40, %if.then48
  %idxprom66.pre-phi = phi i64 [ %idxprom, %for.body40 ], [ %.pre15, %if.then48 ], !dbg !4514
  %err.5 = phi i32 [ %err.4, %for.body40 ], [ 1, %if.then48 ], !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.5, metadata !4422, metadata !DIExpression()), !dbg !4447
  %arrayidx67 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %0, i64 %idxprom66.pre-phi, !dbg !4514
  store %struct.basic_block_def* %bb.0, %struct.basic_block_def** %arrayidx67, align 8, !dbg !4516
  %cmp68 = icmp eq %struct.rtx_def* %x.1, %14, !dbg !4517
  br i1 %cmp68, label %for.end77, label %for.inc72, !dbg !4519

for.inc72:                                        ; preds = %if.end61
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4520
  %rt_rtx76 = bitcast %union.rtunion_def* %27 to %struct.rtx_def**, !dbg !4520
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx76, align 8, !dbg !4520
  call void @llvm.dbg.value(metadata %struct.rtx_def* %28, metadata !4423, metadata !DIExpression()), !dbg !4447
  br label %for.cond37, !dbg !4521, !llvm.loop !4522

for.end77:                                        ; preds = %for.cond37, %if.end61
  %x.1.lcssa = phi %struct.rtx_def* [ %x.1, %for.cond37 ], [ %x.1, %if.end61 ], !dbg !4453
  %cmp38.lcssa = phi i1 [ %cmp38, %for.cond37 ], [ %cmp38, %if.end61 ], !dbg !4504
  %err.6 = phi i32 [ %err.4, %for.cond37 ], [ %err.5, %if.end61 ], !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1.lcssa, metadata !4423, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1.lcssa, metadata !4423, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1.lcssa, metadata !4423, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1.lcssa, metadata !4423, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1.lcssa, metadata !4423, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1.lcssa, metadata !4423, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.6, metadata !4422, metadata !DIExpression()), !dbg !4447
  br i1 %cmp38.lcssa, label %if.then79, label %if.end85, !dbg !4524

if.then79:                                        ; preds = %for.end77
  %arrayidx82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4525
  %rt_int83 = bitcast %union.rtunion_def* %arrayidx82 to i32*, !dbg !4525
  %29 = load i32, i32* %rt_int83, align 8, !dbg !4525
  %30 = load i32, i32* %index53, align 8, !dbg !4528
  call void (i8*, ...) @error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 %29, i32 %30) #6, !dbg !4529
  call void @llvm.dbg.value(metadata i32 1, metadata !4422, metadata !DIExpression()), !dbg !4447
  br label %if.end85, !dbg !4530

if.end85:                                         ; preds = %for.end77, %if.then79
  %err.7 = phi i32 [ %err.6, %for.end77 ], [ 1, %if.then79 ], !dbg !4453
  call void @llvm.dbg.value(metadata i32 %err.7, metadata !4422, metadata !DIExpression()), !dbg !4447
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.1.lcssa, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4531
  %rt_rtx89 = bitcast %union.rtunion_def* %31 to %struct.rtx_def**, !dbg !4531
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89, align 8, !dbg !4531
  call void @llvm.dbg.value(metadata %struct.rtx_def* %32, metadata !4424, metadata !DIExpression()), !dbg !4447
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !4532
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !4532
  %call90 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !4532
  %33 = extractvalue { i32, %struct.VEC_edge_gc** } %call90, 0, !dbg !4532
  store i32 %33, i32* %7, align 8, !dbg !4532
  %34 = extractvalue { i32, %struct.VEC_edge_gc** } %call90, 1, !dbg !4532
  store %struct.VEC_edge_gc** %34, %struct.VEC_edge_gc*** %8, align 8, !dbg !4532
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %6, i64 16, i1 false), !dbg !4532
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !4532
  br label %for.cond91, !dbg !4532

for.cond91:                                       ; preds = %for.inc98, %if.end85
  %35 = load i32, i32* %9, align 8, !dbg !4533
  %36 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %10, align 8, !dbg !4533
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4433, metadata !DIExpression(DW_OP_deref)), !dbg !4453
  %call92 = call fastcc zeroext i8 @ei_cond(i32 %35, %struct.VEC_edge_gc** %36, %struct.edge_def** nonnull %e) #7, !dbg !4533
  %tobool93 = icmp eq i8 %call92, 0, !dbg !4532
  br i1 %tobool93, label %for.cond91.for.end99_crit_edge, label %for.body94, !dbg !4532

for.cond91.for.end99_crit_edge:                   ; preds = %for.cond91
  %.pre10 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4534
  br label %for.end99, !dbg !4532

for.body94:                                       ; preds = %for.cond91
  %37 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4535
  call void @llvm.dbg.value(metadata %struct.edge_def* %37, metadata !4433, metadata !DIExpression()), !dbg !4453
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %37, i64 0, i32 7, !dbg !4537
  %38 = load i32, i32* %flags, align 8, !dbg !4537
  %and = and i32 %38, 1, !dbg !4538
  %tobool95 = icmp eq i32 %and, 0, !dbg !4538
  br i1 %tobool95, label %for.inc98, label %for.end99.loopexit, !dbg !4539

for.inc98:                                        ; preds = %for.body94
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4437, metadata !DIExpression(DW_OP_deref)), !dbg !4453
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4533
  br label %for.cond91, !dbg !4533, !llvm.loop !4540

for.end99.loopexit:                               ; preds = %for.body94
  %.lcssa = phi %struct.edge_def* [ %37, %for.body94 ], !dbg !4535
  br label %for.end99, !dbg !4534

for.end99:                                        ; preds = %for.end99.loopexit, %for.cond91.for.end99_crit_edge
  %39 = phi %struct.edge_def* [ %.pre10, %for.cond91.for.end99_crit_edge ], [ %.lcssa, %for.end99.loopexit ], !dbg !4534
  call void @llvm.dbg.value(metadata %struct.edge_def* %39, metadata !4433, metadata !DIExpression()), !dbg !4453
  %tobool100 = icmp eq %struct.edge_def* %39, null, !dbg !4534
  br i1 %tobool100, label %if.then101, label %if.else, !dbg !4542

if.then101:                                       ; preds = %for.end99
  %40 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4543
  %end_104 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %40, i64 0, i32 1, !dbg !4543
  %41 = load %struct.rtx_def*, %struct.rtx_def** %end_104, align 8, !dbg !4543
  br label %for.cond109, !dbg !4545

for.cond109:                                      ; preds = %for.inc131, %if.then101
  %.pn2 = phi %struct.rtx_def* [ %41, %if.then101 ], [ %insn.0, %for.inc131 ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4546
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !4546
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !4546
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4440, metadata !DIExpression()), !dbg !4547
  %tobool110 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !4548
  br i1 %tobool110, label %if.then122, label %lor.lhs.false, !dbg !4552

lor.lhs.false:                                    ; preds = %for.cond109
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4553
  %bf.load111 = load i32, i32* %42, align 8, !dbg !4553
  %bf.clear112 = and i32 %bf.load111, 65535, !dbg !4553
  %cmp113 = icmp eq i32 %bf.clear112, 13, !dbg !4553
  br i1 %cmp113, label %land.lhs.true115, label %if.end124, !dbg !4553

land.lhs.true115:                                 ; preds = %lor.lhs.false
  %u116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !4553
  %43 = getelementptr inbounds %union.u, %union.u* %u116, i64 1, i32 0, i32 0, i64 0, !dbg !4553
  %rt_int119 = bitcast %union.rtunion_def* %43 to i32*, !dbg !4553
  %44 = load i32, i32* %rt_int119, align 8, !dbg !4553
  %cmp120 = icmp eq i32 %44, 10, !dbg !4553
  br i1 %cmp120, label %if.then122, label %if.end124, !dbg !4554

if.then122:                                       ; preds = %for.cond109, %land.lhs.true115
  %45 = load i32, i32* %index53, align 8, !dbg !4555
  call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i64 0, i64 0), i32 %45) #6, !dbg !4557
  call void @llvm.dbg.value(metadata i32 1, metadata !4422, metadata !DIExpression()), !dbg !4447
  br label %if.end214, !dbg !4558

if.end124:                                        ; preds = %land.lhs.true115, %lor.lhs.false
  %cmp127 = icmp eq i32 %bf.clear112, 11, !dbg !4559
  br i1 %cmp127, label %if.end214.loopexit, label %for.inc131, !dbg !4561

for.inc131:                                       ; preds = %if.end124
  br label %for.cond109, !dbg !4562, !llvm.loop !4563

if.else:                                          ; preds = %for.end99
  call void @llvm.dbg.value(metadata %struct.edge_def* %39, metadata !4433, metadata !DIExpression()), !dbg !4453
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %39, i64 0, i32 0, !dbg !4566
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4566
  %47 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4567
  %cfg138 = getelementptr inbounds %struct.function, %struct.function* %47, i64 0, i32 1, !dbg !4567
  %48 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg138, align 8, !dbg !4567
  %x_entry_block_ptr139 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %48, i64 0, i32 0, !dbg !4567
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr139, align 8, !dbg !4567
  %cmp140 = icmp eq %struct.basic_block_def* %46, %49, !dbg !4568
  br i1 %cmp140, label %if.end214, label %land.lhs.true142, !dbg !4569

land.lhs.true142:                                 ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.edge_def* %39, metadata !4433, metadata !DIExpression()), !dbg !4453
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %39, i64 0, i32 1, !dbg !4570
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4570
  %x_exit_block_ptr145 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %48, i64 0, i32 1, !dbg !4571
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr145, align 8, !dbg !4571
  %cmp146 = icmp eq %struct.basic_block_def* %50, %51, !dbg !4572
  br i1 %cmp146, label %if.end214, label %if.then148, !dbg !4573

if.then148:                                       ; preds = %land.lhs.true142
  call void @llvm.dbg.value(metadata %struct.edge_def* %39, metadata !4433, metadata !DIExpression()), !dbg !4453
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %46, i64 0, i32 6, !dbg !4574
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !4574
  call void @llvm.dbg.value(metadata %struct.edge_def* %39, metadata !4433, metadata !DIExpression()), !dbg !4453
  %cmp152 = icmp eq %struct.basic_block_def* %52, %50, !dbg !4576
  call void @llvm.dbg.value(metadata %struct.edge_def* %39, metadata !4433, metadata !DIExpression()), !dbg !4453
  br i1 %cmp152, label %if.else159, label %if.then154, !dbg !4577

if.then154:                                       ; preds = %if.then148
  %index156 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %46, i64 0, i32 9, !dbg !4578
  %53 = load i32, i32* %index156, align 8, !dbg !4578
  call void @llvm.dbg.value(metadata %struct.edge_def* %39, metadata !4433, metadata !DIExpression()), !dbg !4453
  %index158 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %50, i64 0, i32 9, !dbg !4580
  %54 = load i32, i32* %index158, align 8, !dbg !4580
  call void (i8*, ...) @error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.27, i64 0, i64 0), i32 %53, i32 %54) #6, !dbg !4581
  call void @llvm.dbg.value(metadata i32 1, metadata !4422, metadata !DIExpression()), !dbg !4447
  br label %if.end214, !dbg !4582

if.else159:                                       ; preds = %if.then148
  %il161 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %46, i64 0, i32 7, !dbg !4583
  %rtl162 = bitcast %union.basic_block_il_dependent* %il161 to %struct.rtl_bb_info**, !dbg !4583
  %55 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl162, align 8, !dbg !4583
  %end_163 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %55, i64 0, i32 1, !dbg !4583
  %56 = load %struct.rtx_def*, %struct.rtx_def** %end_163, align 8, !dbg !4583
  br label %for.cond168, !dbg !4585

for.cond168:                                      ; preds = %for.inc206, %if.else159
  %.pre1113 = phi %struct.edge_def* [ %39, %if.else159 ], [ %.pre11, %for.inc206 ]
  %57 = phi %struct.basic_block_def* [ %50, %if.else159 ], [ %.pre12, %for.inc206 ], !dbg !4586
  %58 = phi %struct.edge_def* [ %39, %if.else159 ], [ %.pre11, %for.inc206 ], !dbg !4586
  %.pn1 = phi %struct.rtx_def* [ %56, %if.else159 ], [ %insn149.0, %for.inc206 ]
  %err.9 = phi i32 [ %err.7, %if.else159 ], [ %err.10, %for.inc206 ], !dbg !4453
  %insn149.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4588
  %insn149.0.in = bitcast %union.rtunion_def* %insn149.0.in.in to %struct.rtx_def**, !dbg !4588
  %insn149.0 = load %struct.rtx_def*, %struct.rtx_def** %insn149.0.in, align 8, !dbg !4588
  call void @llvm.dbg.value(metadata i32 %err.9, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn149.0, metadata !4443, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata %struct.edge_def* %58, metadata !4433, metadata !DIExpression()), !dbg !4453
  %il170 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %57, i64 0, i32 7, !dbg !4586
  %rtl171 = bitcast %union.basic_block_il_dependent* %il170 to %struct.rtl_bb_info**, !dbg !4586
  %59 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl171, align 8, !dbg !4586
  %head_172 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %59, i64 0, i32 0, !dbg !4586
  %60 = load %struct.rtx_def*, %struct.rtx_def** %head_172, align 8, !dbg !4586
  %cmp173 = icmp eq %struct.rtx_def* %insn149.0, %60, !dbg !4590
  br i1 %cmp173, label %if.end214.loopexit3, label %for.body175, !dbg !4591

for.body175:                                      ; preds = %for.cond168
  %61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn149.0, i64 0, i32 0, !dbg !4592
  %bf.load176 = load i32, i32* %61, align 8, !dbg !4592
  %bf.clear177 = and i32 %bf.load176, 65535, !dbg !4592
  %cmp178 = icmp eq i32 %bf.clear177, 11, !dbg !4592
  br i1 %cmp178, label %if.then200, label %lor.lhs.false180, !dbg !4594

lor.lhs.false180:                                 ; preds = %for.body175
  %cmp183 = icmp eq i32 %bf.clear177, 8, !dbg !4595
  br i1 %cmp183, label %if.then200, label %lor.lhs.false185, !dbg !4595

lor.lhs.false185:                                 ; preds = %lor.lhs.false180
  %cmp188 = icmp eq i32 %bf.clear177, 7, !dbg !4595
  br i1 %cmp188, label %if.then200, label %lor.lhs.false190, !dbg !4595

lor.lhs.false190:                                 ; preds = %lor.lhs.false185
  %cmp193 = icmp eq i32 %bf.clear177, 9, !dbg !4595
  br i1 %cmp193, label %if.then200, label %lor.lhs.false195, !dbg !4595

lor.lhs.false195:                                 ; preds = %lor.lhs.false190
  %cmp198 = icmp eq i32 %bf.clear177, 10, !dbg !4595
  br i1 %cmp198, label %if.then200, label %for.inc206, !dbg !4596

if.then200:                                       ; preds = %lor.lhs.false195, %lor.lhs.false190, %lor.lhs.false185, %lor.lhs.false180, %for.body175
  call void @llvm.dbg.value(metadata %struct.edge_def* %58, metadata !4433, metadata !DIExpression()), !dbg !4453
  %src201 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %58, i64 0, i32 0, !dbg !4597
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %src201, align 8, !dbg !4597
  %index202 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %62, i64 0, i32 9, !dbg !4599
  %63 = load i32, i32* %index202, align 8, !dbg !4599
  call void @llvm.dbg.value(metadata %struct.edge_def* %58, metadata !4433, metadata !DIExpression()), !dbg !4453
  %index204 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %57, i64 0, i32 9, !dbg !4600
  %64 = load i32, i32* %index204, align 8, !dbg !4600
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i32 %63, i32 %64) #6, !dbg !4601
  call void @_fatal_insn(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), %struct.rtx_def* %insn149.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4602
  call void @llvm.dbg.value(metadata i32 1, metadata !4422, metadata !DIExpression()), !dbg !4447
  %.pre11.pre = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4586
  br label %for.inc206, !dbg !4603

for.inc206:                                       ; preds = %lor.lhs.false195, %if.then200
  %.pre11 = phi %struct.edge_def* [ %.pre11.pre, %if.then200 ], [ %.pre1113, %lor.lhs.false195 ], !dbg !4586
  %err.10 = phi i32 [ 1, %if.then200 ], [ %err.9, %lor.lhs.false195 ], !dbg !4453
  call void @llvm.dbg.value(metadata i32 %err.10, metadata !4422, metadata !DIExpression()), !dbg !4447
  %dest169.phi.trans.insert = getelementptr inbounds %struct.edge_def, %struct.edge_def* %.pre11, i64 0, i32 1, !dbg !4604
  %.pre12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest169.phi.trans.insert, align 8, !dbg !4586
  br label %for.cond168, !dbg !4605, !llvm.loop !4606

if.end214.loopexit:                               ; preds = %if.end124
  br label %if.end214, !dbg !4608

if.end214.loopexit3:                              ; preds = %for.cond168
  %err.9.lcssa = phi i32 [ %err.9, %for.cond168 ], !dbg !4453
  call void @llvm.dbg.value(metadata i32 %err.9.lcssa, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.9.lcssa, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.9.lcssa, metadata !4422, metadata !DIExpression()), !dbg !4447
  br label %if.end214, !dbg !4608

if.end214:                                        ; preds = %if.end214.loopexit3, %if.end214.loopexit, %land.lhs.true142, %if.else, %if.then154, %if.then122
  %err.13 = phi i32 [ 1, %if.then122 ], [ %err.7, %land.lhs.true142 ], [ %err.7, %if.else ], [ 1, %if.then154 ], [ %err.7, %if.end214.loopexit ], [ %err.9.lcssa, %if.end214.loopexit3 ], !dbg !4609
  call void @llvm.dbg.value(metadata i32 %err.13, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !4608
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4608
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4458
  %cfg8.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4610
  %.pre8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8.phi.trans.insert, align 8, !dbg !4458
  br label %for.cond, !dbg !4458, !llvm.loop !4611

for.cond218:                                      ; preds = %for.cond218.preheader, %for.inc239
  %x.2 = phi %struct.rtx_def* [ %69, %for.inc239 ], [ %last_head.0.lcssa, %for.cond218.preheader ], !dbg !4613
  %err.14 = phi i32 [ %err.15, %for.inc239 ], [ %err.0.lcssa, %for.cond218.preheader ], !dbg !4469
  call void @llvm.dbg.value(metadata i32 %err.14, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.2, metadata !4423, metadata !DIExpression()), !dbg !4447
  %cmp219 = icmp eq %struct.rtx_def* %x.2, null, !dbg !4614
  br i1 %cmp219, label %for.end244, label %for.body221, !dbg !4460

for.body221:                                      ; preds = %for.cond218
  %65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.2, i64 0, i32 0, !dbg !4616
  %bf.load222 = load i32, i32* %65, align 8, !dbg !4616
  %bf.clear223 = and i32 %bf.load222, 65535, !dbg !4616
  %cmp224 = icmp eq i32 %bf.clear223, 11, !dbg !4616
  br i1 %cmp224, label %for.inc239, label %land.lhs.true226, !dbg !4619

land.lhs.true226:                                 ; preds = %for.body221
  %arrayidx229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.2, i64 0, i32 1, i32 0, i32 1, !dbg !4620
  %rt_bb230 = bitcast %struct.object_block** %arrayidx229 to %struct.basic_block_def**, !dbg !4620
  %66 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb230, align 8, !dbg !4620
  %cmp231 = icmp eq %struct.basic_block_def* %66, null, !dbg !4621
  br i1 %cmp231, label %for.inc239, label %if.then233, !dbg !4622

if.then233:                                       ; preds = %land.lhs.true226
  %arrayidx236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4623
  %rt_int237 = bitcast %union.rtunion_def* %arrayidx236 to i32*, !dbg !4623
  %67 = load i32, i32* %rt_int237, align 8, !dbg !4623
  call void (i8*, ...) @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.22, i64 0, i64 0), i32 %67) #6, !dbg !4625
  call void @llvm.dbg.value(metadata i32 1, metadata !4422, metadata !DIExpression()), !dbg !4447
  br label %for.inc239, !dbg !4626

for.inc239:                                       ; preds = %land.lhs.true226, %for.body221, %if.then233
  %err.15 = phi i32 [ %err.14, %for.body221 ], [ 1, %if.then233 ], [ %err.14, %land.lhs.true226 ], !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.15, metadata !4422, metadata !DIExpression()), !dbg !4447
  %68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4627
  %rt_rtx243 = bitcast %union.rtunion_def* %68 to %struct.rtx_def**, !dbg !4627
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx243, align 8, !dbg !4627
  call void @llvm.dbg.value(metadata %struct.rtx_def* %69, metadata !4423, metadata !DIExpression()), !dbg !4447
  br label %for.cond218, !dbg !4628, !llvm.loop !4629

for.end244:                                       ; preds = %for.cond218
  %err.14.lcssa = phi i32 [ %err.14, %for.cond218 ], !dbg !4469
  call void @llvm.dbg.value(metadata i32 %err.14.lcssa, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.14.lcssa, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %err.14.lcssa, metadata !4422, metadata !DIExpression()), !dbg !4447
  call void @free(i8* %call4) #6, !dbg !4631
  call void @llvm.dbg.value(metadata i32 0, metadata !4426, metadata !DIExpression()), !dbg !4447
  %70 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4632
  %cfg246 = getelementptr inbounds %struct.function, %struct.function* %70, i64 0, i32 1, !dbg !4632
  %71 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg246, align 8, !dbg !4632
  %x_entry_block_ptr247 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %71, i64 0, i32 0, !dbg !4632
  %72 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr247, align 8, !dbg !4632
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %72, metadata !4429, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !4423, metadata !DIExpression()), !dbg !4447
  br label %for.cond248, !dbg !4633

for.cond248:                                      ; preds = %for.inc355, %for.end244
  %curr_bb.0 = phi %struct.basic_block_def* [ null, %for.end244 ], [ %curr_bb.2, %for.inc355 ], !dbg !4447
  %last_bb_seen.0 = phi %struct.basic_block_def* [ %72, %for.end244 ], [ %last_bb_seen.1, %for.inc355 ], !dbg !4447
  %num_bb_notes.0 = phi i32 [ 0, %for.end244 ], [ %num_bb_notes.1, %for.inc355 ], !dbg !4447
  %x.3 = phi %struct.rtx_def* [ %call2, %for.end244 ], [ %89, %for.inc355 ], !dbg !4635
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.3, metadata !4423, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %num_bb_notes.0, metadata !4426, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last_bb_seen.0, metadata !4429, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %curr_bb.0, metadata !4430, metadata !DIExpression()), !dbg !4447
  %tobool249 = icmp eq %struct.rtx_def* %x.3, null, !dbg !4636
  br i1 %tobool249, label %for.end360, label %for.body250, !dbg !4636

for.body250:                                      ; preds = %for.cond248
  %73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.3, i64 0, i32 0, !dbg !4637
  %bf.load251 = load i32, i32* %73, align 8, !dbg !4637
  %bf.clear252 = and i32 %bf.load251, 65535, !dbg !4637
  %cmp253 = icmp eq i32 %bf.clear252, 13, !dbg !4637
  br i1 %cmp253, label %land.lhs.true255, label %if.end272, !dbg !4637

land.lhs.true255:                                 ; preds = %for.body250
  %u256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.3, i64 0, i32 1, !dbg !4637
  %74 = getelementptr inbounds %union.u, %union.u* %u256, i64 1, i32 0, i32 0, i64 0, !dbg !4637
  %rt_int259 = bitcast %union.rtunion_def* %74 to i32*, !dbg !4637
  %75 = load i32, i32* %rt_int259, align 8, !dbg !4637
  %cmp260 = icmp eq i32 %75, 10, !dbg !4637
  br i1 %cmp260, label %if.then262, label %if.end272, !dbg !4641

if.then262:                                       ; preds = %land.lhs.true255
  %arrayidx265 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.3, i64 0, i32 1, i32 0, i32 2, !dbg !4642
  %rt_bb266 = bitcast i64* %arrayidx265 to %struct.basic_block_def**, !dbg !4642
  %76 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb266, align 8, !dbg !4642
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %76, metadata !4421, metadata !DIExpression()), !dbg !4447
  %inc = add nsw i32 %num_bb_notes.0, 1, !dbg !4644
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4426, metadata !DIExpression()), !dbg !4447
  %next_bb267 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %last_bb_seen.0, i64 0, i32 6, !dbg !4645
  %77 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb267, align 8, !dbg !4645
  %cmp268 = icmp eq %struct.basic_block_def* %76, %77, !dbg !4647
  br i1 %cmp268, label %if.end272, label %if.then270, !dbg !4648

if.then270:                                       ; preds = %if.then262
  call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !4649
  br label %if.end272, !dbg !4649

if.end272:                                        ; preds = %if.then262, %if.then270, %land.lhs.true255, %for.body250
  %curr_bb.1 = phi %struct.basic_block_def* [ %curr_bb.0, %land.lhs.true255 ], [ %curr_bb.0, %for.body250 ], [ %76, %if.then270 ], [ %76, %if.then262 ], !dbg !4447
  %last_bb_seen.1 = phi %struct.basic_block_def* [ %last_bb_seen.0, %land.lhs.true255 ], [ %last_bb_seen.0, %for.body250 ], [ %76, %if.then270 ], [ %76, %if.then262 ], !dbg !4447
  %num_bb_notes.1 = phi i32 [ %num_bb_notes.0, %land.lhs.true255 ], [ %num_bb_notes.0, %for.body250 ], [ %inc, %if.then270 ], [ %inc, %if.then262 ], !dbg !4447
  call void @llvm.dbg.value(metadata i32 %num_bb_notes.1, metadata !4426, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last_bb_seen.1, metadata !4429, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %curr_bb.1, metadata !4430, metadata !DIExpression()), !dbg !4447
  %tobool273 = icmp eq %struct.basic_block_def* %curr_bb.1, null, !dbg !4650
  br i1 %tobool273, label %if.then274, label %if.end324, !dbg !4652

if.then274:                                       ; preds = %if.end272
  %bf.load275 = load i32, i32* %73, align 8, !dbg !4653
  %trunc = trunc i32 %bf.load275 to i16, !dbg !4655
  switch i16 %trunc, label %sw.default [
    i16 11, label %if.end324
    i16 13, label %if.end324
    i16 12, label %sw.bb277
  ], !dbg !4655

sw.bb277:                                         ; preds = %if.then274
  %78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4656
  %rt_rtx281 = bitcast %union.rtunion_def* %78 to %struct.rtx_def**, !dbg !4656
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx281, align 8, !dbg !4656
  %tobool282 = icmp eq %struct.rtx_def* %79, null, !dbg !4656
  br i1 %tobool282, label %if.end324, label %land.lhs.true283, !dbg !4659

land.lhs.true283:                                 ; preds = %sw.bb277
  %80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i64 0, i32 0, !dbg !4659
  %bf.load288 = load i32, i32* %80, align 8, !dbg !4660
  %bf.clear289 = and i32 %bf.load288, 65535, !dbg !4660
  %cmp290 = icmp eq i32 %bf.clear289, 9, !dbg !4660
  br i1 %cmp290, label %land.lhs.true292, label %if.end324, !dbg !4660

land.lhs.true292:                                 ; preds = %land.lhs.true283
  %u297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i64 0, i32 1, !dbg !4660
  %81 = getelementptr inbounds %union.u, %union.u* %u297, i64 1, i32 0, i32 0, i64 0, !dbg !4660
  %82 = bitcast %union.rtunion_def* %81 to i32**, !dbg !4660
  %83 = load i32*, i32** %82, align 8, !dbg !4660
  %bf.load301 = load i32, i32* %83, align 8, !dbg !4660
  %bf.clear302 = and i32 %bf.load301, 65535, !dbg !4660
  %cmp303 = icmp eq i32 %bf.clear302, 20, !dbg !4660
  br i1 %cmp303, label %if.then318, label %lor.lhs.false305, !dbg !4660

lor.lhs.false305:                                 ; preds = %land.lhs.true292
  %cmp316 = icmp eq i32 %bf.clear302, 21, !dbg !4660
  br i1 %cmp316, label %if.then318, label %if.end324, !dbg !4661

if.then318:                                       ; preds = %lor.lhs.false305, %land.lhs.true292
  call void @llvm.dbg.value(metadata %struct.rtx_def* %79, metadata !4423, metadata !DIExpression()), !dbg !4447
  br label %if.end324, !dbg !4662

sw.default:                                       ; preds = %if.then274
  call void @_fatal_insn(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.31, i64 0, i64 0), %struct.rtx_def* nonnull %x.3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2198, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4663
  br label %if.end324, !dbg !4664

if.end324:                                        ; preds = %sw.bb277, %if.end272, %sw.default, %if.then274, %if.then274, %if.then318, %lor.lhs.false305, %land.lhs.true283
  %x.6 = phi %struct.rtx_def* [ %x.3, %if.end272 ], [ %x.3, %sw.default ], [ %x.3, %if.then274 ], [ %x.3, %if.then274 ], [ %79, %if.then318 ], [ %x.3, %lor.lhs.false305 ], [ %x.3, %land.lhs.true283 ], [ %x.3, %sw.bb277 ], !dbg !4665
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.6, metadata !4423, metadata !DIExpression()), !dbg !4447
  %84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.6, i64 0, i32 0, !dbg !4666
  %bf.load325 = load i32, i32* %84, align 8, !dbg !4666
  %bf.clear326 = and i32 %bf.load325, 65535, !dbg !4666
  %cmp327 = icmp eq i32 %bf.clear326, 9, !dbg !4666
  br i1 %cmp327, label %land.lhs.true329, label %if.end345, !dbg !4668

land.lhs.true329:                                 ; preds = %if.end324
  %call330 = call i32 @returnjump_p(%struct.rtx_def* %x.6) #6, !dbg !4669
  %tobool331 = icmp eq i32 %call330, 0, !dbg !4669
  br i1 %tobool331, label %if.end345, label %land.lhs.true332, !dbg !4670

land.lhs.true332:                                 ; preds = %land.lhs.true329
  %call333 = call i32 @condjump_p(%struct.rtx_def* %x.6) #6, !dbg !4671
  %tobool334 = icmp eq i32 %call333, 0, !dbg !4671
  br i1 %tobool334, label %land.lhs.true335, label %if.end345, !dbg !4672

land.lhs.true335:                                 ; preds = %land.lhs.true332
  %call336 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %x.6) #6, !dbg !4673
  %tobool337 = icmp eq %struct.rtx_def* %call336, null, !dbg !4673
  br i1 %tobool337, label %if.then344, label %land.lhs.true338, !dbg !4674

land.lhs.true338:                                 ; preds = %land.lhs.true335
  %call339 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %x.6) #6, !dbg !4675
  %85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call339, i64 0, i32 0, !dbg !4675
  %bf.load340 = load i32, i32* %85, align 8, !dbg !4675
  %bf.clear341 = and i32 %bf.load340, 65535, !dbg !4675
  %cmp342 = icmp eq i32 %bf.clear341, 11, !dbg !4675
  br i1 %cmp342, label %if.end345, label %if.then344, !dbg !4676

if.then344:                                       ; preds = %land.lhs.true335, %land.lhs.true338
  call void @_fatal_insn(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i64 0, i64 0), %struct.rtx_def* %x.6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2205, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4677
  br label %if.end345, !dbg !4677

if.end345:                                        ; preds = %land.lhs.true332, %land.lhs.true329, %if.then344, %land.lhs.true338, %if.end324
  br i1 %tobool273, label %for.inc355, label %land.lhs.true347, !dbg !4678

land.lhs.true347:                                 ; preds = %if.end345
  %il348 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %curr_bb.1, i64 0, i32 7, !dbg !4680
  %rtl349 = bitcast %union.basic_block_il_dependent* %il348 to %struct.rtl_bb_info**, !dbg !4680
  %86 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl349, align 8, !dbg !4680
  %end_350 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %86, i64 0, i32 1, !dbg !4680
  %87 = load %struct.rtx_def*, %struct.rtx_def** %end_350, align 8, !dbg !4680
  %cmp351 = icmp eq %struct.rtx_def* %x.6, %87, !dbg !4681
  %spec.select = select i1 %cmp351, %struct.basic_block_def* null, %struct.basic_block_def* %curr_bb.1, !dbg !4682
  br label %for.inc355, !dbg !4682

for.inc355:                                       ; preds = %if.end345, %land.lhs.true347
  %curr_bb.2 = phi %struct.basic_block_def* [ null, %if.end345 ], [ %spec.select, %land.lhs.true347 ], !dbg !4683
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %curr_bb.2, metadata !4430, metadata !DIExpression()), !dbg !4447
  %88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.6, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4684
  %rt_rtx359 = bitcast %union.rtunion_def* %88 to %struct.rtx_def**, !dbg !4684
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx359, align 8, !dbg !4684
  call void @llvm.dbg.value(metadata %struct.rtx_def* %89, metadata !4423, metadata !DIExpression()), !dbg !4447
  br label %for.cond248, !dbg !4685, !llvm.loop !4686

for.end360:                                       ; preds = %for.cond248
  %num_bb_notes.0.lcssa = phi i32 [ %num_bb_notes.0, %for.cond248 ], !dbg !4447
  call void @llvm.dbg.value(metadata i32 %num_bb_notes.0.lcssa, metadata !4426, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %num_bb_notes.0.lcssa, metadata !4426, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %num_bb_notes.0.lcssa, metadata !4426, metadata !DIExpression()), !dbg !4447
  %90 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4688
  %cfg362 = getelementptr inbounds %struct.function, %struct.function* %90, i64 0, i32 1, !dbg !4688
  %91 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg362, align 8, !dbg !4688
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %91, i64 0, i32 3, !dbg !4688
  %92 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !4688
  %sub = add nsw i32 %92, -2, !dbg !4690
  %cmp363 = icmp eq i32 %num_bb_notes.0.lcssa, %sub, !dbg !4691
  br i1 %cmp363, label %if.end369, label %if.then365, !dbg !4692

if.then365:                                       ; preds = %for.end360
  call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.33, i64 0, i64 0), i32 %num_bb_notes.0.lcssa, i32 %92) #6, !dbg !4693
  br label %if.end369, !dbg !4693

if.end369:                                        ; preds = %for.end360, %if.then365
  ret i32 %err.14.lcssa, !dbg !4694
}

; Function Attrs: nounwind uwtable
define internal void @rtl_dump_bb(%struct.basic_block_def* %bb, %struct._IO_FILE* %outf, i32 %indent, i32 %flags) #4 !dbg !4695 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4697, metadata !DIExpression()), !dbg !4704
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outf, metadata !4698, metadata !DIExpression()), !dbg !4704
  call void @llvm.dbg.value(metadata i32 %indent, metadata !4699, metadata !DIExpression()), !dbg !4704
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4700, metadata !DIExpression()), !dbg !4704
  %conv = sext i32 %indent to i64, !dbg !4705
  %add = add nsw i64 %conv, 1, !dbg !4705
  %0 = alloca i8, i64 %add, align 16, !dbg !4705
  call void @llvm.dbg.value(metadata i8* %0, metadata !4703, metadata !DIExpression()), !dbg !4704
  %call = call i8* @memset(i8* nonnull %0, i32 32, i64 %conv) #6, !dbg !4706
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %conv, !dbg !4707
  store i8 0, i8* %arrayidx, align 1, !dbg !4708
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !4709
  %tobool = icmp eq %struct.df* %1, null, !dbg !4709
  br i1 %tobool, label %if.end, label %if.then, !dbg !4711

if.then:                                          ; preds = %entry
  call void @df_dump_top(%struct.basic_block_def* %bb, %struct._IO_FILE* %outf) #6, !dbg !4712
  %call2 = call i32 @putc(i32 10, %struct._IO_FILE* %outf) #6, !dbg !4714
  br label %if.end, !dbg !4715

if.end:                                           ; preds = %entry, %if.then
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !4716
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4716
  %2 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4716
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %2, i64 0, i32 0, !dbg !4716
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %2, i64 0, i32 1, !dbg !4718
  %3 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4718
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4718
  %rt_rtx = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !4718
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4718
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !4702, metadata !DIExpression()), !dbg !4704
  br label %for.cond, !dbg !4719

for.cond:                                         ; preds = %for.body, %if.end
  %insn.0.in = phi %struct.rtx_def** [ %head_, %if.end ], [ %rt_rtx11, %for.body ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !4720
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4701, metadata !DIExpression()), !dbg !4704
  %cmp = icmp eq %struct.rtx_def* %insn.0, %5, !dbg !4721
  br i1 %cmp, label %for.end, label %for.body, !dbg !4723

for.body:                                         ; preds = %for.cond
  %call7 = call i32 @print_rtl_single(%struct._IO_FILE* %outf, %struct.rtx_def* %insn.0) #6, !dbg !4724
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4725
  %rt_rtx11 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !4725
  br label %for.cond, !dbg !4726, !llvm.loop !4727

for.end:                                          ; preds = %for.cond
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !4729
  %tobool12 = icmp eq %struct.df* %7, null, !dbg !4729
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !4731

if.then13:                                        ; preds = %for.end
  call void @df_dump_bottom(%struct.basic_block_def* %bb, %struct._IO_FILE* %outf) #6, !dbg !4732
  %call14 = call i32 @putc(i32 10, %struct._IO_FILE* %outf) #6, !dbg !4734
  br label %if.end15, !dbg !4735

if.end15:                                         ; preds = %for.end, %if.then13
  ret void, !dbg !4736
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @rtl_create_basic_block(i8* %headp, i8* %endp, %struct.basic_block_def* %after) #4 !dbg !4737 {
entry:
  call void @llvm.dbg.value(metadata i8* %headp, metadata !4739, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata i8* %endp, metadata !4740, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !4741, metadata !DIExpression()), !dbg !4748
  %0 = bitcast i8* %headp to %struct.rtx_def*, !dbg !4749
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !4742, metadata !DIExpression()), !dbg !4748
  %1 = bitcast i8* %endp to %struct.rtx_def*, !dbg !4750
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4743, metadata !DIExpression()), !dbg !4748
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4751
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !4751
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4751
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 5, !dbg !4751
  %4 = load i32, i32* %x_last_basic_block, align 8, !dbg !4751
  %conv = sext i32 %4 to i64, !dbg !4752
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 2, !dbg !4753
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4753
  %tobool = icmp eq %struct.VEC_basic_block_gc* %5, null, !dbg !4753
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4753

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i64 0, i32 0, !dbg !4753
  br label %cond.end, !dbg !4753

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4753
  %call = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond) #7, !dbg !4753
  %conv6 = zext i32 %call to i64, !dbg !4753
  %cmp = icmp ult i64 %conv, %conv6, !dbg !4754
  br i1 %cmp, label %if.end, label %if.then, !dbg !4755

if.then:                                          ; preds = %cond.end
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4756
  %cfg9 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !4756
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9, align 8, !dbg !4756
  %x_last_basic_block10 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 5, !dbg !4756
  %8 = load i32, i32* %x_last_basic_block10, align 8, !dbg !4756
  %add = add nsw i32 %8, 3, !dbg !4757
  %div = sdiv i32 %add, 4, !dbg !4758
  %add14 = add nsw i32 %8, %div, !dbg !4759
  %x_basic_block_info18 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 2, !dbg !4760
  tail call fastcc void @VEC_basic_block_gc_safe_grow_cleared(%struct.VEC_basic_block_gc** nonnull %x_basic_block_info18, i32 %add14) #7, !dbg !4760
  br label %if.end, !dbg !4761

if.end:                                           ; preds = %cond.end, %if.then
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4762
  %cfg21 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !4762
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg21, align 8, !dbg !4762
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 3, !dbg !4762
  %11 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !4763
  %inc = add nsw i32 %11, 1, !dbg !4763
  store i32 %inc, i32* %x_n_basic_blocks, align 8, !dbg !4763
  %call22 = tail call %struct.basic_block_def* @create_basic_block_structure(%struct.rtx_def* %0, %struct.rtx_def* %1, %struct.rtx_def* null, %struct.basic_block_def* %after) #7, !dbg !4764
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call22, metadata !4744, metadata !DIExpression()), !dbg !4748
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call22, i64 0, i32 2, !dbg !4765
  store i8* null, i8** %aux, align 8, !dbg !4766
  ret %struct.basic_block_def* %call22, !dbg !4767
}

; Function Attrs: nounwind uwtable
define internal %struct.edge_def* @rtl_redirect_edge_and_branch(%struct.edge_def* %e, %struct.basic_block_def* %target) #4 !dbg !4768 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !4770, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target, metadata !4771, metadata !DIExpression()), !dbg !4774
  %src1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !4775
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !4775
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !4773, metadata !DIExpression()), !dbg !4774
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !4776
  %1 = load i32, i32* %flags, align 8, !dbg !4776
  %and = and i32 %1, 12, !dbg !4778
  %tobool = icmp eq i32 %and, 0, !dbg !4778
  br i1 %tobool, label %if.end, label %cleanup, !dbg !4779

if.end:                                           ; preds = %entry
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !4780
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4780
  %cmp = icmp eq %struct.basic_block_def* %2, %target, !dbg !4782
  br i1 %cmp, label %cleanup, label %if.end3, !dbg !4783

if.end3:                                          ; preds = %if.end
  %call = tail call %struct.edge_def* @try_redirect_by_replacing_jump(%struct.edge_def* %e, %struct.basic_block_def* %target, i8 zeroext 0) #7, !dbg !4784
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !4772, metadata !DIExpression()), !dbg !4774
  %cmp4 = icmp eq %struct.edge_def* %call, null, !dbg !4786
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !4787

if.then5:                                         ; preds = %if.end3
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %0) #6, !dbg !4788
  br label %cleanup, !dbg !4790

if.end6:                                          ; preds = %if.end3
  %call7 = tail call fastcc %struct.edge_def* @redirect_branch_edge(%struct.edge_def* %e, %struct.basic_block_def* %target) #7, !dbg !4791
  call void @llvm.dbg.value(metadata %struct.edge_def* %call7, metadata !4772, metadata !DIExpression()), !dbg !4774
  %tobool8 = icmp eq %struct.edge_def* %call7, null, !dbg !4792
  br i1 %tobool8, label %cleanup, label %if.end10, !dbg !4794

if.end10:                                         ; preds = %if.end6
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %0) #6, !dbg !4795
  br label %cleanup, !dbg !4796

cleanup:                                          ; preds = %if.end6, %entry, %if.end, %if.end10, %if.then5
  %retval.0 = phi %struct.edge_def* [ %call, %if.then5 ], [ %call7, %if.end10 ], [ null, %entry ], [ %e, %if.end ], [ null, %if.end6 ], !dbg !4774
  ret %struct.edge_def* %retval.0, !dbg !4797
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @rtl_redirect_edge_and_branch_force(%struct.edge_def* %e, %struct.basic_block_def* %target) #4 !dbg !4798 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !4800, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target, metadata !4801, metadata !DIExpression()), !dbg !4802
  %call = tail call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* %e, %struct.basic_block_def* %target) #6, !dbg !4803
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !4803
  br i1 %tobool, label %lor.lhs.false, label %return, !dbg !4805

lor.lhs.false:                                    ; preds = %entry
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !4806
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4806
  %cmp = icmp eq %struct.basic_block_def* %0, %target, !dbg !4807
  br i1 %cmp, label %return, label %if.end, !dbg !4808

if.end:                                           ; preds = %lor.lhs.false
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !4809
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4809
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %1) #6, !dbg !4810
  %call1 = tail call fastcc %struct.basic_block_def* @force_nonfallthru_and_redirect(%struct.edge_def* %e, %struct.basic_block_def* %target) #7, !dbg !4811
  br label %return, !dbg !4812

return:                                           ; preds = %entry, %lor.lhs.false, %if.end
  %retval.0 = phi %struct.basic_block_def* [ %call1, %if.end ], [ null, %lor.lhs.false ], [ null, %entry ], !dbg !4802
  ret %struct.basic_block_def* %retval.0, !dbg !4813
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @rtl_can_remove_branch_p(%struct.edge_def* %e) #4 !dbg !4814 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !4816, metadata !DIExpression()), !dbg !4821
  %src1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !4822
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !4822
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !4817, metadata !DIExpression()), !dbg !4821
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 1, !dbg !4823
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4823
  %tobool = icmp eq %struct.VEC_edge_gc* %1, null, !dbg !4823
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4823

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !4823
  br label %cond.end, !dbg !4823

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4823
  br i1 %tobool, label %cond.end9, label %cond.true5, !dbg !4823

cond.true5:                                       ; preds = %cond.end
  %base7 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !4823
  br label %cond.end9, !dbg !4823

cond.end9:                                        ; preds = %cond.end, %cond.true5
  %cond10 = phi %struct.VEC_edge_base* [ %base7, %cond.true5 ], [ null, %cond.end ], !dbg !4823
  %call = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond10, i32 0) #7, !dbg !4823
  %cmp = icmp eq %struct.edge_def* %call, %e, !dbg !4823
  %conv = zext i1 %cmp to i32, !dbg !4823
  %call11 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %conv) #7, !dbg !4823
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call11, i64 0, i32 1, !dbg !4824
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4824
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !4818, metadata !DIExpression()), !dbg !4821
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !4825
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4825
  %3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4825
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 1, !dbg !4825
  %4 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4825
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4819, metadata !DIExpression()), !dbg !4821
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4826
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !4826
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4826
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 1, !dbg !4826
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4826
  %cmp12 = icmp eq %struct.basic_block_def* %2, %7, !dbg !4828
  br i1 %cmp12, label %cleanup, label %if.end, !dbg !4829

if.end:                                           ; preds = %cond.end9
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !4830
  %8 = load i32, i32* %flags, align 8, !dbg !4830
  %and = and i32 %8, 12, !dbg !4832
  %tobool14 = icmp eq i32 %and, 0, !dbg !4832
  br i1 %tobool14, label %if.end16, label %cleanup, !dbg !4833

if.end16:                                         ; preds = %if.end
  %call17 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %4, i32 29, %struct.rtx_def* null) #6, !dbg !4834
  %tobool18 = icmp eq %struct.rtx_def* %call17, null, !dbg !4834
  br i1 %tobool18, label %lor.lhs.false, label %cleanup, !dbg !4836

lor.lhs.false:                                    ; preds = %if.end16
  %flags19 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 13, !dbg !4837
  %9 = load i32, i32* %flags19, align 8, !dbg !4837
  %flags21 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 13, !dbg !4838
  %10 = load i32, i32* %flags21, align 8, !dbg !4838
  %11 = xor i32 %9, %10, !dbg !4839
  %12 = and i32 %11, 96, !dbg !4839
  %cmp23 = icmp eq i32 %12, 0, !dbg !4839
  br i1 %cmp23, label %if.end26, label %cleanup, !dbg !4840

if.end26:                                         ; preds = %lor.lhs.false
  %call27 = tail call i32 @onlyjump_p(%struct.rtx_def* %4) #6, !dbg !4841
  %tobool28 = icmp eq i32 %call27, 0, !dbg !4841
  br i1 %tobool28, label %cleanup, label %lor.lhs.false29, !dbg !4843

lor.lhs.false29:                                  ; preds = %if.end26
  %call30 = tail call zeroext i8 @tablejump_p(%struct.rtx_def* %4, %struct.rtx_def** null, %struct.rtx_def** null) #6, !dbg !4844
  %tobool32 = icmp eq i8 %call30, 0, !dbg !4844
  br i1 %tobool32, label %if.end34, label %cleanup, !dbg !4845

if.end34:                                         ; preds = %lor.lhs.false29
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !4846
  %bf.load = load i32, i32* %13, align 8, !dbg !4846
  %bf.clear = and i32 %bf.load, 65535, !dbg !4846
  %cmp35 = icmp eq i32 %bf.clear, 8, !dbg !4846
  br i1 %cmp35, label %cond.true52, label %lor.lhs.false37, !dbg !4846

lor.lhs.false37:                                  ; preds = %if.end34
  %cmp40 = icmp eq i32 %bf.clear, 7, !dbg !4846
  br i1 %cmp40, label %cond.true52, label %lor.lhs.false42, !dbg !4846

lor.lhs.false42:                                  ; preds = %lor.lhs.false37
  %cmp45 = icmp eq i32 %bf.clear, 9, !dbg !4846
  br i1 %cmp45, label %cond.true52, label %lor.lhs.false47, !dbg !4846

lor.lhs.false47:                                  ; preds = %lor.lhs.false42
  %cmp50 = icmp eq i32 %bf.clear, 10, !dbg !4846
  br i1 %cmp50, label %cond.true52, label %cond.end71, !dbg !4846

cond.true52:                                      ; preds = %lor.lhs.false47, %lor.lhs.false42, %lor.lhs.false37, %if.end34
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, !dbg !4846
  %14 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4846
  %15 = bitcast %union.rtunion_def* %14 to i32**, !dbg !4846
  %16 = load i32*, i32** %15, align 8, !dbg !4846
  %bf.load53 = load i32, i32* %16, align 8, !dbg !4846
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !4846
  %cmp55 = icmp eq i32 %bf.clear54, 23, !dbg !4846
  %17 = bitcast i32* %16 to %struct.rtx_def*, !dbg !4846
  br i1 %cmp55, label %cond.end71, label %cond.false62, !dbg !4846

cond.false62:                                     ; preds = %cond.true52
  %call67 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %4, %struct.rtx_def* %17) #6, !dbg !4846
  br label %cond.end71, !dbg !4846

cond.end71:                                       ; preds = %lor.lhs.false47, %cond.false62, %cond.true52
  %cond72 = phi %struct.rtx_def* [ %call67, %cond.false62 ], [ %17, %cond.true52 ], [ null, %lor.lhs.false47 ], !dbg !4846
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond72, metadata !4820, metadata !DIExpression()), !dbg !4821
  %tobool73 = icmp eq %struct.rtx_def* %cond72, null, !dbg !4847
  br i1 %tobool73, label %cleanup, label %lor.lhs.false74, !dbg !4849

lor.lhs.false74:                                  ; preds = %cond.end71
  %call75 = tail call i32 @side_effects_p(%struct.rtx_def* nonnull %cond72) #6, !dbg !4850
  %tobool76 = icmp eq i32 %call75, 0, !dbg !4850
  %spec.select = zext i1 %tobool76 to i8, !dbg !4851
  ret i8 %spec.select, !dbg !4851

cleanup:                                          ; preds = %cond.end71, %lor.lhs.false29, %if.end26, %lor.lhs.false, %if.end16, %if.end, %cond.end9
  ret i8 0, !dbg !4852
}

; Function Attrs: nounwind uwtable
define internal void @rtl_delete_block(%struct.basic_block_def* %b) #4 !dbg !4853 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !4855, metadata !DIExpression()), !dbg !4858
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 7, !dbg !4859
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4859
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4859
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !4859
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !4859
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4856, metadata !DIExpression()), !dbg !4858
  %call = tail call %struct.rtx_def* @get_last_bb_insn(%struct.basic_block_def* %b) #7, !dbg !4860
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4857, metadata !DIExpression()), !dbg !4858
  %2 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4861
  %head_3 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %2, i64 0, i32 0, !dbg !4861
  store %struct.rtx_def* null, %struct.rtx_def** %head_3, align 8, !dbg !4862
  tail call void @delete_insn_chain(%struct.rtx_def* %1, %struct.rtx_def* %call, i8 zeroext 1) #7, !dbg !4863
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4864
  %tobool = icmp eq %struct._IO_FILE* %3, null, !dbg !4864
  br i1 %tobool, label %if.end, label %if.then, !dbg !4866

if.then:                                          ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 9, !dbg !4867
  %4 = load i32, i32* %index, align 8, !dbg !4867
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0), i32 %4) #6, !dbg !4868
  br label %if.end, !dbg !4868

if.end:                                           ; preds = %entry, %if.then
  %index5 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 9, !dbg !4869
  %5 = load i32, i32* %index5, align 8, !dbg !4869
  tail call void @df_bb_delete(i32 %5) #6, !dbg !4870
  ret void, !dbg !4871
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @rtl_split_block(%struct.basic_block_def* %bb, i8* %insnp) #4 !dbg !4872 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4874, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.value(metadata i8* %insnp, metadata !4875, metadata !DIExpression()), !dbg !4887
  %0 = bitcast i8* %insnp to %struct.rtx_def*, !dbg !4888
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !4877, metadata !DIExpression()), !dbg !4887
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !4889
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4889
  %2 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4890
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4890
  %tobool = icmp eq i8* %insnp, null, !dbg !4891
  br i1 %tobool, label %if.then, label %if.end32, !dbg !4892

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.rtx_def* @first_insn_after_basic_block_note(%struct.basic_block_def* %bb) #7, !dbg !4893
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4877, metadata !DIExpression()), !dbg !4887
  %tobool1 = icmp eq %struct.rtx_def* %call, null, !dbg !4894
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !4895

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4880, metadata !DIExpression()), !dbg !4896
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4897
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !4897
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4897
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4877, metadata !DIExpression()), !dbg !4887
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !4898
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4898
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4898
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 1, !dbg !4898
  %6 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4898
  %cmp = icmp eq %struct.rtx_def* %4, %6, !dbg !4900
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !4901
  br i1 %cmp, label %if.end32, label %land.lhs.true, !dbg !4901

land.lhs.true:                                    ; preds = %if.then2
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !4902
  %bf.load = load i32, i32* %8, align 8, !dbg !4902
  %bf.clear = and i32 %bf.load, 65535, !dbg !4902
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4902
  br i1 %cmp3, label %land.lhs.true4, label %if.end32, !dbg !4903

land.lhs.true4:                                   ; preds = %land.lhs.true
  %bf.load8 = load i32, i32* %7, align 8, !dbg !4904
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !4904
  %cmp10 = icmp eq i32 %bf.clear9, 7, !dbg !4904
  br i1 %cmp10, label %while.cond.preheader, label %if.end32, !dbg !4905

while.cond.preheader:                             ; preds = %land.lhs.true4
  br label %while.cond, !dbg !4906

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %next.0 = phi %struct.rtx_def* [ %11, %while.body ], [ %call, %while.cond.preheader ], !dbg !4896
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !4880, metadata !DIExpression()), !dbg !4896
  %cmp15 = icmp eq %struct.rtx_def* %next.0, %6, !dbg !4908
  br i1 %cmp15, label %while.end, label %land.rhs, !dbg !4909

land.rhs:                                         ; preds = %while.cond
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 0, !dbg !4910
  %bf.load16 = load i32, i32* %9, align 8, !dbg !4910
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !4910
  %cmp18 = icmp eq i32 %bf.clear17, 7, !dbg !4910
  br i1 %cmp18, label %while.body, label %while.end, !dbg !4906

while.body:                                       ; preds = %land.rhs
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4911
  %rt_rtx22 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !4911
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !4911
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !4880, metadata !DIExpression()), !dbg !4896
  br label %while.cond, !dbg !4906, !llvm.loop !4912

while.end:                                        ; preds = %while.cond, %land.rhs
  %cmp15.lcssa = phi i1 [ %cmp15, %while.cond ], [ %cmp15, %land.rhs ], !dbg !4908
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !4880, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !4880, metadata !DIExpression()), !dbg !4896
  br i1 %cmp15.lcssa, label %if.then27, label %if.end32, !dbg !4913

if.then27:                                        ; preds = %while.end
  %call28 = tail call %struct.rtx_def* @emit_note_after(i32 0, %struct.rtx_def* %6) #6, !dbg !4914
  br label %if.end32, !dbg !4914

if.else:                                          ; preds = %if.then
  %call30 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !4916
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call30, metadata !4877, metadata !DIExpression()), !dbg !4887
  br label %if.end32

if.end32:                                         ; preds = %if.then2, %entry, %if.else, %while.end, %if.then27, %land.lhs.true4, %land.lhs.true
  %insn.1 = phi %struct.rtx_def* [ %0, %entry ], [ %call30, %if.else ], [ %4, %while.end ], [ %4, %if.then27 ], [ %4, %land.lhs.true4 ], [ %4, %land.lhs.true ], [ %4, %if.then2 ], !dbg !4887
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !4877, metadata !DIExpression()), !dbg !4887
  %il33 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !4917
  %rtl34 = bitcast %union.basic_block_il_dependent* %il33 to %struct.rtl_bb_info**, !dbg !4917
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl34, align 8, !dbg !4917
  %end_35 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 1, !dbg !4917
  %13 = load %struct.rtx_def*, %struct.rtx_def** %end_35, align 8, !dbg !4917
  %cmp36 = icmp eq %struct.rtx_def* %insn.1, %13, !dbg !4919
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !4920

if.then37:                                        ; preds = %if.end32
  %call38 = tail call %struct.rtx_def* @emit_note_after(i32 0, %struct.rtx_def* %insn.1) #6, !dbg !4921
  %.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl34, align 8, !dbg !4922
  br label %if.end39, !dbg !4921

if.end39:                                         ; preds = %if.then37, %if.end32
  %14 = phi %struct.rtl_bb_info* [ %.pre, %if.then37 ], [ %12, %if.end32 ], !dbg !4922
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, !dbg !4923
  %16 = load i8*, i8** %15, align 8, !dbg !4923
  %end_46 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 1, !dbg !4922
  %17 = bitcast %struct.rtx_def** %end_46 to i8**, !dbg !4922
  %18 = load i8*, i8** %17, align 8, !dbg !4922
  %call47 = tail call %struct.basic_block_def* @create_basic_block(i8* %16, i8* %18, %struct.basic_block_def* %bb) #6, !dbg !4924
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call47, metadata !4876, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call47, metadata !4885, metadata !DIExpression()), !dbg !4925
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call47, i64 0, i32 13, !dbg !4926
  %19 = load i32, i32* %flags, align 8, !dbg !4926
  %and = and i32 %19, -97, !dbg !4926
  %flags48 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !4926
  %20 = load i32, i32* %flags48, align 8, !dbg !4926
  %and49 = and i32 %20, 96, !dbg !4926
  %or = or i32 %and, %and49, !dbg !4926
  store i32 %or, i32* %flags, align 8, !dbg !4926
  %21 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl34, align 8, !dbg !4927
  %end_53 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %21, i64 0, i32 1, !dbg !4927
  store %struct.rtx_def* %insn.1, %struct.rtx_def** %end_53, align 8, !dbg !4928
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4929
  %22 = bitcast %struct.VEC_edge_gc** %succs to i64*, !dbg !4929
  %23 = load i64, i64* %22, align 8, !dbg !4929
  %succs54 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call47, i64 0, i32 1, !dbg !4930
  %24 = bitcast %struct.VEC_edge_gc** %succs54 to i64*, !dbg !4931
  store i64 %23, i64* %24, align 8, !dbg !4931
  store %struct.VEC_edge_gc* null, %struct.VEC_edge_gc** %succs, align 8, !dbg !4932
  %25 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4933
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8, !dbg !4933
  %call57 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs54) #7, !dbg !4933
  %26 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4933
  %27 = extractvalue { i32, %struct.VEC_edge_gc** } %call57, 0, !dbg !4933
  store i32 %27, i32* %26, align 8, !dbg !4933
  %28 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4933
  %29 = extractvalue { i32, %struct.VEC_edge_gc** } %call57, 1, !dbg !4933
  store %struct.VEC_edge_gc** %29, %struct.VEC_edge_gc*** %28, align 8, !dbg !4933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %25, i64 16, i1 false), !dbg !4933
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8, !dbg !4933
  %30 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4935
  %31 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4935
  br label %for.cond, !dbg !4933

for.cond:                                         ; preds = %for.body, %if.end39
  %32 = load i32, i32* %30, align 8, !dbg !4937
  %33 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %31, align 8, !dbg !4937
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4878, metadata !DIExpression(DW_OP_deref)), !dbg !4887
  %call58 = call fastcc zeroext i8 @ei_cond(i32 %32, %struct.VEC_edge_gc** %33, %struct.edge_def** nonnull %e) #7, !dbg !4937
  %tobool59 = icmp eq i8 %call58, 0, !dbg !4933
  br i1 %tobool59, label %for.end, label %for.body, !dbg !4933

for.body:                                         ; preds = %for.cond
  %34 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4938
  call void @llvm.dbg.value(metadata %struct.edge_def* %34, metadata !4878, metadata !DIExpression()), !dbg !4887
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %34, i64 0, i32 0, !dbg !4939
  store %struct.basic_block_def* %call47, %struct.basic_block_def** %src, align 8, !dbg !4940
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4879, metadata !DIExpression(DW_OP_deref)), !dbg !4887
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4937
  br label %for.cond, !dbg !4937, !llvm.loop !4941

for.end:                                          ; preds = %for.cond
  call void @df_set_bb_dirty(%struct.basic_block_def* %bb) #6, !dbg !4943
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4944
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4944
  ret %struct.basic_block_def* %call47, !dbg !4945
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @rtl_move_block_after(%struct.basic_block_def* %bb, %struct.basic_block_def* %after) #4 !dbg !4946 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4948, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !4949, metadata !DIExpression()), !dbg !4950
  ret i8 0, !dbg !4951
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @rtl_can_merge_blocks(%struct.basic_block_def* %a, %struct.basic_block_def* %b) #4 !dbg !4952 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %a, metadata !4954, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !4955, metadata !DIExpression()), !dbg !4956
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 13, !dbg !4957
  %0 = load i32, i32* %flags, align 8, !dbg !4957
  %flags1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 13, !dbg !4959
  %1 = load i32, i32* %flags1, align 8, !dbg !4959
  %2 = xor i32 %0, %1, !dbg !4960
  %3 = and i32 %2, 96, !dbg !4960
  %cmp = icmp eq i32 %3, 0, !dbg !4960
  br i1 %cmp, label %if.end, label %return, !dbg !4961

if.end:                                           ; preds = %entry
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %a) #7, !dbg !4962
  %tobool = icmp eq i8 %call, 0, !dbg !4962
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !4963

land.lhs.true:                                    ; preds = %if.end
  %call3 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %a) #7, !dbg !4964
  %cmp4 = icmp eq %struct.basic_block_def* %call3, %b, !dbg !4965
  br i1 %cmp4, label %land.lhs.true6, label %land.end, !dbg !4966

land.lhs.true6:                                   ; preds = %land.lhs.true
  %call7 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %b) #7, !dbg !4967
  %tobool9 = icmp ne i8 %call7, 0, !dbg !4967
  %cmp11 = icmp ne %struct.basic_block_def* %a, %b, !dbg !4968
  %or.cond = and i1 %tobool9, %cmp11, !dbg !4969
  br i1 %or.cond, label %land.lhs.true13, label %land.end, !dbg !4969

land.lhs.true13:                                  ; preds = %land.lhs.true6
  %call14 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %a) #7, !dbg !4970
  %flags15 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call14, i64 0, i32 7, !dbg !4971
  %4 = load i32, i32* %flags15, align 8, !dbg !4971
  %and16 = and i32 %4, 14, !dbg !4972
  %tobool17 = icmp eq i32 %and16, 0, !dbg !4972
  br i1 %tobool17, label %land.lhs.true18, label %land.end, !dbg !4973

land.lhs.true18:                                  ; preds = %land.lhs.true13
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 6, !dbg !4974
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !4974
  %cmp19 = icmp eq %struct.basic_block_def* %5, %b, !dbg !4975
  br i1 %cmp19, label %land.lhs.true21, label %land.end, !dbg !4976

land.lhs.true21:                                  ; preds = %land.lhs.true18
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4977
  %cfg = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !4977
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4977
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 0, !dbg !4977
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4977
  %cmp22 = icmp eq %struct.basic_block_def* %8, %a, !dbg !4978
  br i1 %cmp22, label %land.end, label %land.lhs.true24, !dbg !4979

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 1, !dbg !4980
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4980
  %cmp27 = icmp eq %struct.basic_block_def* %9, %b, !dbg !4981
  br i1 %cmp27, label %land.end, label %land.rhs, !dbg !4982

land.rhs:                                         ; preds = %land.lhs.true24
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 7, !dbg !4983
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4983
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4983
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 1, !dbg !4983
  %11 = bitcast %struct.rtx_def** %end_ to i32**, !dbg !4983
  %12 = load i32*, i32** %11, align 8, !dbg !4983
  %bf.load = load i32, i32* %12, align 8, !dbg !4983
  %bf.clear = and i32 %bf.load, 65535, !dbg !4983
  %cmp29 = icmp eq i32 %bf.clear, 9, !dbg !4983
  %13 = bitcast i32* %12 to %struct.rtx_def*, !dbg !4984
  br i1 %cmp29, label %lor.rhs, label %land.end, !dbg !4984

lor.rhs:                                          ; preds = %land.rhs
  %14 = load i32, i32* @reload_completed, align 4, !dbg !4985
  %tobool31 = icmp eq i32 %14, 0, !dbg !4985
  br i1 %tobool31, label %cond.false, label %cond.true, !dbg !4985

cond.true:                                        ; preds = %lor.rhs
  %call35 = tail call i32 @simplejump_p(%struct.rtx_def* %13) #6, !dbg !4986
  br label %cond.end, !dbg !4985

cond.false:                                       ; preds = %lor.rhs
  %call39 = tail call i32 @onlyjump_p(%struct.rtx_def* %13) #6, !dbg !4987
  br label %cond.end, !dbg !4985

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call35, %cond.true ], [ %call39, %cond.false ], !dbg !4985
  %tobool40 = icmp ne i32 %cond, 0, !dbg !4984
  %phitmp = zext i1 %tobool40 to i8, !dbg !4984
  br label %land.end, !dbg !4984

land.end:                                         ; preds = %land.lhs.true24, %land.lhs.true21, %land.lhs.true13, %if.end, %land.rhs, %cond.end, %land.lhs.true18, %land.lhs.true6, %land.lhs.true
  %15 = phi i8 [ 0, %land.lhs.true24 ], [ 0, %land.lhs.true21 ], [ 0, %land.lhs.true18 ], [ 0, %land.lhs.true13 ], [ 0, %land.lhs.true6 ], [ 0, %land.lhs.true ], [ 0, %if.end ], [ 1, %land.rhs ], [ %phitmp, %cond.end ]
  br label %return, !dbg !4988

return:                                           ; preds = %entry, %land.end
  %retval.0 = phi i8 [ %15, %land.end ], [ 0, %entry ], !dbg !4956
  ret i8 %retval.0, !dbg !4989
}

; Function Attrs: nounwind uwtable
define internal void @rtl_merge_blocks(%struct.basic_block_def* %a, %struct.basic_block_def* %b) #4 !dbg !4990 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %a, metadata !4992, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !4993, metadata !DIExpression()), !dbg !5005
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 7, !dbg !5006
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5006
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5006
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !5006
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5006
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4994, metadata !DIExpression()), !dbg !5005
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !5007
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5007
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4995, metadata !DIExpression()), !dbg !5005
  %il3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 7, !dbg !5008
  %rtl4 = bitcast %union.basic_block_il_dependent* %il3 to %struct.rtl_bb_info**, !dbg !5008
  %3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl4, align 8, !dbg !5008
  %end_5 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 1, !dbg !5008
  %4 = load %struct.rtx_def*, %struct.rtx_def** %end_5, align 8, !dbg !5008
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4996, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4997, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4998, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4999, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !5000, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata i32 0, metadata !5001, metadata !DIExpression()), !dbg !5005
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5009
  %tobool = icmp eq %struct._IO_FILE* %5, null, !dbg !5009
  br i1 %tobool, label %if.end, label %if.then, !dbg !5011

if.then:                                          ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 9, !dbg !5012
  %6 = load i32, i32* %index, align 8, !dbg !5012
  %index6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 9, !dbg !5013
  %7 = load i32, i32* %index6, align 8, !dbg !5013
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.36, i64 0, i64 0), i32 %6, i32 %7) #6, !dbg !5014
  br label %if.end, !dbg !5014

if.end:                                           ; preds = %entry, %if.then
  br label %while.cond, !dbg !5015

while.cond:                                       ; preds = %while.body, %if.end
  %b_debug_start.0 = phi %struct.rtx_def* [ %2, %if.end ], [ %b_end.0, %while.body ], !dbg !5005
  %b_end.0 = phi %struct.rtx_def* [ %2, %if.end ], [ %10, %while.body ], !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b_end.0, metadata !4995, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b_debug_start.0, metadata !4999, metadata !DIExpression()), !dbg !5005
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %b_end.0, i64 0, i32 0, !dbg !5016
  %bf.load = load i32, i32* %8, align 8, !dbg !5016
  %bf.clear = and i32 %bf.load, 65535, !dbg !5016
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !5016
  br i1 %cmp, label %while.body, label %while.end, !dbg !5015

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b_end.0, metadata !4999, metadata !DIExpression()), !dbg !5005
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %b_end.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5017
  %rt_rtx = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !5017
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5017
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !4995, metadata !DIExpression()), !dbg !5005
  br label %while.cond, !dbg !5015, !llvm.loop !5018

while.end:                                        ; preds = %while.cond
  %b_debug_start.0.lcssa = phi %struct.rtx_def* [ %b_debug_start.0, %while.cond ], !dbg !5005
  %b_end.0.lcssa = phi %struct.rtx_def* [ %b_end.0, %while.cond ], !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b_debug_start.0.lcssa, metadata !4999, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b_end.0.lcssa, metadata !4995, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b_debug_start.0.lcssa, metadata !4999, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b_end.0.lcssa, metadata !4995, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b_debug_start.0.lcssa, metadata !4999, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b_end.0.lcssa, metadata !4995, metadata !DIExpression()), !dbg !5005
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5019
  %bf.load7 = load i32, i32* %11, align 8, !dbg !5019
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !5019
  %cmp9 = icmp eq i32 %bf.clear8, 12, !dbg !5019
  br i1 %cmp9, label %if.then10, label %if.end18, !dbg !5021

if.then10:                                        ; preds = %while.end
  %cmp11 = icmp eq %struct.rtx_def* %1, %b_end.0.lcssa, !dbg !5022
  %spec.select = zext i1 %cmp11 to i32, !dbg !5025
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5001, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4998, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4997, metadata !DIExpression()), !dbg !5005
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5026
  %rt_rtx17 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !5026
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx17, align 8, !dbg !5026
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !4994, metadata !DIExpression()), !dbg !5005
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 0, !dbg !5027
  %bf.load19.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !5029
  br label %if.end18, !dbg !5030

if.end18:                                         ; preds = %if.then10, %while.end
  %bf.load19 = phi i32 [ %bf.load19.pre, %if.then10 ], [ %bf.load7, %while.end ], !dbg !5029
  %del_last.0 = phi %struct.rtx_def* [ %1, %if.then10 ], [ null, %while.end ], !dbg !5005
  %b_head.0 = phi %struct.rtx_def* [ %13, %if.then10 ], [ %1, %while.end ], !dbg !5005
  %b_empty.1 = phi i32 [ %spec.select, %if.then10 ], [ 0, %while.end ], !dbg !5005
  call void @llvm.dbg.value(metadata i32 %b_empty.1, metadata !5001, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b_head.0, metadata !4994, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %del_last.0, metadata !4997, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %del_last.0, metadata !4998, metadata !DIExpression()), !dbg !5005
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !5029
  %cmp21 = icmp eq i32 %bf.clear20, 13, !dbg !5029
  br i1 %cmp21, label %land.lhs.true, label %if.end37, !dbg !5029

land.lhs.true:                                    ; preds = %if.end18
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %b_head.0, i64 0, i32 1, !dbg !5029
  %14 = getelementptr inbounds %union.u, %union.u* %u22, i64 1, i32 0, i32 0, i64 0, !dbg !5029
  %rt_int = bitcast %union.rtunion_def* %14 to i32*, !dbg !5029
  %15 = load i32, i32* %rt_int, align 8, !dbg !5029
  %cmp25 = icmp eq i32 %15, 10, !dbg !5029
  br i1 %cmp25, label %if.then26, label %if.end37, !dbg !5031

if.then26:                                        ; preds = %land.lhs.true
  %cmp27 = icmp eq %struct.rtx_def* %b_head.0, %b_end.0.lcssa, !dbg !5032
  %spec.select1 = select i1 %cmp27, i32 1, i32 %b_empty.1, !dbg !5035
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !5001, metadata !DIExpression()), !dbg !5005
  %tobool30 = icmp eq %struct.rtx_def* %del_last.0, null, !dbg !5036
  %del_first.1 = select i1 %tobool30, %struct.rtx_def* %b_head.0, %struct.rtx_def* %del_last.0, !dbg !5038
  call void @llvm.dbg.value(metadata %struct.rtx_def* %del_first.1, metadata !4997, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b_head.0, metadata !4998, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* undef, metadata !4994, metadata !DIExpression()), !dbg !5005
  br label %if.end37, !dbg !5039

if.end37:                                         ; preds = %if.then26, %land.lhs.true, %if.end18
  %del_last.1 = phi %struct.rtx_def* [ %b_head.0, %if.then26 ], [ %del_last.0, %land.lhs.true ], [ %del_last.0, %if.end18 ], !dbg !5005
  %del_first.2 = phi %struct.rtx_def* [ %del_first.1, %if.then26 ], [ %del_last.0, %land.lhs.true ], [ %del_last.0, %if.end18 ], !dbg !5040
  %b_empty.3 = phi i32 [ %spec.select1, %if.then26 ], [ %b_empty.1, %land.lhs.true ], [ %b_empty.1, %if.end18 ], !dbg !5005
  call void @llvm.dbg.value(metadata i32 %b_empty.3, metadata !5001, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %del_first.2, metadata !4997, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %del_last.1, metadata !4998, metadata !DIExpression()), !dbg !5005
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !5041
  %bf.load38 = load i32, i32* %16, align 8, !dbg !5041
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !5041
  %cmp40 = icmp eq i32 %bf.clear39, 9, !dbg !5041
  br i1 %cmp40, label %if.then41, label %if.else, !dbg !5042

if.then41:                                        ; preds = %if.end37
  br label %for.cond, !dbg !5043

for.cond:                                         ; preds = %for.inc, %if.then41
  %.pn = phi %struct.rtx_def* [ %4, %if.then41 ], [ %prev.0, %for.inc ]
  %prev.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5045
  %prev.0.in = bitcast %union.rtunion_def* %prev.0.in.in to %struct.rtx_def**, !dbg !5045
  %prev.0 = load %struct.rtx_def*, %struct.rtx_def** %prev.0.in, align 8, !dbg !5045
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0, metadata !5002, metadata !DIExpression()), !dbg !5046
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0, i64 0, i32 0, !dbg !5047
  %bf.load46 = load i32, i32* %17, align 8, !dbg !5047
  %bf.clear47 = and i32 %bf.load46, 65535, !dbg !5047
  %cmp48 = icmp eq i32 %bf.clear47, 13, !dbg !5047
  br i1 %cmp48, label %lor.lhs.false, label %for.end, !dbg !5050

lor.lhs.false:                                    ; preds = %for.cond
  br i1 true, label %land.lhs.true52, label %lor.lhs.false.lor.lhs.false58_crit_edge, !dbg !5051

lor.lhs.false.lor.lhs.false58_crit_edge:          ; preds = %lor.lhs.false
  br label %lor.lhs.false58, !dbg !5051

land.lhs.true52:                                  ; preds = %lor.lhs.false
  %u53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0, i64 0, i32 1, !dbg !5051
  %18 = getelementptr inbounds %union.u, %union.u* %u53, i64 1, i32 0, i32 0, i64 0, !dbg !5051
  %rt_int56 = bitcast %union.rtunion_def* %18 to i32*, !dbg !5051
  %19 = load i32, i32* %rt_int56, align 8, !dbg !5051
  %cmp57 = icmp eq i32 %19, 10, !dbg !5051
  br i1 %cmp57, label %for.end, label %land.lhs.true52.lor.lhs.false58_crit_edge, !dbg !5052

land.lhs.true52.lor.lhs.false58_crit_edge:        ; preds = %land.lhs.true52
  br label %lor.lhs.false58, !dbg !5052

lor.lhs.false58:                                  ; preds = %land.lhs.true52.lor.lhs.false58_crit_edge, %lor.lhs.false.lor.lhs.false58_crit_edge
  %20 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl4, align 8, !dbg !5053
  %head_61 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %20, i64 0, i32 0, !dbg !5053
  %21 = load %struct.rtx_def*, %struct.rtx_def** %head_61, align 8, !dbg !5053
  %cmp62 = icmp eq %struct.rtx_def* %prev.0, %21, !dbg !5054
  br i1 %cmp62, label %for.end, label %for.inc, !dbg !5055

for.inc:                                          ; preds = %lor.lhs.false58
  br label %for.cond, !dbg !5056, !llvm.loop !5057

for.end:                                          ; preds = %for.cond, %land.lhs.true52, %lor.lhs.false58
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4997, metadata !DIExpression()), !dbg !5005
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5060
  %rt_rtx72 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !5060
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx72, align 8, !dbg !5060
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !4996, metadata !DIExpression()), !dbg !5005
  br label %if.end86, !dbg !5061

if.else:                                          ; preds = %if.end37
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5062
  %25 = bitcast %union.rtunion_def* %24 to i32**, !dbg !5062
  %26 = load i32*, i32** %25, align 8, !dbg !5062
  %bf.load77 = load i32, i32* %26, align 8, !dbg !5062
  %bf.clear78 = and i32 %bf.load77, 65535, !dbg !5062
  %cmp79 = icmp eq i32 %bf.clear78, 11, !dbg !5062
  br i1 %cmp79, label %if.then80, label %if.end86, !dbg !5064

if.then80:                                        ; preds = %if.else
  %27 = bitcast i32* %26 to %struct.rtx_def*, !dbg !5064
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !4997, metadata !DIExpression()), !dbg !5005
  br label %if.end86, !dbg !5065

if.end86:                                         ; preds = %if.else, %if.then80, %for.end
  %del_first.4 = phi %struct.rtx_def* [ %4, %for.end ], [ %27, %if.then80 ], [ %del_first.2, %if.else ], !dbg !5066
  %a_end.0 = phi %struct.rtx_def* [ %23, %for.end ], [ %4, %if.then80 ], [ %4, %if.else ], !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %a_end.0, metadata !4996, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %del_first.4, metadata !4997, metadata !DIExpression()), !dbg !5005
  %28 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5067
  %head_89 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %28, i64 0, i32 0, !dbg !5067
  store %struct.rtx_def* null, %struct.rtx_def** %head_89, align 8, !dbg !5068
  tail call void @delete_insn_chain(%struct.rtx_def* %del_first.4, %struct.rtx_def* %del_last.1, i8 zeroext 1) #7, !dbg !5069
  %tobool90 = icmp eq i32 %b_empty.3, 0, !dbg !5070
  br i1 %tobool90, label %if.then91, label %if.else92, !dbg !5072

if.then91:                                        ; preds = %if.end86
  tail call fastcc void @update_bb_for_insn_chain(%struct.rtx_def* %a_end.0, %struct.rtx_def* %2, %struct.basic_block_def* %a) #7, !dbg !5073
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4996, metadata !DIExpression()), !dbg !5005
  br label %if.end111, !dbg !5075

if.else92:                                        ; preds = %if.end86
  %cmp93 = icmp eq %struct.rtx_def* %b_end.0.lcssa, %2, !dbg !5076
  br i1 %cmp93, label %if.end111, label %if.then94, !dbg !5078

if.then94:                                        ; preds = %if.else92
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %a_end.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5079
  %rt_rtx98 = bitcast %union.rtunion_def* %29 to %struct.rtx_def**, !dbg !5079
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx98, align 8, !dbg !5079
  %cmp99 = icmp eq %struct.rtx_def* %30, %b_debug_start.0.lcssa, !dbg !5082
  br i1 %cmp99, label %if.end109, label %if.then100, !dbg !5083

if.then100:                                       ; preds = %if.then94
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %b_debug_start.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5084
  %rt_rtx108 = bitcast %union.rtunion_def* %31 to %struct.rtx_def**, !dbg !5084
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx108, align 8, !dbg !5084
  tail call void @reorder_insns_nobb(%struct.rtx_def* %30, %struct.rtx_def* %32, %struct.rtx_def* %2) #6, !dbg !5085
  br label %if.end109, !dbg !5085

if.end109:                                        ; preds = %if.then94, %if.then100
  tail call fastcc void @update_bb_for_insn_chain(%struct.rtx_def* %b_debug_start.0.lcssa, %struct.rtx_def* %2, %struct.basic_block_def* %a) #7, !dbg !5086
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4996, metadata !DIExpression()), !dbg !5005
  br label %if.end111, !dbg !5087

if.end111:                                        ; preds = %if.else92, %if.end109, %if.then91
  %a_end.2 = phi %struct.rtx_def* [ %2, %if.then91 ], [ %2, %if.end109 ], [ %a_end.0, %if.else92 ], !dbg !5088
  call void @llvm.dbg.value(metadata %struct.rtx_def* %a_end.2, metadata !4996, metadata !DIExpression()), !dbg !5005
  %index112 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 9, !dbg !5089
  %33 = load i32, i32* %index112, align 8, !dbg !5089
  tail call void @df_bb_delete(i32 %33) #6, !dbg !5090
  %34 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl4, align 8, !dbg !5091
  %end_115 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %34, i64 0, i32 1, !dbg !5091
  store %struct.rtx_def* %a_end.2, %struct.rtx_def** %end_115, align 8, !dbg !5092
  ret void, !dbg !5093
}

declare dso_local void @rtl_predict_edge(%struct.edge_def*, i32, i32) #1

declare dso_local zeroext i8 @rtl_predicted_by_p(%struct.basic_block_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @rtl_split_edge(%struct.edge_def* %edge_in) #4 !dbg !5094 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_in, metadata !5096, metadata !DIExpression()), !dbg !5113
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 7, !dbg !5114
  %0 = load i32, i32* %flags, align 8, !dbg !5114
  %and = and i32 %0, 2, !dbg !5114
  %tobool = icmp eq i32 %and, 0, !dbg !5114
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5114

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1362, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5114
  %.pre = load i32, i32* %flags, align 8, !dbg !5115
  br label %cond.end, !dbg !5114

cond.end:                                         ; preds = %entry, %cond.true
  %1 = phi i32 [ %0, %entry ], [ %.pre, %cond.true ], !dbg !5115
  %and2 = and i32 %1, 1, !dbg !5116
  %cmp = icmp eq i32 %and2, 0, !dbg !5117
  br i1 %cmp, label %if.then, label %if.end13, !dbg !5118

if.then:                                          ; preds = %cond.end
  %2 = bitcast %struct.edge_def** %e to i8*, !dbg !5119
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5119
  %3 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5120
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !5120
  %4 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5121
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !5121
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 1, !dbg !5121
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5121
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 0, !dbg !5121
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !5121
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5121
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !5121
  store i32 %7, i32* %6, align 8, !dbg !5121
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5121
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !5121
  store %struct.VEC_edge_gc** %9, %struct.VEC_edge_gc*** %8, align 8, !dbg !5121
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !5121
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !5121
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5123
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5123
  br label %for.cond, !dbg !5121

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %10, align 8, !dbg !5125
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !5125
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5099, metadata !DIExpression(DW_OP_deref)), !dbg !5126
  %call3 = call fastcc zeroext i8 @ei_cond(i32 %12, %struct.VEC_edge_gc** %13, %struct.edge_def** nonnull %e) #7, !dbg !5125
  %tobool4 = icmp eq i8 %call3, 0, !dbg !5121
  br i1 %tobool4, label %for.cond.for.end_crit_edge, label %for.body, !dbg !5121

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  %.pre1 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5127
  br label %for.end, !dbg !5121

for.body:                                         ; preds = %for.cond
  %14 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5129
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !5099, metadata !DIExpression()), !dbg !5126
  %flags5 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %14, i64 0, i32 7, !dbg !5131
  %15 = load i32, i32* %flags5, align 8, !dbg !5131
  %and6 = and i32 %15, 1, !dbg !5132
  %tobool7 = icmp eq i32 %and6, 0, !dbg !5132
  br i1 %tobool7, label %for.inc, label %for.end.loopexit, !dbg !5133

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5102, metadata !DIExpression(DW_OP_deref)), !dbg !5126
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5125
  br label %for.cond, !dbg !5125, !llvm.loop !5134

for.end.loopexit:                                 ; preds = %for.body
  %.lcssa = phi %struct.edge_def* [ %14, %for.body ], !dbg !5129
  br label %for.end, !dbg !5127

for.end:                                          ; preds = %for.end.loopexit, %for.cond.for.end_crit_edge
  %16 = phi %struct.edge_def* [ %.pre1, %for.cond.for.end_crit_edge ], [ %.lcssa, %for.end.loopexit ], !dbg !5127
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !5099, metadata !DIExpression()), !dbg !5126
  %tobool9 = icmp eq %struct.edge_def* %16, null, !dbg !5127
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !5136

if.then10:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !5099, metadata !DIExpression()), !dbg !5126
  %call11 = call %struct.basic_block_def* @force_nonfallthru(%struct.edge_def* nonnull %16) #7, !dbg !5137
  br label %if.end12, !dbg !5137

if.end12:                                         ; preds = %for.end, %if.then10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !5138
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5138
  br label %if.end13, !dbg !5139

if.end13:                                         ; preds = %if.end12, %cond.end
  %dest14 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 1, !dbg !5140
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest14, align 8, !dbg !5140
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5142
  %cfg = getelementptr inbounds %struct.function, %struct.function* %18, i64 0, i32 1, !dbg !5142
  %19 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5142
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %19, i64 0, i32 1, !dbg !5142
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5142
  %cmp15 = icmp eq %struct.basic_block_def* %17, %20, !dbg !5143
  br i1 %cmp15, label %if.end18, label %if.then16, !dbg !5144

if.then16:                                        ; preds = %if.end13
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i64 0, i32 7, !dbg !5145
  %21 = bitcast %union.basic_block_il_dependent* %il to i8***, !dbg !5145
  %22 = load i8**, i8*** %21, align 8, !dbg !5145
  %23 = load i8*, i8** %22, align 8, !dbg !5145
  br label %if.end18, !dbg !5146

if.end18:                                         ; preds = %if.end13, %if.then16
  %24 = phi i8* [ %23, %if.then16 ], [ null, %if.end13 ], !dbg !5147
  %25 = load i32, i32* %flags, align 8, !dbg !5148
  %and20 = and i32 %25, 1, !dbg !5149
  %tobool21 = icmp eq i32 %and20, 0, !dbg !5149
  br i1 %tobool21, label %if.else38, label %land.lhs.true, !dbg !5150

land.lhs.true:                                    ; preds = %if.end18
  br i1 %cmp15, label %if.then27, label %if.else38, !dbg !5151

if.then27:                                        ; preds = %land.lhs.true
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 0, !dbg !5152
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5152
  %il28 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i64 0, i32 7, !dbg !5152
  %rtl29 = bitcast %union.basic_block_il_dependent* %il28 to %struct.rtl_bb_info**, !dbg !5152
  %27 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl29, align 8, !dbg !5152
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %27, i64 0, i32 1, !dbg !5152
  %28 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5152
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, !dbg !5152
  %30 = load i8*, i8** %29, align 8, !dbg !5152
  %call31 = call %struct.basic_block_def* @create_basic_block(i8* %30, i8* null, %struct.basic_block_def* %26) #6, !dbg !5153
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call31, metadata !5097, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call31, metadata !5103, metadata !DIExpression()), !dbg !5154
  %flags32 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call31, i64 0, i32 13, !dbg !5155
  %31 = load i32, i32* %flags32, align 8, !dbg !5155
  %and33 = and i32 %31, -97, !dbg !5155
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5155
  %flags35 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i64 0, i32 13, !dbg !5155
  %33 = load i32, i32* %flags35, align 8, !dbg !5155
  %and36 = and i32 %33, 96, !dbg !5155
  %or = or i32 %and33, %and36, !dbg !5155
  store i32 %or, i32* %flags32, align 8, !dbg !5155
  br label %if.end52, !dbg !5156

if.else38:                                        ; preds = %if.end18, %land.lhs.true
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i64 0, i32 5, !dbg !5157
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !5157
  %call40 = call %struct.basic_block_def* @create_basic_block(i8* %24, i8* null, %struct.basic_block_def* %34) #6, !dbg !5158
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call40, metadata !5097, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call40, metadata !5107, metadata !DIExpression()), !dbg !5159
  %flags43 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call40, i64 0, i32 13, !dbg !5160
  %35 = load i32, i32* %flags43, align 8, !dbg !5160
  %and44 = and i32 %35, -97, !dbg !5160
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %dest14, align 8, !dbg !5160
  %flags46 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i64 0, i32 13, !dbg !5160
  %37 = load i32, i32* %flags46, align 8, !dbg !5160
  %and47 = and i32 %37, 96, !dbg !5160
  %or48 = or i32 %and44, %and47, !dbg !5160
  store i32 %or48, i32* %flags43, align 8, !dbg !5160
  br label %if.end52

if.end52:                                         ; preds = %if.else38, %if.then27
  %bb.0 = phi %struct.basic_block_def* [ %call31, %if.then27 ], [ %call40, %if.else38 ], !dbg !5161
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5097, metadata !DIExpression()), !dbg !5113
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %dest14, align 8, !dbg !5162
  %call54 = call %struct.edge_def* @make_single_succ_edge(%struct.basic_block_def* %bb.0, %struct.basic_block_def* %38, i32 1) #6, !dbg !5163
  %39 = load i32, i32* %flags, align 8, !dbg !5164
  %and56 = and i32 %39, 1, !dbg !5165
  %cmp57 = icmp eq i32 %and56, 0, !dbg !5166
  br i1 %cmp57, label %if.then58, label %if.else65, !dbg !5167

if.then58:                                        ; preds = %if.end52
  %call59 = call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* %edge_in, %struct.basic_block_def* %bb.0) #6, !dbg !5168
  call void @llvm.dbg.value(metadata %struct.edge_def* %call59, metadata !5110, metadata !DIExpression()), !dbg !5169
  %tobool60 = icmp eq %struct.edge_def* %call59, null, !dbg !5170
  br i1 %tobool60, label %cond.true61, label %if.end66, !dbg !5170

cond.true61:                                      ; preds = %if.then58
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1407, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5170
  br label %if.end66, !dbg !5170

if.else65:                                        ; preds = %if.end52
  call void @redirect_edge_succ(%struct.edge_def* %edge_in, %struct.basic_block_def* %bb.0) #6, !dbg !5171
  br label %if.end66

if.end66:                                         ; preds = %if.then58, %cond.true61, %if.else65
  ret %struct.basic_block_def* %bb.0, !dbg !5172
}

; Function Attrs: nounwind uwtable
define internal void @rtl_make_forwarder_block(%struct.edge_def* %fallthru) #4 !dbg !5173 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru, metadata !5175, metadata !DIExpression()), !dbg !5176
  ret void, !dbg !5177
}

; Function Attrs: nounwind uwtable
define internal void @rtl_tidy_fallthru_edge(%struct.edge_def* %e) #4 !dbg !5178 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !5180, metadata !DIExpression()), !dbg !5184
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !5185
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5185
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !5182, metadata !DIExpression()), !dbg !5184
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 6, !dbg !5186
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !5186
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !5183, metadata !DIExpression()), !dbg !5184
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !5187
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5187
  %2 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5187
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %2, i64 0, i32 1, !dbg !5187
  %3 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5187
  %il1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 7, !dbg !5189
  %rtl2 = bitcast %union.basic_block_il_dependent* %il1 to %struct.rtl_bb_info**, !dbg !5189
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl2, align 8, !dbg !5189
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 0, !dbg !5189
  %5 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5189
  br label %for.cond, !dbg !5191

for.cond:                                         ; preds = %for.inc, %entry
  %.pn = phi %struct.rtx_def* [ %3, %entry ], [ %q.0, %for.inc ]
  %q.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5192
  %q.0.in = bitcast %union.rtunion_def* %q.0.in.in to %struct.rtx_def**, !dbg !5192
  %q.0 = load %struct.rtx_def*, %struct.rtx_def** %q.0.in, align 8, !dbg !5192
  call void @llvm.dbg.value(metadata %struct.rtx_def* %q.0, metadata !5181, metadata !DIExpression()), !dbg !5184
  %cmp = icmp eq %struct.rtx_def* %q.0, %5, !dbg !5193
  br i1 %cmp, label %for.end, label %for.body, !dbg !5194

for.body:                                         ; preds = %for.cond
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %q.0, i64 0, i32 0, !dbg !5195
  %bf.load = load i32, i32* %6, align 8, !dbg !5195
  %bf.clear = and i32 %bf.load, 65535, !dbg !5195
  %cmp3 = icmp eq i32 %bf.clear, 8, !dbg !5195
  br i1 %cmp3, label %cleanup.cont.loopexit, label %lor.lhs.false, !dbg !5195

lor.lhs.false:                                    ; preds = %for.body
  %cmp6 = icmp eq i32 %bf.clear, 7, !dbg !5195
  br i1 %cmp6, label %cleanup.cont.loopexit, label %lor.lhs.false7, !dbg !5195

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp10 = icmp eq i32 %bf.clear, 9, !dbg !5195
  br i1 %cmp10, label %cleanup.cont.loopexit, label %lor.lhs.false11, !dbg !5195

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %cmp14 = icmp eq i32 %bf.clear, 10, !dbg !5195
  br i1 %cmp14, label %cleanup.cont.loopexit, label %for.inc, !dbg !5197

for.inc:                                          ; preds = %lor.lhs.false11
  br label %for.cond, !dbg !5198, !llvm.loop !5199

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !5181, metadata !DIExpression()), !dbg !5184
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !5201
  %bf.load22 = load i32, i32* %7, align 8, !dbg !5201
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !5201
  %cmp24 = icmp eq i32 %bf.clear23, 9, !dbg !5201
  br i1 %cmp24, label %land.lhs.true, label %if.end36, !dbg !5203

land.lhs.true:                                    ; preds = %for.end
  %call = tail call i32 @onlyjump_p(%struct.rtx_def* %3) #6, !dbg !5204
  %tobool = icmp eq i32 %call, 0, !dbg !5204
  br i1 %tobool, label %if.end36, label %land.lhs.true25, !dbg !5205

land.lhs.true25:                                  ; preds = %land.lhs.true
  %call26 = tail call i32 @any_uncondjump_p(%struct.rtx_def* %3) #6, !dbg !5206
  %tobool27 = icmp eq i32 %call26, 0, !dbg !5206
  br i1 %tobool27, label %lor.lhs.false28, label %if.then31, !dbg !5207

lor.lhs.false28:                                  ; preds = %land.lhs.true25
  %call29 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %0) #7, !dbg !5208
  %tobool30 = icmp eq i8 %call29, 0, !dbg !5208
  br i1 %tobool30, label %if.end36, label %if.then31, !dbg !5209

if.then31:                                        ; preds = %lor.lhs.false28, %land.lhs.true25
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5210
  %rt_rtx35 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !5210
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx35, align 8, !dbg !5210
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !5181, metadata !DIExpression()), !dbg !5184
  br label %if.end36, !dbg !5212

if.end36:                                         ; preds = %lor.lhs.false28, %land.lhs.true, %if.then31, %for.end
  %q.1 = phi %struct.rtx_def* [ %9, %if.then31 ], [ %3, %lor.lhs.false28 ], [ %3, %land.lhs.true ], [ %3, %for.end ], !dbg !5184
  call void @llvm.dbg.value(metadata %struct.rtx_def* %q.1, metadata !5181, metadata !DIExpression()), !dbg !5184
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl2, align 8, !dbg !5213
  %head_39 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 0, !dbg !5213
  %11 = load %struct.rtx_def*, %struct.rtx_def** %head_39, align 8, !dbg !5213
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5213
  %rt_rtx43 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !5213
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !5213
  %cmp44 = icmp eq %struct.rtx_def* %q.1, %13, !dbg !5215
  br i1 %cmp44, label %if.end58, label %if.then46, !dbg !5216

if.then46:                                        ; preds = %if.end36
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %q.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5217
  %rt_rtx50 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !5217
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !5217
  tail call void @delete_insn_chain(%struct.rtx_def* %15, %struct.rtx_def* %13, i8 zeroext 0) #7, !dbg !5218
  br label %if.end58, !dbg !5218

if.end58:                                         ; preds = %if.end36, %if.then46
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !5219
  %16 = load i32, i32* %flags, align 8, !dbg !5220
  %or = or i32 %16, 1, !dbg !5220
  store i32 %or, i32* %flags, align 8, !dbg !5220
  br label %cleanup.cont, !dbg !5221

cleanup.cont.loopexit:                            ; preds = %for.body, %lor.lhs.false, %lor.lhs.false7, %lor.lhs.false11
  br label %cleanup.cont, !dbg !5221

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.end58
  ret void, !dbg !5221
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @rtl_block_ends_with_call_p(%struct.basic_block_def* %bb) #4 !dbg !5222 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5224, metadata !DIExpression()), !dbg !5226
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !5227
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5227
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5227
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !5227
  br label %while.cond, !dbg !5228

while.cond:                                       ; preds = %while.body, %entry
  %insn.0.in = phi %struct.rtx_def** [ %end_, %entry ], [ %rt_rtx, %while.body ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !5226
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5225, metadata !DIExpression()), !dbg !5226
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5229
  %bf.load = load i32, i32* %1, align 8, !dbg !5229
  %bf.clear = and i32 %bf.load, 65535, !dbg !5229
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !5229
  br i1 %cmp, label %while.end, label %land.lhs.true, !dbg !5230

land.lhs.true:                                    ; preds = %while.cond
  %2 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5231
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %2, i64 0, i32 0, !dbg !5231
  %3 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5231
  %cmp3 = icmp eq %struct.rtx_def* %insn.0, %3, !dbg !5232
  br i1 %cmp3, label %while.end, label %land.rhs, !dbg !5233

land.rhs:                                         ; preds = %land.lhs.true
  %call = tail call zeroext i8 @keep_with_call_p(%struct.rtx_def* %insn.0) #6, !dbg !5234
  %tobool = icmp eq i8 %call, 0, !dbg !5234
  br i1 %tobool, label %lor.lhs.false, label %while.body, !dbg !5235

lor.lhs.false:                                    ; preds = %land.rhs
  %bf.load4 = load i32, i32* %1, align 8, !dbg !5236
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !5236
  %cmp6 = icmp eq i32 %bf.clear5, 13, !dbg !5236
  %cmp10 = icmp eq i32 %bf.clear5, 7, !dbg !5237
  %or.cond = or i1 %cmp6, %cmp10, !dbg !5238
  br i1 %or.cond, label %while.body, label %while.end, !dbg !5238

while.body:                                       ; preds = %land.rhs, %lor.lhs.false
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5239
  %rt_rtx = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !5239
  br label %while.cond, !dbg !5228, !llvm.loop !5240

while.end:                                        ; preds = %lor.lhs.false, %land.lhs.true, %while.cond
  %bf.clear13.pre-phi = phi i32 [ %bf.clear, %land.lhs.true ], [ %bf.clear, %while.cond ], [ %bf.clear5, %lor.lhs.false ], !dbg !5241
  %cmp14 = icmp eq i32 %bf.clear13.pre-phi, 10, !dbg !5241
  %conv16 = zext i1 %cmp14 to i8, !dbg !5242
  ret i8 %conv16, !dbg !5243
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @rtl_block_ends_with_condjump_p(%struct.basic_block_def* %bb) #4 !dbg !5244 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5246, metadata !DIExpression()), !dbg !5247
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !5248
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5248
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5248
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !5248
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5248
  %call = tail call i32 @any_condjump_p(%struct.rtx_def* %1) #6, !dbg !5249
  %conv = trunc i32 %call to i8, !dbg !5249
  ret i8 %conv, !dbg !5250
}

; Function Attrs: nounwind uwtable
define internal i32 @rtl_flow_call_edges_add(%struct.simple_bitmap_def* %blocks) #4 !dbg !5251 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %blocks, metadata !5253, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 0, metadata !5255, metadata !DIExpression()), !dbg !5278
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5279
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !5279
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5279
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !5279
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !5279
  call void @llvm.dbg.value(metadata i32 %2, metadata !5256, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i8 0, metadata !5257, metadata !DIExpression()), !dbg !5278
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !5280
  %3 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !5280
  %cmp = icmp eq i32 %3, 2, !dbg !5282
  br i1 %cmp, label %cleanup132, label %if.end, !dbg !5283

if.end:                                           ; preds = %entry
  %tobool = icmp eq %struct.simple_bitmap_def* %blocks, null, !dbg !5284
  br i1 %tobool, label %if.end11, label %if.else, !dbg !5286

if.else:                                          ; preds = %if.end
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !5287
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5287
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 5, !dbg !5287
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !5287
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 9, !dbg !5287
  %6 = load i32, i32* %index, align 8, !dbg !5287
  %div = lshr i32 %6, 6, !dbg !5287
  %idxprom = zext i32 %div to i64, !dbg !5287
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %blocks, i64 0, i32 3, i64 %idxprom, !dbg !5287
  %7 = load i64, i64* %arrayidx, align 8, !dbg !5287
  %rem = and i32 %6, 63, !dbg !5287
  %sh_prom = zext i32 %rem to i64, !dbg !5287
  %8 = shl i64 1, %sh_prom
  %9 = and i64 %7, %8
  %phitmp = icmp ne i64 %9, 0
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.else
  %check_last_block.0 = phi i1 [ %phitmp, %if.else ], [ true, %if.end ]
  br i1 %check_last_block.0, label %if.then13, label %if.end37, !dbg !5288

if.then13:                                        ; preds = %if.end11
  %x_exit_block_ptr16 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !5289
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr16, align 8, !dbg !5289
  %prev_bb17 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i64 0, i32 5, !dbg !5290
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb17, align 8, !dbg !5290
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %11, metadata !5258, metadata !DIExpression()), !dbg !5291
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 7, !dbg !5292
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5292
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5292
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 1, !dbg !5292
  br label %while.cond, !dbg !5293

while.cond:                                       ; preds = %while.body, %if.then13
  %13 = phi %struct.rtl_bb_info* [ %12, %if.then13 ], [ %.pre, %while.body ], !dbg !5294
  %insn.0.in = phi %struct.rtx_def** [ %end_, %if.then13 ], [ %rt_rtx, %while.body ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !5291
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5261, metadata !DIExpression()), !dbg !5291
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %13, i64 0, i32 0, !dbg !5294
  %14 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5294
  %cmp20 = icmp eq %struct.rtx_def* %insn.0, %14, !dbg !5295
  br i1 %cmp20, label %while.end, label %land.rhs, !dbg !5296

land.rhs:                                         ; preds = %while.cond
  %call = tail call zeroext i8 @keep_with_call_p(%struct.rtx_def* %insn.0) #6, !dbg !5297
  %tobool23 = icmp eq i8 %call, 0, !dbg !5296
  br i1 %tobool23, label %while.end, label %while.body, !dbg !5293

while.body:                                       ; preds = %land.rhs
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5298
  %rt_rtx = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !5298
  %.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5294
  br label %while.cond, !dbg !5293, !llvm.loop !5299

while.end:                                        ; preds = %land.rhs, %while.cond
  %insn.0.lcssa = phi %struct.rtx_def* [ %insn.0, %land.rhs ], [ %insn.0, %while.cond ], !dbg !5291
  %call25 = tail call fastcc zeroext i8 @need_fake_edge_p(%struct.rtx_def* %insn.0.lcssa) #7, !dbg !5300
  %tobool26 = icmp eq i8 %call25, 0, !dbg !5300
  br i1 %tobool26, label %if.end37, label %if.then27, !dbg !5301

if.then27:                                        ; preds = %while.end
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5302
  %cfg29 = getelementptr inbounds %struct.function, %struct.function* %16, i64 0, i32 1, !dbg !5302
  %17 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg29, align 8, !dbg !5302
  %x_exit_block_ptr30 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %17, i64 0, i32 1, !dbg !5302
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr30, align 8, !dbg !5302
  %call31 = tail call %struct.edge_def* @find_edge(%struct.basic_block_def* %11, %struct.basic_block_def* %18) #6, !dbg !5303
  call void @llvm.dbg.value(metadata %struct.edge_def* %call31, metadata !5262, metadata !DIExpression()), !dbg !5304
  %tobool32 = icmp eq %struct.edge_def* %call31, null, !dbg !5305
  br i1 %tobool32, label %if.end37, label %if.then33, !dbg !5307

if.then33:                                        ; preds = %if.then27
  %19 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5308
  %call34 = tail call %struct.rtx_def* @gen_use(%struct.rtx_def* %19) #6, !dbg !5310
  tail call void @insert_insn_on_edge(%struct.rtx_def* %call34, %struct.edge_def* nonnull %call31) #7, !dbg !5311
  tail call void @commit_edge_insertions() #7, !dbg !5312
  br label %if.end37, !dbg !5313

if.end37:                                         ; preds = %if.then27, %while.end, %if.then33, %if.end11
  call void @llvm.dbg.value(metadata i32 2, metadata !5254, metadata !DIExpression()), !dbg !5278
  br i1 %tobool, label %if.end37.split.us, label %if.end37.if.end37.split_crit_edge, !dbg !5314

if.end37.if.end37.split_crit_edge:                ; preds = %if.end37
  br label %for.cond, !dbg !5314

if.end37.split.us:                                ; preds = %if.end37
  br label %for.cond.us, !dbg !5314

for.cond.us:                                      ; preds = %cleanup.us, %if.end37.split.us
  %blocks_split.0.us = phi i32 [ 0, %if.end37.split.us ], [ %blocks_split.5.us, %cleanup.us ], !dbg !5278
  %i.0.us = phi i32 [ 2, %if.end37.split.us ], [ %inc127.us, %cleanup.us ], !dbg !5315
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !5254, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.0.us, metadata !5255, metadata !DIExpression()), !dbg !5278
  %cmp38.us = icmp slt i32 %i.0.us, %2, !dbg !5316
  br i1 %cmp38.us, label %for.body.us, label %for.end128.us-lcssa.us, !dbg !5317

for.body.us:                                      ; preds = %for.cond.us
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5318
  %cfg42.us = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, i32 1, !dbg !5318
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg42.us, align 8, !dbg !5318
  %x_basic_block_info.us = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 2, !dbg !5318
  %22 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info.us, align 8, !dbg !5318
  %tobool43.us = icmp eq %struct.VEC_basic_block_gc* %22, null, !dbg !5318
  br i1 %tobool43.us, label %cond.end.us, label %cond.true.us, !dbg !5318

cond.true.us:                                     ; preds = %for.body.us
  %base.us = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %22, i64 0, i32 0, !dbg !5318
  br label %cond.end.us, !dbg !5318

cond.end.us:                                      ; preds = %cond.true.us, %for.body.us
  %cond.us = phi %struct.VEC_basic_block_base* [ %base.us, %cond.true.us ], [ null, %for.body.us ], !dbg !5318
  %call47.us = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond.us, i32 %i.0.us) #7, !dbg !5318
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call47.us, metadata !5265, metadata !DIExpression()), !dbg !5319
  %tobool49.us = icmp eq %struct.basic_block_def* %call47.us, null, !dbg !5320
  br i1 %tobool49.us, label %cleanup.us, label %if.end51.us, !dbg !5322

if.end51.us:                                      ; preds = %cond.end.us
  %il64.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call47.us, i64 0, i32 7, !dbg !5323
  %rtl65.us = bitcast %union.basic_block_il_dependent* %il64.us to %struct.rtl_bb_info**, !dbg !5323
  %23 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl65.us, align 8, !dbg !5323
  %end_66.us = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %23, i64 0, i32 1, !dbg !5323
  %24 = load %struct.rtx_def*, %struct.rtx_def** %end_66.us, align 8, !dbg !5323
  call void @llvm.dbg.value(metadata %struct.rtx_def* %24, metadata !5269, metadata !DIExpression()), !dbg !5319
  br label %for.cond67.us, !dbg !5324

for.cond67.us:                                    ; preds = %if.end116.us, %if.end51.us
  %.in.us = phi %struct.rtx_def* [ %24, %if.end51.us ], [ %27, %if.end116.us ]
  %insn48.0.us = phi %struct.rtx_def* [ %24, %if.end51.us ], [ %27, %if.end116.us ], !dbg !5325
  %blocks_split.1.us = phi i32 [ %blocks_split.0.us, %if.end51.us ], [ %blocks_split.4.us, %if.end116.us ], !dbg !5278
  %25 = bitcast %struct.rtx_def* %.in.us to i8*, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %blocks_split.1.us, metadata !5255, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn48.0.us, metadata !5269, metadata !DIExpression()), !dbg !5319
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn48.0.us, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5326
  %rt_rtx71.us = bitcast %union.rtunion_def* %26 to %struct.rtx_def**, !dbg !5326
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71.us, align 8, !dbg !5326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !5270, metadata !DIExpression()), !dbg !5319
  %call72.us = tail call fastcc zeroext i8 @need_fake_edge_p(%struct.rtx_def* %insn48.0.us) #7, !dbg !5327
  %tobool73.us = icmp eq i8 %call72.us, 0, !dbg !5327
  br i1 %tobool73.us, label %if.end116.us, label %if.then74.us, !dbg !5328

if.then74.us:                                     ; preds = %for.cond67.us
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn48.0.us, metadata !5277, metadata !DIExpression()), !dbg !5329
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn48.0.us, i64 0, i32 0, !dbg !5330
  %bf.load.us = load i32, i32* %28, align 8, !dbg !5330
  %bf.clear.us = and i32 %bf.load.us, 65535, !dbg !5330
  %cmp76.us = icmp eq i32 %bf.clear.us, 10, !dbg !5330
  br i1 %cmp76.us, label %while.cond79.preheader.us, label %if.end100.us, !dbg !5332

while.cond79.us:                                  ; preds = %while.cond79.preheader.us, %while.body94.us
  %29 = phi i8* [ %35, %while.body94.us ], [ %25, %while.cond79.preheader.us ], !dbg !5329
  %split_at_insn.0.us = phi %struct.rtx_def* [ %34, %while.body94.us ], [ %insn48.0.us, %while.cond79.preheader.us ], !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.us, metadata !5277, metadata !DIExpression()), !dbg !5329
  %30 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl65.us, align 8, !dbg !5333
  %end_82.us = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %30, i64 0, i32 1, !dbg !5333
  %31 = load %struct.rtx_def*, %struct.rtx_def** %end_82.us, align 8, !dbg !5333
  %cmp83.us = icmp eq %struct.rtx_def* %split_at_insn.0.us, %31, !dbg !5334
  br i1 %cmp83.us, label %if.end100.loopexit.us, label %land.rhs85.us, !dbg !5335

land.rhs85.us:                                    ; preds = %while.cond79.us
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %split_at_insn.0.us, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5336
  %rt_rtx89.us = bitcast %union.rtunion_def* %32 to %struct.rtx_def**, !dbg !5336
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89.us, align 8, !dbg !5336
  %call90.us = tail call zeroext i8 @keep_with_call_p(%struct.rtx_def* %33) #6, !dbg !5337
  %tobool92.us = icmp eq i8 %call90.us, 0, !dbg !5335
  br i1 %tobool92.us, label %if.end100.loopexit.us, label %while.body94.us, !dbg !5338

while.body94.us:                                  ; preds = %land.rhs85.us
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89.us, align 8, !dbg !5339
  %35 = bitcast %struct.rtx_def* %34 to i8*, !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %34, metadata !5277, metadata !DIExpression()), !dbg !5329
  br label %while.cond79.us, !dbg !5338, !llvm.loop !5340

if.end100.us:                                     ; preds = %if.end100.loopexit.us, %if.then74.us
  %36 = phi i8* [ %25, %if.then74.us ], [ %.lcssa, %if.end100.loopexit.us ], !dbg !5341
  %split_at_insn.1.us = phi %struct.rtx_def* [ %insn48.0.us, %if.then74.us ], [ %split_at_insn.0.us.lcssa, %if.end100.loopexit.us ], !dbg !5341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.1.us, metadata !5277, metadata !DIExpression()), !dbg !5329
  %37 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl65.us, align 8, !dbg !5342
  %end_103.us = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %37, i64 0, i32 1, !dbg !5342
  %38 = load %struct.rtx_def*, %struct.rtx_def** %end_103.us, align 8, !dbg !5342
  %cmp104.us = icmp eq %struct.rtx_def* %split_at_insn.1.us, %38, !dbg !5344
  br i1 %cmp104.us, label %if.end111.us, label %if.then106.us, !dbg !5345

if.then106.us:                                    ; preds = %if.end100.us
  %call107.us = tail call %struct.edge_def* @split_block(%struct.basic_block_def* nonnull %call47.us, i8* %36) #6, !dbg !5346
  call void @llvm.dbg.value(metadata %struct.edge_def* %call107.us, metadata !5271, metadata !DIExpression()), !dbg !5329
  %tobool108.us = icmp ne %struct.edge_def* %call107.us, null, !dbg !5348
  %inc.us = zext i1 %tobool108.us to i32, !dbg !5350
  %spec.select.us = add nsw i32 %blocks_split.1.us, %inc.us, !dbg !5350
  call void @llvm.dbg.value(metadata i32 %spec.select.us, metadata !5255, metadata !DIExpression()), !dbg !5278
  br label %if.end111.us, !dbg !5351

if.end111.us:                                     ; preds = %if.then106.us, %if.end100.us
  %blocks_split.3.us = phi i32 [ %spec.select.us, %if.then106.us ], [ %blocks_split.1.us, %if.end100.us ], !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.3.us, metadata !5255, metadata !DIExpression()), !dbg !5278
  %39 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5352
  %cfg113.us = getelementptr inbounds %struct.function, %struct.function* %39, i64 0, i32 1, !dbg !5352
  %40 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg113.us, align 8, !dbg !5352
  %x_exit_block_ptr114.us = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %40, i64 0, i32 1, !dbg !5352
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr114.us, align 8, !dbg !5352
  %call115.us = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* nonnull %call47.us, %struct.basic_block_def* %41, i32 16) #6, !dbg !5353
  br label %if.end116.us, !dbg !5354

if.end116.us:                                     ; preds = %if.end111.us, %for.cond67.us
  %blocks_split.4.us = phi i32 [ %blocks_split.3.us, %if.end111.us ], [ %blocks_split.1.us, %for.cond67.us ], !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.us, metadata !5255, metadata !DIExpression()), !dbg !5278
  %42 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl65.us, align 8, !dbg !5355
  %head_119.us = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %42, i64 0, i32 0, !dbg !5355
  %43 = load %struct.rtx_def*, %struct.rtx_def** %head_119.us, align 8, !dbg !5355
  %cmp120.us = icmp eq %struct.rtx_def* %insn48.0.us, %43, !dbg !5357
  br i1 %cmp120.us, label %cleanup.loopexit.us, label %for.cond67.us, !dbg !5358, !llvm.loop !5359

cleanup.us:                                       ; preds = %cleanup.loopexit.us, %cond.end.us
  %blocks_split.5.us = phi i32 [ %blocks_split.0.us, %cond.end.us ], [ %blocks_split.4.us.lcssa, %cleanup.loopexit.us ], !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.5.us, metadata !5255, metadata !DIExpression()), !dbg !5278
  %inc127.us = add nuw nsw i32 %i.0.us, 1, !dbg !5362
  call void @llvm.dbg.value(metadata i32 %inc127.us, metadata !5254, metadata !DIExpression()), !dbg !5278
  br label %for.cond.us, !dbg !5363, !llvm.loop !5364

while.cond79.preheader.us:                        ; preds = %if.then74.us
  br label %while.cond79.us, !dbg !5338

if.end100.loopexit.us:                            ; preds = %land.rhs85.us, %while.cond79.us
  %.lcssa = phi i8* [ %29, %land.rhs85.us ], [ %29, %while.cond79.us ], !dbg !5329
  %split_at_insn.0.us.lcssa = phi %struct.rtx_def* [ %split_at_insn.0.us, %land.rhs85.us ], [ %split_at_insn.0.us, %while.cond79.us ], !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.us.lcssa, metadata !5277, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.us.lcssa, metadata !5277, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.us.lcssa, metadata !5277, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.us.lcssa, metadata !5277, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.us.lcssa, metadata !5277, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.us.lcssa, metadata !5277, metadata !DIExpression()), !dbg !5329
  br label %if.end100.us, !dbg !5342

cleanup.loopexit.us:                              ; preds = %if.end116.us
  %blocks_split.4.us.lcssa = phi i32 [ %blocks_split.4.us, %if.end116.us ], !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.us.lcssa, metadata !5255, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.us.lcssa, metadata !5255, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.us.lcssa, metadata !5255, metadata !DIExpression()), !dbg !5278
  br label %cleanup.us, !dbg !5362

for.end128.us-lcssa.us:                           ; preds = %for.cond.us
  %blocks_split.0.us.lcssa = phi i32 [ %blocks_split.0.us, %for.cond.us ], !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.0.us.lcssa, metadata !5255, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.0.us.lcssa, metadata !5255, metadata !DIExpression()), !dbg !5278
  br label %for.end128, !dbg !5366

for.cond:                                         ; preds = %cleanup, %if.end37.if.end37.split_crit_edge
  %blocks_split.0 = phi i32 [ 0, %if.end37.if.end37.split_crit_edge ], [ %blocks_split.5, %cleanup ], !dbg !5278
  %i.0 = phi i32 [ 2, %if.end37.if.end37.split_crit_edge ], [ %inc127, %cleanup ], !dbg !5315
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5254, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.0, metadata !5255, metadata !DIExpression()), !dbg !5278
  %cmp38 = icmp slt i32 %i.0, %2, !dbg !5316
  br i1 %cmp38, label %for.body, label %for.end128.us-lcssa, !dbg !5317

for.body:                                         ; preds = %for.cond
  %44 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5318
  %cfg42 = getelementptr inbounds %struct.function, %struct.function* %44, i64 0, i32 1, !dbg !5318
  %45 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg42, align 8, !dbg !5318
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %45, i64 0, i32 2, !dbg !5318
  %46 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !5318
  %tobool43 = icmp eq %struct.VEC_basic_block_gc* %46, null, !dbg !5318
  br i1 %tobool43, label %cond.end, label %cond.true, !dbg !5318

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %46, i64 0, i32 0, !dbg !5318
  br label %cond.end, !dbg !5318

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !5318
  %call47 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %i.0) #7, !dbg !5318
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call47, metadata !5265, metadata !DIExpression()), !dbg !5319
  %tobool49 = icmp eq %struct.basic_block_def* %call47, null, !dbg !5320
  br i1 %tobool49, label %cleanup, label %if.end51, !dbg !5322

if.end51:                                         ; preds = %cond.end
  %div54 = lshr i32 %i.0, 6, !dbg !5368
  %idxprom55 = zext i32 %div54 to i64, !dbg !5368
  %arrayidx56 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %blocks, i64 0, i32 3, i64 %idxprom55, !dbg !5368
  %47 = load i64, i64* %arrayidx56, align 8, !dbg !5368
  %rem57 = and i32 %i.0, 63, !dbg !5368
  %sh_prom58 = zext i32 %rem57 to i64, !dbg !5368
  %48 = shl i64 1, %sh_prom58, !dbg !5368
  %49 = and i64 %47, %48, !dbg !5368
  %tobool61 = icmp eq i64 %49, 0, !dbg !5368
  br i1 %tobool61, label %cleanup, label %if.end63, !dbg !5370

if.end63:                                         ; preds = %if.end51
  %il64 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call47, i64 0, i32 7, !dbg !5323
  %rtl65 = bitcast %union.basic_block_il_dependent* %il64 to %struct.rtl_bb_info**, !dbg !5323
  %50 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl65, align 8, !dbg !5323
  %end_66 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %50, i64 0, i32 1, !dbg !5323
  %51 = load %struct.rtx_def*, %struct.rtx_def** %end_66, align 8, !dbg !5323
  call void @llvm.dbg.value(metadata %struct.rtx_def* %51, metadata !5269, metadata !DIExpression()), !dbg !5319
  br label %for.cond67, !dbg !5324

for.cond67:                                       ; preds = %if.end116, %if.end63
  %.in = phi %struct.rtx_def* [ %51, %if.end63 ], [ %54, %if.end116 ]
  %insn48.0 = phi %struct.rtx_def* [ %51, %if.end63 ], [ %54, %if.end116 ], !dbg !5325
  %blocks_split.1 = phi i32 [ %blocks_split.0, %if.end63 ], [ %blocks_split.4, %if.end116 ], !dbg !5278
  %52 = bitcast %struct.rtx_def* %.in to i8*, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %blocks_split.1, metadata !5255, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn48.0, metadata !5269, metadata !DIExpression()), !dbg !5319
  %53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn48.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5326
  %rt_rtx71 = bitcast %union.rtunion_def* %53 to %struct.rtx_def**, !dbg !5326
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !5326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %54, metadata !5270, metadata !DIExpression()), !dbg !5319
  %call72 = tail call fastcc zeroext i8 @need_fake_edge_p(%struct.rtx_def* %insn48.0) #7, !dbg !5327
  %tobool73 = icmp eq i8 %call72, 0, !dbg !5327
  br i1 %tobool73, label %if.end116, label %if.then74, !dbg !5328

if.then74:                                        ; preds = %for.cond67
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn48.0, metadata !5277, metadata !DIExpression()), !dbg !5329
  %55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn48.0, i64 0, i32 0, !dbg !5330
  %bf.load = load i32, i32* %55, align 8, !dbg !5330
  %bf.clear = and i32 %bf.load, 65535, !dbg !5330
  %cmp76 = icmp eq i32 %bf.clear, 10, !dbg !5330
  br i1 %cmp76, label %while.cond79.preheader, label %if.end100, !dbg !5332

while.cond79.preheader:                           ; preds = %if.then74
  br label %while.cond79, !dbg !5338

while.cond79:                                     ; preds = %while.cond79.preheader, %while.body94
  %56 = phi i8* [ %62, %while.body94 ], [ %52, %while.cond79.preheader ], !dbg !5329
  %split_at_insn.0 = phi %struct.rtx_def* [ %61, %while.body94 ], [ %insn48.0, %while.cond79.preheader ], !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0, metadata !5277, metadata !DIExpression()), !dbg !5329
  %57 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl65, align 8, !dbg !5333
  %end_82 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %57, i64 0, i32 1, !dbg !5333
  %58 = load %struct.rtx_def*, %struct.rtx_def** %end_82, align 8, !dbg !5333
  %cmp83 = icmp eq %struct.rtx_def* %split_at_insn.0, %58, !dbg !5334
  br i1 %cmp83, label %if.end100.loopexit, label %land.rhs85, !dbg !5335

land.rhs85:                                       ; preds = %while.cond79
  %59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %split_at_insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5336
  %rt_rtx89 = bitcast %union.rtunion_def* %59 to %struct.rtx_def**, !dbg !5336
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89, align 8, !dbg !5336
  %call90 = tail call zeroext i8 @keep_with_call_p(%struct.rtx_def* %60) #6, !dbg !5337
  %tobool92 = icmp eq i8 %call90, 0, !dbg !5335
  br i1 %tobool92, label %if.end100.loopexit, label %while.body94, !dbg !5338

while.body94:                                     ; preds = %land.rhs85
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89, align 8, !dbg !5339
  %62 = bitcast %struct.rtx_def* %61 to i8*, !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %61, metadata !5277, metadata !DIExpression()), !dbg !5329
  br label %while.cond79, !dbg !5338, !llvm.loop !5340

if.end100.loopexit:                               ; preds = %while.cond79, %land.rhs85
  %.lcssa3 = phi i8* [ %56, %while.cond79 ], [ %56, %land.rhs85 ], !dbg !5329
  %split_at_insn.0.lcssa = phi %struct.rtx_def* [ %split_at_insn.0, %while.cond79 ], [ %split_at_insn.0, %land.rhs85 ], !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.lcssa, metadata !5277, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.lcssa, metadata !5277, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.lcssa, metadata !5277, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.lcssa, metadata !5277, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.lcssa, metadata !5277, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.0.lcssa, metadata !5277, metadata !DIExpression()), !dbg !5329
  br label %if.end100, !dbg !5342

if.end100:                                        ; preds = %if.end100.loopexit, %if.then74
  %63 = phi i8* [ %52, %if.then74 ], [ %.lcssa3, %if.end100.loopexit ], !dbg !5341
  %split_at_insn.1 = phi %struct.rtx_def* [ %insn48.0, %if.then74 ], [ %split_at_insn.0.lcssa, %if.end100.loopexit ], !dbg !5341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %split_at_insn.1, metadata !5277, metadata !DIExpression()), !dbg !5329
  %64 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl65, align 8, !dbg !5342
  %end_103 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %64, i64 0, i32 1, !dbg !5342
  %65 = load %struct.rtx_def*, %struct.rtx_def** %end_103, align 8, !dbg !5342
  %cmp104 = icmp eq %struct.rtx_def* %split_at_insn.1, %65, !dbg !5344
  br i1 %cmp104, label %if.end111, label %if.then106, !dbg !5345

if.then106:                                       ; preds = %if.end100
  %call107 = tail call %struct.edge_def* @split_block(%struct.basic_block_def* nonnull %call47, i8* %63) #6, !dbg !5346
  call void @llvm.dbg.value(metadata %struct.edge_def* %call107, metadata !5271, metadata !DIExpression()), !dbg !5329
  %tobool108 = icmp ne %struct.edge_def* %call107, null, !dbg !5348
  %inc = zext i1 %tobool108 to i32, !dbg !5350
  %spec.select = add nsw i32 %blocks_split.1, %inc, !dbg !5350
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5255, metadata !DIExpression()), !dbg !5278
  br label %if.end111, !dbg !5351

if.end111:                                        ; preds = %if.end100, %if.then106
  %blocks_split.3 = phi i32 [ %spec.select, %if.then106 ], [ %blocks_split.1, %if.end100 ], !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.3, metadata !5255, metadata !DIExpression()), !dbg !5278
  %66 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5352
  %cfg113 = getelementptr inbounds %struct.function, %struct.function* %66, i64 0, i32 1, !dbg !5352
  %67 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg113, align 8, !dbg !5352
  %x_exit_block_ptr114 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %67, i64 0, i32 1, !dbg !5352
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr114, align 8, !dbg !5352
  %call115 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* nonnull %call47, %struct.basic_block_def* %68, i32 16) #6, !dbg !5353
  br label %if.end116, !dbg !5354

if.end116:                                        ; preds = %for.cond67, %if.end111
  %blocks_split.4 = phi i32 [ %blocks_split.3, %if.end111 ], [ %blocks_split.1, %for.cond67 ], !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.4, metadata !5255, metadata !DIExpression()), !dbg !5278
  %69 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl65, align 8, !dbg !5355
  %head_119 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %69, i64 0, i32 0, !dbg !5355
  %70 = load %struct.rtx_def*, %struct.rtx_def** %head_119, align 8, !dbg !5355
  %cmp120 = icmp eq %struct.rtx_def* %insn48.0, %70, !dbg !5357
  br i1 %cmp120, label %cleanup.loopexit, label %for.cond67, !dbg !5358, !llvm.loop !5359

cleanup.loopexit:                                 ; preds = %if.end116
  %blocks_split.4.lcssa = phi i32 [ %blocks_split.4, %if.end116 ], !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.lcssa, metadata !5255, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.lcssa, metadata !5255, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.lcssa, metadata !5255, metadata !DIExpression()), !dbg !5278
  br label %cleanup, !dbg !5362

cleanup:                                          ; preds = %cleanup.loopexit, %if.end51, %cond.end
  %blocks_split.5 = phi i32 [ %blocks_split.0, %cond.end ], [ %blocks_split.0, %if.end51 ], [ %blocks_split.4.lcssa, %cleanup.loopexit ], !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.5, metadata !5255, metadata !DIExpression()), !dbg !5278
  %inc127 = add nuw nsw i32 %i.0, 1, !dbg !5362
  call void @llvm.dbg.value(metadata i32 %inc127, metadata !5254, metadata !DIExpression()), !dbg !5278
  br label %for.cond, !dbg !5363, !llvm.loop !5364

for.end128.us-lcssa:                              ; preds = %for.cond
  %blocks_split.0.lcssa4 = phi i32 [ %blocks_split.0, %for.cond ], !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.0.lcssa4, metadata !5255, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.0.lcssa4, metadata !5255, metadata !DIExpression()), !dbg !5278
  br label %for.end128, !dbg !5366

for.end128:                                       ; preds = %for.end128.us-lcssa.us, %for.end128.us-lcssa
  %blocks_split.0.lcssa = phi i32 [ %blocks_split.0.lcssa4, %for.end128.us-lcssa ], [ %blocks_split.0.us.lcssa, %for.end128.us-lcssa.us ], !dbg !5278
  call void @llvm.dbg.value(metadata i32 %blocks_split.0.lcssa, metadata !5255, metadata !DIExpression()), !dbg !5278
  %tobool129 = icmp eq i32 %blocks_split.0.lcssa, 0, !dbg !5366
  br i1 %tobool129, label %cleanup132, label %if.then130, !dbg !5371

if.then130:                                       ; preds = %for.end128
  tail call void @verify_flow_info() #6, !dbg !5372
  br label %cleanup132, !dbg !5372

cleanup132:                                       ; preds = %for.end128, %if.then130, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %blocks_split.0.lcssa, %if.then130 ], [ 0, %for.end128 ], !dbg !5278
  ret i32 %retval.0, !dbg !5373
}

; Function Attrs: nounwind uwtable
define internal i32 @rtl_verify_flow_info_1() #4 !dbg !5374 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 0, metadata !5377, metadata !DIExpression()), !dbg !5395
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5396
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !5396
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5396
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !5396
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5396
  br label %for.cond, !dbg !5396

for.cond:                                         ; preds = %for.inc84, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre3, %for.inc84 ], !dbg !5397
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc84 ]
  %err.0 = phi i32 [ 0, %entry ], [ %err.6.lcssa, %for.inc84 ], !dbg !5398
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 5, !dbg !5399
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5399
  call void @llvm.dbg.value(metadata i32 %err.0, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5378, metadata !DIExpression()), !dbg !5395
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !5397
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5397
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !5397
  br i1 %cmp, label %for.end86, label %for.body, !dbg !5396

for.body:                                         ; preds = %for.cond
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 13, !dbg !5400
  %5 = load i32, i32* %flags, align 8, !dbg !5400
  %and = and i32 %5, 512, !dbg !5402
  %tobool = icmp eq i32 %and, 0, !dbg !5402
  br i1 %tobool, label %if.then, label %if.end, !dbg !5403

if.then:                                          ; preds = %for.body
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !5404
  %6 = load i32, i32* %index, align 8, !dbg !5404
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.37, i64 0, i64 0), i32 %6) #6, !dbg !5406
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end, !dbg !5407

if.end:                                           ; preds = %for.body, %if.then
  %err.1 = phi i32 [ %err.0, %for.body ], [ 1, %if.then ], !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.1, metadata !5377, metadata !DIExpression()), !dbg !5395
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !5408
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5408
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5408
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 0, !dbg !5408
  %index27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !5410
  br label %for.cond3, !dbg !5408

for.cond3:                                        ; preds = %for.inc, %if.end
  %insn.0.in = phi %struct.rtx_def** [ %head_, %if.end ], [ %rt_rtx32, %for.inc ]
  %err.2 = phi i32 [ %err.1, %if.end ], [ %err.3, %for.inc ], !dbg !5395
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !5414
  call void @llvm.dbg.value(metadata i32 %err.2, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5379, metadata !DIExpression()), !dbg !5415
  %tobool4 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5416
  br i1 %tobool4, label %for.cond3.for.end_crit_edge, label %land.rhs, !dbg !5416

for.cond3.for.end_crit_edge:                      ; preds = %for.cond3
  %err.2.lcssa = phi i32 [ %err.2, %for.cond3 ], !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.2.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.2.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  %.pre4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5417
  br label %for.end, !dbg !5416

land.rhs:                                         ; preds = %for.cond3
  %8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5416
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %8, i64 0, i32 1, !dbg !5416
  %9 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5416
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5416
  %rt_rtx = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !5416
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5416
  %cmp7 = icmp eq %struct.rtx_def* %insn.0, %11, !dbg !5416
  br i1 %cmp7, label %for.end.loopexit, label %for.body8, !dbg !5408

for.body8:                                        ; preds = %land.rhs
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 1, !dbg !5419
  %rt_bb = bitcast %struct.object_block** %arrayidx11 to %struct.basic_block_def**, !dbg !5419
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5419
  %cmp12 = icmp eq %struct.basic_block_def* %12, %bb.0, !dbg !5420
  br i1 %cmp12, label %for.inc, label %if.then13, !dbg !5421

if.then13:                                        ; preds = %for.body8
  %arrayidx16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5422
  %rt_int = bitcast %union.rtunion_def* %arrayidx16 to i32*, !dbg !5422
  %13 = load i32, i32* %rt_int, align 8, !dbg !5422
  %tobool21 = icmp eq %struct.basic_block_def* %12, null, !dbg !5423
  br i1 %tobool21, label %cond.end, label %cond.true, !dbg !5423

cond.true:                                        ; preds = %if.then13
  %index26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 9, !dbg !5424
  %14 = load i32, i32* %index26, align 8, !dbg !5424
  br label %cond.end, !dbg !5423

cond.end:                                         ; preds = %if.then13, %cond.true
  %cond = phi i32 [ %14, %cond.true ], [ 0, %if.then13 ], !dbg !5423
  %15 = load i32, i32* %index27, align 8, !dbg !5425
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.38, i64 0, i64 0), i32 %13, i32 %cond, i32 %15) #6, !dbg !5426
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %for.inc, !dbg !5427

for.inc:                                          ; preds = %for.body8, %cond.end
  %err.3 = phi i32 [ 1, %cond.end ], [ %err.2, %for.body8 ], !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.3, metadata !5377, metadata !DIExpression()), !dbg !5395
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5416
  %rt_rtx32 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !5416
  br label %for.cond3, !dbg !5416, !llvm.loop !5428

for.end.loopexit:                                 ; preds = %land.rhs
  %.lcssa21 = phi %struct.rtl_bb_info* [ %8, %land.rhs ], !dbg !5416
  %err.2.lcssa19 = phi i32 [ %err.2, %land.rhs ], !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.2.lcssa19, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.2.lcssa19, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %for.end, !dbg !5430

for.end:                                          ; preds = %for.end.loopexit, %for.cond3.for.end_crit_edge
  %err.220 = phi i32 [ %err.2.lcssa, %for.cond3.for.end_crit_edge ], [ %err.2.lcssa19, %for.end.loopexit ]
  %17 = phi %struct.rtl_bb_info* [ %.pre4, %for.cond3.for.end_crit_edge ], [ %.lcssa21, %for.end.loopexit ], !dbg !5417
  call void @llvm.dbg.value(metadata i32 %err.220, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.220, metadata !5377, metadata !DIExpression()), !dbg !5395
  %header = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %17, i64 0, i32 2, !dbg !5430
  br label %for.cond35, !dbg !5431

for.cond35:                                       ; preds = %for.inc51, %for.end
  %insn.1.in = phi %struct.rtx_def** [ %header, %for.end ], [ %rt_rtx55, %for.inc51 ]
  %err.4 = phi i32 [ %err.220, %for.end ], [ %err.5, %for.inc51 ], !dbg !5398
  %insn.1 = load %struct.rtx_def*, %struct.rtx_def** %insn.1.in, align 8, !dbg !5432
  call void @llvm.dbg.value(metadata i32 %err.4, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !5379, metadata !DIExpression()), !dbg !5415
  %tobool36 = icmp eq %struct.rtx_def* %insn.1, null, !dbg !5433
  br i1 %tobool36, label %for.end56, label %for.body37, !dbg !5433

for.body37:                                       ; preds = %for.cond35
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !5434
  %bf.load = load i32, i32* %18, align 8, !dbg !5434
  %bf.clear = and i32 %bf.load, 65535, !dbg !5434
  %cmp38 = icmp eq i32 %bf.clear, 11, !dbg !5434
  br i1 %cmp38, label %for.inc51, label %land.lhs.true, !dbg !5437

land.lhs.true:                                    ; preds = %for.body37
  %arrayidx41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 1, !dbg !5438
  %rt_bb42 = bitcast %struct.object_block** %arrayidx41 to %struct.basic_block_def**, !dbg !5438
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb42, align 8, !dbg !5438
  %cmp43 = icmp eq %struct.basic_block_def* %19, null, !dbg !5439
  br i1 %cmp43, label %for.inc51, label %if.then44, !dbg !5440

if.then44:                                        ; preds = %land.lhs.true
  %arrayidx47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5441
  %rt_int48 = bitcast %union.rtunion_def* %arrayidx47 to i32*, !dbg !5441
  %20 = load i32, i32* %rt_int48, align 8, !dbg !5441
  %21 = load i32, i32* %index27, align 8, !dbg !5443
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.39, i64 0, i64 0), i32 %20, i32 %21) #6, !dbg !5444
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %for.inc51, !dbg !5445

for.inc51:                                        ; preds = %land.lhs.true, %for.body37, %if.then44
  %err.5 = phi i32 [ %err.4, %for.body37 ], [ 1, %if.then44 ], [ %err.4, %land.lhs.true ], !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.5, metadata !5377, metadata !DIExpression()), !dbg !5395
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5446
  %rt_rtx55 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !5446
  br label %for.cond35, !dbg !5447, !llvm.loop !5448

for.end56:                                        ; preds = %for.cond35
  %err.4.lcssa = phi i32 [ %err.4, %for.cond35 ], !dbg !5398
  call void @llvm.dbg.value(metadata i32 %err.4.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.4.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.4.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  %23 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5450
  %footer = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %23, i64 0, i32 3, !dbg !5452
  br label %for.cond59, !dbg !5453

for.cond59:                                       ; preds = %for.inc78, %for.end56
  %insn.2.in = phi %struct.rtx_def** [ %footer, %for.end56 ], [ %rt_rtx82, %for.inc78 ]
  %err.6 = phi i32 [ %err.4.lcssa, %for.end56 ], [ %err.7, %for.inc78 ], !dbg !5398
  %insn.2 = load %struct.rtx_def*, %struct.rtx_def** %insn.2.in, align 8, !dbg !5454
  call void @llvm.dbg.value(metadata i32 %err.6, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2, metadata !5379, metadata !DIExpression()), !dbg !5415
  %tobool60 = icmp eq %struct.rtx_def* %insn.2, null, !dbg !5455
  br i1 %tobool60, label %for.inc84, label %for.body61, !dbg !5455

for.body61:                                       ; preds = %for.cond59
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 0, !dbg !5456
  %bf.load62 = load i32, i32* %24, align 8, !dbg !5456
  %bf.clear63 = and i32 %bf.load62, 65535, !dbg !5456
  %cmp64 = icmp eq i32 %bf.clear63, 11, !dbg !5456
  br i1 %cmp64, label %for.inc78, label %land.lhs.true65, !dbg !5459

land.lhs.true65:                                  ; preds = %for.body61
  %arrayidx68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 1, !dbg !5460
  %rt_bb69 = bitcast %struct.object_block** %arrayidx68 to %struct.basic_block_def**, !dbg !5460
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb69, align 8, !dbg !5460
  %cmp70 = icmp eq %struct.basic_block_def* %25, null, !dbg !5461
  br i1 %cmp70, label %for.inc78, label %if.then71, !dbg !5462

if.then71:                                        ; preds = %land.lhs.true65
  %arrayidx74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5463
  %rt_int75 = bitcast %union.rtunion_def* %arrayidx74 to i32*, !dbg !5463
  %26 = load i32, i32* %rt_int75, align 8, !dbg !5463
  %27 = load i32, i32* %index27, align 8, !dbg !5465
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.40, i64 0, i64 0), i32 %26, i32 %27) #6, !dbg !5466
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %for.inc78, !dbg !5467

for.inc78:                                        ; preds = %land.lhs.true65, %for.body61, %if.then71
  %err.7 = phi i32 [ %err.6, %for.body61 ], [ 1, %if.then71 ], [ %err.6, %land.lhs.true65 ], !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.7, metadata !5377, metadata !DIExpression()), !dbg !5395
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5468
  %rt_rtx82 = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !5468
  br label %for.cond59, !dbg !5469, !llvm.loop !5470

for.inc84:                                        ; preds = %for.cond59
  %err.6.lcssa = phi i32 [ %err.6, %for.cond59 ], !dbg !5398
  call void @llvm.dbg.value(metadata i32 %err.6.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.6.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.6.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5397
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !5472
  %.pre3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !5397
  br label %for.cond, !dbg !5397, !llvm.loop !5473

for.end86:                                        ; preds = %for.cond
  %.lcssa22 = phi %struct.control_flow_graph* [ %3, %for.cond ], !dbg !5397
  %err.0.lcssa = phi i32 [ %err.0, %for.cond ], !dbg !5398
  %bb.0.lcssa = phi %struct.basic_block_def* [ %bb.0, %for.cond ], !dbg !5399
  call void @llvm.dbg.value(metadata i32 %err.0.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.0.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.0.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  %x_exit_block_ptr89 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.lcssa22, i64 0, i32 1, !dbg !5475
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr89, align 8, !dbg !5475
  %30 = bitcast %struct.edge_def** %e to i8*, !dbg !5476
  %31 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5476
  %32 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5477
  %33 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5477
  %34 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5477
  %35 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5479
  %36 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5479
  br label %for.cond91, !dbg !5475

for.cond91:                                       ; preds = %if.end564, %for.end86
  %37 = phi %struct.basic_block_def* [ %bb.0.lcssa, %for.end86 ], [ %.pre7, %if.end564 ], !dbg !5481
  %.pn2 = phi %struct.basic_block_def* [ %29, %for.end86 ], [ %bb.1, %if.end564 ]
  %err.8 = phi i32 [ %err.0.lcssa, %for.end86 ], [ %err.30, %if.end564 ], !dbg !5395
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn2, i64 0, i32 5, !dbg !5482
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !5482
  call void @llvm.dbg.value(metadata i32 %err.8, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !5378, metadata !DIExpression()), !dbg !5395
  %cmp95 = icmp eq %struct.basic_block_def* %bb.1, %37, !dbg !5481
  br i1 %cmp95, label %for.end567, label %for.body96, !dbg !5475

for.body96:                                       ; preds = %for.cond91
  call void @llvm.dbg.value(metadata i32 0, metadata !5383, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 0, metadata !5387, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 0, metadata !5388, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 0, metadata !5389, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 0, metadata !5390, metadata !DIExpression()), !dbg !5476
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8, !dbg !5483
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !5392, metadata !DIExpression()), !dbg !5476
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #8, !dbg !5484
  %il97 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 7, !dbg !5485
  %rtl98 = bitcast %union.basic_block_il_dependent* %il97 to %struct.rtl_bb_info**, !dbg !5485
  %38 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5485
  %end_99 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %38, i64 0, i32 1, !dbg !5485
  %39 = bitcast %struct.rtx_def** %end_99 to i32**, !dbg !5485
  %40 = load i32*, i32** %39, align 8, !dbg !5485
  %bf.load100 = load i32, i32* %40, align 8, !dbg !5485
  %bf.clear101 = and i32 %bf.load100, 65535, !dbg !5485
  %cmp102 = icmp eq i32 %bf.clear101, 9, !dbg !5485
  br i1 %cmp102, label %land.lhs.true103, label %if.end215, !dbg !5487

land.lhs.true103:                                 ; preds = %for.body96
  %41 = bitcast i32* %40 to %struct.rtx_def*, !dbg !5487
  %call = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %41, i32 13, %struct.rtx_def* null) #6, !dbg !5488
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5393, metadata !DIExpression()), !dbg !5476
  %tobool107 = icmp eq %struct.rtx_def* %call, null, !dbg !5489
  br i1 %tobool107, label %if.end215, label %land.lhs.true108, !dbg !5490

land.lhs.true108:                                 ; preds = %land.lhs.true103
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 1, !dbg !5491
  %42 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5491
  %tobool109 = icmp eq %struct.VEC_edge_gc* %42, null, !dbg !5491
  br i1 %tobool109, label %cond.end113, label %cond.true110, !dbg !5491

cond.true110:                                     ; preds = %land.lhs.true108
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %42, i64 0, i32 0, !dbg !5491
  br label %cond.end113, !dbg !5491

cond.end113:                                      ; preds = %land.lhs.true108, %cond.true110
  %cond114 = phi %struct.VEC_edge_base* [ %base, %cond.true110 ], [ null, %land.lhs.true108 ], !dbg !5491
  %call115 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond114) #7, !dbg !5491
  %cmp116 = icmp ugt i32 %call115, 1, !dbg !5492
  br i1 %cmp116, label %land.lhs.true117, label %if.end215, !dbg !5493

land.lhs.true117:                                 ; preds = %cond.end113
  %43 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5494
  %end_120 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %43, i64 0, i32 1, !dbg !5494
  %44 = load %struct.rtx_def*, %struct.rtx_def** %end_120, align 8, !dbg !5494
  %call121 = call i32 @any_condjump_p(%struct.rtx_def* %44) #6, !dbg !5495
  %tobool122 = icmp eq i32 %call121, 0, !dbg !5495
  br i1 %tobool122, label %if.end215, label %if.then123, !dbg !5496

if.then123:                                       ; preds = %land.lhs.true117
  %arrayidx126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5497
  %rt_rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**, !dbg !5497
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx127, align 8, !dbg !5497
  %u128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i64 0, i32 1, !dbg !5497
  %arrayidx129 = bitcast %union.u* %u128 to i64*, !dbg !5497
  %46 = load i64, i64* %arrayidx129, align 8, !dbg !5497
  %47 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5500
  %tobool131 = icmp eq %struct.VEC_edge_gc* %47, null, !dbg !5500
  br i1 %tobool131, label %cond.end136, label %cond.true132, !dbg !5500

cond.true132:                                     ; preds = %if.then123
  %base134 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %47, i64 0, i32 0, !dbg !5500
  br label %cond.end136, !dbg !5500

cond.end136:                                      ; preds = %if.then123, %cond.true132
  %cond137 = phi %struct.VEC_edge_base* [ %base134, %cond.true132 ], [ null, %if.then123 ], !dbg !5500
  %call138 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond137, i32 0) #7, !dbg !5500
  %flags139 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call138, i64 0, i32 7, !dbg !5500
  %48 = load i32, i32* %flags139, align 8, !dbg !5500
  %and140 = and i32 %48, 1, !dbg !5500
  %tobool141 = icmp eq i32 %and140, 0, !dbg !5500
  %49 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5500
  %tobool144 = icmp ne %struct.VEC_edge_gc* %49, null, !dbg !5500
  br i1 %tobool141, label %cond.false152, label %cond.true142, !dbg !5500

cond.true142:                                     ; preds = %cond.end136
  br i1 %tobool144, label %cond.true145, label %cond.end149, !dbg !5500

cond.true145:                                     ; preds = %cond.true142
  %base147 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %49, i64 0, i32 0, !dbg !5500
  br label %cond.end149, !dbg !5500

cond.end149:                                      ; preds = %cond.true142, %cond.true145
  %cond150 = phi %struct.VEC_edge_base* [ %base147, %cond.true145 ], [ null, %cond.true142 ], !dbg !5500
  %call151 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond150, i32 1) #7, !dbg !5500
  br label %cond.end162, !dbg !5500

cond.false152:                                    ; preds = %cond.end136
  br i1 %tobool144, label %cond.true155, label %cond.end159, !dbg !5500

cond.true155:                                     ; preds = %cond.false152
  %base157 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %49, i64 0, i32 0, !dbg !5500
  br label %cond.end159, !dbg !5500

cond.end159:                                      ; preds = %cond.false152, %cond.true155
  %cond160 = phi %struct.VEC_edge_base* [ %base157, %cond.true155 ], [ null, %cond.false152 ], !dbg !5500
  %call161 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond160, i32 0) #7, !dbg !5500
  br label %cond.end162, !dbg !5500

cond.end162:                                      ; preds = %cond.end159, %cond.end149
  %cond163 = phi %struct.edge_def* [ %call151, %cond.end149 ], [ %call161, %cond.end159 ], !dbg !5500
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond163, i64 0, i32 8, !dbg !5501
  %50 = load i32, i32* %probability, align 4, !dbg !5501
  %conv = sext i32 %50 to i64, !dbg !5500
  %cmp164 = icmp eq i64 %46, %conv, !dbg !5502
  br i1 %cmp164, label %if.end215, label %land.lhs.true166, !dbg !5503

land.lhs.true166:                                 ; preds = %cond.end162
  %51 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5504
  %cfg168 = getelementptr inbounds %struct.function, %struct.function* %51, i64 0, i32 1, !dbg !5504
  %52 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg168, align 8, !dbg !5504
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %52, i64 0, i32 7, !dbg !5504
  %53 = load i32, i32* %x_profile_status, align 8, !dbg !5504
  %cmp169 = icmp eq i32 %53, 0, !dbg !5505
  br i1 %cmp169, label %if.end215, label %if.then171, !dbg !5506

if.then171:                                       ; preds = %land.lhs.true166
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx127, align 8, !dbg !5507
  %u176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i64 0, i32 1, !dbg !5507
  %arrayidx178 = bitcast %union.u* %u176 to i64*, !dbg !5507
  %55 = load i64, i64* %arrayidx178, align 8, !dbg !5507
  %56 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5509
  %tobool180 = icmp eq %struct.VEC_edge_gc* %56, null, !dbg !5509
  br i1 %tobool180, label %cond.end185, label %cond.true181, !dbg !5509

cond.true181:                                     ; preds = %if.then171
  %base183 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %56, i64 0, i32 0, !dbg !5509
  br label %cond.end185, !dbg !5509

cond.end185:                                      ; preds = %if.then171, %cond.true181
  %cond186 = phi %struct.VEC_edge_base* [ %base183, %cond.true181 ], [ null, %if.then171 ], !dbg !5509
  %call187 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond186, i32 0) #7, !dbg !5509
  %flags188 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call187, i64 0, i32 7, !dbg !5509
  %57 = load i32, i32* %flags188, align 8, !dbg !5509
  %and189 = and i32 %57, 1, !dbg !5509
  %tobool190 = icmp eq i32 %and189, 0, !dbg !5509
  %58 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5509
  %tobool193 = icmp ne %struct.VEC_edge_gc* %58, null, !dbg !5509
  br i1 %tobool190, label %cond.false201, label %cond.true191, !dbg !5509

cond.true191:                                     ; preds = %cond.end185
  br i1 %tobool193, label %cond.true194, label %cond.end198, !dbg !5509

cond.true194:                                     ; preds = %cond.true191
  %base196 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %58, i64 0, i32 0, !dbg !5509
  br label %cond.end198, !dbg !5509

cond.end198:                                      ; preds = %cond.true191, %cond.true194
  %cond199 = phi %struct.VEC_edge_base* [ %base196, %cond.true194 ], [ null, %cond.true191 ], !dbg !5509
  %call200 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond199, i32 1) #7, !dbg !5509
  br label %cond.end211, !dbg !5509

cond.false201:                                    ; preds = %cond.end185
  br i1 %tobool193, label %cond.true204, label %cond.end208, !dbg !5509

cond.true204:                                     ; preds = %cond.false201
  %base206 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %58, i64 0, i32 0, !dbg !5509
  br label %cond.end208, !dbg !5509

cond.end208:                                      ; preds = %cond.false201, %cond.true204
  %cond209 = phi %struct.VEC_edge_base* [ %base206, %cond.true204 ], [ null, %cond.false201 ], !dbg !5509
  %call210 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond209, i32 0) #7, !dbg !5509
  br label %cond.end211, !dbg !5509

cond.end211:                                      ; preds = %cond.end208, %cond.end198
  %cond212 = phi %struct.edge_def* [ %call200, %cond.end198 ], [ %call210, %cond.end208 ], !dbg !5509
  %probability213 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond212, i64 0, i32 8, !dbg !5510
  %59 = load i32, i32* %probability213, align 4, !dbg !5510
  call void (i8*, ...) @error(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.41, i64 0, i64 0), i64 %55, i32 %59) #6, !dbg !5511
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end215, !dbg !5512

if.end215:                                        ; preds = %land.lhs.true166, %cond.end162, %land.lhs.true117, %land.lhs.true103, %cond.end211, %cond.end113, %for.body96
  %err.10 = phi i32 [ %err.8, %land.lhs.true117 ], [ %err.8, %cond.end113 ], [ %err.8, %land.lhs.true103 ], [ %err.8, %for.body96 ], [ 1, %cond.end211 ], [ %err.8, %land.lhs.true166 ], [ %err.8, %cond.end162 ], !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.10, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8, !dbg !5513
  %succs216 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 1, !dbg !5513
  %call217 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs216) #7, !dbg !5513
  %60 = extractvalue { i32, %struct.VEC_edge_gc** } %call217, 0, !dbg !5513
  store i32 %60, i32* %33, align 8, !dbg !5513
  %61 = extractvalue { i32, %struct.VEC_edge_gc** } %call217, 1, !dbg !5513
  store %struct.VEC_edge_gc** %61, %struct.VEC_edge_gc*** %34, align 8, !dbg !5513
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %32, i64 16, i1 false), !dbg !5513
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8, !dbg !5513
  br label %for.cond218, !dbg !5513

for.cond218:                                      ; preds = %for.inc279, %if.end215
  %fallthru.0 = phi %struct.edge_def* [ null, %if.end215 ], [ %fallthru.1, %for.inc279 ], !dbg !5476
  %n_branch.0 = phi i32 [ 0, %if.end215 ], [ %spec.select, %for.inc279 ], !dbg !5476
  %n_abnormal.0 = phi i32 [ 0, %if.end215 ], [ %n_abnormal.2, %for.inc279 ], !dbg !5514
  %n_call.0 = phi i32 [ 0, %if.end215 ], [ %n_call.1, %for.inc279 ], !dbg !5476
  %n_eh.0 = phi i32 [ 0, %if.end215 ], [ %n_eh.1, %for.inc279 ], !dbg !5476
  %n_fallthru.0 = phi i32 [ 0, %if.end215 ], [ %n_fallthru.1, %for.inc279 ], !dbg !5476
  %err.11 = phi i32 [ %err.10, %if.end215 ], [ %err.13, %for.inc279 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.11, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %n_fallthru.0, metadata !5383, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_eh.0, metadata !5387, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_call.0, metadata !5388, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_abnormal.0, metadata !5389, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_branch.0, metadata !5390, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru.0, metadata !5392, metadata !DIExpression()), !dbg !5476
  %62 = load i32, i32* %35, align 8, !dbg !5515
  %63 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %36, align 8, !dbg !5515
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5391, metadata !DIExpression(DW_OP_deref)), !dbg !5476
  %call219 = call fastcc zeroext i8 @ei_cond(i32 %62, %struct.VEC_edge_gc** %63, %struct.edge_def** nonnull %e) #7, !dbg !5515
  %tobool220 = icmp eq i8 %call219, 0, !dbg !5513
  br i1 %tobool220, label %for.end280, label %for.body221, !dbg !5513

for.body221:                                      ; preds = %for.cond218
  %64 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5516
  call void @llvm.dbg.value(metadata %struct.edge_def* %64, metadata !5391, metadata !DIExpression()), !dbg !5476
  %flags222 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %64, i64 0, i32 7, !dbg !5519
  %65 = load i32, i32* %flags222, align 8, !dbg !5519
  %and223 = and i32 %65, 1, !dbg !5520
  %tobool224 = icmp eq i32 %and223, 0, !dbg !5520
  br i1 %tobool224, label %if.end253, label %if.then225, !dbg !5521

if.then225:                                       ; preds = %for.body221
  %inc = add nsw i32 %n_fallthru.0, 1, !dbg !5522
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5383, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata %struct.edge_def* %64, metadata !5391, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata %struct.edge_def* %64, metadata !5392, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata %struct.edge_def* %64, metadata !5391, metadata !DIExpression()), !dbg !5476
  %and227 = and i32 %65, 8192, !dbg !5524
  %tobool228 = icmp eq i32 %and227, 0, !dbg !5524
  br i1 %tobool228, label %lor.lhs.false, label %if.then225.if.then249_crit_edge, !dbg !5526

if.then225.if.then249_crit_edge:                  ; preds = %if.then225
  %src250.phi.trans.insert = getelementptr inbounds %struct.edge_def, %struct.edge_def* %64, i64 0, i32 0, !dbg !5527
  %.pre8 = load %struct.basic_block_def*, %struct.basic_block_def** %src250.phi.trans.insert, align 8, !dbg !5529
  br label %if.then249, !dbg !5526

lor.lhs.false:                                    ; preds = %if.then225
  call void @llvm.dbg.value(metadata %struct.edge_def* %64, metadata !5391, metadata !DIExpression()), !dbg !5476
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %64, i64 0, i32 0, !dbg !5530
  %66 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5530
  %flags229 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %66, i64 0, i32 13, !dbg !5530
  %67 = load i32, i32* %flags229, align 8, !dbg !5530
  call void @llvm.dbg.value(metadata %struct.edge_def* %64, metadata !5391, metadata !DIExpression()), !dbg !5476
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %64, i64 0, i32 1, !dbg !5531
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5531
  %flags231 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %68, i64 0, i32 13, !dbg !5531
  %69 = load i32, i32* %flags231, align 8, !dbg !5531
  %70 = xor i32 %67, %69, !dbg !5532
  %71 = and i32 %70, 96, !dbg !5532
  %cmp233 = icmp eq i32 %71, 0, !dbg !5532
  br i1 %cmp233, label %if.end253, label %land.lhs.true235, !dbg !5533

land.lhs.true235:                                 ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.edge_def* %64, metadata !5391, metadata !DIExpression()), !dbg !5476
  %72 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5534
  %cfg238 = getelementptr inbounds %struct.function, %struct.function* %72, i64 0, i32 1, !dbg !5534
  %73 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg238, align 8, !dbg !5534
  %x_entry_block_ptr239 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %73, i64 0, i32 0, !dbg !5534
  %74 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr239, align 8, !dbg !5534
  %cmp240 = icmp eq %struct.basic_block_def* %66, %74, !dbg !5535
  br i1 %cmp240, label %if.end253, label %land.lhs.true242, !dbg !5536

land.lhs.true242:                                 ; preds = %land.lhs.true235
  call void @llvm.dbg.value(metadata %struct.edge_def* %64, metadata !5391, metadata !DIExpression()), !dbg !5476
  %x_exit_block_ptr246 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %73, i64 0, i32 1, !dbg !5537
  %75 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr246, align 8, !dbg !5537
  %cmp247 = icmp eq %struct.basic_block_def* %68, %75, !dbg !5538
  br i1 %cmp247, label %if.end253, label %if.then249, !dbg !5539

if.then249:                                       ; preds = %if.then225.if.then249_crit_edge, %land.lhs.true242
  %76 = phi %struct.basic_block_def* [ %.pre8, %if.then225.if.then249_crit_edge ], [ %66, %land.lhs.true242 ], !dbg !5529
  call void @llvm.dbg.value(metadata %struct.edge_def* %64, metadata !5391, metadata !DIExpression()), !dbg !5476
  %index251 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %76, i64 0, i32 9, !dbg !5540
  %77 = load i32, i32* %index251, align 8, !dbg !5540
  call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.42, i64 0, i64 0), i32 %77) #6, !dbg !5541
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  %.pre9 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5542
  %flags254.phi.trans.insert = getelementptr inbounds %struct.edge_def, %struct.edge_def* %.pre9, i64 0, i32 7, !dbg !5544
  %.pre10 = load i32, i32* %flags254.phi.trans.insert, align 8, !dbg !5545
  br label %if.end253, !dbg !5546

if.end253:                                        ; preds = %land.lhs.true242, %land.lhs.true235, %lor.lhs.false, %for.body221, %if.then249
  %78 = phi i32 [ %65, %for.body221 ], [ %.pre10, %if.then249 ], [ %65, %land.lhs.true242 ], [ %65, %land.lhs.true235 ], [ %65, %lor.lhs.false ], !dbg !5547
  %fallthru.1 = phi %struct.edge_def* [ %fallthru.0, %for.body221 ], [ %64, %if.then249 ], [ %64, %land.lhs.true242 ], [ %64, %land.lhs.true235 ], [ %64, %lor.lhs.false ], !dbg !5476
  %n_fallthru.1 = phi i32 [ %n_fallthru.0, %for.body221 ], [ %inc, %if.then249 ], [ %inc, %land.lhs.true242 ], [ %inc, %land.lhs.true235 ], [ %inc, %lor.lhs.false ], !dbg !5476
  %err.13 = phi i32 [ %err.11, %for.body221 ], [ 1, %if.then249 ], [ %err.11, %land.lhs.true242 ], [ %err.11, %land.lhs.true235 ], [ %err.11, %lor.lhs.false ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.13, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %n_fallthru.1, metadata !5383, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru.1, metadata !5392, metadata !DIExpression()), !dbg !5476
  %and255 = and i32 %78, -8929, !dbg !5549
  %cmp256 = icmp eq i32 %and255, 0, !dbg !5550
  %inc259 = zext i1 %cmp256 to i32, !dbg !5551
  %spec.select = add nuw nsw i32 %n_branch.0, %inc259, !dbg !5551
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5390, metadata !DIExpression()), !dbg !5476
  %and262 = lshr i32 %78, 2, !dbg !5552
  %and262.lobit = and i32 %and262, 1, !dbg !5552
  %n_call.1 = add nuw nsw i32 %n_call.0, %and262.lobit, !dbg !5552
  call void @llvm.dbg.value(metadata i32 %n_call.1, metadata !5388, metadata !DIExpression()), !dbg !5476
  %and268 = and i32 %78, 8, !dbg !5553
  %tobool269 = icmp eq i32 %and268, 0, !dbg !5553
  br i1 %tobool269, label %if.else, label %if.then270, !dbg !5555

if.then270:                                       ; preds = %if.end253
  %inc271 = add nsw i32 %n_eh.0, 1, !dbg !5556
  call void @llvm.dbg.value(metadata i32 %inc271, metadata !5387, metadata !DIExpression()), !dbg !5476
  br label %for.inc279, !dbg !5557

if.else:                                          ; preds = %if.end253
  %and273 = lshr i32 %78, 1, !dbg !5558
  %and273.lobit = and i32 %and273, 1, !dbg !5558
  %spec.select1 = add nsw i32 %n_abnormal.0, %and273.lobit, !dbg !5558
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !5389, metadata !DIExpression()), !dbg !5476
  br label %for.inc279

for.inc279:                                       ; preds = %if.then270, %if.else
  %n_abnormal.2 = phi i32 [ %n_abnormal.0, %if.then270 ], [ %spec.select1, %if.else ], !dbg !5476
  %n_eh.1 = phi i32 [ %inc271, %if.then270 ], [ %n_eh.0, %if.else ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_eh.1, metadata !5387, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_abnormal.2, metadata !5389, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5394, metadata !DIExpression(DW_OP_deref)), !dbg !5476
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5515
  br label %for.cond218, !dbg !5515, !llvm.loop !5559

for.end280:                                       ; preds = %for.cond218
  %fallthru.0.lcssa = phi %struct.edge_def* [ %fallthru.0, %for.cond218 ], !dbg !5476
  %n_branch.0.lcssa = phi i32 [ %n_branch.0, %for.cond218 ], !dbg !5476
  %n_abnormal.0.lcssa = phi i32 [ %n_abnormal.0, %for.cond218 ], !dbg !5514
  %n_call.0.lcssa = phi i32 [ %n_call.0, %for.cond218 ], !dbg !5476
  %n_eh.0.lcssa = phi i32 [ %n_eh.0, %for.cond218 ], !dbg !5476
  %n_fallthru.0.lcssa = phi i32 [ %n_fallthru.0, %for.cond218 ], !dbg !5476
  %err.11.lcssa = phi i32 [ %err.11, %for.cond218 ], !dbg !5476
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru.0.lcssa, metadata !5392, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_branch.0.lcssa, metadata !5390, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_abnormal.0.lcssa, metadata !5389, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_call.0.lcssa, metadata !5388, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_eh.0.lcssa, metadata !5387, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_fallthru.0.lcssa, metadata !5383, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.11.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru.0.lcssa, metadata !5392, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_branch.0.lcssa, metadata !5390, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_abnormal.0.lcssa, metadata !5389, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_call.0.lcssa, metadata !5388, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_eh.0.lcssa, metadata !5387, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_fallthru.0.lcssa, metadata !5383, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.11.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru.0.lcssa, metadata !5392, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_branch.0.lcssa, metadata !5390, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_abnormal.0.lcssa, metadata !5389, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_call.0.lcssa, metadata !5388, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_eh.0.lcssa, metadata !5387, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %n_fallthru.0.lcssa, metadata !5383, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.11.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  %tobool281 = icmp eq i32 %n_eh.0.lcssa, 0, !dbg !5561
  br i1 %tobool281, label %if.end290, label %land.lhs.true282, !dbg !5563

land.lhs.true282:                                 ; preds = %for.end280
  %79 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5564
  %end_285 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %79, i64 0, i32 1, !dbg !5564
  %80 = load %struct.rtx_def*, %struct.rtx_def** %end_285, align 8, !dbg !5564
  %call286 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %80, i32 25, %struct.rtx_def* null) #6, !dbg !5565
  %tobool287 = icmp eq %struct.rtx_def* %call286, null, !dbg !5565
  br i1 %tobool287, label %if.then288, label %if.end290, !dbg !5566

if.then288:                                       ; preds = %land.lhs.true282
  %index289 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5567
  %81 = load i32, i32* %index289, align 8, !dbg !5567
  call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.43, i64 0, i64 0), i32 %81) #6, !dbg !5569
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end290, !dbg !5570

if.end290:                                        ; preds = %land.lhs.true282, %for.end280, %if.then288
  %err.14 = phi i32 [ %err.11.lcssa, %land.lhs.true282 ], [ 1, %if.then288 ], [ %err.11.lcssa, %for.end280 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.14, metadata !5377, metadata !DIExpression()), !dbg !5395
  %cmp291 = icmp sgt i32 %n_eh.0.lcssa, 1, !dbg !5571
  br i1 %cmp291, label %if.then293, label %if.end295, !dbg !5573

if.then293:                                       ; preds = %if.end290
  %index294 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5574
  %82 = load i32, i32* %index294, align 8, !dbg !5574
  call void (i8*, ...) @error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 %82) #6, !dbg !5576
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end295, !dbg !5577

if.end295:                                        ; preds = %if.then293, %if.end290
  %err.15 = phi i32 [ 1, %if.then293 ], [ %err.14, %if.end290 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.15, metadata !5377, metadata !DIExpression()), !dbg !5395
  %tobool296 = icmp eq i32 %n_branch.0.lcssa, 0, !dbg !5578
  br i1 %tobool296, label %if.end322, label %land.lhs.true297, !dbg !5580

land.lhs.true297:                                 ; preds = %if.end295
  %83 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5581
  %end_300 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %83, i64 0, i32 1, !dbg !5581
  %84 = bitcast %struct.rtx_def** %end_300 to i32**, !dbg !5581
  %85 = load i32*, i32** %84, align 8, !dbg !5581
  %bf.load301 = load i32, i32* %85, align 8, !dbg !5581
  %bf.clear302 = and i32 %bf.load301, 65535, !dbg !5581
  %cmp303 = icmp eq i32 %bf.clear302, 9, !dbg !5581
  %86 = bitcast i32* %85 to %struct.rtx_def*, !dbg !5582
  br i1 %cmp303, label %lor.lhs.false305, label %if.then320, !dbg !5582

lor.lhs.false305:                                 ; preds = %land.lhs.true297
  %cmp306 = icmp ugt i32 %n_branch.0.lcssa, 1, !dbg !5583
  br i1 %cmp306, label %land.lhs.true308, label %if.end322, !dbg !5584

land.lhs.true308:                                 ; preds = %lor.lhs.false305
  %call312 = call i32 @any_uncondjump_p(%struct.rtx_def* %86) #6, !dbg !5585
  %tobool313 = icmp eq i32 %call312, 0, !dbg !5585
  br i1 %tobool313, label %lor.lhs.false314, label %if.then320, !dbg !5586

lor.lhs.false314:                                 ; preds = %land.lhs.true308
  %87 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5587
  %end_317 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %87, i64 0, i32 1, !dbg !5587
  %88 = load %struct.rtx_def*, %struct.rtx_def** %end_317, align 8, !dbg !5587
  %call318 = call i32 @any_condjump_p(%struct.rtx_def* %88) #6, !dbg !5588
  %tobool319 = icmp eq i32 %call318, 0, !dbg !5588
  br i1 %tobool319, label %if.end322, label %if.then320, !dbg !5589

if.then320:                                       ; preds = %lor.lhs.false314, %land.lhs.true308, %land.lhs.true297
  %index321 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5590
  %89 = load i32, i32* %index321, align 8, !dbg !5590
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.45, i64 0, i64 0), i32 %89) #6, !dbg !5592
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end322, !dbg !5593

if.end322:                                        ; preds = %lor.lhs.false314, %if.end295, %if.then320, %lor.lhs.false305
  %err.16 = phi i32 [ 1, %if.then320 ], [ %err.15, %lor.lhs.false314 ], [ %err.15, %lor.lhs.false305 ], [ %err.15, %if.end295 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.16, metadata !5377, metadata !DIExpression()), !dbg !5395
  %tobool323 = icmp eq i32 %n_fallthru.0.lcssa, 0, !dbg !5594
  br i1 %tobool323, label %if.end332, label %land.lhs.true324, !dbg !5596

land.lhs.true324:                                 ; preds = %if.end322
  %90 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5597
  %end_327 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %90, i64 0, i32 1, !dbg !5597
  %91 = load %struct.rtx_def*, %struct.rtx_def** %end_327, align 8, !dbg !5597
  %call328 = call i32 @any_uncondjump_p(%struct.rtx_def* %91) #6, !dbg !5598
  %tobool329 = icmp eq i32 %call328, 0, !dbg !5598
  br i1 %tobool329, label %if.end332, label %if.then330, !dbg !5599

if.then330:                                       ; preds = %land.lhs.true324
  %index331 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5600
  %92 = load i32, i32* %index331, align 8, !dbg !5600
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.46, i64 0, i64 0), i32 %92) #6, !dbg !5602
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end332, !dbg !5603

if.end332:                                        ; preds = %land.lhs.true324, %if.end322, %if.then330
  %err.17 = phi i32 [ 1, %if.then330 ], [ %err.16, %land.lhs.true324 ], [ %err.16, %if.end322 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.17, metadata !5377, metadata !DIExpression()), !dbg !5395
  %cmp333 = icmp eq i32 %n_branch.0.lcssa, 1, !dbg !5604
  br i1 %cmp333, label %if.end343, label %land.lhs.true335, !dbg !5606

land.lhs.true335:                                 ; preds = %if.end332
  %93 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5607
  %end_338 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %93, i64 0, i32 1, !dbg !5607
  %94 = load %struct.rtx_def*, %struct.rtx_def** %end_338, align 8, !dbg !5607
  %call339 = call i32 @any_uncondjump_p(%struct.rtx_def* %94) #6, !dbg !5608
  %tobool340 = icmp eq i32 %call339, 0, !dbg !5608
  br i1 %tobool340, label %if.end343, label %if.then341, !dbg !5609

if.then341:                                       ; preds = %land.lhs.true335
  %index342 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5610
  %95 = load i32, i32* %index342, align 8, !dbg !5610
  call void (i8*, ...) @error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.47, i64 0, i64 0), i32 %95) #6, !dbg !5612
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end343, !dbg !5613

if.end343:                                        ; preds = %land.lhs.true335, %if.end332, %if.then341
  %err.18 = phi i32 [ 1, %if.then341 ], [ %err.17, %land.lhs.true335 ], [ %err.17, %if.end332 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.18, metadata !5377, metadata !DIExpression()), !dbg !5395
  br i1 %cmp333, label %if.end368, label %land.lhs.true346, !dbg !5614

land.lhs.true346:                                 ; preds = %if.end343
  %96 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5616
  %end_349 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %96, i64 0, i32 1, !dbg !5616
  %97 = load %struct.rtx_def*, %struct.rtx_def** %end_349, align 8, !dbg !5616
  %call350 = call i32 @any_condjump_p(%struct.rtx_def* %97) #6, !dbg !5617
  %tobool351 = icmp eq i32 %call350, 0, !dbg !5617
  br i1 %tobool351, label %if.end368, label %land.lhs.true352, !dbg !5618

land.lhs.true352:                                 ; preds = %land.lhs.true346
  %98 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5619
  %end_355 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %98, i64 0, i32 1, !dbg !5619
  %99 = load %struct.rtx_def*, %struct.rtx_def** %end_355, align 8, !dbg !5619
  %u356 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i64 0, i32 1, !dbg !5619
  %arrayidx358 = getelementptr inbounds %union.u, %union.u* %u356, i64 1, i32 0, i32 1, !dbg !5619
  %rt_rtx359 = bitcast %struct.object_block** %arrayidx358 to %struct.rtx_def**, !dbg !5619
  %100 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx359, align 8, !dbg !5619
  %dest360 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %fallthru.0.lcssa, i64 0, i32 1, !dbg !5620
  %101 = load %struct.basic_block_def*, %struct.basic_block_def** %dest360, align 8, !dbg !5620
  %il361 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %101, i64 0, i32 7, !dbg !5620
  %rtl362 = bitcast %union.basic_block_il_dependent* %il361 to %struct.rtl_bb_info**, !dbg !5620
  %102 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl362, align 8, !dbg !5620
  %head_363 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %102, i64 0, i32 0, !dbg !5620
  %103 = load %struct.rtx_def*, %struct.rtx_def** %head_363, align 8, !dbg !5620
  %cmp364 = icmp eq %struct.rtx_def* %100, %103, !dbg !5621
  br i1 %cmp364, label %if.end368, label %if.then366, !dbg !5622

if.then366:                                       ; preds = %land.lhs.true352
  %index367 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5623
  %104 = load i32, i32* %index367, align 8, !dbg !5623
  call void (i8*, ...) @error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.48, i64 0, i64 0), i32 %104) #6, !dbg !5625
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end368, !dbg !5626

if.end368:                                        ; preds = %land.lhs.true352, %land.lhs.true346, %if.end343, %if.then366
  %err.19 = phi i32 [ 1, %if.then366 ], [ %err.18, %land.lhs.true352 ], [ %err.18, %land.lhs.true346 ], [ %err.18, %if.end343 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.19, metadata !5377, metadata !DIExpression()), !dbg !5395
  %tobool369 = icmp eq i32 %n_call.0.lcssa, 0, !dbg !5627
  br i1 %tobool369, label %if.end380, label %land.lhs.true370, !dbg !5629

land.lhs.true370:                                 ; preds = %if.end368
  %105 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5630
  %end_373 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %105, i64 0, i32 1, !dbg !5630
  %106 = bitcast %struct.rtx_def** %end_373 to i32**, !dbg !5630
  %107 = load i32*, i32** %106, align 8, !dbg !5630
  %bf.load374 = load i32, i32* %107, align 8, !dbg !5630
  %bf.clear375 = and i32 %bf.load374, 65535, !dbg !5630
  %cmp376 = icmp eq i32 %bf.clear375, 10, !dbg !5630
  br i1 %cmp376, label %if.end380, label %if.then378, !dbg !5631

if.then378:                                       ; preds = %land.lhs.true370
  %index379 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5632
  %108 = load i32, i32* %index379, align 8, !dbg !5632
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.49, i64 0, i64 0), i32 %108) #6, !dbg !5634
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end380, !dbg !5635

if.end380:                                        ; preds = %if.end368, %if.then378, %land.lhs.true370
  %err.20 = phi i32 [ %err.19, %land.lhs.true370 ], [ 1, %if.then378 ], [ %err.19, %if.end368 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.20, metadata !5377, metadata !DIExpression()), !dbg !5395
  %tobool381 = icmp eq i32 %n_abnormal.0.lcssa, 0, !dbg !5636
  br i1 %tobool381, label %if.end415, label %land.lhs.true382, !dbg !5638

land.lhs.true382:                                 ; preds = %if.end380
  %109 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5639
  %end_385 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %109, i64 0, i32 1, !dbg !5639
  %110 = bitcast %struct.rtx_def** %end_385 to i32**, !dbg !5639
  %111 = load i32*, i32** %110, align 8, !dbg !5639
  %bf.load386 = load i32, i32* %111, align 8, !dbg !5639
  %bf.clear387 = and i32 %bf.load386, 65535, !dbg !5639
  %cmp388 = icmp ne i32 %bf.clear387, 10, !dbg !5639
  %cmp391 = icmp ne i32 %n_call.0.lcssa, %n_abnormal.0.lcssa, !dbg !5640
  %or.cond = and i1 %cmp388, %cmp391, !dbg !5641
  %112 = bitcast i32* %111 to %struct.rtx_def*, !dbg !5641
  br i1 %or.cond, label %land.lhs.true393, label %if.end415, !dbg !5641

land.lhs.true393:                                 ; preds = %land.lhs.true382
  %cmp399 = icmp eq i32 %bf.clear387, 9, !dbg !5642
  br i1 %cmp399, label %lor.lhs.false401, label %if.then413, !dbg !5643

lor.lhs.false401:                                 ; preds = %land.lhs.true393
  %call405 = call i32 @any_condjump_p(%struct.rtx_def* %112) #6, !dbg !5644
  %tobool406 = icmp eq i32 %call405, 0, !dbg !5644
  br i1 %tobool406, label %lor.lhs.false407, label %if.then413, !dbg !5645

lor.lhs.false407:                                 ; preds = %lor.lhs.false401
  %113 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5646
  %end_410 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %113, i64 0, i32 1, !dbg !5646
  %114 = load %struct.rtx_def*, %struct.rtx_def** %end_410, align 8, !dbg !5646
  %call411 = call i32 @any_uncondjump_p(%struct.rtx_def* %114) #6, !dbg !5647
  %tobool412 = icmp eq i32 %call411, 0, !dbg !5647
  br i1 %tobool412, label %if.end415, label %if.then413, !dbg !5648

if.then413:                                       ; preds = %lor.lhs.false407, %lor.lhs.false401, %land.lhs.true393
  %index414 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5649
  %115 = load i32, i32* %index414, align 8, !dbg !5649
  call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.50, i64 0, i64 0), i32 %115) #6, !dbg !5651
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end415, !dbg !5652

if.end415:                                        ; preds = %lor.lhs.false407, %if.end380, %land.lhs.true382, %if.then413
  %err.21 = phi i32 [ %err.20, %land.lhs.true382 ], [ 1, %if.then413 ], [ %err.20, %lor.lhs.false407 ], [ %err.20, %if.end380 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.21, metadata !5377, metadata !DIExpression()), !dbg !5395
  %116 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5653
  %head_418 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %116, i64 0, i32 0, !dbg !5653
  %index458 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5655
  br label %for.cond419, !dbg !5660

for.cond419:                                      ; preds = %for.inc466, %if.end415
  %117 = phi %struct.rtl_bb_info* [ %116, %if.end415 ], [ %.pre11, %for.inc466 ], !dbg !5661
  %err.22 = phi i32 [ %err.21, %if.end415 ], [ %err.23, %for.inc466 ], !dbg !5662
  %x.0.in = phi %struct.rtx_def** [ %head_418, %if.end415 ], [ %rt_rtx470, %for.inc466 ]
  %x.0 = load %struct.rtx_def*, %struct.rtx_def** %x.0.in, align 8, !dbg !5663
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !5376, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.22, metadata !5377, metadata !DIExpression()), !dbg !5395
  %end_422 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %117, i64 0, i32 1, !dbg !5661
  %118 = load %struct.rtx_def*, %struct.rtx_def** %end_422, align 8, !dbg !5661
  %119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5661
  %rt_rtx426 = bitcast %union.rtunion_def* %119 to %struct.rtx_def**, !dbg !5661
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx426, align 8, !dbg !5661
  %cmp427 = icmp eq %struct.rtx_def* %x.0, %120, !dbg !5664
  br i1 %cmp427, label %for.end471, label %for.body429, !dbg !5665

for.body429:                                      ; preds = %for.cond419
  %121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !5666
  %bf.load430 = load i32, i32* %121, align 8, !dbg !5666
  %bf.clear431 = and i32 %bf.load430, 65535, !dbg !5666
  %cmp432 = icmp eq i32 %bf.clear431, 11, !dbg !5666
  br i1 %cmp432, label %for.inc466, label %land.lhs.true434, !dbg !5667

land.lhs.true434:                                 ; preds = %for.body429
  %arrayidx437 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 1, !dbg !5668
  %rt_bb438 = bitcast %struct.object_block** %arrayidx437 to %struct.basic_block_def**, !dbg !5668
  %122 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb438, align 8, !dbg !5668
  %cmp439 = icmp eq %struct.basic_block_def* %122, %bb.1, !dbg !5669
  br i1 %cmp439, label %for.inc466, label %if.then441, !dbg !5670

if.then441:                                       ; preds = %land.lhs.true434
  call void @debug_rtx(%struct.rtx_def* %x.0) #6, !dbg !5671
  %123 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb438, align 8, !dbg !5672
  %tobool446 = icmp eq %struct.basic_block_def* %123, null, !dbg !5672
  %arrayidx456 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5655
  %rt_int457 = bitcast %union.rtunion_def* %arrayidx456 to i32*, !dbg !5655
  %124 = load i32, i32* %rt_int457, align 8, !dbg !5655
  %125 = load i32, i32* %index458, align 8, !dbg !5655
  br i1 %tobool446, label %if.then447, label %if.else453, !dbg !5673

if.then447:                                       ; preds = %if.then441
  call void (i8*, ...) @error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.51, i64 0, i64 0), i32 %124, i32 %125) #6, !dbg !5674
  br label %for.inc466, !dbg !5674

if.else453:                                       ; preds = %if.then441
  %index463 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %123, i64 0, i32 9, !dbg !5675
  %126 = load i32, i32* %index463, align 8, !dbg !5675
  call void (i8*, ...) @error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.52, i64 0, i64 0), i32 %124, i32 %125, i32 %126) #6, !dbg !5676
  br label %for.inc466

for.inc466:                                       ; preds = %land.lhs.true434, %for.body429, %if.else453, %if.then447
  %err.23 = phi i32 [ %err.22, %for.body429 ], [ %err.22, %land.lhs.true434 ], [ 1, %if.else453 ], [ 1, %if.then447 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.23, metadata !5377, metadata !DIExpression()), !dbg !5395
  %127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5677
  %rt_rtx470 = bitcast %union.rtunion_def* %127 to %struct.rtx_def**, !dbg !5677
  %.pre11 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5661
  br label %for.cond419, !dbg !5678, !llvm.loop !5679

for.end471:                                       ; preds = %for.cond419
  %.lcssa18 = phi %struct.rtl_bb_info* [ %117, %for.cond419 ], !dbg !5661
  %err.22.lcssa = phi i32 [ %err.22, %for.cond419 ], !dbg !5662
  %.lcssa = phi %struct.rtx_def* [ %118, %for.cond419 ], !dbg !5661
  call void @llvm.dbg.value(metadata i32 %err.22.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.22.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.22.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  %head_474 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %.lcssa18, i64 0, i32 0, !dbg !5681
  %128 = load %struct.rtx_def*, %struct.rtx_def** %head_474, align 8, !dbg !5681
  call void @llvm.dbg.value(metadata %struct.rtx_def* %128, metadata !5376, metadata !DIExpression()), !dbg !5395
  %129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i64 0, i32 0, !dbg !5682
  %bf.load475 = load i32, i32* %129, align 8, !dbg !5682
  %bf.clear476 = and i32 %bf.load475, 65535, !dbg !5682
  %cmp477 = icmp eq i32 %bf.clear476, 12, !dbg !5682
  br i1 %cmp477, label %if.then479, label %if.end492, !dbg !5684

if.then479:                                       ; preds = %for.end471
  %cmp483 = icmp eq %struct.rtx_def* %.lcssa, %128, !dbg !5685
  br i1 %cmp483, label %if.then485, label %if.end487, !dbg !5688

if.then485:                                       ; preds = %if.then479
  %130 = load i32, i32* %index458, align 8, !dbg !5689
  call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.53, i64 0, i64 0), i32 %130) #6, !dbg !5691
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end487, !dbg !5692

if.end487:                                        ; preds = %if.then485, %if.then479
  %err.24 = phi i32 [ 1, %if.then485 ], [ %err.22.lcssa, %if.then479 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.24, metadata !5377, metadata !DIExpression()), !dbg !5395
  %131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5693
  %rt_rtx491 = bitcast %union.rtunion_def* %131 to %struct.rtx_def**, !dbg !5693
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx491, align 8, !dbg !5693
  call void @llvm.dbg.value(metadata %struct.rtx_def* %132, metadata !5376, metadata !DIExpression()), !dbg !5395
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i64 0, i32 0, !dbg !5694
  %bf.load493.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !5696
  br label %if.end492, !dbg !5697

if.end492:                                        ; preds = %if.end487, %for.end471
  %bf.load493 = phi i32 [ %bf.load493.pre, %if.end487 ], [ %bf.load475, %for.end471 ], !dbg !5696
  %err.25 = phi i32 [ %err.24, %if.end487 ], [ %err.22.lcssa, %for.end471 ], !dbg !5476
  %x.1 = phi %struct.rtx_def* [ %132, %if.end487 ], [ %128, %for.end471 ], !dbg !5476
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1, metadata !5376, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.25, metadata !5377, metadata !DIExpression()), !dbg !5395
  %bf.clear494 = and i32 %bf.load493, 65535, !dbg !5696
  %cmp495 = icmp eq i32 %bf.clear494, 13, !dbg !5696
  br i1 %cmp495, label %land.lhs.true497, label %if.then511, !dbg !5696

land.lhs.true497:                                 ; preds = %if.end492
  %u498 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.1, i64 0, i32 1, !dbg !5696
  %133 = getelementptr inbounds %union.u, %union.u* %u498, i64 1, i32 0, i32 0, i64 0, !dbg !5696
  %rt_int501 = bitcast %union.rtunion_def* %133 to i32*, !dbg !5696
  %134 = load i32, i32* %rt_int501, align 8, !dbg !5696
  %cmp502 = icmp eq i32 %134, 10, !dbg !5696
  br i1 %cmp502, label %lor.lhs.false504, label %if.then511, !dbg !5698

lor.lhs.false504:                                 ; preds = %land.lhs.true497
  %arrayidx507 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.1, i64 0, i32 1, i32 0, i32 2, !dbg !5699
  %rt_bb508 = bitcast i64* %arrayidx507 to %struct.basic_block_def**, !dbg !5699
  %135 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb508, align 8, !dbg !5699
  %cmp509 = icmp eq %struct.basic_block_def* %135, %bb.1, !dbg !5700
  br i1 %cmp509, label %if.end513, label %if.then511, !dbg !5701

if.then511:                                       ; preds = %lor.lhs.false504, %land.lhs.true497, %if.end492
  %136 = load i32, i32* %index458, align 8, !dbg !5702
  call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.53, i64 0, i64 0), i32 %136) #6, !dbg !5704
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end513, !dbg !5705

if.end513:                                        ; preds = %lor.lhs.false504, %if.then511
  %err.26 = phi i32 [ 1, %if.then511 ], [ %err.25, %lor.lhs.false504 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.26, metadata !5377, metadata !DIExpression()), !dbg !5395
  %137 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5706
  %end_516 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %137, i64 0, i32 1, !dbg !5706
  %138 = load %struct.rtx_def*, %struct.rtx_def** %end_516, align 8, !dbg !5706
  %cmp517 = icmp eq %struct.rtx_def* %138, %x.1, !dbg !5708
  br i1 %cmp517, label %if.end564, label %if.else520, !dbg !5709

if.else520:                                       ; preds = %if.end513
  br label %for.cond525, !dbg !5710

for.cond525:                                      ; preds = %for.inc558, %if.else520
  %err.27 = phi i32 [ %err.26, %if.else520 ], [ %err.28, %for.inc558 ], !dbg !5476
  %x.1.pn = phi %struct.rtx_def* [ %x.1, %if.else520 ], [ %x.2, %for.inc558 ]
  %x.2.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.1.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5712
  %x.2.in = bitcast %union.rtunion_def* %x.2.in.in to %struct.rtx_def**, !dbg !5712
  %x.2 = load %struct.rtx_def*, %struct.rtx_def** %x.2.in, align 8, !dbg !5712
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.2, metadata !5376, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.27, metadata !5377, metadata !DIExpression()), !dbg !5395
  %tobool526 = icmp eq %struct.rtx_def* %x.2, null, !dbg !5713
  br i1 %tobool526, label %if.end564.loopexit, label %for.body527, !dbg !5713

for.body527:                                      ; preds = %for.cond525
  %139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.2, i64 0, i32 0, !dbg !5714
  %bf.load528 = load i32, i32* %139, align 8, !dbg !5714
  %bf.clear529 = and i32 %bf.load528, 65535, !dbg !5714
  %cmp530 = icmp eq i32 %bf.clear529, 13, !dbg !5714
  br i1 %cmp530, label %land.lhs.true532, label %if.end545, !dbg !5714

land.lhs.true532:                                 ; preds = %for.body527
  %u533 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.2, i64 0, i32 1, !dbg !5714
  %140 = getelementptr inbounds %union.u, %union.u* %u533, i64 1, i32 0, i32 0, i64 0, !dbg !5714
  %rt_int536 = bitcast %union.rtunion_def* %140 to i32*, !dbg !5714
  %141 = load i32, i32* %rt_int536, align 8, !dbg !5714
  %cmp537 = icmp eq i32 %141, 10, !dbg !5714
  br i1 %cmp537, label %if.then539, label %if.end545, !dbg !5718

if.then539:                                       ; preds = %land.lhs.true532
  %arrayidx542 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5719
  %rt_int543 = bitcast %union.rtunion_def* %arrayidx542 to i32*, !dbg !5719
  %142 = load i32, i32* %rt_int543, align 8, !dbg !5719
  %143 = load i32, i32* %index458, align 8, !dbg !5721
  call void (i8*, ...) @error(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.54, i64 0, i64 0), i32 %142, i32 %143) #6, !dbg !5722
  call void @llvm.dbg.value(metadata i32 1, metadata !5377, metadata !DIExpression()), !dbg !5395
  br label %if.end545, !dbg !5723

if.end545:                                        ; preds = %if.then539, %land.lhs.true532, %for.body527
  %err.28 = phi i32 [ 1, %if.then539 ], [ %err.27, %land.lhs.true532 ], [ %err.27, %for.body527 ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.28, metadata !5377, metadata !DIExpression()), !dbg !5395
  %144 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl98, align 8, !dbg !5724
  %end_548 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %144, i64 0, i32 1, !dbg !5724
  %145 = load %struct.rtx_def*, %struct.rtx_def** %end_548, align 8, !dbg !5724
  %cmp549 = icmp eq %struct.rtx_def* %x.2, %145, !dbg !5726
  br i1 %cmp549, label %if.end564.loopexit, label %if.end552, !dbg !5727

if.end552:                                        ; preds = %if.end545
  %call553 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* nonnull %x.2) #6, !dbg !5728
  %tobool554 = icmp eq i8 %call553, 0, !dbg !5728
  br i1 %tobool554, label %for.inc558, label %if.then555, !dbg !5730

if.then555:                                       ; preds = %if.end552
  %146 = load i32, i32* %index458, align 8, !dbg !5731
  call void (i8*, ...) @error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.55, i64 0, i64 0), i32 %146) #6, !dbg !5733
  call void @_fatal_insn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56, i64 0, i64 0), %struct.rtx_def* nonnull %x.2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2013, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5734
  br label %for.inc558, !dbg !5735

for.inc558:                                       ; preds = %if.end552, %if.then555
  br label %for.cond525, !dbg !5736, !llvm.loop !5737

if.end564.loopexit:                               ; preds = %if.end545, %for.cond525
  %err.30.ph = phi i32 [ %err.28, %if.end545 ], [ %err.27, %for.cond525 ]
  br label %if.end564, !dbg !5739

if.end564:                                        ; preds = %if.end564.loopexit, %if.end513
  %err.30 = phi i32 [ %err.26, %if.end513 ], [ %err.30.ph, %if.end564.loopexit ], !dbg !5476
  call void @llvm.dbg.value(metadata i32 %err.30, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #8, !dbg !5739
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8, !dbg !5739
  %.pre5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5481
  %cfg93.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre5, i64 0, i32 1, !dbg !5740
  %.pre6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg93.phi.trans.insert, align 8, !dbg !5481
  %x_entry_block_ptr94.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre6, i64 0, i32 0, !dbg !5740
  %.pre7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr94.phi.trans.insert, align 8, !dbg !5481
  br label %for.cond91, !dbg !5481, !llvm.loop !5741

for.end567:                                       ; preds = %for.cond91
  %err.8.lcssa = phi i32 [ %err.8, %for.cond91 ], !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.8.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.8.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %err.8.lcssa, metadata !5377, metadata !DIExpression()), !dbg !5395
  ret i32 %err.8.lcssa, !dbg !5743
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @cfg_layout_create_basic_block(i8* %head, i8* %end, %struct.basic_block_def* %after) #4 !dbg !5744 {
entry:
  call void @llvm.dbg.value(metadata i8* %head, metadata !5746, metadata !DIExpression()), !dbg !5750
  call void @llvm.dbg.value(metadata i8* %end, metadata !5747, metadata !DIExpression()), !dbg !5750
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !5748, metadata !DIExpression()), !dbg !5750
  %call = tail call %struct.basic_block_def* @rtl_create_basic_block(i8* %head, i8* %end, %struct.basic_block_def* %after) #7, !dbg !5751
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !5749, metadata !DIExpression()), !dbg !5750
  ret %struct.basic_block_def* %call, !dbg !5752
}

; Function Attrs: nounwind uwtable
define internal %struct.edge_def* @cfg_layout_redirect_edge_and_branch(%struct.edge_def* %e, %struct.basic_block_def* %dest) #4 !dbg !5753 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !5755, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dest, metadata !5756, metadata !DIExpression()), !dbg !5767
  %src1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !5768
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !5768
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !5757, metadata !DIExpression()), !dbg !5767
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !5769
  %1 = load i32, i32* %flags, align 8, !dbg !5769
  %and = and i32 %1, 12, !dbg !5771
  %tobool = icmp eq i32 %and, 0, !dbg !5771
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5772

if.end:                                           ; preds = %entry
  %dest2 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !5773
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest2, align 8, !dbg !5773
  %cmp = icmp eq %struct.basic_block_def* %2, %dest, !dbg !5775
  br i1 %cmp, label %cleanup, label %if.end4, !dbg !5776

if.end4:                                          ; preds = %if.end
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5777
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !5777
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5777
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !5777
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5777
  %cmp6 = icmp eq %struct.basic_block_def* %0, %5, !dbg !5779
  br i1 %cmp6, label %if.end9, label %land.lhs.true, !dbg !5780

land.lhs.true:                                    ; preds = %if.end4
  %call = tail call %struct.edge_def* @try_redirect_by_replacing_jump(%struct.edge_def* %e, %struct.basic_block_def* %dest, i8 zeroext 1) #7, !dbg !5781
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !5758, metadata !DIExpression()), !dbg !5767
  %tobool7 = icmp eq %struct.edge_def* %call, null, !dbg !5782
  br i1 %tobool7, label %land.lhs.true.if.end9_crit_edge, label %if.then8, !dbg !5783

land.lhs.true.if.end9_crit_edge:                  ; preds = %land.lhs.true
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !5784
  %.pre1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5786
  %cfg12.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre1, i64 0, i32 1, !dbg !5787
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12.phi.trans.insert, align 8, !dbg !5786
  %x_entry_block_ptr13.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre2, i64 0, i32 0, !dbg !5787
  %.pre3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr13.phi.trans.insert, align 8, !dbg !5786
  br label %if.end9, !dbg !5783

if.then8:                                         ; preds = %land.lhs.true
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %0) #6, !dbg !5788
  br label %cleanup, !dbg !5790

if.end9:                                          ; preds = %land.lhs.true.if.end9_crit_edge, %if.end4
  %6 = phi %struct.basic_block_def* [ %.pre3, %land.lhs.true.if.end9_crit_edge ], [ %0, %if.end4 ], !dbg !5786
  %7 = phi %struct.basic_block_def* [ %.pre, %land.lhs.true.if.end9_crit_edge ], [ %0, %if.end4 ], !dbg !5784
  %cmp14 = icmp eq %struct.basic_block_def* %7, %6, !dbg !5791
  br i1 %cmp14, label %land.lhs.true15, label %if.end9.if.end31_crit_edge, !dbg !5792

if.end9.if.end31_crit_edge:                       ; preds = %if.end9
  %.pre5 = load i32, i32* %flags, align 8, !dbg !5793
  br label %if.end31, !dbg !5792

land.lhs.true15:                                  ; preds = %if.end9
  %8 = load i32, i32* %flags, align 8, !dbg !5794
  %and17 = and i32 %8, 1, !dbg !5795
  %tobool18 = icmp eq i32 %and17, 0, !dbg !5795
  br i1 %tobool18, label %if.end31, label %land.lhs.true19, !dbg !5796

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %and21 = and i32 %8, 14, !dbg !5797
  %tobool22 = icmp eq i32 %and21, 0, !dbg !5797
  br i1 %tobool22, label %if.then23, label %if.end31, !dbg !5798

if.then23:                                        ; preds = %land.lhs.true19
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5799
  %tobool24 = icmp eq %struct._IO_FILE* %9, null, !dbg !5799
  br i1 %tobool24, label %if.end29, label %if.then25, !dbg !5802

if.then25:                                        ; preds = %if.then23
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 9, !dbg !5803
  %10 = load i32, i32* %index, align 8, !dbg !5803
  %index27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %dest, i64 0, i32 9, !dbg !5804
  %11 = load i32, i32* %index27, align 8, !dbg !5804
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.57, i64 0, i64 0), i32 %10, i32 %11) #6, !dbg !5805
  %.pre4 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !5806
  br label %if.end29, !dbg !5805

if.end29:                                         ; preds = %if.then23, %if.then25
  %12 = phi %struct.basic_block_def* [ %6, %if.then23 ], [ %.pre4, %if.then25 ], !dbg !5806
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %12) #6, !dbg !5807
  tail call void @redirect_edge_succ(%struct.edge_def* %e, %struct.basic_block_def* %dest) #6, !dbg !5808
  br label %cleanup, !dbg !5809

if.end31:                                         ; preds = %if.end9.if.end31_crit_edge, %land.lhs.true19, %land.lhs.true15
  %13 = phi i32 [ %.pre5, %if.end9.if.end31_crit_edge ], [ %8, %land.lhs.true19 ], [ %8, %land.lhs.true15 ], !dbg !5793
  %and33 = and i32 %13, 1, !dbg !5810
  %tobool34 = icmp eq i32 %and33, 0, !dbg !5810
  br i1 %tobool34, label %if.else, label %if.then35, !dbg !5811

if.then35:                                        ; preds = %if.end31
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !5812
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5812
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5812
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 1, !dbg !5812
  %15 = bitcast %struct.rtx_def** %end_ to i32**, !dbg !5812
  %16 = load i32*, i32** %15, align 8, !dbg !5812
  %bf.load = load i32, i32* %16, align 8, !dbg !5812
  %bf.clear = and i32 %bf.load, 65535, !dbg !5812
  %cmp36 = icmp eq i32 %bf.clear, 9, !dbg !5812
  br i1 %cmp36, label %land.lhs.true37, label %if.end62, !dbg !5813

land.lhs.true37:                                  ; preds = %if.then35
  %17 = bitcast i32* %16 to %struct.rtx_def*, !dbg !5813
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %dest2, align 8, !dbg !5814
  %il39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i64 0, i32 7, !dbg !5814
  %rtl40 = bitcast %union.basic_block_il_dependent* %il39 to %struct.rtl_bb_info**, !dbg !5814
  %19 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl40, align 8, !dbg !5814
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %19, i64 0, i32 0, !dbg !5814
  %20 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5814
  %call44 = tail call zeroext i8 @label_is_jump_target_p(%struct.rtx_def* %20, %struct.rtx_def* %17) #6, !dbg !5815
  %tobool45 = icmp eq i8 %call44, 0, !dbg !5815
  br i1 %tobool45, label %if.end62, label %if.then46, !dbg !5816

if.then46:                                        ; preds = %land.lhs.true37
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5817
  %tobool47 = icmp eq %struct._IO_FILE* %21, null, !dbg !5817
  br i1 %tobool47, label %if.end55, label %if.then48, !dbg !5819

if.then48:                                        ; preds = %if.then46
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !5820
  %index50 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 9, !dbg !5821
  %23 = load i32, i32* %index50, align 8, !dbg !5821
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %dest2, align 8, !dbg !5822
  %index52 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i64 0, i32 9, !dbg !5823
  %25 = load i32, i32* %index52, align 8, !dbg !5823
  %index53 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %dest, i64 0, i32 9, !dbg !5824
  %26 = load i32, i32* %index53, align 8, !dbg !5824
  %call54 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.58, i64 0, i64 0), i32 %23, i32 %25, i32 %26) #6, !dbg !5825
  br label %if.end55, !dbg !5825

if.end55:                                         ; preds = %if.then46, %if.then48
  %27 = load i32, i32* %flags, align 8, !dbg !5826
  %and57 = and i32 %27, -2, !dbg !5826
  store i32 %and57, i32* %flags, align 8, !dbg !5826
  %call58 = tail call fastcc %struct.edge_def* @redirect_branch_edge(%struct.edge_def* %e, %struct.basic_block_def* %dest) #7, !dbg !5827
  call void @llvm.dbg.value(metadata %struct.edge_def* %call58, metadata !5759, metadata !DIExpression()), !dbg !5828
  %tobool59 = icmp eq %struct.edge_def* %call58, null, !dbg !5829
  br i1 %tobool59, label %cond.true, label %cond.end, !dbg !5829

cond.true:                                        ; preds = %if.end55
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2519, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5829
  br label %cond.end, !dbg !5829

cond.end:                                         ; preds = %if.end55, %cond.true
  %28 = load i32, i32* %flags, align 8, !dbg !5830
  %or = or i32 %28, 1, !dbg !5830
  store i32 %or, i32* %flags, align 8, !dbg !5830
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !5831
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %29) #6, !dbg !5832
  br label %cleanup

if.end62:                                         ; preds = %land.lhs.true37, %if.then35
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 1, !dbg !5833
  %30 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5833
  %tobool63 = icmp eq %struct.VEC_edge_gc* %30, null, !dbg !5833
  br i1 %tobool63, label %cond.end67, label %cond.true64, !dbg !5833

cond.true64:                                      ; preds = %if.end62
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %30, i64 0, i32 0, !dbg !5833
  br label %cond.end67, !dbg !5833

cond.end67:                                       ; preds = %if.end62, %cond.true64
  %cond68 = phi %struct.VEC_edge_base* [ %base, %cond.true64 ], [ null, %if.end62 ], !dbg !5833
  %call69 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond68) #7, !dbg !5833
  %cmp70 = icmp eq i32 %call69, 2, !dbg !5834
  br i1 %cmp70, label %if.then72, label %if.end114, !dbg !5835

if.then72:                                        ; preds = %cond.end67
  %31 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5836
  %tobool74 = icmp eq %struct.VEC_edge_gc* %31, null, !dbg !5836
  br i1 %tobool74, label %cond.end79, label %cond.true75, !dbg !5836

cond.true75:                                      ; preds = %if.then72
  %base77 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %31, i64 0, i32 0, !dbg !5836
  br label %cond.end79, !dbg !5836

cond.end79:                                       ; preds = %if.then72, %cond.true75
  %cond80 = phi %struct.VEC_edge_base* [ %base77, %cond.true75 ], [ null, %if.then72 ], !dbg !5836
  br i1 %tobool74, label %cond.end87, label %cond.true83, !dbg !5836

cond.true83:                                      ; preds = %cond.end79
  %base85 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %31, i64 0, i32 0, !dbg !5836
  br label %cond.end87, !dbg !5836

cond.end87:                                       ; preds = %cond.end79, %cond.true83
  %cond88 = phi %struct.VEC_edge_base* [ %base85, %cond.true83 ], [ null, %cond.end79 ], !dbg !5836
  %call89 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond88, i32 0) #7, !dbg !5836
  %cmp90 = icmp eq %struct.edge_def* %call89, %e, !dbg !5836
  %conv91 = zext i1 %cmp90 to i32, !dbg !5836
  %call92 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond80, i32 %conv91) #7, !dbg !5836
  call void @llvm.dbg.value(metadata %struct.edge_def* %call92, metadata !5764, metadata !DIExpression()), !dbg !5837
  %dest93 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call92, i64 0, i32 1, !dbg !5838
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %dest93, align 8, !dbg !5838
  %cmp94 = icmp eq %struct.basic_block_def* %32, %dest, !dbg !5840
  br i1 %cmp94, label %land.lhs.true96, label %if.end114, !dbg !5841

land.lhs.true96:                                  ; preds = %cond.end87
  %33 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5842
  %end_99 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %33, i64 0, i32 1, !dbg !5842
  %34 = load %struct.rtx_def*, %struct.rtx_def** %end_99, align 8, !dbg !5842
  %call100 = tail call i32 @any_condjump_p(%struct.rtx_def* %34) #6, !dbg !5843
  %tobool101 = icmp eq i32 %call100, 0, !dbg !5843
  br i1 %tobool101, label %if.end114, label %land.lhs.true102, !dbg !5844

land.lhs.true102:                                 ; preds = %land.lhs.true96
  %35 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5845
  %end_105 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %35, i64 0, i32 1, !dbg !5845
  %36 = load %struct.rtx_def*, %struct.rtx_def** %end_105, align 8, !dbg !5845
  %call106 = tail call i32 @onlyjump_p(%struct.rtx_def* %36) #6, !dbg !5846
  %tobool107 = icmp eq i32 %call106, 0, !dbg !5846
  br i1 %tobool107, label %if.end114, label %if.then108, !dbg !5847

if.then108:                                       ; preds = %land.lhs.true102
  %37 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5848
  %end_111 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %37, i64 0, i32 1, !dbg !5848
  %38 = load %struct.rtx_def*, %struct.rtx_def** %end_111, align 8, !dbg !5848
  %call112 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %38) #7, !dbg !5849
  br label %if.end114, !dbg !5849

if.end114:                                        ; preds = %land.lhs.true102, %land.lhs.true96, %cond.end87, %if.then108, %cond.end67
  %call115 = tail call %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def* %e, %struct.basic_block_def* %dest) #6, !dbg !5850
  call void @llvm.dbg.value(metadata %struct.edge_def* %call115, metadata !5758, metadata !DIExpression()), !dbg !5767
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5851
  %tobool116 = icmp eq %struct._IO_FILE* %39, null, !dbg !5851
  br i1 %tobool116, label %if.end126, label %if.then117, !dbg !5853

if.then117:                                       ; preds = %if.end114
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !5854
  %index119 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i64 0, i32 9, !dbg !5855
  %41 = load i32, i32* %index119, align 8, !dbg !5855
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %dest2, align 8, !dbg !5856
  %index121 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %42, i64 0, i32 9, !dbg !5857
  %43 = load i32, i32* %index121, align 8, !dbg !5857
  %index122 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %dest, i64 0, i32 9, !dbg !5858
  %44 = load i32, i32* %index122, align 8, !dbg !5858
  %call123 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %39, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.59, i64 0, i64 0), i32 %41, i32 %43, i32 %44) #6, !dbg !5859
  br label %if.end126, !dbg !5859

if.else:                                          ; preds = %if.end31
  %call125 = tail call fastcc %struct.edge_def* @redirect_branch_edge(%struct.edge_def* %e, %struct.basic_block_def* %dest) #7, !dbg !5860
  call void @llvm.dbg.value(metadata %struct.edge_def* %call125, metadata !5758, metadata !DIExpression()), !dbg !5767
  br label %if.end126

if.end126:                                        ; preds = %if.end114, %if.then117, %if.else
  %ret.0 = phi %struct.edge_def* [ %call125, %if.else ], [ %call115, %if.then117 ], [ %call115, %if.end114 ], !dbg !5861
  call void @llvm.dbg.value(metadata %struct.edge_def* %ret.0, metadata !5758, metadata !DIExpression()), !dbg !5767
  %il127 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !5862
  %rtl128 = bitcast %union.basic_block_il_dependent* %il127 to %struct.rtl_bb_info**, !dbg !5862
  %45 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl128, align 8, !dbg !5862
  %end_129 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %45, i64 0, i32 1, !dbg !5862
  %46 = load %struct.rtx_def*, %struct.rtx_def** %end_129, align 8, !dbg !5862
  %call130 = tail call i32 @simplejump_p(%struct.rtx_def* %46) #6, !dbg !5862
  %tobool131 = icmp eq i32 %call130, 0, !dbg !5862
  br i1 %tobool131, label %cond.end134, label %cond.true132, !dbg !5862

cond.true132:                                     ; preds = %if.end126
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2545, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5862
  br label %cond.end134, !dbg !5862

cond.end134:                                      ; preds = %if.end126, %cond.true132
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %0) #6, !dbg !5863
  br label %cleanup, !dbg !5864

cleanup:                                          ; preds = %entry, %if.end, %cond.end134, %cond.end, %if.end29, %if.then8
  %retval.0 = phi %struct.edge_def* [ %call, %if.then8 ], [ %e, %cond.end ], [ %ret.0, %cond.end134 ], [ %e, %if.end29 ], [ null, %entry ], [ %e, %if.end ], !dbg !5767
  ret %struct.edge_def* %retval.0, !dbg !5865
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @cfg_layout_redirect_edge_and_branch_force(%struct.edge_def* %e, %struct.basic_block_def* %dest) #4 !dbg !5866 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !5868, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dest, metadata !5869, metadata !DIExpression()), !dbg !5871
  %call = tail call %struct.edge_def* @cfg_layout_redirect_edge_and_branch(%struct.edge_def* %e, %struct.basic_block_def* %dest) #7, !dbg !5872
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !5870, metadata !DIExpression()), !dbg !5871
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !5873
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5873

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2557, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5873
  br label %cond.end, !dbg !5873

cond.end:                                         ; preds = %entry, %cond.true
  ret %struct.basic_block_def* null, !dbg !5874
}

; Function Attrs: nounwind uwtable
define internal void @cfg_layout_delete_block(%struct.basic_block_def* %bb) #4 !dbg !5875 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5877, metadata !DIExpression()), !dbg !5884
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !5885
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5885
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5885
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !5885
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5885
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5885
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5885
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5885
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !5880, metadata !DIExpression()), !dbg !5884
  %header = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 2, !dbg !5886
  %4 = load %struct.rtx_def*, %struct.rtx_def** %header, align 8, !dbg !5886
  %tobool = icmp eq %struct.rtx_def* %4, null, !dbg !5888
  br i1 %tobool, label %if.end45, label %if.then, !dbg !5889

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5879, metadata !DIExpression()), !dbg !5884
  %tobool6 = icmp eq %struct.rtx_def* %3, null, !dbg !5890
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !5893

if.then7:                                         ; preds = %if.then
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5894
  %rt_rtx14 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !5894
  store %struct.rtx_def* %4, %struct.rtx_def** %rt_rtx14, align 8, !dbg !5895
  br label %if.end, !dbg !5894

if.else:                                          ; preds = %if.then
  tail call void @set_first_insn(%struct.rtx_def* nonnull %4) #6, !dbg !5896
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5897
  %header20 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 2, !dbg !5897
  %7 = load %struct.rtx_def*, %struct.rtx_def** %header20, align 8, !dbg !5897
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5897
  %rt_rtx24 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !5897
  store %struct.rtx_def* %3, %struct.rtx_def** %rt_rtx24, align 8, !dbg !5898
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5899
  %header27 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 2, !dbg !5900
  %insn.0.pre = load %struct.rtx_def*, %struct.rtx_def** %header27, align 8, !dbg !5901
  br label %while.cond, !dbg !5902

while.cond:                                       ; preds = %while.body, %if.end
  %insn.0 = phi %struct.rtx_def* [ %insn.0.pre, %if.end ], [ %11, %while.body ], !dbg !5901
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5878, metadata !DIExpression()), !dbg !5884
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5903
  %rt_rtx31 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !5903
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !5903
  %tobool32 = icmp eq %struct.rtx_def* %11, null, !dbg !5902
  br i1 %tobool32, label %while.end, label %while.body, !dbg !5902

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !5902, !llvm.loop !5904

while.end:                                        ; preds = %while.cond
  %insn.0.lcssa = phi %struct.rtx_def* [ %insn.0, %while.cond ], !dbg !5901
  %rt_rtx31.lcssa = phi %struct.rtx_def** [ %rt_rtx31, %while.cond ], !dbg !5903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5878, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5878, metadata !DIExpression()), !dbg !5884
  store %struct.rtx_def* %1, %struct.rtx_def** %rt_rtx31.lcssa, align 8, !dbg !5906
  store %struct.rtx_def* %insn.0.lcssa, %struct.rtx_def** %rt_rtx, align 8, !dbg !5907
  %.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5908
  br label %if.end45, !dbg !5909

if.end45:                                         ; preds = %entry, %while.end
  %12 = phi %struct.rtl_bb_info* [ %0, %entry ], [ %.pre, %while.end ], !dbg !5910
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 1, !dbg !5908
  %13 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5908
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5908
  %rt_rtx51 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !5908
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !5908
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !5879, metadata !DIExpression()), !dbg !5884
  %footer = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 3, !dbg !5912
  %16 = load %struct.rtx_def*, %struct.rtx_def** %footer, align 8, !dbg !5912
  %tobool54 = icmp eq %struct.rtx_def* %16, null, !dbg !5913
  br i1 %tobool54, label %if.end167, label %if.then55, !dbg !5914

if.then55:                                        ; preds = %if.end45
  br label %while.cond59, !dbg !5915

while.cond59:                                     ; preds = %if.end114, %if.then55
  %insn.1 = phi %struct.rtx_def* [ %16, %if.then55 ], [ %insn.1.pre, %if.end114 ], !dbg !5917
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !5878, metadata !DIExpression()), !dbg !5884
  %tobool60 = icmp eq %struct.rtx_def* %insn.1, null, !dbg !5915
  br i1 %tobool60, label %while.end119, label %while.body61, !dbg !5915

while.body61:                                     ; preds = %while.cond59
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !5918
  %bf.load = load i32, i32* %17, align 8, !dbg !5918
  %bf.clear = and i32 %bf.load, 65535, !dbg !5918
  %cmp = icmp eq i32 %bf.clear, 11, !dbg !5918
  br i1 %cmp, label %if.then62, label %if.end109, !dbg !5921

if.then62:                                        ; preds = %while.body61
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5922
  %rt_rtx66 = bitcast %union.rtunion_def* %18 to %struct.rtx_def**, !dbg !5922
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx66, align 8, !dbg !5922
  %tobool67 = icmp eq %struct.rtx_def* %19, null, !dbg !5922
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5925
  %21 = bitcast %union.rtunion_def* %20 to i64*, !dbg !5925
  %22 = load i64, i64* %21, align 8, !dbg !5925
  br i1 %tobool67, label %if.else81, label %if.then68, !dbg !5926

if.then68:                                        ; preds = %if.then62
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5927
  %24 = bitcast %union.rtunion_def* %23 to i64*, !dbg !5928
  store i64 %22, i64* %24, align 8, !dbg !5928
  br label %if.end89, !dbg !5927

if.else81:                                        ; preds = %if.then62
  %25 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5929
  %footer88 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %25, i64 0, i32 3, !dbg !5930
  %26 = bitcast %struct.rtx_def** %footer88 to i64*, !dbg !5931
  store i64 %22, i64* %26, align 8, !dbg !5931
  br label %if.end89

if.end89:                                         ; preds = %if.else81, %if.then68
  %rt_rtx93 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !5932
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93, align 8, !dbg !5932
  %tobool94 = icmp eq %struct.rtx_def* %27, null, !dbg !5932
  br i1 %tobool94, label %if.end109, label %if.then95, !dbg !5934

if.then95:                                        ; preds = %if.end89
  %28 = bitcast %union.rtunion_def* %18 to i64*, !dbg !5935
  %29 = load i64, i64* %28, align 8, !dbg !5935
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5936
  %31 = bitcast %union.rtunion_def* %30 to i64*, !dbg !5937
  store i64 %29, i64* %31, align 8, !dbg !5937
  br label %if.end109, !dbg !5936

if.end109:                                        ; preds = %if.end89, %if.then95, %while.body61
  %bf.load110 = load i32, i32* %17, align 8, !dbg !5938
  %bf.clear111 = and i32 %bf.load110, 65535, !dbg !5938
  %cmp112 = icmp eq i32 %bf.clear111, 12, !dbg !5938
  br i1 %cmp112, label %while.end119, label %if.end114, !dbg !5940

if.end114:                                        ; preds = %if.end109
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5941
  %rt_rtx118 = bitcast %union.rtunion_def* %32 to %struct.rtx_def**, !dbg !5941
  %insn.1.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx118, align 8, !dbg !5917
  br label %while.cond59, !dbg !5915, !llvm.loop !5942

while.end119:                                     ; preds = %while.cond59, %if.end109
  %33 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5944
  %footer122 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %33, i64 0, i32 3, !dbg !5946
  %34 = load %struct.rtx_def*, %struct.rtx_def** %footer122, align 8, !dbg !5946
  %tobool123 = icmp eq %struct.rtx_def* %34, null, !dbg !5947
  br i1 %tobool123, label %if.end167, label %if.then124, !dbg !5948

if.then124:                                       ; preds = %while.end119
  %35 = ptrtoint %struct.rtx_def* %34 to i64, !dbg !5948
  %end_127 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %33, i64 0, i32 1, !dbg !5949
  %36 = load %struct.rtx_def*, %struct.rtx_def** %end_127, align 8, !dbg !5949
  call void @llvm.dbg.value(metadata %struct.rtx_def* %36, metadata !5878, metadata !DIExpression()), !dbg !5884
  %37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5951
  %38 = bitcast %union.rtunion_def* %37 to i64*, !dbg !5952
  store i64 %35, i64* %38, align 8, !dbg !5952
  %39 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5953
  %footer137 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %39, i64 0, i32 3, !dbg !5953
  %40 = load %struct.rtx_def*, %struct.rtx_def** %footer137, align 8, !dbg !5953
  %41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5953
  %rt_rtx141 = bitcast %union.rtunion_def* %41 to %struct.rtx_def**, !dbg !5953
  store %struct.rtx_def* %36, %struct.rtx_def** %rt_rtx141, align 8, !dbg !5954
  br label %while.cond142, !dbg !5955

while.cond142:                                    ; preds = %while.body148, %if.then124
  %insn.2 = phi %struct.rtx_def* [ %36, %if.then124 ], [ %43, %while.body148 ], !dbg !5956
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2, metadata !5878, metadata !DIExpression()), !dbg !5884
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5957
  %rt_rtx146 = bitcast %union.rtunion_def* %42 to %struct.rtx_def**, !dbg !5957
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx146, align 8, !dbg !5957
  %tobool147 = icmp eq %struct.rtx_def* %43, null, !dbg !5955
  br i1 %tobool147, label %while.end153, label %while.body148, !dbg !5955

while.body148:                                    ; preds = %while.cond142
  call void @llvm.dbg.value(metadata %struct.rtx_def* %43, metadata !5878, metadata !DIExpression()), !dbg !5884
  br label %while.cond142, !dbg !5955, !llvm.loop !5958

while.end153:                                     ; preds = %while.cond142
  %insn.2.lcssa = phi %struct.rtx_def* [ %insn.2, %while.cond142 ], !dbg !5956
  %rt_rtx146.lcssa = phi %struct.rtx_def** [ %rt_rtx146, %while.cond142 ], !dbg !5957
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2.lcssa, metadata !5878, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2.lcssa, metadata !5878, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2.lcssa, metadata !5878, metadata !DIExpression()), !dbg !5884
  store %struct.rtx_def* %15, %struct.rtx_def** %rt_rtx146.lcssa, align 8, !dbg !5960
  %tobool158 = icmp eq %struct.rtx_def* %15, null, !dbg !5961
  br i1 %tobool158, label %if.else164, label %if.then159, !dbg !5963

if.then159:                                       ; preds = %while.end153
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5964
  %rt_rtx163 = bitcast %union.rtunion_def* %44 to %struct.rtx_def**, !dbg !5964
  store %struct.rtx_def* %insn.2.lcssa, %struct.rtx_def** %rt_rtx163, align 8, !dbg !5965
  br label %if.end167, !dbg !5964

if.else164:                                       ; preds = %while.end153
  tail call void @set_last_insn(%struct.rtx_def* %insn.2.lcssa) #6, !dbg !5966
  br label %if.end167

if.end167:                                        ; preds = %while.end119, %if.end45, %if.else164, %if.then159
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 6, !dbg !5967
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !5967
  %46 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5969
  %cfg = getelementptr inbounds %struct.function, %struct.function* %46, i64 0, i32 1, !dbg !5969
  %47 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5969
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %47, i64 0, i32 1, !dbg !5969
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5969
  %cmp168 = icmp eq %struct.basic_block_def* %45, %48, !dbg !5970
  br i1 %cmp168, label %if.end175, label %if.then169, !dbg !5971

if.then169:                                       ; preds = %if.end167
  %il171 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %45, i64 0, i32 7, !dbg !5972
  %rtl172 = bitcast %union.basic_block_il_dependent* %il171 to %struct.rtl_bb_info**, !dbg !5973
  %49 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl172, align 8, !dbg !5973
  %header173 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %49, i64 0, i32 2, !dbg !5974
  call void @llvm.dbg.value(metadata %struct.rtx_def** %header173, metadata !5881, metadata !DIExpression()), !dbg !5884
  br label %if.end175, !dbg !5975

if.end175:                                        ; preds = %if.end167, %if.then169
  %to.0 = phi %struct.rtx_def** [ %header173, %if.then169 ], [ @cfg_layout_function_footer, %if.end167 ], !dbg !5976
  call void @llvm.dbg.value(metadata %struct.rtx_def** %to.0, metadata !5881, metadata !DIExpression()), !dbg !5884
  tail call void @rtl_delete_block(%struct.basic_block_def* %bb) #7, !dbg !5977
  %tobool176 = icmp eq %struct.rtx_def* %3, null, !dbg !5978
  br i1 %tobool176, label %if.else182, label %if.then177, !dbg !5980

if.then177:                                       ; preds = %if.end175
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5981
  %rt_rtx181 = bitcast %union.rtunion_def* %50 to %struct.rtx_def**, !dbg !5981
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx181, align 8, !dbg !5981
  call void @llvm.dbg.value(metadata %struct.rtx_def* %51, metadata !5880, metadata !DIExpression()), !dbg !5884
  br label %if.end183, !dbg !5982

if.else182:                                       ; preds = %if.end175
  %call = tail call %struct.rtx_def* @get_insns() #6, !dbg !5983
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5880, metadata !DIExpression()), !dbg !5884
  br label %if.end183

if.end183:                                        ; preds = %if.else182, %if.then177
  %prev.0 = phi %struct.rtx_def* [ %51, %if.then177 ], [ %call, %if.else182 ], !dbg !5984
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0, metadata !5880, metadata !DIExpression()), !dbg !5884
  %tobool184 = icmp eq %struct.rtx_def* %15, null, !dbg !5985
  br i1 %tobool184, label %if.else190, label %if.then185, !dbg !5987

if.then185:                                       ; preds = %if.end183
  %52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5988
  %rt_rtx189 = bitcast %union.rtunion_def* %52 to %struct.rtx_def**, !dbg !5988
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx189, align 8, !dbg !5988
  call void @llvm.dbg.value(metadata %struct.rtx_def* %53, metadata !5879, metadata !DIExpression()), !dbg !5884
  br label %if.end192, !dbg !5989

if.else190:                                       ; preds = %if.end183
  %call191 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !5990
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call191, metadata !5879, metadata !DIExpression()), !dbg !5884
  br label %if.end192

if.end192:                                        ; preds = %if.else190, %if.then185
  %next.0 = phi %struct.rtx_def* [ %53, %if.then185 ], [ %call191, %if.else190 ], !dbg !5991
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !5879, metadata !DIExpression()), !dbg !5884
  %tobool193 = icmp eq %struct.rtx_def* %next.0, null, !dbg !5992
  br i1 %tobool193, label %if.end224, label %land.lhs.true, !dbg !5994

land.lhs.true:                                    ; preds = %if.end192
  %54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5995
  %rt_rtx197 = bitcast %union.rtunion_def* %54 to %struct.rtx_def**, !dbg !5995
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx197, align 8, !dbg !5995
  %cmp198 = icmp eq %struct.rtx_def* %55, %prev.0, !dbg !5996
  br i1 %cmp198, label %if.end224, label %if.then199, !dbg !5997

if.then199:                                       ; preds = %land.lhs.true
  %call200 = tail call %struct.rtx_def* @unlink_insn_chain(%struct.rtx_def* %prev.0, %struct.rtx_def* nonnull %next.0) #6, !dbg !5998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call200, metadata !5883, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call200, metadata !5878, metadata !DIExpression()), !dbg !5884
  br label %while.cond201, !dbg !6000

while.cond201:                                    ; preds = %while.body207, %if.then199
  %insn.3 = phi %struct.rtx_def* [ %call200, %if.then199 ], [ %57, %while.body207 ], !dbg !6001
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.3, metadata !5878, metadata !DIExpression()), !dbg !5884
  %56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6002
  %rt_rtx205 = bitcast %union.rtunion_def* %56 to %struct.rtx_def**, !dbg !6002
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx205, align 8, !dbg !6002
  %tobool206 = icmp eq %struct.rtx_def* %57, null, !dbg !6000
  br i1 %tobool206, label %while.end212, label %while.body207, !dbg !6000

while.body207:                                    ; preds = %while.cond201
  call void @llvm.dbg.value(metadata %struct.rtx_def* %57, metadata !5878, metadata !DIExpression()), !dbg !5884
  br label %while.cond201, !dbg !6000, !llvm.loop !6003

while.end212:                                     ; preds = %while.cond201
  %insn.3.lcssa = phi %struct.rtx_def* [ %insn.3, %while.cond201 ], !dbg !6001
  %.lcssa = phi %union.rtunion_def* [ %56, %while.cond201 ], !dbg !6002
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.3.lcssa, metadata !5878, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.3.lcssa, metadata !5878, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.3.lcssa, metadata !5878, metadata !DIExpression()), !dbg !5884
  %58 = bitcast %struct.rtx_def** %to.0 to i64*, !dbg !6005
  %59 = load i64, i64* %58, align 8, !dbg !6005
  %60 = bitcast %union.rtunion_def* %.lcssa to i64*, !dbg !6006
  store i64 %59, i64* %60, align 8, !dbg !6006
  %61 = load %struct.rtx_def*, %struct.rtx_def** %to.0, align 8, !dbg !6007
  %tobool217 = icmp eq %struct.rtx_def* %61, null, !dbg !6007
  br i1 %tobool217, label %if.end223, label %if.then218, !dbg !6009

if.then218:                                       ; preds = %while.end212
  %62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6010
  %rt_rtx222 = bitcast %union.rtunion_def* %62 to %struct.rtx_def**, !dbg !6010
  store %struct.rtx_def* %insn.3.lcssa, %struct.rtx_def** %rt_rtx222, align 8, !dbg !6011
  br label %if.end223, !dbg !6010

if.end223:                                        ; preds = %while.end212, %if.then218
  store %struct.rtx_def* %call200, %struct.rtx_def** %to.0, align 8, !dbg !6012
  br label %if.end224, !dbg !6013

if.end224:                                        ; preds = %land.lhs.true, %if.end192, %if.end223
  ret void, !dbg !6014
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @cfg_layout_split_block(%struct.basic_block_def* %bb, i8* %insnp) #4 !dbg !6015 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6017, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata i8* %insnp, metadata !6018, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata i8* %insnp, metadata !6019, metadata !DIExpression()), !dbg !6021
  %call = tail call %struct.basic_block_def* @rtl_split_block(%struct.basic_block_def* %bb, i8* %insnp) #7, !dbg !6022
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !6020, metadata !DIExpression()), !dbg !6021
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !6023
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6024
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6024
  %footer = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 3, !dbg !6025
  %1 = bitcast %struct.rtx_def** %footer to i64*, !dbg !6025
  %2 = load i64, i64* %1, align 8, !dbg !6025
  %il1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, !dbg !6026
  %rtl2 = bitcast %union.basic_block_il_dependent* %il1 to %struct.rtl_bb_info**, !dbg !6027
  %3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl2, align 8, !dbg !6027
  %footer3 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 3, !dbg !6028
  %4 = bitcast %struct.rtx_def** %footer3 to i64*, !dbg !6029
  store i64 %2, i64* %4, align 8, !dbg !6029
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6030
  %footer6 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 3, !dbg !6031
  store %struct.rtx_def* null, %struct.rtx_def** %footer6, align 8, !dbg !6032
  ret %struct.basic_block_def* %call, !dbg !6033
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @cfg_layout_can_merge_blocks_p(%struct.basic_block_def* %a, %struct.basic_block_def* %b) #4 !dbg !6034 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %a, metadata !6036, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !6037, metadata !DIExpression()), !dbg !6038
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 13, !dbg !6039
  %0 = load i32, i32* %flags, align 8, !dbg !6039
  %flags1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 13, !dbg !6041
  %1 = load i32, i32* %flags1, align 8, !dbg !6041
  %2 = xor i32 %0, %1, !dbg !6042
  %3 = and i32 %2, 96, !dbg !6042
  %cmp = icmp eq i32 %3, 0, !dbg !6042
  br i1 %cmp, label %if.end, label %return, !dbg !6043

if.end:                                           ; preds = %entry
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %a) #7, !dbg !6044
  %tobool = icmp eq i8 %call, 0, !dbg !6044
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !6045

land.lhs.true:                                    ; preds = %if.end
  %call3 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %a) #7, !dbg !6046
  %cmp4 = icmp eq %struct.basic_block_def* %call3, %b, !dbg !6047
  br i1 %cmp4, label %land.lhs.true6, label %land.end, !dbg !6048

land.lhs.true6:                                   ; preds = %land.lhs.true
  %call7 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %b) #7, !dbg !6049
  %cmp9 = icmp eq i8 %call7, 1, !dbg !6050
  %cmp12 = icmp ne %struct.basic_block_def* %a, %b, !dbg !6051
  %or.cond = and i1 %cmp9, %cmp12, !dbg !6052
  br i1 %or.cond, label %land.lhs.true14, label %land.end, !dbg !6052

land.lhs.true14:                                  ; preds = %land.lhs.true6
  %call15 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %a) #7, !dbg !6053
  %flags16 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call15, i64 0, i32 7, !dbg !6054
  %4 = load i32, i32* %flags16, align 8, !dbg !6054
  %and17 = and i32 %4, 14, !dbg !6055
  %tobool18 = icmp eq i32 %and17, 0, !dbg !6055
  br i1 %tobool18, label %land.lhs.true19, label %land.end, !dbg !6056

land.lhs.true19:                                  ; preds = %land.lhs.true14
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6057
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !6057
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6057
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !6057
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6057
  %cmp20 = icmp eq %struct.basic_block_def* %7, %a, !dbg !6058
  br i1 %cmp20, label %land.end, label %land.lhs.true22, !dbg !6059

land.lhs.true22:                                  ; preds = %land.lhs.true19
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 1, !dbg !6060
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6060
  %cmp25 = icmp eq %struct.basic_block_def* %8, %b, !dbg !6061
  br i1 %cmp25, label %land.end, label %land.rhs, !dbg !6062

land.rhs:                                         ; preds = %land.lhs.true22
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 7, !dbg !6063
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6063
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6063
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !6063
  %10 = bitcast %struct.rtx_def** %end_ to i32**, !dbg !6063
  %11 = load i32*, i32** %10, align 8, !dbg !6063
  %bf.load = load i32, i32* %11, align 8, !dbg !6063
  %bf.clear = and i32 %bf.load, 65535, !dbg !6063
  %cmp27 = icmp eq i32 %bf.clear, 9, !dbg !6063
  %12 = bitcast i32* %11 to %struct.rtx_def*, !dbg !6064
  br i1 %cmp27, label %lor.rhs, label %land.end, !dbg !6064

lor.rhs:                                          ; preds = %land.rhs
  %13 = load i32, i32* @optimize, align 4, !dbg !6065
  %tobool29 = icmp eq i32 %13, 0, !dbg !6065
  %14 = load i32, i32* @reload_completed, align 4, !dbg !6066
  %tobool30 = icmp ne i32 %14, 0, !dbg !6066
  %or.cond1 = or i1 %tobool29, %tobool30, !dbg !6067
  br i1 %or.cond1, label %cond.true, label %cond.false, !dbg !6067

cond.true:                                        ; preds = %lor.rhs
  %call34 = tail call i32 @simplejump_p(%struct.rtx_def* %12) #6, !dbg !6068
  br label %cond.end, !dbg !6069

cond.false:                                       ; preds = %lor.rhs
  %call38 = tail call i32 @onlyjump_p(%struct.rtx_def* %12) #6, !dbg !6070
  br label %cond.end, !dbg !6069

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call34, %cond.true ], [ %call38, %cond.false ], !dbg !6069
  %tobool39 = icmp ne i32 %cond, 0, !dbg !6064
  %phitmp = zext i1 %tobool39 to i8, !dbg !6064
  br label %land.end, !dbg !6064

land.end:                                         ; preds = %land.lhs.true22, %land.lhs.true19, %land.lhs.true14, %if.end, %land.rhs, %cond.end, %land.lhs.true6, %land.lhs.true
  %15 = phi i8 [ 0, %land.lhs.true22 ], [ 0, %land.lhs.true19 ], [ 0, %land.lhs.true14 ], [ 0, %land.lhs.true6 ], [ 0, %land.lhs.true ], [ 0, %if.end ], [ 1, %land.rhs ], [ %phitmp, %cond.end ]
  br label %return, !dbg !6071

return:                                           ; preds = %entry, %land.end
  %retval.0 = phi i8 [ %15, %land.end ], [ 0, %entry ], !dbg !6038
  ret i8 %retval.0, !dbg !6072
}

; Function Attrs: nounwind uwtable
define internal void @cfg_layout_merge_blocks(%struct.basic_block_def* %a, %struct.basic_block_def* %b) #4 !dbg !6073 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %a, metadata !6075, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !6076, metadata !DIExpression()), !dbg !6096
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6097
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !6097
  br i1 %tobool, label %if.end, label %if.then, !dbg !6099

if.then:                                          ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 9, !dbg !6100
  %1 = load i32, i32* %index, align 8, !dbg !6100
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 9, !dbg !6101
  %2 = load i32, i32* %index1, align 8, !dbg !6101
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.36, i64 0, i64 0), i32 %1, i32 %2) #6, !dbg !6102
  br label %if.end, !dbg !6102

if.end:                                           ; preds = %entry, %if.then
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 7, !dbg !6103
  %3 = bitcast %union.basic_block_il_dependent* %il to i32***, !dbg !6103
  %4 = load i32**, i32*** %3, align 8, !dbg !6103
  %5 = load i32*, i32** %4, align 8, !dbg !6103
  %bf.load = load i32, i32* %5, align 8, !dbg !6103
  %bf.clear = and i32 %bf.load, 65535, !dbg !6103
  %cmp = icmp eq i32 %bf.clear, 12, !dbg !6103
  br i1 %cmp, label %if.then2, label %if.end7, !dbg !6105

if.then2:                                         ; preds = %if.end
  %6 = bitcast i32* %5 to %struct.rtx_def*, !dbg !6105
  %call6 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %6) #7, !dbg !6106
  br label %if.end7, !dbg !6108

if.end7:                                          ; preds = %if.then2, %if.end
  %il8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 7, !dbg !6109
  %rtl9 = bitcast %union.basic_block_il_dependent* %il8 to %struct.rtl_bb_info**, !dbg !6109
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !6109
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 1, !dbg !6109
  %8 = bitcast %struct.rtx_def** %end_ to i32**, !dbg !6109
  %9 = load i32*, i32** %8, align 8, !dbg !6109
  %bf.load10 = load i32, i32* %9, align 8, !dbg !6109
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !6109
  %cmp12 = icmp eq i32 %bf.clear11, 9, !dbg !6109
  br i1 %cmp12, label %if.then13, label %if.end18, !dbg !6111

if.then13:                                        ; preds = %if.end7
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 1, !dbg !6112
  %10 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6112
  %tobool14 = icmp eq %struct.VEC_edge_gc* %10, null, !dbg !6112
  br i1 %tobool14, label %cond.end, label %cond.true, !dbg !6112

cond.true:                                        ; preds = %if.then13
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %10, i64 0, i32 0, !dbg !6112
  br label %cond.end, !dbg !6112

cond.end:                                         ; preds = %if.then13, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.then13 ], !dbg !6112
  %call16 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #7, !dbg !6112
  %call17 = tail call %struct.edge_def* @try_redirect_by_replacing_jump(%struct.edge_def* %call16, %struct.basic_block_def* %b, i8 zeroext 1) #7, !dbg !6113
  %.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !6114
  %end_21.phi.trans.insert = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %.pre, i64 0, i32 1, !dbg !6096
  %.phi.trans.insert = bitcast %struct.rtx_def** %end_21.phi.trans.insert to i32**, !dbg !6096
  %.pre1 = load i32*, i32** %.phi.trans.insert, align 8, !dbg !6114
  %bf.load22.pre = load i32, i32* %.pre1, align 8, !dbg !6114
  br label %if.end18, !dbg !6113

if.end18:                                         ; preds = %cond.end, %if.end7
  %bf.load22 = phi i32 [ %bf.load22.pre, %cond.end ], [ %bf.load10, %if.end7 ], !dbg !6114
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !6114
  %cmp24 = icmp eq i32 %bf.clear23, 9, !dbg !6114
  br i1 %cmp24, label %cond.true25, label %cond.end27, !dbg !6114

cond.true25:                                      ; preds = %if.end18
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2700, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6114
  br label %cond.end27, !dbg !6114

cond.end27:                                       ; preds = %if.end18, %cond.true25
  %11 = load i32, i32* @optimize, align 4, !dbg !6115
  %tobool29 = icmp eq i32 %11, 0, !dbg !6115
  br i1 %tobool29, label %land.lhs.true, label %if.end169, !dbg !6116

land.lhs.true:                                    ; preds = %cond.end27
  %succs30 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 1, !dbg !6117
  %12 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs30, align 8, !dbg !6117
  %tobool31 = icmp eq %struct.VEC_edge_gc* %12, null, !dbg !6117
  br i1 %tobool31, label %cond.end36, label %cond.true32, !dbg !6117

cond.true32:                                      ; preds = %land.lhs.true
  %base34 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %12, i64 0, i32 0, !dbg !6117
  br label %cond.end36, !dbg !6117

cond.end36:                                       ; preds = %land.lhs.true, %cond.true32
  %cond37 = phi %struct.VEC_edge_base* [ %base34, %cond.true32 ], [ null, %land.lhs.true ], !dbg !6117
  %call38 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond37, i32 0) #7, !dbg !6117
  %goto_locus = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call38, i64 0, i32 5, !dbg !6118
  %13 = load i32, i32* %goto_locus, align 8, !dbg !6118
  %tobool39 = icmp eq i32 %13, 0, !dbg !6117
  br i1 %tobool39, label %if.end169, label %if.then40, !dbg !6119

if.then40:                                        ; preds = %cond.end36
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !6120
  %end_43 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 1, !dbg !6120
  %15 = load %struct.rtx_def*, %struct.rtx_def** %end_43, align 8, !dbg !6120
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !6077, metadata !DIExpression()), !dbg !6121
  %head_46 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 0, !dbg !6122
  %16 = load %struct.rtx_def*, %struct.rtx_def** %head_46, align 8, !dbg !6122
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6122
  %rt_rtx = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !6122
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6122
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !6080, metadata !DIExpression()), !dbg !6121
  %19 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs30, align 8, !dbg !6123
  %tobool49 = icmp eq %struct.VEC_edge_gc* %19, null, !dbg !6123
  br i1 %tobool49, label %cond.end54, label %cond.true50, !dbg !6123

cond.true50:                                      ; preds = %if.then40
  %base52 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %19, i64 0, i32 0, !dbg !6123
  br label %cond.end54, !dbg !6123

cond.end54:                                       ; preds = %if.then40, %cond.true50
  %cond55 = phi %struct.VEC_edge_base* [ %base52, %cond.true50 ], [ null, %if.then40 ], !dbg !6123
  %call56 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond55, i32 0) #7, !dbg !6123
  %goto_locus57 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call56, i64 0, i32 5, !dbg !6124
  %20 = load i32, i32* %goto_locus57, align 8, !dbg !6124
  call void @llvm.dbg.value(metadata i32 %20, metadata !6081, metadata !DIExpression()), !dbg !6121
  br label %while.cond, !dbg !6125

while.cond:                                       ; preds = %while.body, %cond.end54
  %insn.0 = phi %struct.rtx_def* [ %15, %cond.end54 ], [ %24, %while.body ], !dbg !6121
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6077, metadata !DIExpression()), !dbg !6121
  %cmp58 = icmp eq %struct.rtx_def* %insn.0, %18, !dbg !6126
  br i1 %cmp58, label %while.end, label %land.rhs, !dbg !6127

land.rhs:                                         ; preds = %while.cond
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6128
  %bf.load59 = load i32, i32* %21, align 8, !dbg !6128
  %bf.clear60 = and i32 %bf.load59, 65535, !dbg !6128
  %cmp61 = icmp eq i32 %bf.clear60, 8, !dbg !6128
  br i1 %cmp61, label %lor.rhs, label %lor.lhs.false, !dbg !6128

lor.lhs.false:                                    ; preds = %land.rhs
  %cmp64 = icmp eq i32 %bf.clear60, 7, !dbg !6128
  br i1 %cmp64, label %lor.rhs, label %lor.lhs.false65, !dbg !6128

lor.lhs.false65:                                  ; preds = %lor.lhs.false
  %cmp68 = icmp eq i32 %bf.clear60, 9, !dbg !6128
  br i1 %cmp68, label %lor.rhs, label %lor.lhs.false69, !dbg !6128

lor.lhs.false69:                                  ; preds = %lor.lhs.false65
  %cmp72 = icmp eq i32 %bf.clear60, 10, !dbg !6128
  br i1 %cmp72, label %lor.rhs, label %while.body, !dbg !6129

lor.rhs:                                          ; preds = %lor.lhs.false69, %lor.lhs.false65, %lor.lhs.false, %land.rhs
  %arrayidx75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 2, !dbg !6130
  %rt_int = bitcast i64* %arrayidx75 to i32*, !dbg !6130
  %22 = load i32, i32* %rt_int, align 8, !dbg !6130
  %cmp76 = icmp eq i32 %22, 0, !dbg !6131
  br i1 %cmp76, label %while.body, label %while.end, !dbg !6125

while.body:                                       ; preds = %lor.lhs.false69, %lor.rhs
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6132
  %rt_rtx80 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !6132
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx80, align 8, !dbg !6132
  call void @llvm.dbg.value(metadata %struct.rtx_def* %24, metadata !6077, metadata !DIExpression()), !dbg !6121
  br label %while.cond, !dbg !6125, !llvm.loop !6133

while.end:                                        ; preds = %while.cond, %lor.rhs
  %insn.0.lcssa = phi %struct.rtx_def* [ %insn.0, %while.cond ], [ %insn.0, %lor.rhs ], !dbg !6121
  %cmp58.lcssa = phi i1 [ %cmp58, %while.cond ], [ %cmp58, %lor.rhs ], !dbg !6126
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !6077, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !6077, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !6077, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !6077, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !6077, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !6077, metadata !DIExpression()), !dbg !6121
  br i1 %cmp58.lcssa, label %if.else, label %land.lhs.true82, !dbg !6134

land.lhs.true82:                                  ; preds = %while.end
  %arrayidx85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.lcssa, i64 0, i32 1, i32 0, i32 2, !dbg !6136
  %rt_int86 = bitcast i64* %arrayidx85 to i32*, !dbg !6136
  %25 = load i32, i32* %rt_int86, align 8, !dbg !6136
  %call87 = tail call zeroext i8 @locator_eq(i32 %25, i32 %20) #6, !dbg !6137
  %tobool88 = icmp eq i8 %call87, 0, !dbg !6137
  br i1 %tobool88, label %if.else, label %if.end150, !dbg !6138

if.else:                                          ; preds = %land.lhs.true82, %while.end
  %rtl91 = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6139
  %26 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl91, align 8, !dbg !6139
  %head_92 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %26, i64 0, i32 0, !dbg !6139
  %end_95 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %26, i64 0, i32 1, !dbg !6141
  %27 = load %struct.rtx_def*, %struct.rtx_def** %end_95, align 8, !dbg !6141
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6141
  %rt_rtx99 = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !6141
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !6141
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !6080, metadata !DIExpression()), !dbg !6121
  br label %while.cond100, !dbg !6142

while.cond100:                                    ; preds = %while.body125, %if.else
  %insn.1.in = phi %struct.rtx_def** [ %head_92, %if.else ], [ %rt_rtx129, %while.body125 ]
  %insn.1 = load %struct.rtx_def*, %struct.rtx_def** %insn.1.in, align 8, !dbg !6143
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !6077, metadata !DIExpression()), !dbg !6121
  %cmp101 = icmp eq %struct.rtx_def* %insn.1, %29, !dbg !6144
  br i1 %cmp101, label %while.end130, label %land.rhs103, !dbg !6145

land.rhs103:                                      ; preds = %while.cond100
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !6146
  %bf.load104 = load i32, i32* %30, align 8, !dbg !6146
  %bf.clear105 = and i32 %bf.load104, 65535, !dbg !6146
  %cmp106 = icmp eq i32 %bf.clear105, 8, !dbg !6146
  br i1 %cmp106, label %lor.end123, label %lor.lhs.false108, !dbg !6146

lor.lhs.false108:                                 ; preds = %land.rhs103
  %cmp111 = icmp eq i32 %bf.clear105, 7, !dbg !6146
  br i1 %cmp111, label %lor.end123, label %lor.lhs.false113, !dbg !6146

lor.lhs.false113:                                 ; preds = %lor.lhs.false108
  %cmp116 = icmp eq i32 %bf.clear105, 9, !dbg !6146
  br i1 %cmp116, label %lor.end123, label %lor.rhs118, !dbg !6146

lor.rhs118:                                       ; preds = %lor.lhs.false113
  %cmp121 = icmp eq i32 %bf.clear105, 10, !dbg !6146
  br label %lor.end123, !dbg !6146

lor.end123:                                       ; preds = %lor.rhs118, %lor.lhs.false113, %lor.lhs.false108, %land.rhs103
  %31 = phi i1 [ true, %lor.lhs.false113 ], [ true, %lor.lhs.false108 ], [ true, %land.rhs103 ], [ %cmp121, %lor.rhs118 ]
  br i1 %31, label %while.end130, label %while.body125, !dbg !6142

while.body125:                                    ; preds = %lor.end123
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6147
  %rt_rtx129 = bitcast %union.rtunion_def* %32 to %struct.rtx_def**, !dbg !6147
  br label %while.cond100, !dbg !6142, !llvm.loop !6148

while.end130:                                     ; preds = %lor.end123, %while.cond100
  %insn.1.lcssa = phi %struct.rtx_def* [ %insn.1, %lor.end123 ], [ %insn.1, %while.cond100 ], !dbg !6143
  %cmp101.lcssa = phi i1 [ %cmp101, %lor.end123 ], [ %cmp101, %while.cond100 ], !dbg !6144
  br i1 %cmp101.lcssa, label %if.end150, label %land.lhs.true133, !dbg !6149

land.lhs.true133:                                 ; preds = %while.end130
  %arrayidx136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1.lcssa, i64 0, i32 1, i32 0, i32 2, !dbg !6151
  %rt_int137 = bitcast i64* %arrayidx136 to i32*, !dbg !6151
  %33 = load i32, i32* %rt_int137, align 8, !dbg !6151
  %cmp138 = icmp eq i32 %33, 0, !dbg !6152
  br i1 %cmp138, label %if.end150, label %land.lhs.true140, !dbg !6153

land.lhs.true140:                                 ; preds = %land.lhs.true133
  %call145 = tail call zeroext i8 @locator_eq(i32 %33, i32 %20) #6, !dbg !6154
  %tobool147 = icmp eq i8 %call145, 0, !dbg !6154
  %spec.select = select i1 %tobool147, i32 %20, i32 0, !dbg !6155
  br label %if.end150, !dbg !6155

if.end150:                                        ; preds = %land.lhs.true82, %land.lhs.true133, %while.end130, %land.lhs.true140
  %goto_locus47.1 = phi i32 [ 0, %land.lhs.true82 ], [ %20, %land.lhs.true133 ], [ %20, %while.end130 ], [ %spec.select, %land.lhs.true140 ], !dbg !6156
  call void @llvm.dbg.value(metadata i32 %goto_locus47.1, metadata !6081, metadata !DIExpression()), !dbg !6121
  %tobool151 = icmp eq i32 %goto_locus47.1, 0, !dbg !6157
  br i1 %tobool151, label %if.end169, label %if.then152, !dbg !6159

if.then152:                                       ; preds = %if.end150
  %call153 = tail call %struct.rtx_def* @gen_nop() #6, !dbg !6160
  %34 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !6162
  %end_156 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %34, i64 0, i32 1, !dbg !6162
  %35 = load %struct.rtx_def*, %struct.rtx_def** %end_156, align 8, !dbg !6162
  %call157 = tail call %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def* %call153, %struct.rtx_def* %35, %struct.basic_block_def* %a) #6, !dbg !6163
  %36 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !6164
  %end_160 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %36, i64 0, i32 1, !dbg !6164
  store %struct.rtx_def* %call157, %struct.rtx_def** %end_160, align 8, !dbg !6165
  %37 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !6166
  %end_163 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %37, i64 0, i32 1, !dbg !6166
  %38 = load %struct.rtx_def*, %struct.rtx_def** %end_163, align 8, !dbg !6166
  %arrayidx166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i64 0, i32 1, i32 0, i32 2, !dbg !6166
  %rt_int167 = bitcast i64* %arrayidx166 to i32*, !dbg !6166
  store i32 %goto_locus47.1, i32* %rt_int167, align 8, !dbg !6167
  br label %if.end169, !dbg !6168

if.end169:                                        ; preds = %if.end150, %cond.end36, %cond.end27, %if.then152
  %rtl171 = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6169
  %39 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl171, align 8, !dbg !6169
  %header = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %39, i64 0, i32 2, !dbg !6170
  %40 = load %struct.rtx_def*, %struct.rtx_def** %header, align 8, !dbg !6170
  %tobool172 = icmp eq %struct.rtx_def* %40, null, !dbg !6171
  br i1 %tobool172, label %if.end191, label %if.then173, !dbg !6172

if.then173:                                       ; preds = %if.end169
  %41 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !6173
  %end_176 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %41, i64 0, i32 1, !dbg !6173
  %42 = load %struct.rtx_def*, %struct.rtx_def** %end_176, align 8, !dbg !6173
  call void @llvm.dbg.value(metadata %struct.rtx_def* %42, metadata !6082, metadata !DIExpression()), !dbg !6174
  %call183 = tail call %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def* nonnull %40, %struct.rtx_def* %42, %struct.basic_block_def* %a) #6, !dbg !6175
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call183, metadata !6085, metadata !DIExpression()), !dbg !6174
  %43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6176
  %rt_rtx187 = bitcast %union.rtunion_def* %43 to %struct.rtx_def**, !dbg !6176
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx187, align 8, !dbg !6176
  tail call void @delete_insn_chain(%struct.rtx_def* %44, %struct.rtx_def* %call183, i8 zeroext 0) #7, !dbg !6177
  %45 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl171, align 8, !dbg !6178
  %header190 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %45, i64 0, i32 2, !dbg !6179
  store %struct.rtx_def* null, %struct.rtx_def** %header190, align 8, !dbg !6180
  %.pre3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl171, align 8, !dbg !6181
  br label %if.end191, !dbg !6182

if.end191:                                        ; preds = %if.end169, %if.then173
  %46 = phi %struct.rtl_bb_info* [ %39, %if.end169 ], [ %.pre3, %if.then173 ], !dbg !6181
  %47 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !6183
  %end_194 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %47, i64 0, i32 1, !dbg !6183
  %48 = load %struct.rtx_def*, %struct.rtx_def** %end_194, align 8, !dbg !6183
  %49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6183
  %rt_rtx198 = bitcast %union.rtunion_def* %49 to %struct.rtx_def**, !dbg !6183
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx198, align 8, !dbg !6183
  %head_201 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %46, i64 0, i32 0, !dbg !6181
  %51 = load %struct.rtx_def*, %struct.rtx_def** %head_201, align 8, !dbg !6181
  %cmp202 = icmp eq %struct.rtx_def* %50, %51, !dbg !6184
  %end_211 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %46, i64 0, i32 1, !dbg !6185
  %52 = load %struct.rtx_def*, %struct.rtx_def** %end_211, align 8, !dbg !6185
  br i1 %cmp202, label %if.else260, label %if.then204, !dbg !6186

if.then204:                                       ; preds = %if.end191
  %call212 = tail call %struct.rtx_def* @unlink_insn_chain(%struct.rtx_def* %51, %struct.rtx_def* %52) #6, !dbg !6187
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call212, metadata !6086, metadata !DIExpression()), !dbg !6188
  %53 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !6189
  %end_215 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %53, i64 0, i32 1, !dbg !6189
  %54 = load %struct.rtx_def*, %struct.rtx_def** %end_215, align 8, !dbg !6189
  %call216 = tail call %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def* %call212, %struct.rtx_def* %54, %struct.basic_block_def* %a) #6, !dbg !6190
  %55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call212, i64 0, i32 0, !dbg !6191
  %bf.load217 = load i32, i32* %55, align 8, !dbg !6191
  %bf.clear218 = and i32 %bf.load217, 65535, !dbg !6191
  %cmp219 = icmp eq i32 %bf.clear218, 13, !dbg !6191
  br i1 %cmp219, label %land.lhs.true221, label %if.then228, !dbg !6191

land.lhs.true221:                                 ; preds = %if.then204
  %u222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call212, i64 0, i32 1, !dbg !6191
  %56 = getelementptr inbounds %union.u, %union.u* %u222, i64 1, i32 0, i32 0, i64 0, !dbg !6191
  %rt_int225 = bitcast %union.rtunion_def* %56 to i32*, !dbg !6191
  %57 = load i32, i32* %rt_int225, align 8, !dbg !6191
  %cmp226 = icmp eq i32 %57, 10, !dbg !6191
  br i1 %cmp226, label %if.end233, label %if.then228, !dbg !6193

if.then228:                                       ; preds = %land.lhs.true221, %if.then204
  %58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call212, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6194
  %rt_rtx232 = bitcast %union.rtunion_def* %58 to %struct.rtx_def**, !dbg !6194
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx232, align 8, !dbg !6194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %59, metadata !6086, metadata !DIExpression()), !dbg !6188
  %.phi.trans.insert4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i64 0, i32 0, !dbg !6188
  %bf.load234.pre = load i32, i32* %.phi.trans.insert4, align 8, !dbg !6195
  br label %if.end233, !dbg !6196

if.end233:                                        ; preds = %if.then228, %land.lhs.true221
  %bf.load234 = phi i32 [ %bf.load217, %land.lhs.true221 ], [ %bf.load234.pre, %if.then228 ], !dbg !6195
  %first205.0 = phi %struct.rtx_def* [ %call212, %land.lhs.true221 ], [ %59, %if.then228 ], !dbg !6188
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first205.0, metadata !6086, metadata !DIExpression()), !dbg !6188
  %bf.clear235 = and i32 %bf.load234, 65535, !dbg !6195
  %cmp236 = icmp eq i32 %bf.clear235, 13, !dbg !6195
  br i1 %cmp236, label %land.lhs.true238, label %cond.true245, !dbg !6195

land.lhs.true238:                                 ; preds = %if.end233
  %u239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first205.0, i64 0, i32 1, !dbg !6195
  %60 = getelementptr inbounds %union.u, %union.u* %u239, i64 1, i32 0, i32 0, i64 0, !dbg !6195
  %rt_int242 = bitcast %union.rtunion_def* %60 to i32*, !dbg !6195
  %61 = load i32, i32* %rt_int242, align 8, !dbg !6195
  %cmp243 = icmp eq i32 %61, 10, !dbg !6195
  br i1 %cmp243, label %cond.end247, label %cond.true245, !dbg !6195

cond.true245:                                     ; preds = %land.lhs.true238, %if.end233
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2749, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6195
  br label %cond.end247, !dbg !6195

cond.end247:                                      ; preds = %land.lhs.true238, %cond.true245
  %62 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl171, align 8, !dbg !6197
  %head_251 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %62, i64 0, i32 0, !dbg !6197
  store %struct.rtx_def* null, %struct.rtx_def** %head_251, align 8, !dbg !6198
  %63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first205.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6199
  %rt_rtx255 = bitcast %union.rtunion_def* %63 to %struct.rtx_def**, !dbg !6199
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx255, align 8, !dbg !6199
  %65 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl171, align 8, !dbg !6200
  %end_258 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %65, i64 0, i32 1, !dbg !6200
  %66 = load %struct.rtx_def*, %struct.rtx_def** %end_258, align 8, !dbg !6200
  tail call fastcc void @update_bb_for_insn_chain(%struct.rtx_def* %64, %struct.rtx_def* %66, %struct.basic_block_def* %a) #7, !dbg !6201
  %call259 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %first205.0) #7, !dbg !6202
  br label %if.end313, !dbg !6203

if.else260:                                       ; preds = %if.end191
  tail call fastcc void @update_bb_for_insn_chain(%struct.rtx_def* %50, %struct.rtx_def* %52, %struct.basic_block_def* %a) #7, !dbg !6204
  %67 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl171, align 8, !dbg !6205
  %head_270 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %67, i64 0, i32 0, !dbg !6205
  %68 = load %struct.rtx_def*, %struct.rtx_def** %head_270, align 8, !dbg !6205
  call void @llvm.dbg.value(metadata %struct.rtx_def* %68, metadata !6089, metadata !DIExpression()), !dbg !6206
  %69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i64 0, i32 0, !dbg !6207
  %bf.load271 = load i32, i32* %69, align 8, !dbg !6207
  %bf.clear272 = and i32 %bf.load271, 65535, !dbg !6207
  %cmp273 = icmp eq i32 %bf.clear272, 13, !dbg !6207
  br i1 %cmp273, label %land.lhs.true275, label %if.then282, !dbg !6207

land.lhs.true275:                                 ; preds = %if.else260
  %u276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i64 0, i32 1, !dbg !6207
  %70 = getelementptr inbounds %union.u, %union.u* %u276, i64 1, i32 0, i32 0, i64 0, !dbg !6207
  %rt_int279 = bitcast %union.rtunion_def* %70 to i32*, !dbg !6207
  %71 = load i32, i32* %rt_int279, align 8, !dbg !6207
  %cmp280 = icmp eq i32 %71, 10, !dbg !6207
  br i1 %cmp280, label %if.end287, label %if.then282, !dbg !6209

if.then282:                                       ; preds = %land.lhs.true275, %if.else260
  %72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6210
  %rt_rtx286 = bitcast %union.rtunion_def* %72 to %struct.rtx_def**, !dbg !6210
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx286, align 8, !dbg !6210
  call void @llvm.dbg.value(metadata %struct.rtx_def* %73, metadata !6089, metadata !DIExpression()), !dbg !6206
  %.phi.trans.insert6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i64 0, i32 0, !dbg !6206
  %bf.load288.pre = load i32, i32* %.phi.trans.insert6, align 8, !dbg !6211
  br label %if.end287, !dbg !6212

if.end287:                                        ; preds = %if.then282, %land.lhs.true275
  %bf.load288 = phi i32 [ %bf.load271, %land.lhs.true275 ], [ %bf.load288.pre, %if.then282 ], !dbg !6211
  %insn261.0 = phi %struct.rtx_def* [ %68, %land.lhs.true275 ], [ %73, %if.then282 ], !dbg !6206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn261.0, metadata !6089, metadata !DIExpression()), !dbg !6206
  %bf.clear289 = and i32 %bf.load288, 65535, !dbg !6211
  %cmp290 = icmp eq i32 %bf.clear289, 13, !dbg !6211
  br i1 %cmp290, label %land.lhs.true292, label %cond.true299, !dbg !6211

land.lhs.true292:                                 ; preds = %if.end287
  %u293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn261.0, i64 0, i32 1, !dbg !6211
  %74 = getelementptr inbounds %union.u, %union.u* %u293, i64 1, i32 0, i32 0, i64 0, !dbg !6211
  %rt_int296 = bitcast %union.rtunion_def* %74 to i32*, !dbg !6211
  %75 = load i32, i32* %rt_int296, align 8, !dbg !6211
  %cmp297 = icmp eq i32 %75, 10, !dbg !6211
  br i1 %cmp297, label %cond.end301, label %cond.true299, !dbg !6211

cond.true299:                                     ; preds = %land.lhs.true292, %if.end287
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 2771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6211
  %.pre8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl171, align 8, !dbg !6213
  br label %cond.end301, !dbg !6211

cond.end301:                                      ; preds = %land.lhs.true292, %cond.true299
  %76 = phi %struct.rtl_bb_info* [ %67, %land.lhs.true292 ], [ %.pre8, %cond.true299 ], !dbg !6213
  %head_305 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %76, i64 0, i32 0, !dbg !6213
  store %struct.rtx_def* null, %struct.rtx_def** %head_305, align 8, !dbg !6214
  %77 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl171, align 8, !dbg !6215
  %end_308 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %77, i64 0, i32 1, !dbg !6215
  %78 = bitcast %struct.rtx_def** %end_308 to i64*, !dbg !6215
  %79 = load i64, i64* %78, align 8, !dbg !6215
  %80 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !6216
  %end_311 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %80, i64 0, i32 1, !dbg !6216
  %81 = bitcast %struct.rtx_def** %end_311 to i64*, !dbg !6217
  store i64 %79, i64* %81, align 8, !dbg !6217
  %call312 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn261.0) #7, !dbg !6218
  br label %if.end313

if.end313:                                        ; preds = %cond.end301, %cond.end247
  %index314 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 9, !dbg !6219
  %82 = load i32, i32* %index314, align 8, !dbg !6219
  tail call void @df_bb_delete(i32 %82) #6, !dbg !6220
  %83 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl171, align 8, !dbg !6221
  %footer = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %83, i64 0, i32 3, !dbg !6222
  %84 = load %struct.rtx_def*, %struct.rtx_def** %footer, align 8, !dbg !6222
  %tobool317 = icmp eq %struct.rtx_def* %84, null, !dbg !6223
  %85 = ptrtoint %struct.rtx_def* %84 to i64, !dbg !6224
  br i1 %tobool317, label %if.end365, label %if.then318, !dbg !6224

if.then318:                                       ; preds = %if.end313
  %86 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !6225
  %footer321 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %86, i64 0, i32 3, !dbg !6226
  %87 = load %struct.rtx_def*, %struct.rtx_def** %footer321, align 8, !dbg !6226
  %tobool322 = icmp eq %struct.rtx_def* %87, null, !dbg !6227
  br i1 %tobool322, label %if.then323, label %if.else330, !dbg !6228

if.then323:                                       ; preds = %if.then318
  %88 = bitcast %struct.rtx_def** %footer321 to i64*, !dbg !6229
  store i64 %85, i64* %88, align 8, !dbg !6229
  br label %if.end361, !dbg !6230

if.else330:                                       ; preds = %if.then318
  br label %while.cond335, !dbg !6231

while.cond335:                                    ; preds = %while.body341, %if.else330
  %last331.0 = phi %struct.rtx_def* [ %87, %if.else330 ], [ %90, %while.body341 ], !dbg !6232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last331.0, metadata !6091, metadata !DIExpression()), !dbg !6232
  %89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last331.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6233
  %rt_rtx339 = bitcast %union.rtunion_def* %89 to %struct.rtx_def**, !dbg !6233
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx339, align 8, !dbg !6233
  %tobool340 = icmp eq %struct.rtx_def* %90, null, !dbg !6231
  br i1 %tobool340, label %while.end346, label %while.body341, !dbg !6231

while.body341:                                    ; preds = %while.cond335
  br label %while.cond335, !dbg !6231, !llvm.loop !6234

while.end346:                                     ; preds = %while.cond335
  %last331.0.lcssa = phi %struct.rtx_def* [ %last331.0, %while.cond335 ], !dbg !6232
  %.lcssa = phi %union.rtunion_def* [ %89, %while.cond335 ], !dbg !6233
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last331.0.lcssa, metadata !6091, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last331.0.lcssa, metadata !6091, metadata !DIExpression()), !dbg !6232
  %91 = bitcast %union.rtunion_def* %.lcssa to i64*, !dbg !6236
  store i64 %85, i64* %91, align 8, !dbg !6236
  %92 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl171, align 8, !dbg !6237
  %footer356 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %92, i64 0, i32 3, !dbg !6237
  %93 = load %struct.rtx_def*, %struct.rtx_def** %footer356, align 8, !dbg !6237
  %94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6237
  %rt_rtx360 = bitcast %union.rtunion_def* %94 to %struct.rtx_def**, !dbg !6237
  store %struct.rtx_def* %last331.0.lcssa, %struct.rtx_def** %rt_rtx360, align 8, !dbg !6238
  br label %if.end361

if.end361:                                        ; preds = %while.end346, %if.then323
  %95 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl171, align 8, !dbg !6239
  %footer364 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %95, i64 0, i32 3, !dbg !6240
  store %struct.rtx_def* null, %struct.rtx_def** %footer364, align 8, !dbg !6241
  br label %if.end365, !dbg !6242

if.end365:                                        ; preds = %if.end313, %if.end361
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6243
  %tobool366 = icmp eq %struct._IO_FILE* %96, null, !dbg !6243
  br i1 %tobool366, label %if.end371, label %if.then367, !dbg !6245

if.then367:                                       ; preds = %if.end365
  %index368 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 9, !dbg !6246
  %97 = load i32, i32* %index368, align 8, !dbg !6246
  %98 = load i32, i32* %index314, align 8, !dbg !6247
  %call370 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %96, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0), i32 %97, i32 %98) #6, !dbg !6248
  br label %if.end371, !dbg !6248

if.end371:                                        ; preds = %if.end365, %if.then367
  ret void, !dbg !6249
}

declare dso_local zeroext i8 @cfg_layout_can_duplicate_bb_p(%struct.basic_block_def*) #1

declare dso_local %struct.basic_block_def* @cfg_layout_duplicate_bb(%struct.basic_block_def*) #1

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @cfg_layout_split_edge(%struct.edge_def* %e) #4 !dbg !6250 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !6252, metadata !DIExpression()), !dbg !6259
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !6260
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6260
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6261
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !6261
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6261
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !6261
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6261
  %cmp = icmp eq %struct.basic_block_def* %0, %3, !dbg !6262
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !6263

cond.true:                                        ; preds = %entry
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !6264
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6264
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6264
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !6264
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6264
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6264
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !6264
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6264
  br label %cond.end, !dbg !6263

cond.false:                                       ; preds = %entry
  %call = tail call %struct.rtx_def* @get_insns() #6, !dbg !6265
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6266
  br label %cond.end, !dbg !6263

cond.end:                                         ; preds = %cond.false, %cond.true
  %8 = phi %struct.basic_block_def* [ %0, %cond.true ], [ %.pre, %cond.false ], !dbg !6266
  %cond = phi %struct.rtx_def* [ %7, %cond.true ], [ %call, %cond.false ], !dbg !6263
  %9 = bitcast %struct.rtx_def* %cond to i8*, !dbg !6263
  %call3 = tail call %struct.basic_block_def* @create_basic_block(i8* %9, i8* null, %struct.basic_block_def* %8) #6, !dbg !6267
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !6253, metadata !DIExpression()), !dbg !6259
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !6268
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6268
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6269
  %cfg5 = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 1, !dbg !6269
  %12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5, align 8, !dbg !6269
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %12, i64 0, i32 1, !dbg !6269
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6269
  %cmp6 = icmp eq %struct.basic_block_def* %10, %13, !dbg !6270
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call3, i64 0, i32 13, !dbg !6271
  %14 = load i32, i32* %flags, align 8, !dbg !6271
  %and = and i32 %14, -97, !dbg !6271
  br i1 %cmp6, label %do.body, label %do.body11, !dbg !6272

do.body:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !6254, metadata !DIExpression()), !dbg !6273
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6274
  br label %if.end, !dbg !6274

do.body11:                                        ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !6257, metadata !DIExpression()), !dbg !6275
  br label %if.end

if.end:                                           ; preds = %do.body11, %do.body
  %.pn = phi %struct.basic_block_def* [ %10, %do.body11 ], [ %15, %do.body ]
  %and17.pn.in.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 13, !dbg !6271
  %and17.pn.in = load i32, i32* %and17.pn.in.in, align 8, !dbg !6271
  %and17.pn = and i32 %and17.pn.in, 96, !dbg !6271
  %storemerge = or i32 %and, %and17.pn, !dbg !6271
  store i32 %storemerge, i32* %flags, align 8, !dbg !6271
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6276
  %call23 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %call3, %struct.basic_block_def* %16, i32 1) #6, !dbg !6277
  %call24 = tail call %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def* %e, %struct.basic_block_def* %call3) #6, !dbg !6278
  ret %struct.basic_block_def* %call3, !dbg !6279
}

declare dso_local zeroext i8 @duplicate_loop_to_header_edge(%struct.loop*, %struct.edge_def*, i32, %struct.simple_bitmap_def*, %struct.edge_def*, %struct.VEC_edge_heap**, i32) #1

; Function Attrs: nounwind uwtable
define internal void @rtl_lv_add_condition_to_bb(%struct.basic_block_def* %first_head, %struct.basic_block_def* %second_head, %struct.basic_block_def* %cond_bb, i8* %comp_rtx) #4 !dbg !6280 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first_head, metadata !6282, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %second_head, metadata !6283, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cond_bb, metadata !6284, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.value(metadata i8* %comp_rtx, metadata !6285, metadata !DIExpression()), !dbg !6293
  %u = getelementptr inbounds i8, i8* %comp_rtx, i64 8, !dbg !6294
  %rt_rtx = bitcast i8* %u to %struct.rtx_def**, !dbg !6294
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6294
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !6289, metadata !DIExpression()), !dbg !6293
  %arrayidx3 = getelementptr inbounds i8, i8* %comp_rtx, i64 16, !dbg !6295
  %rt_rtx4 = bitcast i8* %arrayidx3 to %struct.rtx_def**, !dbg !6295
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !6295
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !6290, metadata !DIExpression()), !dbg !6293
  %2 = bitcast i8* %comp_rtx to i32*, !dbg !6296
  %bf.load = load i32, i32* %2, align 8, !dbg !6296
  %bf.clear = and i32 %bf.load, 65535, !dbg !6296
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6291, metadata !DIExpression()), !dbg !6293
  %call = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* %first_head) #7, !dbg !6297
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6286, metadata !DIExpression()), !dbg !6293
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !6298
  %bf.load5 = load i32, i32* %3, align 8, !dbg !6298
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !6298
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !6298
  call void @llvm.dbg.value(metadata i32 %bf.clear6, metadata !6292, metadata !DIExpression()), !dbg !6293
  %cmp = icmp eq i32 %bf.clear6, 0, !dbg !6299
  br i1 %cmp, label %if.then, label %if.end, !dbg !6301

if.then:                                          ; preds = %entry
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !6302
  %bf.load7 = load i32, i32* %4, align 8, !dbg !6302
  %bf.lshr8 = lshr i32 %bf.load7, 16, !dbg !6302
  %bf.clear9 = and i32 %bf.lshr8, 255, !dbg !6302
  call void @llvm.dbg.value(metadata i32 %bf.clear9, metadata !6292, metadata !DIExpression()), !dbg !6293
  br label %if.end, !dbg !6303

if.end:                                           ; preds = %if.then, %entry
  %mode.0 = phi i32 [ %bf.clear9, %if.then ], [ %bf.clear6, %entry ], !dbg !6293
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !6292, metadata !DIExpression()), !dbg !6293
  tail call void @start_sequence() #6, !dbg !6304
  %call10 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %0, %struct.rtx_def* null) #6, !dbg !6305
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !6289, metadata !DIExpression()), !dbg !6293
  %call11 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %1, %struct.rtx_def* null) #6, !dbg !6306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call11, metadata !6290, metadata !DIExpression()), !dbg !6293
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %call10, %struct.rtx_def* %call11, i32 %bf.clear, i32 0, i32 %mode.0, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %call, i32 -1) #6, !dbg !6307
  %call12 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6308
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call12, metadata !6288, metadata !DIExpression()), !dbg !6293
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call12, i64 0, i32 1, !dbg !6309
  %arrayidx15 = getelementptr inbounds %union.u, %union.u* %u13, i64 1, i32 0, i32 1, !dbg !6309
  %rt_rtx16 = bitcast %struct.object_block** %arrayidx15 to %struct.rtx_def**, !dbg !6309
  store %struct.rtx_def* %call, %struct.rtx_def** %rt_rtx16, align 8, !dbg !6310
  %arrayidx19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 2, !dbg !6311
  %rt_int = bitcast i64* %arrayidx19 to i32*, !dbg !6311
  %5 = load i32, i32* %rt_int, align 8, !dbg !6312
  %inc = add nsw i32 %5, 1, !dbg !6312
  store i32 %inc, i32* %rt_int, align 8, !dbg !6312
  %call20 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6313
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call20, metadata !6287, metadata !DIExpression()), !dbg !6293
  tail call void @end_sequence() #6, !dbg !6314
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cond_bb, i64 0, i32 7, !dbg !6315
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6315
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6315
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !6315
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6315
  %call21 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call20, %struct.rtx_def* %7) #6, !dbg !6316
  ret void, !dbg !6317
}

; Function Attrs: nounwind uwtable
define internal void @rtl_extract_cond_bb_edges(%struct.basic_block_def* %b, %struct.edge_def** %branch_edge, %struct.edge_def** %fallthru_edge) #4 !dbg !6318 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !6320, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata %struct.edge_def** %branch_edge, metadata !6321, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata %struct.edge_def** %fallthru_edge, metadata !6322, metadata !DIExpression()), !dbg !6324
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 1, !dbg !6325
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6325
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6325
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6325

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6325
  br label %cond.end, !dbg !6325

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6325
  %call = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #7, !dbg !6325
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !6323, metadata !DIExpression()), !dbg !6324
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 7, !dbg !6326
  %1 = load i32, i32* %flags, align 8, !dbg !6326
  %and = and i32 %1, 1, !dbg !6328
  %tobool2 = icmp eq i32 %and, 0, !dbg !6328
  br i1 %tobool2, label %if.else, label %if.then, !dbg !6329

if.then:                                          ; preds = %cond.end
  store %struct.edge_def* %call, %struct.edge_def** %fallthru_edge, align 8, !dbg !6330
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6332
  %tobool4 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !6332
  br i1 %tobool4, label %cond.end9, label %cond.true5, !dbg !6332

cond.true5:                                       ; preds = %if.then
  %base7 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !6332
  br label %cond.end9, !dbg !6332

cond.end9:                                        ; preds = %if.then, %cond.true5
  %cond10 = phi %struct.VEC_edge_base* [ %base7, %cond.true5 ], [ null, %if.then ], !dbg !6332
  %call11 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond10, i32 1) #7, !dbg !6332
  store %struct.edge_def* %call11, %struct.edge_def** %branch_edge, align 8, !dbg !6333
  br label %if.end, !dbg !6334

if.else:                                          ; preds = %cond.end
  store %struct.edge_def* %call, %struct.edge_def** %branch_edge, align 8, !dbg !6335
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6337
  %tobool13 = icmp eq %struct.VEC_edge_gc* %3, null, !dbg !6337
  br i1 %tobool13, label %cond.end18, label %cond.true14, !dbg !6337

cond.true14:                                      ; preds = %if.else
  %base16 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !6337
  br label %cond.end18, !dbg !6337

cond.end18:                                       ; preds = %if.else, %cond.true14
  %cond19 = phi %struct.VEC_edge_base* [ %base16, %cond.true14 ], [ null, %if.else ], !dbg !6337
  %call20 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond19, i32 1) #7, !dbg !6337
  store %struct.edge_def* %call20, %struct.edge_def** %fallthru_edge, align 8, !dbg !6338
  br label %if.end

if.end:                                           ; preds = %cond.end18, %cond.end9
  ret void, !dbg !6339
}

declare dso_local i32 @in_expr_list_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6340 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6345
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6345
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6345

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6345
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6345
  br label %cond.end, !dbg !6345

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6345
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6345
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !6346
  %conv3 = zext i1 %cmp to i8, !dbg !6347
  ret i8 %conv3, !dbg !6348
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6349 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6352
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6352
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6352

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6352
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6352
  br label %cond.end, !dbg !6352

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6352
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !6352
  ret %struct.edge_def* %call2, !dbg !6353
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6354 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !6359
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6359

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6359
  br label %cond.end, !dbg !6359

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !6360
  ret %struct.VEC_edge_gc* %0, !dbg !6361
}

declare dso_local void @df_insn_change_bb(%struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.edge_def* @unchecked_make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #1

declare dso_local %struct.basic_block_def* @create_basic_block(i8*, i8*, %struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_unordered_remove(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6362 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6367, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6368, metadata !DIExpression()), !dbg !6371
  %idxprom = zext i32 %ix_ to i64, !dbg !6372
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6372
  call void @llvm.dbg.value(metadata %struct.edge_def** %arrayidx, metadata !6369, metadata !DIExpression()), !dbg !6371
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6372
  call void @llvm.dbg.value(metadata %struct.edge_def* %0, metadata !6370, metadata !DIExpression()), !dbg !6371
  %num2 = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6372
  %1 = load i32, i32* %num2, align 8, !dbg !6372
  %dec = add i32 %1, -1, !dbg !6372
  store i32 %dec, i32* %num2, align 8, !dbg !6372
  %idxprom3 = zext i32 %dec to i64, !dbg !6372
  %arrayidx4 = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom3, !dbg !6372
  %2 = bitcast %struct.edge_def** %arrayidx4 to i64*, !dbg !6372
  %3 = load i64, i64* %2, align 8, !dbg !6372
  %4 = bitcast %struct.edge_def** %arrayidx to i64*, !dbg !6372
  store i64 %3, i64* %4, align 8, !dbg !6372
  ret %struct.edge_def* %0, !dbg !6372
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def** @VEC_edge_gc_safe_push(%struct.VEC_edge_gc** %vec_, %struct.edge_def* %obj_) unnamed_addr #0 !dbg !6373 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %vec_, metadata !6377, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.value(metadata %struct.edge_def* %obj_, metadata !6378, metadata !DIExpression()), !dbg !6379
  %call = tail call fastcc i32 @VEC_edge_gc_reserve(%struct.VEC_edge_gc** %vec_, i32 1) #7, !dbg !6380
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %vec_, align 8, !dbg !6380
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6380
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6380

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6380
  br label %cond.end, !dbg !6380

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6380
  %call1 = tail call fastcc %struct.edge_def** @VEC_edge_base_quick_push(%struct.VEC_edge_base* %cond, %struct.edge_def* %obj_) #7, !dbg !6380
  ret %struct.edge_def** %call1, !dbg !6380
}

declare dso_local %struct.edge_def* @make_single_succ_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #1

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #1

declare dso_local void @redirect_edge_pred(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_jump_insn_after_setloc(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_return() local_unnamed_addr #1

declare dso_local %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @df_mark_solutions_dirty() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_gc_reserve(%struct.VEC_edge_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6381 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %vec_, metadata !6385, metadata !DIExpression()), !dbg !6388
  call void @llvm.dbg.value(metadata i32 1, metadata !6386, metadata !DIExpression()), !dbg !6388
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %vec_, align 8, !dbg !6389
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6389
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6389

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6389
  br label %cond.end, !dbg !6389

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6389
  %call = tail call fastcc i32 @VEC_edge_base_space(%struct.VEC_edge_base* %cond, i32 1) #7, !dbg !6389
  %tobool1 = icmp eq i32 %call, 0, !dbg !6389
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6389
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6387, metadata !DIExpression()), !dbg !6388
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6389

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_edge_gc** %vec_ to i8**, !dbg !6390
  %2 = load i8*, i8** %1, align 8, !dbg !6390
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 1) #6, !dbg !6390
  store i8* %call3, i8** %1, align 8, !dbg !6390
  br label %if.end, !dbg !6390

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6389
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def** @VEC_edge_base_quick_push(%struct.VEC_edge_base* %vec_, %struct.edge_def* %obj_) unnamed_addr #0 !dbg !6392 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6396, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata %struct.edge_def* %obj_, metadata !6397, metadata !DIExpression()), !dbg !6399
  %num1 = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6400
  %0 = load i32, i32* %num1, align 8, !dbg !6400
  %inc = add i32 %0, 1, !dbg !6400
  store i32 %inc, i32* %num1, align 8, !dbg !6400
  %idxprom = zext i32 %0 to i64, !dbg !6400
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6400
  call void @llvm.dbg.value(metadata %struct.edge_def** %arrayidx, metadata !6398, metadata !DIExpression()), !dbg !6399
  store %struct.edge_def* %obj_, %struct.edge_def** %arrayidx, align 8, !dbg !6400
  ret %struct.edge_def** %arrayidx, !dbg !6400
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_space(%struct.VEC_edge_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6401 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6405, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.value(metadata i32 1, metadata !6406, metadata !DIExpression()), !dbg !6407
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6408
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6408

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 1, !dbg !6408
  %0 = load i32, i32* %alloc, align 4, !dbg !6408
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6408
  %1 = load i32, i32* %num, align 8, !dbg !6408
  %cmp1 = icmp ne i32 %0, %1, !dbg !6408
  %phitmp = zext i1 %cmp1 to i32, !dbg !6408
  br label %cond.end, !dbg !6408

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6408

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6408
}

declare dso_local i8* @vec_gc_p_reserve(i8*, i32) local_unnamed_addr #1

declare dso_local void @error(i8*, ...) local_unnamed_addr #1

declare dso_local void @_fatal_insn(i8*, %struct.rtx_def*, i8*, i32, i8*) local_unnamed_addr #1

declare dso_local void @internal_error(i8*, ...) local_unnamed_addr #1

declare dso_local i32 @condjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %vec_) unnamed_addr #0 !dbg !6409 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6415, metadata !DIExpression()), !dbg !6416
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !6417
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6417

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !6417
  %0 = load i32, i32* %num, align 8, !dbg !6417
  br label %cond.end, !dbg !6417

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6417
  ret i32 %cond, !dbg !6417
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_gc_safe_grow_cleared(%struct.VEC_basic_block_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !6418 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_gc** %vec_, metadata !6423, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i32 %size_, metadata !6424, metadata !DIExpression()), !dbg !6426
  %0 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !6427
  %tobool = icmp eq %struct.VEC_basic_block_gc* %0, null, !dbg !6427
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6427

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %0, i64 0, i32 0, !dbg !6427
  br label %cond.end, !dbg !6427

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6427
  %call = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond) #7, !dbg !6427
  call void @llvm.dbg.value(metadata i32 %call, metadata !6425, metadata !DIExpression()), !dbg !6426
  tail call fastcc void @VEC_basic_block_gc_safe_grow(%struct.VEC_basic_block_gc** %vec_, i32 %size_) #7, !dbg !6427
  %1 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !6427
  %tobool1 = icmp eq %struct.VEC_basic_block_gc* %1, null, !dbg !6427
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6427

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %1, i64 0, i32 0, !dbg !6427
  br label %cond.end5, !dbg !6427

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_basic_block_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !6427
  %call7 = tail call fastcc %struct.basic_block_def** @VEC_basic_block_base_address(%struct.VEC_basic_block_base* %cond6) #7, !dbg !6427
  %idxprom = sext i32 %call to i64, !dbg !6427
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call7, i64 %idxprom, !dbg !6427
  %2 = bitcast %struct.basic_block_def** %arrayidx to i8*, !dbg !6427
  %sub = sub nsw i32 %size_, %call, !dbg !6427
  %conv = sext i32 %sub to i64, !dbg !6427
  %mul = shl nsw i64 %conv, 3, !dbg !6427
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !6427
  ret void, !dbg !6427
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_gc_safe_grow(%struct.VEC_basic_block_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !6428 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_gc** %vec_, metadata !6430, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i32 %size_, metadata !6431, metadata !DIExpression()), !dbg !6432
  %cmp = icmp sgt i32 %size_, -1, !dbg !6433
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6433

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !6433
  %tobool = icmp eq %struct.VEC_basic_block_gc* %0, null, !dbg !6433
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6433

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %0, i64 0, i32 0, !dbg !6433
  br label %cond.end, !dbg !6433

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !6433
  %call = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond) #7, !dbg !6433
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !6433
  %tobool2 = icmp eq %struct.VEC_basic_block_gc* %1, null, !dbg !6433
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !6433

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %1, i64 0, i32 0, i32 0, !dbg !6433
  %2 = load i32, i32* %num, align 8, !dbg !6433
  br label %cond.end11, !dbg !6433

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !6433
  %sub = sub nsw i32 %size_, %cond12, !dbg !6433
  %call13 = tail call fastcc i32 @VEC_basic_block_gc_reserve_exact(%struct.VEC_basic_block_gc** %vec_, i32 %sub) #7, !dbg !6433
  %3 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !6433
  %num20 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %3, i64 0, i32 0, i32 0, !dbg !6433
  store i32 %size_, i32* %num20, align 8, !dbg !6433
  ret void, !dbg !6433
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def** @VEC_basic_block_base_address(%struct.VEC_basic_block_base* %vec_) unnamed_addr #0 !dbg !6434 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6438, metadata !DIExpression()), !dbg !6439
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !6440
  %arraydecay = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 0, !dbg !6440
  %cond = select i1 %tobool, %struct.basic_block_def** null, %struct.basic_block_def** %arraydecay, !dbg !6440
  ret %struct.basic_block_def** %cond, !dbg !6440
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_gc_reserve_exact(%struct.VEC_basic_block_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6441 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_gc** %vec_, metadata !6445, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6446, metadata !DIExpression()), !dbg !6448
  %0 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !6449
  %tobool = icmp eq %struct.VEC_basic_block_gc* %0, null, !dbg !6449
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6449

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %0, i64 0, i32 0, !dbg !6449
  br label %cond.end, !dbg !6449

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6449
  %call = tail call fastcc i32 @VEC_basic_block_base_space(%struct.VEC_basic_block_base* %cond, i32 %alloc_) #7, !dbg !6449
  %tobool1 = icmp eq i32 %call, 0, !dbg !6449
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6449
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6447, metadata !DIExpression()), !dbg !6448
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6449

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_basic_block_gc** %vec_ to i8**, !dbg !6450
  %2 = load i8*, i8** %1, align 8, !dbg !6450
  %call3 = tail call i8* @vec_gc_p_reserve_exact(i8* %2, i32 %alloc_) #6, !dbg !6450
  store i8* %call3, i8** %1, align 8, !dbg !6450
  br label %if.end, !dbg !6450

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6449
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_space(%struct.VEC_basic_block_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6452 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6456, metadata !DIExpression()), !dbg !6458
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6457, metadata !DIExpression()), !dbg !6458
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !6459
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6459

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 1, !dbg !6459
  %0 = load i32, i32* %alloc, align 4, !dbg !6459
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !6459
  %1 = load i32, i32* %num, align 8, !dbg !6459
  %sub = sub i32 %0, %1, !dbg !6459
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !6459
  br label %cond.end, !dbg !6459

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !6459
  br label %cond.end, !dbg !6459

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !6459
  ret i32 %cond, !dbg !6459
}

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.edge_def* @redirect_branch_edge(%struct.edge_def* %e, %struct.basic_block_def* %target) unnamed_addr #4 !dbg !6460 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !6462, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target, metadata !6463, metadata !DIExpression()), !dbg !6467
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !6468
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6468
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !6468
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6468
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6468
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 0, !dbg !6468
  %2 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6468
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6464, metadata !DIExpression()), !dbg !6467
  %src1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !6469
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !6469
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !6465, metadata !DIExpression()), !dbg !6467
  %il2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 7, !dbg !6470
  %rtl3 = bitcast %union.basic_block_il_dependent* %il2 to %struct.rtl_bb_info**, !dbg !6470
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl3, align 8, !dbg !6470
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !6470
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6470
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !6466, metadata !DIExpression()), !dbg !6467
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !6471
  %6 = load i32, i32* %flags, align 8, !dbg !6471
  %and = and i32 %6, 1, !dbg !6473
  %tobool = icmp eq i32 %and, 0, !dbg !6473
  br i1 %tobool, label %if.else, label %cleanup, !dbg !6474

if.else:                                          ; preds = %entry
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !6475
  %bf.load = load i32, i32* %7, align 8, !dbg !6475
  %bf.clear = and i32 %bf.load, 65535, !dbg !6475
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !6475
  %8 = load i32, i32* @currently_expanding_to_rtl, align 4, !dbg !6477
  %tobool4 = icmp ne i32 %8, 0, !dbg !6477
  %or.cond = or i1 %cmp, %tobool4, !dbg !6478
  br i1 %or.cond, label %if.end6, label %cleanup, !dbg !6478

if.end6:                                          ; preds = %if.else
  %tobool7 = icmp eq i32 %8, 0, !dbg !6479
  br i1 %tobool7, label %if.then8, label %if.else12, !dbg !6481

if.then8:                                         ; preds = %if.end6
  %call = tail call fastcc zeroext i8 @patch_jump_insn(%struct.rtx_def* %5, %struct.rtx_def* %2, %struct.basic_block_def* %target) #7, !dbg !6482
  %tobool9 = icmp eq i8 %call, 0, !dbg !6482
  br i1 %tobool9, label %cleanup, label %if.end32, !dbg !6485

if.else12:                                        ; preds = %if.end6
  %head_15 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 0, !dbg !6486
  br label %for.cond, !dbg !6488

for.cond:                                         ; preds = %for.inc, %if.else12
  %.pre2 = phi %struct.rtl_bb_info* [ %4, %if.else12 ], [ %.pre, %for.inc ]
  %9 = phi %struct.rtx_def* [ %5, %if.else12 ], [ %.pre1, %for.inc ], !dbg !6489
  %insn.0.in = phi %struct.rtx_def** [ %head_15, %if.else12 ], [ %rt_rtx31, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !6491
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6466, metadata !DIExpression()), !dbg !6467
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6489
  %rt_rtx = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !6489
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6489
  %cmp19 = icmp eq %struct.rtx_def* %insn.0, %11, !dbg !6492
  br i1 %cmp19, label %if.end32.loopexit, label %for.body, !dbg !6493

for.body:                                         ; preds = %for.cond
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6494
  %bf.load20 = load i32, i32* %12, align 8, !dbg !6494
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !6494
  %cmp22 = icmp eq i32 %bf.clear21, 9, !dbg !6494
  br i1 %cmp22, label %land.lhs.true23, label %for.inc, !dbg !6496

land.lhs.true23:                                  ; preds = %for.body
  %call24 = tail call fastcc zeroext i8 @patch_jump_insn(%struct.rtx_def* %insn.0, %struct.rtx_def* %2, %struct.basic_block_def* %target) #7, !dbg !6497
  %tobool25 = icmp eq i8 %call24, 0, !dbg !6497
  br i1 %tobool25, label %cleanup.loopexit, label %land.lhs.true23.for.inc_crit_edge, !dbg !6498

land.lhs.true23.for.inc_crit_edge:                ; preds = %land.lhs.true23
  %.pre.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl3, align 8, !dbg !6489
  br label %for.inc, !dbg !6498

for.inc:                                          ; preds = %land.lhs.true23.for.inc_crit_edge, %for.body
  %.pre = phi %struct.rtl_bb_info* [ %.pre.pre, %land.lhs.true23.for.inc_crit_edge ], [ %.pre2, %for.body ], !dbg !6489
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6499
  %rt_rtx31 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !6499
  %end_18.phi.trans.insert = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %.pre, i64 0, i32 1, !dbg !6500
  %.pre1 = load %struct.rtx_def*, %struct.rtx_def** %end_18.phi.trans.insert, align 8, !dbg !6489
  br label %for.cond, !dbg !6501, !llvm.loop !6502

if.end32.loopexit:                                ; preds = %for.cond
  br label %if.end32, !dbg !6504

if.end32:                                         ; preds = %if.end32.loopexit, %if.then8
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6504
  %tobool33 = icmp eq %struct._IO_FILE* %14, null, !dbg !6504
  br i1 %tobool33, label %if.end40, label %if.then34, !dbg !6506

if.then34:                                        ; preds = %if.end32
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !6507
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 9, !dbg !6508
  %16 = load i32, i32* %index, align 8, !dbg !6508
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6509
  %index37 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i64 0, i32 9, !dbg !6510
  %18 = load i32, i32* %index37, align 8, !dbg !6510
  %index38 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %target, i64 0, i32 9, !dbg !6511
  %19 = load i32, i32* %index38, align 8, !dbg !6511
  %call39 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i64 0, i64 0), i32 %16, i32 %18, i32 %19) #6, !dbg !6512
  br label %if.end40, !dbg !6512

if.end40:                                         ; preds = %if.end32, %if.then34
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6513
  %cmp42 = icmp eq %struct.basic_block_def* %20, %target, !dbg !6515
  br i1 %cmp42, label %cleanup, label %if.then43, !dbg !6516

if.then43:                                        ; preds = %if.end40
  %call44 = tail call %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def* %e, %struct.basic_block_def* %target) #6, !dbg !6517
  call void @llvm.dbg.value(metadata %struct.edge_def* %call44, metadata !6462, metadata !DIExpression()), !dbg !6467
  br label %cleanup, !dbg !6518

cleanup.loopexit:                                 ; preds = %land.lhs.true23
  br label %cleanup, !dbg !6519

cleanup:                                          ; preds = %cleanup.loopexit, %if.end40, %if.then8, %entry, %if.then43, %if.else
  %retval.0 = phi %struct.edge_def* [ null, %entry ], [ null, %if.else ], [ null, %if.then8 ], [ %call44, %if.then43 ], [ %e, %if.end40 ], [ null, %cleanup.loopexit ], !dbg !6467
  ret %struct.edge_def* %retval.0, !dbg !6519
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @patch_jump_insn(%struct.rtx_def* %insn, %struct.rtx_def* %old_label, %struct.basic_block_def* %new_bb) unnamed_addr #4 !dbg !6520 {
entry:
  %tmp = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6524, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_label, metadata !6525, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb, metadata !6526, metadata !DIExpression()), !dbg !6543
  %0 = bitcast %struct.rtx_def** %tmp to i8*, !dbg !6544
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6544
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tmp, metadata !6527, metadata !DIExpression(DW_OP_deref)), !dbg !6543
  %call = call zeroext i8 @tablejump_p(%struct.rtx_def* %insn, %struct.rtx_def** null, %struct.rtx_def** nonnull %tmp) #6, !dbg !6545
  %tobool = icmp eq i8 %call, 0, !dbg !6545
  br i1 %tobool, label %if.else139, label %if.then, !dbg !6546

if.then:                                          ; preds = %entry
  %call1 = call %struct.rtx_def* @block_label(%struct.basic_block_def* %new_bb) #7, !dbg !6547
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !6532, metadata !DIExpression()), !dbg !6548
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6549
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !6549
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6549
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 1, !dbg !6549
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6549
  %cmp = icmp eq %struct.basic_block_def* %3, %new_bb, !dbg !6551
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6552

if.end:                                           ; preds = %if.then
  %4 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !6553
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6527, metadata !DIExpression()), !dbg !6543
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, !dbg !6553
  %5 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6553
  %6 = bitcast %union.rtunion_def* %5 to i32**, !dbg !6553
  %7 = load i32*, i32** %6, align 8, !dbg !6553
  %bf.load = load i32, i32* %7, align 8, !dbg !6553
  %bf.clear = and i32 %bf.load, 65535, !dbg !6553
  %cmp3 = icmp eq i32 %bf.clear, 20, !dbg !6555
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6527, metadata !DIExpression()), !dbg !6543
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !6556

if.then4:                                         ; preds = %if.end
  %arrayidx11 = getelementptr inbounds i32, i32* %7, i64 2, !dbg !6557
  br label %if.end20, !dbg !6558

if.else:                                          ; preds = %if.end
  %8 = getelementptr inbounds i32, i32* %7, i64 4, !dbg !6559
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then4
  %vec.0.in.in.in = phi i32* [ %arrayidx11, %if.then4 ], [ %8, %if.else ]
  %vec.0.in = bitcast i32* %vec.0.in.in.in to %struct.rtvec_def**, !dbg !6560
  %vec.0 = load %struct.rtvec_def*, %struct.rtvec_def** %vec.0.in, align 8, !dbg !6560
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %vec.0, metadata !6528, metadata !DIExpression()), !dbg !6548
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %vec.0, i64 0, i32 0, !dbg !6561
  %9 = load i32, i32* %num_elem, align 8, !dbg !6561
  call void @llvm.dbg.value(metadata i32 %9, metadata !6531, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6548
  %arrayidx35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %old_label, i64 0, i32 1, i32 0, i32 2, !dbg !6563
  %rt_int = bitcast i64* %arrayidx35 to i32*, !dbg !6563
  %arrayidx38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 2, !dbg !6563
  %rt_int39 = bitcast i64* %arrayidx38 to i32*, !dbg !6563
  %10 = sext i32 %9 to i64, !dbg !6567
  br label %for.cond, !dbg !6567

for.cond:                                         ; preds = %for.inc, %if.end20
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc ], [ %10, %if.end20 ]
  %indvars.iv.next4 = add nsw i64 %indvars.iv3, -1, !dbg !6568
  call void @llvm.dbg.value(metadata i32 undef, metadata !6531, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6548
  %cmp21 = icmp sgt i64 %indvars.iv3, 0, !dbg !6569
  br i1 %cmp21, label %for.body, label %for.end, !dbg !6570

for.body:                                         ; preds = %for.cond
  %arrayidx22 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %vec.0, i64 0, i32 1, i64 %indvars.iv.next4, !dbg !6571
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx22, align 8, !dbg !6571
  %arrayidx25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6571
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !6571
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !6571
  %cmp27 = icmp eq %struct.rtx_def* %12, %old_label, !dbg !6572
  br i1 %cmp27, label %if.then28, label %for.inc, !dbg !6573

if.then28:                                        ; preds = %for.body
  %call29 = call %struct.rtx_def* @gen_rtx_fmt_u_stat(i32 44, i32 16, %struct.rtx_def* %call1) #6, !dbg !6574
  store %struct.rtx_def* %call29, %struct.rtx_def** %arrayidx22, align 8, !dbg !6575
  %13 = load i32, i32* %rt_int, align 8, !dbg !6576
  %dec = add nsw i32 %13, -1, !dbg !6576
  store i32 %dec, i32* %rt_int, align 8, !dbg !6576
  %14 = load i32, i32* %rt_int39, align 8, !dbg !6577
  %inc = add nsw i32 %14, 1, !dbg !6577
  store i32 %inc, i32* %rt_int39, align 8, !dbg !6577
  br label %for.inc, !dbg !6578

for.inc:                                          ; preds = %for.body, %if.then28
  call void @llvm.dbg.value(metadata i32 undef, metadata !6531, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6548
  br label %for.cond, !dbg !6579, !llvm.loop !6580

for.end:                                          ; preds = %for.cond
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6582
  %bf.load42 = load i32, i32* %15, align 8, !dbg !6582
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !6582
  %cmp44 = icmp eq i32 %bf.clear43, 8, !dbg !6582
  br i1 %cmp44, label %cond.true, label %lor.lhs.false, !dbg !6582

lor.lhs.false:                                    ; preds = %for.end
  %cmp47 = icmp eq i32 %bf.clear43, 7, !dbg !6582
  br i1 %cmp47, label %cond.true, label %lor.lhs.false48, !dbg !6582

lor.lhs.false48:                                  ; preds = %lor.lhs.false
  %cmp51 = icmp eq i32 %bf.clear43, 9, !dbg !6582
  br i1 %cmp51, label %cond.true, label %lor.lhs.false52, !dbg !6582

lor.lhs.false52:                                  ; preds = %lor.lhs.false48
  %cmp55 = icmp eq i32 %bf.clear43, 10, !dbg !6582
  br i1 %cmp55, label %cond.true, label %cond.end74, !dbg !6582

cond.true:                                        ; preds = %lor.lhs.false52, %lor.lhs.false48, %lor.lhs.false, %for.end
  %u56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6582
  %16 = getelementptr inbounds %union.u, %union.u* %u56, i64 1, i32 0, i32 0, i64 0, !dbg !6582
  %17 = bitcast %union.rtunion_def* %16 to i32**, !dbg !6582
  %18 = load i32*, i32** %17, align 8, !dbg !6582
  %bf.load60 = load i32, i32* %18, align 8, !dbg !6582
  %bf.clear61 = and i32 %bf.load60, 65535, !dbg !6582
  %cmp62 = icmp eq i32 %bf.clear61, 23, !dbg !6582
  %19 = bitcast i32* %18 to %struct.rtx_def*, !dbg !6582
  br i1 %cmp62, label %cond.end74, label %cond.false, !dbg !6582

cond.false:                                       ; preds = %cond.true
  %call72 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %19) #6, !dbg !6582
  br label %cond.end74, !dbg !6582

cond.end74:                                       ; preds = %lor.lhs.false52, %cond.false, %cond.true
  %20 = phi %struct.rtx_def* [ %call72, %cond.false ], [ %19, %cond.true ], [ null, %lor.lhs.false52 ], !dbg !6582
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !6527, metadata !DIExpression()), !dbg !6543
  store %struct.rtx_def* %20, %struct.rtx_def** %tmp, align 8, !dbg !6584
  %cmp76 = icmp eq %struct.rtx_def* %20, null, !dbg !6585
  br i1 %cmp76, label %cleanup, label %land.lhs.true, !dbg !6586

land.lhs.true:                                    ; preds = %cond.end74
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !6527, metadata !DIExpression()), !dbg !6543
  %arrayidx79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6587
  %rt_rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**, !dbg !6587
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx80, align 8, !dbg !6587
  %22 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !6588
  %cmp81 = icmp eq %struct.rtx_def* %21, %22, !dbg !6589
  br i1 %cmp81, label %land.lhs.true82, label %cleanup, !dbg !6590

land.lhs.true82:                                  ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !6527, metadata !DIExpression()), !dbg !6543
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6591
  %24 = bitcast %union.rtunion_def* %23 to i32**, !dbg !6591
  %25 = load i32*, i32** %24, align 8, !dbg !6591
  %bf.load87 = load i32, i32* %25, align 8, !dbg !6591
  %bf.clear88 = and i32 %bf.load87, 65535, !dbg !6591
  %cmp89 = icmp eq i32 %bf.clear88, 47, !dbg !6592
  br i1 %cmp89, label %land.lhs.true90, label %cleanup, !dbg !6593

land.lhs.true90:                                  ; preds = %land.lhs.true82
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !6527, metadata !DIExpression()), !dbg !6543
  %26 = getelementptr inbounds i32, i32* %25, i64 6, !dbg !6594
  %27 = bitcast i32* %26 to i32**, !dbg !6594
  %28 = load i32*, i32** %27, align 8, !dbg !6594
  %bf.load99 = load i32, i32* %28, align 8, !dbg !6594
  %bf.clear100 = and i32 %bf.load99, 65535, !dbg !6594
  %cmp101 = icmp eq i32 %bf.clear100, 44, !dbg !6595
  br i1 %cmp101, label %land.lhs.true102, label %cleanup, !dbg !6596

land.lhs.true102:                                 ; preds = %land.lhs.true90
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !6527, metadata !DIExpression()), !dbg !6543
  %arrayidx113 = getelementptr inbounds i32, i32* %28, i64 2, !dbg !6597
  %rt_rtx114 = bitcast i32* %arrayidx113 to %struct.rtx_def**, !dbg !6597
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx114, align 8, !dbg !6597
  %cmp115 = icmp eq %struct.rtx_def* %29, %old_label, !dbg !6598
  br i1 %cmp115, label %if.then116, label %cleanup, !dbg !6599

if.then116:                                       ; preds = %land.lhs.true102
  %call117 = call %struct.rtx_def* @gen_rtx_fmt_u_stat(i32 44, i32 16, %struct.rtx_def* %call1) #6, !dbg !6600
  %30 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !6602
  call void @llvm.dbg.value(metadata %struct.rtx_def* %30, metadata !6527, metadata !DIExpression()), !dbg !6543
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6602
  %rt_rtx121 = bitcast %union.rtunion_def* %31 to %struct.rtx_def**, !dbg !6602
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx121, align 8, !dbg !6602
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6602
  %rt_rtx125 = bitcast %union.rtunion_def* %33 to %struct.rtx_def**, !dbg !6602
  store %struct.rtx_def* %call117, %struct.rtx_def** %rt_rtx125, align 8, !dbg !6603
  %34 = load i32, i32* %rt_int, align 8, !dbg !6604
  %dec130 = add nsw i32 %34, -1, !dbg !6604
  store i32 %dec130, i32* %rt_int, align 8, !dbg !6604
  %35 = load i32, i32* %rt_int39, align 8, !dbg !6605
  %inc135 = add nsw i32 %35, 1, !dbg !6605
  store i32 %inc135, i32* %rt_int39, align 8, !dbg !6605
  br label %cleanup, !dbg !6606

cleanup:                                          ; preds = %cond.end74, %land.lhs.true, %land.lhs.true82, %land.lhs.true90, %land.lhs.true102, %if.then116, %if.then
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %if.then116 ], [ true, %land.lhs.true102 ], [ true, %land.lhs.true90 ], [ true, %land.lhs.true82 ], [ true, %land.lhs.true ], [ true, %cond.end74 ]
  br i1 %cleanup.dest.slot.0, label %if.end281, label %cleanup282

if.else139:                                       ; preds = %entry
  %u140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6607
  %36 = getelementptr inbounds %union.u, %union.u* %u140, i64 1, i32 0, i32 0, i64 0, !dbg !6607
  %rt_rtx143 = bitcast %union.rtunion_def* %36 to %struct.rtx_def**, !dbg !6607
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx143, align 8, !dbg !6607
  %call144 = call %struct.rtx_def* @extract_asm_operands(%struct.rtx_def* %37) #6, !dbg !6608
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call144, metadata !6527, metadata !DIExpression()), !dbg !6543
  store %struct.rtx_def* %call144, %struct.rtx_def** %tmp, align 8, !dbg !6609
  %cmp145 = icmp eq %struct.rtx_def* %call144, null, !dbg !6610
  br i1 %cmp145, label %if.else241, label %if.then146, !dbg !6611

if.then146:                                       ; preds = %if.else139
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call144, metadata !6527, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression()), !dbg !6612
  %38 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6613
  %cfg154 = getelementptr inbounds %struct.function, %struct.function* %38, i64 0, i32 1, !dbg !6613
  %39 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg154, align 8, !dbg !6613
  %x_exit_block_ptr155 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %39, i64 0, i32 1, !dbg !6613
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr155, align 8, !dbg !6613
  %cmp156 = icmp eq %struct.basic_block_def* %40, %new_bb, !dbg !6615
  br i1 %cmp156, label %cleanup235, label %if.end158, !dbg !6616

if.end158:                                        ; preds = %if.then146
  %u147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call144, i64 0, i32 1, !dbg !6617
  %41 = getelementptr inbounds %union.u, %union.u* %u147, i64 1, i32 0, i32 0, i64 0, !dbg !6617
  %rt_rtvec150 = bitcast %union.rtunion_def* %41 to %struct.rtvec_def**, !dbg !6617
  %42 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec150, align 8, !dbg !6617
  %num_elem151 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %42, i64 0, i32 0, !dbg !6617
  %43 = load i32, i32* %num_elem151, align 8, !dbg !6617
  call void @llvm.dbg.value(metadata i32 %43, metadata !6536, metadata !DIExpression()), !dbg !6612
  %call159 = call %struct.rtx_def* @block_label(%struct.basic_block_def* %new_bb) #7, !dbg !6618
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call159, metadata !6537, metadata !DIExpression()), !dbg !6612
  call void @llvm.dbg.value(metadata i32 0, metadata !6533, metadata !DIExpression()), !dbg !6612
  %arrayidx193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %old_label, i64 0, i32 1, i32 0, i32 2, !dbg !6619
  %rt_int194 = bitcast i64* %arrayidx193 to i32*, !dbg !6619
  %arrayidx198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call159, i64 0, i32 1, i32 0, i32 2, !dbg !6619
  %rt_int199 = bitcast i64* %arrayidx198 to i32*, !dbg !6619
  %44 = sext i32 %43 to i64, !dbg !6622
  br label %for.cond160, !dbg !6622

for.cond160:                                      ; preds = %for.inc202, %if.end158
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc202 ], [ 0, %if.end158 ], !dbg !6623
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6533, metadata !DIExpression()), !dbg !6612
  %cmp161 = icmp slt i64 %indvars.iv, %44, !dbg !6624
  br i1 %cmp161, label %for.body162, label %for.end204, !dbg !6625

for.body162:                                      ; preds = %for.cond160
  %45 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !6626
  call void @llvm.dbg.value(metadata %struct.rtx_def* %45, metadata !6527, metadata !DIExpression()), !dbg !6543
  %u163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i64 0, i32 1, !dbg !6626
  %46 = getelementptr inbounds %union.u, %union.u* %u163, i64 1, i32 0, i32 0, i64 0, !dbg !6626
  %rt_rtvec166 = bitcast %union.rtunion_def* %46 to %struct.rtvec_def**, !dbg !6626
  %47 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec166, align 8, !dbg !6626
  %arrayidx169 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %47, i64 0, i32 1, i64 %indvars.iv, !dbg !6626
  %48 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx169, align 8, !dbg !6626
  call void @llvm.dbg.value(metadata %struct.rtx_def* %48, metadata !6539, metadata !DIExpression()), !dbg !6627
  %49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i64 0, i32 0, !dbg !6628
  %bf.load170 = load i32, i32* %49, align 8, !dbg !6628
  %bf.clear171 = and i32 %bf.load170, 65535, !dbg !6628
  %cmp172 = icmp eq i32 %bf.clear171, 44, !dbg !6628
  br i1 %cmp172, label %cond.end175, label %cond.true173, !dbg !6628

cond.true173:                                     ; preds = %for.body162
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 971, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6628
  br label %cond.end175, !dbg !6628

cond.end175:                                      ; preds = %for.body162, %cond.true173
  %arrayidx179 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6629
  %rt_rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**, !dbg !6629
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx180, align 8, !dbg !6629
  %cmp181 = icmp eq %struct.rtx_def* %50, %old_label, !dbg !6630
  br i1 %cmp181, label %if.then182, label %for.inc202, !dbg !6631

if.then182:                                       ; preds = %cond.end175
  %call183 = call %struct.rtx_def* @gen_rtx_fmt_u_stat(i32 44, i32 16, %struct.rtx_def* %call159) #6, !dbg !6632
  %51 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !6633
  call void @llvm.dbg.value(metadata %struct.rtx_def* %51, metadata !6527, metadata !DIExpression()), !dbg !6543
  %u184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i64 0, i32 1, !dbg !6633
  %52 = getelementptr inbounds %union.u, %union.u* %u184, i64 1, i32 0, i32 0, i64 0, !dbg !6633
  %rt_rtvec187 = bitcast %union.rtunion_def* %52 to %struct.rtvec_def**, !dbg !6633
  %53 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec187, align 8, !dbg !6633
  %arrayidx190 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %53, i64 0, i32 1, i64 %indvars.iv, !dbg !6633
  store %struct.rtx_def* %call183, %struct.rtx_def** %arrayidx190, align 8, !dbg !6634
  %54 = load i32, i32* %rt_int194, align 8, !dbg !6635
  %dec195 = add nsw i32 %54, -1, !dbg !6635
  store i32 %dec195, i32* %rt_int194, align 8, !dbg !6635
  %55 = load i32, i32* %rt_int199, align 8, !dbg !6636
  %inc200 = add nsw i32 %55, 1, !dbg !6636
  store i32 %inc200, i32* %rt_int199, align 8, !dbg !6636
  br label %for.inc202, !dbg !6637

for.inc202:                                       ; preds = %cond.end175, %if.then182
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6638
  call void @llvm.dbg.value(metadata i32 undef, metadata !6533, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6612
  br label %for.cond160, !dbg !6639, !llvm.loop !6640

for.end204:                                       ; preds = %for.cond160
  %arrayidx207 = getelementptr inbounds %union.u, %union.u* %u140, i64 1, i32 0, i32 1, !dbg !6642
  %rt_rtx208 = bitcast %struct.object_block** %arrayidx207 to %struct.rtx_def**, !dbg !6642
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx208, align 8, !dbg !6642
  %cmp209 = icmp eq %struct.rtx_def* %56, %old_label, !dbg !6644
  br i1 %cmp209, label %if.then210, label %if.else219, !dbg !6645

if.then210:                                       ; preds = %for.end204
  store %struct.rtx_def* %call159, %struct.rtx_def** %rt_rtx208, align 8, !dbg !6646
  %call215 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 9, %struct.rtx_def* %call159) #6, !dbg !6648
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call215, metadata !6538, metadata !DIExpression()), !dbg !6612
  %tobool216 = icmp eq %struct.rtx_def* %call215, null, !dbg !6649
  br i1 %tobool216, label %cleanup235, label %if.then217, !dbg !6651

if.then217:                                       ; preds = %if.then210
  call void @remove_note(%struct.rtx_def* %insn, %struct.rtx_def* nonnull %call215) #6, !dbg !6652
  br label %cleanup235, !dbg !6652

if.else219:                                       ; preds = %for.end204
  %call220 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 9, %struct.rtx_def* %old_label) #6, !dbg !6653
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call220, metadata !6538, metadata !DIExpression()), !dbg !6612
  %tobool221 = icmp eq %struct.rtx_def* %call220, null, !dbg !6655
  br i1 %tobool221, label %if.end223, label %if.then222, !dbg !6657

if.then222:                                       ; preds = %if.else219
  call void @remove_note(%struct.rtx_def* %insn, %struct.rtx_def* nonnull %call220) #6, !dbg !6658
  br label %if.end223, !dbg !6658

if.end223:                                        ; preds = %if.else219, %if.then222
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx208, align 8, !dbg !6659
  %cmp228 = icmp eq %struct.rtx_def* %57, %call159, !dbg !6661
  br i1 %cmp228, label %cleanup235, label %land.lhs.true229, !dbg !6662

land.lhs.true229:                                 ; preds = %if.end223
  %call230 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 9, %struct.rtx_def* %call159) #6, !dbg !6663
  %tobool231 = icmp eq %struct.rtx_def* %call230, null, !dbg !6663
  br i1 %tobool231, label %if.then232, label %cleanup235, !dbg !6664

if.then232:                                       ; preds = %land.lhs.true229
  call void @add_reg_note(%struct.rtx_def* %insn, i32 9, %struct.rtx_def* %call159) #6, !dbg !6665
  br label %cleanup235, !dbg !6665

cleanup235:                                       ; preds = %if.then210, %land.lhs.true229, %if.end223, %if.then217, %if.then232, %if.then146
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then146 ], [ true, %if.end223 ], [ true, %land.lhs.true229 ], [ true, %if.then232 ], [ true, %if.then210 ], [ true, %if.then217 ]
  br i1 %cleanup.dest.slot.1, label %if.end281, label %cleanup282

if.else241:                                       ; preds = %if.else139
  %call242 = call i32 @computed_jump_p(%struct.rtx_def* %insn) #6, !dbg !6666
  %tobool243 = icmp eq i32 %call242, 0, !dbg !6666
  br i1 %tobool243, label %lor.lhs.false244, label %cleanup282, !dbg !6669

lor.lhs.false244:                                 ; preds = %if.else241
  %call245 = call i32 @returnjump_p(%struct.rtx_def* %insn) #6, !dbg !6670
  %tobool246 = icmp eq i32 %call245, 0, !dbg !6670
  br i1 %tobool246, label %if.end248, label %cleanup282, !dbg !6671

if.end248:                                        ; preds = %lor.lhs.false244
  %58 = load i32, i32* @currently_expanding_to_rtl, align 4, !dbg !6672
  %tobool249 = icmp eq i32 %58, 0, !dbg !6672
  br i1 %tobool249, label %if.end248.if.then256_crit_edge, label %lor.lhs.false250, !dbg !6674

if.end248.if.then256_crit_edge:                   ; preds = %if.end248
  %arrayidx259.phi.trans.insert = getelementptr inbounds %union.u, %union.u* %u140, i64 1, i32 0, i32 1, !dbg !6675
  %rt_rtx260.phi.trans.insert = bitcast %struct.object_block** %arrayidx259.phi.trans.insert to %struct.rtx_def**, !dbg !6675
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx260.phi.trans.insert, align 8, !dbg !6677
  br label %if.then256, !dbg !6674

lor.lhs.false250:                                 ; preds = %if.end248
  %arrayidx253 = getelementptr inbounds %union.u, %union.u* %u140, i64 1, i32 0, i32 1, !dbg !6678
  %rt_rtx254 = bitcast %struct.object_block** %arrayidx253 to %struct.rtx_def**, !dbg !6678
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx254, align 8, !dbg !6678
  %cmp255 = icmp eq %struct.rtx_def* %59, %old_label, !dbg !6679
  br i1 %cmp255, label %if.then256, label %if.end281, !dbg !6680

if.then256:                                       ; preds = %if.end248.if.then256_crit_edge, %lor.lhs.false250
  %60 = phi %struct.rtx_def* [ %.pre, %if.end248.if.then256_crit_edge ], [ %old_label, %lor.lhs.false250 ], !dbg !6677
  %cmp261 = icmp eq %struct.rtx_def* %60, %old_label, !dbg !6677
  br i1 %cmp261, label %cond.end264, label %cond.true262, !dbg !6677

cond.true262:                                     ; preds = %if.then256
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1011, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6677
  br label %cond.end264, !dbg !6677

cond.end264:                                      ; preds = %if.then256, %cond.true262
  %call266 = call %struct.rtx_def* @block_label(%struct.basic_block_def* %new_bb) #7, !dbg !6681
  %call267 = call i32 @redirect_jump(%struct.rtx_def* %insn, %struct.rtx_def* %call266, i32 0) #6, !dbg !6683
  %tobool268 = icmp eq i32 %call267, 0, !dbg !6683
  br i1 %tobool268, label %if.then269, label %if.end281, !dbg !6684

if.then269:                                       ; preds = %cond.end264
  %61 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6685
  %cfg271 = getelementptr inbounds %struct.function, %struct.function* %61, i64 0, i32 1, !dbg !6685
  %62 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg271, align 8, !dbg !6685
  %x_exit_block_ptr272 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %62, i64 0, i32 1, !dbg !6685
  %63 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr272, align 8, !dbg !6685
  %cmp273 = icmp eq %struct.basic_block_def* %63, %new_bb, !dbg !6685
  br i1 %cmp273, label %cleanup282, label %cond.true274, !dbg !6685

cond.true274:                                     ; preds = %if.then269
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 1018, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6685
  br label %cleanup282, !dbg !6685

if.end281:                                        ; preds = %cond.end264, %cleanup235, %lor.lhs.false250, %cleanup
  br label %cleanup282, !dbg !6687

cleanup282:                                       ; preds = %lor.lhs.false244, %if.else241, %cond.true274, %if.then269, %cleanup, %cleanup235, %if.end281
  %retval.2 = phi i8 [ 0, %cleanup ], [ 1, %if.end281 ], [ 0, %cleanup235 ], [ 0, %lor.lhs.false244 ], [ 0, %if.else241 ], [ 0, %if.then269 ], [ 0, %cond.true274 ], !dbg !6543
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6688
  ret i8 %retval.2, !dbg !6688
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_u_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @extract_asm_operands(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @computed_jump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @df_bb_delete(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @first_insn_after_basic_block_note(%struct.basic_block_def* %block) unnamed_addr #4 !dbg !6689 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !6691, metadata !DIExpression()), !dbg !6693
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 7, !dbg !6694
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6694
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6694
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !6694
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6694
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !6692, metadata !DIExpression()), !dbg !6693
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !6695
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6697

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !6698
  %bf.load = load i32, i32* %2, align 8, !dbg !6698
  %bf.clear = and i32 %bf.load, 65535, !dbg !6698
  %cmp1 = icmp eq i32 %bf.clear, 12, !dbg !6698
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6700

if.then2:                                         ; preds = %if.end
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6701
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !6701
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6701
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6692, metadata !DIExpression()), !dbg !6693
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !6693
  %bf.load4.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !6702
  br label %if.end3, !dbg !6703

if.end3:                                          ; preds = %if.then2, %if.end
  %bf.load4 = phi i32 [ %bf.load4.pre, %if.then2 ], [ %bf.load, %if.end ], !dbg !6702
  %insn.0 = phi %struct.rtx_def* [ %4, %if.then2 ], [ %1, %if.end ], !dbg !6693
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6692, metadata !DIExpression()), !dbg !6693
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !6702
  %cmp6 = icmp eq i32 %bf.clear5, 13, !dbg !6702
  br i1 %cmp6, label %land.lhs.true, label %cond.true, !dbg !6702

land.lhs.true:                                    ; preds = %if.end3
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !6702
  %5 = getelementptr inbounds %union.u, %union.u* %u7, i64 1, i32 0, i32 0, i64 0, !dbg !6702
  %rt_int = bitcast %union.rtunion_def* %5 to i32*, !dbg !6702
  %6 = load i32, i32* %rt_int, align 8, !dbg !6702
  %cmp10 = icmp eq i32 %6, 10, !dbg !6702
  br i1 %cmp10, label %cond.end, label %cond.true, !dbg !6702

cond.true:                                        ; preds = %land.lhs.true, %if.end3
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 513, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6702
  br label %cond.end, !dbg !6702

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6704
  %rt_rtx14 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !6704
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !6704
  br label %cleanup, !dbg !6705

cleanup:                                          ; preds = %entry, %cond.end
  %retval.0 = phi %struct.rtx_def* [ %8, %cond.end ], [ null, %entry ], !dbg !6693
  ret %struct.rtx_def* %retval.0, !dbg !6706
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6707 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6711, metadata !DIExpression()), !dbg !6712
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !6713
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !6714
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6714
  ret %struct.basic_block_def* %0, !dbg !6715
}

declare dso_local i32 @any_uncondjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @keep_with_call_p(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @need_fake_edge_p(%struct.rtx_def* %insn) unnamed_addr #4 !dbg !6716 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6720, metadata !DIExpression()), !dbg !6721
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6722
  %bf.load = load i32, i32* %0, align 8, !dbg !6722
  %bf.clear = and i32 %bf.load, 65535, !dbg !6722
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !6722
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !6722

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !6722
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !6722

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !6722
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !6722

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !6722
  br i1 %cmp11, label %if.end, label %return, !dbg !6724

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %cmp14 = icmp eq i32 %bf.clear, 10, !dbg !6725
  br i1 %cmp14, label %land.lhs.true, label %if.end29, !dbg !6727

land.lhs.true:                                    ; preds = %if.end
  %bf.clear16 = and i32 %bf.load, 16777216, !dbg !6728
  %tobool = icmp eq i32 %bf.clear16, 0, !dbg !6728
  br i1 %tobool, label %land.lhs.true17, label %if.end29, !dbg !6729

land.lhs.true17:                                  ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 27, %struct.rtx_def* null) #6, !dbg !6730
  %tobool18 = icmp eq %struct.rtx_def* %call, null, !dbg !6730
  br i1 %tobool18, label %land.lhs.true19, label %if.end29, !dbg !6731

land.lhs.true19:                                  ; preds = %land.lhs.true17
  %bf.load20 = load i32, i32* %0, align 8, !dbg !6732
  %bf.clear22 = and i32 %bf.load20, 67108864, !dbg !6732
  %tobool23 = icmp eq i32 %bf.clear22, 0, !dbg !6732
  br i1 %tobool23, label %lor.lhs.false24, label %if.end29, !dbg !6732

lor.lhs.false24:                                  ; preds = %land.lhs.true19
  %tobool27 = icmp slt i32 %bf.load20, 0, !dbg !6732
  br i1 %tobool27, label %if.end29, label %return, !dbg !6733

if.end29:                                         ; preds = %land.lhs.true19, %land.lhs.true17, %land.lhs.true, %lor.lhs.false24, %if.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6734
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6734
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !6734
  %3 = load i32*, i32** %2, align 8, !dbg !6734
  %bf.load30 = load i32, i32* %3, align 8, !dbg !6734
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !6734
  %cmp32 = icmp eq i32 %bf.clear31, 17, !dbg !6735
  br i1 %cmp32, label %land.lhs.true33, label %lor.lhs.false42, !dbg !6736

land.lhs.true33:                                  ; preds = %if.end29
  %bf.clear40 = and i32 %bf.load30, 134217728, !dbg !6737
  %tobool41 = icmp eq i32 %bf.clear40, 0, !dbg !6737
  br i1 %tobool41, label %lor.lhs.false42, label %lor.end, !dbg !6738

lor.lhs.false42:                                  ; preds = %land.lhs.true33, %if.end29
  %cmp49 = icmp eq i32 %bf.clear31, 15, !dbg !6739
  br i1 %cmp49, label %land.lhs.true50, label %lor.rhs, !dbg !6740

land.lhs.true50:                                  ; preds = %lor.lhs.false42
  %call51 = tail call i32 @asm_noperands(%struct.rtx_def* %insn) #6, !dbg !6741
  %cmp52 = icmp eq i32 %call51, -1, !dbg !6742
  br i1 %cmp52, label %land.lhs.true50.lor.rhs_crit_edge, label %land.lhs.true53, !dbg !6743

land.lhs.true50.lor.rhs_crit_edge:                ; preds = %land.lhs.true50
  %.pre = load i32*, i32** %2, align 8, !dbg !6744
  br label %lor.rhs, !dbg !6743

land.lhs.true53:                                  ; preds = %land.lhs.true50
  %rt_rtx57 = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !6745
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx57, align 8, !dbg !6745
  %arrayidx60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6745
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtvec_def**, !dbg !6745
  %5 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6745
  %arrayidx61 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i64 0, i32 1, i64 0, !dbg !6745
  %6 = bitcast %struct.rtx_def** %arrayidx61 to i32**, !dbg !6745
  %7 = load i32*, i32** %6, align 8, !dbg !6745
  %bf.load62 = load i32, i32* %7, align 8, !dbg !6745
  %bf.clear64 = and i32 %bf.load62, 134217728, !dbg !6745
  %tobool65 = icmp eq i32 %bf.clear64, 0, !dbg !6745
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !6746
  br i1 %tobool65, label %lor.rhs, label %lor.end, !dbg !6746

lor.rhs:                                          ; preds = %land.lhs.true50.lor.rhs_crit_edge, %land.lhs.true53, %lor.lhs.false42
  %9 = phi i32* [ %.pre, %land.lhs.true50.lor.rhs_crit_edge ], [ %8, %land.lhs.true53 ], [ %3, %lor.lhs.false42 ], !dbg !6744
  %bf.load70 = load i32, i32* %9, align 8, !dbg !6744
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !6744
  %cmp72 = icmp eq i32 %bf.clear71, 16, !dbg !6747
  %phitmp = zext i1 %cmp72 to i8, !dbg !6746
  br label %lor.end, !dbg !6746

lor.end:                                          ; preds = %land.lhs.true33, %land.lhs.true53, %lor.rhs
  %10 = phi i8 [ 1, %land.lhs.true53 ], [ 1, %land.lhs.true33 ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !6748

return:                                           ; preds = %lor.lhs.false24, %lor.lhs.false8, %lor.end
  %retval.0 = phi i8 [ %10, %lor.end ], [ 0, %lor.lhs.false8 ], [ 1, %lor.lhs.false24 ], !dbg !6721
  ret i8 %retval.0, !dbg !6749
}

declare dso_local %struct.edge_def* @find_edge(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_use(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6750 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6754, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6755, metadata !DIExpression()), !dbg !6756
  br label %land.end, !dbg !6757

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6757
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6757
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !6757
  ret %struct.basic_block_def* %0, !dbg !6757
}

declare dso_local %struct.edge_def* @split_block(%struct.basic_block_def*, i8*) local_unnamed_addr #1

declare dso_local void @verify_flow_info() local_unnamed_addr #1

declare dso_local i32 @asm_noperands(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @debug_rtx(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @control_flow_insn_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @label_is_jump_target_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @set_first_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @set_last_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @unlink_insn_chain(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @locator_eq(i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_nop() local_unnamed_addr #1

declare dso_local %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @do_compare_rtx_and_jump(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2244, !2245, !2246}
!llvm.ident = !{!2247}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pass_free_cfg", scope: !2, file: !3, line: 432, type: !2218, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !2089, globals: !2092, nameTableKind: None)
!3 = !DIFile(filename: "cfgrtl.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !150, !154, !160, !165, !170, !189, !196, !203, !397, !540, !547, !723, !2057}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !142, line: 31, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146, !147, !148, !149}
!144 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !142, line: 91, baseType: !7, size: 32, elements: !151)
!151 = !{!152, !153}
!152 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!153 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !155, line: 363, baseType: !7, size: 32, elements: !156)
!155 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!156 = !{!157, !158, !159}
!157 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!158 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!159 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !155, line: 355, baseType: !7, size: 32, elements: !161)
!161 = !{!162, !163, !164}
!162 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !166, line: 474, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!167 = !{!168, !169}
!168 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !171, line: 280, baseType: !7, size: 32, elements: !172)
!171 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!172 = !{!173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!173 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!183 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!184 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !171, line: 1817, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !171, line: 1805, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202}
!198 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !171, line: 39, baseType: !7, size: 32, elements: !204)
!204 = !{!205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!205 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!206 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!207 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!208 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!209 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!210 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!211 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!212 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!213 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!214 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!215 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!216 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!217 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!220 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!221 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!222 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!223 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!224 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!225 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!226 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!227 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!228 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!229 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!230 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!231 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!232 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!233 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!234 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!235 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!236 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!237 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!238 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!239 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!240 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!241 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!242 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!243 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!244 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!245 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!246 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!247 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!248 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!249 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!250 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!251 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!252 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!253 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!254 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!255 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!256 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!257 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!258 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!259 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!260 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!261 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!262 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!263 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!264 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!265 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!266 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!267 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!268 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!269 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!270 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!271 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!272 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!273 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!274 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!275 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!277 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!278 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!279 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!280 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!281 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!282 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!283 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!284 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!285 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!286 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!287 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!288 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!289 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!290 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!291 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!292 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!293 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!294 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!295 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!296 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!297 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!298 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!299 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!300 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!301 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!302 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!303 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!304 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!305 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!306 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!307 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!308 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!309 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!310 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!311 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!312 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!313 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!314 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!315 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!316 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!317 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!318 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!320 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!321 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!322 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!323 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!324 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!325 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!326 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!327 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!328 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!329 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!330 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!331 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!332 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!333 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!334 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!335 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!336 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!337 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!338 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!339 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!340 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!341 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!342 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!343 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!344 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!345 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!346 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!347 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!348 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!349 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!350 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!351 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!352 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!353 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!354 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!355 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!356 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!357 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!369 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!370 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!371 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!372 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!373 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!374 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!383 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!384 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!385 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!386 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!387 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!388 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!389 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!390 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!391 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!392 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!393 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!394 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!395 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!396 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !398, line: 45, baseType: !7, size: 32, elements: !399)
!398 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!399 = !{!400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539}
!400 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!403 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!404 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!405 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!406 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!407 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!408 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!409 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!410 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!411 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!412 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!413 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!414 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!415 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!416 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!417 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!418 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!419 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!420 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!421 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!422 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!423 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!424 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!425 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!426 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!427 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!428 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!429 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!430 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!431 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!432 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!433 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!434 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!435 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!436 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!437 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!438 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!439 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!440 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!441 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!442 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!443 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!444 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!445 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!446 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!447 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!448 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!449 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!450 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!451 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!452 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!453 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!454 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!455 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!456 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!457 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!458 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!459 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!460 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!461 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!462 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!463 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!464 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!465 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!466 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!467 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!468 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!469 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!470 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!471 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!472 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!473 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!474 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!475 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!476 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!477 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!478 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!479 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!480 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!481 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!482 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!483 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!484 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!485 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!486 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!487 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!488 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!489 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!490 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!491 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!492 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!493 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!494 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!495 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!496 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!497 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!498 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!499 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!500 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!501 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!502 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!503 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!504 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!505 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!506 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!507 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!508 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!509 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!510 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!511 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!512 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!513 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!514 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!515 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!516 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!517 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!518 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!519 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!520 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!521 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!522 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!523 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!524 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!525 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!526 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!527 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!528 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!529 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!530 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!531 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!532 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!533 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!534 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!535 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!536 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!537 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!538 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!539 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!540 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !541, line: 104, baseType: !7, size: 32, elements: !542)
!541 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!542 = !{!543, !544, !545, !546}
!543 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!544 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!545 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!546 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!547 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !548, line: 74, baseType: !7, size: 32, elements: !549)
!548 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!549 = !{!550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722}
!550 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!581 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!582 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!583 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!584 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!585 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!586 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!587 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!588 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!589 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!590 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!591 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!592 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!593 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!594 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!595 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!596 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!597 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!598 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!599 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!600 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!601 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!602 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!603 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!604 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!605 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!606 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!607 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!608 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!609 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!610 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!611 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!612 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!613 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!614 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!615 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!616 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!617 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!618 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!619 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!620 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!621 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!622 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!623 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!624 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!625 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!626 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!627 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!628 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!629 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!630 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!631 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!632 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!633 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!634 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!635 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!636 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!637 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!638 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!639 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!640 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!641 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!642 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!643 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!644 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!645 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!646 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!647 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!648 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!649 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!650 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!651 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!652 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!653 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!654 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!655 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!656 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!657 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!658 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!659 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!660 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!661 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!662 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!663 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!664 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!665 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!666 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!667 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!668 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!669 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!670 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!671 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!672 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!673 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!674 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!675 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!676 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!677 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!678 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!679 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!680 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!681 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!682 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!683 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!684 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!685 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!686 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!687 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!688 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!689 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!690 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!691 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!692 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!693 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!694 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!695 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!696 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!697 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!698 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!699 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!700 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!701 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!702 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!703 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!704 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!705 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!706 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!707 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!708 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!709 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!710 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!711 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!712 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!713 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!714 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!715 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!716 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!717 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!718 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!719 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!720 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!721 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!722 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!723 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bb_state", scope: !724, file: !3, line: 1645, baseType: !7, size: 32, elements: !2053)
!724 = distinct !DISubprogram(name: "print_rtl_with_bb", scope: !3, file: !3, line: 1638, type: !725, scopeLine: 1639, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2014)
!725 = !DISubroutineType(types: !726)
!726 = !{null, !727, !790}
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !729, line: 7, baseType: !730)
!729 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !731, line: 49, size: 1728, elements: !732)
!731 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!732 = !{!733, !735, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !751, !753, !754, !755, !759, !761, !763, !767, !770, !772, !775, !778, !779, !781, !785, !786}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !730, file: !731, line: 51, baseType: !734, size: 32)
!734 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !730, file: !731, line: 54, baseType: !736, size: 64, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !730, file: !731, line: 55, baseType: !736, size: 64, offset: 128)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !730, file: !731, line: 56, baseType: !736, size: 64, offset: 192)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !730, file: !731, line: 57, baseType: !736, size: 64, offset: 256)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !730, file: !731, line: 58, baseType: !736, size: 64, offset: 320)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !730, file: !731, line: 59, baseType: !736, size: 64, offset: 384)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !730, file: !731, line: 60, baseType: !736, size: 64, offset: 448)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !730, file: !731, line: 61, baseType: !736, size: 64, offset: 512)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !730, file: !731, line: 64, baseType: !736, size: 64, offset: 576)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !730, file: !731, line: 65, baseType: !736, size: 64, offset: 640)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !730, file: !731, line: 66, baseType: !736, size: 64, offset: 704)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !730, file: !731, line: 68, baseType: !749, size: 64, offset: 768)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !731, line: 36, flags: DIFlagFwdDecl)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !730, file: !731, line: 70, baseType: !752, size: 64, offset: 832)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !730, file: !731, line: 72, baseType: !734, size: 32, offset: 896)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !730, file: !731, line: 73, baseType: !734, size: 32, offset: 928)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !730, file: !731, line: 74, baseType: !756, size: 64, offset: 960)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !757, line: 152, baseType: !758)
!757 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!758 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !730, file: !731, line: 77, baseType: !760, size: 16, offset: 1024)
!760 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !730, file: !731, line: 78, baseType: !762, size: 8, offset: 1040)
!762 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !730, file: !731, line: 79, baseType: !764, size: 8, offset: 1048)
!764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !737, size: 8, elements: !765)
!765 = !{!766}
!766 = !DISubrange(count: 1)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !730, file: !731, line: 81, baseType: !768, size: 64, offset: 1088)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !731, line: 43, baseType: null)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !730, file: !731, line: 89, baseType: !771, size: 64, offset: 1152)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !757, line: 153, baseType: !758)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !730, file: !731, line: 91, baseType: !773, size: 64, offset: 1216)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !731, line: 37, flags: DIFlagFwdDecl)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !730, file: !731, line: 92, baseType: !776, size: 64, offset: 1280)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !731, line: 38, flags: DIFlagFwdDecl)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !730, file: !731, line: 93, baseType: !752, size: 64, offset: 1344)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !730, file: !731, line: 94, baseType: !780, size: 64, offset: 1408)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !730, file: !731, line: 95, baseType: !782, size: 64, offset: 1472)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !783, line: 46, baseType: !784)
!783 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!784 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !730, file: !731, line: 96, baseType: !734, size: 32, offset: 1536)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !730, file: !731, line: 98, baseType: !787, size: 160, offset: 1568)
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !737, size: 160, elements: !788)
!788 = !{!789}
!789 = !DISubrange(count: 20)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !791, line: 51, baseType: !792)
!791 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !398, line: 240, size: 384, elements: !795)
!795 = !{!796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !794, file: !398, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !794, file: !398, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !794, file: !398, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !794, file: !398, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !794, file: !398, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !794, file: !398, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !794, file: !398, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !794, file: !398, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !794, file: !398, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !794, file: !398, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !794, file: !398, line: 321, baseType: !807, size: 320, offset: 64)
!807 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !398, line: 315, size: 320, elements: !808)
!808 = !{!809, !1949, !1951, !2012, !2013}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !807, file: !398, line: 316, baseType: !810, size: 64)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 64, elements: !765)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !398, line: 183, baseType: !812)
!812 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !398, line: 166, size: 64, elements: !813)
!813 = !{!814, !815, !816, !819, !822, !830, !831, !843, !846, !906, !1927, !1928, !1939, !1946}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !812, file: !398, line: 168, baseType: !734, size: 32)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !812, file: !398, line: 169, baseType: !7, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !812, file: !398, line: 170, baseType: !817, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !737)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !812, file: !398, line: 171, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !791, line: 50, baseType: !821)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !812, file: !398, line: 172, baseType: !823, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !791, line: 53, baseType: !824)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !398, line: 359, size: 128, elements: !826)
!826 = !{!827, !828}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !825, file: !398, line: 360, baseType: !734, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !825, file: !398, line: 361, baseType: !829, size: 64, offset: 64)
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !820, size: 64, elements: !765)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !812, file: !398, line: 173, baseType: !5, size: 32)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !812, file: !398, line: 174, baseType: !832, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !398, line: 133, baseType: !833)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !398, line: 115, size: 32, elements: !834)
!834 = !{!835, !836, !837, !838, !839, !840, !841, !842}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !833, file: !398, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !833, file: !398, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !833, file: !398, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !833, file: !398, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !833, file: !398, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !833, file: !398, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !833, file: !398, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !833, file: !398, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !812, file: !398, line: 175, baseType: !844, size: 64)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !398, line: 175, flags: DIFlagFwdDecl)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !812, file: !398, line: 176, baseType: !847, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !849, line: 75, size: 256, elements: !850)
!849 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!850 = !{!851, !865, !866, !867}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !848, file: !849, line: 76, baseType: !852, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !849, line: 68, baseType: !854)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !849, line: 63, size: 320, elements: !855)
!855 = !{!856, !858, !859, !860}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !854, file: !849, line: 64, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !854, file: !849, line: 65, baseType: !857, size: 64, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !854, file: !849, line: 66, baseType: !7, size: 32, offset: 128)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !854, file: !849, line: 67, baseType: !861, size: 128, offset: 192)
!861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 128, elements: !863)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !849, line: 29, baseType: !784)
!863 = !{!864}
!864 = !DISubrange(count: 2)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !848, file: !849, line: 77, baseType: !852, size: 64, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !848, file: !849, line: 78, baseType: !7, size: 32, offset: 128)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !848, file: !849, line: 79, baseType: !868, size: 64, offset: 192)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !849, line: 49, baseType: !870)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !849, line: 45, size: 832, elements: !871)
!871 = !{!872, !873, !874}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !870, file: !849, line: 46, baseType: !857, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !870, file: !849, line: 47, baseType: !847, size: 64, offset: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !870, file: !849, line: 48, baseType: !875, size: 704, offset: 128)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !876, line: 164, size: 704, elements: !877)
!876 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!877 = !{!878, !879, !889, !890, !891, !892, !893, !894, !898, !902, !903, !904, !905}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !875, file: !876, line: 166, baseType: !758, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !875, file: !876, line: 167, baseType: !880, size: 64, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !876, line: 157, size: 192, elements: !882)
!882 = !{!883, !884, !885}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !881, file: !876, line: 159, baseType: !736, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !881, file: !876, line: 160, baseType: !880, size: 64, offset: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !881, file: !876, line: 161, baseType: !886, size: 32, offset: 128)
!886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !737, size: 32, elements: !887)
!887 = !{!888}
!888 = !DISubrange(count: 4)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !875, file: !876, line: 168, baseType: !736, size: 64, offset: 128)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !875, file: !876, line: 169, baseType: !736, size: 64, offset: 192)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !875, file: !876, line: 170, baseType: !736, size: 64, offset: 256)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !875, file: !876, line: 171, baseType: !758, size: 64, offset: 320)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !875, file: !876, line: 172, baseType: !734, size: 32, offset: 384)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !875, file: !876, line: 176, baseType: !895, size: 64, offset: 448)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{!880, !780, !758}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !875, file: !876, line: 177, baseType: !899, size: 64, offset: 512)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DISubroutineType(types: !901)
!901 = !{null, !780, !880}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !875, file: !876, line: 178, baseType: !780, size: 64, offset: 576)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !875, file: !876, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !875, file: !876, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !875, file: !876, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !812, file: !398, line: 177, baseType: !907, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !791, line: 56, baseType: !908)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !171, line: 3371, size: 1792, elements: !910)
!910 = !{!911, !944, !950, !961, !980, !991, !996, !1002, !1008, !1022, !1034, !1072, !1077, !1105, !1113, !1114, !1119, !1128, !1134, !1139, !1143, !1147, !1567, !1616, !1622, !1628, !1635, !1658, !1672, !1689, !1701, !1723, !1738, !1909}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !909, file: !171, line: 3372, baseType: !912, size: 64)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !171, line: 360, size: 64, elements: !913)
!913 = !{!914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !912, file: !171, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !912, file: !171, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !912, file: !171, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !912, file: !171, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !912, file: !171, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !912, file: !171, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !912, file: !171, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !912, file: !171, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !912, file: !171, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !912, file: !171, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !912, file: !171, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !912, file: !171, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !912, file: !171, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !912, file: !171, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !912, file: !171, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !912, file: !171, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !912, file: !171, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !912, file: !171, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !912, file: !171, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !912, file: !171, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !912, file: !171, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !912, file: !171, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !912, file: !171, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !912, file: !171, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !912, file: !171, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !912, file: !171, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !912, file: !171, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !912, file: !171, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !912, file: !171, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !912, file: !171, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !909, file: !171, line: 3373, baseType: !945, size: 192)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !171, line: 402, size: 192, elements: !946)
!946 = !{!947, !948, !949}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !945, file: !171, line: 403, baseType: !912, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !945, file: !171, line: 404, baseType: !907, size: 64, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !945, file: !171, line: 405, baseType: !907, size: 64, offset: 128)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !909, file: !171, line: 3374, baseType: !951, size: 320)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !171, line: 1384, size: 320, elements: !952)
!952 = !{!953, !954}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !951, file: !171, line: 1385, baseType: !945, size: 192)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !951, file: !171, line: 1386, baseType: !955, size: 128, offset: 192)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !956, line: 58, baseType: !957)
!956 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !956, line: 54, size: 128, elements: !958)
!958 = !{!959, !960}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !957, file: !956, line: 56, baseType: !784, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !957, file: !956, line: 57, baseType: !758, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !909, file: !171, line: 3375, baseType: !962, size: 256)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !171, line: 1397, size: 256, elements: !963)
!963 = !{!964, !965}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !962, file: !171, line: 1398, baseType: !945, size: 192)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !962, file: !171, line: 1399, baseType: !966, size: 64, offset: 192)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !968, line: 52, size: 256, elements: !969)
!968 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!969 = !{!970, !971, !972, !973, !974, !975, !976}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !967, file: !968, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !967, file: !968, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !967, file: !968, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !967, file: !968, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !967, file: !968, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !967, file: !968, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !967, file: !968, line: 62, baseType: !977, size: 192, offset: 64)
!977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, size: 192, elements: !978)
!978 = !{!979}
!979 = !DISubrange(count: 3)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !909, file: !171, line: 3376, baseType: !981, size: 256)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !171, line: 1408, size: 256, elements: !982)
!982 = !{!983, !984}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !981, file: !171, line: 1409, baseType: !945, size: 192)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !981, file: !171, line: 1410, baseType: !985, size: 64, offset: 192)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !987, line: 27, size: 192, elements: !988)
!987 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!988 = !{!989, !990}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !986, file: !987, line: 29, baseType: !955, size: 128)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !986, file: !987, line: 30, baseType: !5, size: 32, offset: 128)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !909, file: !171, line: 3377, baseType: !992, size: 256)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !171, line: 1437, size: 256, elements: !993)
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !992, file: !171, line: 1438, baseType: !945, size: 192)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !992, file: !171, line: 1439, baseType: !907, size: 64, offset: 192)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !909, file: !171, line: 3378, baseType: !997, size: 256)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !171, line: 1418, size: 256, elements: !998)
!998 = !{!999, !1000, !1001}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !997, file: !171, line: 1419, baseType: !945, size: 192)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !997, file: !171, line: 1420, baseType: !734, size: 32, offset: 192)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !997, file: !171, line: 1421, baseType: !764, size: 8, offset: 224)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !909, file: !171, line: 3379, baseType: !1003, size: 320)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !171, line: 1428, size: 320, elements: !1004)
!1004 = !{!1005, !1006, !1007}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1003, file: !171, line: 1429, baseType: !945, size: 192)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1003, file: !171, line: 1430, baseType: !907, size: 64, offset: 192)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1003, file: !171, line: 1431, baseType: !907, size: 64, offset: 256)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !909, file: !171, line: 3380, baseType: !1009, size: 320)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !171, line: 1460, size: 320, elements: !1010)
!1010 = !{!1011, !1012}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1009, file: !171, line: 1461, baseType: !945, size: 192)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1009, file: !171, line: 1462, baseType: !1013, size: 128, offset: 192)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1014, line: 31, size: 128, elements: !1015)
!1014 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1015 = !{!1016, !1020, !1021}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1013, file: !1014, line: 32, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1019)
!1019 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1013, file: !1014, line: 33, baseType: !7, size: 32, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1013, file: !1014, line: 34, baseType: !7, size: 32, offset: 96)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !909, file: !171, line: 3381, baseType: !1023, size: 384)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !171, line: 2507, size: 384, elements: !1024)
!1024 = !{!1025, !1026, !1031, !1032, !1033}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1023, file: !171, line: 2508, baseType: !945, size: 192)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1023, file: !171, line: 2509, baseType: !1027, size: 32, offset: 192)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1028, line: 58, baseType: !1029)
!1028 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1030, line: 44, baseType: !7)
!1030 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1023, file: !171, line: 2510, baseType: !7, size: 32, offset: 224)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1023, file: !171, line: 2511, baseType: !907, size: 64, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1023, file: !171, line: 2512, baseType: !907, size: 64, offset: 320)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !909, file: !171, line: 3382, baseType: !1035, size: 896)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !171, line: 2652, size: 896, elements: !1036)
!1036 = !{!1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1035, file: !171, line: 2653, baseType: !1023, size: 384)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1035, file: !171, line: 2654, baseType: !907, size: 64, offset: 384)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1035, file: !171, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1035, file: !171, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1035, file: !171, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1035, file: !171, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1035, file: !171, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1035, file: !171, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1035, file: !171, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1035, file: !171, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1035, file: !171, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1035, file: !171, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1035, file: !171, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1035, file: !171, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1035, file: !171, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1035, file: !171, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1035, file: !171, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1035, file: !171, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1035, file: !171, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1035, file: !171, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1035, file: !171, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1035, file: !171, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1035, file: !171, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1035, file: !171, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1035, file: !171, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1035, file: !171, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1035, file: !171, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1035, file: !171, line: 2703, baseType: !7, size: 32, offset: 512)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1035, file: !171, line: 2705, baseType: !907, size: 64, offset: 576)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1035, file: !171, line: 2706, baseType: !907, size: 64, offset: 640)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1035, file: !171, line: 2707, baseType: !907, size: 64, offset: 704)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1035, file: !171, line: 2708, baseType: !907, size: 64, offset: 768)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1035, file: !171, line: 2711, baseType: !1070, size: 64, offset: 832)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !171, line: 2711, flags: DIFlagFwdDecl)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !909, file: !171, line: 3383, baseType: !1073, size: 960)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !171, line: 2756, size: 960, elements: !1074)
!1074 = !{!1075, !1076}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1073, file: !171, line: 2757, baseType: !1035, size: 896)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1073, file: !171, line: 2758, baseType: !820, size: 64, offset: 896)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !909, file: !171, line: 3384, baseType: !1078, size: 1472)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !171, line: 3114, size: 1472, elements: !1079)
!1079 = !{!1080, !1101, !1102, !1103, !1104}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1078, file: !171, line: 3115, baseType: !1081, size: 1216)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !171, line: 2984, size: 1216, elements: !1082)
!1082 = !{!1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1081, file: !171, line: 2985, baseType: !1073, size: 960)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1081, file: !171, line: 2986, baseType: !907, size: 64, offset: 960)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1081, file: !171, line: 2987, baseType: !907, size: 64, offset: 1024)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1081, file: !171, line: 2988, baseType: !907, size: 64, offset: 1088)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1081, file: !171, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1081, file: !171, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1081, file: !171, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1081, file: !171, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1081, file: !171, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1081, file: !171, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1081, file: !171, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1081, file: !171, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1081, file: !171, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1081, file: !171, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1081, file: !171, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1081, file: !171, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1081, file: !171, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1081, file: !171, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1078, file: !171, line: 3117, baseType: !907, size: 64, offset: 1216)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1078, file: !171, line: 3119, baseType: !907, size: 64, offset: 1280)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1078, file: !171, line: 3121, baseType: !907, size: 64, offset: 1344)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1078, file: !171, line: 3123, baseType: !907, size: 64, offset: 1408)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !909, file: !171, line: 3385, baseType: !1106, size: 1088)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !171, line: 2874, size: 1088, elements: !1107)
!1107 = !{!1108, !1109, !1110}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1106, file: !171, line: 2875, baseType: !1073, size: 960)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1106, file: !171, line: 2876, baseType: !820, size: 64, offset: 960)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1106, file: !171, line: 2877, baseType: !1111, size: 64, offset: 1024)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !171, line: 2856, flags: DIFlagFwdDecl)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !909, file: !171, line: 3386, baseType: !1081, size: 1216)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !909, file: !171, line: 3387, baseType: !1115, size: 1280)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !171, line: 3093, size: 1280, elements: !1116)
!1116 = !{!1117, !1118}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1115, file: !171, line: 3094, baseType: !1081, size: 1216)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1115, file: !171, line: 3095, baseType: !1111, size: 64, offset: 1216)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !909, file: !171, line: 3388, baseType: !1120, size: 1216)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !171, line: 2824, size: 1216, elements: !1121)
!1121 = !{!1122, !1123, !1124, !1125, !1126, !1127}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1120, file: !171, line: 2825, baseType: !1035, size: 896)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1120, file: !171, line: 2827, baseType: !907, size: 64, offset: 896)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1120, file: !171, line: 2828, baseType: !907, size: 64, offset: 960)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1120, file: !171, line: 2829, baseType: !907, size: 64, offset: 1024)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1120, file: !171, line: 2830, baseType: !907, size: 64, offset: 1088)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1120, file: !171, line: 2831, baseType: !907, size: 64, offset: 1152)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !909, file: !171, line: 3389, baseType: !1129, size: 1024)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !171, line: 2850, size: 1024, elements: !1130)
!1130 = !{!1131, !1132, !1133}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1129, file: !171, line: 2851, baseType: !1073, size: 960)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1129, file: !171, line: 2852, baseType: !734, size: 32, offset: 960)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1129, file: !171, line: 2853, baseType: !734, size: 32, offset: 992)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !909, file: !171, line: 3390, baseType: !1135, size: 1024)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !171, line: 2857, size: 1024, elements: !1136)
!1136 = !{!1137, !1138}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1135, file: !171, line: 2858, baseType: !1073, size: 960)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1135, file: !171, line: 2859, baseType: !1111, size: 64, offset: 960)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !909, file: !171, line: 3391, baseType: !1140, size: 960)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !171, line: 2862, size: 960, elements: !1141)
!1141 = !{!1142}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1140, file: !171, line: 2863, baseType: !1073, size: 960)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !909, file: !171, line: 3392, baseType: !1144, size: 1472)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !171, line: 3304, size: 1472, elements: !1145)
!1145 = !{!1146}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1144, file: !171, line: 3305, baseType: !1078, size: 1472)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !909, file: !171, line: 3393, baseType: !1148, size: 1792)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !171, line: 3248, size: 1792, elements: !1149)
!1149 = !{!1150, !1151, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1148, file: !171, line: 3249, baseType: !1078, size: 1472)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1148, file: !171, line: 3251, baseType: !1152, size: 64, offset: 1472)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1154, line: 463, size: 1152, elements: !1155)
!1154 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1155 = !{!1156, !1318, !1478, !1479, !1482, !1490, !1491, !1492, !1493, !1494, !1495, !1519, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1153, file: !1154, line: 464, baseType: !1157, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1159)
!1159 = !{!1160, !1209, !1222, !1236, !1286, !1299}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1158, file: !135, line: 197, baseType: !1161, size: 64)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1162)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1164)
!1164 = !{!1165, !1166, !1167, !1168, !1169, !1170, !1197, !1206, !1207, !1208}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1163, file: !135, line: 119, baseType: !1162, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1163, file: !135, line: 122, baseType: !1162, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1163, file: !135, line: 123, baseType: !1162, size: 64, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1163, file: !135, line: 126, baseType: !734, size: 32, offset: 192)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1163, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1163, file: !135, line: 165, baseType: !1171, size: 192, offset: 256)
!1171 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1172)
!1172 = !{!1173, !1186, !1192}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1171, file: !135, line: 137, baseType: !1174, size: 128)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1175)
!1175 = !{!1176, !1185}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1174, file: !135, line: 135, baseType: !1177, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1179)
!1179 = !{!1180, !1181, !1182, !1183, !1184}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1178, file: !135, line: 96, baseType: !1177, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1178, file: !135, line: 97, baseType: !1177, size: 64, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1178, file: !135, line: 101, baseType: !907, size: 64, offset: 128)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1178, file: !135, line: 106, baseType: !907, size: 64, offset: 192)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1178, file: !135, line: 111, baseType: !907, size: 64, offset: 256)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1174, file: !135, line: 136, baseType: !1177, size: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1171, file: !135, line: 151, baseType: !1187, size: 192)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1188)
!1188 = !{!1189, !1190, !1191}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1187, file: !135, line: 141, baseType: !907, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1187, file: !135, line: 145, baseType: !907, size: 64, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1187, file: !135, line: 150, baseType: !734, size: 32, offset: 128)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1171, file: !135, line: 164, baseType: !1193, size: 128)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1194)
!1194 = !{!1195, !1196}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1193, file: !135, line: 161, baseType: !907, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1193, file: !135, line: 163, baseType: !1027, size: 32, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1163, file: !135, line: 168, baseType: !1198, size: 64, offset: 448)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1200)
!1200 = !{!1201, !1202, !1203, !1204, !1205}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1199, file: !135, line: 70, baseType: !1198, size: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1199, file: !135, line: 73, baseType: !1162, size: 64, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1199, file: !135, line: 78, baseType: !907, size: 64, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1199, file: !135, line: 85, baseType: !820, size: 64, offset: 192)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1199, file: !135, line: 88, baseType: !734, size: 32, offset: 256)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1163, file: !135, line: 173, baseType: !820, size: 64, offset: 512)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1163, file: !135, line: 173, baseType: !820, size: 64, offset: 576)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1163, file: !135, line: 177, baseType: !1019, size: 8, offset: 640)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1158, file: !135, line: 200, baseType: !1210, size: 64, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1212)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1213)
!1213 = !{!1214}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1212, file: !135, line: 185, baseType: !1215, size: 128)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1216)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1217)
!1217 = !{!1218, !1219, !1220}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1216, file: !135, line: 184, baseType: !7, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1216, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1216, file: !135, line: 184, baseType: !1221, size: 64, offset: 64)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1161, size: 64, elements: !765)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1158, file: !135, line: 203, baseType: !1223, size: 64, offset: 128)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1225)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1226)
!1226 = !{!1227}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1225, file: !135, line: 189, baseType: !1228, size: 128)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1229)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1230)
!1230 = !{!1231, !1232, !1233}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1229, file: !135, line: 188, baseType: !7, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1229, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1229, file: !135, line: 188, baseType: !1234, size: 64, offset: 64)
!1234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1235, size: 64, elements: !765)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1198)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1158, file: !135, line: 207, baseType: !1237, size: 64, offset: 192)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1238, line: 144, baseType: !1239)
!1238 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1238, line: 100, size: 896, elements: !1241)
!1241 = !{!1242, !1250, !1255, !1260, !1262, !1263, !1264, !1265, !1266, !1267, !1272, !1274, !1275, !1280, !1285}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1240, file: !1238, line: 102, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1238, line: 52, baseType: !1244)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!1247, !1248}
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1238, line: 47, baseType: !7)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1240, file: !1238, line: 105, baseType: !1251, size: 64, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1238, line: 59, baseType: !1252)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!734, !1248, !1248}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1240, file: !1238, line: 108, baseType: !1256, size: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1238, line: 63, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{null, !780}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1240, file: !1238, line: 111, baseType: !1261, size: 64, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1240, file: !1238, line: 114, baseType: !782, size: 64, offset: 256)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1240, file: !1238, line: 117, baseType: !782, size: 64, offset: 320)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1240, file: !1238, line: 120, baseType: !782, size: 64, offset: 384)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1240, file: !1238, line: 124, baseType: !7, size: 32, offset: 448)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1240, file: !1238, line: 128, baseType: !7, size: 32, offset: 480)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1240, file: !1238, line: 131, baseType: !1268, size: 64, offset: 512)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1238, line: 75, baseType: !1269)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!780, !782, !782}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1240, file: !1238, line: 132, baseType: !1273, size: 64, offset: 576)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1238, line: 78, baseType: !1257)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1240, file: !1238, line: 135, baseType: !780, size: 64, offset: 640)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1240, file: !1238, line: 136, baseType: !1276, size: 64, offset: 704)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1238, line: 82, baseType: !1277)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!780, !780, !782, !782}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1240, file: !1238, line: 137, baseType: !1281, size: 64, offset: 768)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1238, line: 83, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{null, !780, !780}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1240, file: !1238, line: 141, baseType: !7, size: 32, offset: 832)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1158, file: !135, line: 211, baseType: !1287, size: 64, offset: 256)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !171, line: 183, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !171, line: 183, size: 128, elements: !1290)
!1290 = !{!1291}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1289, file: !171, line: 183, baseType: !1292, size: 128)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !171, line: 182, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !171, line: 182, size: 128, elements: !1294)
!1294 = !{!1295, !1296, !1297}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1293, file: !171, line: 182, baseType: !7, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1293, file: !171, line: 182, baseType: !7, size: 32, offset: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1293, file: !171, line: 182, baseType: !1298, size: 64, offset: 64)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 64, elements: !765)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1158, file: !135, line: 220, baseType: !1300, size: 64, offset: 320)
!1300 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1301)
!1301 = !{!1302, !1303}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1300, file: !135, line: 218, baseType: !1287, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1300, file: !135, line: 219, baseType: !1304, size: 64)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1306, line: 29, baseType: !1307)
!1306 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1306, line: 29, size: 96, elements: !1308)
!1308 = !{!1309}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1307, file: !1306, line: 29, baseType: !1310, size: 96)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1306, line: 27, baseType: !1311)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1306, line: 27, size: 96, elements: !1312)
!1312 = !{!1313, !1314, !1315}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1311, file: !1306, line: 27, baseType: !7, size: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1311, file: !1306, line: 27, baseType: !7, size: 32, offset: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1311, file: !1306, line: 27, baseType: !1316, size: 8, offset: 64)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1317, size: 8, elements: !765)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1306, line: 26, baseType: !1019)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1153, file: !1154, line: 467, baseType: !1319, size: 64, offset: 64)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !155, line: 374, size: 640, elements: !1321)
!1321 = !{!1322, !1453, !1454, !1467, !1468, !1469, !1470, !1471, !1472, !1474, !1476, !1477}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1320, file: !155, line: 377, baseType: !1323, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !791, line: 111, baseType: !1324)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !155, line: 217, size: 832, elements: !1326)
!1326 = !{!1327, !1362, !1363, !1364, !1423, !1427, !1428, !1429, !1447, !1448, !1449, !1450, !1451, !1452}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1325, file: !155, line: 219, baseType: !1328, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !155, line: 151, baseType: !1330)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !155, line: 151, size: 128, elements: !1331)
!1331 = !{!1332}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1330, file: !155, line: 151, baseType: !1333, size: 128)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !155, line: 150, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !155, line: 150, size: 128, elements: !1335)
!1335 = !{!1336, !1337, !1338}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1334, file: !155, line: 150, baseType: !7, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1334, file: !155, line: 150, baseType: !7, size: 32, offset: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1334, file: !155, line: 150, baseType: !1339, size: 64, offset: 64)
!1339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1340, size: 64, elements: !765)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !791, line: 108, baseType: !1341)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !155, line: 122, size: 512, elements: !1343)
!1343 = !{!1344, !1345, !1346, !1354, !1355, !1356, !1357, !1358, !1359, !1360}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1342, file: !155, line: 124, baseType: !1324, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1342, file: !155, line: 125, baseType: !1324, size: 64, offset: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1342, file: !155, line: 131, baseType: !1347, size: 64, offset: 128)
!1347 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !155, line: 128, size: 64, elements: !1348)
!1348 = !{!1349, !1353}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1347, file: !155, line: 129, baseType: !1350, size: 64)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !791, line: 66, baseType: !1351)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !791, line: 65, flags: DIFlagFwdDecl)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1347, file: !155, line: 130, baseType: !820, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1342, file: !155, line: 134, baseType: !780, size: 64, offset: 192)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1342, file: !155, line: 137, baseType: !907, size: 64, offset: 256)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1342, file: !155, line: 138, baseType: !1027, size: 32, offset: 320)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1342, file: !155, line: 142, baseType: !7, size: 32, offset: 352)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1342, file: !155, line: 144, baseType: !734, size: 32, offset: 384)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1342, file: !155, line: 145, baseType: !734, size: 32, offset: 416)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1342, file: !155, line: 146, baseType: !1361, size: 64, offset: 448)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !155, line: 119, baseType: !758)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1325, file: !155, line: 220, baseType: !1328, size: 64, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1325, file: !155, line: 223, baseType: !780, size: 64, offset: 128)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1325, file: !155, line: 226, baseType: !1365, size: 64, offset: 192)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 100, size: 1216, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1372, !1377, !1378, !1379, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1413, !1421, !1422}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1366, file: !142, line: 102, baseType: !734, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1366, file: !142, line: 105, baseType: !7, size: 32, offset: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1366, file: !142, line: 108, baseType: !1324, size: 64, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1366, file: !142, line: 111, baseType: !1324, size: 64, offset: 128)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1366, file: !142, line: 114, baseType: !1373, size: 64, offset: 192)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !142, line: 41, size: 64, elements: !1374)
!1374 = !{!1375, !1376}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1373, file: !142, line: 42, baseType: !141, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1373, file: !142, line: 43, baseType: !7, size: 32, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1366, file: !142, line: 117, baseType: !7, size: 32, offset: 256)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1366, file: !142, line: 120, baseType: !7, size: 32, offset: 288)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1366, file: !142, line: 123, baseType: !1380, size: 64, offset: 320)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !142, line: 87, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !142, line: 87, size: 128, elements: !1383)
!1383 = !{!1384}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1382, file: !142, line: 87, baseType: !1385, size: 128)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !142, line: 85, baseType: !1386)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !142, line: 85, size: 128, elements: !1387)
!1387 = !{!1388, !1389, !1390}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1386, file: !142, line: 85, baseType: !7, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1386, file: !142, line: 85, baseType: !7, size: 32, offset: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1386, file: !142, line: 85, baseType: !1391, size: 64, offset: 64)
!1391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1392, size: 64, elements: !765)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !142, line: 84, baseType: !1365)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1366, file: !142, line: 126, baseType: !1365, size: 64, offset: 384)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1366, file: !142, line: 129, baseType: !1365, size: 64, offset: 448)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1366, file: !142, line: 132, baseType: !780, size: 64, offset: 512)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1366, file: !142, line: 139, baseType: !907, size: 64, offset: 576)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1366, file: !142, line: 143, baseType: !955, size: 128, offset: 640)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1366, file: !142, line: 146, baseType: !955, size: 128, offset: 768)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1366, file: !142, line: 148, baseType: !1019, size: 8, offset: 896)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1366, file: !142, line: 149, baseType: !1019, size: 8, offset: 904)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1366, file: !142, line: 153, baseType: !150, size: 32, offset: 928)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1366, file: !142, line: 156, baseType: !1403, size: 64, offset: 960)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !142, line: 48, size: 320, elements: !1405)
!1405 = !{!1406, !1410, !1411, !1412}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1404, file: !142, line: 50, baseType: !1407, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !791, line: 58, baseType: !1408)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !791, line: 57, flags: DIFlagFwdDecl)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1404, file: !142, line: 59, baseType: !955, size: 128, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1404, file: !142, line: 64, baseType: !1019, size: 8, offset: 192)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1404, file: !142, line: 67, baseType: !1403, size: 64, offset: 256)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1366, file: !142, line: 159, baseType: !1414, size: 64, offset: 1024)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !142, line: 72, size: 256, elements: !1416)
!1416 = !{!1417, !1418, !1419, !1420}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1415, file: !142, line: 74, baseType: !1341, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1415, file: !142, line: 77, baseType: !1414, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1415, file: !142, line: 78, baseType: !1414, size: 64, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1415, file: !142, line: 81, baseType: !1414, size: 64, offset: 192)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1366, file: !142, line: 162, baseType: !1019, size: 8, offset: 1088)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1366, file: !142, line: 166, baseType: !907, size: 64, offset: 1152)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1325, file: !155, line: 229, baseType: !1424, size: 128, offset: 256)
!1424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1425, size: 128, elements: !863)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !155, line: 229, flags: DIFlagFwdDecl)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1325, file: !155, line: 232, baseType: !1324, size: 64, offset: 384)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1325, file: !155, line: 233, baseType: !1324, size: 64, offset: 448)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1325, file: !155, line: 238, baseType: !1430, size: 64, offset: 512)
!1430 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !155, line: 235, size: 64, elements: !1431)
!1431 = !{!1432, !1438}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1430, file: !155, line: 236, baseType: !1433, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !155, line: 273, size: 128, elements: !1435)
!1435 = !{!1436, !1437}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1434, file: !155, line: 275, baseType: !1350, size: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1434, file: !155, line: 278, baseType: !1350, size: 64, offset: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1430, file: !155, line: 237, baseType: !1439, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !155, line: 259, size: 320, elements: !1441)
!1441 = !{!1442, !1443, !1444, !1445, !1446}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1440, file: !155, line: 261, baseType: !820, size: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1440, file: !155, line: 262, baseType: !820, size: 64, offset: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1440, file: !155, line: 266, baseType: !820, size: 64, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1440, file: !155, line: 267, baseType: !820, size: 64, offset: 192)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1440, file: !155, line: 270, baseType: !734, size: 32, offset: 256)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1325, file: !155, line: 241, baseType: !1361, size: 64, offset: 576)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1325, file: !155, line: 244, baseType: !734, size: 32, offset: 640)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1325, file: !155, line: 247, baseType: !734, size: 32, offset: 672)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1325, file: !155, line: 250, baseType: !734, size: 32, offset: 704)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1325, file: !155, line: 253, baseType: !734, size: 32, offset: 736)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1325, file: !155, line: 256, baseType: !734, size: 32, offset: 768)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1320, file: !155, line: 378, baseType: !1323, size: 64, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1320, file: !155, line: 381, baseType: !1455, size: 64, offset: 128)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !155, line: 282, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !155, line: 282, size: 128, elements: !1458)
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1457, file: !155, line: 282, baseType: !1460, size: 128)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !155, line: 281, baseType: !1461)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !155, line: 281, size: 128, elements: !1462)
!1462 = !{!1463, !1464, !1465}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1461, file: !155, line: 281, baseType: !7, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1461, file: !155, line: 281, baseType: !7, size: 32, offset: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1461, file: !155, line: 281, baseType: !1466, size: 64, offset: 64)
!1466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1323, size: 64, elements: !765)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1320, file: !155, line: 384, baseType: !734, size: 32, offset: 192)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1320, file: !155, line: 387, baseType: !734, size: 32, offset: 224)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1320, file: !155, line: 390, baseType: !734, size: 32, offset: 256)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1320, file: !155, line: 394, baseType: !1455, size: 64, offset: 320)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1320, file: !155, line: 396, baseType: !154, size: 32, offset: 384)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1320, file: !155, line: 399, baseType: !1473, size: 64, offset: 416)
!1473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 64, elements: !863)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1320, file: !155, line: 402, baseType: !1475, size: 64, offset: 480)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !863)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1320, file: !155, line: 406, baseType: !734, size: 32, offset: 544)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1320, file: !155, line: 409, baseType: !734, size: 32, offset: 576)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1153, file: !1154, line: 470, baseType: !1351, size: 64, offset: 128)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1153, file: !1154, line: 473, baseType: !1480, size: 64, offset: 192)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1154, line: 166, flags: DIFlagFwdDecl)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1153, file: !1154, line: 476, baseType: !1483, size: 64, offset: 256)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !142, line: 187, size: 256, elements: !1485)
!1485 = !{!1486, !1487, !1488, !1489}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1484, file: !142, line: 189, baseType: !734, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1484, file: !142, line: 192, baseType: !1380, size: 64, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1484, file: !142, line: 197, baseType: !1237, size: 64, offset: 128)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1484, file: !142, line: 200, baseType: !1365, size: 64, offset: 192)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1153, file: !1154, line: 479, baseType: !1237, size: 64, offset: 320)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1153, file: !1154, line: 484, baseType: !907, size: 64, offset: 384)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1153, file: !1154, line: 488, baseType: !907, size: 64, offset: 448)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1153, file: !1154, line: 493, baseType: !907, size: 64, offset: 512)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1153, file: !1154, line: 496, baseType: !907, size: 64, offset: 576)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1153, file: !1154, line: 501, baseType: !1496, size: 64, offset: 640)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !166, line: 2355, size: 576, elements: !1498)
!1498 = !{!1499, !1502, !1503, !1504, !1505, !1507, !1508, !1513, !1514, !1515, !1516, !1517, !1518}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1497, file: !166, line: 2356, baseType: !1500, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1501 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !166, line: 2356, flags: DIFlagFwdDecl)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1497, file: !166, line: 2357, baseType: !817, size: 64, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1497, file: !166, line: 2358, baseType: !734, size: 32, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1497, file: !166, line: 2359, baseType: !734, size: 32, offset: 160)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1497, file: !166, line: 2360, baseType: !1506, size: 128, offset: 192)
!1506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !734, size: 128, elements: !887)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1497, file: !166, line: 2364, baseType: !734, size: 32, offset: 320)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1497, file: !166, line: 2367, baseType: !1509, size: 128, offset: 384)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !166, line: 2349, size: 128, elements: !1510)
!1510 = !{!1511, !1512}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1509, file: !166, line: 2351, baseType: !820, size: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1509, file: !166, line: 2352, baseType: !758, size: 64, offset: 64)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1497, file: !166, line: 2371, baseType: !165, size: 32, offset: 512)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1497, file: !166, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1497, file: !166, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1497, file: !166, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1497, file: !166, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1497, file: !166, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1153, file: !1154, line: 504, baseType: !1520, size: 64, offset: 704)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1154, line: 504, flags: DIFlagFwdDecl)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1153, file: !1154, line: 507, baseType: !1237, size: 64, offset: 768)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1153, file: !1154, line: 510, baseType: !734, size: 32, offset: 832)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1153, file: !1154, line: 513, baseType: !734, size: 32, offset: 864)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1153, file: !1154, line: 516, baseType: !1027, size: 32, offset: 896)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1153, file: !1154, line: 519, baseType: !1027, size: 32, offset: 928)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1153, file: !1154, line: 522, baseType: !7, size: 32, offset: 960)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1153, file: !1154, line: 523, baseType: !7, size: 32, offset: 992)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1153, file: !1154, line: 528, baseType: !817, size: 64, offset: 1024)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1153, file: !1154, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1153, file: !1154, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1153, file: !1154, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1153, file: !1154, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1153, file: !1154, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1153, file: !1154, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1153, file: !1154, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1153, file: !1154, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1153, file: !1154, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1153, file: !1154, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1153, file: !1154, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1153, file: !1154, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1153, file: !1154, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1153, file: !1154, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1153, file: !1154, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1153, file: !1154, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1148, file: !171, line: 3254, baseType: !907, size: 64, offset: 1536)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1148, file: !171, line: 3257, baseType: !907, size: 64, offset: 1600)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1148, file: !171, line: 3258, baseType: !907, size: 64, offset: 1664)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1148, file: !171, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1148, file: !171, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1148, file: !171, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1148, file: !171, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1148, file: !171, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1148, file: !171, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1148, file: !171, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1148, file: !171, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1148, file: !171, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1148, file: !171, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1148, file: !171, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1148, file: !171, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1148, file: !171, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1148, file: !171, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1148, file: !171, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1148, file: !171, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1148, file: !171, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1148, file: !171, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !909, file: !171, line: 3394, baseType: !1568, size: 1344)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !171, line: 2279, size: 1344, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1595, !1596, !1597, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1568, file: !171, line: 2280, baseType: !945, size: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1568, file: !171, line: 2281, baseType: !907, size: 64, offset: 192)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1568, file: !171, line: 2282, baseType: !907, size: 64, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1568, file: !171, line: 2283, baseType: !907, size: 64, offset: 320)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1568, file: !171, line: 2284, baseType: !907, size: 64, offset: 384)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1568, file: !171, line: 2285, baseType: !7, size: 32, offset: 448)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1568, file: !171, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1568, file: !171, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1568, file: !171, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1568, file: !171, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1568, file: !171, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1568, file: !171, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1568, file: !171, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1568, file: !171, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1568, file: !171, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1568, file: !171, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1568, file: !171, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1568, file: !171, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1568, file: !171, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1568, file: !171, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1568, file: !171, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1568, file: !171, line: 2305, baseType: !7, size: 32, offset: 512)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1568, file: !171, line: 2306, baseType: !1593, size: 32, offset: 544)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1594, line: 31, baseType: !734)
!1594 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1568, file: !171, line: 2307, baseType: !907, size: 64, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1568, file: !171, line: 2308, baseType: !907, size: 64, offset: 640)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1568, file: !171, line: 2314, baseType: !1598, size: 64, offset: 704)
!1598 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !171, line: 2309, size: 64, elements: !1599)
!1599 = !{!1600, !1601, !1602}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1598, file: !171, line: 2310, baseType: !734, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1598, file: !171, line: 2311, baseType: !817, size: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1598, file: !171, line: 2312, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !171, line: 2277, flags: DIFlagFwdDecl)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1568, file: !171, line: 2315, baseType: !907, size: 64, offset: 768)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1568, file: !171, line: 2316, baseType: !907, size: 64, offset: 832)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1568, file: !171, line: 2317, baseType: !907, size: 64, offset: 896)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1568, file: !171, line: 2318, baseType: !907, size: 64, offset: 960)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1568, file: !171, line: 2319, baseType: !907, size: 64, offset: 1024)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1568, file: !171, line: 2320, baseType: !907, size: 64, offset: 1088)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1568, file: !171, line: 2321, baseType: !907, size: 64, offset: 1152)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1568, file: !171, line: 2322, baseType: !907, size: 64, offset: 1216)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1568, file: !171, line: 2324, baseType: !1614, size: 64, offset: 1280)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !171, line: 2324, flags: DIFlagFwdDecl)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !909, file: !171, line: 3395, baseType: !1617, size: 320)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !171, line: 1469, size: 320, elements: !1618)
!1618 = !{!1619, !1620, !1621}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1617, file: !171, line: 1470, baseType: !945, size: 192)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1617, file: !171, line: 1471, baseType: !907, size: 64, offset: 192)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1617, file: !171, line: 1472, baseType: !907, size: 64, offset: 256)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !909, file: !171, line: 3396, baseType: !1623, size: 320)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !171, line: 1482, size: 320, elements: !1624)
!1624 = !{!1625, !1626, !1627}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1623, file: !171, line: 1483, baseType: !945, size: 192)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1623, file: !171, line: 1484, baseType: !734, size: 32, offset: 192)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1623, file: !171, line: 1485, baseType: !1298, size: 64, offset: 256)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !909, file: !171, line: 3397, baseType: !1629, size: 384)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !171, line: 1829, size: 384, elements: !1630)
!1630 = !{!1631, !1632, !1633, !1634}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1629, file: !171, line: 1830, baseType: !945, size: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1629, file: !171, line: 1831, baseType: !1027, size: 32, offset: 192)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1629, file: !171, line: 1832, baseType: !907, size: 64, offset: 256)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1629, file: !171, line: 1835, baseType: !1298, size: 64, offset: 320)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !909, file: !171, line: 3398, baseType: !1636, size: 704)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !171, line: 1898, size: 704, elements: !1637)
!1637 = !{!1638, !1639, !1640, !1641, !1642, !1645}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1636, file: !171, line: 1899, baseType: !945, size: 192)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1636, file: !171, line: 1902, baseType: !907, size: 64, offset: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1636, file: !171, line: 1905, baseType: !1407, size: 64, offset: 256)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1636, file: !171, line: 1908, baseType: !7, size: 32, offset: 320)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1636, file: !171, line: 1911, baseType: !1643, size: 64, offset: 384)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !171, line: 1876, flags: DIFlagFwdDecl)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1636, file: !171, line: 1914, baseType: !1646, size: 256, offset: 448)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !171, line: 1883, size: 256, elements: !1647)
!1647 = !{!1648, !1650, !1651, !1656}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1646, file: !171, line: 1884, baseType: !1649, size: 64)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1646, file: !171, line: 1885, baseType: !1649, size: 64, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1646, file: !171, line: 1891, baseType: !1652, size: 64, offset: 128)
!1652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1646, file: !171, line: 1891, size: 64, elements: !1653)
!1653 = !{!1654, !1655}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1652, file: !171, line: 1891, baseType: !1407, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1652, file: !171, line: 1891, baseType: !907, size: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1646, file: !171, line: 1892, baseType: !1657, size: 64, offset: 192)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !909, file: !171, line: 3399, baseType: !1659, size: 704)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !171, line: 2008, size: 704, elements: !1660)
!1660 = !{!1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1659, file: !171, line: 2009, baseType: !945, size: 192)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1659, file: !171, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1659, file: !171, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1659, file: !171, line: 2014, baseType: !1027, size: 32, offset: 224)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1659, file: !171, line: 2016, baseType: !907, size: 64, offset: 256)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1659, file: !171, line: 2017, baseType: !1287, size: 64, offset: 320)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1659, file: !171, line: 2019, baseType: !907, size: 64, offset: 384)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1659, file: !171, line: 2020, baseType: !907, size: 64, offset: 448)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1659, file: !171, line: 2021, baseType: !907, size: 64, offset: 512)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1659, file: !171, line: 2022, baseType: !907, size: 64, offset: 576)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1659, file: !171, line: 2023, baseType: !907, size: 64, offset: 640)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !909, file: !171, line: 3400, baseType: !1673, size: 832)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !171, line: 2430, size: 832, elements: !1674)
!1674 = !{!1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1673, file: !171, line: 2431, baseType: !945, size: 192)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1673, file: !171, line: 2433, baseType: !907, size: 64, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1673, file: !171, line: 2434, baseType: !907, size: 64, offset: 256)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1673, file: !171, line: 2435, baseType: !907, size: 64, offset: 320)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1673, file: !171, line: 2436, baseType: !907, size: 64, offset: 384)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1673, file: !171, line: 2437, baseType: !1287, size: 64, offset: 448)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1673, file: !171, line: 2438, baseType: !907, size: 64, offset: 512)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1673, file: !171, line: 2440, baseType: !907, size: 64, offset: 576)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1673, file: !171, line: 2441, baseType: !907, size: 64, offset: 640)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1673, file: !171, line: 2443, baseType: !1685, size: 128, offset: 704)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !171, line: 182, baseType: !1686)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !171, line: 182, size: 128, elements: !1687)
!1687 = !{!1688}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1686, file: !171, line: 182, baseType: !1292, size: 128)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !909, file: !171, line: 3401, baseType: !1690, size: 320)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !171, line: 3327, size: 320, elements: !1691)
!1691 = !{!1692, !1693, !1700}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1690, file: !171, line: 3329, baseType: !945, size: 192)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1690, file: !171, line: 3330, baseType: !1694, size: 64, offset: 192)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !171, line: 3320, size: 192, elements: !1696)
!1696 = !{!1697, !1698, !1699}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1695, file: !171, line: 3322, baseType: !1694, size: 64)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1695, file: !171, line: 3323, baseType: !1694, size: 64, offset: 64)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1695, file: !171, line: 3324, baseType: !907, size: 64, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1690, file: !171, line: 3331, baseType: !1694, size: 64, offset: 256)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !909, file: !171, line: 3402, baseType: !1702, size: 256)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !171, line: 1540, size: 256, elements: !1703)
!1703 = !{!1704, !1705}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1702, file: !171, line: 1541, baseType: !945, size: 192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1702, file: !171, line: 1542, baseType: !1706, size: 64, offset: 192)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !171, line: 1538, baseType: !1708)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !171, line: 1538, size: 192, elements: !1709)
!1709 = !{!1710}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1708, file: !171, line: 1538, baseType: !1711, size: 192)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !171, line: 1537, baseType: !1712)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !171, line: 1537, size: 192, elements: !1713)
!1713 = !{!1714, !1715, !1716}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1712, file: !171, line: 1537, baseType: !7, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1712, file: !171, line: 1537, baseType: !7, size: 32, offset: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1712, file: !171, line: 1537, baseType: !1717, size: 128, offset: 64)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1718, size: 128, elements: !765)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !171, line: 1535, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !171, line: 1532, size: 128, elements: !1720)
!1720 = !{!1721, !1722}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1719, file: !171, line: 1533, baseType: !907, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1719, file: !171, line: 1534, baseType: !907, size: 64, offset: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !909, file: !171, line: 3403, baseType: !1724, size: 512)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !171, line: 1938, size: 512, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1729, !1735, !1736, !1737}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1724, file: !171, line: 1939, baseType: !945, size: 192)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1724, file: !171, line: 1940, baseType: !1027, size: 32, offset: 192)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1724, file: !171, line: 1941, baseType: !170, size: 32, offset: 224)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1724, file: !171, line: 1946, baseType: !1730, size: 32, offset: 256)
!1730 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !171, line: 1942, size: 32, elements: !1731)
!1731 = !{!1732, !1733, !1734}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1730, file: !171, line: 1943, baseType: !189, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1730, file: !171, line: 1944, baseType: !196, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1730, file: !171, line: 1945, baseType: !203, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1724, file: !171, line: 1950, baseType: !1350, size: 64, offset: 320)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1724, file: !171, line: 1951, baseType: !1350, size: 64, offset: 384)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1724, file: !171, line: 1953, baseType: !1298, size: 64, offset: 448)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !909, file: !171, line: 3404, baseType: !1739, size: 1664)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !171, line: 3337, size: 1664, elements: !1740)
!1740 = !{!1741, !1742}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1739, file: !171, line: 3338, baseType: !945, size: 192)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1739, file: !171, line: 3341, baseType: !1743, size: 1472, offset: 192)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1744, line: 410, size: 1472, elements: !1745)
!1744 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1745 = !{!1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1743, file: !1744, line: 412, baseType: !734, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1743, file: !1744, line: 413, baseType: !734, size: 32, offset: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1743, file: !1744, line: 414, baseType: !734, size: 32, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1743, file: !1744, line: 415, baseType: !734, size: 32, offset: 96)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1743, file: !1744, line: 416, baseType: !734, size: 32, offset: 128)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1743, file: !1744, line: 417, baseType: !734, size: 32, offset: 160)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1743, file: !1744, line: 418, baseType: !1019, size: 8, offset: 192)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1743, file: !1744, line: 419, baseType: !1019, size: 8, offset: 200)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1743, file: !1744, line: 420, baseType: !762, size: 8, offset: 208)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1743, file: !1744, line: 421, baseType: !762, size: 8, offset: 216)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1743, file: !1744, line: 422, baseType: !762, size: 8, offset: 224)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1743, file: !1744, line: 423, baseType: !762, size: 8, offset: 232)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1743, file: !1744, line: 424, baseType: !762, size: 8, offset: 240)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1743, file: !1744, line: 425, baseType: !762, size: 8, offset: 248)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1743, file: !1744, line: 426, baseType: !762, size: 8, offset: 256)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1743, file: !1744, line: 427, baseType: !762, size: 8, offset: 264)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1743, file: !1744, line: 428, baseType: !762, size: 8, offset: 272)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1743, file: !1744, line: 429, baseType: !762, size: 8, offset: 280)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1743, file: !1744, line: 430, baseType: !762, size: 8, offset: 288)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1743, file: !1744, line: 431, baseType: !762, size: 8, offset: 296)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1743, file: !1744, line: 432, baseType: !762, size: 8, offset: 304)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1743, file: !1744, line: 433, baseType: !762, size: 8, offset: 312)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1743, file: !1744, line: 434, baseType: !762, size: 8, offset: 320)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1743, file: !1744, line: 435, baseType: !762, size: 8, offset: 328)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1743, file: !1744, line: 436, baseType: !762, size: 8, offset: 336)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1743, file: !1744, line: 437, baseType: !762, size: 8, offset: 344)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1743, file: !1744, line: 438, baseType: !762, size: 8, offset: 352)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1743, file: !1744, line: 439, baseType: !762, size: 8, offset: 360)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1743, file: !1744, line: 440, baseType: !762, size: 8, offset: 368)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1743, file: !1744, line: 441, baseType: !762, size: 8, offset: 376)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1743, file: !1744, line: 442, baseType: !762, size: 8, offset: 384)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1743, file: !1744, line: 443, baseType: !762, size: 8, offset: 392)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1743, file: !1744, line: 444, baseType: !762, size: 8, offset: 400)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1743, file: !1744, line: 445, baseType: !762, size: 8, offset: 408)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1743, file: !1744, line: 446, baseType: !762, size: 8, offset: 416)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1743, file: !1744, line: 447, baseType: !762, size: 8, offset: 424)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1743, file: !1744, line: 448, baseType: !762, size: 8, offset: 432)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1743, file: !1744, line: 449, baseType: !762, size: 8, offset: 440)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1743, file: !1744, line: 450, baseType: !762, size: 8, offset: 448)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1743, file: !1744, line: 451, baseType: !762, size: 8, offset: 456)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1743, file: !1744, line: 452, baseType: !762, size: 8, offset: 464)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1743, file: !1744, line: 453, baseType: !762, size: 8, offset: 472)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1743, file: !1744, line: 454, baseType: !762, size: 8, offset: 480)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1743, file: !1744, line: 455, baseType: !762, size: 8, offset: 488)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1743, file: !1744, line: 456, baseType: !762, size: 8, offset: 496)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1743, file: !1744, line: 457, baseType: !762, size: 8, offset: 504)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1743, file: !1744, line: 458, baseType: !762, size: 8, offset: 512)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1743, file: !1744, line: 459, baseType: !762, size: 8, offset: 520)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1743, file: !1744, line: 460, baseType: !762, size: 8, offset: 528)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1743, file: !1744, line: 461, baseType: !762, size: 8, offset: 536)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1743, file: !1744, line: 462, baseType: !762, size: 8, offset: 544)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1743, file: !1744, line: 463, baseType: !762, size: 8, offset: 552)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1743, file: !1744, line: 464, baseType: !762, size: 8, offset: 560)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1743, file: !1744, line: 465, baseType: !762, size: 8, offset: 568)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1743, file: !1744, line: 466, baseType: !762, size: 8, offset: 576)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1743, file: !1744, line: 467, baseType: !762, size: 8, offset: 584)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1743, file: !1744, line: 468, baseType: !762, size: 8, offset: 592)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1743, file: !1744, line: 469, baseType: !762, size: 8, offset: 600)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1743, file: !1744, line: 470, baseType: !762, size: 8, offset: 608)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1743, file: !1744, line: 471, baseType: !762, size: 8, offset: 616)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1743, file: !1744, line: 472, baseType: !762, size: 8, offset: 624)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1743, file: !1744, line: 473, baseType: !762, size: 8, offset: 632)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1743, file: !1744, line: 474, baseType: !762, size: 8, offset: 640)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1743, file: !1744, line: 475, baseType: !762, size: 8, offset: 648)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1743, file: !1744, line: 476, baseType: !762, size: 8, offset: 656)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1743, file: !1744, line: 477, baseType: !762, size: 8, offset: 664)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1743, file: !1744, line: 478, baseType: !762, size: 8, offset: 672)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1743, file: !1744, line: 479, baseType: !762, size: 8, offset: 680)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1743, file: !1744, line: 480, baseType: !762, size: 8, offset: 688)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1743, file: !1744, line: 481, baseType: !762, size: 8, offset: 696)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1743, file: !1744, line: 482, baseType: !762, size: 8, offset: 704)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1743, file: !1744, line: 483, baseType: !762, size: 8, offset: 712)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1743, file: !1744, line: 484, baseType: !762, size: 8, offset: 720)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1743, file: !1744, line: 485, baseType: !762, size: 8, offset: 728)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1743, file: !1744, line: 486, baseType: !762, size: 8, offset: 736)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1743, file: !1744, line: 487, baseType: !762, size: 8, offset: 744)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1743, file: !1744, line: 488, baseType: !762, size: 8, offset: 752)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1743, file: !1744, line: 489, baseType: !762, size: 8, offset: 760)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1743, file: !1744, line: 490, baseType: !762, size: 8, offset: 768)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1743, file: !1744, line: 491, baseType: !762, size: 8, offset: 776)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1743, file: !1744, line: 492, baseType: !762, size: 8, offset: 784)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1743, file: !1744, line: 493, baseType: !762, size: 8, offset: 792)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1743, file: !1744, line: 494, baseType: !762, size: 8, offset: 800)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1743, file: !1744, line: 495, baseType: !762, size: 8, offset: 808)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1743, file: !1744, line: 496, baseType: !762, size: 8, offset: 816)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1743, file: !1744, line: 497, baseType: !762, size: 8, offset: 824)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1743, file: !1744, line: 498, baseType: !762, size: 8, offset: 832)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1743, file: !1744, line: 499, baseType: !762, size: 8, offset: 840)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1743, file: !1744, line: 500, baseType: !762, size: 8, offset: 848)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1743, file: !1744, line: 501, baseType: !762, size: 8, offset: 856)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1743, file: !1744, line: 502, baseType: !762, size: 8, offset: 864)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1743, file: !1744, line: 503, baseType: !762, size: 8, offset: 872)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1743, file: !1744, line: 504, baseType: !762, size: 8, offset: 880)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1743, file: !1744, line: 505, baseType: !762, size: 8, offset: 888)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1743, file: !1744, line: 506, baseType: !762, size: 8, offset: 896)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1743, file: !1744, line: 507, baseType: !762, size: 8, offset: 904)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1743, file: !1744, line: 508, baseType: !762, size: 8, offset: 912)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1743, file: !1744, line: 509, baseType: !762, size: 8, offset: 920)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1743, file: !1744, line: 510, baseType: !762, size: 8, offset: 928)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1743, file: !1744, line: 511, baseType: !762, size: 8, offset: 936)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1743, file: !1744, line: 512, baseType: !762, size: 8, offset: 944)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1743, file: !1744, line: 513, baseType: !762, size: 8, offset: 952)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1743, file: !1744, line: 514, baseType: !762, size: 8, offset: 960)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1743, file: !1744, line: 515, baseType: !762, size: 8, offset: 968)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1743, file: !1744, line: 516, baseType: !762, size: 8, offset: 976)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1743, file: !1744, line: 517, baseType: !762, size: 8, offset: 984)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1743, file: !1744, line: 518, baseType: !762, size: 8, offset: 992)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1743, file: !1744, line: 519, baseType: !762, size: 8, offset: 1000)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1743, file: !1744, line: 520, baseType: !762, size: 8, offset: 1008)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1743, file: !1744, line: 521, baseType: !762, size: 8, offset: 1016)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1743, file: !1744, line: 522, baseType: !762, size: 8, offset: 1024)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1743, file: !1744, line: 523, baseType: !762, size: 8, offset: 1032)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1743, file: !1744, line: 524, baseType: !762, size: 8, offset: 1040)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1743, file: !1744, line: 525, baseType: !762, size: 8, offset: 1048)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1743, file: !1744, line: 526, baseType: !762, size: 8, offset: 1056)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1743, file: !1744, line: 527, baseType: !762, size: 8, offset: 1064)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1743, file: !1744, line: 528, baseType: !762, size: 8, offset: 1072)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1743, file: !1744, line: 529, baseType: !762, size: 8, offset: 1080)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1743, file: !1744, line: 530, baseType: !762, size: 8, offset: 1088)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1743, file: !1744, line: 531, baseType: !762, size: 8, offset: 1096)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1743, file: !1744, line: 532, baseType: !762, size: 8, offset: 1104)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1743, file: !1744, line: 533, baseType: !762, size: 8, offset: 1112)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1743, file: !1744, line: 534, baseType: !762, size: 8, offset: 1120)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1743, file: !1744, line: 535, baseType: !762, size: 8, offset: 1128)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1743, file: !1744, line: 536, baseType: !762, size: 8, offset: 1136)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1743, file: !1744, line: 537, baseType: !762, size: 8, offset: 1144)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1743, file: !1744, line: 538, baseType: !762, size: 8, offset: 1152)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1743, file: !1744, line: 539, baseType: !762, size: 8, offset: 1160)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1743, file: !1744, line: 540, baseType: !762, size: 8, offset: 1168)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1743, file: !1744, line: 541, baseType: !762, size: 8, offset: 1176)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1743, file: !1744, line: 542, baseType: !762, size: 8, offset: 1184)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1743, file: !1744, line: 543, baseType: !762, size: 8, offset: 1192)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1743, file: !1744, line: 544, baseType: !762, size: 8, offset: 1200)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1743, file: !1744, line: 545, baseType: !762, size: 8, offset: 1208)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1743, file: !1744, line: 546, baseType: !762, size: 8, offset: 1216)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1743, file: !1744, line: 547, baseType: !762, size: 8, offset: 1224)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1743, file: !1744, line: 548, baseType: !762, size: 8, offset: 1232)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1743, file: !1744, line: 549, baseType: !762, size: 8, offset: 1240)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1743, file: !1744, line: 550, baseType: !762, size: 8, offset: 1248)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1743, file: !1744, line: 551, baseType: !762, size: 8, offset: 1256)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1743, file: !1744, line: 552, baseType: !762, size: 8, offset: 1264)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1743, file: !1744, line: 553, baseType: !762, size: 8, offset: 1272)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1743, file: !1744, line: 554, baseType: !762, size: 8, offset: 1280)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1743, file: !1744, line: 555, baseType: !762, size: 8, offset: 1288)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1743, file: !1744, line: 556, baseType: !762, size: 8, offset: 1296)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1743, file: !1744, line: 557, baseType: !762, size: 8, offset: 1304)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1743, file: !1744, line: 558, baseType: !762, size: 8, offset: 1312)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1743, file: !1744, line: 559, baseType: !762, size: 8, offset: 1320)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1743, file: !1744, line: 560, baseType: !762, size: 8, offset: 1328)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1743, file: !1744, line: 561, baseType: !762, size: 8, offset: 1336)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1743, file: !1744, line: 562, baseType: !762, size: 8, offset: 1344)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1743, file: !1744, line: 563, baseType: !762, size: 8, offset: 1352)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1743, file: !1744, line: 564, baseType: !762, size: 8, offset: 1360)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1743, file: !1744, line: 565, baseType: !762, size: 8, offset: 1368)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1743, file: !1744, line: 566, baseType: !762, size: 8, offset: 1376)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1743, file: !1744, line: 567, baseType: !762, size: 8, offset: 1384)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1743, file: !1744, line: 568, baseType: !762, size: 8, offset: 1392)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1743, file: !1744, line: 569, baseType: !762, size: 8, offset: 1400)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1743, file: !1744, line: 570, baseType: !762, size: 8, offset: 1408)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1743, file: !1744, line: 571, baseType: !762, size: 8, offset: 1416)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1743, file: !1744, line: 572, baseType: !762, size: 8, offset: 1424)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1743, file: !1744, line: 573, baseType: !762, size: 8, offset: 1432)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1743, file: !1744, line: 574, baseType: !762, size: 8, offset: 1440)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !909, file: !171, line: 3405, baseType: !1910, size: 384)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !171, line: 3352, size: 384, elements: !1911)
!1911 = !{!1912, !1913}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1910, file: !171, line: 3353, baseType: !945, size: 192)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1910, file: !171, line: 3356, baseType: !1914, size: 192, offset: 192)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1744, line: 578, size: 192, elements: !1915)
!1915 = !{!1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1914, file: !1744, line: 580, baseType: !734, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1914, file: !1744, line: 581, baseType: !734, size: 32, offset: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1914, file: !1744, line: 582, baseType: !734, size: 32, offset: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1914, file: !1744, line: 583, baseType: !734, size: 32, offset: 96)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1914, file: !1744, line: 584, baseType: !1019, size: 8, offset: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1914, file: !1744, line: 585, baseType: !1019, size: 8, offset: 136)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1914, file: !1744, line: 586, baseType: !1019, size: 8, offset: 144)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1914, file: !1744, line: 587, baseType: !1019, size: 8, offset: 152)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1914, file: !1744, line: 588, baseType: !1019, size: 8, offset: 160)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1914, file: !1744, line: 589, baseType: !1019, size: 8, offset: 168)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1914, file: !1744, line: 590, baseType: !1019, size: 8, offset: 176)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !812, file: !398, line: 178, baseType: !1324, size: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !812, file: !398, line: 179, baseType: !1929, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !398, line: 150, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !398, line: 142, size: 320, elements: !1932)
!1932 = !{!1933, !1934, !1935, !1936, !1937, !1938}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1931, file: !398, line: 144, baseType: !907, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1931, file: !398, line: 145, baseType: !820, size: 64, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1931, file: !398, line: 146, baseType: !820, size: 64, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1931, file: !398, line: 147, baseType: !1593, size: 32, offset: 192)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1931, file: !398, line: 148, baseType: !7, size: 32, offset: 224)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1931, file: !398, line: 149, baseType: !1019, size: 8, offset: 256)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !812, file: !398, line: 180, baseType: !1940, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !398, line: 162, baseType: !1942)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !398, line: 159, size: 128, elements: !1943)
!1943 = !{!1944, !1945}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1942, file: !398, line: 160, baseType: !907, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1942, file: !398, line: 161, baseType: !758, size: 64, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !812, file: !398, line: 181, baseType: !1947, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !398, line: 181, flags: DIFlagFwdDecl)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !807, file: !398, line: 317, baseType: !1950, size: 64)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 64, elements: !765)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !807, file: !398, line: 318, baseType: !1952, size: 320)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !398, line: 188, size: 320, elements: !1953)
!1953 = !{!1954, !1956, !2011}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1952, file: !398, line: 190, baseType: !1955, size: 192)
!1955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 192, elements: !978)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1952, file: !398, line: 193, baseType: !1957, size: 64, offset: 192)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !398, line: 206, size: 320, elements: !1959)
!1959 = !{!1960, !1996, !1997, !1998, !2010}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1958, file: !398, line: 208, baseType: !1961, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !791, line: 62, baseType: !1963)
!1963 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1964, line: 538, size: 256, elements: !1965)
!1964 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1965 = !{!1966, !1970, !1976, !1987}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1963, file: !1964, line: 539, baseType: !1967, size: 32)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1964, line: 482, size: 32, elements: !1968)
!1968 = !{!1969}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1967, file: !1964, line: 484, baseType: !7, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1963, file: !1964, line: 540, baseType: !1971, size: 192)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1964, line: 488, size: 192, elements: !1972)
!1972 = !{!1973, !1974, !1975}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1971, file: !1964, line: 489, baseType: !1967, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1971, file: !1964, line: 492, baseType: !817, size: 64, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1971, file: !1964, line: 496, baseType: !907, size: 64, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1963, file: !1964, line: 541, baseType: !1977, size: 256)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1964, line: 504, size: 256, elements: !1978)
!1978 = !{!1979, !1980, !1985, !1986}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1977, file: !1964, line: 505, baseType: !1967, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1977, file: !1964, line: 509, baseType: !1981, size: 64, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1964, line: 501, baseType: !1982)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = !DISubroutineType(types: !1984)
!1984 = !{null, !1248}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1977, file: !1964, line: 510, baseType: !1248, size: 64, offset: 128)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1977, file: !1964, line: 513, baseType: !1961, size: 64, offset: 192)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1963, file: !1964, line: 542, baseType: !1988, size: 128)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1964, line: 530, size: 128, elements: !1989)
!1989 = !{!1990, !1991}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1988, file: !1964, line: 531, baseType: !1967, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1988, file: !1964, line: 534, baseType: !1992, size: 64, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1964, line: 525, baseType: !1993)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{!1019, !907, !817, !784, !784}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1958, file: !398, line: 211, baseType: !7, size: 32, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1958, file: !398, line: 214, baseType: !758, size: 64, offset: 128)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1958, file: !398, line: 224, baseType: !1999, size: 64, offset: 192)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !398, line: 202, baseType: !2001)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !398, line: 202, size: 128, elements: !2002)
!2002 = !{!2003}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2001, file: !398, line: 202, baseType: !2004, size: 128)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !398, line: 200, baseType: !2005)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !398, line: 200, size: 128, elements: !2006)
!2006 = !{!2007, !2008, !2009}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2005, file: !398, line: 200, baseType: !7, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2005, file: !398, line: 200, baseType: !7, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2005, file: !398, line: 200, baseType: !829, size: 64, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1958, file: !398, line: 234, baseType: !1999, size: 64, offset: 256)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1952, file: !398, line: 197, baseType: !758, size: 64, offset: 256)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !807, file: !398, line: 319, baseType: !967, size: 256)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !807, file: !398, line: 320, baseType: !986, size: 192)
!2014 = !{!2015, !2016, !2017, !2018, !2021, !2023, !2024, !2026, !2027, !2031, !2035, !2039, !2042, !2049, !2052}
!2015 = !DILocalVariable(name: "outf", arg: 1, scope: !724, file: !3, line: 1638, type: !727)
!2016 = !DILocalVariable(name: "rtx_first", arg: 2, scope: !724, file: !3, line: 1638, type: !790)
!2017 = !DILocalVariable(name: "tmp_rtx", scope: !724, file: !3, line: 1640, type: !790)
!2018 = !DILocalVariable(name: "max_uid", scope: !2019, file: !3, line: 1646, type: !734)
!2019 = distinct !DILexicalBlock(scope: !2020, file: !3, line: 1644, column: 5)
!2020 = distinct !DILexicalBlock(scope: !724, file: !3, line: 1641, column: 7)
!2021 = !DILocalVariable(name: "start", scope: !2019, file: !3, line: 1647, type: !2022)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!2023 = !DILocalVariable(name: "end", scope: !2019, file: !3, line: 1648, type: !2022)
!2024 = !DILocalVariable(name: "in_bb_p", scope: !2019, file: !3, line: 1649, type: !2025)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!2026 = !DILocalVariable(name: "bb", scope: !2019, file: !3, line: 1651, type: !1323)
!2027 = !DILocalVariable(name: "x", scope: !2028, file: !3, line: 1658, type: !820)
!2028 = distinct !DILexicalBlock(scope: !2029, file: !3, line: 1657, column: 2)
!2029 = distinct !DILexicalBlock(scope: !2030, file: !3, line: 1656, column: 7)
!2030 = distinct !DILexicalBlock(scope: !2019, file: !3, line: 1656, column: 7)
!2031 = !DILocalVariable(name: "state", scope: !2032, file: !3, line: 1664, type: !723)
!2032 = distinct !DILexicalBlock(scope: !2033, file: !3, line: 1663, column: 6)
!2033 = distinct !DILexicalBlock(scope: !2034, file: !3, line: 1662, column: 4)
!2034 = distinct !DILexicalBlock(scope: !2028, file: !3, line: 1662, column: 4)
!2035 = !DILocalVariable(name: "did_output", scope: !2036, file: !3, line: 1677, type: !734)
!2036 = distinct !DILexicalBlock(scope: !2037, file: !3, line: 1676, column: 2)
!2037 = distinct !DILexicalBlock(scope: !2038, file: !3, line: 1675, column: 7)
!2038 = distinct !DILexicalBlock(scope: !2019, file: !3, line: 1675, column: 7)
!2039 = !DILocalVariable(name: "e", scope: !2040, file: !3, line: 1680, type: !1340)
!2040 = distinct !DILexicalBlock(scope: !2041, file: !3, line: 1679, column: 6)
!2041 = distinct !DILexicalBlock(scope: !2036, file: !3, line: 1678, column: 8)
!2042 = !DILocalVariable(name: "ei", scope: !2040, file: !3, line: 1681, type: !2043)
!2043 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !155, line: 682, baseType: !2044)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !155, line: 679, size: 128, elements: !2045)
!2045 = !{!2046, !2047}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2044, file: !155, line: 680, baseType: !7, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2044, file: !155, line: 681, baseType: !2048, size: 64, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!2049 = !DILocalVariable(name: "e", scope: !2050, file: !3, line: 1712, type: !1340)
!2050 = distinct !DILexicalBlock(scope: !2051, file: !3, line: 1711, column: 6)
!2051 = distinct !DILexicalBlock(scope: !2036, file: !3, line: 1710, column: 8)
!2052 = !DILocalVariable(name: "ei", scope: !2050, file: !3, line: 1713, type: !2043)
!2053 = !{!2054, !2055, !2056}
!2054 = !DIEnumerator(name: "NOT_IN_BB", value: 0, isUnsigned: true)
!2055 = !DIEnumerator(name: "IN_ONE_BB", value: 1, isUnsigned: true)
!2056 = !DIEnumerator(name: "IN_MULTIPLE_BB", value: 2, isUnsigned: true)
!2057 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "br_predictor", file: !2058, line: 24, baseType: !7, size: 32, elements: !2059)
!2058 = !DIFile(filename: "./predict.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2059 = !{!2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088}
!2060 = !DIEnumerator(name: "PRED_COMBINED", value: 0, isUnsigned: true)
!2061 = !DIEnumerator(name: "PRED_DS_THEORY", value: 1, isUnsigned: true)
!2062 = !DIEnumerator(name: "PRED_FIRST_MATCH", value: 2, isUnsigned: true)
!2063 = !DIEnumerator(name: "PRED_NO_PREDICTION", value: 3, isUnsigned: true)
!2064 = !DIEnumerator(name: "PRED_UNCONDITIONAL", value: 4, isUnsigned: true)
!2065 = !DIEnumerator(name: "PRED_LOOP_ITERATIONS", value: 5, isUnsigned: true)
!2066 = !DIEnumerator(name: "PRED_BUILTIN_EXPECT", value: 6, isUnsigned: true)
!2067 = !DIEnumerator(name: "PRED_LOOP_ITERATIONS_GUESSED", value: 7, isUnsigned: true)
!2068 = !DIEnumerator(name: "PRED_CONTINUE", value: 8, isUnsigned: true)
!2069 = !DIEnumerator(name: "PRED_NORETURN", value: 9, isUnsigned: true)
!2070 = !DIEnumerator(name: "PRED_COLD_FUNCTION", value: 10, isUnsigned: true)
!2071 = !DIEnumerator(name: "PRED_LOOP_BRANCH", value: 11, isUnsigned: true)
!2072 = !DIEnumerator(name: "PRED_LOOP_EXIT", value: 12, isUnsigned: true)
!2073 = !DIEnumerator(name: "PRED_POINTER", value: 13, isUnsigned: true)
!2074 = !DIEnumerator(name: "PRED_TREE_POINTER", value: 14, isUnsigned: true)
!2075 = !DIEnumerator(name: "PRED_OPCODE_POSITIVE", value: 15, isUnsigned: true)
!2076 = !DIEnumerator(name: "PRED_OPCODE_NONEQUAL", value: 16, isUnsigned: true)
!2077 = !DIEnumerator(name: "PRED_FPOPCODE", value: 17, isUnsigned: true)
!2078 = !DIEnumerator(name: "PRED_TREE_OPCODE_POSITIVE", value: 18, isUnsigned: true)
!2079 = !DIEnumerator(name: "PRED_TREE_OPCODE_NONEQUAL", value: 19, isUnsigned: true)
!2080 = !DIEnumerator(name: "PRED_TREE_FPOPCODE", value: 20, isUnsigned: true)
!2081 = !DIEnumerator(name: "PRED_CALL", value: 21, isUnsigned: true)
!2082 = !DIEnumerator(name: "PRED_TREE_EARLY_RETURN", value: 22, isUnsigned: true)
!2083 = !DIEnumerator(name: "PRED_GOTO", value: 23, isUnsigned: true)
!2084 = !DIEnumerator(name: "PRED_CONST_RETURN", value: 24, isUnsigned: true)
!2085 = !DIEnumerator(name: "PRED_NEGATIVE_RETURN", value: 25, isUnsigned: true)
!2086 = !DIEnumerator(name: "PRED_NULL_RETURN", value: 26, isUnsigned: true)
!2087 = !DIEnumerator(name: "PRED_MUDFLAP", value: 27, isUnsigned: true)
!2088 = !DIEnumerator(name: "END_PREDICTORS", value: 28, isUnsigned: true)
!2089 = !{!2090, !1019, !734, !2091, !780, !817, !397, !820, !2022, !2025, !1439, !1328, !7, !784, !736, !782, !1455, !5}
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!2092 = !{!0, !2093, !2216}
!2093 = !DIGlobalVariableExpression(var: !2094, expr: !DIExpression())
!2094 = distinct !DIGlobalVariable(name: "rtl_cfg_hooks", scope: !2, file: !3, line: 3189, type: !2095, isLocal: false, isDefinition: true)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg_hooks", file: !2096, line: 25, size: 1856, elements: !2097)
!2096 = !DIFile(filename: "./cfghooks.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2097 = !{!2098, !2099, !2103, !2107, !2111, !2115, !2119, !2126, !2130, !2134, !2138, !2139, !2143, !2147, !2154, !2158, !2162, !2166, !2170, !2171, !2175, !2176, !2190, !2191, !2192, !2202, !2206, !2210, !2215}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2095, file: !2096, line: 28, baseType: !817, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "verify_flow_info", scope: !2095, file: !2096, line: 31, baseType: !2100, size: 64, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!734}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "dump_bb", scope: !2095, file: !2096, line: 32, baseType: !2104, size: 64, offset: 128)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DISubroutineType(types: !2106)
!2106 = !{null, !1323, !727, !734, !734}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "create_basic_block", scope: !2095, file: !2096, line: 37, baseType: !2108, size: 64, offset: 192)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{!1323, !780, !780, !1323}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "redirect_edge_and_branch", scope: !2095, file: !2096, line: 43, baseType: !2112, size: 64, offset: 256)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{!1340, !1340, !1323}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "redirect_edge_and_branch_force", scope: !2095, file: !2096, line: 48, baseType: !2116, size: 64, offset: 320)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!1323, !1340, !1323}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "can_remove_branch_p", scope: !2095, file: !2096, line: 52, baseType: !2120, size: 64, offset: 384)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DISubroutineType(types: !2122)
!2122 = !{!1019, !2123}
!2123 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_edge", file: !791, line: 109, baseType: !2124)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1342)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "delete_basic_block", scope: !2095, file: !2096, line: 55, baseType: !2127, size: 64, offset: 448)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{null, !1323}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "split_block", scope: !2095, file: !2096, line: 59, baseType: !2131, size: 64, offset: 512)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{!1323, !1323, !780}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "move_block_after", scope: !2095, file: !2096, line: 62, baseType: !2135, size: 64, offset: 576)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{!1019, !1323, !1323}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "can_merge_blocks_p", scope: !2095, file: !2096, line: 65, baseType: !2135, size: 64, offset: 640)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "merge_blocks", scope: !2095, file: !2096, line: 68, baseType: !2140, size: 64, offset: 704)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{null, !1323, !1323}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "predict_edge", scope: !2095, file: !2096, line: 71, baseType: !2144, size: 64, offset: 768)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{null, !1340, !2057, !734}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "predicted_by_p", scope: !2095, file: !2096, line: 75, baseType: !2148, size: 64, offset: 832)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = !DISubroutineType(types: !2150)
!2150 = !{!1019, !2151, !2057}
!2151 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !791, line: 112, baseType: !2152)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1325)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "can_duplicate_block_p", scope: !2095, file: !2096, line: 78, baseType: !2155, size: 64, offset: 896)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!1019, !2151}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate_block", scope: !2095, file: !2096, line: 81, baseType: !2159, size: 64, offset: 960)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!1323, !1323}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "split_edge", scope: !2095, file: !2096, line: 85, baseType: !2163, size: 64, offset: 1024)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{!1323, !1340}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "make_forwarder_block", scope: !2095, file: !2096, line: 86, baseType: !2167, size: 64, offset: 1088)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{null, !1340}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "tidy_fallthru_edge", scope: !2095, file: !2096, line: 89, baseType: !2167, size: 64, offset: 1152)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "block_ends_with_call_p", scope: !2095, file: !2096, line: 93, baseType: !2172, size: 64, offset: 1216)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DISubroutineType(types: !2174)
!2174 = !{!1019, !1323}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "block_ends_with_condjump_p", scope: !2095, file: !2096, line: 97, baseType: !2155, size: 64, offset: 1280)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "flow_call_edges_add", scope: !2095, file: !2096, line: 106, baseType: !2177, size: 64, offset: 1344)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{!734, !2180}
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2181, line: 45, baseType: !2182)
!2181 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2181, line: 39, size: 192, elements: !2184)
!2184 = !{!2185, !2186, !2187, !2188}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2183, file: !2181, line: 41, baseType: !2090, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2183, file: !2181, line: 42, baseType: !7, size: 32, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2183, file: !2181, line: 43, baseType: !7, size: 32, offset: 96)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2183, file: !2181, line: 44, baseType: !2189, size: 64, offset: 128)
!2189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, size: 64, elements: !765)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "execute_on_growing_pred", scope: !2095, file: !2096, line: 110, baseType: !2167, size: 64, offset: 1408)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "execute_on_shrinking_pred", scope: !2095, file: !2096, line: 114, baseType: !2167, size: 64, offset: 1472)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_hook_duplicate_loop_to_header_edge", scope: !2095, file: !2096, line: 118, baseType: !2193, size: 64, offset: 1536)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = !DISubroutineType(types: !2195)
!2195 = !{!1019, !1365, !1340, !7, !2180, !1340, !2196, !734}
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_heap", file: !155, line: 152, baseType: !2199)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_heap", file: !155, line: 152, size: 128, elements: !2200)
!2200 = !{!2201}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2199, file: !155, line: 152, baseType: !1333, size: 128)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "lv_add_condition_to_bb", scope: !2095, file: !2096, line: 125, baseType: !2203, size: 64, offset: 1600)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{null, !1323, !1323, !1323, !780}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "lv_adjust_loop_header_phi", scope: !2095, file: !2096, line: 128, baseType: !2207, size: 64, offset: 1664)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 64)
!2208 = !DISubroutineType(types: !2209)
!2209 = !{null, !1323, !1323, !1323, !1340}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "extract_cond_bb_edges", scope: !2095, file: !2096, line: 133, baseType: !2211, size: 64, offset: 1728)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{null, !1323, !2214, !2214}
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "flush_pending_stmts", scope: !2095, file: !2096, line: 138, baseType: !2167, size: 64, offset: 1792)
!2216 = !DIGlobalVariableExpression(var: !2217, expr: !DIExpression())
!2217 = distinct !DIGlobalVariable(name: "cfg_layout_rtl_cfg_hooks", scope: !2, file: !3, line: 3233, type: !2095, isLocal: false, isDefinition: true)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !541, line: 162, size: 640, elements: !2219)
!2219 = !{!2220}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2218, file: !541, line: 164, baseType: !2221, size: 640)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !541, line: 114, size: 640, elements: !2222)
!2222 = !{!2223, !2224, !2225, !2229, !2233, !2235, !2236, !2237, !2239, !2240, !2241, !2242, !2243}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2221, file: !541, line: 117, baseType: !540, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2221, file: !541, line: 121, baseType: !817, size: 64, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2221, file: !541, line: 125, baseType: !2226, size: 64, offset: 128)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!1019}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2221, file: !541, line: 130, baseType: !2230, size: 64, offset: 192)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!7}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2221, file: !541, line: 133, baseType: !2234, size: 64, offset: 256)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2221, file: !541, line: 136, baseType: !2234, size: 64, offset: 320)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2221, file: !541, line: 139, baseType: !734, size: 32, offset: 384)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2221, file: !541, line: 143, baseType: !2238, size: 32, offset: 416)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !548, line: 80, baseType: !547)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2221, file: !541, line: 146, baseType: !7, size: 32, offset: 448)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2221, file: !541, line: 147, baseType: !7, size: 32, offset: 480)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2221, file: !541, line: 148, baseType: !7, size: 32, offset: 512)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2221, file: !541, line: 151, baseType: !7, size: 32, offset: 544)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2221, file: !541, line: 152, baseType: !7, size: 32, offset: 576)
!2244 = !{i32 2, !"Dwarf Version", i32 4}
!2245 = !{i32 2, !"Debug Info Version", i32 3}
!2246 = !{i32 1, !"wchar_size", i32 4}
!2247 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2248 = distinct !DISubprogram(name: "vprintf", scope: !2249, file: !2249, line: 39, type: !2250, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2260)
!2249 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2250 = !DISubroutineType(types: !2251)
!2251 = !{!734, !2252, !2253}
!2252 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !817)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2255)
!2255 = !{!2256, !2257, !2258, !2259}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2254, file: !3, baseType: !7, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2254, file: !3, baseType: !7, size: 32, offset: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2254, file: !3, baseType: !780, size: 64, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2254, file: !3, baseType: !780, size: 64, offset: 128)
!2260 = !{!2261, !2262}
!2261 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2248, file: !2249, line: 39, type: !2252)
!2262 = !DILocalVariable(name: "__arg", arg: 2, scope: !2248, file: !2249, line: 39, type: !2253)
!2263 = !DILocation(line: 0, scope: !2248)
!2264 = !DILocation(line: 41, column: 20, scope: !2248)
!2265 = !DILocation(line: 41, column: 10, scope: !2248)
!2266 = !DILocation(line: 41, column: 3, scope: !2248)
!2267 = distinct !DISubprogram(name: "getchar", scope: !2249, file: !2249, line: 47, type: !2101, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2268)
!2268 = !{}
!2269 = !DILocation(line: 49, column: 16, scope: !2267)
!2270 = !DILocation(line: 49, column: 10, scope: !2267)
!2271 = !DILocation(line: 49, column: 3, scope: !2267)
!2272 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2249, file: !2249, line: 56, type: !2273, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2275)
!2273 = !DISubroutineType(types: !2274)
!2274 = !{!734, !727}
!2275 = !{!2276}
!2276 = !DILocalVariable(name: "__fp", arg: 1, scope: !2272, file: !2249, line: 56, type: !727)
!2277 = !DILocation(line: 0, scope: !2272)
!2278 = !DILocation(line: 58, column: 10, scope: !2272)
!2279 = !DILocation(line: 58, column: 3, scope: !2272)
!2280 = distinct !DISubprogram(name: "getc_unlocked", scope: !2249, file: !2249, line: 66, type: !2273, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2281)
!2281 = !{!2282}
!2282 = !DILocalVariable(name: "__fp", arg: 1, scope: !2280, file: !2249, line: 66, type: !727)
!2283 = !DILocation(line: 0, scope: !2280)
!2284 = !DILocation(line: 68, column: 10, scope: !2280)
!2285 = !DILocation(line: 68, column: 3, scope: !2280)
!2286 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2249, file: !2249, line: 73, type: !2101, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2268)
!2287 = !DILocation(line: 75, column: 10, scope: !2286)
!2288 = !DILocation(line: 75, column: 3, scope: !2286)
!2289 = distinct !DISubprogram(name: "putchar", scope: !2249, file: !2249, line: 82, type: !2290, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2292)
!2290 = !DISubroutineType(types: !2291)
!2291 = !{!734, !734}
!2292 = !{!2293}
!2293 = !DILocalVariable(name: "__c", arg: 1, scope: !2289, file: !2249, line: 82, type: !734)
!2294 = !DILocation(line: 0, scope: !2289)
!2295 = !DILocation(line: 84, column: 21, scope: !2289)
!2296 = !DILocation(line: 84, column: 10, scope: !2289)
!2297 = !DILocation(line: 84, column: 3, scope: !2289)
!2298 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2249, file: !2249, line: 91, type: !2299, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2301)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!734, !734, !727}
!2301 = !{!2302, !2303}
!2302 = !DILocalVariable(name: "__c", arg: 1, scope: !2298, file: !2249, line: 91, type: !734)
!2303 = !DILocalVariable(name: "__stream", arg: 2, scope: !2298, file: !2249, line: 91, type: !727)
!2304 = !DILocation(line: 0, scope: !2298)
!2305 = !DILocation(line: 93, column: 10, scope: !2298)
!2306 = !DILocation(line: 93, column: 3, scope: !2298)
!2307 = distinct !DISubprogram(name: "putc_unlocked", scope: !2249, file: !2249, line: 101, type: !2299, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2308)
!2308 = !{!2309, !2310}
!2309 = !DILocalVariable(name: "__c", arg: 1, scope: !2307, file: !2249, line: 101, type: !734)
!2310 = !DILocalVariable(name: "__stream", arg: 2, scope: !2307, file: !2249, line: 101, type: !727)
!2311 = !DILocation(line: 0, scope: !2307)
!2312 = !DILocation(line: 103, column: 10, scope: !2307)
!2313 = !DILocation(line: 103, column: 3, scope: !2307)
!2314 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2249, file: !2249, line: 108, type: !2290, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!2315 = !{!2316}
!2316 = !DILocalVariable(name: "__c", arg: 1, scope: !2314, file: !2249, line: 108, type: !734)
!2317 = !DILocation(line: 0, scope: !2314)
!2318 = !DILocation(line: 110, column: 10, scope: !2314)
!2319 = !DILocation(line: 110, column: 3, scope: !2314)
!2320 = distinct !DISubprogram(name: "getline", scope: !2249, file: !2249, line: 118, type: !2321, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{!2323, !2091, !2324, !727}
!2323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !757, line: 193, baseType: !758)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!2325 = !{!2326, !2327, !2328}
!2326 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2320, file: !2249, line: 118, type: !2091)
!2327 = !DILocalVariable(name: "__n", arg: 2, scope: !2320, file: !2249, line: 118, type: !2324)
!2328 = !DILocalVariable(name: "__stream", arg: 3, scope: !2320, file: !2249, line: 118, type: !727)
!2329 = !DILocation(line: 0, scope: !2320)
!2330 = !DILocation(line: 120, column: 10, scope: !2320)
!2331 = !DILocation(line: 120, column: 3, scope: !2320)
!2332 = distinct !DISubprogram(name: "feof_unlocked", scope: !2249, file: !2249, line: 128, type: !2273, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2333)
!2333 = !{!2334}
!2334 = !DILocalVariable(name: "__stream", arg: 1, scope: !2332, file: !2249, line: 128, type: !727)
!2335 = !DILocation(line: 0, scope: !2332)
!2336 = !DILocation(line: 130, column: 10, scope: !2332)
!2337 = !DILocation(line: 130, column: 3, scope: !2332)
!2338 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2249, file: !2249, line: 135, type: !2273, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2339)
!2339 = !{!2340}
!2340 = !DILocalVariable(name: "__stream", arg: 1, scope: !2338, file: !2249, line: 135, type: !727)
!2341 = !DILocation(line: 0, scope: !2338)
!2342 = !DILocation(line: 137, column: 10, scope: !2338)
!2343 = !DILocation(line: 137, column: 3, scope: !2338)
!2344 = distinct !DISubprogram(name: "tolower", scope: !2345, file: !2345, line: 207, type: !2290, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2346)
!2345 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2346 = !{!2347}
!2347 = !DILocalVariable(name: "__c", arg: 1, scope: !2344, file: !2345, line: 207, type: !734)
!2348 = !DILocation(line: 0, scope: !2344)
!2349 = !DILocation(line: 209, column: 22, scope: !2344)
!2350 = !DILocation(line: 209, column: 39, scope: !2344)
!2351 = !DILocation(line: 209, column: 38, scope: !2344)
!2352 = !DILocation(line: 209, column: 37, scope: !2344)
!2353 = !DILocation(line: 209, column: 10, scope: !2344)
!2354 = !DILocation(line: 209, column: 3, scope: !2344)
!2355 = distinct !DISubprogram(name: "toupper", scope: !2345, file: !2345, line: 213, type: !2290, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2356)
!2356 = !{!2357}
!2357 = !DILocalVariable(name: "__c", arg: 1, scope: !2355, file: !2345, line: 213, type: !734)
!2358 = !DILocation(line: 0, scope: !2355)
!2359 = !DILocation(line: 215, column: 22, scope: !2355)
!2360 = !DILocation(line: 215, column: 39, scope: !2355)
!2361 = !DILocation(line: 215, column: 38, scope: !2355)
!2362 = !DILocation(line: 215, column: 37, scope: !2355)
!2363 = !DILocation(line: 215, column: 10, scope: !2355)
!2364 = !DILocation(line: 215, column: 3, scope: !2355)
!2365 = distinct !DISubprogram(name: "atoi", scope: !2366, file: !2366, line: 361, type: !2367, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2369)
!2366 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2367 = !DISubroutineType(types: !2368)
!2368 = !{!734, !817}
!2369 = !{!2370}
!2370 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2365, file: !2366, line: 361, type: !817)
!2371 = !DILocation(line: 0, scope: !2365)
!2372 = !DILocation(line: 363, column: 16, scope: !2365)
!2373 = !DILocation(line: 363, column: 10, scope: !2365)
!2374 = !DILocation(line: 363, column: 3, scope: !2365)
!2375 = distinct !DISubprogram(name: "atol", scope: !2366, file: !2366, line: 366, type: !2376, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2378)
!2376 = !DISubroutineType(types: !2377)
!2377 = !{!758, !817}
!2378 = !{!2379}
!2379 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2375, file: !2366, line: 366, type: !817)
!2380 = !DILocation(line: 0, scope: !2375)
!2381 = !DILocation(line: 368, column: 10, scope: !2375)
!2382 = !DILocation(line: 368, column: 3, scope: !2375)
!2383 = distinct !DISubprogram(name: "atoll", scope: !2366, file: !2366, line: 373, type: !2384, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2387)
!2384 = !DISubroutineType(types: !2385)
!2385 = !{!2386, !817}
!2386 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2387 = !{!2388}
!2388 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2383, file: !2366, line: 373, type: !817)
!2389 = !DILocation(line: 0, scope: !2383)
!2390 = !DILocation(line: 375, column: 10, scope: !2383)
!2391 = !DILocation(line: 375, column: 3, scope: !2383)
!2392 = distinct !DISubprogram(name: "bsearch", scope: !2393, file: !2393, line: 20, type: !2394, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2397)
!2393 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2394 = !DISubroutineType(types: !2395)
!2395 = !{!780, !1248, !1248, !782, !782, !2396}
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2366, line: 808, baseType: !1252)
!2397 = !{!2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407}
!2398 = !DILocalVariable(name: "__key", arg: 1, scope: !2392, file: !2393, line: 20, type: !1248)
!2399 = !DILocalVariable(name: "__base", arg: 2, scope: !2392, file: !2393, line: 20, type: !1248)
!2400 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2392, file: !2393, line: 20, type: !782)
!2401 = !DILocalVariable(name: "__size", arg: 4, scope: !2392, file: !2393, line: 20, type: !782)
!2402 = !DILocalVariable(name: "__compar", arg: 5, scope: !2392, file: !2393, line: 21, type: !2396)
!2403 = !DILocalVariable(name: "__l", scope: !2392, file: !2393, line: 23, type: !782)
!2404 = !DILocalVariable(name: "__u", scope: !2392, file: !2393, line: 23, type: !782)
!2405 = !DILocalVariable(name: "__idx", scope: !2392, file: !2393, line: 23, type: !782)
!2406 = !DILocalVariable(name: "__p", scope: !2392, file: !2393, line: 24, type: !1248)
!2407 = !DILocalVariable(name: "__comparison", scope: !2392, file: !2393, line: 25, type: !734)
!2408 = !DILocation(line: 0, scope: !2392)
!2409 = !DILocation(line: 29, column: 3, scope: !2392)
!2410 = !DILocation(line: 27, column: 7, scope: !2392)
!2411 = !DILocation(line: 29, column: 14, scope: !2392)
!2412 = !DILocation(line: 31, column: 20, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2392, file: !2393, line: 30, column: 5)
!2414 = !DILocation(line: 31, column: 27, scope: !2413)
!2415 = !DILocation(line: 32, column: 56, scope: !2413)
!2416 = !DILocation(line: 32, column: 47, scope: !2413)
!2417 = !DILocation(line: 33, column: 22, scope: !2413)
!2418 = !DILocation(line: 34, column: 24, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2413, file: !2393, line: 34, column: 11)
!2420 = !DILocation(line: 34, column: 11, scope: !2413)
!2421 = !DILocation(line: 36, column: 29, scope: !2422)
!2422 = distinct !DILexicalBlock(scope: !2419, file: !2393, line: 36, column: 16)
!2423 = !DILocation(line: 36, column: 16, scope: !2419)
!2424 = !DILocation(line: 37, column: 14, scope: !2422)
!2425 = distinct !{!2425, !2409, !2426}
!2426 = !DILocation(line: 40, column: 5, scope: !2392)
!2427 = !DILocation(line: 43, column: 1, scope: !2392)
!2428 = distinct !DISubprogram(name: "atof", scope: !2429, file: !2429, line: 25, type: !2430, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2433)
!2429 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2430 = !DISubroutineType(types: !2431)
!2431 = !{!2432, !817}
!2432 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2433 = !{!2434}
!2434 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2428, file: !2429, line: 25, type: !817)
!2435 = !DILocation(line: 0, scope: !2428)
!2436 = !DILocation(line: 27, column: 10, scope: !2428)
!2437 = !DILocation(line: 27, column: 3, scope: !2428)
!2438 = distinct !DISubprogram(name: "strtoimax", scope: !2439, file: !2439, line: 324, type: !2440, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2446)
!2439 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2440 = !DISubroutineType(types: !2441)
!2441 = !{!2442, !2252, !2445, !734}
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2443, line: 101, baseType: !2444)
!2443 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !757, line: 72, baseType: !758)
!2445 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2091)
!2446 = !{!2447, !2448, !2449}
!2447 = !DILocalVariable(name: "nptr", arg: 1, scope: !2438, file: !2439, line: 324, type: !2252)
!2448 = !DILocalVariable(name: "endptr", arg: 2, scope: !2438, file: !2439, line: 324, type: !2445)
!2449 = !DILocalVariable(name: "base", arg: 3, scope: !2438, file: !2439, line: 324, type: !734)
!2450 = !DILocation(line: 0, scope: !2438)
!2451 = !DILocation(line: 327, column: 10, scope: !2438)
!2452 = !DILocation(line: 327, column: 3, scope: !2438)
!2453 = distinct !DISubprogram(name: "strtoumax", scope: !2439, file: !2439, line: 336, type: !2454, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2458)
!2454 = !DISubroutineType(types: !2455)
!2455 = !{!2456, !2252, !2445, !734}
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2443, line: 102, baseType: !2457)
!2457 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !757, line: 73, baseType: !784)
!2458 = !{!2459, !2460, !2461}
!2459 = !DILocalVariable(name: "nptr", arg: 1, scope: !2453, file: !2439, line: 336, type: !2252)
!2460 = !DILocalVariable(name: "endptr", arg: 2, scope: !2453, file: !2439, line: 336, type: !2445)
!2461 = !DILocalVariable(name: "base", arg: 3, scope: !2453, file: !2439, line: 336, type: !734)
!2462 = !DILocation(line: 0, scope: !2453)
!2463 = !DILocation(line: 339, column: 10, scope: !2453)
!2464 = !DILocation(line: 339, column: 3, scope: !2453)
!2465 = distinct !DISubprogram(name: "wcstoimax", scope: !2439, file: !2439, line: 348, type: !2466, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2475)
!2466 = !DISubroutineType(types: !2467)
!2467 = !{!2442, !2468, !2472, !734}
!2468 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2469)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!2470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2471)
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2439, line: 34, baseType: !734)
!2472 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2473)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2475 = !{!2476, !2477, !2478}
!2476 = !DILocalVariable(name: "nptr", arg: 1, scope: !2465, file: !2439, line: 348, type: !2468)
!2477 = !DILocalVariable(name: "endptr", arg: 2, scope: !2465, file: !2439, line: 348, type: !2472)
!2478 = !DILocalVariable(name: "base", arg: 3, scope: !2465, file: !2439, line: 348, type: !734)
!2479 = !DILocation(line: 0, scope: !2465)
!2480 = !DILocation(line: 351, column: 10, scope: !2465)
!2481 = !DILocation(line: 351, column: 3, scope: !2465)
!2482 = distinct !DISubprogram(name: "wcstoumax", scope: !2439, file: !2439, line: 362, type: !2483, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2485)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!2456, !2468, !2472, !734}
!2485 = !{!2486, !2487, !2488}
!2486 = !DILocalVariable(name: "nptr", arg: 1, scope: !2482, file: !2439, line: 362, type: !2468)
!2487 = !DILocalVariable(name: "endptr", arg: 2, scope: !2482, file: !2439, line: 362, type: !2472)
!2488 = !DILocalVariable(name: "base", arg: 3, scope: !2482, file: !2439, line: 362, type: !734)
!2489 = !DILocation(line: 0, scope: !2482)
!2490 = !DILocation(line: 365, column: 10, scope: !2482)
!2491 = !DILocation(line: 365, column: 3, scope: !2482)
!2492 = distinct !DISubprogram(name: "stat", scope: !2493, file: !2493, line: 453, type: !2494, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2531)
!2493 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2494 = !DISubroutineType(types: !2495)
!2495 = !{!734, !817, !2496}
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2498, line: 46, size: 1152, elements: !2499)
!2498 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2499 = !{!2500, !2502, !2504, !2506, !2508, !2510, !2512, !2513, !2514, !2515, !2517, !2519, !2527, !2528, !2529}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2497, file: !2498, line: 48, baseType: !2501, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !757, line: 145, baseType: !784)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2497, file: !2498, line: 53, baseType: !2503, size: 64, offset: 64)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !757, line: 148, baseType: !784)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2497, file: !2498, line: 61, baseType: !2505, size: 64, offset: 128)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !757, line: 151, baseType: !784)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2497, file: !2498, line: 62, baseType: !2507, size: 32, offset: 192)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !757, line: 150, baseType: !7)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2497, file: !2498, line: 64, baseType: !2509, size: 32, offset: 224)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !757, line: 146, baseType: !7)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2497, file: !2498, line: 65, baseType: !2511, size: 32, offset: 256)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !757, line: 147, baseType: !7)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2497, file: !2498, line: 67, baseType: !734, size: 32, offset: 288)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2497, file: !2498, line: 69, baseType: !2501, size: 64, offset: 320)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2497, file: !2498, line: 74, baseType: !756, size: 64, offset: 384)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2497, file: !2498, line: 78, baseType: !2516, size: 64, offset: 448)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !757, line: 174, baseType: !758)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2497, file: !2498, line: 80, baseType: !2518, size: 64, offset: 512)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !757, line: 179, baseType: !758)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2497, file: !2498, line: 91, baseType: !2520, size: 128, offset: 576)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2521, line: 10, size: 128, elements: !2522)
!2521 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2522 = !{!2523, !2525}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2520, file: !2521, line: 12, baseType: !2524, size: 64)
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !757, line: 160, baseType: !758)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2520, file: !2521, line: 16, baseType: !2526, size: 64, offset: 64)
!2526 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !757, line: 196, baseType: !758)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2497, file: !2498, line: 92, baseType: !2520, size: 128, offset: 704)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2497, file: !2498, line: 93, baseType: !2520, size: 128, offset: 832)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2497, file: !2498, line: 106, baseType: !2530, size: 192, offset: 960)
!2530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2526, size: 192, elements: !978)
!2531 = !{!2532, !2533}
!2532 = !DILocalVariable(name: "__path", arg: 1, scope: !2492, file: !2493, line: 453, type: !817)
!2533 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2492, file: !2493, line: 453, type: !2496)
!2534 = !DILocation(line: 0, scope: !2492)
!2535 = !DILocation(line: 455, column: 10, scope: !2492)
!2536 = !DILocation(line: 455, column: 3, scope: !2492)
!2537 = distinct !DISubprogram(name: "lstat", scope: !2493, file: !2493, line: 460, type: !2494, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!2538 = !{!2539, !2540}
!2539 = !DILocalVariable(name: "__path", arg: 1, scope: !2537, file: !2493, line: 460, type: !817)
!2540 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2537, file: !2493, line: 460, type: !2496)
!2541 = !DILocation(line: 0, scope: !2537)
!2542 = !DILocation(line: 462, column: 10, scope: !2537)
!2543 = !DILocation(line: 462, column: 3, scope: !2537)
!2544 = distinct !DISubprogram(name: "fstat", scope: !2493, file: !2493, line: 467, type: !2545, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2547)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!734, !734, !2496}
!2547 = !{!2548, !2549}
!2548 = !DILocalVariable(name: "__fd", arg: 1, scope: !2544, file: !2493, line: 467, type: !734)
!2549 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2544, file: !2493, line: 467, type: !2496)
!2550 = !DILocation(line: 0, scope: !2544)
!2551 = !DILocation(line: 469, column: 10, scope: !2544)
!2552 = !DILocation(line: 469, column: 3, scope: !2544)
!2553 = distinct !DISubprogram(name: "fstatat", scope: !2493, file: !2493, line: 474, type: !2554, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2556)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{!734, !734, !817, !2496, !734}
!2556 = !{!2557, !2558, !2559, !2560}
!2557 = !DILocalVariable(name: "__fd", arg: 1, scope: !2553, file: !2493, line: 474, type: !734)
!2558 = !DILocalVariable(name: "__filename", arg: 2, scope: !2553, file: !2493, line: 474, type: !817)
!2559 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2553, file: !2493, line: 474, type: !2496)
!2560 = !DILocalVariable(name: "__flag", arg: 4, scope: !2553, file: !2493, line: 474, type: !734)
!2561 = !DILocation(line: 0, scope: !2553)
!2562 = !DILocation(line: 477, column: 10, scope: !2553)
!2563 = !DILocation(line: 477, column: 3, scope: !2553)
!2564 = distinct !DISubprogram(name: "mknod", scope: !2493, file: !2493, line: 483, type: !2565, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2567)
!2565 = !DISubroutineType(types: !2566)
!2566 = !{!734, !817, !2507, !2501}
!2567 = !{!2568, !2569, !2570}
!2568 = !DILocalVariable(name: "__path", arg: 1, scope: !2564, file: !2493, line: 483, type: !817)
!2569 = !DILocalVariable(name: "__mode", arg: 2, scope: !2564, file: !2493, line: 483, type: !2507)
!2570 = !DILocalVariable(name: "__dev", arg: 3, scope: !2564, file: !2493, line: 483, type: !2501)
!2571 = !DILocation(line: 0, scope: !2564)
!2572 = !DILocation(line: 485, column: 10, scope: !2564)
!2573 = !DILocation(line: 485, column: 3, scope: !2564)
!2574 = distinct !DISubprogram(name: "mknodat", scope: !2493, file: !2493, line: 491, type: !2575, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2577)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{!734, !734, !817, !2507, !2501}
!2577 = !{!2578, !2579, !2580, !2581}
!2578 = !DILocalVariable(name: "__fd", arg: 1, scope: !2574, file: !2493, line: 491, type: !734)
!2579 = !DILocalVariable(name: "__path", arg: 2, scope: !2574, file: !2493, line: 491, type: !817)
!2580 = !DILocalVariable(name: "__mode", arg: 3, scope: !2574, file: !2493, line: 491, type: !2507)
!2581 = !DILocalVariable(name: "__dev", arg: 4, scope: !2574, file: !2493, line: 491, type: !2501)
!2582 = !DILocation(line: 0, scope: !2574)
!2583 = !DILocation(line: 494, column: 10, scope: !2574)
!2584 = !DILocation(line: 494, column: 3, scope: !2574)
!2585 = distinct !DISubprogram(name: "stat64", scope: !2493, file: !2493, line: 502, type: !2586, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2608)
!2586 = !DISubroutineType(types: !2587)
!2587 = !{!734, !817, !2588}
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2498, line: 119, size: 1152, elements: !2590)
!2590 = !{!2591, !2592, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2604, !2605, !2606, !2607}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2589, file: !2498, line: 121, baseType: !2501, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2589, file: !2498, line: 123, baseType: !2593, size: 64, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !757, line: 149, baseType: !784)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2589, file: !2498, line: 124, baseType: !2505, size: 64, offset: 128)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2589, file: !2498, line: 125, baseType: !2507, size: 32, offset: 192)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2589, file: !2498, line: 132, baseType: !2509, size: 32, offset: 224)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2589, file: !2498, line: 133, baseType: !2511, size: 32, offset: 256)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2589, file: !2498, line: 135, baseType: !734, size: 32, offset: 288)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2589, file: !2498, line: 136, baseType: !2501, size: 64, offset: 320)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2589, file: !2498, line: 137, baseType: !756, size: 64, offset: 384)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2589, file: !2498, line: 143, baseType: !2516, size: 64, offset: 448)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2589, file: !2498, line: 144, baseType: !2603, size: 64, offset: 512)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !757, line: 180, baseType: !758)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2589, file: !2498, line: 152, baseType: !2520, size: 128, offset: 576)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2589, file: !2498, line: 153, baseType: !2520, size: 128, offset: 704)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2589, file: !2498, line: 154, baseType: !2520, size: 128, offset: 832)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2589, file: !2498, line: 164, baseType: !2530, size: 192, offset: 960)
!2608 = !{!2609, !2610}
!2609 = !DILocalVariable(name: "__path", arg: 1, scope: !2585, file: !2493, line: 502, type: !817)
!2610 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2585, file: !2493, line: 502, type: !2588)
!2611 = !DILocation(line: 0, scope: !2585)
!2612 = !DILocation(line: 504, column: 10, scope: !2585)
!2613 = !DILocation(line: 504, column: 3, scope: !2585)
!2614 = distinct !DISubprogram(name: "lstat64", scope: !2493, file: !2493, line: 509, type: !2586, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2615)
!2615 = !{!2616, !2617}
!2616 = !DILocalVariable(name: "__path", arg: 1, scope: !2614, file: !2493, line: 509, type: !817)
!2617 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2614, file: !2493, line: 509, type: !2588)
!2618 = !DILocation(line: 0, scope: !2614)
!2619 = !DILocation(line: 511, column: 10, scope: !2614)
!2620 = !DILocation(line: 511, column: 3, scope: !2614)
!2621 = distinct !DISubprogram(name: "fstat64", scope: !2493, file: !2493, line: 516, type: !2622, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2624)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{!734, !734, !2588}
!2624 = !{!2625, !2626}
!2625 = !DILocalVariable(name: "__fd", arg: 1, scope: !2621, file: !2493, line: 516, type: !734)
!2626 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2621, file: !2493, line: 516, type: !2588)
!2627 = !DILocation(line: 0, scope: !2621)
!2628 = !DILocation(line: 518, column: 10, scope: !2621)
!2629 = !DILocation(line: 518, column: 3, scope: !2621)
!2630 = distinct !DISubprogram(name: "fstatat64", scope: !2493, file: !2493, line: 523, type: !2631, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2633)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!734, !734, !817, !2588, !734}
!2633 = !{!2634, !2635, !2636, !2637}
!2634 = !DILocalVariable(name: "__fd", arg: 1, scope: !2630, file: !2493, line: 523, type: !734)
!2635 = !DILocalVariable(name: "__filename", arg: 2, scope: !2630, file: !2493, line: 523, type: !817)
!2636 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2630, file: !2493, line: 523, type: !2588)
!2637 = !DILocalVariable(name: "__flag", arg: 4, scope: !2630, file: !2493, line: 523, type: !734)
!2638 = !DILocation(line: 0, scope: !2630)
!2639 = !DILocation(line: 526, column: 10, scope: !2630)
!2640 = !DILocation(line: 526, column: 3, scope: !2630)
!2641 = distinct !DISubprogram(name: "delete_insn", scope: !3, file: !3, line: 115, type: !2642, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2644)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{!820, !820}
!2644 = !{!2645, !2646, !2647, !2648, !2649, !2654, !2657, !2658, !2659, !2660}
!2645 = !DILocalVariable(name: "insn", arg: 1, scope: !2641, file: !3, line: 115, type: !820)
!2646 = !DILocalVariable(name: "next", scope: !2641, file: !3, line: 117, type: !820)
!2647 = !DILocalVariable(name: "note", scope: !2641, file: !3, line: 118, type: !820)
!2648 = !DILocalVariable(name: "really_delete", scope: !2641, file: !3, line: 119, type: !1019)
!2649 = !DILocalVariable(name: "name", scope: !2650, file: !3, line: 128, type: !817)
!2650 = distinct !DILexicalBlock(scope: !2651, file: !3, line: 127, column: 2)
!2651 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 126, column: 11)
!2652 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 122, column: 5)
!2653 = distinct !DILexicalBlock(scope: !2641, file: !3, line: 121, column: 7)
!2654 = !DILocalVariable(name: "pat", scope: !2655, file: !3, line: 175, type: !820)
!2655 = distinct !DILexicalBlock(scope: !2656, file: !3, line: 174, column: 5)
!2656 = distinct !DILexicalBlock(scope: !2641, file: !3, line: 173, column: 7)
!2657 = !DILocalVariable(name: "diff_vec_p", scope: !2655, file: !3, line: 176, type: !734)
!2658 = !DILocalVariable(name: "len", scope: !2655, file: !3, line: 177, type: !734)
!2659 = !DILocalVariable(name: "i", scope: !2655, file: !3, line: 178, type: !734)
!2660 = !DILocalVariable(name: "label", scope: !2661, file: !3, line: 182, type: !820)
!2661 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 181, column: 2)
!2662 = distinct !DILexicalBlock(scope: !2663, file: !3, line: 180, column: 7)
!2663 = distinct !DILexicalBlock(scope: !2655, file: !3, line: 180, column: 7)
!2664 = !DILocation(line: 0, scope: !2641)
!2665 = !DILocation(line: 117, column: 14, scope: !2641)
!2666 = !DILocation(line: 121, column: 7, scope: !2653)
!2667 = !DILocation(line: 121, column: 7, scope: !2641)
!2668 = !DILocation(line: 126, column: 13, scope: !2651)
!2669 = !DILocation(line: 126, column: 11, scope: !2652)
!2670 = !DILocation(line: 128, column: 23, scope: !2650)
!2671 = !DILocation(line: 131, column: 4, scope: !2650)
!2672 = !DILocation(line: 132, column: 4, scope: !2650)
!2673 = !DILocation(line: 132, column: 21, scope: !2650)
!2674 = !DILocation(line: 133, column: 4, scope: !2650)
!2675 = !DILocation(line: 133, column: 35, scope: !2650)
!2676 = !DILocation(line: 134, column: 2, scope: !2650)
!2677 = !DILocation(line: 136, column: 7, scope: !2652)
!2678 = !DILocation(line: 137, column: 5, scope: !2652)
!2679 = !DILocation(line: 119, column: 8, scope: !2641)
!2680 = !DILocation(line: 139, column: 7, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2641, file: !3, line: 139, column: 7)
!2682 = !DILocation(line: 139, column: 7, scope: !2641)
!2683 = !DILocation(line: 149, column: 7, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2641, file: !3, line: 149, column: 7)
!2685 = !DILocation(line: 142, column: 7, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2681, file: !3, line: 140, column: 5)
!2687 = !DILocation(line: 143, column: 7, scope: !2686)
!2688 = !DILocation(line: 144, column: 29, scope: !2686)
!2689 = !DILocation(line: 145, column: 5, scope: !2686)
!2690 = !DILocation(line: 149, column: 7, scope: !2641)
!2691 = !DILocation(line: 151, column: 11, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2693, file: !3, line: 151, column: 11)
!2693 = distinct !DILexicalBlock(scope: !2684, file: !3, line: 150, column: 5)
!2694 = !DILocation(line: 152, column: 4, scope: !2692)
!2695 = !DILocation(line: 152, column: 7, scope: !2692)
!2696 = !DILocation(line: 151, column: 11, scope: !2693)
!2697 = !DILocation(line: 153, column: 2, scope: !2692)
!2698 = !DILocation(line: 153, column: 33, scope: !2692)
!2699 = !DILocation(line: 156, column: 7, scope: !2693)
!2700 = !DILocation(line: 157, column: 10, scope: !2693)
!2701 = !DILocation(line: 157, column: 60, scope: !2693)
!2702 = !DILocation(line: 158, column: 7, scope: !2693)
!2703 = !DILocation(line: 158, column: 10, scope: !2693)
!2704 = !DILocation(line: 160, column: 4, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2693, file: !3, line: 159, column: 2)
!2706 = !DILocation(line: 160, column: 32, scope: !2705)
!2707 = !DILocation(line: 161, column: 4, scope: !2705)
!2708 = distinct !{!2708, !2699, !2709}
!2709 = !DILocation(line: 162, column: 2, scope: !2693)
!2710 = !DILocation(line: 166, column: 3, scope: !2641)
!2711 = !DILocation(line: 166, column: 18, scope: !2641)
!2712 = !DILocation(line: 166, column: 69, scope: !2641)
!2713 = !DILocation(line: 167, column: 3, scope: !2641)
!2714 = !DILocation(line: 167, column: 6, scope: !2641)
!2715 = !DILocation(line: 169, column: 7, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2641, file: !3, line: 168, column: 5)
!2717 = !DILocation(line: 169, column: 35, scope: !2716)
!2718 = !DILocation(line: 170, column: 7, scope: !2716)
!2719 = distinct !{!2719, !2710, !2720}
!2720 = !DILocation(line: 171, column: 5, scope: !2641)
!2721 = !DILocation(line: 173, column: 7, scope: !2656)
!2722 = !DILocation(line: 173, column: 7, scope: !2641)
!2723 = !DILocation(line: 0, scope: !2655)
!2724 = !DILocation(line: 176, column: 50, scope: !2655)
!2725 = !DILocation(line: 177, column: 17, scope: !2655)
!2726 = !DILocation(line: 180, column: 12, scope: !2663)
!2727 = !DILocation(line: 0, scope: !2663)
!2728 = !DILocation(line: 180, column: 21, scope: !2662)
!2729 = !DILocation(line: 180, column: 7, scope: !2663)
!2730 = !DILocation(line: 182, column: 16, scope: !2661)
!2731 = !DILocation(line: 0, scope: !2661)
!2732 = !DILocation(line: 187, column: 9, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 187, column: 8)
!2734 = !DILocation(line: 187, column: 8, scope: !2661)
!2735 = !DILocation(line: 188, column: 6, scope: !2733)
!2736 = !DILocation(line: 188, column: 25, scope: !2733)
!2737 = !DILocation(line: 180, column: 29, scope: !2662)
!2738 = !DILocation(line: 180, column: 7, scope: !2662)
!2739 = distinct !{!2739, !2729, !2740}
!2740 = !DILocation(line: 189, column: 2, scope: !2663)
!2741 = !DILocation(line: 192, column: 3, scope: !2641)
!2742 = distinct !DISubprogram(name: "can_delete_label_p", scope: !3, file: !3, line: 104, type: !2743, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2745)
!2743 = !DISubroutineType(types: !2744)
!2744 = !{!734, !790}
!2745 = !{!2746}
!2746 = !DILocalVariable(name: "label", arg: 1, scope: !2742, file: !3, line: 104, type: !790)
!2747 = !DILocation(line: 0, scope: !2742)
!2748 = !DILocation(line: 106, column: 12, scope: !2742)
!2749 = !DILocation(line: 108, column: 4, scope: !2742)
!2750 = !DILocation(line: 108, column: 7, scope: !2742)
!2751 = !DILocation(line: 108, column: 26, scope: !2742)
!2752 = !DILocation(line: 109, column: 4, scope: !2742)
!2753 = !DILocation(line: 109, column: 24, scope: !2742)
!2754 = !DILocation(line: 109, column: 8, scope: !2742)
!2755 = !DILocation(line: 109, column: 7, scope: !2742)
!2756 = !DILocation(line: 106, column: 3, scope: !2742)
!2757 = distinct !DISubprogram(name: "delete_insn_and_edges", scope: !3, file: !3, line: 198, type: !2642, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2758)
!2758 = !{!2759, !2760, !2761}
!2759 = !DILocalVariable(name: "insn", arg: 1, scope: !2757, file: !3, line: 198, type: !820)
!2760 = !DILocalVariable(name: "x", scope: !2757, file: !3, line: 200, type: !820)
!2761 = !DILocalVariable(name: "purge", scope: !2757, file: !3, line: 201, type: !1019)
!2762 = !DILocation(line: 0, scope: !2757)
!2763 = !DILocation(line: 203, column: 7, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 203, column: 7)
!2765 = !DILocation(line: 204, column: 7, scope: !2764)
!2766 = !DILocation(line: 204, column: 10, scope: !2764)
!2767 = !DILocation(line: 205, column: 7, scope: !2764)
!2768 = !DILocation(line: 205, column: 10, scope: !2764)
!2769 = !DILocation(line: 205, column: 41, scope: !2764)
!2770 = !DILocation(line: 203, column: 7, scope: !2757)
!2771 = !DILocation(line: 207, column: 7, scope: !2757)
!2772 = !DILocation(line: 208, column: 7, scope: !2757)
!2773 = !DILocation(line: 209, column: 23, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 208, column: 7)
!2775 = !DILocation(line: 209, column: 5, scope: !2774)
!2776 = !DILocation(line: 210, column: 3, scope: !2757)
!2777 = distinct !DISubprogram(name: "purge_dead_edges", scope: !3, file: !3, line: 2223, type: !2173, scopeLine: 2224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2778)
!2778 = !{!2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2789, !2793, !2796, !2797, !2798}
!2779 = !DILocalVariable(name: "bb", arg: 1, scope: !2777, file: !3, line: 2223, type: !1323)
!2780 = !DILocalVariable(name: "e", scope: !2777, file: !3, line: 2225, type: !1340)
!2781 = !DILocalVariable(name: "insn", scope: !2777, file: !3, line: 2226, type: !820)
!2782 = !DILocalVariable(name: "note", scope: !2777, file: !3, line: 2226, type: !820)
!2783 = !DILocalVariable(name: "purged", scope: !2777, file: !3, line: 2227, type: !1019)
!2784 = !DILocalVariable(name: "found", scope: !2777, file: !3, line: 2228, type: !1019)
!2785 = !DILocalVariable(name: "ei", scope: !2777, file: !3, line: 2229, type: !2043)
!2786 = !DILocalVariable(name: "eqnote", scope: !2787, file: !3, line: 2240, type: !820)
!2787 = distinct !DILexicalBlock(scope: !2788, file: !3, line: 2239, column: 5)
!2788 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 2237, column: 7)
!2789 = !DILocalVariable(name: "remove", scope: !2790, file: !3, line: 2251, type: !1019)
!2790 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2250, column: 5)
!2791 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 2249, column: 3)
!2792 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 2249, column: 3)
!2793 = !DILocalVariable(name: "note", scope: !2794, file: !3, line: 2282, type: !820)
!2794 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 2281, column: 5)
!2795 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 2280, column: 7)
!2796 = !DILocalVariable(name: "b", scope: !2794, file: !3, line: 2283, type: !1340)
!2797 = !DILocalVariable(name: "f", scope: !2794, file: !3, line: 2283, type: !1340)
!2798 = !DILocalVariable(name: "ei", scope: !2794, file: !3, line: 2284, type: !2043)
!2799 = !DILocation(line: 0, scope: !2777)
!2800 = !DILocation(line: 2225, column: 3, scope: !2777)
!2801 = !DILocation(line: 2226, column: 14, scope: !2777)
!2802 = !DILocation(line: 2229, column: 3, scope: !2777)
!2803 = !DILocation(line: 2231, column: 7, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 2231, column: 7)
!2805 = !DILocation(line: 2231, column: 27, scope: !2804)
!2806 = !DILocation(line: 2231, column: 38, scope: !2804)
!2807 = !DILocation(line: 2231, column: 35, scope: !2804)
!2808 = !DILocation(line: 2231, column: 7, scope: !2777)
!2809 = !DILocation(line: 2232, column: 5, scope: !2804)
!2810 = !DILocation(line: 2233, column: 14, scope: !2804)
!2811 = !DILocation(line: 2234, column: 13, scope: !2804)
!2812 = !DILocation(line: 2234, column: 36, scope: !2804)
!2813 = !DILocation(line: 2234, column: 33, scope: !2804)
!2814 = !DILocation(line: 2234, column: 59, scope: !2804)
!2815 = distinct !{!2815, !2809, !2816}
!2816 = !DILocation(line: 2234, column: 74, scope: !2804)
!2817 = !DILocation(line: 2237, column: 7, scope: !2788)
!2818 = !DILocation(line: 2238, column: 7, scope: !2788)
!2819 = !DILocation(line: 2238, column: 18, scope: !2788)
!2820 = !DILocation(line: 2238, column: 16, scope: !2788)
!2821 = !DILocation(line: 2237, column: 7, scope: !2777)
!2822 = !DILocation(line: 2242, column: 25, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 2242, column: 11)
!2824 = !DILocation(line: 2242, column: 13, scope: !2823)
!2825 = !DILocation(line: 2243, column: 4, scope: !2823)
!2826 = !DILocation(line: 2243, column: 18, scope: !2823)
!2827 = !DILocation(line: 0, scope: !2787)
!2828 = !DILocation(line: 2243, column: 16, scope: !2823)
!2829 = !DILocation(line: 2244, column: 8, scope: !2823)
!2830 = !DILocation(line: 2244, column: 25, scope: !2823)
!2831 = !DILocation(line: 2244, column: 13, scope: !2823)
!2832 = !DILocation(line: 2242, column: 11, scope: !2787)
!2833 = !DILocation(line: 2245, column: 2, scope: !2823)
!2834 = !DILocation(line: 2249, column: 13, scope: !2792)
!2835 = !DILocation(line: 0, scope: !2791)
!2836 = !DILocation(line: 2249, column: 8, scope: !2792)
!2837 = !DILocation(line: 2249, column: 40, scope: !2791)
!2838 = !DILocation(line: 2249, column: 38, scope: !2791)
!2839 = !DILocation(line: 2249, column: 3, scope: !2792)
!2840 = !DILocation(line: 0, scope: !2790)
!2841 = !DILocation(line: 2256, column: 14, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2790, file: !3, line: 2256, column: 11)
!2843 = !DILocation(line: 2256, column: 20, scope: !2842)
!2844 = !DILocation(line: 2256, column: 11, scope: !2790)
!2845 = !DILocation(line: 2258, column: 9, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 2258, column: 8)
!2847 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 2257, column: 2)
!2848 = !DILocation(line: 2258, column: 8, scope: !2847)
!2849 = !DILocation(line: 2260, column: 13, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2846, file: !3, line: 2260, column: 13)
!2851 = !DILocation(line: 2260, column: 13, scope: !2846)
!2852 = !DILocation(line: 2262, column: 14, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 2262, column: 13)
!2854 = !DILocation(line: 2262, column: 17, scope: !2853)
!2855 = !DILocation(line: 2262, column: 23, scope: !2853)
!2856 = !DILocation(line: 2262, column: 34, scope: !2853)
!2857 = !DILocation(line: 2262, column: 37, scope: !2853)
!2858 = !DILocation(line: 2262, column: 13, scope: !2850)
!2859 = !DILocation(line: 2267, column: 25, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 2267, column: 16)
!2861 = !DILocation(line: 2267, column: 16, scope: !2842)
!2862 = !DILocation(line: 2268, column: 12, scope: !2860)
!2863 = !DILocation(line: 2268, column: 11, scope: !2860)
!2864 = !DILocation(line: 2268, column: 2, scope: !2860)
!2865 = !DILocation(line: 2270, column: 11, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2790, file: !3, line: 2270, column: 11)
!2867 = !DILocation(line: 2270, column: 11, scope: !2790)
!2868 = !DILocation(line: 2272, column: 17, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2866, file: !3, line: 2271, column: 2)
!2870 = !DILocation(line: 2272, column: 4, scope: !2869)
!2871 = !DILocation(line: 2273, column: 4, scope: !2869)
!2872 = !DILocation(line: 2275, column: 2, scope: !2869)
!2873 = !DILocation(line: 2277, column: 2, scope: !2866)
!2874 = !DILocation(line: 2249, column: 3, scope: !2791)
!2875 = distinct !{!2875, !2839, !2876}
!2876 = !DILocation(line: 2278, column: 5, scope: !2792)
!2877 = !DILocation(line: 2280, column: 7, scope: !2795)
!2878 = !DILocation(line: 2280, column: 7, scope: !2777)
!2879 = !DILocation(line: 2284, column: 7, scope: !2794)
!2880 = !DILocation(line: 2287, column: 12, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 2287, column: 11)
!2882 = !DILocation(line: 2288, column: 4, scope: !2881)
!2883 = !DILocation(line: 2288, column: 8, scope: !2881)
!2884 = !DILocation(line: 2289, column: 4, scope: !2881)
!2885 = !DILocation(line: 2289, column: 8, scope: !2881)
!2886 = !DILocation(line: 2287, column: 11, scope: !2794)
!2887 = !DILocation(line: 2294, column: 11, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 2294, column: 11)
!2889 = !DILocation(line: 2294, column: 11, scope: !2794)
!2890 = !DILocation(line: 2296, column: 11, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2888, file: !3, line: 2295, column: 2)
!2892 = !DILocation(line: 0, scope: !2794)
!2893 = !DILocation(line: 2297, column: 8, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2891, file: !3, line: 2297, column: 8)
!2895 = !DILocation(line: 2297, column: 8, scope: !2891)
!2896 = !DILocation(line: 2298, column: 6, scope: !2894)
!2897 = !DILocation(line: 2299, column: 4, scope: !2891)
!2898 = !DILocation(line: 2299, column: 19, scope: !2891)
!2899 = !DILocation(line: 2300, column: 6, scope: !2891)
!2900 = distinct !{!2900, !2897, !2901}
!2901 = !DILocation(line: 2300, column: 29, scope: !2891)
!2902 = !DILocation(line: 2303, column: 17, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 2303, column: 7)
!2904 = !DILocation(line: 0, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2903, file: !3, line: 2303, column: 7)
!2906 = !DILocation(line: 0, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 2318, column: 13)
!2908 = distinct !DILexicalBlock(scope: !2909, file: !3, line: 2311, column: 8)
!2909 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 2304, column: 2)
!2910 = !DILocation(line: 2303, column: 12, scope: !2903)
!2911 = !DILocation(line: 2303, column: 7, scope: !2903)
!2912 = !DILocation(line: 2303, column: 44, scope: !2905)
!2913 = !DILocation(line: 2303, column: 42, scope: !2905)
!2914 = !DILocation(line: 2308, column: 7, scope: !2909)
!2915 = !DILocation(line: 2308, column: 13, scope: !2909)
!2916 = !DILocation(line: 2311, column: 18, scope: !2908)
!2917 = !DILocation(line: 2311, column: 35, scope: !2908)
!2918 = !DILocation(line: 2311, column: 38, scope: !2908)
!2919 = !DILocation(line: 2311, column: 8, scope: !2909)
!2920 = !DILocation(line: 2318, column: 13, scope: !2907)
!2921 = !DILocation(line: 2315, column: 8, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 2314, column: 6)
!2923 = !DILocation(line: 2316, column: 8, scope: !2922)
!2924 = distinct !{!2924, !2911, !2925}
!2925 = !DILocation(line: 2347, column: 2, scope: !2903)
!2926 = !DILocation(line: 2318, column: 16, scope: !2907)
!2927 = !DILocation(line: 2318, column: 24, scope: !2907)
!2928 = !DILocation(line: 2318, column: 21, scope: !2907)
!2929 = !DILocation(line: 2319, column: 6, scope: !2907)
!2930 = !DILocation(line: 2319, column: 9, scope: !2907)
!2931 = !DILocation(line: 2319, column: 30, scope: !2907)
!2932 = !DILocation(line: 2319, column: 27, scope: !2907)
!2933 = !DILocation(line: 2318, column: 13, scope: !2908)
!2934 = !DILocation(line: 2323, column: 8, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2907, file: !3, line: 2322, column: 6)
!2936 = !DILocation(line: 2324, column: 8, scope: !2935)
!2937 = !DILocation(line: 2326, column: 39, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2907, file: !3, line: 2326, column: 13)
!2939 = !DILocation(line: 2326, column: 42, scope: !2938)
!2940 = !DILocation(line: 2326, column: 13, scope: !2907)
!2941 = !DILocation(line: 2333, column: 14, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2938, file: !3, line: 2333, column: 13)
!2943 = !DILocation(line: 2330, column: 8, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2938, file: !3, line: 2329, column: 6)
!2945 = !DILocation(line: 2331, column: 8, scope: !2944)
!2946 = !DILocation(line: 2333, column: 17, scope: !2942)
!2947 = !DILocation(line: 2333, column: 23, scope: !2942)
!2948 = !DILocation(line: 2333, column: 34, scope: !2942)
!2949 = !DILocation(line: 2333, column: 37, scope: !2942)
!2950 = !DILocation(line: 2333, column: 13, scope: !2938)
!2951 = !DILocation(line: 2338, column: 8, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2942, file: !3, line: 2337, column: 6)
!2953 = !DILocation(line: 2338, column: 11, scope: !2952)
!2954 = !DILocation(line: 2338, column: 17, scope: !2952)
!2955 = !DILocation(line: 2339, column: 8, scope: !2952)
!2956 = !DILocation(line: 2340, column: 8, scope: !2952)
!2957 = !DILocation(line: 2344, column: 4, scope: !2909)
!2958 = !DILocation(line: 2346, column: 17, scope: !2909)
!2959 = !DILocation(line: 2346, column: 4, scope: !2909)
!2960 = !DILocation(line: 2303, column: 7, scope: !2905)
!2961 = !DILocation(line: 2349, column: 11, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 2349, column: 11)
!2963 = !DILocation(line: 2349, column: 34, scope: !2962)
!2964 = !DILocation(line: 2349, column: 43, scope: !2962)
!2965 = !DILocation(line: 2349, column: 39, scope: !2962)
!2966 = !DILocation(line: 2352, column: 11, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 2352, column: 11)
!2968 = !DILocation(line: 2352, column: 11, scope: !2794)
!2969 = !DILocation(line: 2353, column: 55, scope: !2967)
!2970 = !DILocation(line: 2353, column: 2, scope: !2967)
!2971 = !DILocation(line: 2355, column: 12, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 2355, column: 11)
!2973 = !DILocation(line: 2355, column: 11, scope: !2794)
!2974 = !DILocation(line: 2359, column: 11, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 2359, column: 11)
!2976 = !DILocation(line: 2359, column: 11, scope: !2794)
!2977 = !DILocation(line: 2361, column: 4, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 2360, column: 2)
!2979 = !DILocation(line: 2361, column: 27, scope: !2978)
!2980 = !DILocation(line: 2361, column: 39, scope: !2978)
!2981 = !DILocation(line: 2362, column: 39, scope: !2978)
!2982 = !DILocation(line: 2362, column: 4, scope: !2978)
!2983 = !DILocation(line: 2362, column: 27, scope: !2978)
!2984 = !DILocation(line: 2362, column: 33, scope: !2978)
!2985 = !DILocation(line: 2363, column: 2, scope: !2978)
!2986 = !DILocation(line: 2366, column: 11, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 2365, column: 2)
!2988 = !DILocation(line: 2367, column: 9, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 2367, column: 8)
!2990 = !DILocation(line: 2367, column: 8, scope: !2987)
!2991 = !DILocation(line: 2370, column: 8, scope: !2987)
!2992 = !DILocation(line: 2371, column: 8, scope: !2987)
!2993 = !DILocation(line: 2372, column: 21, scope: !2987)
!2994 = !DILocation(line: 2372, column: 7, scope: !2987)
!2995 = !DILocation(line: 2372, column: 19, scope: !2987)
!2996 = !DILocation(line: 2373, column: 38, scope: !2987)
!2997 = !DILocation(line: 2373, column: 7, scope: !2987)
!2998 = !DILocation(line: 2373, column: 19, scope: !2987)
!2999 = !DILocation(line: 2374, column: 19, scope: !2987)
!3000 = !DILocation(line: 2374, column: 30, scope: !2987)
!3001 = !DILocation(line: 2374, column: 27, scope: !2987)
!3002 = !DILocation(line: 2374, column: 25, scope: !2987)
!3003 = !DILocation(line: 2374, column: 42, scope: !2987)
!3004 = !DILocation(line: 2374, column: 7, scope: !2987)
!3005 = !DILocation(line: 2374, column: 13, scope: !2987)
!3006 = !DILocation(line: 2375, column: 19, scope: !2987)
!3007 = !DILocation(line: 2375, column: 30, scope: !2987)
!3008 = !DILocation(line: 2375, column: 27, scope: !2987)
!3009 = !DILocation(line: 2375, column: 25, scope: !2987)
!3010 = !DILocation(line: 2375, column: 42, scope: !2987)
!3011 = !DILocation(line: 2375, column: 7, scope: !2987)
!3012 = !DILocation(line: 2375, column: 13, scope: !2987)
!3013 = !DILocation(line: 2379, column: 5, scope: !2795)
!3014 = !DILocation(line: 2380, column: 12, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 2380, column: 12)
!3016 = !DILocation(line: 2380, column: 26, scope: !3015)
!3017 = !DILocation(line: 2380, column: 29, scope: !3015)
!3018 = !DILocation(line: 2380, column: 12, scope: !2795)
!3019 = !DILocation(line: 2386, column: 7, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3015, file: !3, line: 2381, column: 5)
!3021 = !DILocation(line: 2387, column: 7, scope: !3020)
!3022 = !DILocation(line: 2399, column: 3, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 2399, column: 3)
!3024 = !DILocation(line: 2399, column: 3, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 2399, column: 3)
!3026 = !DILocation(line: 2400, column: 12, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 2400, column: 9)
!3028 = !DILocation(line: 2400, column: 15, scope: !3027)
!3029 = !DILocation(line: 2400, column: 21, scope: !3027)
!3030 = !DILocation(line: 2400, column: 9, scope: !3025)
!3031 = distinct !{!3031, !3022, !3032}
!3032 = !DILocation(line: 2404, column: 7, scope: !3023)
!3033 = !DILocation(line: 2406, column: 7, scope: !2777)
!3034 = !DILocation(line: 2412, column: 13, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 2412, column: 3)
!3036 = !DILocation(line: 2412, column: 8, scope: !3035)
!3037 = !DILocation(line: 2227, column: 8, scope: !2777)
!3038 = !DILocation(line: 2412, column: 40, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 2412, column: 3)
!3040 = !DILocation(line: 2412, column: 38, scope: !3039)
!3041 = !DILocation(line: 2412, column: 3, scope: !3035)
!3042 = !DILocation(line: 2414, column: 16, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 2414, column: 11)
!3044 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 2413, column: 5)
!3045 = !DILocation(line: 2414, column: 22, scope: !3043)
!3046 = !DILocation(line: 2414, column: 11, scope: !3044)
!3047 = !DILocation(line: 2416, column: 4, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 2415, column: 2)
!3049 = !DILocation(line: 2417, column: 17, scope: !3048)
!3050 = !DILocation(line: 2417, column: 4, scope: !3048)
!3051 = !DILocation(line: 2419, column: 2, scope: !3048)
!3052 = !DILocation(line: 2421, column: 2, scope: !3043)
!3053 = !DILocation(line: 2412, column: 3, scope: !3039)
!3054 = distinct !{!3054, !3041, !3055}
!3055 = !DILocation(line: 2422, column: 5, scope: !3035)
!3056 = !DILocation(line: 2424, column: 3, scope: !2777)
!3057 = !DILocation(line: 2426, column: 3, scope: !2777)
!3058 = !DILocation(line: 2426, column: 26, scope: !2777)
!3059 = !DILocation(line: 2426, column: 38, scope: !2777)
!3060 = !DILocation(line: 2427, column: 38, scope: !2777)
!3061 = !DILocation(line: 2427, column: 3, scope: !2777)
!3062 = !DILocation(line: 2427, column: 26, scope: !2777)
!3063 = !DILocation(line: 2427, column: 32, scope: !2777)
!3064 = !DILocation(line: 2429, column: 7, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 2429, column: 7)
!3066 = !DILocation(line: 2429, column: 7, scope: !2777)
!3067 = !DILocation(line: 2431, column: 11, scope: !3065)
!3068 = !DILocation(line: 2430, column: 5, scope: !3065)
!3069 = !DILocation(line: 2433, column: 1, scope: !2777)
!3070 = distinct !DISubprogram(name: "delete_insn_chain", scope: !3, file: !3, line: 218, type: !3071, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3073)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{null, !820, !820, !1019}
!3073 = !{!3074, !3075, !3076, !3077}
!3074 = !DILocalVariable(name: "start", arg: 1, scope: !3070, file: !3, line: 218, type: !820)
!3075 = !DILocalVariable(name: "finish", arg: 2, scope: !3070, file: !3, line: 218, type: !820)
!3076 = !DILocalVariable(name: "clear_bb", arg: 3, scope: !3070, file: !3, line: 218, type: !1019)
!3077 = !DILocalVariable(name: "next", scope: !3070, file: !3, line: 220, type: !820)
!3078 = !DILocation(line: 0, scope: !3070)
!3079 = !DILocation(line: 0, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 233, column: 11)
!3081 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 226, column: 5)
!3082 = !DILocation(line: 225, column: 3, scope: !3070)
!3083 = !DILocation(line: 228, column: 11, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 228, column: 11)
!3085 = !DILocation(line: 228, column: 26, scope: !3084)
!3086 = !DILocation(line: 227, column: 14, scope: !3081)
!3087 = !DILocation(line: 228, column: 30, scope: !3084)
!3088 = !DILocation(line: 228, column: 11, scope: !3081)
!3089 = !DILocation(line: 231, column: 9, scope: !3084)
!3090 = !DILocation(line: 0, scope: !3081)
!3091 = !DILocation(line: 236, column: 17, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 236, column: 11)
!3093 = !DILocation(line: 236, column: 11, scope: !3081)
!3094 = distinct !{!3094, !3082, !3095}
!3095 = !DILocation(line: 239, column: 5, scope: !3070)
!3096 = !DILocation(line: 240, column: 1, scope: !3070)
!3097 = !DILocation(line: 233, column: 24, scope: !3080)
!3098 = !DILocation(line: 233, column: 11, scope: !3081)
!3099 = !DILocation(line: 234, column: 2, scope: !3080)
!3100 = distinct !DISubprogram(name: "can_delete_note_p", scope: !3, file: !3, line: 87, type: !2743, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3101)
!3101 = !{!3102}
!3102 = !DILocalVariable(name: "note", arg: 1, scope: !3100, file: !3, line: 87, type: !790)
!3103 = !DILocation(line: 0, scope: !3100)
!3104 = !DILocation(line: 89, column: 11, scope: !3100)
!3105 = !DILocation(line: 89, column: 3, scope: !3100)
!3106 = !DILocation(line: 97, column: 7, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 90, column: 5)
!3108 = !DILocation(line: 0, scope: !3107)
!3109 = !DILocation(line: 99, column: 1, scope: !3100)
!3110 = distinct !DISubprogram(name: "create_basic_block_structure", scope: !3, file: !3, line: 251, type: !3111, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3113)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{!1323, !820, !820, !820, !1323}
!3113 = !{!3114, !3115, !3116, !3117, !3118, !3119, !3122}
!3114 = !DILocalVariable(name: "head", arg: 1, scope: !3110, file: !3, line: 251, type: !820)
!3115 = !DILocalVariable(name: "end", arg: 2, scope: !3110, file: !3, line: 251, type: !820)
!3116 = !DILocalVariable(name: "bb_note", arg: 3, scope: !3110, file: !3, line: 251, type: !820)
!3117 = !DILocalVariable(name: "after", arg: 4, scope: !3110, file: !3, line: 251, type: !1323)
!3118 = !DILocalVariable(name: "bb", scope: !3110, file: !3, line: 253, type: !1323)
!3119 = !DILocalVariable(name: "after", scope: !3120, file: !3, line: 261, type: !820)
!3120 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 258, column: 5)
!3121 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 255, column: 7)
!3122 = !DILocalVariable(name: "bb_", scope: !3123, file: !3, line: 313, type: !1323)
!3123 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 313, column: 3)
!3124 = !DILocation(line: 0, scope: !3110)
!3125 = !DILocation(line: 255, column: 7, scope: !3121)
!3126 = !DILocation(line: 256, column: 7, scope: !3121)
!3127 = !DILocation(line: 256, column: 16, scope: !3121)
!3128 = !DILocation(line: 256, column: 44, scope: !3121)
!3129 = !DILocation(line: 257, column: 7, scope: !3121)
!3130 = !DILocation(line: 257, column: 14, scope: !3121)
!3131 = !DILocation(line: 257, column: 18, scope: !3121)
!3132 = !DILocation(line: 255, column: 7, scope: !3110)
!3133 = !DILocation(line: 263, column: 11, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3120, file: !3, line: 263, column: 11)
!3135 = !DILocation(line: 263, column: 11, scope: !3120)
!3136 = !DILocation(line: 267, column: 12, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 266, column: 2)
!3138 = !DILocation(line: 0, scope: !3120)
!3139 = !DILocation(line: 0, scope: !3134)
!3140 = !DILocation(line: 271, column: 17, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3120, file: !3, line: 271, column: 11)
!3142 = !DILocation(line: 271, column: 28, scope: !3141)
!3143 = !DILocation(line: 271, column: 31, scope: !3141)
!3144 = !DILocation(line: 271, column: 49, scope: !3141)
!3145 = !DILocation(line: 271, column: 11, scope: !3120)
!3146 = !DILocation(line: 272, column: 2, scope: !3141)
!3147 = !DILocation(line: 278, column: 12, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 275, column: 5)
!3149 = !DILocation(line: 280, column: 7, scope: !3148)
!3150 = !DILocation(line: 281, column: 12, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3148, file: !3, line: 281, column: 11)
!3152 = !DILocation(line: 281, column: 21, scope: !3151)
!3153 = !DILocation(line: 281, column: 17, scope: !3151)
!3154 = !DILocation(line: 283, column: 46, scope: !3151)
!3155 = !DILocation(line: 283, column: 6, scope: !3151)
!3156 = !DILocation(line: 282, column: 2, scope: !3151)
!3157 = !DILocation(line: 284, column: 16, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 284, column: 16)
!3159 = !DILocation(line: 284, column: 31, scope: !3158)
!3160 = !DILocation(line: 286, column: 14, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 285, column: 2)
!3162 = !DILocation(line: 287, column: 13, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3161, file: !3, line: 287, column: 8)
!3164 = !DILocation(line: 287, column: 8, scope: !3161)
!3165 = !DILocation(line: 289, column: 2, scope: !3161)
!3166 = !DILocation(line: 292, column: 14, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 291, column: 2)
!3168 = !DILocation(line: 294, column: 9, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 294, column: 8)
!3170 = !DILocation(line: 294, column: 8, scope: !3167)
!3171 = !DILocation(line: 0, scope: !3151)
!3172 = !DILocation(line: 298, column: 7, scope: !3148)
!3173 = !DILocation(line: 298, column: 34, scope: !3148)
!3174 = !DILocation(line: 0, scope: !3121)
!3175 = !DILocation(line: 302, column: 7, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 302, column: 7)
!3177 = !DILocation(line: 302, column: 23, scope: !3176)
!3178 = !DILocation(line: 302, column: 7, scope: !3110)
!3179 = !DILocation(line: 305, column: 3, scope: !3110)
!3180 = !DILocation(line: 305, column: 16, scope: !3110)
!3181 = !DILocation(line: 306, column: 3, scope: !3110)
!3182 = !DILocation(line: 306, column: 15, scope: !3110)
!3183 = !DILocation(line: 307, column: 15, scope: !3110)
!3184 = !DILocation(line: 307, column: 31, scope: !3110)
!3185 = !DILocation(line: 307, column: 7, scope: !3110)
!3186 = !DILocation(line: 307, column: 13, scope: !3110)
!3187 = !DILocation(line: 308, column: 7, scope: !3110)
!3188 = !DILocation(line: 308, column: 13, scope: !3110)
!3189 = !DILocation(line: 309, column: 3, scope: !3110)
!3190 = !DILocation(line: 310, column: 3, scope: !3110)
!3191 = !DILocation(line: 311, column: 26, scope: !3110)
!3192 = !DILocation(line: 311, column: 3, scope: !3110)
!3193 = !DILocation(line: 312, column: 3, scope: !3110)
!3194 = !DILocation(line: 0, scope: !3123)
!3195 = !DILocation(line: 313, column: 3, scope: !3123)
!3196 = !DILocation(line: 317, column: 7, scope: !3110)
!3197 = !DILocation(line: 317, column: 11, scope: !3110)
!3198 = !DILocation(line: 319, column: 3, scope: !3110)
!3199 = distinct !DISubprogram(name: "init_rtl_bb_info", scope: !3, file: !3, line: 3062, type: !2128, scopeLine: 3063, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3200)
!3200 = !{!3201}
!3201 = !DILocalVariable(name: "bb", arg: 1, scope: !3199, file: !3, line: 3062, type: !1323)
!3202 = !DILocation(line: 0, scope: !3199)
!3203 = !DILocation(line: 3064, column: 3, scope: !3199)
!3204 = !DILocation(line: 3065, column: 16, scope: !3199)
!3205 = !DILocation(line: 3065, column: 14, scope: !3199)
!3206 = !DILocation(line: 3066, column: 1, scope: !3199)
!3207 = distinct !DISubprogram(name: "VEC_basic_block_base_replace", scope: !155, file: !155, line: 281, type: !3208, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3211)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{!1323, !3210, !7, !1323}
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!3211 = !{!3212, !3213, !3214, !3215}
!3212 = !DILocalVariable(name: "vec_", arg: 1, scope: !3207, file: !155, line: 281, type: !3210)
!3213 = !DILocalVariable(name: "ix_", arg: 2, scope: !3207, file: !155, line: 281, type: !7)
!3214 = !DILocalVariable(name: "obj_", arg: 3, scope: !3207, file: !155, line: 281, type: !1323)
!3215 = !DILocalVariable(name: "old_obj_", scope: !3207, file: !155, line: 281, type: !1323)
!3216 = !DILocation(line: 0, scope: !3207)
!3217 = !DILocation(line: 281, column: 1, scope: !3207)
!3218 = distinct !DISubprogram(name: "update_bb_for_insn", scope: !3, file: !3, line: 492, type: !2128, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3219)
!3219 = !{!3220}
!3220 = !DILocalVariable(name: "bb", arg: 1, scope: !3218, file: !3, line: 492, type: !1323)
!3221 = !DILocation(line: 0, scope: !3218)
!3222 = !DILocation(line: 494, column: 29, scope: !3218)
!3223 = !DILocation(line: 494, column: 43, scope: !3218)
!3224 = !DILocation(line: 494, column: 3, scope: !3218)
!3225 = !DILocation(line: 495, column: 1, scope: !3218)
!3226 = distinct !DISubprogram(name: "compute_bb_for_insn", scope: !3, file: !3, line: 388, type: !3227, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3229)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{null}
!3229 = !{!3230, !3231, !3235}
!3230 = !DILocalVariable(name: "bb", scope: !3226, file: !3, line: 390, type: !1323)
!3231 = !DILocalVariable(name: "end", scope: !3232, file: !3, line: 394, type: !820)
!3232 = distinct !DILexicalBlock(scope: !3233, file: !3, line: 393, column: 5)
!3233 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 392, column: 3)
!3234 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 392, column: 3)
!3235 = !DILocalVariable(name: "insn", scope: !3232, file: !3, line: 395, type: !820)
!3236 = !DILocation(line: 392, column: 3, scope: !3234)
!3237 = !DILocation(line: 392, column: 3, scope: !3233)
!3238 = !DILocation(line: 0, scope: !3234)
!3239 = !DILocation(line: 0, scope: !3226)
!3240 = !DILocation(line: 394, column: 17, scope: !3232)
!3241 = !DILocation(line: 0, scope: !3232)
!3242 = !DILocation(line: 397, column: 19, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 397, column: 7)
!3244 = !DILocation(line: 397, column: 12, scope: !3243)
!3245 = !DILocation(line: 0, scope: !3243)
!3246 = !DILocation(line: 399, column: 4, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 398, column: 2)
!3248 = distinct !DILexicalBlock(scope: !3243, file: !3, line: 397, column: 7)
!3249 = !DILocation(line: 399, column: 26, scope: !3247)
!3250 = !DILocation(line: 400, column: 13, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 400, column: 8)
!3252 = !DILocation(line: 400, column: 8, scope: !3247)
!3253 = !DILocation(line: 397, column: 42, scope: !3248)
!3254 = !DILocation(line: 397, column: 7, scope: !3248)
!3255 = distinct !{!3255, !3256, !3257}
!3256 = !DILocation(line: 397, column: 7, scope: !3243)
!3257 = !DILocation(line: 402, column: 2, scope: !3243)
!3258 = distinct !{!3258, !3236, !3259}
!3259 = !DILocation(line: 403, column: 5, scope: !3234)
!3260 = !DILocation(line: 404, column: 1, scope: !3226)
!3261 = distinct !DISubprogram(name: "free_bb_for_insn", scope: !3, file: !3, line: 409, type: !2231, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3262)
!3262 = !{!3263}
!3263 = !DILocalVariable(name: "insn", scope: !3261, file: !3, line: 411, type: !820)
!3264 = !DILocation(line: 412, column: 15, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 412, column: 3)
!3266 = !DILocation(line: 0, scope: !3261)
!3267 = !DILocation(line: 412, column: 8, scope: !3265)
!3268 = !DILocation(line: 0, scope: !3265)
!3269 = !DILocation(line: 412, column: 3, scope: !3265)
!3270 = !DILocation(line: 413, column: 10, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 413, column: 9)
!3272 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 412, column: 3)
!3273 = !DILocation(line: 413, column: 9, scope: !3272)
!3274 = !DILocation(line: 414, column: 7, scope: !3271)
!3275 = !DILocation(line: 414, column: 29, scope: !3271)
!3276 = !DILocation(line: 412, column: 42, scope: !3272)
!3277 = !DILocation(line: 412, column: 3, scope: !3272)
!3278 = distinct !{!3278, !3269, !3279}
!3279 = !DILocation(line: 414, column: 31, scope: !3265)
!3280 = !DILocation(line: 415, column: 3, scope: !3261)
!3281 = distinct !DISubprogram(name: "rest_of_pass_free_cfg", scope: !3, file: !3, line: 419, type: !2231, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2268)
!3282 = !DILocation(line: 428, column: 3, scope: !3281)
!3283 = !DILocation(line: 429, column: 3, scope: !3281)
!3284 = distinct !DISubprogram(name: "entry_of_function", scope: !3, file: !3, line: 453, type: !3285, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2268)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{!820}
!3287 = !DILocation(line: 455, column: 11, scope: !3284)
!3288 = !DILocation(line: 455, column: 26, scope: !3284)
!3289 = !DILocation(line: 456, column: 4, scope: !3284)
!3290 = !DILocation(line: 456, column: 41, scope: !3284)
!3291 = !DILocation(line: 455, column: 3, scope: !3284)
!3292 = distinct !DISubprogram(name: "emit_insn_at_entry", scope: !3, file: !3, line: 462, type: !3293, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3295)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{null, !820}
!3295 = !{!3296, !3297, !3298}
!3296 = !DILocalVariable(name: "insn", arg: 1, scope: !3292, file: !3, line: 462, type: !820)
!3297 = !DILocalVariable(name: "ei", scope: !3292, file: !3, line: 464, type: !2043)
!3298 = !DILocalVariable(name: "e", scope: !3292, file: !3, line: 465, type: !1340)
!3299 = !DILocation(line: 0, scope: !3292)
!3300 = !DILocation(line: 464, column: 22, scope: !3292)
!3301 = !DILocation(line: 465, column: 12, scope: !3292)
!3302 = !DILocation(line: 466, column: 3, scope: !3292)
!3303 = !DILocation(line: 468, column: 3, scope: !3292)
!3304 = !DILocation(line: 469, column: 3, scope: !3292)
!3305 = !DILocation(line: 470, column: 1, scope: !3292)
!3306 = distinct !DISubprogram(name: "ei_start_1", scope: !155, file: !155, line: 696, type: !3307, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3309)
!3307 = !DISubroutineType(types: !3308)
!3308 = !{!2043, !2048}
!3309 = !{!3310, !3311}
!3310 = !DILocalVariable(name: "ev", arg: 1, scope: !3306, file: !155, line: 696, type: !2048)
!3311 = !DILocalVariable(name: "i", scope: !3306, file: !155, line: 698, type: !2043)
!3312 = !DILocation(line: 0, scope: !3306)
!3313 = !DILocation(line: 700, column: 5, scope: !3306)
!3314 = !DILocation(line: 700, column: 11, scope: !3306)
!3315 = !DILocation(line: 701, column: 5, scope: !3306)
!3316 = !DILocation(line: 701, column: 15, scope: !3306)
!3317 = !DILocation(line: 703, column: 3, scope: !3306)
!3318 = distinct !DISubprogram(name: "ei_safe_edge", scope: !155, file: !155, line: 761, type: !3319, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3321)
!3319 = !DISubroutineType(types: !3320)
!3320 = !{!1340, !2043}
!3321 = !{!3322}
!3322 = !DILocalVariable(name: "i", arg: 1, scope: !3318, file: !155, line: 761, type: !2043)
!3323 = !DILocation(line: 763, column: 11, scope: !3318)
!3324 = !DILocation(line: 763, column: 10, scope: !3318)
!3325 = !DILocation(line: 763, column: 26, scope: !3318)
!3326 = !DILocation(line: 763, column: 3, scope: !3318)
!3327 = distinct !DISubprogram(name: "insert_insn_on_edge", scope: !3, file: !3, line: 1420, type: !3328, scopeLine: 1421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3330)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null, !820, !1340}
!3330 = !{!3331, !3332}
!3331 = !DILocalVariable(name: "pattern", arg: 1, scope: !3327, file: !3, line: 1420, type: !820)
!3332 = !DILocalVariable(name: "e", arg: 2, scope: !3327, file: !3, line: 1420, type: !1340)
!3333 = !DILocation(line: 0, scope: !3327)
!3334 = !DILocation(line: 1424, column: 3, scope: !3327)
!3335 = !DILocation(line: 1426, column: 10, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 1426, column: 7)
!3337 = !DILocation(line: 1426, column: 16, scope: !3336)
!3338 = !DILocation(line: 1426, column: 18, scope: !3336)
!3339 = !DILocation(line: 1426, column: 7, scope: !3327)
!3340 = !DILocation(line: 1427, column: 5, scope: !3336)
!3341 = !DILocation(line: 1429, column: 5, scope: !3336)
!3342 = !DILocation(line: 1431, column: 3, scope: !3327)
!3343 = !DILocation(line: 1433, column: 16, scope: !3327)
!3344 = !DILocation(line: 1433, column: 14, scope: !3327)
!3345 = !DILocation(line: 1434, column: 3, scope: !3327)
!3346 = !DILocation(line: 1435, column: 1, scope: !3327)
!3347 = distinct !DISubprogram(name: "commit_edge_insertions", scope: !3, file: !3, line: 1553, type: !3227, scopeLine: 1554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3348)
!3348 = !{!3349, !3350, !3351, !3352, !3356}
!3349 = !DILocalVariable(name: "bb", scope: !3347, file: !3, line: 1555, type: !1323)
!3350 = !DILocalVariable(name: "blocks", scope: !3347, file: !3, line: 1556, type: !2180)
!3351 = !DILocalVariable(name: "changed", scope: !3347, file: !3, line: 1557, type: !1019)
!3352 = !DILocalVariable(name: "e", scope: !3353, file: !3, line: 1565, type: !1340)
!3353 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 1564, column: 5)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 1563, column: 3)
!3355 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 1563, column: 3)
!3356 = !DILocalVariable(name: "ei", scope: !3353, file: !3, line: 1566, type: !2043)
!3357 = !DILocation(line: 0, scope: !3347)
!3358 = !DILocation(line: 1563, column: 3, scope: !3355)
!3359 = !DILocation(line: 0, scope: !3353)
!3360 = !DILocation(line: 0, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3353, file: !3, line: 1568, column: 7)
!3362 = !DILocation(line: 0, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 1568, column: 7)
!3364 = !DILocation(line: 1563, column: 3, scope: !3354)
!3365 = !DILocation(line: 1557, column: 8, scope: !3347)
!3366 = !DILocation(line: 0, scope: !3355)
!3367 = !DILocation(line: 1565, column: 7, scope: !3353)
!3368 = !DILocation(line: 1566, column: 7, scope: !3353)
!3369 = !DILocation(line: 1568, column: 7, scope: !3361)
!3370 = !DILocation(line: 1568, column: 7, scope: !3363)
!3371 = !DILocation(line: 1569, column: 6, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3363, file: !3, line: 1569, column: 6)
!3373 = !DILocation(line: 1569, column: 9, scope: !3372)
!3374 = !DILocation(line: 1569, column: 15, scope: !3372)
!3375 = !DILocation(line: 1569, column: 6, scope: !3363)
!3376 = !DILocation(line: 1572, column: 6, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 1570, column: 4)
!3378 = !DILocation(line: 1573, column: 4, scope: !3377)
!3379 = distinct !{!3379, !3369, !3380}
!3380 = !DILocation(line: 1573, column: 4, scope: !3361)
!3381 = !DILocation(line: 1574, column: 5, scope: !3354)
!3382 = !DILocation(line: 0, scope: !3354)
!3383 = distinct !{!3383, !3358, !3384}
!3384 = !DILocation(line: 1574, column: 5, scope: !3355)
!3385 = !DILocation(line: 1576, column: 8, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 1576, column: 7)
!3387 = !DILocation(line: 1576, column: 7, scope: !3347)
!3388 = !DILocation(line: 1583, column: 7, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 1583, column: 7)
!3390 = !DILocation(line: 1583, column: 26, scope: !3389)
!3391 = !DILocation(line: 1583, column: 7, scope: !3347)
!3392 = !DILocation(line: 1586, column: 27, scope: !3347)
!3393 = !DILocation(line: 1586, column: 12, scope: !3347)
!3394 = !DILocation(line: 1587, column: 3, scope: !3347)
!3395 = !DILocation(line: 1588, column: 3, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 1588, column: 3)
!3397 = !DILocation(line: 1588, column: 3, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 1588, column: 3)
!3399 = !DILocation(line: 0, scope: !3396)
!3400 = !DILocation(line: 1589, column: 13, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 1589, column: 9)
!3402 = !DILocation(line: 1589, column: 9, scope: !3401)
!3403 = !DILocation(line: 1589, column: 9, scope: !3398)
!3404 = !DILocation(line: 1591, column: 23, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 1590, column: 7)
!3406 = !DILocation(line: 1591, column: 2, scope: !3405)
!3407 = !DILocation(line: 1594, column: 2, scope: !3405)
!3408 = !DILocation(line: 1595, column: 10, scope: !3405)
!3409 = !DILocation(line: 1596, column: 7, scope: !3405)
!3410 = !DILocation(line: 0, scope: !3398)
!3411 = distinct !{!3411, !3395, !3412}
!3412 = !DILocation(line: 1596, column: 7, scope: !3396)
!3413 = !DILocation(line: 1597, column: 3, scope: !3347)
!3414 = !DILocation(line: 1598, column: 3, scope: !3347)
!3415 = !DILocation(line: 1599, column: 1, scope: !3347)
!3416 = distinct !DISubprogram(name: "update_bb_for_insn_chain", scope: !3, file: !3, line: 478, type: !3417, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3419)
!3417 = !DISubroutineType(types: !3418)
!3418 = !{null, !820, !820, !1323}
!3419 = !{!3420, !3421, !3422, !3423}
!3420 = !DILocalVariable(name: "begin", arg: 1, scope: !3416, file: !3, line: 478, type: !820)
!3421 = !DILocalVariable(name: "end", arg: 2, scope: !3416, file: !3, line: 478, type: !820)
!3422 = !DILocalVariable(name: "bb", arg: 3, scope: !3416, file: !3, line: 478, type: !1323)
!3423 = !DILocalVariable(name: "insn", scope: !3416, file: !3, line: 480, type: !820)
!3424 = !DILocation(line: 0, scope: !3416)
!3425 = !DILocation(line: 482, column: 9, scope: !3416)
!3426 = !DILocation(line: 483, column: 8, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3416, file: !3, line: 483, column: 3)
!3428 = !DILocation(line: 0, scope: !3427)
!3429 = !DILocation(line: 483, column: 27, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 483, column: 3)
!3431 = !DILocation(line: 483, column: 3, scope: !3427)
!3432 = !DILocation(line: 484, column: 10, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3430, file: !3, line: 484, column: 9)
!3434 = !DILocation(line: 484, column: 9, scope: !3430)
!3435 = !DILocation(line: 485, column: 7, scope: !3433)
!3436 = !DILocation(line: 483, column: 42, scope: !3430)
!3437 = !DILocation(line: 483, column: 3, scope: !3430)
!3438 = distinct !{!3438, !3431, !3439}
!3439 = !DILocation(line: 485, column: 34, scope: !3427)
!3440 = !DILocation(line: 486, column: 1, scope: !3416)
!3441 = distinct !DISubprogram(name: "block_label", scope: !3, file: !3, line: 722, type: !3442, scopeLine: 723, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3444)
!3442 = !DISubroutineType(types: !3443)
!3443 = !{!820, !1323}
!3444 = !{!3445}
!3445 = !DILocalVariable(name: "block", arg: 1, scope: !3441, file: !3, line: 722, type: !1323)
!3446 = !DILocation(line: 0, scope: !3441)
!3447 = !DILocation(line: 724, column: 16, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 724, column: 7)
!3449 = !DILocation(line: 724, column: 13, scope: !3448)
!3450 = !DILocation(line: 724, column: 7, scope: !3441)
!3451 = !DILocation(line: 727, column: 8, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 727, column: 7)
!3453 = !DILocation(line: 727, column: 7, scope: !3441)
!3454 = !DILocation(line: 729, column: 44, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 728, column: 5)
!3456 = !DILocation(line: 729, column: 62, scope: !3455)
!3457 = !DILocation(line: 729, column: 25, scope: !3455)
!3458 = !DILocation(line: 729, column: 7, scope: !3455)
!3459 = !DILocation(line: 729, column: 23, scope: !3455)
!3460 = !DILocation(line: 732, column: 10, scope: !3441)
!3461 = !DILocation(line: 730, column: 5, scope: !3455)
!3462 = !DILocation(line: 732, column: 3, scope: !3441)
!3463 = !DILocation(line: 733, column: 1, scope: !3441)
!3464 = distinct !DISubprogram(name: "try_redirect_by_replacing_jump", scope: !3, file: !3, line: 741, type: !3465, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3467)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{!1340, !1340, !1323, !1019}
!3467 = !{!3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3481, !3485, !3486, !3487, !3488}
!3468 = !DILocalVariable(name: "e", arg: 1, scope: !3464, file: !3, line: 741, type: !1340)
!3469 = !DILocalVariable(name: "target", arg: 2, scope: !3464, file: !3, line: 741, type: !1323)
!3470 = !DILocalVariable(name: "in_cfglayout", arg: 3, scope: !3464, file: !3, line: 741, type: !1019)
!3471 = !DILocalVariable(name: "src", scope: !3464, file: !3, line: 743, type: !1323)
!3472 = !DILocalVariable(name: "insn", scope: !3464, file: !3, line: 744, type: !820)
!3473 = !DILocalVariable(name: "kill_from", scope: !3464, file: !3, line: 744, type: !820)
!3474 = !DILocalVariable(name: "set", scope: !3464, file: !3, line: 745, type: !820)
!3475 = !DILocalVariable(name: "fallthru", scope: !3464, file: !3, line: 746, type: !734)
!3476 = !DILocalVariable(name: "insn", scope: !3477, file: !3, line: 801, type: !820)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 800, column: 2)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 799, column: 11)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 793, column: 5)
!3480 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 792, column: 7)
!3481 = !DILocalVariable(name: "target_label", scope: !3482, file: !3, line: 849, type: !820)
!3482 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 848, column: 5)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !3, line: 843, column: 12)
!3484 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 828, column: 12)
!3485 = !DILocalVariable(name: "barrier", scope: !3482, file: !3, line: 850, type: !820)
!3486 = !DILocalVariable(name: "label", scope: !3482, file: !3, line: 850, type: !820)
!3487 = !DILocalVariable(name: "table", scope: !3482, file: !3, line: 850, type: !820)
!3488 = !DILocalVariable(name: "new_insn", scope: !3489, file: !3, line: 878, type: !820)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 874, column: 6)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 873, column: 8)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 872, column: 2)
!3492 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 869, column: 11)
!3493 = !DILocation(line: 0, scope: !3464)
!3494 = !DILocation(line: 743, column: 24, scope: !3464)
!3495 = !DILocation(line: 744, column: 14, scope: !3464)
!3496 = !DILocation(line: 758, column: 7, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 758, column: 7)
!3498 = !DILocation(line: 759, column: 7, scope: !3497)
!3499 = !DILocation(line: 759, column: 10, scope: !3497)
!3500 = !DILocation(line: 759, column: 32, scope: !3497)
!3501 = !DILocation(line: 759, column: 29, scope: !3497)
!3502 = !DILocation(line: 758, column: 7, scope: !3464)
!3503 = !DILocation(line: 765, column: 7, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 765, column: 7)
!3505 = !DILocation(line: 765, column: 31, scope: !3504)
!3506 = !DILocation(line: 768, column: 7, scope: !3504)
!3507 = !DILocation(line: 768, column: 11, scope: !3504)
!3508 = !DILocation(line: 768, column: 35, scope: !3504)
!3509 = !DILocation(line: 769, column: 4, scope: !3504)
!3510 = !DILocation(line: 769, column: 7, scope: !3504)
!3511 = !DILocation(line: 769, column: 49, scope: !3504)
!3512 = !DILocation(line: 769, column: 54, scope: !3504)
!3513 = !DILocation(line: 765, column: 7, scope: !3464)
!3514 = !DILocation(line: 772, column: 8, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 772, column: 7)
!3516 = !DILocation(line: 772, column: 7, scope: !3464)
!3517 = !DILocation(line: 774, column: 9, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 774, column: 7)
!3519 = !DILocation(line: 774, column: 21, scope: !3518)
!3520 = !DILocation(line: 774, column: 18, scope: !3518)
!3521 = !DILocation(line: 774, column: 42, scope: !3518)
!3522 = !DILocation(line: 774, column: 7, scope: !3464)
!3523 = !DILocation(line: 778, column: 9, scope: !3464)
!3524 = !DILocation(line: 779, column: 8, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 779, column: 7)
!3526 = !DILocation(line: 779, column: 12, scope: !3525)
!3527 = !DILocation(line: 779, column: 15, scope: !3525)
!3528 = !DILocation(line: 779, column: 7, scope: !3464)
!3529 = !DILocation(line: 792, column: 7, scope: !3480)
!3530 = !DILocation(line: 792, column: 20, scope: !3480)
!3531 = !DILocation(line: 792, column: 23, scope: !3480)
!3532 = !DILocation(line: 792, column: 7, scope: !3464)
!3533 = !DILocation(line: 794, column: 11, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 794, column: 11)
!3535 = !DILocation(line: 794, column: 11, scope: !3479)
!3536 = !DILocation(line: 795, column: 45, scope: !3534)
!3537 = !DILocation(line: 795, column: 2, scope: !3534)
!3538 = !DILocation(line: 799, column: 11, scope: !3479)
!3539 = !DILocation(line: 801, column: 23, scope: !3477)
!3540 = !DILocation(line: 801, column: 28, scope: !3477)
!3541 = !DILocation(line: 0, scope: !3477)
!3542 = !DILocation(line: 803, column: 34, scope: !3477)
!3543 = !DILocation(line: 803, column: 4, scope: !3477)
!3544 = !DILocation(line: 806, column: 4, scope: !3477)
!3545 = !DILocation(line: 808, column: 12, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 808, column: 12)
!3547 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 807, column: 6)
!3548 = !DILocation(line: 808, column: 12, scope: !3547)
!3549 = !DILocation(line: 810, column: 9, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 810, column: 9)
!3551 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 809, column: 3)
!3552 = !DILocation(line: 0, scope: !3550)
!3553 = !DILocation(line: 810, column: 9, scope: !3551)
!3554 = !DILocation(line: 811, column: 7, scope: !3550)
!3555 = !DILocation(line: 811, column: 36, scope: !3550)
!3556 = !DILocation(line: 813, column: 15, scope: !3550)
!3557 = !DILocation(line: 813, column: 20, scope: !3550)
!3558 = !DILocation(line: 813, column: 27, scope: !3550)
!3559 = !DILocation(line: 814, column: 9, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 814, column: 9)
!3561 = !DILocation(line: 814, column: 9, scope: !3551)
!3562 = !DILocation(line: 815, column: 38, scope: !3560)
!3563 = !DILocation(line: 815, column: 7, scope: !3560)
!3564 = !DILocation(line: 815, column: 36, scope: !3560)
!3565 = !DILocation(line: 817, column: 12, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 817, column: 12)
!3567 = !DILocation(line: 817, column: 12, scope: !3547)
!3568 = !DILocation(line: 819, column: 15, scope: !3547)
!3569 = distinct !{!3569, !3544, !3570}
!3570 = !DILocation(line: 820, column: 6, scope: !3477)
!3571 = !DILocation(line: 823, column: 32, scope: !3478)
!3572 = !DILocation(line: 823, column: 2, scope: !3478)
!3573 = !DILocation(line: 828, column: 12, scope: !3484)
!3574 = !DILocation(line: 828, column: 12, scope: !3480)
!3575 = !DILocation(line: 830, column: 14, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 830, column: 11)
!3577 = distinct !DILexicalBlock(scope: !3484, file: !3, line: 829, column: 5)
!3578 = !DILocation(line: 830, column: 19, scope: !3576)
!3579 = !DILocation(line: 830, column: 11, scope: !3577)
!3580 = !DILocation(line: 832, column: 11, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 832, column: 11)
!3582 = !DILocation(line: 832, column: 11, scope: !3577)
!3583 = !DILocation(line: 834, column: 4, scope: !3581)
!3584 = !DILocation(line: 834, column: 30, scope: !3581)
!3585 = !DILocation(line: 834, column: 45, scope: !3581)
!3586 = !DILocation(line: 833, column: 2, scope: !3581)
!3587 = !DILocation(line: 835, column: 33, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 835, column: 11)
!3589 = !DILocation(line: 835, column: 12, scope: !3588)
!3590 = !DILocation(line: 835, column: 11, scope: !3577)
!3591 = !DILocation(line: 837, column: 4, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3588, file: !3, line: 836, column: 2)
!3593 = !DILocation(line: 843, column: 22, scope: !3483)
!3594 = !DILocation(line: 843, column: 19, scope: !3483)
!3595 = !DILocation(line: 843, column: 12, scope: !3484)
!3596 = !DILocation(line: 849, column: 26, scope: !3482)
!3597 = !DILocation(line: 0, scope: !3482)
!3598 = !DILocation(line: 850, column: 7, scope: !3482)
!3599 = !DILocation(line: 852, column: 35, scope: !3482)
!3600 = !DILocation(line: 852, column: 7, scope: !3482)
!3601 = !DILocation(line: 853, column: 7, scope: !3482)
!3602 = !DILocation(line: 853, column: 33, scope: !3482)
!3603 = !DILocation(line: 854, column: 7, scope: !3482)
!3604 = !DILocation(line: 854, column: 33, scope: !3482)
!3605 = !DILocation(line: 855, column: 11, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 855, column: 11)
!3607 = !DILocation(line: 855, column: 11, scope: !3482)
!3608 = !DILocation(line: 857, column: 4, scope: !3606)
!3609 = !DILocation(line: 857, column: 21, scope: !3606)
!3610 = !DILocation(line: 856, column: 2, scope: !3606)
!3611 = !DILocation(line: 860, column: 7, scope: !3482)
!3612 = !DILocation(line: 865, column: 11, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 865, column: 11)
!3614 = !DILocation(line: 865, column: 11, scope: !3482)
!3615 = !DILocation(line: 866, column: 21, scope: !3613)
!3616 = !DILocation(line: 866, column: 28, scope: !3613)
!3617 = !DILocation(line: 866, column: 2, scope: !3613)
!3618 = !DILocation(line: 868, column: 36, scope: !3482)
!3619 = !DILocation(line: 868, column: 17, scope: !3482)
!3620 = !DILocation(line: 869, column: 12, scope: !3492)
!3621 = !DILocation(line: 869, column: 20, scope: !3492)
!3622 = !DILocation(line: 869, column: 24, scope: !3492)
!3623 = !DILocation(line: 869, column: 11, scope: !3482)
!3624 = !DILocation(line: 870, column: 22, scope: !3492)
!3625 = !DILocation(line: 870, column: 2, scope: !3492)
!3626 = !DILocation(line: 873, column: 19, scope: !3490)
!3627 = !DILocation(line: 873, column: 16, scope: !3490)
!3628 = !DILocation(line: 873, column: 8, scope: !3491)
!3629 = !DILocation(line: 0, scope: !3489)
!3630 = !DILocation(line: 881, column: 13, scope: !3489)
!3631 = !DILocation(line: 880, column: 8, scope: !3489)
!3632 = !DILocation(line: 883, column: 43, scope: !3489)
!3633 = !DILocation(line: 883, column: 8, scope: !3489)
!3634 = !DILocation(line: 883, column: 41, scope: !3489)
!3635 = !DILocation(line: 884, column: 43, scope: !3489)
!3636 = !DILocation(line: 884, column: 8, scope: !3489)
!3637 = !DILocation(line: 884, column: 41, scope: !3489)
!3638 = !DILocation(line: 886, column: 29, scope: !3489)
!3639 = !DILocation(line: 887, column: 8, scope: !3489)
!3640 = !DILocation(line: 887, column: 40, scope: !3489)
!3641 = !DILocation(line: 889, column: 31, scope: !3489)
!3642 = !DILocation(line: 889, column: 29, scope: !3489)
!3643 = !DILocation(line: 890, column: 28, scope: !3489)
!3644 = !DILocation(line: 891, column: 6, scope: !3489)
!3645 = !DILocation(line: 893, column: 5, scope: !3483)
!3646 = !DILocation(line: 896, column: 8, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 896, column: 7)
!3648 = !DILocation(line: 896, column: 7, scope: !3464)
!3649 = !DILocation(line: 897, column: 5, scope: !3647)
!3650 = !DILocation(line: 898, column: 3, scope: !3464)
!3651 = !DILocation(line: 900, column: 7, scope: !3464)
!3652 = !DILocation(line: 901, column: 7, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 901, column: 7)
!3654 = !DILocation(line: 0, scope: !3653)
!3655 = !DILocation(line: 901, column: 7, scope: !3464)
!3656 = !DILocation(line: 902, column: 5, scope: !3653)
!3657 = !DILocation(line: 906, column: 6, scope: !3464)
!3658 = !DILocation(line: 906, column: 18, scope: !3464)
!3659 = !DILocation(line: 907, column: 19, scope: !3464)
!3660 = !DILocation(line: 907, column: 6, scope: !3464)
!3661 = !DILocation(line: 907, column: 12, scope: !3464)
!3662 = !DILocation(line: 909, column: 10, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 909, column: 7)
!3664 = !DILocation(line: 909, column: 15, scope: !3663)
!3665 = !DILocation(line: 909, column: 7, scope: !3464)
!3666 = !DILocation(line: 910, column: 5, scope: !3663)
!3667 = !DILocation(line: 912, column: 1, scope: !3464)
!3668 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !155, file: !155, line: 150, type: !3669, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3673)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!7, !3671}
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1333)
!3673 = !{!3674}
!3674 = !DILocalVariable(name: "vec_", arg: 1, scope: !3668, file: !155, line: 150, type: !3671)
!3675 = !DILocation(line: 0, scope: !3668)
!3676 = !DILocation(line: 150, column: 1, scope: !3668)
!3677 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !155, file: !155, line: 150, type: !3678, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3680)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{!1340, !3671, !7}
!3680 = !{!3681, !3682}
!3681 = !DILocalVariable(name: "vec_", arg: 1, scope: !3677, file: !155, line: 150, type: !3671)
!3682 = !DILocalVariable(name: "ix_", arg: 2, scope: !3677, file: !155, line: 150, type: !7)
!3683 = !DILocation(line: 0, scope: !3677)
!3684 = !DILocation(line: 150, column: 1, scope: !3677)
!3685 = distinct !DISubprogram(name: "single_succ_p", scope: !155, file: !155, line: 626, type: !2156, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3686)
!3686 = !{!3687}
!3687 = !DILocalVariable(name: "bb", arg: 1, scope: !3685, file: !155, line: 626, type: !2151)
!3688 = !DILocation(line: 0, scope: !3685)
!3689 = !DILocation(line: 628, column: 10, scope: !3685)
!3690 = !DILocation(line: 628, column: 33, scope: !3685)
!3691 = !DILocation(line: 628, column: 3, scope: !3685)
!3692 = distinct !DISubprogram(name: "single_succ_edge", scope: !155, file: !155, line: 643, type: !3693, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3695)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!1340, !2151}
!3695 = !{!3696}
!3696 = !DILocalVariable(name: "bb", arg: 1, scope: !3692, file: !155, line: 643, type: !2151)
!3697 = !DILocation(line: 0, scope: !3692)
!3698 = !DILocation(line: 645, column: 3, scope: !3692)
!3699 = !DILocation(line: 646, column: 10, scope: !3692)
!3700 = !DILocation(line: 646, column: 3, scope: !3692)
!3701 = distinct !DISubprogram(name: "force_nonfallthru", scope: !3, file: !3, line: 1268, type: !2164, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3702)
!3702 = !{!3703}
!3703 = !DILocalVariable(name: "e", arg: 1, scope: !3701, file: !3, line: 1268, type: !1340)
!3704 = !DILocation(line: 0, scope: !3701)
!3705 = !DILocation(line: 1270, column: 48, scope: !3701)
!3706 = !DILocation(line: 1270, column: 10, scope: !3701)
!3707 = !DILocation(line: 1270, column: 3, scope: !3701)
!3708 = distinct !DISubprogram(name: "force_nonfallthru_and_redirect", scope: !3, file: !3, line: 1107, type: !2117, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3709)
!3709 = !{!3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3722, !3723, !3724, !3727, !3732, !3733, !3734, !3735, !3739}
!3710 = !DILocalVariable(name: "e", arg: 1, scope: !3708, file: !3, line: 1107, type: !1340)
!3711 = !DILocalVariable(name: "target", arg: 2, scope: !3708, file: !3, line: 1107, type: !1323)
!3712 = !DILocalVariable(name: "jump_block", scope: !3708, file: !3, line: 1109, type: !1323)
!3713 = !DILocalVariable(name: "new_bb", scope: !3708, file: !3, line: 1109, type: !1323)
!3714 = !DILocalVariable(name: "src", scope: !3708, file: !3, line: 1109, type: !1323)
!3715 = !DILocalVariable(name: "note", scope: !3708, file: !3, line: 1110, type: !820)
!3716 = !DILocalVariable(name: "new_edge", scope: !3708, file: !3, line: 1111, type: !1340)
!3717 = !DILocalVariable(name: "abnormal_edge_flags", scope: !3708, file: !3, line: 1112, type: !734)
!3718 = !DILocalVariable(name: "loc", scope: !3708, file: !3, line: 1113, type: !734)
!3719 = !DILocalVariable(name: "note", scope: !3720, file: !3, line: 1122, type: !820)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 1121, column: 5)
!3721 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 1118, column: 7)
!3722 = !DILocalVariable(name: "b", scope: !3720, file: !3, line: 1123, type: !1340)
!3723 = !DILocalVariable(name: "redirected", scope: !3720, file: !3, line: 1124, type: !1019)
!3724 = !DILocalVariable(name: "prob", scope: !3725, file: !3, line: 1132, type: !734)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 1131, column: 2)
!3726 = distinct !DILexicalBlock(scope: !3720, file: !3, line: 1130, column: 11)
!3727 = !DILocalVariable(name: "tmp", scope: !3728, file: !3, line: 1164, type: !1340)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 1160, column: 2)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !3, line: 1159, column: 11)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 1157, column: 5)
!3731 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 1145, column: 7)
!3732 = !DILocalVariable(name: "ei", scope: !3728, file: !3, line: 1165, type: !2043)
!3733 = !DILocalVariable(name: "found", scope: !3728, file: !3, line: 1166, type: !1019)
!3734 = !DILocalVariable(name: "bb", scope: !3728, file: !3, line: 1168, type: !1323)
!3735 = !DILocalVariable(name: "bb_", scope: !3736, file: !3, line: 1210, type: !1323)
!3736 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 1210, column: 7)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 1193, column: 5)
!3738 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 1192, column: 7)
!3739 = !DILocalVariable(name: "label", scope: !3740, file: !3, line: 1247, type: !820)
!3740 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 1246, column: 5)
!3741 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 1237, column: 7)
!3742 = !DILocation(line: 0, scope: !3708)
!3743 = !DILocation(line: 1109, column: 51, scope: !3708)
!3744 = !DILocation(line: 1110, column: 3, scope: !3708)
!3745 = !DILocation(line: 1118, column: 17, scope: !3721)
!3746 = !DILocation(line: 1118, column: 14, scope: !3721)
!3747 = !DILocation(line: 1118, column: 33, scope: !3721)
!3748 = !DILocation(line: 1118, column: 39, scope: !3721)
!3749 = !DILocation(line: 1118, column: 47, scope: !3721)
!3750 = !DILocation(line: 1118, column: 44, scope: !3721)
!3751 = !DILocation(line: 1119, column: 7, scope: !3721)
!3752 = !DILocation(line: 1119, column: 26, scope: !3721)
!3753 = !DILocation(line: 1119, column: 10, scope: !3721)
!3754 = !DILocation(line: 1120, column: 7, scope: !3721)
!3755 = !DILocation(line: 1120, column: 10, scope: !3721)
!3756 = !DILocation(line: 1120, column: 42, scope: !3721)
!3757 = !DILocation(line: 1120, column: 39, scope: !3721)
!3758 = !DILocation(line: 1118, column: 7, scope: !3708)
!3759 = !DILocation(line: 1123, column: 16, scope: !3720)
!3760 = !DILocation(line: 0, scope: !3720)
!3761 = !DILocation(line: 1126, column: 35, scope: !3720)
!3762 = !DILocation(line: 1126, column: 52, scope: !3720)
!3763 = !DILocation(line: 1126, column: 20, scope: !3720)
!3764 = !DILocation(line: 1127, column: 7, scope: !3720)
!3765 = !DILocation(line: 1129, column: 29, scope: !3720)
!3766 = !DILocation(line: 1129, column: 14, scope: !3720)
!3767 = !DILocation(line: 1130, column: 11, scope: !3726)
!3768 = !DILocation(line: 1130, column: 11, scope: !3720)
!3769 = !DILocation(line: 1132, column: 15, scope: !3725)
!3770 = !DILocation(line: 0, scope: !3725)
!3771 = !DILocation(line: 1134, column: 7, scope: !3725)
!3772 = !DILocation(line: 1134, column: 19, scope: !3725)
!3773 = !DILocation(line: 1135, column: 18, scope: !3725)
!3774 = !DILocation(line: 1135, column: 26, scope: !3725)
!3775 = !DILocation(line: 1135, column: 24, scope: !3725)
!3776 = !DILocation(line: 1135, column: 31, scope: !3725)
!3777 = !DILocation(line: 1135, column: 7, scope: !3725)
!3778 = !DILocation(line: 1135, column: 13, scope: !3725)
!3779 = !DILocation(line: 1136, column: 7, scope: !3725)
!3780 = !DILocation(line: 1136, column: 19, scope: !3725)
!3781 = !DILocation(line: 1137, column: 19, scope: !3725)
!3782 = !DILocation(line: 1137, column: 13, scope: !3725)
!3783 = !DILocation(line: 1138, column: 8, scope: !3725)
!3784 = !DILocation(line: 1139, column: 6, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 1138, column: 8)
!3786 = !DILocation(line: 1140, column: 17, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 1140, column: 8)
!3788 = !DILocation(line: 1140, column: 8, scope: !3725)
!3789 = !DILocation(line: 1141, column: 15, scope: !3787)
!3790 = !DILocation(line: 1141, column: 6, scope: !3787)
!3791 = !DILocation(line: 1145, column: 10, scope: !3731)
!3792 = !DILocation(line: 1145, column: 16, scope: !3731)
!3793 = !DILocation(line: 1145, column: 7, scope: !3708)
!3794 = !DILocation(line: 1152, column: 7, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 1146, column: 5)
!3796 = !DILocation(line: 1153, column: 32, scope: !3795)
!3797 = !DILocation(line: 1153, column: 38, scope: !3795)
!3798 = !DILocation(line: 1154, column: 16, scope: !3795)
!3799 = !DILocation(line: 1155, column: 5, scope: !3795)
!3800 = !DILocation(line: 1158, column: 7, scope: !3730)
!3801 = !DILocation(line: 1159, column: 14, scope: !3729)
!3802 = !DILocation(line: 1159, column: 21, scope: !3729)
!3803 = !DILocation(line: 1159, column: 18, scope: !3729)
!3804 = !DILocation(line: 1159, column: 11, scope: !3730)
!3805 = !DILocation(line: 1165, column: 4, scope: !3728)
!3806 = !DILocation(line: 0, scope: !3728)
!3807 = !DILocation(line: 1168, column: 41, scope: !3728)
!3808 = !DILocation(line: 1168, column: 21, scope: !3728)
!3809 = !DILocation(line: 1172, column: 11, scope: !3728)
!3810 = !DILocation(line: 1173, column: 14, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 1173, column: 4)
!3812 = !DILocation(line: 0, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 1173, column: 4)
!3814 = !DILocation(line: 1173, column: 9, scope: !3811)
!3815 = !DILocation(line: 1173, column: 56, scope: !3813)
!3816 = !DILocation(line: 1173, column: 4, scope: !3811)
!3817 = !DILocation(line: 1175, column: 16, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 1175, column: 12)
!3819 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 1174, column: 6)
!3820 = !DILocation(line: 1175, column: 12, scope: !3819)
!3821 = !DILocation(line: 1177, column: 5, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 1176, column: 3)
!3823 = !DILocation(line: 1179, column: 5, scope: !3822)
!3824 = !DILocation(line: 1182, column: 3, scope: !3818)
!3825 = !DILocation(line: 1173, column: 4, scope: !3813)
!3826 = distinct !{!3826, !3816, !3827}
!3827 = !DILocation(line: 1183, column: 6, scope: !3811)
!3828 = !DILocation(line: 1185, column: 4, scope: !3728)
!3829 = !DILocation(line: 1187, column: 4, scope: !3728)
!3830 = !DILocation(line: 1188, column: 27, scope: !3728)
!3831 = !DILocation(line: 1188, column: 4, scope: !3728)
!3832 = !DILocation(line: 1189, column: 2, scope: !3729)
!3833 = !DILocation(line: 1189, column: 2, scope: !3728)
!3834 = !DILocation(line: 1192, column: 7, scope: !3738)
!3835 = !DILocation(line: 1192, column: 34, scope: !3738)
!3836 = !DILocation(line: 1192, column: 42, scope: !3738)
!3837 = !DILocation(line: 1192, column: 39, scope: !3738)
!3838 = !DILocation(line: 0, scope: !3738)
!3839 = !DILocation(line: 1199, column: 25, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 1199, column: 11)
!3841 = !DILocation(line: 1199, column: 12, scope: !3840)
!3842 = !DILocation(line: 1199, column: 11, scope: !3737)
!3843 = !DILocation(line: 1201, column: 14, scope: !3737)
!3844 = !DILocation(line: 1203, column: 55, scope: !3737)
!3845 = !DILocation(line: 1201, column: 12, scope: !3737)
!3846 = !DILocation(line: 1200, column: 9, scope: !3840)
!3847 = !DILocation(line: 1200, column: 7, scope: !3840)
!3848 = !DILocation(line: 1200, column: 2, scope: !3840)
!3849 = !DILocation(line: 1203, column: 40, scope: !3737)
!3850 = !DILocation(line: 1203, column: 20, scope: !3737)
!3851 = !DILocation(line: 1204, column: 30, scope: !3737)
!3852 = !DILocation(line: 1204, column: 19, scope: !3737)
!3853 = !DILocation(line: 1204, column: 25, scope: !3737)
!3854 = !DILocation(line: 1205, column: 31, scope: !3737)
!3855 = !DILocation(line: 1205, column: 19, scope: !3737)
!3856 = !DILocation(line: 1205, column: 29, scope: !3737)
!3857 = !DILocation(line: 1206, column: 40, scope: !3737)
!3858 = !DILocation(line: 1206, column: 19, scope: !3737)
!3859 = !DILocation(line: 1206, column: 30, scope: !3737)
!3860 = !DILocation(line: 0, scope: !3736)
!3861 = !DILocation(line: 1210, column: 7, scope: !3736)
!3862 = !DILocation(line: 1211, column: 11, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 1211, column: 11)
!3864 = !DILocation(line: 1212, column: 4, scope: !3863)
!3865 = !DILocation(line: 1212, column: 15, scope: !3863)
!3866 = !DILocation(line: 1212, column: 7, scope: !3863)
!3867 = !DILocation(line: 1213, column: 4, scope: !3863)
!3868 = !DILocation(line: 1213, column: 7, scope: !3863)
!3869 = !DILocation(line: 1214, column: 4, scope: !3863)
!3870 = !DILocation(line: 1214, column: 8, scope: !3863)
!3871 = !DILocation(line: 1215, column: 4, scope: !3863)
!3872 = !DILocation(line: 1215, column: 8, scope: !3863)
!3873 = !DILocation(line: 1215, column: 35, scope: !3863)
!3874 = !DILocation(line: 1215, column: 41, scope: !3863)
!3875 = !DILocation(line: 1211, column: 11, scope: !3737)
!3876 = !DILocation(line: 1216, column: 16, scope: !3863)
!3877 = !DILocation(line: 1216, column: 2, scope: !3863)
!3878 = !DILocation(line: 1219, column: 32, scope: !3737)
!3879 = !DILocation(line: 1219, column: 18, scope: !3737)
!3880 = !DILocation(line: 1220, column: 34, scope: !3737)
!3881 = !DILocation(line: 1220, column: 17, scope: !3737)
!3882 = !DILocation(line: 1220, column: 29, scope: !3737)
!3883 = !DILocation(line: 1221, column: 28, scope: !3737)
!3884 = !DILocation(line: 1221, column: 17, scope: !3737)
!3885 = !DILocation(line: 1221, column: 23, scope: !3737)
!3886 = !DILocation(line: 1224, column: 7, scope: !3737)
!3887 = !DILocation(line: 1225, column: 22, scope: !3737)
!3888 = !DILocation(line: 1228, column: 5, scope: !3737)
!3889 = !DILocation(line: 1232, column: 10, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 1232, column: 7)
!3891 = !DILocation(line: 1232, column: 7, scope: !3890)
!3892 = !DILocation(line: 1232, column: 21, scope: !3890)
!3893 = !DILocation(line: 1232, column: 27, scope: !3890)
!3894 = !DILocation(line: 1232, column: 38, scope: !3890)
!3895 = !DILocation(line: 1232, column: 7, scope: !3708)
!3896 = !DILocation(line: 1233, column: 5, scope: !3890)
!3897 = !DILocation(line: 0, scope: !3890)
!3898 = !DILocation(line: 1236, column: 12, scope: !3708)
!3899 = !DILocation(line: 1237, column: 17, scope: !3741)
!3900 = !DILocation(line: 1237, column: 14, scope: !3741)
!3901 = !DILocation(line: 1237, column: 7, scope: !3708)
!3902 = !DILocation(line: 1240, column: 31, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 1238, column: 5)
!3904 = !DILocation(line: 1240, column: 46, scope: !3903)
!3905 = !DILocation(line: 1240, column: 2, scope: !3903)
!3906 = !DILocation(line: 1244, column: 5, scope: !3903)
!3907 = !DILocation(line: 1247, column: 19, scope: !3740)
!3908 = !DILocation(line: 0, scope: !3740)
!3909 = !DILocation(line: 1248, column: 36, scope: !3740)
!3910 = !DILocation(line: 1248, column: 54, scope: !3740)
!3911 = !DILocation(line: 1248, column: 7, scope: !3740)
!3912 = !DILocation(line: 1249, column: 7, scope: !3740)
!3913 = !DILocation(line: 1249, column: 40, scope: !3740)
!3914 = !DILocation(line: 1250, column: 7, scope: !3740)
!3915 = !DILocation(line: 1250, column: 26, scope: !3740)
!3916 = !DILocation(line: 1253, column: 23, scope: !3708)
!3917 = !DILocation(line: 1253, column: 3, scope: !3708)
!3918 = !DILocation(line: 1254, column: 3, scope: !3708)
!3919 = !DILocation(line: 1256, column: 7, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 1256, column: 7)
!3921 = !DILocation(line: 1256, column: 7, scope: !3708)
!3922 = !DILocation(line: 1257, column: 5, scope: !3920)
!3923 = !DILocation(line: 1259, column: 3, scope: !3708)
!3924 = !DILocation(line: 1261, column: 1, scope: !3708)
!3925 = !DILocation(line: 1260, column: 3, scope: !3708)
!3926 = distinct !DISubprogram(name: "commit_one_edge_insertion", scope: !3, file: !3, line: 1440, type: !2168, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3927)
!3927 = !{!3928, !3929, !3930, !3931, !3932, !3933, !3934}
!3928 = !DILocalVariable(name: "e", arg: 1, scope: !3926, file: !3, line: 1440, type: !1340)
!3929 = !DILocalVariable(name: "before", scope: !3926, file: !3, line: 1442, type: !820)
!3930 = !DILocalVariable(name: "after", scope: !3926, file: !3, line: 1442, type: !820)
!3931 = !DILocalVariable(name: "insns", scope: !3926, file: !3, line: 1442, type: !820)
!3932 = !DILocalVariable(name: "tmp", scope: !3926, file: !3, line: 1442, type: !820)
!3933 = !DILocalVariable(name: "last", scope: !3926, file: !3, line: 1442, type: !820)
!3934 = !DILocalVariable(name: "bb", scope: !3926, file: !3, line: 1443, type: !1323)
!3935 = !DILocation(line: 0, scope: !3926)
!3936 = !DILocation(line: 1446, column: 14, scope: !3926)
!3937 = !DILocation(line: 1446, column: 20, scope: !3926)
!3938 = !DILocation(line: 1447, column: 14, scope: !3926)
!3939 = !DILocation(line: 1453, column: 29, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 1453, column: 11)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !3, line: 1450, column: 5)
!3942 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 1449, column: 7)
!3943 = !DILocation(line: 1453, column: 11, scope: !3940)
!3944 = !DILocation(line: 1453, column: 35, scope: !3940)
!3945 = !DILocation(line: 1453, column: 41, scope: !3940)
!3946 = !DILocation(line: 1453, column: 49, scope: !3940)
!3947 = !DILocation(line: 1453, column: 46, scope: !3940)
!3948 = !DILocation(line: 1453, column: 11, scope: !3941)
!3949 = !DILocation(line: 1459, column: 10, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3940, file: !3, line: 1454, column: 2)
!3951 = !DILocation(line: 1460, column: 8, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 1460, column: 8)
!3953 = !DILocation(line: 1460, column: 8, scope: !3950)
!3954 = !DILocation(line: 1461, column: 12, scope: !3952)
!3955 = !DILocation(line: 0, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 1462, column: 8)
!3957 = !DILocation(line: 1462, column: 8, scope: !3956)
!3958 = !DILocation(line: 1461, column: 6, scope: !3952)
!3959 = !DILocation(line: 0, scope: !3950)
!3960 = !DILocation(line: 1462, column: 8, scope: !3950)
!3961 = !DILocation(line: 1463, column: 12, scope: !3956)
!3962 = !DILocation(line: 1463, column: 6, scope: !3956)
!3963 = !DILocation(line: 1464, column: 12, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 1464, column: 8)
!3965 = !DILocation(line: 1464, column: 8, scope: !3950)
!3966 = !DILocation(line: 1466, column: 13, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 1466, column: 13)
!3968 = !DILocation(line: 1466, column: 13, scope: !3964)
!3969 = !DILocation(line: 1467, column: 14, scope: !3967)
!3970 = !DILocation(line: 1467, column: 6, scope: !3967)
!3971 = !DILocation(line: 1469, column: 14, scope: !3967)
!3972 = !DILocation(line: 1474, column: 20, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3940, file: !3, line: 1474, column: 16)
!3974 = !DILocation(line: 1474, column: 26, scope: !3973)
!3975 = !DILocation(line: 1474, column: 43, scope: !3973)
!3976 = !DILocation(line: 1475, column: 9, scope: !3973)
!3977 = !DILocation(line: 1475, column: 30, scope: !3973)
!3978 = !DILocation(line: 1475, column: 12, scope: !3973)
!3979 = !DILocation(line: 1476, column: 9, scope: !3973)
!3980 = !DILocation(line: 1476, column: 15, scope: !3973)
!3981 = !DILocation(line: 1476, column: 22, scope: !3973)
!3982 = !DILocation(line: 1476, column: 19, scope: !3973)
!3983 = !DILocation(line: 1474, column: 16, scope: !3940)
!3984 = !DILocation(line: 1486, column: 8, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 1486, column: 8)
!3986 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 1477, column: 2)
!3987 = !DILocation(line: 1486, column: 8, scope: !3986)
!3988 = !DILocation(line: 1487, column: 6, scope: !3985)
!3989 = !DILocation(line: 1492, column: 8, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 1489, column: 6)
!3991 = !DILocation(line: 1494, column: 16, scope: !3990)
!3992 = !DILocation(line: 0, scope: !3990)
!3993 = !DILocation(line: 1500, column: 9, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 1499, column: 2)
!3995 = !DILocation(line: 1501, column: 12, scope: !3994)
!3996 = !DILocation(line: 1503, column: 8, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 1503, column: 8)
!3998 = !DILocation(line: 1504, column: 8, scope: !3997)
!3999 = !DILocation(line: 1504, column: 19, scope: !3997)
!4000 = !DILocation(line: 1504, column: 11, scope: !3997)
!4001 = !DILocation(line: 1505, column: 8, scope: !3997)
!4002 = !DILocation(line: 1505, column: 14, scope: !3997)
!4003 = !DILocation(line: 1505, column: 21, scope: !3997)
!4004 = !DILocation(line: 1505, column: 18, scope: !3997)
!4005 = !DILocation(line: 1506, column: 8, scope: !3997)
!4006 = !DILocation(line: 1506, column: 11, scope: !3997)
!4007 = !DILocation(line: 1506, column: 33, scope: !3997)
!4008 = !DILocation(line: 1507, column: 8, scope: !3997)
!4009 = !DILocation(line: 1507, column: 16, scope: !3997)
!4010 = !DILocation(line: 1507, column: 22, scope: !3997)
!4011 = !DILocation(line: 1508, column: 8, scope: !3997)
!4012 = !DILocation(line: 1508, column: 11, scope: !3997)
!4013 = !DILocation(line: 1509, column: 8, scope: !3997)
!4014 = !DILocation(line: 1509, column: 12, scope: !3997)
!4015 = !DILocation(line: 1510, column: 8, scope: !3997)
!4016 = !DILocation(line: 1510, column: 12, scope: !3997)
!4017 = !DILocation(line: 1510, column: 35, scope: !3997)
!4018 = !DILocation(line: 1510, column: 41, scope: !3997)
!4019 = !DILocation(line: 1503, column: 8, scope: !3994)
!4020 = !DILocation(line: 1511, column: 6, scope: !3997)
!4021 = !DILocation(line: 1442, column: 26, scope: !3926)
!4022 = !DILocation(line: 1517, column: 7, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 1517, column: 7)
!4024 = !DILocation(line: 1517, column: 7, scope: !3926)
!4025 = !DILocation(line: 1519, column: 7, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 1518, column: 5)
!4027 = !DILocation(line: 1520, column: 14, scope: !4026)
!4028 = !DILocation(line: 1521, column: 5, scope: !4026)
!4029 = !DILocation(line: 1523, column: 12, scope: !4023)
!4030 = !DILocation(line: 0, scope: !4023)
!4031 = !DILocation(line: 1525, column: 7, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 1525, column: 7)
!4033 = !DILocation(line: 1525, column: 7, scope: !3926)
!4034 = !DILocation(line: 1532, column: 11, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 1526, column: 5)
!4036 = !DILocation(line: 1533, column: 7, scope: !4035)
!4037 = !DILocation(line: 0, scope: !4035)
!4038 = !DILocation(line: 1536, column: 16, scope: !4035)
!4039 = !DILocation(line: 1536, column: 10, scope: !4035)
!4040 = !DILocation(line: 1537, column: 7, scope: !4035)
!4041 = !DILocation(line: 1539, column: 11, scope: !4035)
!4042 = !DILocation(line: 1540, column: 2, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 1539, column: 11)
!4044 = !DILocation(line: 1543, column: 5, scope: !4032)
!4045 = !DILocation(line: 1546, column: 7, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 1546, column: 7)
!4047 = !DILocation(line: 1546, column: 26, scope: !4046)
!4048 = !DILocation(line: 1546, column: 7, scope: !3926)
!4049 = !DILocation(line: 1547, column: 20, scope: !4046)
!4050 = !DILocation(line: 1547, column: 13, scope: !4046)
!4051 = !DILocation(line: 1547, column: 5, scope: !4046)
!4052 = !DILocation(line: 1548, column: 1, scope: !3926)
!4053 = distinct !DISubprogram(name: "single_pred_p", scope: !155, file: !155, line: 634, type: !2156, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4054)
!4054 = !{!4055}
!4055 = !DILocalVariable(name: "bb", arg: 1, scope: !4053, file: !155, line: 634, type: !2151)
!4056 = !DILocation(line: 0, scope: !4053)
!4057 = !DILocation(line: 636, column: 10, scope: !4053)
!4058 = !DILocation(line: 636, column: 33, scope: !4053)
!4059 = !DILocation(line: 636, column: 3, scope: !4053)
!4060 = distinct !DISubprogram(name: "ei_cond", scope: !155, file: !155, line: 771, type: !4061, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4063)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!1019, !2043, !2214}
!4063 = !{!4064, !4065}
!4064 = !DILocalVariable(name: "ei", arg: 1, scope: !4060, file: !155, line: 771, type: !2043)
!4065 = !DILocalVariable(name: "p", arg: 2, scope: !4060, file: !155, line: 771, type: !2214)
!4066 = !DILocation(line: 0, scope: !4060)
!4067 = !DILocation(line: 773, column: 8, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4060, file: !155, line: 773, column: 7)
!4069 = !DILocation(line: 773, column: 7, scope: !4060)
!4070 = !DILocation(line: 775, column: 12, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4068, file: !155, line: 774, column: 5)
!4072 = !DILocation(line: 776, column: 7, scope: !4071)
!4073 = !DILocation(line: 781, column: 7, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4068, file: !155, line: 779, column: 5)
!4075 = !DILocation(line: 0, scope: !4068)
!4076 = !DILocation(line: 783, column: 1, scope: !4060)
!4077 = distinct !DISubprogram(name: "ei_next", scope: !155, file: !155, line: 736, type: !4078, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4081)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{null, !4080}
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!4081 = !{!4082}
!4082 = !DILocalVariable(name: "i", arg: 1, scope: !4077, file: !155, line: 736, type: !4080)
!4083 = !DILocation(line: 0, scope: !4077)
!4084 = !DILocation(line: 738, column: 3, scope: !4077)
!4085 = !DILocation(line: 739, column: 11, scope: !4077)
!4086 = !DILocation(line: 740, column: 1, scope: !4077)
!4087 = distinct !DISubprogram(name: "SET_BIT", scope: !2181, file: !2181, line: 63, type: !4088, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4090)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{null, !2180, !7}
!4090 = !{!4091, !4092, !4093}
!4091 = !DILocalVariable(name: "map", arg: 1, scope: !4087, file: !2181, line: 63, type: !2180)
!4092 = !DILocalVariable(name: "bitno", arg: 2, scope: !4087, file: !2181, line: 63, type: !7)
!4093 = !DILocalVariable(name: "oldbit", scope: !4094, file: !2181, line: 67, type: !1019)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !2181, line: 66, column: 5)
!4095 = distinct !DILexicalBlock(scope: !4087, file: !2181, line: 65, column: 7)
!4096 = !DILocation(line: 0, scope: !4087)
!4097 = !DILocation(line: 65, column: 12, scope: !4095)
!4098 = !DILocation(line: 65, column: 7, scope: !4095)
!4099 = !DILocation(line: 65, column: 7, scope: !4087)
!4100 = !DILocation(line: 73, column: 40, scope: !4087)
!4101 = !DILocation(line: 73, column: 29, scope: !4087)
!4102 = !DILocation(line: 72, column: 19, scope: !4087)
!4103 = !DILocation(line: 72, column: 3, scope: !4087)
!4104 = !DILocation(line: 68, column: 16, scope: !4094)
!4105 = !DILocation(line: 69, column: 12, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4094, file: !2181, line: 69, column: 11)
!4107 = !DILocation(line: 69, column: 11, scope: !4094)
!4108 = !DILocation(line: 70, column: 2, scope: !4106)
!4109 = !DILocation(line: 70, column: 41, scope: !4106)
!4110 = !DILocation(line: 73, column: 5, scope: !4087)
!4111 = !DILocation(line: 74, column: 1, scope: !4087)
!4112 = !DILocation(line: 0, scope: !724)
!4113 = !DILocation(line: 1641, column: 17, scope: !2020)
!4114 = !DILocation(line: 1641, column: 7, scope: !724)
!4115 = !DILocation(line: 1642, column: 5, scope: !2020)
!4116 = !DILocation(line: 1646, column: 21, scope: !2019)
!4117 = !DILocation(line: 0, scope: !2019)
!4118 = !DILocation(line: 1647, column: 28, scope: !2019)
!4119 = !DILocation(line: 1648, column: 26, scope: !2019)
!4120 = !DILocation(line: 1649, column: 32, scope: !2019)
!4121 = !DILocation(line: 1653, column: 11, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !2019, file: !3, line: 1653, column: 11)
!4123 = !DILocation(line: 1653, column: 11, scope: !2019)
!4124 = !DILocation(line: 1654, column: 2, scope: !4122)
!4125 = !DILocation(line: 1656, column: 7, scope: !2030)
!4126 = !DILocation(line: 1656, column: 7, scope: !2029)
!4127 = !DILocation(line: 0, scope: !2030)
!4128 = !DILocation(line: 0, scope: !2040)
!4129 = !DILocation(line: 0, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !2040, file: !3, line: 1684, column: 8)
!4131 = !DILocation(line: 0, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4130, file: !3, line: 1684, column: 8)
!4133 = !DILocation(line: 0, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !2040, file: !3, line: 1693, column: 8)
!4135 = !DILocation(line: 0, scope: !2050)
!4136 = !DILocation(line: 0, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !2050, file: !3, line: 1716, column: 8)
!4138 = !DILocation(line: 0, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4137, file: !3, line: 1716, column: 8)
!4140 = !DILocation(line: 0, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !2050, file: !3, line: 1726, column: 8)
!4142 = !DILocation(line: 1675, column: 7, scope: !2038)
!4143 = !DILocation(line: 1660, column: 10, scope: !2028)
!4144 = !DILocation(line: 1660, column: 4, scope: !2028)
!4145 = !DILocation(line: 1660, column: 35, scope: !2028)
!4146 = !DILocation(line: 1661, column: 8, scope: !2028)
!4147 = !DILocation(line: 1661, column: 4, scope: !2028)
!4148 = !DILocation(line: 1661, column: 32, scope: !2028)
!4149 = !DILocation(line: 1662, column: 13, scope: !2034)
!4150 = !DILocation(line: 1662, column: 9, scope: !2034)
!4151 = !DILocation(line: 0, scope: !2034)
!4152 = !DILocation(line: 0, scope: !2028)
!4153 = !DILocation(line: 1662, column: 29, scope: !2033)
!4154 = !DILocation(line: 1662, column: 4, scope: !2034)
!4155 = !DILocation(line: 0, scope: !2032)
!4156 = !DILocation(line: 1666, column: 20, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !2032, file: !3, line: 1666, column: 12)
!4158 = !DILocation(line: 1666, column: 12, scope: !4157)
!4159 = !DILocation(line: 1666, column: 34, scope: !4157)
!4160 = !DILocation(line: 1666, column: 12, scope: !2032)
!4161 = !DILocation(line: 1668, column: 30, scope: !2032)
!4162 = !DILocation(line: 1670, column: 17, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !2032, file: !3, line: 1670, column: 12)
!4164 = !DILocation(line: 1670, column: 14, scope: !4163)
!4165 = !DILocation(line: 1662, column: 46, scope: !2033)
!4166 = !DILocation(line: 1662, column: 4, scope: !2033)
!4167 = distinct !{!4167, !4154, !4168}
!4168 = !DILocation(line: 1672, column: 6, scope: !2034)
!4169 = !DILocation(line: 0, scope: !2029)
!4170 = distinct !{!4170, !4125, !4171}
!4171 = !DILocation(line: 1673, column: 2, scope: !2030)
!4172 = !DILocation(line: 0, scope: !2038)
!4173 = !DILocation(line: 1675, column: 38, scope: !2037)
!4174 = !DILocation(line: 1678, column: 20, scope: !2041)
!4175 = !DILocation(line: 1678, column: 14, scope: !2041)
!4176 = !DILocation(line: 1678, column: 41, scope: !2041)
!4177 = !DILocation(line: 1678, column: 8, scope: !2036)
!4178 = !DILocation(line: 1680, column: 8, scope: !2040)
!4179 = !DILocation(line: 1681, column: 8, scope: !2040)
!4180 = !DILocation(line: 1683, column: 8, scope: !2040)
!4181 = !DILocation(line: 1684, column: 8, scope: !4130)
!4182 = !DILocation(line: 1684, column: 8, scope: !4132)
!4183 = !DILocation(line: 1685, column: 25, scope: !4132)
!4184 = !DILocation(line: 1685, column: 28, scope: !4132)
!4185 = !DILocation(line: 1685, column: 33, scope: !4132)
!4186 = !DILocation(line: 1685, column: 3, scope: !4132)
!4187 = distinct !{!4187, !4181, !4188}
!4188 = !DILocation(line: 1685, column: 38, scope: !4130)
!4189 = !DILocation(line: 1686, column: 40, scope: !2040)
!4190 = !DILocation(line: 1686, column: 8, scope: !2040)
!4191 = !DILocation(line: 1688, column: 12, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !2040, file: !3, line: 1688, column: 12)
!4193 = !DILocation(line: 1688, column: 12, scope: !2040)
!4194 = !DILocation(line: 1690, column: 5, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 1689, column: 3)
!4196 = !DILocation(line: 1691, column: 5, scope: !4195)
!4197 = !DILocation(line: 1692, column: 3, scope: !4195)
!4198 = !DILocation(line: 1693, column: 8, scope: !4134)
!4199 = !DILocation(line: 1693, column: 8, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4134, file: !3, line: 1693, column: 8)
!4201 = !DILocation(line: 1695, column: 5, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 1694, column: 3)
!4203 = !DILocation(line: 1696, column: 27, scope: !4202)
!4204 = !DILocation(line: 1696, column: 5, scope: !4202)
!4205 = !DILocation(line: 1697, column: 5, scope: !4202)
!4206 = distinct !{!4206, !4198, !4207}
!4207 = !DILocation(line: 1698, column: 3, scope: !4134)
!4208 = !DILocation(line: 1699, column: 6, scope: !2041)
!4209 = !DILocation(line: 1701, column: 16, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !2036, file: !3, line: 1701, column: 8)
!4211 = !DILocation(line: 1701, column: 8, scope: !4210)
!4212 = !DILocation(line: 1699, column: 6, scope: !2040)
!4213 = !DILocation(line: 1701, column: 36, scope: !4210)
!4214 = !DILocation(line: 1702, column: 8, scope: !4210)
!4215 = !DILocation(line: 1702, column: 12, scope: !4210)
!4216 = !DILocation(line: 1703, column: 8, scope: !4210)
!4217 = !DILocation(line: 1703, column: 12, scope: !4210)
!4218 = !DILocation(line: 1701, column: 8, scope: !2036)
!4219 = !DILocation(line: 1704, column: 6, scope: !4210)
!4220 = !DILocation(line: 1705, column: 41, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4210, file: !3, line: 1705, column: 13)
!4222 = !DILocation(line: 1705, column: 13, scope: !4210)
!4223 = !DILocation(line: 1706, column: 6, scope: !4221)
!4224 = !DILocation(line: 1708, column: 17, scope: !2036)
!4225 = !DILocation(line: 0, scope: !2036)
!4226 = !DILocation(line: 1710, column: 18, scope: !2051)
!4227 = !DILocation(line: 1710, column: 14, scope: !2051)
!4228 = !DILocation(line: 1710, column: 39, scope: !2051)
!4229 = !DILocation(line: 1710, column: 8, scope: !2036)
!4230 = !DILocation(line: 1712, column: 8, scope: !2050)
!4231 = !DILocation(line: 1713, column: 8, scope: !2050)
!4232 = !DILocation(line: 1715, column: 60, scope: !2050)
!4233 = !DILocation(line: 1715, column: 8, scope: !2050)
!4234 = !DILocation(line: 1716, column: 8, scope: !4137)
!4235 = !DILocation(line: 1716, column: 8, scope: !4139)
!4236 = !DILocation(line: 1717, column: 25, scope: !4139)
!4237 = !DILocation(line: 1717, column: 28, scope: !4139)
!4238 = !DILocation(line: 1717, column: 34, scope: !4139)
!4239 = !DILocation(line: 1717, column: 3, scope: !4139)
!4240 = distinct !{!4240, !4234, !4241}
!4241 = !DILocation(line: 1717, column: 39, scope: !4137)
!4242 = !DILocation(line: 1718, column: 8, scope: !2050)
!4243 = !DILocation(line: 1720, column: 12, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !2050, file: !3, line: 1720, column: 12)
!4245 = !DILocation(line: 1720, column: 12, scope: !2050)
!4246 = !DILocation(line: 1722, column: 5, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 1721, column: 3)
!4248 = !DILocation(line: 1723, column: 5, scope: !4247)
!4249 = !DILocation(line: 1724, column: 3, scope: !4247)
!4250 = !DILocation(line: 1725, column: 8, scope: !2050)
!4251 = !DILocation(line: 1726, column: 8, scope: !4141)
!4252 = !DILocation(line: 1726, column: 8, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4141, file: !3, line: 1726, column: 8)
!4254 = !DILocation(line: 1728, column: 5, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 1727, column: 3)
!4256 = !DILocation(line: 1729, column: 27, scope: !4255)
!4257 = !DILocation(line: 1729, column: 5, scope: !4255)
!4258 = !DILocation(line: 1730, column: 5, scope: !4255)
!4259 = distinct !{!4259, !4251, !4260}
!4260 = !DILocation(line: 1731, column: 3, scope: !4141)
!4261 = !DILocation(line: 1732, column: 6, scope: !2051)
!4262 = !DILocation(line: 1732, column: 6, scope: !2050)
!4263 = !DILocation(line: 1733, column: 8, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !2036, file: !3, line: 1733, column: 8)
!4265 = !DILocation(line: 1733, column: 8, scope: !2036)
!4266 = !DILocation(line: 1734, column: 6, scope: !4264)
!4267 = !DILocation(line: 1675, column: 60, scope: !2037)
!4268 = !DILocation(line: 1675, column: 7, scope: !2037)
!4269 = distinct !{!4269, !4142, !4270}
!4270 = !DILocation(line: 1735, column: 2, scope: !2038)
!4271 = !DILocation(line: 1737, column: 7, scope: !2019)
!4272 = !DILocation(line: 1738, column: 7, scope: !2019)
!4273 = !DILocation(line: 1739, column: 7, scope: !2019)
!4274 = !DILocation(line: 1742, column: 13, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !724, file: !3, line: 1742, column: 7)
!4276 = !DILocation(line: 1742, column: 33, scope: !4275)
!4277 = !DILocation(line: 1742, column: 7, scope: !724)
!4278 = !DILocation(line: 1744, column: 7, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 1743, column: 5)
!4280 = !DILocation(line: 1745, column: 12, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4279, file: !3, line: 1745, column: 7)
!4282 = !DILocation(line: 0, scope: !4281)
!4283 = !DILocation(line: 1745, column: 57, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 1745, column: 7)
!4285 = !DILocation(line: 1745, column: 7, scope: !4281)
!4286 = !DILocation(line: 1747, column: 26, scope: !4284)
!4287 = !DILocation(line: 1747, column: 2, scope: !4284)
!4288 = !DILocation(line: 1746, column: 15, scope: !4284)
!4289 = !DILocation(line: 1745, column: 7, scope: !4284)
!4290 = distinct !{!4290, !4285, !4291}
!4291 = !DILocation(line: 1747, column: 43, scope: !4281)
!4292 = !DILocation(line: 1749, column: 1, scope: !724)
!4293 = distinct !DISubprogram(name: "update_br_prob_note", scope: !3, file: !3, line: 1752, type: !2128, scopeLine: 1753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4294)
!4294 = !{!4295, !4296}
!4295 = !DILocalVariable(name: "bb", arg: 1, scope: !4293, file: !3, line: 1752, type: !1323)
!4296 = !DILocalVariable(name: "note", scope: !4293, file: !3, line: 1754, type: !820)
!4297 = !DILocation(line: 0, scope: !4293)
!4298 = !DILocation(line: 1755, column: 8, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 1755, column: 7)
!4300 = !DILocation(line: 1755, column: 7, scope: !4293)
!4301 = !DILocation(line: 1757, column: 10, scope: !4293)
!4302 = !DILocation(line: 1758, column: 8, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 1758, column: 7)
!4304 = !DILocation(line: 1758, column: 13, scope: !4303)
!4305 = !DILocation(line: 1758, column: 16, scope: !4303)
!4306 = !DILocation(line: 1758, column: 43, scope: !4303)
!4307 = !DILocation(line: 1758, column: 61, scope: !4303)
!4308 = !DILocation(line: 1758, column: 40, scope: !4303)
!4309 = !DILocation(line: 1758, column: 7, scope: !4293)
!4310 = !DILocation(line: 1760, column: 20, scope: !4293)
!4311 = !DILocation(line: 1760, column: 18, scope: !4293)
!4312 = !DILocation(line: 1761, column: 1, scope: !4293)
!4313 = distinct !DISubprogram(name: "get_last_bb_insn", scope: !3, file: !3, line: 1766, type: !3442, scopeLine: 1767, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4314)
!4314 = !{!4315, !4316, !4317}
!4315 = !DILocalVariable(name: "bb", arg: 1, scope: !4313, file: !3, line: 1766, type: !1323)
!4316 = !DILocalVariable(name: "tmp", scope: !4313, file: !3, line: 1768, type: !820)
!4317 = !DILocalVariable(name: "end", scope: !4313, file: !3, line: 1769, type: !820)
!4318 = !DILocation(line: 0, scope: !4313)
!4319 = !DILocation(line: 1768, column: 3, scope: !4313)
!4320 = !DILocation(line: 1769, column: 13, scope: !4313)
!4321 = !DILocation(line: 1772, column: 7, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 1772, column: 7)
!4323 = !DILocation(line: 1773, column: 11, scope: !4322)
!4324 = !DILocation(line: 1772, column: 7, scope: !4313)
!4325 = !DILocation(line: 1776, column: 9, scope: !4313)
!4326 = !DILocation(line: 1777, column: 3, scope: !4313)
!4327 = !DILocation(line: 1777, column: 10, scope: !4313)
!4328 = !DILocation(line: 1777, column: 14, scope: !4313)
!4329 = !DILocation(line: 1777, column: 17, scope: !4313)
!4330 = !DILocation(line: 1780, column: 13, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 1778, column: 5)
!4332 = distinct !{!4332, !4326, !4333}
!4333 = !DILocation(line: 1781, column: 5, scope: !4313)
!4334 = !DILocation(line: 1784, column: 1, scope: !4313)
!4335 = !DILocation(line: 1783, column: 3, scope: !4313)
!4336 = distinct !DISubprogram(name: "purge_all_dead_edges", scope: !3, file: !3, line: 2439, type: !2227, scopeLine: 2440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4337)
!4337 = !{!4338, !4339, !4340}
!4338 = !DILocalVariable(name: "purged", scope: !4336, file: !3, line: 2441, type: !734)
!4339 = !DILocalVariable(name: "bb", scope: !4336, file: !3, line: 2442, type: !1323)
!4340 = !DILocalVariable(name: "purged_here", scope: !4341, file: !3, line: 2446, type: !1019)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 2445, column: 5)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 2444, column: 3)
!4343 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 2444, column: 3)
!4344 = !DILocation(line: 0, scope: !4336)
!4345 = !DILocation(line: 2444, column: 3, scope: !4343)
!4346 = !DILocation(line: 2444, column: 3, scope: !4342)
!4347 = !DILocation(line: 0, scope: !4343)
!4348 = !DILocation(line: 2446, column: 26, scope: !4341)
!4349 = !DILocation(line: 0, scope: !4341)
!4350 = !DILocation(line: 2448, column: 17, scope: !4341)
!4351 = !DILocation(line: 2448, column: 14, scope: !4341)
!4352 = !DILocation(line: 0, scope: !4342)
!4353 = distinct !{!4353, !4345, !4354}
!4354 = !DILocation(line: 2449, column: 5, scope: !4343)
!4355 = !DILocation(line: 2451, column: 10, scope: !4336)
!4356 = !DILocation(line: 2451, column: 3, scope: !4336)
!4357 = distinct !DISubprogram(name: "insert_insn_end_bb_new", scope: !3, file: !3, line: 3072, type: !4358, scopeLine: 3073, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4360)
!4358 = !DISubroutineType(types: !4359)
!4359 = !{!820, !820, !1323}
!4360 = !{!4361, !4362, !4363, !4364, !4365}
!4361 = !DILocalVariable(name: "pat", arg: 1, scope: !4357, file: !3, line: 3072, type: !820)
!4362 = !DILocalVariable(name: "bb", arg: 2, scope: !4357, file: !3, line: 3072, type: !1323)
!4363 = !DILocalVariable(name: "insn", scope: !4357, file: !3, line: 3074, type: !820)
!4364 = !DILocalVariable(name: "new_insn", scope: !4357, file: !3, line: 3075, type: !820)
!4365 = !DILocalVariable(name: "pat_end", scope: !4357, file: !3, line: 3076, type: !820)
!4366 = !DILocation(line: 0, scope: !4357)
!4367 = !DILocation(line: 3074, column: 14, scope: !4357)
!4368 = !DILocation(line: 3078, column: 3, scope: !4357)
!4369 = !DILocation(line: 3078, column: 10, scope: !4357)
!4370 = !DILocation(line: 3078, column: 30, scope: !4357)
!4371 = distinct !{!4371, !4368, !4372}
!4372 = !DILocation(line: 3079, column: 15, scope: !4357)
!4373 = !DILocation(line: 3085, column: 7, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 3085, column: 7)
!4375 = !DILocation(line: 3086, column: 7, scope: !4374)
!4376 = !DILocation(line: 3086, column: 11, scope: !4374)
!4377 = !DILocation(line: 3087, column: 11, scope: !4374)
!4378 = !DILocation(line: 3087, column: 16, scope: !4374)
!4379 = !DILocation(line: 3088, column: 15, scope: !4374)
!4380 = !DILocation(line: 3088, column: 18, scope: !4374)
!4381 = !DILocation(line: 3088, column: 41, scope: !4374)
!4382 = !DILocation(line: 3088, column: 47, scope: !4374)
!4383 = !DILocation(line: 3085, column: 7, scope: !4357)
!4384 = !DILocation(line: 3122, column: 12, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 3122, column: 12)
!4386 = !DILocation(line: 3096, column: 11, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 3096, column: 11)
!4388 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 3089, column: 5)
!4389 = !DILocation(line: 3096, column: 37, scope: !4387)
!4390 = !DILocation(line: 3097, column: 11, scope: !4387)
!4391 = !DILocation(line: 3097, column: 40, scope: !4387)
!4392 = !DILocation(line: 3096, column: 11, scope: !4388)
!4393 = !DILocation(line: 3098, column: 16, scope: !4387)
!4394 = !DILocation(line: 3098, column: 9, scope: !4387)
!4395 = !DILocation(line: 3117, column: 18, scope: !4388)
!4396 = !DILocation(line: 3118, column: 5, scope: !4388)
!4397 = !DILocation(line: 3123, column: 12, scope: !4385)
!4398 = !DILocation(line: 3123, column: 17, scope: !4385)
!4399 = !DILocation(line: 3124, column: 16, scope: !4385)
!4400 = !DILocation(line: 3124, column: 19, scope: !4385)
!4401 = !DILocation(line: 3124, column: 42, scope: !4385)
!4402 = !DILocation(line: 3124, column: 48, scope: !4385)
!4403 = !DILocation(line: 3122, column: 12, scope: !4374)
!4404 = !DILocation(line: 3134, column: 47, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 3125, column: 5)
!4406 = !DILocation(line: 3134, column: 14, scope: !4405)
!4407 = !DILocation(line: 3144, column: 7, scope: !4405)
!4408 = !DILocation(line: 0, scope: !4405)
!4409 = !DILocation(line: 3144, column: 14, scope: !4405)
!4410 = !DILocation(line: 3145, column: 14, scope: !4405)
!4411 = !DILocation(line: 3145, column: 17, scope: !4405)
!4412 = !DILocation(line: 3146, column: 16, scope: !4405)
!4413 = distinct !{!4413, !4407, !4412}
!4414 = !DILocation(line: 3148, column: 18, scope: !4405)
!4415 = !DILocation(line: 3149, column: 5, scope: !4405)
!4416 = !DILocation(line: 3151, column: 16, scope: !4385)
!4417 = !DILocation(line: 0, scope: !4374)
!4418 = !DILocation(line: 3153, column: 3, scope: !4357)
!4419 = distinct !DISubprogram(name: "rtl_verify_flow_info", scope: !3, file: !3, line: 2034, type: !2101, scopeLine: 2035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4420)
!4420 = !{!4421, !4422, !4423, !4424, !4425, !4426, !4427, !4429, !4430, !4431, !4433, !4437, !4438, !4439, !4440, !4443}
!4421 = !DILocalVariable(name: "bb", scope: !4419, file: !3, line: 2036, type: !1323)
!4422 = !DILocalVariable(name: "err", scope: !4419, file: !3, line: 2037, type: !734)
!4423 = !DILocalVariable(name: "x", scope: !4419, file: !3, line: 2038, type: !820)
!4424 = !DILocalVariable(name: "last_head", scope: !4419, file: !3, line: 2039, type: !820)
!4425 = !DILocalVariable(name: "bb_info", scope: !4419, file: !3, line: 2040, type: !2022)
!4426 = !DILocalVariable(name: "num_bb_notes", scope: !4419, file: !3, line: 2041, type: !734)
!4427 = !DILocalVariable(name: "rtx_first", scope: !4419, file: !3, line: 2042, type: !4428)
!4428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !820)
!4429 = !DILocalVariable(name: "last_bb_seen", scope: !4419, file: !3, line: 2043, type: !1323)
!4430 = !DILocalVariable(name: "curr_bb", scope: !4419, file: !3, line: 2043, type: !1323)
!4431 = !DILocalVariable(name: "max_uid", scope: !4419, file: !3, line: 2044, type: !4432)
!4432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!4433 = !DILocalVariable(name: "e", scope: !4434, file: !3, line: 2050, type: !1340)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !3, line: 2049, column: 5)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !3, line: 2048, column: 3)
!4436 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 2048, column: 3)
!4437 = !DILocalVariable(name: "ei", scope: !4434, file: !3, line: 2051, type: !2043)
!4438 = !DILocalVariable(name: "head", scope: !4434, file: !3, line: 2052, type: !820)
!4439 = !DILocalVariable(name: "end", scope: !4434, file: !3, line: 2053, type: !820)
!4440 = !DILocalVariable(name: "insn", scope: !4441, file: !3, line: 2110, type: !820)
!4441 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 2109, column: 2)
!4442 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 2108, column: 11)
!4443 = !DILocalVariable(name: "insn", scope: !4444, file: !3, line: 2128, type: !820)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 2127, column: 2)
!4445 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 2125, column: 16)
!4446 = !DILocation(line: 2037, column: 13, scope: !4419)
!4447 = !DILocation(line: 0, scope: !4419)
!4448 = !DILocation(line: 2039, column: 19, scope: !4419)
!4449 = !DILocation(line: 2042, column: 25, scope: !4419)
!4450 = !DILocation(line: 2044, column: 23, scope: !4419)
!4451 = !DILocation(line: 2046, column: 13, scope: !4419)
!4452 = !DILocation(line: 2048, column: 3, scope: !4436)
!4453 = !DILocation(line: 0, scope: !4434)
!4454 = !DILocation(line: 0, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 2105, column: 7)
!4456 = !DILocation(line: 0, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 2105, column: 7)
!4458 = !DILocation(line: 2048, column: 3, scope: !4435)
!4459 = !DILocation(line: 0, scope: !4436)
!4460 = !DILocation(line: 2150, column: 3, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 2150, column: 3)
!4462 = !DILocation(line: 2050, column: 7, scope: !4434)
!4463 = !DILocation(line: 2051, column: 7, scope: !4434)
!4464 = !DILocation(line: 2052, column: 18, scope: !4434)
!4465 = !DILocation(line: 2053, column: 17, scope: !4434)
!4466 = !DILocation(line: 2055, column: 12, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 2055, column: 7)
!4468 = !DILocation(line: 0, scope: !4467)
!4469 = !DILocation(line: 2037, column: 7, scope: !4419)
!4470 = !DILocation(line: 2055, column: 7, scope: !4467)
!4471 = !DILocation(line: 2058, column: 10, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 2058, column: 8)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 2056, column: 2)
!4474 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 2055, column: 7)
!4475 = !DILocation(line: 2058, column: 8, scope: !4473)
!4476 = !DILocation(line: 2062, column: 7, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 2062, column: 6)
!4478 = !DILocation(line: 2063, column: 6, scope: !4477)
!4479 = !DILocation(line: 2063, column: 9, scope: !4477)
!4480 = !DILocation(line: 2063, column: 28, scope: !4477)
!4481 = !DILocation(line: 2062, column: 6, scope: !4473)
!4482 = !DILocation(line: 2066, column: 6, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 2064, column: 4)
!4484 = !DILocation(line: 2065, column: 6, scope: !4483)
!4485 = !DILocation(line: 2068, column: 4, scope: !4483)
!4486 = !DILocation(line: 2055, column: 46, scope: !4474)
!4487 = !DILocation(line: 2055, column: 7, scope: !4474)
!4488 = distinct !{!4488, !4470, !4489}
!4489 = !DILocation(line: 2069, column: 2, scope: !4467)
!4490 = !DILocation(line: 2071, column: 11, scope: !4434)
!4491 = !DILocation(line: 2074, column: 4, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 2072, column: 2)
!4493 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 2071, column: 11)
!4494 = !DILocation(line: 2074, column: 24, scope: !4492)
!4495 = !DILocation(line: 2073, column: 4, scope: !4492)
!4496 = !DILocation(line: 2076, column: 2, scope: !4492)
!4497 = !DILocation(line: 0, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 2085, column: 6)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2084, column: 8)
!4500 = distinct !DILexicalBlock(scope: !4501, file: !3, line: 2081, column: 2)
!4501 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 2080, column: 7)
!4502 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 2080, column: 7)
!4503 = !DILocation(line: 2080, column: 7, scope: !4434)
!4504 = !DILocation(line: 2080, column: 16, scope: !4501)
!4505 = !DILocation(line: 2080, column: 7, scope: !4502)
!4506 = !DILocation(line: 2084, column: 16, scope: !4499)
!4507 = !DILocation(line: 2084, column: 8, scope: !4499)
!4508 = !DILocation(line: 2084, column: 30, scope: !4499)
!4509 = !DILocation(line: 2084, column: 8, scope: !4500)
!4510 = !DILocation(line: 2087, column: 26, scope: !4498)
!4511 = !DILocation(line: 2087, column: 56, scope: !4498)
!4512 = !DILocation(line: 2086, column: 8, scope: !4498)
!4513 = !DILocation(line: 2091, column: 12, scope: !4500)
!4514 = !DILocation(line: 2091, column: 4, scope: !4500)
!4515 = !DILocation(line: 2089, column: 6, scope: !4498)
!4516 = !DILocation(line: 2091, column: 26, scope: !4500)
!4517 = !DILocation(line: 2093, column: 10, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2093, column: 8)
!4519 = !DILocation(line: 2093, column: 8, scope: !4500)
!4520 = !DILocation(line: 2080, column: 33, scope: !4501)
!4521 = !DILocation(line: 2080, column: 7, scope: !4501)
!4522 = distinct !{!4522, !4505, !4523}
!4523 = !DILocation(line: 2095, column: 2, scope: !4502)
!4524 = !DILocation(line: 2096, column: 11, scope: !4434)
!4525 = !DILocation(line: 2099, column: 4, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 2097, column: 2)
!4527 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 2096, column: 11)
!4528 = !DILocation(line: 2099, column: 25, scope: !4526)
!4529 = !DILocation(line: 2098, column: 4, scope: !4526)
!4530 = !DILocation(line: 2101, column: 2, scope: !4526)
!4531 = !DILocation(line: 2103, column: 19, scope: !4434)
!4532 = !DILocation(line: 2105, column: 7, scope: !4455)
!4533 = !DILocation(line: 2105, column: 7, scope: !4457)
!4534 = !DILocation(line: 2108, column: 12, scope: !4442)
!4535 = !DILocation(line: 2106, column: 6, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 2106, column: 6)
!4537 = !DILocation(line: 2106, column: 9, scope: !4536)
!4538 = !DILocation(line: 2106, column: 15, scope: !4536)
!4539 = !DILocation(line: 2106, column: 6, scope: !4457)
!4540 = distinct !{!4540, !4532, !4541}
!4541 = !DILocation(line: 2107, column: 4, scope: !4455)
!4542 = !DILocation(line: 2108, column: 11, scope: !4434)
!4543 = !DILocation(line: 2113, column: 16, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 2113, column: 4)
!4545 = !DILocation(line: 2113, column: 9, scope: !4544)
!4546 = !DILocation(line: 0, scope: !4544)
!4547 = !DILocation(line: 0, scope: !4441)
!4548 = !DILocation(line: 2115, column: 13, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2115, column: 12)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 2114, column: 6)
!4551 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 2113, column: 4)
!4552 = !DILocation(line: 2115, column: 18, scope: !4549)
!4553 = !DILocation(line: 2115, column: 21, scope: !4549)
!4554 = !DILocation(line: 2115, column: 12, scope: !4550)
!4555 = !DILocation(line: 2117, column: 50, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 2116, column: 3)
!4557 = !DILocation(line: 2117, column: 5, scope: !4556)
!4558 = !DILocation(line: 2119, column: 5, scope: !4556)
!4559 = !DILocation(line: 2121, column: 12, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2121, column: 12)
!4561 = !DILocation(line: 2121, column: 12, scope: !4550)
!4562 = !DILocation(line: 2113, column: 4, scope: !4551)
!4563 = distinct !{!4563, !4564, !4565}
!4564 = !DILocation(line: 2113, column: 4, scope: !4544)
!4565 = !DILocation(line: 2123, column: 6, scope: !4544)
!4566 = !DILocation(line: 2125, column: 19, scope: !4445)
!4567 = !DILocation(line: 2125, column: 26, scope: !4445)
!4568 = !DILocation(line: 2125, column: 23, scope: !4445)
!4569 = !DILocation(line: 2126, column: 9, scope: !4445)
!4570 = !DILocation(line: 2126, column: 15, scope: !4445)
!4571 = !DILocation(line: 2126, column: 23, scope: !4445)
!4572 = !DILocation(line: 2126, column: 20, scope: !4445)
!4573 = !DILocation(line: 2125, column: 16, scope: !4442)
!4574 = !DILocation(line: 2130, column: 16, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 2130, column: 8)
!4576 = !DILocation(line: 2130, column: 24, scope: !4575)
!4577 = !DILocation(line: 2130, column: 8, scope: !4444)
!4578 = !DILocation(line: 2134, column: 12, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 2131, column: 6)
!4580 = !DILocation(line: 2134, column: 28, scope: !4579)
!4581 = !DILocation(line: 2132, column: 8, scope: !4579)
!4582 = !DILocation(line: 2136, column: 6, scope: !4579)
!4583 = !DILocation(line: 2138, column: 18, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 2138, column: 6)
!4585 = !DILocation(line: 2138, column: 11, scope: !4584)
!4586 = !DILocation(line: 2138, column: 55, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 2138, column: 6)
!4588 = !DILocation(line: 0, scope: !4584)
!4589 = !DILocation(line: 0, scope: !4444)
!4590 = !DILocation(line: 2138, column: 52, scope: !4587)
!4591 = !DILocation(line: 2138, column: 6, scope: !4584)
!4592 = !DILocation(line: 2140, column: 12, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 2140, column: 12)
!4594 = !DILocation(line: 2140, column: 29, scope: !4593)
!4595 = !DILocation(line: 2140, column: 32, scope: !4593)
!4596 = !DILocation(line: 2140, column: 12, scope: !4587)
!4597 = !DILocation(line: 2143, column: 8, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 2141, column: 3)
!4599 = !DILocation(line: 2143, column: 13, scope: !4598)
!4600 = !DILocation(line: 2143, column: 29, scope: !4598)
!4601 = !DILocation(line: 2142, column: 5, scope: !4598)
!4602 = !DILocation(line: 2144, column: 5, scope: !4598)
!4603 = !DILocation(line: 2146, column: 3, scope: !4598)
!4604 = !DILocation(line: 0, scope: !4587)
!4605 = !DILocation(line: 2138, column: 6, scope: !4587)
!4606 = distinct !{!4606, !4591, !4607}
!4607 = !DILocation(line: 2146, column: 3, scope: !4584)
!4608 = !DILocation(line: 2148, column: 5, scope: !4435)
!4609 = !DILocation(line: 0, scope: !4442)
!4610 = !DILocation(line: 0, scope: !4435)
!4611 = distinct !{!4611, !4452, !4612}
!4612 = !DILocation(line: 2148, column: 5, scope: !4436)
!4613 = !DILocation(line: 0, scope: !4461)
!4614 = !DILocation(line: 2150, column: 25, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 2150, column: 3)
!4616 = !DILocation(line: 2154, column: 12, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 2154, column: 11)
!4618 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 2151, column: 5)
!4619 = !DILocation(line: 2155, column: 4, scope: !4617)
!4620 = !DILocation(line: 2155, column: 7, scope: !4617)
!4621 = !DILocation(line: 2155, column: 26, scope: !4617)
!4622 = !DILocation(line: 2154, column: 11, scope: !4618)
!4623 = !DILocation(line: 2158, column: 4, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 2156, column: 2)
!4625 = !DILocation(line: 2157, column: 4, scope: !4624)
!4626 = !DILocation(line: 2160, column: 2, scope: !4624)
!4627 = !DILocation(line: 2150, column: 42, scope: !4615)
!4628 = !DILocation(line: 2150, column: 3, scope: !4615)
!4629 = distinct !{!4629, !4460, !4630}
!4630 = !DILocation(line: 2161, column: 5, scope: !4461)
!4631 = !DILocation(line: 2162, column: 3, scope: !4419)
!4632 = !DILocation(line: 2165, column: 18, scope: !4419)
!4633 = !DILocation(line: 2167, column: 8, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 2167, column: 3)
!4635 = !DILocation(line: 0, scope: !4634)
!4636 = !DILocation(line: 2167, column: 3, scope: !4634)
!4637 = !DILocation(line: 2169, column: 11, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 2169, column: 11)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !3, line: 2168, column: 5)
!4640 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 2167, column: 3)
!4641 = !DILocation(line: 2169, column: 11, scope: !4639)
!4642 = !DILocation(line: 2171, column: 9, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 2170, column: 2)
!4644 = !DILocation(line: 2173, column: 16, scope: !4643)
!4645 = !DILocation(line: 2174, column: 28, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 2174, column: 8)
!4647 = !DILocation(line: 2174, column: 11, scope: !4646)
!4648 = !DILocation(line: 2174, column: 8, scope: !4643)
!4649 = !DILocation(line: 2175, column: 6, scope: !4646)
!4650 = !DILocation(line: 2180, column: 12, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 2180, column: 11)
!4652 = !DILocation(line: 2180, column: 11, scope: !4639)
!4653 = !DILocation(line: 2182, column: 12, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 2181, column: 2)
!4655 = !DILocation(line: 2182, column: 4, scope: !4654)
!4656 = !DILocation(line: 2190, column: 12, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 2190, column: 12)
!4658 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 2183, column: 6)
!4659 = !DILocation(line: 2191, column: 5, scope: !4657)
!4660 = !DILocation(line: 2191, column: 8, scope: !4657)
!4661 = !DILocation(line: 2190, column: 12, scope: !4658)
!4662 = !DILocation(line: 2192, column: 3, scope: !4657)
!4663 = !DILocation(line: 2198, column: 8, scope: !4658)
!4664 = !DILocation(line: 2199, column: 6, scope: !4658)
!4665 = !DILocation(line: 2167, column: 10, scope: !4634)
!4666 = !DILocation(line: 2202, column: 11, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 2202, column: 11)
!4668 = !DILocation(line: 2203, column: 4, scope: !4667)
!4669 = !DILocation(line: 2203, column: 7, scope: !4667)
!4670 = !DILocation(line: 2203, column: 24, scope: !4667)
!4671 = !DILocation(line: 2203, column: 29, scope: !4667)
!4672 = !DILocation(line: 2204, column: 4, scope: !4667)
!4673 = !DILocation(line: 2204, column: 10, scope: !4667)
!4674 = !DILocation(line: 2204, column: 32, scope: !4667)
!4675 = !DILocation(line: 2204, column: 35, scope: !4667)
!4676 = !DILocation(line: 2202, column: 11, scope: !4639)
!4677 = !DILocation(line: 2205, column: 6, scope: !4667)
!4678 = !DILocation(line: 2206, column: 19, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 2206, column: 11)
!4680 = !DILocation(line: 2206, column: 27, scope: !4679)
!4681 = !DILocation(line: 2206, column: 24, scope: !4679)
!4682 = !DILocation(line: 2206, column: 11, scope: !4639)
!4683 = !DILocation(line: 0, scope: !4639)
!4684 = !DILocation(line: 2167, column: 30, scope: !4640)
!4685 = !DILocation(line: 2167, column: 3, scope: !4640)
!4686 = distinct !{!4686, !4636, !4687}
!4687 = !DILocation(line: 2208, column: 5, scope: !4634)
!4688 = !DILocation(line: 2210, column: 23, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 2210, column: 7)
!4690 = !DILocation(line: 2210, column: 38, scope: !4689)
!4691 = !DILocation(line: 2210, column: 20, scope: !4689)
!4692 = !DILocation(line: 2210, column: 7, scope: !4419)
!4693 = !DILocation(line: 2211, column: 5, scope: !4689)
!4694 = !DILocation(line: 2215, column: 4, scope: !4419)
!4695 = distinct !DISubprogram(name: "rtl_dump_bb", scope: !3, file: !3, line: 1606, type: !2105, scopeLine: 1607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4696)
!4696 = !{!4697, !4698, !4699, !4700, !4701, !4702, !4703}
!4697 = !DILocalVariable(name: "bb", arg: 1, scope: !4695, file: !3, line: 1606, type: !1323)
!4698 = !DILocalVariable(name: "outf", arg: 2, scope: !4695, file: !3, line: 1606, type: !727)
!4699 = !DILocalVariable(name: "indent", arg: 3, scope: !4695, file: !3, line: 1606, type: !734)
!4700 = !DILocalVariable(name: "flags", arg: 4, scope: !4695, file: !3, line: 1606, type: !734)
!4701 = !DILocalVariable(name: "insn", scope: !4695, file: !3, line: 1608, type: !820)
!4702 = !DILocalVariable(name: "last", scope: !4695, file: !3, line: 1609, type: !820)
!4703 = !DILocalVariable(name: "s_indent", scope: !4695, file: !3, line: 1610, type: !736)
!4704 = !DILocation(line: 0, scope: !4695)
!4705 = !DILocation(line: 1612, column: 23, scope: !4695)
!4706 = !DILocation(line: 1613, column: 3, scope: !4695)
!4707 = !DILocation(line: 1614, column: 3, scope: !4695)
!4708 = !DILocation(line: 1614, column: 20, scope: !4695)
!4709 = !DILocation(line: 1616, column: 7, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 1616, column: 7)
!4711 = !DILocation(line: 1616, column: 7, scope: !4695)
!4712 = !DILocation(line: 1618, column: 7, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 1617, column: 5)
!4714 = !DILocation(line: 1619, column: 7, scope: !4713)
!4715 = !DILocation(line: 1620, column: 5, scope: !4713)
!4716 = !DILocation(line: 1622, column: 15, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 1622, column: 3)
!4718 = !DILocation(line: 1622, column: 36, scope: !4717)
!4719 = !DILocation(line: 1622, column: 8, scope: !4717)
!4720 = !DILocation(line: 0, scope: !4717)
!4721 = !DILocation(line: 1622, column: 66, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4717, file: !3, line: 1622, column: 3)
!4723 = !DILocation(line: 1622, column: 3, scope: !4717)
!4724 = !DILocation(line: 1624, column: 5, scope: !4722)
!4725 = !DILocation(line: 1623, column: 15, scope: !4722)
!4726 = !DILocation(line: 1622, column: 3, scope: !4722)
!4727 = distinct !{!4727, !4723, !4728}
!4728 = !DILocation(line: 1624, column: 33, scope: !4717)
!4729 = !DILocation(line: 1626, column: 7, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 1626, column: 7)
!4731 = !DILocation(line: 1626, column: 7, scope: !4695)
!4732 = !DILocation(line: 1628, column: 7, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 1627, column: 5)
!4734 = !DILocation(line: 1629, column: 7, scope: !4733)
!4735 = !DILocation(line: 1630, column: 5, scope: !4733)
!4736 = !DILocation(line: 1632, column: 1, scope: !4695)
!4737 = distinct !DISubprogram(name: "rtl_create_basic_block", scope: !3, file: !3, line: 328, type: !2109, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4738)
!4738 = !{!4739, !4740, !4741, !4742, !4743, !4744, !4745}
!4739 = !DILocalVariable(name: "headp", arg: 1, scope: !4737, file: !3, line: 328, type: !780)
!4740 = !DILocalVariable(name: "endp", arg: 2, scope: !4737, file: !3, line: 328, type: !780)
!4741 = !DILocalVariable(name: "after", arg: 3, scope: !4737, file: !3, line: 328, type: !1323)
!4742 = !DILocalVariable(name: "head", scope: !4737, file: !3, line: 330, type: !820)
!4743 = !DILocalVariable(name: "end", scope: !4737, file: !3, line: 330, type: !820)
!4744 = !DILocalVariable(name: "bb", scope: !4737, file: !3, line: 331, type: !1323)
!4745 = !DILocalVariable(name: "new_size", scope: !4746, file: !3, line: 336, type: !782)
!4746 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 335, column: 5)
!4747 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 334, column: 7)
!4748 = !DILocation(line: 0, scope: !4737)
!4749 = !DILocation(line: 330, column: 14, scope: !4737)
!4750 = !DILocation(line: 330, column: 33, scope: !4737)
!4751 = !DILocation(line: 334, column: 16, scope: !4747)
!4752 = !DILocation(line: 334, column: 7, scope: !4747)
!4753 = !DILocation(line: 334, column: 36, scope: !4747)
!4754 = !DILocation(line: 334, column: 33, scope: !4747)
!4755 = !DILocation(line: 334, column: 7, scope: !4737)
!4756 = !DILocation(line: 336, column: 25, scope: !4746)
!4757 = !DILocation(line: 336, column: 62, scope: !4746)
!4758 = !DILocation(line: 336, column: 67, scope: !4746)
!4759 = !DILocation(line: 336, column: 42, scope: !4746)
!4760 = !DILocation(line: 337, column: 7, scope: !4746)
!4761 = !DILocation(line: 338, column: 5, scope: !4746)
!4762 = !DILocation(line: 340, column: 3, scope: !4737)
!4763 = !DILocation(line: 340, column: 17, scope: !4737)
!4764 = !DILocation(line: 342, column: 8, scope: !4737)
!4765 = !DILocation(line: 343, column: 7, scope: !4737)
!4766 = !DILocation(line: 343, column: 11, scope: !4737)
!4767 = !DILocation(line: 344, column: 3, scope: !4737)
!4768 = distinct !DISubprogram(name: "rtl_redirect_edge_and_branch", scope: !3, file: !3, line: 1078, type: !2113, scopeLine: 1079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4769)
!4769 = !{!4770, !4771, !4772, !4773}
!4770 = !DILocalVariable(name: "e", arg: 1, scope: !4768, file: !3, line: 1078, type: !1340)
!4771 = !DILocalVariable(name: "target", arg: 2, scope: !4768, file: !3, line: 1078, type: !1323)
!4772 = !DILocalVariable(name: "ret", scope: !4768, file: !3, line: 1080, type: !1340)
!4773 = !DILocalVariable(name: "src", scope: !4768, file: !3, line: 1081, type: !1323)
!4774 = !DILocation(line: 0, scope: !4768)
!4775 = !DILocation(line: 1081, column: 24, scope: !4768)
!4776 = !DILocation(line: 1083, column: 10, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 1083, column: 7)
!4778 = !DILocation(line: 1083, column: 16, scope: !4777)
!4779 = !DILocation(line: 1083, column: 7, scope: !4768)
!4780 = !DILocation(line: 1086, column: 10, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 1086, column: 7)
!4782 = !DILocation(line: 1086, column: 15, scope: !4781)
!4783 = !DILocation(line: 1086, column: 7, scope: !4768)
!4784 = !DILocation(line: 1089, column: 14, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 1089, column: 7)
!4786 = !DILocation(line: 1089, column: 65, scope: !4785)
!4787 = !DILocation(line: 1089, column: 7, scope: !4768)
!4788 = !DILocation(line: 1091, column: 7, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 1090, column: 5)
!4790 = !DILocation(line: 1092, column: 7, scope: !4789)
!4791 = !DILocation(line: 1095, column: 9, scope: !4768)
!4792 = !DILocation(line: 1096, column: 8, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 1096, column: 7)
!4794 = !DILocation(line: 1096, column: 7, scope: !4768)
!4795 = !DILocation(line: 1099, column: 3, scope: !4768)
!4796 = !DILocation(line: 1100, column: 3, scope: !4768)
!4797 = !DILocation(line: 1101, column: 1, scope: !4768)
!4798 = distinct !DISubprogram(name: "rtl_redirect_edge_and_branch_force", scope: !3, file: !3, line: 1278, type: !2117, scopeLine: 1279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4799)
!4799 = !{!4800, !4801}
!4800 = !DILocalVariable(name: "e", arg: 1, scope: !4798, file: !3, line: 1278, type: !1340)
!4801 = !DILocalVariable(name: "target", arg: 2, scope: !4798, file: !3, line: 1278, type: !1323)
!4802 = !DILocation(line: 0, scope: !4798)
!4803 = !DILocation(line: 1280, column: 7, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 1280, column: 7)
!4805 = !DILocation(line: 1281, column: 7, scope: !4804)
!4806 = !DILocation(line: 1281, column: 13, scope: !4804)
!4807 = !DILocation(line: 1281, column: 18, scope: !4804)
!4808 = !DILocation(line: 1280, column: 7, scope: !4798)
!4809 = !DILocation(line: 1286, column: 23, scope: !4798)
!4810 = !DILocation(line: 1286, column: 3, scope: !4798)
!4811 = !DILocation(line: 1287, column: 10, scope: !4798)
!4812 = !DILocation(line: 1287, column: 3, scope: !4798)
!4813 = !DILocation(line: 1288, column: 1, scope: !4798)
!4814 = distinct !DISubprogram(name: "rtl_can_remove_branch_p", scope: !3, file: !3, line: 3160, type: !2121, scopeLine: 3161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4815)
!4815 = !{!4816, !4817, !4818, !4819, !4820}
!4816 = !DILocalVariable(name: "e", arg: 1, scope: !4814, file: !3, line: 3160, type: !2123)
!4817 = !DILocalVariable(name: "src", scope: !4814, file: !3, line: 3162, type: !2151)
!4818 = !DILocalVariable(name: "target", scope: !4814, file: !3, line: 3163, type: !2151)
!4819 = !DILocalVariable(name: "insn", scope: !4814, file: !3, line: 3164, type: !790)
!4820 = !DILocalVariable(name: "set", scope: !4814, file: !3, line: 3164, type: !790)
!4821 = !DILocation(line: 0, scope: !4814)
!4822 = !DILocation(line: 3162, column: 30, scope: !4814)
!4823 = !DILocation(line: 3163, column: 30, scope: !4814)
!4824 = !DILocation(line: 3163, column: 72, scope: !4814)
!4825 = !DILocation(line: 3164, column: 20, scope: !4814)
!4826 = !DILocation(line: 3167, column: 17, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 3167, column: 7)
!4828 = !DILocation(line: 3167, column: 14, scope: !4827)
!4829 = !DILocation(line: 3167, column: 7, scope: !4814)
!4830 = !DILocation(line: 3170, column: 10, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 3170, column: 7)
!4832 = !DILocation(line: 3170, column: 16, scope: !4831)
!4833 = !DILocation(line: 3170, column: 7, scope: !4814)
!4834 = !DILocation(line: 3173, column: 7, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 3173, column: 7)
!4836 = !DILocation(line: 3174, column: 7, scope: !4835)
!4837 = !DILocation(line: 3174, column: 10, scope: !4835)
!4838 = !DILocation(line: 3174, column: 32, scope: !4835)
!4839 = !DILocation(line: 3174, column: 29, scope: !4835)
!4840 = !DILocation(line: 3173, column: 7, scope: !4814)
!4841 = !DILocation(line: 3177, column: 8, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 3177, column: 7)
!4843 = !DILocation(line: 3178, column: 7, scope: !4842)
!4844 = !DILocation(line: 3178, column: 10, scope: !4842)
!4845 = !DILocation(line: 3177, column: 7, scope: !4814)
!4846 = !DILocation(line: 3181, column: 9, scope: !4814)
!4847 = !DILocation(line: 3182, column: 8, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 3182, column: 7)
!4849 = !DILocation(line: 3182, column: 12, scope: !4848)
!4850 = !DILocation(line: 3182, column: 15, scope: !4848)
!4851 = !DILocation(line: 3182, column: 7, scope: !4814)
!4852 = !DILocation(line: 3186, column: 1, scope: !4814)
!4853 = distinct !DISubprogram(name: "rtl_delete_block", scope: !3, file: !3, line: 364, type: !2128, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4854)
!4854 = !{!4855, !4856, !4857}
!4855 = !DILocalVariable(name: "b", arg: 1, scope: !4853, file: !3, line: 364, type: !1323)
!4856 = !DILocalVariable(name: "insn", scope: !4853, file: !3, line: 366, type: !820)
!4857 = !DILocalVariable(name: "end", scope: !4853, file: !3, line: 366, type: !820)
!4858 = !DILocation(line: 0, scope: !4853)
!4859 = !DILocation(line: 371, column: 10, scope: !4853)
!4860 = !DILocation(line: 373, column: 9, scope: !4853)
!4861 = !DILocation(line: 376, column: 3, scope: !4853)
!4862 = !DILocation(line: 376, column: 15, scope: !4853)
!4863 = !DILocation(line: 377, column: 3, scope: !4853)
!4864 = !DILocation(line: 380, column: 7, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 380, column: 7)
!4866 = !DILocation(line: 380, column: 7, scope: !4853)
!4867 = !DILocation(line: 381, column: 51, scope: !4865)
!4868 = !DILocation(line: 381, column: 5, scope: !4865)
!4869 = !DILocation(line: 382, column: 20, scope: !4853)
!4870 = !DILocation(line: 382, column: 3, scope: !4853)
!4871 = !DILocation(line: 383, column: 1, scope: !4853)
!4872 = distinct !DISubprogram(name: "rtl_split_block", scope: !3, file: !3, line: 522, type: !2132, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4873)
!4873 = !{!4874, !4875, !4876, !4877, !4878, !4879, !4880, !4885}
!4874 = !DILocalVariable(name: "bb", arg: 1, scope: !4872, file: !3, line: 522, type: !1323)
!4875 = !DILocalVariable(name: "insnp", arg: 2, scope: !4872, file: !3, line: 522, type: !780)
!4876 = !DILocalVariable(name: "new_bb", scope: !4872, file: !3, line: 524, type: !1323)
!4877 = !DILocalVariable(name: "insn", scope: !4872, file: !3, line: 525, type: !820)
!4878 = !DILocalVariable(name: "e", scope: !4872, file: !3, line: 526, type: !1340)
!4879 = !DILocalVariable(name: "ei", scope: !4872, file: !3, line: 527, type: !2043)
!4880 = !DILocalVariable(name: "next", scope: !4881, file: !3, line: 535, type: !820)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 534, column: 2)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 533, column: 11)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 530, column: 5)
!4884 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 529, column: 7)
!4885 = !DILocalVariable(name: "bb_", scope: !4886, file: !3, line: 566, type: !1323)
!4886 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 566, column: 3)
!4887 = !DILocation(line: 0, scope: !4872)
!4888 = !DILocation(line: 525, column: 14, scope: !4872)
!4889 = !DILocation(line: 526, column: 3, scope: !4872)
!4890 = !DILocation(line: 527, column: 3, scope: !4872)
!4891 = !DILocation(line: 529, column: 8, scope: !4884)
!4892 = !DILocation(line: 529, column: 7, scope: !4872)
!4893 = !DILocation(line: 531, column: 14, scope: !4883)
!4894 = !DILocation(line: 533, column: 11, scope: !4882)
!4895 = !DILocation(line: 533, column: 11, scope: !4883)
!4896 = !DILocation(line: 0, scope: !4881)
!4897 = !DILocation(line: 537, column: 11, scope: !4881)
!4898 = !DILocation(line: 543, column: 16, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 543, column: 8)
!4900 = !DILocation(line: 543, column: 13, scope: !4899)
!4901 = !DILocation(line: 544, column: 8, scope: !4899)
!4902 = !DILocation(line: 544, column: 11, scope: !4899)
!4903 = !DILocation(line: 545, column: 8, scope: !4899)
!4904 = !DILocation(line: 545, column: 11, scope: !4899)
!4905 = !DILocation(line: 543, column: 8, scope: !4881)
!4906 = !DILocation(line: 547, column: 8, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 546, column: 6)
!4908 = !DILocation(line: 547, column: 20, scope: !4907)
!4909 = !DILocation(line: 547, column: 35, scope: !4907)
!4910 = !DILocation(line: 547, column: 38, scope: !4907)
!4911 = !DILocation(line: 548, column: 10, scope: !4907)
!4912 = distinct !{!4912, !4906, !4911}
!4913 = !DILocation(line: 550, column: 12, scope: !4907)
!4914 = !DILocation(line: 551, column: 3, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 550, column: 12)
!4916 = !DILocation(line: 555, column: 9, scope: !4882)
!4917 = !DILocation(line: 561, column: 15, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 561, column: 7)
!4919 = !DILocation(line: 561, column: 12, scope: !4918)
!4920 = !DILocation(line: 561, column: 7, scope: !4872)
!4921 = !DILocation(line: 562, column: 5, scope: !4918)
!4922 = !DILocation(line: 565, column: 50, scope: !4872)
!4923 = !DILocation(line: 565, column: 32, scope: !4872)
!4924 = !DILocation(line: 565, column: 12, scope: !4872)
!4925 = !DILocation(line: 0, scope: !4886)
!4926 = !DILocation(line: 566, column: 3, scope: !4886)
!4927 = !DILocation(line: 567, column: 3, scope: !4872)
!4928 = !DILocation(line: 567, column: 15, scope: !4872)
!4929 = !DILocation(line: 570, column: 23, scope: !4872)
!4930 = !DILocation(line: 570, column: 11, scope: !4872)
!4931 = !DILocation(line: 570, column: 17, scope: !4872)
!4932 = !DILocation(line: 571, column: 13, scope: !4872)
!4933 = !DILocation(line: 572, column: 3, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 572, column: 3)
!4935 = !DILocation(line: 0, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 572, column: 3)
!4937 = !DILocation(line: 572, column: 3, scope: !4936)
!4938 = !DILocation(line: 573, column: 5, scope: !4936)
!4939 = !DILocation(line: 573, column: 8, scope: !4936)
!4940 = !DILocation(line: 573, column: 12, scope: !4936)
!4941 = distinct !{!4941, !4933, !4942}
!4942 = !DILocation(line: 573, column: 14, scope: !4934)
!4943 = !DILocation(line: 576, column: 3, scope: !4872)
!4944 = !DILocation(line: 578, column: 1, scope: !4872)
!4945 = !DILocation(line: 577, column: 3, scope: !4872)
!4946 = distinct !DISubprogram(name: "rtl_move_block_after", scope: !3, file: !3, line: 1342, type: !2136, scopeLine: 1344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4947)
!4947 = !{!4948, !4949}
!4948 = !DILocalVariable(name: "bb", arg: 1, scope: !4946, file: !3, line: 1342, type: !1323)
!4949 = !DILocalVariable(name: "after", arg: 2, scope: !4946, file: !3, line: 1343, type: !1323)
!4950 = !DILocation(line: 0, scope: !4946)
!4951 = !DILocation(line: 1345, column: 3, scope: !4946)
!4952 = distinct !DISubprogram(name: "rtl_can_merge_blocks", scope: !3, file: !3, line: 687, type: !2136, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4953)
!4953 = !{!4954, !4955}
!4954 = !DILocalVariable(name: "a", arg: 1, scope: !4952, file: !3, line: 687, type: !1323)
!4955 = !DILocalVariable(name: "b", arg: 2, scope: !4952, file: !3, line: 687, type: !1323)
!4956 = !DILocation(line: 0, scope: !4952)
!4957 = !DILocation(line: 699, column: 7, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 699, column: 7)
!4959 = !DILocation(line: 699, column: 27, scope: !4958)
!4960 = !DILocation(line: 699, column: 24, scope: !4958)
!4961 = !DILocation(line: 699, column: 7, scope: !4952)
!4962 = !DILocation(line: 703, column: 11, scope: !4952)
!4963 = !DILocation(line: 704, column: 4, scope: !4952)
!4964 = !DILocation(line: 704, column: 7, scope: !4952)
!4965 = !DILocation(line: 704, column: 23, scope: !4952)
!4966 = !DILocation(line: 705, column: 4, scope: !4952)
!4967 = !DILocation(line: 705, column: 7, scope: !4952)
!4968 = !DILocation(line: 706, column: 9, scope: !4952)
!4969 = !DILocation(line: 706, column: 4, scope: !4952)
!4970 = !DILocation(line: 708, column: 9, scope: !4952)
!4971 = !DILocation(line: 708, column: 31, scope: !4952)
!4972 = !DILocation(line: 708, column: 37, scope: !4952)
!4973 = !DILocation(line: 709, column: 4, scope: !4952)
!4974 = !DILocation(line: 709, column: 10, scope: !4952)
!4975 = !DILocation(line: 709, column: 18, scope: !4952)
!4976 = !DILocation(line: 710, column: 4, scope: !4952)
!4977 = !DILocation(line: 710, column: 12, scope: !4952)
!4978 = !DILocation(line: 710, column: 9, scope: !4952)
!4979 = !DILocation(line: 710, column: 28, scope: !4952)
!4980 = !DILocation(line: 710, column: 36, scope: !4952)
!4981 = !DILocation(line: 710, column: 33, scope: !4952)
!4982 = !DILocation(line: 713, column: 4, scope: !4952)
!4983 = !DILocation(line: 713, column: 9, scope: !4952)
!4984 = !DILocation(line: 714, column: 8, scope: !4952)
!4985 = !DILocation(line: 714, column: 12, scope: !4952)
!4986 = !DILocation(line: 715, column: 7, scope: !4952)
!4987 = !DILocation(line: 715, column: 35, scope: !4952)
!4988 = !DILocation(line: 703, column: 3, scope: !4952)
!4989 = !DILocation(line: 716, column: 1, scope: !4952)
!4990 = distinct !DISubprogram(name: "rtl_merge_blocks", scope: !3, file: !3, line: 584, type: !2141, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4991)
!4991 = !{!4992, !4993, !4994, !4995, !4996, !4997, !4998, !4999, !5000, !5001, !5002}
!4992 = !DILocalVariable(name: "a", arg: 1, scope: !4990, file: !3, line: 584, type: !1323)
!4993 = !DILocalVariable(name: "b", arg: 2, scope: !4990, file: !3, line: 584, type: !1323)
!4994 = !DILocalVariable(name: "b_head", scope: !4990, file: !3, line: 586, type: !820)
!4995 = !DILocalVariable(name: "b_end", scope: !4990, file: !3, line: 586, type: !820)
!4996 = !DILocalVariable(name: "a_end", scope: !4990, file: !3, line: 586, type: !820)
!4997 = !DILocalVariable(name: "del_first", scope: !4990, file: !3, line: 587, type: !820)
!4998 = !DILocalVariable(name: "del_last", scope: !4990, file: !3, line: 587, type: !820)
!4999 = !DILocalVariable(name: "b_debug_start", scope: !4990, file: !3, line: 588, type: !820)
!5000 = !DILocalVariable(name: "b_debug_end", scope: !4990, file: !3, line: 588, type: !820)
!5001 = !DILocalVariable(name: "b_empty", scope: !4990, file: !3, line: 589, type: !734)
!5002 = !DILocalVariable(name: "prev", scope: !5003, file: !3, line: 625, type: !820)
!5003 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 624, column: 5)
!5004 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 623, column: 7)
!5005 = !DILocation(line: 0, scope: !4990)
!5006 = !DILocation(line: 586, column: 16, scope: !4990)
!5007 = !DILocation(line: 586, column: 37, scope: !4990)
!5008 = !DILocation(line: 586, column: 57, scope: !4990)
!5009 = !DILocation(line: 591, column: 7, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 591, column: 7)
!5011 = !DILocation(line: 591, column: 7, scope: !4990)
!5012 = !DILocation(line: 592, column: 64, scope: !5010)
!5013 = !DILocation(line: 592, column: 74, scope: !5010)
!5014 = !DILocation(line: 592, column: 5, scope: !5010)
!5015 = !DILocation(line: 594, column: 3, scope: !4990)
!5016 = !DILocation(line: 594, column: 10, scope: !4990)
!5017 = !DILocation(line: 595, column: 13, scope: !4990)
!5018 = distinct !{!5018, !5015, !5017}
!5019 = !DILocation(line: 598, column: 7, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 598, column: 7)
!5021 = !DILocation(line: 598, column: 7, scope: !4990)
!5022 = !DILocation(line: 602, column: 18, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 602, column: 11)
!5024 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 599, column: 5)
!5025 = !DILocation(line: 602, column: 11, scope: !5024)
!5026 = !DILocation(line: 606, column: 16, scope: !5024)
!5027 = !DILocation(line: 0, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 611, column: 7)
!5029 = !DILocation(line: 611, column: 7, scope: !5028)
!5030 = !DILocation(line: 607, column: 5, scope: !5024)
!5031 = !DILocation(line: 611, column: 7, scope: !4990)
!5032 = !DILocation(line: 613, column: 18, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 613, column: 11)
!5034 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 612, column: 5)
!5035 = !DILocation(line: 613, column: 11, scope: !5034)
!5036 = !DILocation(line: 615, column: 13, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 615, column: 11)
!5038 = !DILocation(line: 615, column: 11, scope: !5034)
!5039 = !DILocation(line: 620, column: 5, scope: !5034)
!5040 = !DILocation(line: 605, column: 17, scope: !5024)
!5041 = !DILocation(line: 623, column: 7, scope: !5004)
!5042 = !DILocation(line: 623, column: 7, scope: !4990)
!5043 = !DILocation(line: 627, column: 12, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 627, column: 7)
!5045 = !DILocation(line: 0, scope: !5044)
!5046 = !DILocation(line: 0, scope: !5003)
!5047 = !DILocation(line: 628, column: 7, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 628, column: 6)
!5049 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 627, column: 7)
!5050 = !DILocation(line: 629, column: 6, scope: !5048)
!5051 = !DILocation(line: 629, column: 9, scope: !5048)
!5052 = !DILocation(line: 630, column: 6, scope: !5048)
!5053 = !DILocation(line: 630, column: 17, scope: !5048)
!5054 = !DILocation(line: 630, column: 14, scope: !5048)
!5055 = !DILocation(line: 628, column: 6, scope: !5049)
!5056 = !DILocation(line: 627, column: 7, scope: !5049)
!5057 = distinct !{!5057, !5058, !5059}
!5058 = !DILocation(line: 627, column: 7, scope: !5044)
!5059 = !DILocation(line: 631, column: 4, scope: !5044)
!5060 = !DILocation(line: 649, column: 15, scope: !5003)
!5061 = !DILocation(line: 650, column: 5, scope: !5003)
!5062 = !DILocation(line: 651, column: 12, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 651, column: 12)
!5064 = !DILocation(line: 651, column: 12, scope: !5004)
!5065 = !DILocation(line: 652, column: 5, scope: !5063)
!5066 = !DILocation(line: 0, scope: !5004)
!5067 = !DILocation(line: 656, column: 3, scope: !4990)
!5068 = !DILocation(line: 656, column: 15, scope: !4990)
!5069 = !DILocation(line: 657, column: 3, scope: !4990)
!5070 = !DILocation(line: 660, column: 8, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 660, column: 7)
!5072 = !DILocation(line: 660, column: 7, scope: !4990)
!5073 = !DILocation(line: 662, column: 7, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 661, column: 5)
!5075 = !DILocation(line: 665, column: 5, scope: !5074)
!5076 = !DILocation(line: 666, column: 18, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 666, column: 12)
!5078 = !DILocation(line: 666, column: 12, scope: !5071)
!5079 = !DILocation(line: 672, column: 11, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 672, column: 11)
!5081 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 667, column: 5)
!5082 = !DILocation(line: 672, column: 29, scope: !5080)
!5083 = !DILocation(line: 672, column: 11, scope: !5081)
!5084 = !DILocation(line: 673, column: 41, scope: !5080)
!5085 = !DILocation(line: 673, column: 2, scope: !5080)
!5086 = !DILocation(line: 675, column: 7, scope: !5081)
!5087 = !DILocation(line: 677, column: 5, scope: !5081)
!5088 = !DILocation(line: 0, scope: !5071)
!5089 = !DILocation(line: 679, column: 20, scope: !4990)
!5090 = !DILocation(line: 679, column: 3, scope: !4990)
!5091 = !DILocation(line: 680, column: 3, scope: !4990)
!5092 = !DILocation(line: 680, column: 14, scope: !4990)
!5093 = !DILocation(line: 681, column: 1, scope: !4990)
!5094 = distinct !DISubprogram(name: "rtl_split_edge", scope: !3, file: !3, line: 1356, type: !2164, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5095)
!5095 = !{!5096, !5097, !5098, !5099, !5102, !5103, !5107, !5110}
!5096 = !DILocalVariable(name: "edge_in", arg: 1, scope: !5094, file: !3, line: 1356, type: !1340)
!5097 = !DILocalVariable(name: "bb", scope: !5094, file: !3, line: 1358, type: !1323)
!5098 = !DILocalVariable(name: "before", scope: !5094, file: !3, line: 1359, type: !820)
!5099 = !DILocalVariable(name: "e", scope: !5100, file: !3, line: 1368, type: !1340)
!5100 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1367, column: 5)
!5101 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 1366, column: 7)
!5102 = !DILocalVariable(name: "ei", scope: !5100, file: !3, line: 1369, type: !2043)
!5103 = !DILocalVariable(name: "bb_", scope: !5104, file: !3, line: 1391, type: !1323)
!5104 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1391, column: 7)
!5105 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 1388, column: 5)
!5106 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 1387, column: 7)
!5107 = !DILocalVariable(name: "bb_", scope: !5108, file: !3, line: 1397, type: !1323)
!5108 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 1397, column: 7)
!5109 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 1394, column: 5)
!5110 = !DILocalVariable(name: "redirected", scope: !5111, file: !3, line: 1406, type: !1340)
!5111 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 1405, column: 5)
!5112 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 1404, column: 7)
!5113 = !DILocation(line: 0, scope: !5094)
!5114 = !DILocation(line: 1362, column: 3, scope: !5094)
!5115 = !DILocation(line: 1366, column: 17, scope: !5101)
!5116 = !DILocation(line: 1366, column: 23, scope: !5101)
!5117 = !DILocation(line: 1366, column: 40, scope: !5101)
!5118 = !DILocation(line: 1366, column: 7, scope: !5094)
!5119 = !DILocation(line: 1368, column: 7, scope: !5100)
!5120 = !DILocation(line: 1369, column: 7, scope: !5100)
!5121 = !DILocation(line: 1371, column: 7, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1371, column: 7)
!5123 = !DILocation(line: 0, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1371, column: 7)
!5125 = !DILocation(line: 1371, column: 7, scope: !5124)
!5126 = !DILocation(line: 0, scope: !5100)
!5127 = !DILocation(line: 1375, column: 11, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1375, column: 11)
!5129 = !DILocation(line: 1372, column: 6, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 1372, column: 6)
!5131 = !DILocation(line: 1372, column: 9, scope: !5130)
!5132 = !DILocation(line: 1372, column: 15, scope: !5130)
!5133 = !DILocation(line: 1372, column: 6, scope: !5124)
!5134 = distinct !{!5134, !5121, !5135}
!5135 = !DILocation(line: 1373, column: 4, scope: !5122)
!5136 = !DILocation(line: 1375, column: 11, scope: !5100)
!5137 = !DILocation(line: 1376, column: 2, scope: !5128)
!5138 = !DILocation(line: 1377, column: 5, scope: !5101)
!5139 = !DILocation(line: 1377, column: 5, scope: !5100)
!5140 = !DILocation(line: 1380, column: 16, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 1380, column: 7)
!5142 = !DILocation(line: 1380, column: 24, scope: !5141)
!5143 = !DILocation(line: 1380, column: 21, scope: !5141)
!5144 = !DILocation(line: 1380, column: 7, scope: !5094)
!5145 = !DILocation(line: 1381, column: 14, scope: !5141)
!5146 = !DILocation(line: 1381, column: 5, scope: !5141)
!5147 = !DILocation(line: 0, scope: !5141)
!5148 = !DILocation(line: 1387, column: 16, scope: !5106)
!5149 = !DILocation(line: 1387, column: 22, scope: !5106)
!5150 = !DILocation(line: 1387, column: 38, scope: !5106)
!5151 = !DILocation(line: 1387, column: 7, scope: !5094)
!5152 = !DILocation(line: 1389, column: 16, scope: !5105)
!5153 = !DILocation(line: 1390, column: 12, scope: !5105)
!5154 = !DILocation(line: 0, scope: !5104)
!5155 = !DILocation(line: 1391, column: 7, scope: !5104)
!5156 = !DILocation(line: 1392, column: 5, scope: !5105)
!5157 = !DILocation(line: 1395, column: 61, scope: !5109)
!5158 = !DILocation(line: 1395, column: 12, scope: !5109)
!5159 = !DILocation(line: 0, scope: !5108)
!5160 = !DILocation(line: 1397, column: 7, scope: !5108)
!5161 = !DILocation(line: 0, scope: !5106)
!5162 = !DILocation(line: 1400, column: 39, scope: !5094)
!5163 = !DILocation(line: 1400, column: 3, scope: !5094)
!5164 = !DILocation(line: 1404, column: 17, scope: !5112)
!5165 = !DILocation(line: 1404, column: 23, scope: !5112)
!5166 = !DILocation(line: 1404, column: 40, scope: !5112)
!5167 = !DILocation(line: 1404, column: 7, scope: !5094)
!5168 = !DILocation(line: 1406, column: 25, scope: !5111)
!5169 = !DILocation(line: 0, scope: !5111)
!5170 = !DILocation(line: 1407, column: 7, scope: !5111)
!5171 = !DILocation(line: 1410, column: 5, scope: !5112)
!5172 = !DILocation(line: 1412, column: 3, scope: !5094)
!5173 = distinct !DISubprogram(name: "rtl_make_forwarder_block", scope: !3, file: !3, line: 2824, type: !2168, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5174)
!5174 = !{!5175}
!5175 = !DILocalVariable(name: "fallthru", arg: 1, scope: !5173, file: !3, line: 2824, type: !1340)
!5176 = !DILocation(line: 0, scope: !5173)
!5177 = !DILocation(line: 2826, column: 1, scope: !5173)
!5178 = distinct !DISubprogram(name: "rtl_tidy_fallthru_edge", scope: !3, file: !3, line: 1294, type: !2168, scopeLine: 1295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5179)
!5179 = !{!5180, !5181, !5182, !5183}
!5180 = !DILocalVariable(name: "e", arg: 1, scope: !5178, file: !3, line: 1294, type: !1340)
!5181 = !DILocalVariable(name: "q", scope: !5178, file: !3, line: 1296, type: !820)
!5182 = !DILocalVariable(name: "b", scope: !5178, file: !3, line: 1297, type: !1323)
!5183 = !DILocalVariable(name: "c", scope: !5178, file: !3, line: 1297, type: !1323)
!5184 = !DILocation(line: 0, scope: !5178)
!5185 = !DILocation(line: 1297, column: 22, scope: !5178)
!5186 = !DILocation(line: 1297, column: 34, scope: !5178)
!5187 = !DILocation(line: 1309, column: 12, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 1309, column: 3)
!5189 = !DILocation(line: 0, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 1309, column: 3)
!5191 = !DILocation(line: 1309, column: 8, scope: !5188)
!5192 = !DILocation(line: 0, scope: !5188)
!5193 = !DILocation(line: 1309, column: 38, scope: !5190)
!5194 = !DILocation(line: 1309, column: 3, scope: !5188)
!5195 = !DILocation(line: 1310, column: 9, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 1310, column: 9)
!5197 = !DILocation(line: 1310, column: 9, scope: !5190)
!5198 = !DILocation(line: 1309, column: 3, scope: !5190)
!5199 = distinct !{!5199, !5194, !5200}
!5200 = !DILocation(line: 1311, column: 7, scope: !5188)
!5201 = !DILocation(line: 1317, column: 7, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 1317, column: 7)
!5203 = !DILocation(line: 1318, column: 7, scope: !5202)
!5204 = !DILocation(line: 1318, column: 10, scope: !5202)
!5205 = !DILocation(line: 1319, column: 7, scope: !5202)
!5206 = !DILocation(line: 1319, column: 11, scope: !5202)
!5207 = !DILocation(line: 1320, column: 4, scope: !5202)
!5208 = !DILocation(line: 1320, column: 7, scope: !5202)
!5209 = !DILocation(line: 1317, column: 7, scope: !5178)
!5210 = !DILocation(line: 1329, column: 11, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 1321, column: 5)
!5212 = !DILocation(line: 1330, column: 5, scope: !5211)
!5213 = !DILocation(line: 1333, column: 12, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 1333, column: 7)
!5215 = !DILocation(line: 1333, column: 9, scope: !5214)
!5216 = !DILocation(line: 1333, column: 7, scope: !5178)
!5217 = !DILocation(line: 1334, column: 24, scope: !5214)
!5218 = !DILocation(line: 1334, column: 5, scope: !5214)
!5219 = !DILocation(line: 1336, column: 6, scope: !5178)
!5220 = !DILocation(line: 1336, column: 12, scope: !5178)
!5221 = !DILocation(line: 1337, column: 1, scope: !5178)
!5222 = distinct !DISubprogram(name: "rtl_block_ends_with_call_p", scope: !3, file: !3, line: 2832, type: !2173, scopeLine: 2833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5223)
!5223 = !{!5224, !5225}
!5224 = !DILocalVariable(name: "bb", arg: 1, scope: !5222, file: !3, line: 2832, type: !1323)
!5225 = !DILocalVariable(name: "insn", scope: !5222, file: !3, line: 2834, type: !820)
!5226 = !DILocation(line: 0, scope: !5222)
!5227 = !DILocation(line: 2834, column: 14, scope: !5222)
!5228 = !DILocation(line: 2836, column: 3, scope: !5222)
!5229 = !DILocation(line: 2836, column: 11, scope: !5222)
!5230 = !DILocation(line: 2837, column: 3, scope: !5222)
!5231 = !DILocation(line: 2837, column: 14, scope: !5222)
!5232 = !DILocation(line: 2837, column: 11, scope: !5222)
!5233 = !DILocation(line: 2838, column: 3, scope: !5222)
!5234 = !DILocation(line: 2838, column: 7, scope: !5222)
!5235 = !DILocation(line: 2839, column: 7, scope: !5222)
!5236 = !DILocation(line: 2839, column: 10, scope: !5222)
!5237 = !DILocation(line: 2840, column: 10, scope: !5222)
!5238 = !DILocation(line: 2840, column: 7, scope: !5222)
!5239 = !DILocation(line: 2841, column: 12, scope: !5222)
!5240 = distinct !{!5240, !5228, !5239}
!5241 = !DILocation(line: 2842, column: 11, scope: !5222)
!5242 = !DILocation(line: 2842, column: 10, scope: !5222)
!5243 = !DILocation(line: 2842, column: 3, scope: !5222)
!5244 = distinct !DISubprogram(name: "rtl_block_ends_with_condjump_p", scope: !3, file: !3, line: 2848, type: !2156, scopeLine: 2849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5245)
!5245 = !{!5246}
!5246 = !DILocalVariable(name: "bb", arg: 1, scope: !5244, file: !3, line: 2848, type: !2151)
!5247 = !DILocation(line: 0, scope: !5244)
!5248 = !DILocation(line: 2850, column: 26, scope: !5244)
!5249 = !DILocation(line: 2850, column: 10, scope: !5244)
!5250 = !DILocation(line: 2850, column: 3, scope: !5244)
!5251 = distinct !DISubprogram(name: "rtl_flow_call_edges_add", scope: !3, file: !3, line: 2885, type: !2178, scopeLine: 2886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5252)
!5252 = !{!5253, !5254, !5255, !5256, !5257, !5258, !5261, !5262, !5265, !5269, !5270, !5271, !5277}
!5253 = !DILocalVariable(name: "blocks", arg: 1, scope: !5251, file: !3, line: 2885, type: !2180)
!5254 = !DILocalVariable(name: "i", scope: !5251, file: !3, line: 2887, type: !734)
!5255 = !DILocalVariable(name: "blocks_split", scope: !5251, file: !3, line: 2888, type: !734)
!5256 = !DILocalVariable(name: "last_bb", scope: !5251, file: !3, line: 2889, type: !734)
!5257 = !DILocalVariable(name: "check_last_block", scope: !5251, file: !3, line: 2890, type: !1019)
!5258 = !DILocalVariable(name: "bb", scope: !5259, file: !3, line: 2914, type: !1323)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 2913, column: 5)
!5260 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 2912, column: 7)
!5261 = !DILocalVariable(name: "insn", scope: !5259, file: !3, line: 2915, type: !820)
!5262 = !DILocalVariable(name: "e", scope: !5263, file: !3, line: 2924, type: !1340)
!5263 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 2923, column: 2)
!5264 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 2922, column: 11)
!5265 = !DILocalVariable(name: "bb", scope: !5266, file: !3, line: 2941, type: !1323)
!5266 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 2940, column: 5)
!5267 = distinct !DILexicalBlock(scope: !5268, file: !3, line: 2939, column: 3)
!5268 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 2939, column: 3)
!5269 = !DILocalVariable(name: "insn", scope: !5266, file: !3, line: 2942, type: !820)
!5270 = !DILocalVariable(name: "prev_insn", scope: !5266, file: !3, line: 2943, type: !820)
!5271 = !DILocalVariable(name: "e", scope: !5272, file: !3, line: 2956, type: !1340)
!5272 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 2955, column: 6)
!5273 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 2954, column: 8)
!5274 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 2952, column: 2)
!5275 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 2951, column: 7)
!5276 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 2951, column: 7)
!5277 = !DILocalVariable(name: "split_at_insn", scope: !5272, file: !3, line: 2957, type: !820)
!5278 = !DILocation(line: 0, scope: !5251)
!5279 = !DILocation(line: 2889, column: 17, scope: !5251)
!5280 = !DILocation(line: 2892, column: 7, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 2892, column: 7)
!5282 = !DILocation(line: 2892, column: 22, scope: !5281)
!5283 = !DILocation(line: 2892, column: 7, scope: !5251)
!5284 = !DILocation(line: 2895, column: 9, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 2895, column: 7)
!5286 = !DILocation(line: 2895, column: 7, scope: !5251)
!5287 = !DILocation(line: 2898, column: 24, scope: !5285)
!5288 = !DILocation(line: 2912, column: 7, scope: !5251)
!5289 = !DILocation(line: 2914, column: 24, scope: !5259)
!5290 = !DILocation(line: 2914, column: 40, scope: !5259)
!5291 = !DILocation(line: 0, scope: !5259)
!5292 = !DILocation(line: 2915, column: 18, scope: !5259)
!5293 = !DILocation(line: 2918, column: 7, scope: !5259)
!5294 = !DILocation(line: 2918, column: 22, scope: !5259)
!5295 = !DILocation(line: 2918, column: 19, scope: !5259)
!5296 = !DILocation(line: 2919, column: 7, scope: !5259)
!5297 = !DILocation(line: 2919, column: 10, scope: !5259)
!5298 = !DILocation(line: 2920, column: 9, scope: !5259)
!5299 = distinct !{!5299, !5293, !5298}
!5300 = !DILocation(line: 2922, column: 11, scope: !5264)
!5301 = !DILocation(line: 2922, column: 11, scope: !5259)
!5302 = !DILocation(line: 2926, column: 23, scope: !5263)
!5303 = !DILocation(line: 2926, column: 8, scope: !5263)
!5304 = !DILocation(line: 0, scope: !5263)
!5305 = !DILocation(line: 2927, column: 8, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 2927, column: 8)
!5307 = !DILocation(line: 2927, column: 8, scope: !5263)
!5308 = !DILocation(line: 2929, column: 38, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 2928, column: 6)
!5310 = !DILocation(line: 2929, column: 29, scope: !5309)
!5311 = !DILocation(line: 2929, column: 8, scope: !5309)
!5312 = !DILocation(line: 2930, column: 8, scope: !5309)
!5313 = !DILocation(line: 2931, column: 6, scope: !5309)
!5314 = !DILocation(line: 2939, column: 8, scope: !5268)
!5315 = !DILocation(line: 0, scope: !5268)
!5316 = !DILocation(line: 2939, column: 32, scope: !5267)
!5317 = !DILocation(line: 2939, column: 3, scope: !5268)
!5318 = !DILocation(line: 2941, column: 24, scope: !5266)
!5319 = !DILocation(line: 0, scope: !5266)
!5320 = !DILocation(line: 2945, column: 12, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 2945, column: 11)
!5322 = !DILocation(line: 2945, column: 11, scope: !5266)
!5323 = !DILocation(line: 2951, column: 19, scope: !5276)
!5324 = !DILocation(line: 2951, column: 12, scope: !5276)
!5325 = !DILocation(line: 0, scope: !5276)
!5326 = !DILocation(line: 2953, column: 16, scope: !5274)
!5327 = !DILocation(line: 2954, column: 8, scope: !5273)
!5328 = !DILocation(line: 2954, column: 8, scope: !5274)
!5329 = !DILocation(line: 0, scope: !5272)
!5330 = !DILocation(line: 2961, column: 12, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5272, file: !3, line: 2961, column: 12)
!5332 = !DILocation(line: 2961, column: 12, scope: !5272)
!5333 = !DILocation(line: 2962, column: 27, scope: !5331)
!5334 = !DILocation(line: 2962, column: 24, scope: !5331)
!5335 = !DILocation(line: 2963, column: 10, scope: !5331)
!5336 = !DILocation(line: 2963, column: 31, scope: !5331)
!5337 = !DILocation(line: 2963, column: 13, scope: !5331)
!5338 = !DILocation(line: 2962, column: 3, scope: !5331)
!5339 = !DILocation(line: 2964, column: 21, scope: !5331)
!5340 = distinct !{!5340, !5338, !5339}
!5341 = !DILocation(line: 2957, column: 12, scope: !5272)
!5342 = !DILocation(line: 2981, column: 29, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5272, file: !3, line: 2981, column: 12)
!5344 = !DILocation(line: 2981, column: 26, scope: !5343)
!5345 = !DILocation(line: 2981, column: 12, scope: !5272)
!5346 = !DILocation(line: 2983, column: 9, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 2982, column: 3)
!5348 = !DILocation(line: 2984, column: 9, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 2984, column: 9)
!5350 = !DILocation(line: 2984, column: 9, scope: !5347)
!5351 = !DILocation(line: 2986, column: 3, scope: !5347)
!5352 = !DILocation(line: 2988, column: 23, scope: !5272)
!5353 = !DILocation(line: 2988, column: 8, scope: !5272)
!5354 = !DILocation(line: 2989, column: 6, scope: !5272)
!5355 = !DILocation(line: 2991, column: 16, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 2991, column: 8)
!5357 = !DILocation(line: 2991, column: 13, scope: !5356)
!5358 = !DILocation(line: 2991, column: 8, scope: !5274)
!5359 = distinct !{!5359, !5360, !5361}
!5360 = !DILocation(line: 2951, column: 7, scope: !5276)
!5361 = !DILocation(line: 2993, column: 2, scope: !5276)
!5362 = !DILocation(line: 2939, column: 44, scope: !5267)
!5363 = !DILocation(line: 2939, column: 3, scope: !5267)
!5364 = distinct !{!5364, !5317, !5365}
!5365 = !DILocation(line: 2994, column: 5, scope: !5268)
!5366 = !DILocation(line: 2996, column: 7, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 2996, column: 7)
!5368 = !DILocation(line: 2948, column: 22, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 2948, column: 11)
!5370 = !DILocation(line: 2948, column: 11, scope: !5266)
!5371 = !DILocation(line: 2996, column: 7, scope: !5251)
!5372 = !DILocation(line: 2997, column: 5, scope: !5367)
!5373 = !DILocation(line: 3000, column: 1, scope: !5251)
!5374 = distinct !DISubprogram(name: "rtl_verify_flow_info_1", scope: !3, file: !3, line: 1804, type: !2101, scopeLine: 1805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5375)
!5375 = !{!5376, !5377, !5378, !5379, !5383, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394}
!5376 = !DILocalVariable(name: "x", scope: !5374, file: !3, line: 1806, type: !820)
!5377 = !DILocalVariable(name: "err", scope: !5374, file: !3, line: 1807, type: !734)
!5378 = !DILocalVariable(name: "bb", scope: !5374, file: !3, line: 1808, type: !1323)
!5379 = !DILocalVariable(name: "insn", scope: !5380, file: !3, line: 1813, type: !820)
!5380 = distinct !DILexicalBlock(scope: !5381, file: !3, line: 1812, column: 5)
!5381 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 1811, column: 3)
!5382 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 1811, column: 3)
!5383 = !DILocalVariable(name: "n_fallthru", scope: !5384, file: !3, line: 1852, type: !734)
!5384 = distinct !DILexicalBlock(scope: !5385, file: !3, line: 1851, column: 5)
!5385 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 1850, column: 3)
!5386 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 1850, column: 3)
!5387 = !DILocalVariable(name: "n_eh", scope: !5384, file: !3, line: 1852, type: !734)
!5388 = !DILocalVariable(name: "n_call", scope: !5384, file: !3, line: 1852, type: !734)
!5389 = !DILocalVariable(name: "n_abnormal", scope: !5384, file: !3, line: 1852, type: !734)
!5390 = !DILocalVariable(name: "n_branch", scope: !5384, file: !3, line: 1852, type: !734)
!5391 = !DILocalVariable(name: "e", scope: !5384, file: !3, line: 1853, type: !1340)
!5392 = !DILocalVariable(name: "fallthru", scope: !5384, file: !3, line: 1853, type: !1340)
!5393 = !DILocalVariable(name: "note", scope: !5384, file: !3, line: 1854, type: !820)
!5394 = !DILocalVariable(name: "ei", scope: !5384, file: !3, line: 1855, type: !2043)
!5395 = !DILocation(line: 0, scope: !5374)
!5396 = !DILocation(line: 1811, column: 3, scope: !5382)
!5397 = !DILocation(line: 1811, column: 3, scope: !5381)
!5398 = !DILocation(line: 1807, column: 7, scope: !5374)
!5399 = !DILocation(line: 0, scope: !5382)
!5400 = !DILocation(line: 1815, column: 17, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5380, file: !3, line: 1815, column: 11)
!5402 = !DILocation(line: 1815, column: 23, scope: !5401)
!5403 = !DILocation(line: 1815, column: 11, scope: !5380)
!5404 = !DILocation(line: 1817, column: 51, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 1816, column: 2)
!5406 = !DILocation(line: 1817, column: 4, scope: !5405)
!5407 = !DILocation(line: 1819, column: 2, scope: !5405)
!5408 = !DILocation(line: 1821, column: 7, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5380, file: !3, line: 1821, column: 7)
!5410 = !DILocation(line: 0, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 1823, column: 4)
!5412 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 1822, column: 6)
!5413 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 1821, column: 7)
!5414 = !DILocation(line: 0, scope: !5409)
!5415 = !DILocation(line: 0, scope: !5380)
!5416 = !DILocation(line: 1821, column: 7, scope: !5413)
!5417 = !DILocation(line: 1831, column: 26, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5380, file: !3, line: 1831, column: 7)
!5419 = !DILocation(line: 1822, column: 6, scope: !5412)
!5420 = !DILocation(line: 1822, column: 28, scope: !5412)
!5421 = !DILocation(line: 1822, column: 6, scope: !5413)
!5422 = !DILocation(line: 1825, column: 6, scope: !5411)
!5423 = !DILocation(line: 1826, column: 6, scope: !5411)
!5424 = !DILocation(line: 1826, column: 53, scope: !5411)
!5425 = !DILocation(line: 1827, column: 10, scope: !5411)
!5426 = !DILocation(line: 1824, column: 6, scope: !5411)
!5427 = !DILocation(line: 1829, column: 4, scope: !5411)
!5428 = distinct !{!5428, !5408, !5429}
!5429 = !DILocation(line: 1829, column: 4, scope: !5409)
!5430 = !DILocation(line: 1831, column: 31, scope: !5418)
!5431 = !DILocation(line: 1831, column: 12, scope: !5418)
!5432 = !DILocation(line: 0, scope: !5418)
!5433 = !DILocation(line: 1831, column: 7, scope: !5418)
!5434 = !DILocation(line: 1832, column: 7, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 1832, column: 6)
!5436 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 1831, column: 7)
!5437 = !DILocation(line: 1833, column: 6, scope: !5435)
!5438 = !DILocation(line: 1833, column: 9, scope: !5435)
!5439 = !DILocation(line: 1833, column: 31, scope: !5435)
!5440 = !DILocation(line: 1832, column: 6, scope: !5436)
!5441 = !DILocation(line: 1836, column: 6, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 1834, column: 4)
!5443 = !DILocation(line: 1836, column: 27, scope: !5442)
!5444 = !DILocation(line: 1835, column: 6, scope: !5442)
!5445 = !DILocation(line: 1838, column: 4, scope: !5442)
!5446 = !DILocation(line: 1831, column: 52, scope: !5436)
!5447 = !DILocation(line: 1831, column: 7, scope: !5436)
!5448 = distinct !{!5448, !5433, !5449}
!5449 = !DILocation(line: 1838, column: 4, scope: !5418)
!5450 = !DILocation(line: 1839, column: 26, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5380, file: !3, line: 1839, column: 7)
!5452 = !DILocation(line: 1839, column: 31, scope: !5451)
!5453 = !DILocation(line: 1839, column: 12, scope: !5451)
!5454 = !DILocation(line: 0, scope: !5451)
!5455 = !DILocation(line: 1839, column: 7, scope: !5451)
!5456 = !DILocation(line: 1840, column: 7, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1840, column: 6)
!5458 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 1839, column: 7)
!5459 = !DILocation(line: 1841, column: 6, scope: !5457)
!5460 = !DILocation(line: 1841, column: 9, scope: !5457)
!5461 = !DILocation(line: 1841, column: 31, scope: !5457)
!5462 = !DILocation(line: 1840, column: 6, scope: !5458)
!5463 = !DILocation(line: 1844, column: 6, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 1842, column: 4)
!5465 = !DILocation(line: 1844, column: 27, scope: !5464)
!5466 = !DILocation(line: 1843, column: 6, scope: !5464)
!5467 = !DILocation(line: 1846, column: 4, scope: !5464)
!5468 = !DILocation(line: 1839, column: 52, scope: !5458)
!5469 = !DILocation(line: 1839, column: 7, scope: !5458)
!5470 = distinct !{!5470, !5455, !5471}
!5471 = !DILocation(line: 1846, column: 4, scope: !5451)
!5472 = !DILocation(line: 0, scope: !5381)
!5473 = distinct !{!5473, !5396, !5474}
!5474 = !DILocation(line: 1847, column: 5, scope: !5382)
!5475 = !DILocation(line: 1850, column: 3, scope: !5386)
!5476 = !DILocation(line: 0, scope: !5384)
!5477 = !DILocation(line: 0, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1870, column: 7)
!5479 = !DILocation(line: 0, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 1870, column: 7)
!5481 = !DILocation(line: 1850, column: 3, scope: !5385)
!5482 = !DILocation(line: 0, scope: !5386)
!5483 = !DILocation(line: 1853, column: 7, scope: !5384)
!5484 = !DILocation(line: 1855, column: 7, scope: !5384)
!5485 = !DILocation(line: 1857, column: 11, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1857, column: 11)
!5487 = !DILocation(line: 1858, column: 4, scope: !5486)
!5488 = !DILocation(line: 1858, column: 15, scope: !5486)
!5489 = !DILocation(line: 1858, column: 13, scope: !5486)
!5490 = !DILocation(line: 1859, column: 4, scope: !5486)
!5491 = !DILocation(line: 1859, column: 7, scope: !5486)
!5492 = !DILocation(line: 1859, column: 30, scope: !5486)
!5493 = !DILocation(line: 1860, column: 4, scope: !5486)
!5494 = !DILocation(line: 1860, column: 23, scope: !5486)
!5495 = !DILocation(line: 1860, column: 7, scope: !5486)
!5496 = !DILocation(line: 1857, column: 11, scope: !5384)
!5497 = !DILocation(line: 1862, column: 8, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 1862, column: 8)
!5499 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1861, column: 2)
!5500 = !DILocation(line: 1862, column: 35, scope: !5498)
!5501 = !DILocation(line: 1862, column: 53, scope: !5498)
!5502 = !DILocation(line: 1862, column: 32, scope: !5498)
!5503 = !DILocation(line: 1863, column: 8, scope: !5498)
!5504 = !DILocation(line: 1863, column: 11, scope: !5498)
!5505 = !DILocation(line: 1863, column: 26, scope: !5498)
!5506 = !DILocation(line: 1862, column: 8, scope: !5499)
!5507 = !DILocation(line: 1866, column: 8, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 1864, column: 6)
!5509 = !DILocation(line: 1866, column: 33, scope: !5508)
!5510 = !DILocation(line: 1866, column: 51, scope: !5508)
!5511 = !DILocation(line: 1865, column: 8, scope: !5508)
!5512 = !DILocation(line: 1868, column: 6, scope: !5508)
!5513 = !DILocation(line: 1870, column: 7, scope: !5478)
!5514 = !DILocation(line: 1852, column: 49, scope: !5384)
!5515 = !DILocation(line: 1870, column: 7, scope: !5480)
!5516 = !DILocation(line: 1872, column: 8, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 1872, column: 8)
!5518 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 1871, column: 2)
!5519 = !DILocation(line: 1872, column: 11, scope: !5517)
!5520 = !DILocation(line: 1872, column: 17, scope: !5517)
!5521 = !DILocation(line: 1872, column: 8, scope: !5518)
!5522 = !DILocation(line: 1874, column: 18, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 1873, column: 6)
!5524 = !DILocation(line: 1875, column: 22, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 1875, column: 12)
!5526 = !DILocation(line: 1876, column: 5, scope: !5525)
!5527 = !DILocation(line: 0, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 1879, column: 6)
!5529 = !DILocation(line: 1881, column: 8, scope: !5528)
!5530 = !DILocation(line: 1876, column: 9, scope: !5525)
!5531 = !DILocation(line: 1876, column: 34, scope: !5525)
!5532 = !DILocation(line: 1876, column: 31, scope: !5525)
!5533 = !DILocation(line: 1877, column: 9, scope: !5525)
!5534 = !DILocation(line: 1877, column: 22, scope: !5525)
!5535 = !DILocation(line: 1877, column: 19, scope: !5525)
!5536 = !DILocation(line: 1878, column: 9, scope: !5525)
!5537 = !DILocation(line: 1878, column: 23, scope: !5525)
!5538 = !DILocation(line: 1878, column: 20, scope: !5525)
!5539 = !DILocation(line: 1875, column: 12, scope: !5523)
!5540 = !DILocation(line: 1881, column: 13, scope: !5528)
!5541 = !DILocation(line: 1880, column: 5, scope: !5528)
!5542 = !DILocation(line: 1886, column: 9, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 1886, column: 8)
!5544 = !DILocation(line: 0, scope: !5543)
!5545 = !DILocation(line: 1886, column: 12, scope: !5543)
!5546 = !DILocation(line: 1883, column: 3, scope: !5528)
!5547 = !DILocation(line: 1893, column: 11, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 1893, column: 8)
!5549 = !DILocation(line: 1886, column: 18, scope: !5543)
!5550 = !DILocation(line: 1890, column: 26, scope: !5543)
!5551 = !DILocation(line: 1886, column: 8, scope: !5518)
!5552 = !DILocation(line: 1893, column: 8, scope: !5518)
!5553 = !DILocation(line: 1896, column: 17, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 1896, column: 8)
!5555 = !DILocation(line: 1896, column: 8, scope: !5518)
!5556 = !DILocation(line: 1897, column: 10, scope: !5554)
!5557 = !DILocation(line: 1897, column: 6, scope: !5554)
!5558 = !DILocation(line: 1898, column: 13, scope: !5554)
!5559 = distinct !{!5559, !5513, !5560}
!5560 = !DILocation(line: 1900, column: 2, scope: !5478)
!5561 = !DILocation(line: 1902, column: 11, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1902, column: 11)
!5563 = !DILocation(line: 1902, column: 16, scope: !5562)
!5564 = !DILocation(line: 1902, column: 35, scope: !5562)
!5565 = !DILocation(line: 1902, column: 20, scope: !5562)
!5566 = !DILocation(line: 1902, column: 11, scope: !5384)
!5567 = !DILocation(line: 1904, column: 65, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 1903, column: 2)
!5569 = !DILocation(line: 1904, column: 4, scope: !5568)
!5570 = !DILocation(line: 1906, column: 2, scope: !5568)
!5571 = !DILocation(line: 1907, column: 16, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1907, column: 11)
!5573 = !DILocation(line: 1907, column: 11, scope: !5384)
!5574 = !DILocation(line: 1909, column: 39, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1908, column: 2)
!5576 = !DILocation(line: 1909, column: 4, scope: !5575)
!5577 = !DILocation(line: 1911, column: 2, scope: !5575)
!5578 = !DILocation(line: 1912, column: 11, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1912, column: 11)
!5580 = !DILocation(line: 1913, column: 4, scope: !5579)
!5581 = !DILocation(line: 1913, column: 9, scope: !5579)
!5582 = !DILocation(line: 1914, column: 8, scope: !5579)
!5583 = !DILocation(line: 1914, column: 21, scope: !5579)
!5584 = !DILocation(line: 1914, column: 25, scope: !5579)
!5585 = !DILocation(line: 1914, column: 29, scope: !5579)
!5586 = !DILocation(line: 1915, column: 8, scope: !5579)
!5587 = !DILocation(line: 1915, column: 27, scope: !5579)
!5588 = !DILocation(line: 1915, column: 11, scope: !5579)
!5589 = !DILocation(line: 1912, column: 11, scope: !5384)
!5590 = !DILocation(line: 1917, column: 60, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 1916, column: 2)
!5592 = !DILocation(line: 1917, column: 4, scope: !5591)
!5593 = !DILocation(line: 1919, column: 2, scope: !5591)
!5594 = !DILocation(line: 1920, column: 11, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1920, column: 11)
!5596 = !DILocation(line: 1920, column: 22, scope: !5595)
!5597 = !DILocation(line: 1920, column: 43, scope: !5595)
!5598 = !DILocation(line: 1920, column: 25, scope: !5595)
!5599 = !DILocation(line: 1920, column: 11, scope: !5384)
!5600 = !DILocation(line: 1922, column: 60, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 1921, column: 2)
!5602 = !DILocation(line: 1922, column: 4, scope: !5601)
!5603 = !DILocation(line: 1924, column: 2, scope: !5601)
!5604 = !DILocation(line: 1925, column: 20, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1925, column: 11)
!5606 = !DILocation(line: 1925, column: 25, scope: !5605)
!5607 = !DILocation(line: 1925, column: 46, scope: !5605)
!5608 = !DILocation(line: 1925, column: 28, scope: !5605)
!5609 = !DILocation(line: 1925, column: 11, scope: !5384)
!5610 = !DILocation(line: 1928, column: 8, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 1926, column: 2)
!5612 = !DILocation(line: 1927, column: 4, scope: !5611)
!5613 = !DILocation(line: 1930, column: 2, scope: !5611)
!5614 = !DILocation(line: 1931, column: 25, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1931, column: 11)
!5616 = !DILocation(line: 1931, column: 44, scope: !5615)
!5617 = !DILocation(line: 1931, column: 28, scope: !5615)
!5618 = !DILocation(line: 1932, column: 4, scope: !5615)
!5619 = !DILocation(line: 1932, column: 7, scope: !5615)
!5620 = !DILocation(line: 1932, column: 35, scope: !5615)
!5621 = !DILocation(line: 1932, column: 32, scope: !5615)
!5622 = !DILocation(line: 1931, column: 11, scope: !5384)
!5623 = !DILocation(line: 1935, column: 8, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 1933, column: 2)
!5625 = !DILocation(line: 1934, column: 4, scope: !5624)
!5626 = !DILocation(line: 1937, column: 2, scope: !5624)
!5627 = !DILocation(line: 1938, column: 11, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1938, column: 11)
!5629 = !DILocation(line: 1938, column: 18, scope: !5628)
!5630 = !DILocation(line: 1938, column: 22, scope: !5628)
!5631 = !DILocation(line: 1938, column: 11, scope: !5384)
!5632 = !DILocation(line: 1940, column: 56, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1939, column: 2)
!5634 = !DILocation(line: 1940, column: 4, scope: !5633)
!5635 = !DILocation(line: 1942, column: 2, scope: !5633)
!5636 = !DILocation(line: 1943, column: 11, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1943, column: 11)
!5638 = !DILocation(line: 1944, column: 4, scope: !5637)
!5639 = !DILocation(line: 1944, column: 9, scope: !5637)
!5640 = !DILocation(line: 1944, column: 40, scope: !5637)
!5641 = !DILocation(line: 1944, column: 30, scope: !5637)
!5642 = !DILocation(line: 1945, column: 9, scope: !5637)
!5643 = !DILocation(line: 1946, column: 8, scope: !5637)
!5644 = !DILocation(line: 1946, column: 11, scope: !5637)
!5645 = !DILocation(line: 1947, column: 8, scope: !5637)
!5646 = !DILocation(line: 1947, column: 29, scope: !5637)
!5647 = !DILocation(line: 1947, column: 11, scope: !5637)
!5648 = !DILocation(line: 1943, column: 11, scope: !5384)
!5649 = !DILocation(line: 1949, column: 57, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 1948, column: 2)
!5651 = !DILocation(line: 1949, column: 4, scope: !5650)
!5652 = !DILocation(line: 1951, column: 2, scope: !5650)
!5653 = !DILocation(line: 1953, column: 16, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1953, column: 7)
!5655 = !DILocation(line: 0, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 1959, column: 10)
!5657 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 1957, column: 4)
!5658 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 1956, column: 6)
!5659 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 1953, column: 7)
!5660 = !DILocation(line: 1953, column: 12, scope: !5654)
!5661 = !DILocation(line: 1953, column: 35, scope: !5659)
!5662 = !DILocation(line: 1936, column: 8, scope: !5624)
!5663 = !DILocation(line: 0, scope: !5654)
!5664 = !DILocation(line: 1953, column: 32, scope: !5659)
!5665 = !DILocation(line: 1953, column: 7, scope: !5654)
!5666 = !DILocation(line: 1956, column: 7, scope: !5658)
!5667 = !DILocation(line: 1956, column: 21, scope: !5658)
!5668 = !DILocation(line: 1956, column: 24, scope: !5658)
!5669 = !DILocation(line: 1956, column: 43, scope: !5658)
!5670 = !DILocation(line: 1956, column: 6, scope: !5659)
!5671 = !DILocation(line: 1958, column: 6, scope: !5657)
!5672 = !DILocation(line: 1959, column: 12, scope: !5656)
!5673 = !DILocation(line: 1959, column: 10, scope: !5657)
!5674 = !DILocation(line: 1960, column: 8, scope: !5656)
!5675 = !DILocation(line: 1966, column: 49, scope: !5656)
!5676 = !DILocation(line: 1964, column: 8, scope: !5656)
!5677 = !DILocation(line: 1953, column: 64, scope: !5659)
!5678 = !DILocation(line: 1953, column: 7, scope: !5659)
!5679 = distinct !{!5679, !5665, !5680}
!5680 = !DILocation(line: 1969, column: 4, scope: !5654)
!5681 = !DILocation(line: 1974, column: 11, scope: !5384)
!5682 = !DILocation(line: 1975, column: 11, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1975, column: 11)
!5684 = !DILocation(line: 1975, column: 11, scope: !5384)
!5685 = !DILocation(line: 1977, column: 20, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 1977, column: 8)
!5687 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 1976, column: 2)
!5688 = !DILocation(line: 1977, column: 8, scope: !5687)
!5689 = !DILocation(line: 1980, column: 12, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5686, file: !3, line: 1978, column: 6)
!5691 = !DILocation(line: 1979, column: 8, scope: !5690)
!5692 = !DILocation(line: 1982, column: 6, scope: !5690)
!5693 = !DILocation(line: 1984, column: 8, scope: !5687)
!5694 = !DILocation(line: 0, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1987, column: 11)
!5696 = !DILocation(line: 1987, column: 12, scope: !5695)
!5697 = !DILocation(line: 1985, column: 2, scope: !5687)
!5698 = !DILocation(line: 1987, column: 40, scope: !5695)
!5699 = !DILocation(line: 1987, column: 43, scope: !5695)
!5700 = !DILocation(line: 1987, column: 64, scope: !5695)
!5701 = !DILocation(line: 1987, column: 11, scope: !5384)
!5702 = !DILocation(line: 1990, column: 8, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5695, file: !3, line: 1988, column: 2)
!5704 = !DILocation(line: 1989, column: 4, scope: !5703)
!5705 = !DILocation(line: 1992, column: 2, scope: !5703)
!5706 = !DILocation(line: 1994, column: 11, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1994, column: 11)
!5708 = !DILocation(line: 1994, column: 23, scope: !5707)
!5709 = !DILocation(line: 1994, column: 11, scope: !5384)
!5710 = !DILocation(line: 1998, column: 7, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 1998, column: 2)
!5712 = !DILocation(line: 0, scope: !5711)
!5713 = !DILocation(line: 1998, column: 2, scope: !5711)
!5714 = !DILocation(line: 2000, column: 10, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 2000, column: 10)
!5716 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 1999, column: 4)
!5717 = distinct !DILexicalBlock(scope: !5711, file: !3, line: 1998, column: 2)
!5718 = !DILocation(line: 2000, column: 10, scope: !5716)
!5719 = !DILocation(line: 2003, column: 10, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 2001, column: 8)
!5721 = !DILocation(line: 2003, column: 28, scope: !5720)
!5722 = !DILocation(line: 2002, column: 3, scope: !5720)
!5723 = !DILocation(line: 2005, column: 8, scope: !5720)
!5724 = !DILocation(line: 2007, column: 15, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 2007, column: 10)
!5726 = !DILocation(line: 2007, column: 12, scope: !5725)
!5727 = !DILocation(line: 2007, column: 10, scope: !5716)
!5728 = !DILocation(line: 2010, column: 10, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 2010, column: 10)
!5730 = !DILocation(line: 2010, column: 10, scope: !5716)
!5731 = !DILocation(line: 2012, column: 36, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 2011, column: 8)
!5733 = !DILocation(line: 2012, column: 3, scope: !5732)
!5734 = !DILocation(line: 2013, column: 3, scope: !5732)
!5735 = !DILocation(line: 2014, column: 8, scope: !5732)
!5736 = !DILocation(line: 1998, column: 2, scope: !5717)
!5737 = distinct !{!5737, !5713, !5738}
!5738 = !DILocation(line: 2015, column: 4, scope: !5711)
!5739 = !DILocation(line: 2016, column: 5, scope: !5385)
!5740 = !DILocation(line: 0, scope: !5385)
!5741 = distinct !{!5741, !5475, !5742}
!5742 = !DILocation(line: 2016, column: 5, scope: !5386)
!5743 = !DILocation(line: 2019, column: 3, scope: !5374)
!5744 = distinct !DISubprogram(name: "cfg_layout_create_basic_block", scope: !3, file: !3, line: 348, type: !2109, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5745)
!5745 = !{!5746, !5747, !5748, !5749}
!5746 = !DILocalVariable(name: "head", arg: 1, scope: !5744, file: !3, line: 348, type: !780)
!5747 = !DILocalVariable(name: "end", arg: 2, scope: !5744, file: !3, line: 348, type: !780)
!5748 = !DILocalVariable(name: "after", arg: 3, scope: !5744, file: !3, line: 348, type: !1323)
!5749 = !DILocalVariable(name: "newbb", scope: !5744, file: !3, line: 350, type: !1323)
!5750 = !DILocation(line: 0, scope: !5744)
!5751 = !DILocation(line: 350, column: 23, scope: !5744)
!5752 = !DILocation(line: 352, column: 3, scope: !5744)
!5753 = distinct !DISubprogram(name: "cfg_layout_redirect_edge_and_branch", scope: !3, file: !3, line: 2470, type: !2113, scopeLine: 2471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5754)
!5754 = !{!5755, !5756, !5757, !5758, !5759, !5764}
!5755 = !DILocalVariable(name: "e", arg: 1, scope: !5753, file: !3, line: 2470, type: !1340)
!5756 = !DILocalVariable(name: "dest", arg: 2, scope: !5753, file: !3, line: 2470, type: !1323)
!5757 = !DILocalVariable(name: "src", scope: !5753, file: !3, line: 2472, type: !1323)
!5758 = !DILocalVariable(name: "ret", scope: !5753, file: !3, line: 2473, type: !1340)
!5759 = !DILocalVariable(name: "redirected", scope: !5760, file: !3, line: 2511, type: !1340)
!5760 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 2510, column: 2)
!5761 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 2507, column: 11)
!5762 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 2505, column: 5)
!5763 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 2504, column: 7)
!5764 = !DILocalVariable(name: "s", scope: !5765, file: !3, line: 2529, type: !1340)
!5765 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 2527, column: 2)
!5766 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 2526, column: 11)
!5767 = !DILocation(line: 0, scope: !5753)
!5768 = !DILocation(line: 2472, column: 24, scope: !5753)
!5769 = !DILocation(line: 2475, column: 10, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 2475, column: 7)
!5771 = !DILocation(line: 2475, column: 16, scope: !5770)
!5772 = !DILocation(line: 2475, column: 7, scope: !5753)
!5773 = !DILocation(line: 2478, column: 10, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 2478, column: 7)
!5775 = !DILocation(line: 2478, column: 15, scope: !5774)
!5776 = !DILocation(line: 2478, column: 7, scope: !5753)
!5777 = !DILocation(line: 2481, column: 17, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 2481, column: 7)
!5779 = !DILocation(line: 2481, column: 14, scope: !5778)
!5780 = !DILocation(line: 2482, column: 7, scope: !5778)
!5781 = !DILocation(line: 2482, column: 17, scope: !5778)
!5782 = !DILocation(line: 2482, column: 15, scope: !5778)
!5783 = !DILocation(line: 2481, column: 7, scope: !5753)
!5784 = !DILocation(line: 2488, column: 10, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 2488, column: 7)
!5786 = !DILocation(line: 2488, column: 17, scope: !5785)
!5787 = !DILocation(line: 0, scope: !5785)
!5788 = !DILocation(line: 2484, column: 7, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 2483, column: 5)
!5790 = !DILocation(line: 2485, column: 7, scope: !5789)
!5791 = !DILocation(line: 2488, column: 14, scope: !5785)
!5792 = !DILocation(line: 2489, column: 7, scope: !5785)
!5793 = !DILocation(line: 2504, column: 10, scope: !5763)
!5794 = !DILocation(line: 2489, column: 14, scope: !5785)
!5795 = !DILocation(line: 2489, column: 20, scope: !5785)
!5796 = !DILocation(line: 2489, column: 37, scope: !5785)
!5797 = !DILocation(line: 2489, column: 51, scope: !5785)
!5798 = !DILocation(line: 2488, column: 7, scope: !5753)
!5799 = !DILocation(line: 2491, column: 11, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 2491, column: 11)
!5801 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 2490, column: 5)
!5802 = !DILocation(line: 2491, column: 11, scope: !5801)
!5803 = !DILocation(line: 2493, column: 12, scope: !5800)
!5804 = !DILocation(line: 2493, column: 25, scope: !5800)
!5805 = !DILocation(line: 2492, column: 2, scope: !5800)
!5806 = !DILocation(line: 2495, column: 27, scope: !5801)
!5807 = !DILocation(line: 2495, column: 7, scope: !5801)
!5808 = !DILocation(line: 2496, column: 7, scope: !5801)
!5809 = !DILocation(line: 2497, column: 7, scope: !5801)
!5810 = !DILocation(line: 2504, column: 16, scope: !5763)
!5811 = !DILocation(line: 2504, column: 7, scope: !5753)
!5812 = !DILocation(line: 2507, column: 11, scope: !5761)
!5813 = !DILocation(line: 2508, column: 4, scope: !5761)
!5814 = !DILocation(line: 2508, column: 31, scope: !5761)
!5815 = !DILocation(line: 2508, column: 7, scope: !5761)
!5816 = !DILocation(line: 2507, column: 11, scope: !5762)
!5817 = !DILocation(line: 2513, column: 8, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 2513, column: 8)
!5819 = !DILocation(line: 2513, column: 8, scope: !5760)
!5820 = !DILocation(line: 2516, column: 11, scope: !5818)
!5821 = !DILocation(line: 2516, column: 16, scope: !5818)
!5822 = !DILocation(line: 2516, column: 26, scope: !5818)
!5823 = !DILocation(line: 2516, column: 32, scope: !5818)
!5824 = !DILocation(line: 2516, column: 45, scope: !5818)
!5825 = !DILocation(line: 2514, column: 6, scope: !5818)
!5826 = !DILocation(line: 2517, column: 13, scope: !5760)
!5827 = !DILocation(line: 2518, column: 17, scope: !5760)
!5828 = !DILocation(line: 0, scope: !5760)
!5829 = !DILocation(line: 2519, column: 4, scope: !5760)
!5830 = !DILocation(line: 2520, column: 13, scope: !5760)
!5831 = !DILocation(line: 2521, column: 24, scope: !5760)
!5832 = !DILocation(line: 2521, column: 4, scope: !5760)
!5833 = !DILocation(line: 2526, column: 11, scope: !5766)
!5834 = !DILocation(line: 2526, column: 35, scope: !5766)
!5835 = !DILocation(line: 2526, column: 11, scope: !5762)
!5836 = !DILocation(line: 2529, column: 13, scope: !5765)
!5837 = !DILocation(line: 0, scope: !5765)
!5838 = !DILocation(line: 2531, column: 11, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 2531, column: 8)
!5840 = !DILocation(line: 2531, column: 16, scope: !5839)
!5841 = !DILocation(line: 2532, column: 8, scope: !5839)
!5842 = !DILocation(line: 2532, column: 27, scope: !5839)
!5843 = !DILocation(line: 2532, column: 11, scope: !5839)
!5844 = !DILocation(line: 2533, column: 8, scope: !5839)
!5845 = !DILocation(line: 2533, column: 23, scope: !5839)
!5846 = !DILocation(line: 2533, column: 11, scope: !5839)
!5847 = !DILocation(line: 2531, column: 8, scope: !5765)
!5848 = !DILocation(line: 2534, column: 19, scope: !5839)
!5849 = !DILocation(line: 2534, column: 6, scope: !5839)
!5850 = !DILocation(line: 2536, column: 13, scope: !5762)
!5851 = !DILocation(line: 2537, column: 11, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 2537, column: 11)
!5853 = !DILocation(line: 2537, column: 11, scope: !5762)
!5854 = !DILocation(line: 2539, column: 7, scope: !5852)
!5855 = !DILocation(line: 2539, column: 12, scope: !5852)
!5856 = !DILocation(line: 2539, column: 22, scope: !5852)
!5857 = !DILocation(line: 2539, column: 28, scope: !5852)
!5858 = !DILocation(line: 2539, column: 41, scope: !5852)
!5859 = !DILocation(line: 2538, column: 2, scope: !5852)
!5860 = !DILocation(line: 2542, column: 11, scope: !5763)
!5861 = !DILocation(line: 0, scope: !5763)
!5862 = !DILocation(line: 2545, column: 3, scope: !5753)
!5863 = !DILocation(line: 2547, column: 3, scope: !5753)
!5864 = !DILocation(line: 2548, column: 3, scope: !5753)
!5865 = !DILocation(line: 2549, column: 1, scope: !5753)
!5866 = distinct !DISubprogram(name: "cfg_layout_redirect_edge_and_branch_force", scope: !3, file: !3, line: 2553, type: !2117, scopeLine: 2554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5867)
!5867 = !{!5868, !5869, !5870}
!5868 = !DILocalVariable(name: "e", arg: 1, scope: !5866, file: !3, line: 2553, type: !1340)
!5869 = !DILocalVariable(name: "dest", arg: 2, scope: !5866, file: !3, line: 2553, type: !1323)
!5870 = !DILocalVariable(name: "redirected", scope: !5866, file: !3, line: 2555, type: !1340)
!5871 = !DILocation(line: 0, scope: !5866)
!5872 = !DILocation(line: 2555, column: 21, scope: !5866)
!5873 = !DILocation(line: 2557, column: 3, scope: !5866)
!5874 = !DILocation(line: 2558, column: 3, scope: !5866)
!5875 = distinct !DISubprogram(name: "cfg_layout_delete_block", scope: !3, file: !3, line: 2564, type: !2128, scopeLine: 2565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5876)
!5876 = !{!5877, !5878, !5879, !5880, !5881, !5883}
!5877 = !DILocalVariable(name: "bb", arg: 1, scope: !5875, file: !3, line: 2564, type: !1323)
!5878 = !DILocalVariable(name: "insn", scope: !5875, file: !3, line: 2566, type: !820)
!5879 = !DILocalVariable(name: "next", scope: !5875, file: !3, line: 2566, type: !820)
!5880 = !DILocalVariable(name: "prev", scope: !5875, file: !3, line: 2566, type: !820)
!5881 = !DILocalVariable(name: "to", scope: !5875, file: !3, line: 2566, type: !5882)
!5882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!5883 = !DILocalVariable(name: "remaints", scope: !5875, file: !3, line: 2566, type: !820)
!5884 = !DILocation(line: 0, scope: !5875)
!5885 = !DILocation(line: 2566, column: 26, scope: !5875)
!5886 = !DILocation(line: 2568, column: 19, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 2568, column: 7)
!5888 = !DILocation(line: 2568, column: 7, scope: !5887)
!5889 = !DILocation(line: 2568, column: 7, scope: !5875)
!5890 = !DILocation(line: 2571, column: 11, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 2571, column: 11)
!5892 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 2569, column: 5)
!5893 = !DILocation(line: 2571, column: 11, scope: !5892)
!5894 = !DILocation(line: 2572, column: 2, scope: !5891)
!5895 = !DILocation(line: 2572, column: 19, scope: !5891)
!5896 = !DILocation(line: 2574, column: 2, scope: !5891)
!5897 = !DILocation(line: 2575, column: 7, scope: !5892)
!5898 = !DILocation(line: 2575, column: 38, scope: !5892)
!5899 = !DILocation(line: 2576, column: 21, scope: !5892)
!5900 = !DILocation(line: 2576, column: 26, scope: !5892)
!5901 = !DILocation(line: 0, scope: !5892)
!5902 = !DILocation(line: 2577, column: 7, scope: !5892)
!5903 = !DILocation(line: 2577, column: 14, scope: !5892)
!5904 = distinct !{!5904, !5902, !5905}
!5905 = !DILocation(line: 2578, column: 9, scope: !5892)
!5906 = !DILocation(line: 2579, column: 24, scope: !5892)
!5907 = !DILocation(line: 2580, column: 24, scope: !5892)
!5908 = !DILocation(line: 2582, column: 10, scope: !5875)
!5909 = !DILocation(line: 2581, column: 5, scope: !5892)
!5910 = !DILocation(line: 2583, column: 14, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 2583, column: 7)
!5912 = !DILocation(line: 2583, column: 19, scope: !5911)
!5913 = !DILocation(line: 2583, column: 7, scope: !5911)
!5914 = !DILocation(line: 2583, column: 7, scope: !5875)
!5915 = !DILocation(line: 2586, column: 7, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5911, file: !3, line: 2584, column: 5)
!5917 = !DILocation(line: 0, scope: !5916)
!5918 = !DILocation(line: 2588, column: 8, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 2588, column: 8)
!5920 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 2587, column: 2)
!5921 = !DILocation(line: 2588, column: 8, scope: !5920)
!5922 = !DILocation(line: 2590, column: 12, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 2590, column: 12)
!5924 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 2589, column: 6)
!5925 = !DILocation(line: 0, scope: !5923)
!5926 = !DILocation(line: 2590, column: 12, scope: !5924)
!5927 = !DILocation(line: 2591, column: 3, scope: !5923)
!5928 = !DILocation(line: 2591, column: 32, scope: !5923)
!5929 = !DILocation(line: 2593, column: 10, scope: !5923)
!5930 = !DILocation(line: 2593, column: 15, scope: !5923)
!5931 = !DILocation(line: 2593, column: 22, scope: !5923)
!5932 = !DILocation(line: 2594, column: 12, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 2594, column: 12)
!5934 = !DILocation(line: 2594, column: 12, scope: !5924)
!5935 = !DILocation(line: 2595, column: 34, scope: !5933)
!5936 = !DILocation(line: 2595, column: 3, scope: !5933)
!5937 = !DILocation(line: 2595, column: 32, scope: !5933)
!5938 = !DILocation(line: 2597, column: 8, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 2597, column: 8)
!5940 = !DILocation(line: 2597, column: 8, scope: !5920)
!5941 = !DILocation(line: 2599, column: 11, scope: !5920)
!5942 = distinct !{!5942, !5915, !5943}
!5943 = !DILocation(line: 2600, column: 2, scope: !5916)
!5944 = !DILocation(line: 2601, column: 18, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 2601, column: 11)
!5946 = !DILocation(line: 2601, column: 23, scope: !5945)
!5947 = !DILocation(line: 2601, column: 11, scope: !5945)
!5948 = !DILocation(line: 2601, column: 11, scope: !5916)
!5949 = !DILocation(line: 2603, column: 11, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 2602, column: 2)
!5951 = !DILocation(line: 2604, column: 4, scope: !5950)
!5952 = !DILocation(line: 2604, column: 21, scope: !5950)
!5953 = !DILocation(line: 2605, column: 4, scope: !5950)
!5954 = !DILocation(line: 2605, column: 35, scope: !5950)
!5955 = !DILocation(line: 2606, column: 4, scope: !5950)
!5956 = !DILocation(line: 0, scope: !5950)
!5957 = !DILocation(line: 2606, column: 11, scope: !5950)
!5958 = distinct !{!5958, !5955, !5959}
!5959 = !DILocation(line: 2607, column: 13, scope: !5950)
!5960 = !DILocation(line: 2608, column: 21, scope: !5950)
!5961 = !DILocation(line: 2609, column: 8, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 2609, column: 8)
!5963 = !DILocation(line: 2609, column: 8, scope: !5950)
!5964 = !DILocation(line: 2610, column: 6, scope: !5962)
!5965 = !DILocation(line: 2610, column: 23, scope: !5962)
!5966 = !DILocation(line: 2612, column: 6, scope: !5962)
!5967 = !DILocation(line: 2615, column: 11, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 2615, column: 7)
!5969 = !DILocation(line: 2615, column: 22, scope: !5968)
!5970 = !DILocation(line: 2615, column: 19, scope: !5968)
!5971 = !DILocation(line: 2615, column: 7, scope: !5875)
!5972 = !DILocation(line: 2616, column: 24, scope: !5968)
!5973 = !DILocation(line: 2616, column: 27, scope: !5968)
!5974 = !DILocation(line: 2616, column: 32, scope: !5968)
!5975 = !DILocation(line: 2616, column: 5, scope: !5968)
!5976 = !DILocation(line: 0, scope: !5968)
!5977 = !DILocation(line: 2620, column: 3, scope: !5875)
!5978 = !DILocation(line: 2622, column: 7, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 2622, column: 7)
!5980 = !DILocation(line: 2622, column: 7, scope: !5875)
!5981 = !DILocation(line: 2623, column: 12, scope: !5979)
!5982 = !DILocation(line: 2623, column: 5, scope: !5979)
!5983 = !DILocation(line: 2625, column: 12, scope: !5979)
!5984 = !DILocation(line: 0, scope: !5979)
!5985 = !DILocation(line: 2626, column: 7, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 2626, column: 7)
!5987 = !DILocation(line: 2626, column: 7, scope: !5875)
!5988 = !DILocation(line: 2627, column: 12, scope: !5986)
!5989 = !DILocation(line: 2627, column: 5, scope: !5986)
!5990 = !DILocation(line: 2629, column: 12, scope: !5986)
!5991 = !DILocation(line: 0, scope: !5986)
!5992 = !DILocation(line: 2631, column: 7, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 2631, column: 7)
!5994 = !DILocation(line: 2631, column: 12, scope: !5993)
!5995 = !DILocation(line: 2631, column: 15, scope: !5993)
!5996 = !DILocation(line: 2631, column: 32, scope: !5993)
!5997 = !DILocation(line: 2631, column: 7, scope: !5875)
!5998 = !DILocation(line: 2633, column: 18, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 2632, column: 5)
!6000 = !DILocation(line: 2635, column: 7, scope: !5999)
!6001 = !DILocation(line: 0, scope: !5999)
!6002 = !DILocation(line: 2635, column: 14, scope: !5999)
!6003 = distinct !{!6003, !6000, !6004}
!6004 = !DILocation(line: 2636, column: 9, scope: !5999)
!6005 = !DILocation(line: 2637, column: 26, scope: !5999)
!6006 = !DILocation(line: 2637, column: 24, scope: !5999)
!6007 = !DILocation(line: 2638, column: 11, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 2638, column: 11)
!6009 = !DILocation(line: 2638, column: 11, scope: !5999)
!6010 = !DILocation(line: 2639, column: 2, scope: !6008)
!6011 = !DILocation(line: 2639, column: 18, scope: !6008)
!6012 = !DILocation(line: 2640, column: 11, scope: !5999)
!6013 = !DILocation(line: 2641, column: 5, scope: !5999)
!6014 = !DILocation(line: 2642, column: 1, scope: !5875)
!6015 = distinct !DISubprogram(name: "cfg_layout_split_block", scope: !3, file: !3, line: 2457, type: !2132, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6016)
!6016 = !{!6017, !6018, !6019, !6020}
!6017 = !DILocalVariable(name: "bb", arg: 1, scope: !6015, file: !3, line: 2457, type: !1323)
!6018 = !DILocalVariable(name: "insnp", arg: 2, scope: !6015, file: !3, line: 2457, type: !780)
!6019 = !DILocalVariable(name: "insn", scope: !6015, file: !3, line: 2459, type: !820)
!6020 = !DILocalVariable(name: "new_bb", scope: !6015, file: !3, line: 2460, type: !1323)
!6021 = !DILocation(line: 0, scope: !6015)
!6022 = !DILocation(line: 2460, column: 24, scope: !6015)
!6023 = !DILocation(line: 2462, column: 32, scope: !6015)
!6024 = !DILocation(line: 2462, column: 35, scope: !6015)
!6025 = !DILocation(line: 2462, column: 40, scope: !6015)
!6026 = !DILocation(line: 2462, column: 11, scope: !6015)
!6027 = !DILocation(line: 2462, column: 14, scope: !6015)
!6028 = !DILocation(line: 2462, column: 19, scope: !6015)
!6029 = !DILocation(line: 2462, column: 26, scope: !6015)
!6030 = !DILocation(line: 2463, column: 10, scope: !6015)
!6031 = !DILocation(line: 2463, column: 15, scope: !6015)
!6032 = !DILocation(line: 2463, column: 22, scope: !6015)
!6033 = !DILocation(line: 2465, column: 3, scope: !6015)
!6034 = distinct !DISubprogram(name: "cfg_layout_can_merge_blocks_p", scope: !3, file: !3, line: 2647, type: !2136, scopeLine: 2648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6035)
!6035 = !{!6036, !6037}
!6036 = !DILocalVariable(name: "a", arg: 1, scope: !6034, file: !3, line: 2647, type: !1323)
!6037 = !DILocalVariable(name: "b", arg: 2, scope: !6034, file: !3, line: 2647, type: !1323)
!6038 = !DILocation(line: 0, scope: !6034)
!6039 = !DILocation(line: 2659, column: 7, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6034, file: !3, line: 2659, column: 7)
!6041 = !DILocation(line: 2659, column: 27, scope: !6040)
!6042 = !DILocation(line: 2659, column: 24, scope: !6040)
!6043 = !DILocation(line: 2659, column: 7, scope: !6034)
!6044 = !DILocation(line: 2663, column: 11, scope: !6034)
!6045 = !DILocation(line: 2664, column: 4, scope: !6034)
!6046 = !DILocation(line: 2664, column: 7, scope: !6034)
!6047 = !DILocation(line: 2664, column: 23, scope: !6034)
!6048 = !DILocation(line: 2665, column: 4, scope: !6034)
!6049 = !DILocation(line: 2665, column: 7, scope: !6034)
!6050 = !DILocation(line: 2665, column: 25, scope: !6034)
!6051 = !DILocation(line: 2666, column: 9, scope: !6034)
!6052 = !DILocation(line: 2666, column: 4, scope: !6034)
!6053 = !DILocation(line: 2668, column: 9, scope: !6034)
!6054 = !DILocation(line: 2668, column: 31, scope: !6034)
!6055 = !DILocation(line: 2668, column: 37, scope: !6034)
!6056 = !DILocation(line: 2669, column: 4, scope: !6034)
!6057 = !DILocation(line: 2669, column: 12, scope: !6034)
!6058 = !DILocation(line: 2669, column: 9, scope: !6034)
!6059 = !DILocation(line: 2669, column: 28, scope: !6034)
!6060 = !DILocation(line: 2669, column: 36, scope: !6034)
!6061 = !DILocation(line: 2669, column: 33, scope: !6034)
!6062 = !DILocation(line: 2673, column: 4, scope: !6034)
!6063 = !DILocation(line: 2673, column: 9, scope: !6034)
!6064 = !DILocation(line: 2674, column: 8, scope: !6034)
!6065 = !DILocation(line: 2674, column: 14, scope: !6034)
!6066 = !DILocation(line: 2674, column: 26, scope: !6034)
!6067 = !DILocation(line: 2674, column: 23, scope: !6034)
!6068 = !DILocation(line: 2675, column: 7, scope: !6034)
!6069 = !DILocation(line: 2674, column: 12, scope: !6034)
!6070 = !DILocation(line: 2675, column: 35, scope: !6034)
!6071 = !DILocation(line: 2663, column: 3, scope: !6034)
!6072 = !DILocation(line: 2676, column: 1, scope: !6034)
!6073 = distinct !DISubprogram(name: "cfg_layout_merge_blocks", scope: !3, file: !3, line: 2681, type: !2141, scopeLine: 2682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6074)
!6074 = !{!6075, !6076, !6077, !6080, !6081, !6082, !6085, !6086, !6089, !6091}
!6075 = !DILocalVariable(name: "a", arg: 1, scope: !6073, file: !3, line: 2681, type: !1323)
!6076 = !DILocalVariable(name: "b", arg: 2, scope: !6073, file: !3, line: 2681, type: !1323)
!6077 = !DILocalVariable(name: "insn", scope: !6078, file: !3, line: 2706, type: !820)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 2705, column: 5)
!6079 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 2704, column: 7)
!6080 = !DILocalVariable(name: "end", scope: !6078, file: !3, line: 2706, type: !820)
!6081 = !DILocalVariable(name: "goto_locus", scope: !6078, file: !3, line: 2707, type: !734)
!6082 = !DILocalVariable(name: "first", scope: !6083, file: !3, line: 2733, type: !820)
!6083 = distinct !DILexicalBlock(scope: !6084, file: !3, line: 2732, column: 5)
!6084 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 2731, column: 7)
!6085 = !DILocalVariable(name: "last", scope: !6083, file: !3, line: 2733, type: !820)
!6086 = !DILocalVariable(name: "first", scope: !6087, file: !3, line: 2743, type: !820)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 2742, column: 5)
!6088 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 2741, column: 7)
!6089 = !DILocalVariable(name: "insn", scope: !6090, file: !3, line: 2763, type: !820)
!6090 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 2762, column: 5)
!6091 = !DILocalVariable(name: "last", scope: !6092, file: !3, line: 2786, type: !820)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 2785, column: 2)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 2782, column: 11)
!6094 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 2781, column: 5)
!6095 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 2780, column: 7)
!6096 = !DILocation(line: 0, scope: !6073)
!6097 = !DILocation(line: 2687, column: 7, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 2687, column: 7)
!6099 = !DILocation(line: 2687, column: 7, scope: !6073)
!6100 = !DILocation(line: 2688, column: 64, scope: !6098)
!6101 = !DILocation(line: 2688, column: 74, scope: !6098)
!6102 = !DILocation(line: 2688, column: 5, scope: !6098)
!6103 = !DILocation(line: 2691, column: 7, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 2691, column: 7)
!6105 = !DILocation(line: 2691, column: 7, scope: !6073)
!6106 = !DILocation(line: 2693, column: 7, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 2692, column: 5)
!6108 = !DILocation(line: 2694, column: 5, scope: !6107)
!6109 = !DILocation(line: 2698, column: 7, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 2698, column: 7)
!6111 = !DILocation(line: 2698, column: 7, scope: !6073)
!6112 = !DILocation(line: 2699, column: 37, scope: !6110)
!6113 = !DILocation(line: 2699, column: 5, scope: !6110)
!6114 = !DILocation(line: 2700, column: 3, scope: !6073)
!6115 = !DILocation(line: 2704, column: 8, scope: !6079)
!6116 = !DILocation(line: 2704, column: 17, scope: !6079)
!6117 = !DILocation(line: 2704, column: 20, scope: !6079)
!6118 = !DILocation(line: 2704, column: 38, scope: !6079)
!6119 = !DILocation(line: 2704, column: 7, scope: !6073)
!6120 = !DILocation(line: 2706, column: 18, scope: !6078)
!6121 = !DILocation(line: 0, scope: !6078)
!6122 = !DILocation(line: 2706, column: 36, scope: !6078)
!6123 = !DILocation(line: 2707, column: 24, scope: !6078)
!6124 = !DILocation(line: 2707, column: 42, scope: !6078)
!6125 = !DILocation(line: 2709, column: 7, scope: !6078)
!6126 = !DILocation(line: 2709, column: 19, scope: !6078)
!6127 = !DILocation(line: 2709, column: 26, scope: !6078)
!6128 = !DILocation(line: 2709, column: 31, scope: !6078)
!6129 = !DILocation(line: 2709, column: 45, scope: !6078)
!6130 = !DILocation(line: 2709, column: 48, scope: !6078)
!6131 = !DILocation(line: 2709, column: 68, scope: !6078)
!6132 = !DILocation(line: 2710, column: 9, scope: !6078)
!6133 = distinct !{!6133, !6125, !6132}
!6134 = !DILocation(line: 2711, column: 23, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 2711, column: 11)
!6136 = !DILocation(line: 2711, column: 38, scope: !6135)
!6137 = !DILocation(line: 2711, column: 26, scope: !6135)
!6138 = !DILocation(line: 2711, column: 11, scope: !6078)
!6139 = !DILocation(line: 2715, column: 11, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 2714, column: 2)
!6141 = !DILocation(line: 2716, column: 10, scope: !6140)
!6142 = !DILocation(line: 2717, column: 4, scope: !6140)
!6143 = !DILocation(line: 0, scope: !6140)
!6144 = !DILocation(line: 2717, column: 16, scope: !6140)
!6145 = !DILocation(line: 2717, column: 23, scope: !6140)
!6146 = !DILocation(line: 2717, column: 27, scope: !6140)
!6147 = !DILocation(line: 2718, column: 13, scope: !6140)
!6148 = distinct !{!6148, !6142, !6147}
!6149 = !DILocation(line: 2719, column: 20, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 2719, column: 8)
!6151 = !DILocation(line: 2719, column: 23, scope: !6150)
!6152 = !DILocation(line: 2719, column: 43, scope: !6150)
!6153 = !DILocation(line: 2720, column: 8, scope: !6150)
!6154 = !DILocation(line: 2720, column: 11, scope: !6150)
!6155 = !DILocation(line: 2719, column: 8, scope: !6140)
!6156 = !DILocation(line: 0, scope: !6135)
!6157 = !DILocation(line: 2723, column: 11, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 2723, column: 11)
!6159 = !DILocation(line: 2723, column: 11, scope: !6078)
!6160 = !DILocation(line: 2725, column: 40, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 2724, column: 2)
!6162 = !DILocation(line: 2725, column: 52, scope: !6161)
!6163 = !DILocation(line: 2725, column: 17, scope: !6161)
!6164 = !DILocation(line: 2725, column: 4, scope: !6161)
!6165 = !DILocation(line: 2725, column: 15, scope: !6161)
!6166 = !DILocation(line: 2726, column: 4, scope: !6161)
!6167 = !DILocation(line: 2726, column: 30, scope: !6161)
!6168 = !DILocation(line: 2727, column: 2, scope: !6161)
!6169 = !DILocation(line: 2731, column: 13, scope: !6084)
!6170 = !DILocation(line: 2731, column: 18, scope: !6084)
!6171 = !DILocation(line: 2731, column: 7, scope: !6084)
!6172 = !DILocation(line: 2731, column: 7, scope: !6073)
!6173 = !DILocation(line: 2733, column: 19, scope: !6083)
!6174 = !DILocation(line: 0, scope: !6083)
!6175 = !DILocation(line: 2735, column: 14, scope: !6083)
!6176 = !DILocation(line: 2736, column: 26, scope: !6083)
!6177 = !DILocation(line: 2736, column: 7, scope: !6083)
!6178 = !DILocation(line: 2737, column: 13, scope: !6083)
!6179 = !DILocation(line: 2737, column: 18, scope: !6083)
!6180 = !DILocation(line: 2737, column: 25, scope: !6083)
!6181 = !DILocation(line: 2741, column: 33, scope: !6088)
!6182 = !DILocation(line: 2738, column: 5, scope: !6083)
!6183 = !DILocation(line: 2741, column: 7, scope: !6088)
!6184 = !DILocation(line: 2741, column: 30, scope: !6088)
!6185 = !DILocation(line: 0, scope: !6088)
!6186 = !DILocation(line: 2741, column: 7, scope: !6073)
!6187 = !DILocation(line: 2743, column: 19, scope: !6087)
!6188 = !DILocation(line: 0, scope: !6087)
!6189 = !DILocation(line: 2745, column: 37, scope: !6087)
!6190 = !DILocation(line: 2745, column: 7, scope: !6087)
!6191 = !DILocation(line: 2747, column: 12, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 2747, column: 11)
!6193 = !DILocation(line: 2747, column: 11, scope: !6087)
!6194 = !DILocation(line: 2748, column: 10, scope: !6192)
!6195 = !DILocation(line: 2749, column: 7, scope: !6087)
!6196 = !DILocation(line: 2748, column: 2, scope: !6192)
!6197 = !DILocation(line: 2750, column: 7, scope: !6087)
!6198 = !DILocation(line: 2750, column: 19, scope: !6087)
!6199 = !DILocation(line: 2754, column: 33, scope: !6087)
!6200 = !DILocation(line: 2755, column: 5, scope: !6087)
!6201 = !DILocation(line: 2754, column: 7, scope: !6087)
!6202 = !DILocation(line: 2758, column: 7, scope: !6087)
!6203 = !DILocation(line: 2759, column: 5, scope: !6087)
!6204 = !DILocation(line: 2765, column: 7, scope: !6090)
!6205 = !DILocation(line: 2767, column: 14, scope: !6090)
!6206 = !DILocation(line: 0, scope: !6090)
!6207 = !DILocation(line: 2769, column: 12, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 2769, column: 11)
!6209 = !DILocation(line: 2769, column: 11, scope: !6090)
!6210 = !DILocation(line: 2770, column: 9, scope: !6208)
!6211 = !DILocation(line: 2771, column: 7, scope: !6090)
!6212 = !DILocation(line: 2770, column: 2, scope: !6208)
!6213 = !DILocation(line: 2772, column: 7, scope: !6090)
!6214 = !DILocation(line: 2772, column: 19, scope: !6090)
!6215 = !DILocation(line: 2773, column: 20, scope: !6090)
!6216 = !DILocation(line: 2773, column: 7, scope: !6090)
!6217 = !DILocation(line: 2773, column: 18, scope: !6090)
!6218 = !DILocation(line: 2774, column: 7, scope: !6090)
!6219 = !DILocation(line: 2777, column: 20, scope: !6073)
!6220 = !DILocation(line: 2777, column: 3, scope: !6073)
!6221 = !DILocation(line: 2780, column: 13, scope: !6095)
!6222 = !DILocation(line: 2780, column: 18, scope: !6095)
!6223 = !DILocation(line: 2780, column: 7, scope: !6095)
!6224 = !DILocation(line: 2780, column: 7, scope: !6073)
!6225 = !DILocation(line: 2782, column: 18, scope: !6093)
!6226 = !DILocation(line: 2782, column: 23, scope: !6093)
!6227 = !DILocation(line: 2782, column: 12, scope: !6093)
!6228 = !DILocation(line: 2782, column: 11, scope: !6094)
!6229 = !DILocation(line: 2783, column: 20, scope: !6093)
!6230 = !DILocation(line: 2783, column: 2, scope: !6093)
!6231 = !DILocation(line: 2788, column: 4, scope: !6092)
!6232 = !DILocation(line: 0, scope: !6092)
!6233 = !DILocation(line: 2788, column: 11, scope: !6092)
!6234 = distinct !{!6234, !6231, !6235}
!6235 = !DILocation(line: 2789, column: 13, scope: !6092)
!6236 = !DILocation(line: 2790, column: 21, scope: !6092)
!6237 = !DILocation(line: 2791, column: 4, scope: !6092)
!6238 = !DILocation(line: 2791, column: 34, scope: !6092)
!6239 = !DILocation(line: 2793, column: 13, scope: !6094)
!6240 = !DILocation(line: 2793, column: 18, scope: !6094)
!6241 = !DILocation(line: 2793, column: 25, scope: !6094)
!6242 = !DILocation(line: 2794, column: 5, scope: !6094)
!6243 = !DILocation(line: 2796, column: 7, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 2796, column: 7)
!6245 = !DILocation(line: 2796, column: 7, scope: !6073)
!6246 = !DILocation(line: 2798, column: 10, scope: !6244)
!6247 = !DILocation(line: 2798, column: 20, scope: !6244)
!6248 = !DILocation(line: 2797, column: 5, scope: !6244)
!6249 = !DILocation(line: 2799, column: 1, scope: !6073)
!6250 = distinct !DISubprogram(name: "cfg_layout_split_edge", scope: !3, file: !3, line: 2804, type: !2164, scopeLine: 2805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6251)
!6251 = !{!6252, !6253, !6254, !6257}
!6252 = !DILocalVariable(name: "e", arg: 1, scope: !6250, file: !3, line: 2804, type: !1340)
!6253 = !DILocalVariable(name: "new_bb", scope: !6250, file: !3, line: 2806, type: !1323)
!6254 = !DILocalVariable(name: "bb_", scope: !6255, file: !3, line: 2812, type: !1323)
!6255 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 2812, column: 5)
!6256 = distinct !DILexicalBlock(scope: !6250, file: !3, line: 2811, column: 7)
!6257 = !DILocalVariable(name: "bb_", scope: !6258, file: !3, line: 2814, type: !1323)
!6258 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 2814, column: 5)
!6259 = !DILocation(line: 0, scope: !6250)
!6260 = !DILocation(line: 2807, column: 28, scope: !6250)
!6261 = !DILocation(line: 2807, column: 35, scope: !6250)
!6262 = !DILocation(line: 2807, column: 32, scope: !6250)
!6263 = !DILocation(line: 2807, column: 25, scope: !6250)
!6264 = !DILocation(line: 2808, column: 6, scope: !6250)
!6265 = !DILocation(line: 2808, column: 36, scope: !6250)
!6266 = !DILocation(line: 2809, column: 17, scope: !6250)
!6267 = !DILocation(line: 2807, column: 5, scope: !6250)
!6268 = !DILocation(line: 2811, column: 10, scope: !6256)
!6269 = !DILocation(line: 2811, column: 18, scope: !6256)
!6270 = !DILocation(line: 2811, column: 15, scope: !6256)
!6271 = !DILocation(line: 0, scope: !6256)
!6272 = !DILocation(line: 2811, column: 7, scope: !6250)
!6273 = !DILocation(line: 0, scope: !6255)
!6274 = !DILocation(line: 2812, column: 5, scope: !6255)
!6275 = !DILocation(line: 0, scope: !6258)
!6276 = !DILocation(line: 2815, column: 25, scope: !6250)
!6277 = !DILocation(line: 2815, column: 3, scope: !6250)
!6278 = !DILocation(line: 2816, column: 3, scope: !6250)
!6279 = !DILocation(line: 2818, column: 3, scope: !6250)
!6280 = distinct !DISubprogram(name: "rtl_lv_add_condition_to_bb", scope: !3, file: !3, line: 3008, type: !2204, scopeLine: 3011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6281)
!6281 = !{!6282, !6283, !6284, !6285, !6286, !6287, !6288, !6289, !6290, !6291, !6292}
!6282 = !DILocalVariable(name: "first_head", arg: 1, scope: !6280, file: !3, line: 3008, type: !1323)
!6283 = !DILocalVariable(name: "second_head", arg: 2, scope: !6280, file: !3, line: 3009, type: !1323)
!6284 = !DILocalVariable(name: "cond_bb", arg: 3, scope: !6280, file: !3, line: 3010, type: !1323)
!6285 = !DILocalVariable(name: "comp_rtx", arg: 4, scope: !6280, file: !3, line: 3010, type: !780)
!6286 = !DILocalVariable(name: "label", scope: !6280, file: !3, line: 3012, type: !820)
!6287 = !DILocalVariable(name: "seq", scope: !6280, file: !3, line: 3012, type: !820)
!6288 = !DILocalVariable(name: "jump", scope: !6280, file: !3, line: 3012, type: !820)
!6289 = !DILocalVariable(name: "op0", scope: !6280, file: !3, line: 3013, type: !820)
!6290 = !DILocalVariable(name: "op1", scope: !6280, file: !3, line: 3014, type: !820)
!6291 = !DILocalVariable(name: "comp", scope: !6280, file: !3, line: 3015, type: !397)
!6292 = !DILocalVariable(name: "mode", scope: !6280, file: !3, line: 3016, type: !5)
!6293 = !DILocation(line: 0, scope: !6280)
!6294 = !DILocation(line: 3013, column: 13, scope: !6280)
!6295 = !DILocation(line: 3014, column: 13, scope: !6280)
!6296 = !DILocation(line: 3015, column: 24, scope: !6280)
!6297 = !DILocation(line: 3019, column: 11, scope: !6280)
!6298 = !DILocation(line: 3020, column: 10, scope: !6280)
!6299 = !DILocation(line: 3021, column: 12, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 3021, column: 7)
!6301 = !DILocation(line: 3021, column: 7, scope: !6280)
!6302 = !DILocation(line: 3022, column: 12, scope: !6300)
!6303 = !DILocation(line: 3022, column: 5, scope: !6300)
!6304 = !DILocation(line: 3024, column: 3, scope: !6280)
!6305 = !DILocation(line: 3025, column: 9, scope: !6280)
!6306 = !DILocation(line: 3026, column: 9, scope: !6280)
!6307 = !DILocation(line: 3027, column: 3, scope: !6280)
!6308 = !DILocation(line: 3029, column: 10, scope: !6280)
!6309 = !DILocation(line: 3030, column: 3, scope: !6280)
!6310 = !DILocation(line: 3030, column: 21, scope: !6280)
!6311 = !DILocation(line: 3031, column: 3, scope: !6280)
!6312 = !DILocation(line: 3031, column: 22, scope: !6280)
!6313 = !DILocation(line: 3032, column: 9, scope: !6280)
!6314 = !DILocation(line: 3033, column: 3, scope: !6280)
!6315 = !DILocation(line: 3036, column: 24, scope: !6280)
!6316 = !DILocation(line: 3036, column: 3, scope: !6280)
!6317 = !DILocation(line: 3037, column: 1, scope: !6280)
!6318 = distinct !DISubprogram(name: "rtl_extract_cond_bb_edges", scope: !3, file: !3, line: 3044, type: !2212, scopeLine: 3046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6319)
!6319 = !{!6320, !6321, !6322, !6323}
!6320 = !DILocalVariable(name: "b", arg: 1, scope: !6318, file: !3, line: 3044, type: !1323)
!6321 = !DILocalVariable(name: "branch_edge", arg: 2, scope: !6318, file: !3, line: 3044, type: !2214)
!6322 = !DILocalVariable(name: "fallthru_edge", arg: 3, scope: !6318, file: !3, line: 3045, type: !2214)
!6323 = !DILocalVariable(name: "e", scope: !6318, file: !3, line: 3047, type: !1340)
!6324 = !DILocation(line: 0, scope: !6318)
!6325 = !DILocation(line: 3047, column: 12, scope: !6318)
!6326 = !DILocation(line: 3049, column: 10, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 3049, column: 7)
!6328 = !DILocation(line: 3049, column: 16, scope: !6327)
!6329 = !DILocation(line: 3049, column: 7, scope: !6318)
!6330 = !DILocation(line: 3051, column: 22, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 3050, column: 5)
!6332 = !DILocation(line: 3052, column: 22, scope: !6331)
!6333 = !DILocation(line: 3052, column: 20, scope: !6331)
!6334 = !DILocation(line: 3053, column: 5, scope: !6331)
!6335 = !DILocation(line: 3056, column: 20, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 3055, column: 5)
!6337 = !DILocation(line: 3057, column: 24, scope: !6336)
!6338 = !DILocation(line: 3057, column: 22, scope: !6336)
!6339 = !DILocation(line: 3059, column: 1, scope: !6318)
!6340 = distinct !DISubprogram(name: "ei_end_p", scope: !155, file: !155, line: 721, type: !6341, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6343)
!6341 = !DISubroutineType(types: !6342)
!6342 = !{!1019, !2043}
!6343 = !{!6344}
!6344 = !DILocalVariable(name: "i", arg: 1, scope: !6340, file: !155, line: 721, type: !2043)
!6345 = !DILocation(line: 723, column: 22, scope: !6340)
!6346 = !DILocation(line: 723, column: 19, scope: !6340)
!6347 = !DILocation(line: 723, column: 10, scope: !6340)
!6348 = !DILocation(line: 723, column: 3, scope: !6340)
!6349 = distinct !DISubprogram(name: "ei_edge", scope: !155, file: !155, line: 752, type: !3319, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6350)
!6350 = !{!6351}
!6351 = !DILocalVariable(name: "i", arg: 1, scope: !6349, file: !155, line: 752, type: !2043)
!6352 = !DILocation(line: 754, column: 10, scope: !6349)
!6353 = !DILocation(line: 754, column: 3, scope: !6349)
!6354 = distinct !DISubprogram(name: "ei_container", scope: !155, file: !155, line: 685, type: !6355, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6357)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{!1328, !2043}
!6357 = !{!6358}
!6358 = !DILocalVariable(name: "i", arg: 1, scope: !6354, file: !155, line: 685, type: !2043)
!6359 = !DILocation(line: 687, column: 3, scope: !6354)
!6360 = !DILocation(line: 688, column: 10, scope: !6354)
!6361 = !DILocation(line: 688, column: 3, scope: !6354)
!6362 = distinct !DISubprogram(name: "VEC_edge_base_unordered_remove", scope: !155, file: !155, line: 150, type: !6363, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6366)
!6363 = !DISubroutineType(types: !6364)
!6364 = !{!1340, !6365, !7}
!6365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!6366 = !{!6367, !6368, !6369, !6370}
!6367 = !DILocalVariable(name: "vec_", arg: 1, scope: !6362, file: !155, line: 150, type: !6365)
!6368 = !DILocalVariable(name: "ix_", arg: 2, scope: !6362, file: !155, line: 150, type: !7)
!6369 = !DILocalVariable(name: "slot_", scope: !6362, file: !155, line: 150, type: !2214)
!6370 = !DILocalVariable(name: "obj_", scope: !6362, file: !155, line: 150, type: !1340)
!6371 = !DILocation(line: 0, scope: !6362)
!6372 = !DILocation(line: 150, column: 1, scope: !6362)
!6373 = distinct !DISubprogram(name: "VEC_edge_gc_safe_push", scope: !155, file: !155, line: 151, type: !6374, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6376)
!6374 = !DISubroutineType(types: !6375)
!6375 = !{!2214, !2048, !1340}
!6376 = !{!6377, !6378}
!6377 = !DILocalVariable(name: "vec_", arg: 1, scope: !6373, file: !155, line: 151, type: !2048)
!6378 = !DILocalVariable(name: "obj_", arg: 2, scope: !6373, file: !155, line: 151, type: !1340)
!6379 = !DILocation(line: 0, scope: !6373)
!6380 = !DILocation(line: 151, column: 1, scope: !6373)
!6381 = distinct !DISubprogram(name: "VEC_edge_gc_reserve", scope: !155, file: !155, line: 151, type: !6382, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6384)
!6382 = !DISubroutineType(types: !6383)
!6383 = !{!734, !2048, !734}
!6384 = !{!6385, !6386, !6387}
!6385 = !DILocalVariable(name: "vec_", arg: 1, scope: !6381, file: !155, line: 151, type: !2048)
!6386 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6381, file: !155, line: 151, type: !734)
!6387 = !DILocalVariable(name: "extend", scope: !6381, file: !155, line: 151, type: !734)
!6388 = !DILocation(line: 0, scope: !6381)
!6389 = !DILocation(line: 151, column: 1, scope: !6381)
!6390 = !DILocation(line: 151, column: 1, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6381, file: !155, line: 151, column: 1)
!6392 = distinct !DISubprogram(name: "VEC_edge_base_quick_push", scope: !155, file: !155, line: 150, type: !6393, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6395)
!6393 = !DISubroutineType(types: !6394)
!6394 = !{!2214, !6365, !1340}
!6395 = !{!6396, !6397, !6398}
!6396 = !DILocalVariable(name: "vec_", arg: 1, scope: !6392, file: !155, line: 150, type: !6365)
!6397 = !DILocalVariable(name: "obj_", arg: 2, scope: !6392, file: !155, line: 150, type: !1340)
!6398 = !DILocalVariable(name: "slot_", scope: !6392, file: !155, line: 150, type: !2214)
!6399 = !DILocation(line: 0, scope: !6392)
!6400 = !DILocation(line: 150, column: 1, scope: !6392)
!6401 = distinct !DISubprogram(name: "VEC_edge_base_space", scope: !155, file: !155, line: 150, type: !6402, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6404)
!6402 = !DISubroutineType(types: !6403)
!6403 = !{!734, !6365, !734}
!6404 = !{!6405, !6406}
!6405 = !DILocalVariable(name: "vec_", arg: 1, scope: !6401, file: !155, line: 150, type: !6365)
!6406 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6401, file: !155, line: 150, type: !734)
!6407 = !DILocation(line: 0, scope: !6401)
!6408 = !DILocation(line: 150, column: 1, scope: !6401)
!6409 = distinct !DISubprogram(name: "VEC_basic_block_base_length", scope: !155, file: !155, line: 281, type: !6410, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6414)
!6410 = !DISubroutineType(types: !6411)
!6411 = !{!7, !6412}
!6412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6413, size: 64)
!6413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1460)
!6414 = !{!6415}
!6415 = !DILocalVariable(name: "vec_", arg: 1, scope: !6409, file: !155, line: 281, type: !6412)
!6416 = !DILocation(line: 0, scope: !6409)
!6417 = !DILocation(line: 281, column: 1, scope: !6409)
!6418 = distinct !DISubprogram(name: "VEC_basic_block_gc_safe_grow_cleared", scope: !155, file: !155, line: 282, type: !6419, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6422)
!6419 = !DISubroutineType(types: !6420)
!6420 = !{null, !6421, !734}
!6421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!6422 = !{!6423, !6424, !6425}
!6423 = !DILocalVariable(name: "vec_", arg: 1, scope: !6418, file: !155, line: 282, type: !6421)
!6424 = !DILocalVariable(name: "size_", arg: 2, scope: !6418, file: !155, line: 282, type: !734)
!6425 = !DILocalVariable(name: "oldsize", scope: !6418, file: !155, line: 282, type: !734)
!6426 = !DILocation(line: 0, scope: !6418)
!6427 = !DILocation(line: 282, column: 1, scope: !6418)
!6428 = distinct !DISubprogram(name: "VEC_basic_block_gc_safe_grow", scope: !155, file: !155, line: 282, type: !6419, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6429)
!6429 = !{!6430, !6431}
!6430 = !DILocalVariable(name: "vec_", arg: 1, scope: !6428, file: !155, line: 282, type: !6421)
!6431 = !DILocalVariable(name: "size_", arg: 2, scope: !6428, file: !155, line: 282, type: !734)
!6432 = !DILocation(line: 0, scope: !6428)
!6433 = !DILocation(line: 282, column: 1, scope: !6428)
!6434 = distinct !DISubprogram(name: "VEC_basic_block_base_address", scope: !155, file: !155, line: 281, type: !6435, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6437)
!6435 = !DISubroutineType(types: !6436)
!6436 = !{!2022, !3210}
!6437 = !{!6438}
!6438 = !DILocalVariable(name: "vec_", arg: 1, scope: !6434, file: !155, line: 281, type: !3210)
!6439 = !DILocation(line: 0, scope: !6434)
!6440 = !DILocation(line: 281, column: 1, scope: !6434)
!6441 = distinct !DISubprogram(name: "VEC_basic_block_gc_reserve_exact", scope: !155, file: !155, line: 282, type: !6442, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6444)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{!734, !6421, !734}
!6444 = !{!6445, !6446, !6447}
!6445 = !DILocalVariable(name: "vec_", arg: 1, scope: !6441, file: !155, line: 282, type: !6421)
!6446 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6441, file: !155, line: 282, type: !734)
!6447 = !DILocalVariable(name: "extend", scope: !6441, file: !155, line: 282, type: !734)
!6448 = !DILocation(line: 0, scope: !6441)
!6449 = !DILocation(line: 282, column: 1, scope: !6441)
!6450 = !DILocation(line: 282, column: 1, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6441, file: !155, line: 282, column: 1)
!6452 = distinct !DISubprogram(name: "VEC_basic_block_base_space", scope: !155, file: !155, line: 281, type: !6453, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6455)
!6453 = !DISubroutineType(types: !6454)
!6454 = !{!734, !3210, !734}
!6455 = !{!6456, !6457}
!6456 = !DILocalVariable(name: "vec_", arg: 1, scope: !6452, file: !155, line: 281, type: !3210)
!6457 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6452, file: !155, line: 281, type: !734)
!6458 = !DILocation(line: 0, scope: !6452)
!6459 = !DILocation(line: 281, column: 1, scope: !6452)
!6460 = distinct !DISubprogram(name: "redirect_branch_edge", scope: !3, file: !3, line: 1030, type: !2113, scopeLine: 1031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6461)
!6461 = !{!6462, !6463, !6464, !6465, !6466}
!6462 = !DILocalVariable(name: "e", arg: 1, scope: !6460, file: !3, line: 1030, type: !1340)
!6463 = !DILocalVariable(name: "target", arg: 2, scope: !6460, file: !3, line: 1030, type: !1323)
!6464 = !DILocalVariable(name: "old_label", scope: !6460, file: !3, line: 1032, type: !820)
!6465 = !DILocalVariable(name: "src", scope: !6460, file: !3, line: 1033, type: !1323)
!6466 = !DILocalVariable(name: "insn", scope: !6460, file: !3, line: 1034, type: !820)
!6467 = !DILocation(line: 0, scope: !6460)
!6468 = !DILocation(line: 1032, column: 19, scope: !6460)
!6469 = !DILocation(line: 1033, column: 24, scope: !6460)
!6470 = !DILocation(line: 1034, column: 14, scope: !6460)
!6471 = !DILocation(line: 1037, column: 10, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1037, column: 7)
!6473 = !DILocation(line: 1037, column: 16, scope: !6472)
!6474 = !DILocation(line: 1037, column: 7, scope: !6460)
!6475 = !DILocation(line: 1039, column: 13, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 1039, column: 12)
!6477 = !DILocation(line: 1039, column: 31, scope: !6476)
!6478 = !DILocation(line: 1039, column: 27, scope: !6476)
!6479 = !DILocation(line: 1042, column: 8, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1042, column: 7)
!6481 = !DILocation(line: 1042, column: 7, scope: !6460)
!6482 = !DILocation(line: 1044, column: 12, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 1044, column: 11)
!6484 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 1043, column: 5)
!6485 = !DILocation(line: 1044, column: 11, scope: !6484)
!6486 = !DILocation(line: 1051, column: 17, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 1051, column: 5)
!6488 = !DILocation(line: 1051, column: 10, scope: !6487)
!6489 = !DILocation(line: 1051, column: 40, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 1051, column: 5)
!6491 = !DILocation(line: 0, scope: !6487)
!6492 = !DILocation(line: 1051, column: 37, scope: !6490)
!6493 = !DILocation(line: 1051, column: 5, scope: !6487)
!6494 = !DILocation(line: 1053, column: 11, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 1053, column: 11)
!6496 = !DILocation(line: 1053, column: 25, scope: !6495)
!6497 = !DILocation(line: 1053, column: 29, scope: !6495)
!6498 = !DILocation(line: 1053, column: 11, scope: !6490)
!6499 = !DILocation(line: 1052, column: 10, scope: !6490)
!6500 = !DILocation(line: 0, scope: !6490)
!6501 = !DILocation(line: 1051, column: 5, scope: !6490)
!6502 = distinct !{!6502, !6493, !6503}
!6503 = !DILocation(line: 1054, column: 9, scope: !6487)
!6504 = !DILocation(line: 1056, column: 7, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1056, column: 7)
!6506 = !DILocation(line: 1056, column: 7, scope: !6460)
!6507 = !DILocation(line: 1058, column: 10, scope: !6505)
!6508 = !DILocation(line: 1058, column: 15, scope: !6505)
!6509 = !DILocation(line: 1058, column: 25, scope: !6505)
!6510 = !DILocation(line: 1058, column: 31, scope: !6505)
!6511 = !DILocation(line: 1058, column: 46, scope: !6505)
!6512 = !DILocation(line: 1057, column: 5, scope: !6505)
!6513 = !DILocation(line: 1060, column: 10, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1060, column: 7)
!6515 = !DILocation(line: 1060, column: 15, scope: !6514)
!6516 = !DILocation(line: 1060, column: 7, scope: !6460)
!6517 = !DILocation(line: 1061, column: 9, scope: !6514)
!6518 = !DILocation(line: 1061, column: 5, scope: !6514)
!6519 = !DILocation(line: 1064, column: 1, scope: !6460)
!6520 = distinct !DISubprogram(name: "patch_jump_insn", scope: !3, file: !3, line: 921, type: !6521, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6523)
!6521 = !DISubroutineType(types: !6522)
!6522 = !{!1019, !820, !820, !1323}
!6523 = !{!6524, !6525, !6526, !6527, !6528, !6531, !6532, !6533, !6536, !6537, !6538, !6539}
!6524 = !DILocalVariable(name: "insn", arg: 1, scope: !6520, file: !3, line: 921, type: !820)
!6525 = !DILocalVariable(name: "old_label", arg: 2, scope: !6520, file: !3, line: 921, type: !820)
!6526 = !DILocalVariable(name: "new_bb", arg: 3, scope: !6520, file: !3, line: 921, type: !1323)
!6527 = !DILocalVariable(name: "tmp", scope: !6520, file: !3, line: 923, type: !820)
!6528 = !DILocalVariable(name: "vec", scope: !6529, file: !3, line: 927, type: !823)
!6529 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 926, column: 5)
!6530 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 925, column: 7)
!6531 = !DILocalVariable(name: "j", scope: !6529, file: !3, line: 928, type: !734)
!6532 = !DILocalVariable(name: "new_label", scope: !6529, file: !3, line: 929, type: !820)
!6533 = !DILocalVariable(name: "i", scope: !6534, file: !3, line: 961, type: !734)
!6534 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 960, column: 5)
!6535 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 959, column: 12)
!6536 = !DILocalVariable(name: "n", scope: !6534, file: !3, line: 961, type: !734)
!6537 = !DILocalVariable(name: "new_label", scope: !6534, file: !3, line: 962, type: !820)
!6538 = !DILocalVariable(name: "note", scope: !6534, file: !3, line: 962, type: !820)
!6539 = !DILocalVariable(name: "old_ref", scope: !6540, file: !3, line: 970, type: !820)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 969, column: 2)
!6541 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 968, column: 7)
!6542 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 968, column: 7)
!6543 = !DILocation(line: 0, scope: !6520)
!6544 = !DILocation(line: 923, column: 3, scope: !6520)
!6545 = !DILocation(line: 925, column: 7, scope: !6530)
!6546 = !DILocation(line: 925, column: 7, scope: !6520)
!6547 = !DILocation(line: 929, column: 23, scope: !6529)
!6548 = !DILocation(line: 0, scope: !6529)
!6549 = !DILocation(line: 931, column: 21, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 931, column: 11)
!6551 = !DILocation(line: 931, column: 18, scope: !6550)
!6552 = !DILocation(line: 931, column: 11, scope: !6529)
!6553 = !DILocation(line: 933, column: 11, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 933, column: 11)
!6555 = !DILocation(line: 933, column: 36, scope: !6554)
!6556 = !DILocation(line: 933, column: 11, scope: !6529)
!6557 = !DILocation(line: 934, column: 8, scope: !6554)
!6558 = !DILocation(line: 934, column: 2, scope: !6554)
!6559 = !DILocation(line: 936, column: 8, scope: !6554)
!6560 = !DILocation(line: 0, scope: !6554)
!6561 = !DILocation(line: 938, column: 16, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 938, column: 7)
!6563 = !DILocation(line: 0, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 940, column: 4)
!6565 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 939, column: 6)
!6566 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 938, column: 7)
!6567 = !DILocation(line: 938, column: 12, scope: !6562)
!6568 = !DILocation(line: 0, scope: !6562)
!6569 = !DILocation(line: 938, column: 42, scope: !6566)
!6570 = !DILocation(line: 938, column: 7, scope: !6562)
!6571 = !DILocation(line: 939, column: 6, scope: !6565)
!6572 = !DILocation(line: 939, column: 35, scope: !6565)
!6573 = !DILocation(line: 939, column: 6, scope: !6566)
!6574 = !DILocation(line: 941, column: 27, scope: !6564)
!6575 = !DILocation(line: 941, column: 25, scope: !6564)
!6576 = !DILocation(line: 942, column: 6, scope: !6564)
!6577 = !DILocation(line: 943, column: 6, scope: !6564)
!6578 = !DILocation(line: 944, column: 4, scope: !6564)
!6579 = !DILocation(line: 938, column: 7, scope: !6566)
!6580 = distinct !{!6580, !6570, !6581}
!6581 = !DILocation(line: 944, column: 4, scope: !6562)
!6582 = !DILocation(line: 947, column: 18, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 947, column: 11)
!6584 = !DILocation(line: 947, column: 16, scope: !6583)
!6585 = !DILocation(line: 947, column: 37, scope: !6583)
!6586 = !DILocation(line: 948, column: 4, scope: !6583)
!6587 = !DILocation(line: 948, column: 7, scope: !6583)
!6588 = !DILocation(line: 948, column: 25, scope: !6583)
!6589 = !DILocation(line: 948, column: 22, scope: !6583)
!6590 = !DILocation(line: 949, column: 4, scope: !6583)
!6591 = !DILocation(line: 949, column: 7, scope: !6583)
!6592 = !DILocation(line: 949, column: 32, scope: !6583)
!6593 = !DILocation(line: 950, column: 4, scope: !6583)
!6594 = !DILocation(line: 950, column: 7, scope: !6583)
!6595 = !DILocation(line: 950, column: 42, scope: !6583)
!6596 = !DILocation(line: 951, column: 4, scope: !6583)
!6597 = !DILocation(line: 951, column: 7, scope: !6583)
!6598 = !DILocation(line: 951, column: 41, scope: !6583)
!6599 = !DILocation(line: 947, column: 11, scope: !6529)
!6600 = !DILocation(line: 953, column: 30, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 952, column: 2)
!6602 = !DILocation(line: 953, column: 4, scope: !6601)
!6603 = !DILocation(line: 953, column: 28, scope: !6601)
!6604 = !DILocation(line: 955, column: 4, scope: !6601)
!6605 = !DILocation(line: 956, column: 4, scope: !6601)
!6606 = !DILocation(line: 957, column: 2, scope: !6601)
!6607 = !DILocation(line: 959, column: 41, scope: !6535)
!6608 = !DILocation(line: 959, column: 19, scope: !6535)
!6609 = !DILocation(line: 959, column: 17, scope: !6535)
!6610 = !DILocation(line: 959, column: 58, scope: !6535)
!6611 = !DILocation(line: 959, column: 12, scope: !6530)
!6612 = !DILocation(line: 0, scope: !6534)
!6613 = !DILocation(line: 964, column: 21, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 964, column: 11)
!6615 = !DILocation(line: 964, column: 18, scope: !6614)
!6616 = !DILocation(line: 964, column: 11, scope: !6534)
!6617 = !DILocation(line: 961, column: 18, scope: !6534)
!6618 = !DILocation(line: 966, column: 19, scope: !6534)
!6619 = !DILocation(line: 0, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 973, column: 6)
!6621 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 972, column: 8)
!6622 = !DILocation(line: 968, column: 12, scope: !6542)
!6623 = !DILocation(line: 0, scope: !6542)
!6624 = !DILocation(line: 968, column: 21, scope: !6541)
!6625 = !DILocation(line: 968, column: 7, scope: !6542)
!6626 = !DILocation(line: 970, column: 18, scope: !6540)
!6627 = !DILocation(line: 0, scope: !6540)
!6628 = !DILocation(line: 971, column: 4, scope: !6540)
!6629 = !DILocation(line: 972, column: 8, scope: !6621)
!6630 = !DILocation(line: 972, column: 26, scope: !6621)
!6631 = !DILocation(line: 972, column: 8, scope: !6540)
!6632 = !DILocation(line: 975, column: 5, scope: !6620)
!6633 = !DILocation(line: 974, column: 8, scope: !6620)
!6634 = !DILocation(line: 975, column: 3, scope: !6620)
!6635 = !DILocation(line: 976, column: 8, scope: !6620)
!6636 = !DILocation(line: 977, column: 8, scope: !6620)
!6637 = !DILocation(line: 978, column: 6, scope: !6620)
!6638 = !DILocation(line: 968, column: 26, scope: !6541)
!6639 = !DILocation(line: 968, column: 7, scope: !6541)
!6640 = distinct !{!6640, !6625, !6641}
!6641 = !DILocation(line: 979, column: 2, scope: !6542)
!6642 = !DILocation(line: 981, column: 11, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 981, column: 11)
!6644 = !DILocation(line: 981, column: 29, scope: !6643)
!6645 = !DILocation(line: 981, column: 11, scope: !6534)
!6646 = !DILocation(line: 983, column: 22, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 982, column: 2)
!6648 = !DILocation(line: 984, column: 11, scope: !6647)
!6649 = !DILocation(line: 985, column: 8, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 985, column: 8)
!6651 = !DILocation(line: 985, column: 8, scope: !6647)
!6652 = !DILocation(line: 986, column: 6, scope: !6650)
!6653 = !DILocation(line: 990, column: 11, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 989, column: 2)
!6655 = !DILocation(line: 991, column: 8, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 991, column: 8)
!6657 = !DILocation(line: 991, column: 8, scope: !6654)
!6658 = !DILocation(line: 992, column: 6, scope: !6656)
!6659 = !DILocation(line: 993, column: 8, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 993, column: 8)
!6661 = !DILocation(line: 993, column: 26, scope: !6660)
!6662 = !DILocation(line: 994, column: 8, scope: !6660)
!6663 = !DILocation(line: 994, column: 12, scope: !6660)
!6664 = !DILocation(line: 993, column: 8, scope: !6654)
!6665 = !DILocation(line: 995, column: 6, scope: !6660)
!6666 = !DILocation(line: 1003, column: 11, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1003, column: 11)
!6668 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 999, column: 5)
!6669 = !DILocation(line: 1005, column: 4, scope: !6667)
!6670 = !DILocation(line: 1005, column: 7, scope: !6667)
!6671 = !DILocation(line: 1003, column: 11, scope: !6668)
!6672 = !DILocation(line: 1008, column: 12, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1008, column: 11)
!6674 = !DILocation(line: 1008, column: 39, scope: !6673)
!6675 = !DILocation(line: 0, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 1009, column: 2)
!6677 = !DILocation(line: 1011, column: 4, scope: !6676)
!6678 = !DILocation(line: 1008, column: 42, scope: !6673)
!6679 = !DILocation(line: 1008, column: 60, scope: !6673)
!6680 = !DILocation(line: 1008, column: 11, scope: !6668)
!6681 = !DILocation(line: 1016, column: 30, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1016, column: 8)
!6683 = !DILocation(line: 1016, column: 9, scope: !6682)
!6684 = !DILocation(line: 1016, column: 8, scope: !6676)
!6685 = !DILocation(line: 1018, column: 8, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 1017, column: 6)
!6687 = !DILocation(line: 1023, column: 3, scope: !6520)
!6688 = !DILocation(line: 1024, column: 1, scope: !6520)
!6689 = distinct !DISubprogram(name: "first_insn_after_basic_block_note", scope: !3, file: !3, line: 502, type: !3442, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6690)
!6690 = !{!6691, !6692}
!6691 = !DILocalVariable(name: "block", arg: 1, scope: !6689, file: !3, line: 502, type: !1323)
!6692 = !DILocalVariable(name: "insn", scope: !6689, file: !3, line: 504, type: !820)
!6693 = !DILocation(line: 0, scope: !6689)
!6694 = !DILocation(line: 507, column: 10, scope: !6689)
!6695 = !DILocation(line: 509, column: 12, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 509, column: 7)
!6697 = !DILocation(line: 509, column: 7, scope: !6689)
!6698 = !DILocation(line: 511, column: 7, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 511, column: 7)
!6700 = !DILocation(line: 511, column: 7, scope: !6689)
!6701 = !DILocation(line: 512, column: 12, scope: !6699)
!6702 = !DILocation(line: 513, column: 3, scope: !6689)
!6703 = !DILocation(line: 512, column: 5, scope: !6699)
!6704 = !DILocation(line: 515, column: 10, scope: !6689)
!6705 = !DILocation(line: 515, column: 3, scope: !6689)
!6706 = !DILocation(line: 516, column: 1, scope: !6689)
!6707 = distinct !DISubprogram(name: "single_succ", scope: !155, file: !155, line: 663, type: !6708, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6710)
!6708 = !DISubroutineType(types: !6709)
!6709 = !{!1323, !2151}
!6710 = !{!6711}
!6711 = !DILocalVariable(name: "bb", arg: 1, scope: !6707, file: !155, line: 663, type: !2151)
!6712 = !DILocation(line: 0, scope: !6707)
!6713 = !DILocation(line: 665, column: 10, scope: !6707)
!6714 = !DILocation(line: 665, column: 33, scope: !6707)
!6715 = !DILocation(line: 665, column: 3, scope: !6707)
!6716 = distinct !DISubprogram(name: "need_fake_edge_p", scope: !3, file: !3, line: 2857, type: !6717, scopeLine: 2858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6719)
!6717 = !DISubroutineType(types: !6718)
!6718 = !{!1019, !790}
!6719 = !{!6720}
!6720 = !DILocalVariable(name: "insn", arg: 1, scope: !6716, file: !3, line: 2857, type: !790)
!6721 = !DILocation(line: 0, scope: !6716)
!6722 = !DILocation(line: 2859, column: 8, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 2859, column: 7)
!6724 = !DILocation(line: 2859, column: 7, scope: !6716)
!6725 = !DILocation(line: 2862, column: 8, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 2862, column: 7)
!6727 = !DILocation(line: 2863, column: 8, scope: !6726)
!6728 = !DILocation(line: 2863, column: 12, scope: !6726)
!6729 = !DILocation(line: 2864, column: 8, scope: !6726)
!6730 = !DILocation(line: 2864, column: 12, scope: !6726)
!6731 = !DILocation(line: 2865, column: 8, scope: !6726)
!6732 = !DILocation(line: 2865, column: 13, scope: !6726)
!6733 = !DILocation(line: 2862, column: 7, scope: !6716)
!6734 = !DILocation(line: 2868, column: 12, scope: !6716)
!6735 = !DILocation(line: 2868, column: 38, scope: !6716)
!6736 = !DILocation(line: 2869, column: 5, scope: !6716)
!6737 = !DILocation(line: 2869, column: 8, scope: !6716)
!6738 = !DILocation(line: 2870, column: 4, scope: !6716)
!6739 = !DILocation(line: 2870, column: 34, scope: !6716)
!6740 = !DILocation(line: 2871, column: 8, scope: !6716)
!6741 = !DILocation(line: 2871, column: 11, scope: !6716)
!6742 = !DILocation(line: 2871, column: 32, scope: !6716)
!6743 = !DILocation(line: 2872, column: 8, scope: !6716)
!6744 = !DILocation(line: 2873, column: 7, scope: !6716)
!6745 = !DILocation(line: 2872, column: 11, scope: !6716)
!6746 = !DILocation(line: 2873, column: 4, scope: !6716)
!6747 = !DILocation(line: 2873, column: 33, scope: !6716)
!6748 = !DILocation(line: 2868, column: 3, scope: !6716)
!6749 = !DILocation(line: 2874, column: 1, scope: !6716)
!6750 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !155, file: !155, line: 281, type: !6751, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6753)
!6751 = !DISubroutineType(types: !6752)
!6752 = !{!1323, !6412, !7}
!6753 = !{!6754, !6755}
!6754 = !DILocalVariable(name: "vec_", arg: 1, scope: !6750, file: !155, line: 281, type: !6412)
!6755 = !DILocalVariable(name: "ix_", arg: 2, scope: !6750, file: !155, line: 281, type: !7)
!6756 = !DILocation(line: 0, scope: !6750)
!6757 = !DILocation(line: 281, column: 1, scope: !6750)
